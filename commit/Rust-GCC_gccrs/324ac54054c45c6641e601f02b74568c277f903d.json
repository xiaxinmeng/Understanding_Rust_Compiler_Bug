{"sha": "324ac54054c45c6641e601f02b74568c277f903d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI0YWM1NDA1NGM0NWM2NjQxZTYwMWYwMmI3NDU2OGMyNzdmOTAzZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:51:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T09:51:35Z"}, "message": "[multiple changes]\n\n2013-01-02  Robert Dewar  <dewar@adacore.com>\n\n\t* errout.ads: Minor comment fixes.\n\t* opt.ads: Minor comment additions.\n\t* exp_aggr.adb: Add tags to warning messages\n\t* exp_ch11.adb, exp_ch3.adb, exp_ch4.adb, exp_util.adb, sem_aggr.adb,\n\tsem_attr.adb, sem_case.adb, sem_cat.adb, sem_ch3.adb, sem_ch4.adb,\n\tsem_ch5.adb, sem_disp.adb, sem_dist.adb, sem_elab.adb, sem_eval.adb,\n\tsem_intr.adb, sem_mech.adb, sem_prag.adb, sem_res.adb, sem_util.adb,\n\tsem_warn.adb: Add tags to warning messages\n\n2013-01-02  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c [VMS] Remove subtest on reason mask for ACCVIO that is a C_E.\n\n2013-01-02  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Recover source name for renamed packagea.\n\nFrom-SVN: r194786", "tree": {"sha": "6c0f061975c47c8cd7246bcfe9ca7b69a6bec8f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c0f061975c47c8cd7246bcfe9ca7b69a6bec8f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/324ac54054c45c6641e601f02b74568c277f903d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324ac54054c45c6641e601f02b74568c277f903d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/324ac54054c45c6641e601f02b74568c277f903d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324ac54054c45c6641e601f02b74568c277f903d/comments", "author": null, "committer": null, "parents": [{"sha": "dbfeb4faf0c407d23fc6c47ad126ef26bd417aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbfeb4faf0c407d23fc6c47ad126ef26bd417aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbfeb4faf0c407d23fc6c47ad126ef26bd417aa7"}], "stats": {"total": 774, "additions": 423, "deletions": 351}, "files": [{"sha": "6a8542851cd0a3294b59e0177e51827614b749c0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -1,3 +1,22 @@\n+2013-01-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* errout.ads: Minor comment fixes.\n+\t* opt.ads: Minor comment additions.\n+\t* exp_aggr.adb: Add tags to warning messages\n+\t* exp_ch11.adb, exp_ch3.adb, exp_ch4.adb, exp_util.adb, sem_aggr.adb,\n+\tsem_attr.adb, sem_case.adb, sem_cat.adb, sem_ch3.adb, sem_ch4.adb,\n+\tsem_ch5.adb, sem_disp.adb, sem_dist.adb, sem_elab.adb, sem_eval.adb,\n+\tsem_intr.adb, sem_mech.adb, sem_prag.adb, sem_res.adb, sem_util.adb,\n+\tsem_warn.adb: Add tags to warning messages\n+\n+2013-01-02  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c [VMS] Remove subtest on reason mask for ACCVIO that is a C_E.\n+\n+2013-01-02  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Recover source name for renamed packagea.\n+\n 2013-01-02  Robert Dewar  <dewar@adacore.com>\n \n \t* errout.adb (Set_Msg_Insertion_Warning): Correct typo causing"}, {"sha": "f8d1fdadb2664a93cb8c3265c15106d057adfc40", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -60,7 +60,7 @@ package Errout is\n    --  Exception raised if Raise_Exception_On_Error is true\n \n    Warning_Doc_Switch : Boolean renames Err_Vars.Warning_Doc_Switch;\n-   --  If this is set True, then the ??/?x?/?.x? sequences in error messages\n+   --  If this is set True, then the ??/?x?/?X? sequences in error messages\n    --  are active (see errout.ads for details). If this switch is False, then\n    --  these sequences are ignored (i.e. simply equivalent to a single ?). The\n    --  -gnatw.d switch sets this flag True, -gnatw.D sets this flag False."}, {"sha": "10a4a560984833f420be1c10e277859c41e30c1c", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -431,13 +431,14 @@ package body Exp_Aggr is\n                   if Present (Component_Associations (N)) then\n                      Indx :=\n                        First (Choices (First (Component_Associations (N))));\n+\n                      if Is_Entity_Name (Indx)\n                        and then not Is_Type (Entity (Indx))\n                      then\n                         Error_Msg_N\n-                          (\"single component aggregate in non-static context?\",\n-                            Indx);\n-                        Error_Msg_N (\"\\maybe subtype name was meant?\", Indx);\n+                          (\"single component aggregate in \"\n+                           &  \"non-static context??\", Indx);\n+                        Error_Msg_N (\"\\maybe subtype name was meant??\", Indx);\n                      end if;\n                   end if;\n \n@@ -3057,7 +3058,7 @@ package body Exp_Aggr is\n \n             elsif Expr_Value (Val1) /= Expr_Value (Val2) then\n                Apply_Compile_Time_Constraint_Error (Aggr,\n-                 Msg    => \"incorrect value for discriminant&?\",\n+                 Msg    => \"incorrect value for discriminant&??\",\n                  Reason => CE_Discriminant_Check_Failed,\n                  Ent    => D);\n                return False;\n@@ -3767,15 +3768,15 @@ package body Exp_Aggr is\n \n                   else\n                      Error_Msg_N\n-                       (\"non-static object  requires elaboration code?\", N);\n+                       (\"non-static object  requires elaboration code??\", N);\n                      exit;\n                   end if;\n \n                   Next (Expr);\n                end loop;\n \n                if Present (Component_Associations (N)) then\n-                  Error_Msg_N (\"object requires elaboration code?\", N);\n+                  Error_Msg_N (\"object requires elaboration code??\", N);\n                end if;\n             end if;\n          end;"}, {"sha": "07b631de6eb61a18cc62a66fc765ae995a6bfe51", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -1005,8 +1005,8 @@ package body Exp_Ch11 is\n             then\n                Warn_No_Exception_Propagation_Active (Handler);\n                Error_Msg_N\n-                 (\"\\?this handler can never be entered, and has been removed\",\n-                  Handler);\n+                 (\"\\?X?this handler can never be entered, \"\n+                  & \"and has been removed\", Handler);\n             end if;\n \n             if No_Exception_Propagation_Active then\n@@ -1808,10 +1808,10 @@ package body Exp_Ch11 is\n \n             if Configurable_Run_Time_Mode then\n                Error_Msg_NE\n-                 (\"\\?& may call Last_Chance_Handler\", N, E);\n+                 (\"\\?X?& may call Last_Chance_Handler\", N, E);\n             else\n                Error_Msg_NE\n-                 (\"\\?& may result in unhandled exception\", N, E);\n+                 (\"\\?X?& may result in unhandled exception\", N, E);\n             end if;\n          end if;\n       end;\n@@ -2147,10 +2147,10 @@ package body Exp_Ch11 is\n \n          if Configurable_Run_Time_Mode then\n             Error_Msg_N\n-              (\"\\?Last_Chance_Handler will be called on exception\", N);\n+              (\"\\?X?Last_Chance_Handler will be called on exception\", N);\n          else\n             Error_Msg_N\n-              (\"\\?execution may raise unhandled exception\", N);\n+              (\"\\?X?execution may raise unhandled exception\", N);\n          end if;\n       end if;\n    end Warn_If_No_Propagation;\n@@ -2162,7 +2162,7 @@ package body Exp_Ch11 is\n    procedure Warn_No_Exception_Propagation_Active (N : Node_Id) is\n    begin\n       Error_Msg_N\n-        (\"?pragma Restrictions (No_Exception_Propagation) in effect\", N);\n+        (\"?X?pragma Restrictions (No_Exception_Propagation) in effect\", N);\n    end Warn_No_Exception_Propagation_Active;\n \n end Exp_Ch11;"}, {"sha": "096d14e75033cf3bc665b547a7ae9e7c1ff74db0", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -7132,7 +7132,7 @@ package body Exp_Ch3 is\n \n                      if Is_Ancestor (RSPWS, Etype (Pool)) then\n                         Error_Msg_N\n-                          (\"?subpool access type has deeper accessibility \" &\n+                          (\"??subpool access type has deeper accessibility \" &\n                            \"level than pool\", Def_Id);\n \n                         Append_Freeze_Action (Def_Id,\n@@ -7744,14 +7744,13 @@ package body Exp_Ch3 is\n \n                if Warning_Needed then\n                   Error_Msg_N\n-                    (\"Objects of the type cannot be initialized \" &\n-                       \"statically by default?\",\n-                       Parent (E));\n+                    (\"Objects of the type cannot be initialized \"\n+                     & \"statically by default??\", Parent (E));\n                end if;\n             end if;\n \n          else\n-            Error_Msg_N (\"Object cannot be initialized statically?\", E);\n+            Error_Msg_N (\"Object cannot be initialized statically??\", E);\n          end if;\n       end if;\n    end Initialization_Warning;"}, {"sha": "2e318e3dc9934dbd67297fa3d9b15f569465d95e", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -3686,7 +3686,7 @@ package body Exp_Ch4 is\n          Kill_Dead_Code (Declaration_Node (Entity (High_Bound)));\n          Apply_Compile_Time_Constraint_Error\n            (N      => Cnode,\n-            Msg    => \"concatenation result upper bound out of range?\",\n+            Msg    => \"concatenation result upper bound out of range??\",\n             Reason => CE_Range_Check_Failed);\n    end Expand_Concatenate;\n \n@@ -5501,9 +5501,10 @@ package body Exp_Ch4 is\n          --  actually eliminated the danger of optimization above.\n \n          if Overflow_Check_Mode not in Minimized_Or_Eliminated then\n-            Error_Msg_N (\"?explicit membership test may be optimized away\", N);\n+            Error_Msg_N\n+              (\"??explicit membership test may be optimized away\", N);\n             Error_Msg_N -- CODEFIX\n-              (\"\\?use ''Valid attribute instead\", N);\n+              (\"\\??use ''Valid attribute instead\", N);\n          end if;\n \n          return;\n@@ -5684,8 +5685,8 @@ package body Exp_Ch4 is\n \n             if Lcheck = LT or else Ucheck = GT then\n                if Warn1 then\n-                  Error_Msg_N (\"?range test optimized away\", N);\n-                  Error_Msg_N (\"\\?value is known to be out of range\", N);\n+                  Error_Msg_N (\"??range test optimized away\", N);\n+                  Error_Msg_N (\"\\??value is known to be out of range\", N);\n                end if;\n \n                Rewrite (N, New_Reference_To (Standard_False, Loc));\n@@ -5698,8 +5699,8 @@ package body Exp_Ch4 is\n \n             elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n                if Warn1 then\n-                  Error_Msg_N (\"?range test optimized away\", N);\n-                  Error_Msg_N (\"\\?value is known to be in range\", N);\n+                  Error_Msg_N (\"??range test optimized away\", N);\n+                  Error_Msg_N (\"\\??value is known to be in range\", N);\n                end if;\n \n                Rewrite (N, New_Reference_To (Standard_True, Loc));\n@@ -5713,8 +5714,8 @@ package body Exp_Ch4 is\n \n             elsif Lcheck in Compare_GE then\n                if Warn2 and then not In_Instance then\n-                  Error_Msg_N (\"?lower bound test optimized away\", Lo);\n-                  Error_Msg_N (\"\\?value is known to be in range\", Lo);\n+                  Error_Msg_N (\"??lower bound test optimized away\", Lo);\n+                  Error_Msg_N (\"\\??value is known to be in range\", Lo);\n                end if;\n \n                Rewrite (N,\n@@ -5730,8 +5731,8 @@ package body Exp_Ch4 is\n \n             elsif Ucheck in Compare_LE then\n                if Warn2 and then not In_Instance then\n-                  Error_Msg_N (\"?upper bound test optimized away\", Hi);\n-                  Error_Msg_N (\"\\?value is known to be in range\", Hi);\n+                  Error_Msg_N (\"??upper bound test optimized away\", Hi);\n+                  Error_Msg_N (\"\\??value is known to be in range\", Hi);\n                end if;\n \n                Rewrite (N,\n@@ -5755,25 +5756,25 @@ package body Exp_Ch4 is\n \n                if Lcheck = LT or else Ucheck = GT then\n                   Error_Msg_N\n-                    (\"?value can only be in range if it is invalid\", N);\n+                    (\"??value can only be in range if it is invalid\", N);\n \n                --  Result is in range for valid value\n \n                elsif Lcheck in Compare_GE and then Ucheck in Compare_LE then\n                   Error_Msg_N\n-                    (\"?value can only be out of range if it is invalid\", N);\n+                    (\"??value can only be out of range if it is invalid\", N);\n \n                --  Lower bound check succeeds if value is valid\n \n                elsif Warn2 and then Lcheck in Compare_GE then\n                   Error_Msg_N\n-                    (\"?lower bound check only fails if it is invalid\", Lo);\n+                    (\"??lower bound check only fails if it is invalid\", Lo);\n \n                --  Upper bound  check succeeds if value is valid\n \n                elsif Warn2 and then Ucheck in Compare_LE then\n                   Error_Msg_N\n-                    (\"?upper bound check only fails for invalid values\", Hi);\n+                    (\"??upper bound check only fails for invalid values\", Hi);\n                end if;\n             end if;\n          end;\n@@ -9665,9 +9666,10 @@ package body Exp_Ch4 is\n              Reason => PE_Accessibility_Check_Failed));\n          Set_Etype (N, Target_Type);\n \n-         Error_Msg_N (\"?accessibility check failure\", N);\n+         Error_Msg_N\n+           (\"??accessibility check failure\", N);\n          Error_Msg_NE\n-           (\"\\?& will be raised at run time\", N, Standard_Program_Error);\n+           (\"\\??& will be raised at run time\", N, Standard_Program_Error);\n       end Raise_Accessibility_Error;\n \n       ----------------------\n@@ -10632,7 +10634,7 @@ package body Exp_Ch4 is\n       end if;\n \n       --  Otherwise force evaluation unless Assignment_OK flag is set (this\n-      --  flag indicates ??? -- more comments needed here)\n+      --  flag indicates ??? More comments needed here)\n \n       if Assignment_OK (N) then\n          null;\n@@ -12061,7 +12063,7 @@ package body Exp_Ch4 is\n                if Constant_Condition_Warnings\n                  and then Comes_From_Source (Original_Node (N))\n                then\n-                  Error_Msg_N (\"could replace by \"\"'=\"\"?\", N);\n+                  Error_Msg_N (\"could replace by \"\"'=\"\"?c?\", N);\n                end if;\n \n                Op := N_Op_Eq;\n@@ -12254,7 +12256,8 @@ package body Exp_Ch4 is\n                  and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n                then\n                   Error_Msg_N\n-                    (\"can never be greater than, could replace by \"\"'=\"\"?\", N);\n+                    (\"can never be greater than, could replace by \"\"'=\"\"?c?\",\n+                     N);\n                   Warning_Generated := True;\n                end if;\n \n@@ -12279,7 +12282,7 @@ package body Exp_Ch4 is\n                  and then not Has_Warnings_Off (Etype (Left_Opnd (N)))\n                then\n                   Error_Msg_N\n-                    (\"can never be less than, could replace by \"\"'=\"\"?\", N);\n+                    (\"can never be less than, could replace by \"\"'=\"\"?c?\", N);\n                   Warning_Generated := True;\n                end if;\n \n@@ -12312,11 +12315,11 @@ package body Exp_Ch4 is\n             then\n                if True_Result then\n                   Error_Msg_N\n-                    (\"condition can only be False if invalid values present?\",\n+                    (\"condition can only be False if invalid values present??\",\n                      N);\n                elsif False_Result then\n                   Error_Msg_N\n-                    (\"condition can only be True if invalid values present?\",\n+                    (\"condition can only be True if invalid values present??\",\n                      N);\n                end if;\n             end if;"}, {"sha": "a7478a1785c762d62b8485adc0c752c0b6ce0361", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -224,9 +224,11 @@ package body Exp_Util is\n          end case;\n \n          if Present (Msg_Node) then\n-            Error_Msg_N (\"?info: atomic synchronization set for &\", Msg_Node);\n+            Error_Msg_N\n+              (\"?n?info: atomic synchronization set for &\", Msg_Node);\n          else\n-            Error_Msg_N (\"?info: atomic synchronization set\", N);\n+            Error_Msg_N\n+              (\"?n?info: atomic synchronization set\", N);\n          end if;\n       end if;\n    end Activate_Atomic_Synchronization;\n@@ -5125,7 +5127,8 @@ package body Exp_Util is\n \n             if W then\n                Error_Msg_F\n-                 (\"?this code can never be executed and has been deleted!\", N);\n+                 (\"??this code can never be executed and has been deleted!\",\n+                  N);\n             end if;\n          end if;\n "}, {"sha": "37c403b803e4201893e3e2635a9c9695fd774673", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -985,12 +985,10 @@ static const struct cond_except dec_ada_cond_except_table [] = {\n \n /* Subtest for ACCVIO Constraint_Error, kept for compatibility,\n    in hindsight should have just made ACCVIO == Storage_Error.  */\n-#define ACCVIO_REASON_MASK 2\n #define ACCVIO_VIRTUAL_ADDR 3\n static const struct cond_subtests accvio_c_e =\n-  {2,  /* number of subtests below */\n+  {1,  /* number of subtests below */\n      {\n-       {ACCVIO_REASON_MASK, 0},\n        {ACCVIO_VIRTUAL_ADDR, 0}\n       }\n    };"}, {"sha": "55e186b4769937df2387415bcc0ba501d5cc466c", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -211,10 +211,9 @@ package Opt is\n    --  Enable assertions made using pragma Assert\n \n    Assume_No_Invalid_Values : Boolean := False;\n-   --  GNAT\n-   --  Normally, in accordance with (RM 13.9.1 (9-11)) the front end assumes\n-   --  that values could have invalid representations, unless it can clearly\n-   --  prove that the values are valid. If this switch is set (by -gnatB or by\n+   --  GNAT Normally, in accordance with (RM 13.9.1 (9-11)) the front end\n+   --  assumes that values could have invalid representations, unless it can\n+   --  clearly prove that the values are valid. If this switch is set (by\n    --  pragma Assume_No_Invalid_Values (Off)), then the compiler assumes values\n    --  are valid and in range of their representations. This feature is now\n    --  fully enabled in the compiler.\n@@ -374,7 +373,8 @@ package Opt is\n \n    Constant_Condition_Warnings : Boolean := False;\n    --  GNAT\n-   --  Set to True to activate warnings on constant conditions\n+   --  Set to True to activate warnings on constant conditions. Modified by\n+   --  use of -gnatwc/C.\n \n    Create_Mapping_File : Boolean := False;\n    --  GNATMAKE, GPRMAKE\n@@ -1467,7 +1467,7 @@ package Opt is\n    --  GNAT\n    --  Set to True to generate all warnings on Ada 2005 compatibility issues,\n    --  including warnings on Ada 2005 obsolescent features used in Ada 2005\n-   --  mode. Set False by -gnatwY.\n+   --  mode. Set by default, set False by -gnatwY.\n \n    Warn_On_Ada_2012_Compatibility : Boolean := True;\n    --  GNAT\n@@ -1496,12 +1496,13 @@ package Opt is\n    Warn_On_Atomic_Synchronization : Boolean := False;\n    --  GNAT\n    --  Set to True to generate information messages for atomic synchronization.\n-   --  Set True by use of -gnatw.n.\n+   --  Modified by use of -gnatw.n/.N.\n \n    Warn_On_Bad_Fixed_Value : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings for static fixed-point expression\n    --  values that are not an exact multiple of the small value of the type.\n+   --  Odd by default, modified by use of -gnatwb/B.\n \n    Warn_On_Biased_Representation : Boolean := True;\n    --  GNAT\n@@ -1548,6 +1549,7 @@ package Opt is\n    --  Set to True to generate warnings if no value is ever assigned to a\n    --  variable that is at least partially uninitialized. Set to false to\n    --  suppress such warnings. The default is that such warnings are enabled.\n+   --  Modified by use of -gnatwv/V.\n \n    Warn_On_Non_Local_Exception : Boolean := False;\n    --  GNAT\n@@ -1557,6 +1559,7 @@ package Opt is\n    --  default is not to generate the warnings except that if the source has\n    --  at least one exception handler, and this restriction is set, and the\n    --  warning was not explicitly turned off, then it is turned on by default.\n+   --  Modified by use of -gnatw.x/.X.\n \n    No_Warn_On_Non_Local_Exception : Boolean := False;\n    --  GNAT\n@@ -1584,7 +1587,8 @@ package Opt is\n    Warn_On_Questionable_Missing_Parens : Boolean := True;\n    --  GNAT\n    --  Set to True to generate warnings for cases where parentheses are missing\n-   --  and the usage is questionable, because the intent is unclear.\n+   --  and the usage is questionable, because the intent is unclear. On by\n+   --  default, modified by use of -gnatwq/Q.\n \n    Warn_On_Parameter_Order : Boolean := False;\n    --  GNAT\n@@ -1613,7 +1617,7 @@ package Opt is\n    Warn_On_Suspicious_Modulus_Value : Boolean := True;\n    --  GNAT\n    --  Set to True to generate warnings for suspicious modulus values. The\n-   --  default is that this warning is enabled.\n+   --  default is that this warning is enabled. Modified by -gnatw.m/.M.\n \n    Warn_On_Unchecked_Conversion : Boolean := True;\n    --  GNAT\n@@ -1626,12 +1630,12 @@ package Opt is\n    --  Set to True to generate warnings for inappropriate uses (comparisons\n    --  and explicit ranges) on unordered enumeration types (which includes\n    --  all enumeration types for which pragma Ordered is not given). The\n-   --  default is that this warning is disabled.\n+   --  default is that this warning is disabled. Modified by -gnat.u/.U.\n \n    Warn_On_Unrecognized_Pragma : Boolean := True;\n    --  GNAT\n    --  Set to True to generate warnings for unrecognized pragmas. The default\n-   --  is that this warning is enabled.\n+   --  is that this warning is enabled. Modified by use of -gnatwg/G.\n \n    Warn_On_Unrepped_Components : Boolean := False;\n    --  GNAT"}, {"sha": "007c3c76e556e1ee06eba3a3bf4301d6ee5f3d55", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -468,13 +468,13 @@ package body Sem_Aggr is\n       then\n          if Is_Out_Of_Range (Exp, Base_Type (Check_Typ)) then\n             Apply_Compile_Time_Constraint_Error\n-              (Exp, \"value not in range of}?\", CE_Range_Check_Failed,\n+              (Exp, \"value not in range of}??\", CE_Range_Check_Failed,\n                Ent => Base_Type (Check_Typ),\n                Typ => Base_Type (Check_Typ));\n \n          elsif Is_Out_Of_Range (Exp, Check_Typ) then\n             Apply_Compile_Time_Constraint_Error\n-              (Exp, \"value not in range of}?\", CE_Range_Check_Failed,\n+              (Exp, \"value not in range of}??\", CE_Range_Check_Failed,\n                Ent => Check_Typ,\n                Typ => Check_Typ);\n \n@@ -583,9 +583,9 @@ package body Sem_Aggr is\n \n                elsif Expr_Value (This_Low) /= Expr_Value (Aggr_Low (Dim)) then\n                   Set_Raises_Constraint_Error (N);\n-                  Error_Msg_N (\"sub-aggregate low bound mismatch?\", N);\n+                  Error_Msg_N (\"sub-aggregate low bound mismatch??\", N);\n                   Error_Msg_N\n-                     (\"\\Constraint_Error will be raised at run time?\", N);\n+                     (\"\\Constraint_Error will be raised at run time??\", N);\n                end if;\n             end if;\n \n@@ -597,9 +597,9 @@ package body Sem_Aggr is\n                  Expr_Value (This_High) /= Expr_Value (Aggr_High (Dim))\n                then\n                   Set_Raises_Constraint_Error (N);\n-                  Error_Msg_N (\"sub-aggregate high bound mismatch?\", N);\n+                  Error_Msg_N (\"sub-aggregate high bound mismatch??\", N);\n                   Error_Msg_N\n-                     (\"\\Constraint_Error will be raised at run time?\", N);\n+                     (\"\\Constraint_Error will be raised at run time??\", N);\n                end if;\n             end if;\n          end if;\n@@ -1440,8 +1440,8 @@ package body Sem_Aggr is\n \n          if OK_BH and then OK_AH and then Val_BH < Val_AH then\n             Set_Raises_Constraint_Error (N);\n-            Error_Msg_N (\"upper bound out of range?\", AH);\n-            Error_Msg_N (\"\\Constraint_Error will be raised at run time?\", AH);\n+            Error_Msg_N (\"upper bound out of range??\", AH);\n+            Error_Msg_N (\"\\Constraint_Error will be raised at run time??\", AH);\n \n             --  You need to set AH to BH or else in the case of enumerations\n             --  indexes we will not be able to resolve the aggregate bounds.\n@@ -1483,14 +1483,14 @@ package body Sem_Aggr is\n \n          if OK_L and then Val_L > Val_AL then\n             Set_Raises_Constraint_Error (N);\n-            Error_Msg_N (\"lower bound of aggregate out of range?\", N);\n-            Error_Msg_N (\"\\Constraint_Error will be raised at run time?\", N);\n+            Error_Msg_N (\"lower bound of aggregate out of range??\", N);\n+            Error_Msg_N (\"\\Constraint_Error will be raised at run time??\", N);\n          end if;\n \n          if OK_H and then Val_H < Val_AH then\n             Set_Raises_Constraint_Error (N);\n-            Error_Msg_N (\"upper bound of aggregate out of range?\", N);\n-            Error_Msg_N (\"\\Constraint_Error will be raised at run time?\", N);\n+            Error_Msg_N (\"upper bound of aggregate out of range??\", N);\n+            Error_Msg_N (\"\\Constraint_Error will be raised at run time??\", N);\n          end if;\n       end Check_Bounds;\n \n@@ -1529,8 +1529,8 @@ package body Sem_Aggr is\n \n          if Range_Len < Len then\n             Set_Raises_Constraint_Error (N);\n-            Error_Msg_N (\"too many elements?\", N);\n-            Error_Msg_N (\"\\Constraint_Error will be raised at run time?\", N);\n+            Error_Msg_N (\"too many elements??\", N);\n+            Error_Msg_N (\"\\Constraint_Error will be raised at run time??\", N);\n          end if;\n       end Check_Length;\n \n@@ -1980,7 +1980,7 @@ package body Sem_Aggr is\n                   elsif Nkind (Choice) = N_Subtype_Indication then\n                      Resolve_Discrete_Subtype_Indication (Choice, Index_Base);\n \n-                     --  Does the subtype indication evaluation raise CE ?\n+                     --  Does the subtype indication evaluation raise CE?\n \n                      Get_Index_Bounds (Subtype_Mark (Choice), S_Low, S_High);\n                      Get_Index_Bounds (Choice, Low, High);\n@@ -2310,7 +2310,8 @@ package body Sem_Aggr is\n                            (Enumeration_Pos (AHi) - Enumeration_Pos (ALo))\n                         then\n                            Error_Msg_N\n-                             (\"missing index value(s) in array aggregate?\", N);\n+                             (\"missing index value(s) in array aggregate??\",\n+                              N);\n \n                            --  Output missing value(s) at start\n \n@@ -2319,11 +2320,11 @@ package body Sem_Aggr is\n \n                               if Chars (ALo) = Chars (Ent) then\n                                  Error_Msg_Name_1 := Chars (ALo);\n-                                 Error_Msg_N (\"\\  %?\", N);\n+                                 Error_Msg_N (\"\\  %??\", N);\n                               else\n                                  Error_Msg_Name_1 := Chars (ALo);\n                                  Error_Msg_Name_2 := Chars (Ent);\n-                                 Error_Msg_N (\"\\  % .. %?\", N);\n+                                 Error_Msg_N (\"\\  % .. %??\", N);\n                               end if;\n                            end if;\n \n@@ -2334,11 +2335,11 @@ package body Sem_Aggr is\n \n                               if Chars (AHi) = Chars (Ent) then\n                                  Error_Msg_Name_1 := Chars (Ent);\n-                                 Error_Msg_N (\"\\  %?\", N);\n+                                 Error_Msg_N (\"\\  %??\", N);\n                               else\n                                  Error_Msg_Name_1 := Chars (Ent);\n                                  Error_Msg_Name_2 := Chars (AHi);\n-                                 Error_Msg_N (\"\\  % .. %?\", N);\n+                                 Error_Msg_N (\"\\  % .. %??\", N);\n                               end if;\n                            end if;\n \n@@ -2356,7 +2357,7 @@ package body Sem_Aggr is\n                             not Is_Constrained (First_Subtype (Etype (N)))\n                         then\n                            Error_Msg_N\n-                             (\"bounds of aggregate do not match target?\", N);\n+                             (\"bounds of aggregate do not match target??\", N);\n                         end if;\n                      end;\n                   end if;\n@@ -2810,7 +2811,7 @@ package body Sem_Aggr is\n               and then Enclosing_CPP_Parent (Typ) /= A_Type\n             then\n                Error_Msg_NE\n-                 (\"?must use 'C'P'P constructor for type &\", A,\n+                 (\"??must use 'C'P'P constructor for type &\", A,\n                   Enclosing_CPP_Parent (Typ));\n \n                --  The following call is not needed if the previous warning\n@@ -4576,9 +4577,9 @@ package body Sem_Aggr is\n          Insert_Action\n            (Compile_Time_Constraint_Error\n               (Expr,\n-               \"(Ada 2005) null not allowed in null-excluding component?\"),\n-            Make_Raise_Constraint_Error (Sloc (Expr),\n-              Reason => CE_Access_Check_Failed));\n+               \"(Ada 2005) null not allowed in null-excluding component??\"),\n+            Make_Raise_Constraint_Error\n+              (Sloc (Expr), Reason => CE_Access_Check_Failed));\n \n          --  Set proper type for bogus component (why is this needed???)\n "}, {"sha": "002f7272ba0ad0ea0d5c6562a5483639b95a96c3", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 30, "deletions": 27, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -739,7 +739,7 @@ package body Sem_Attr is\n \n                   if Is_CPP_Class (Root_Type (Typ)) then\n                      Error_Msg_N\n-                       (\"?current instance unsupported for derivations of \"\n+                       (\"??current instance unsupported for derivations of \"\n                         & \"'C'P'P types\", N);\n                   end if;\n \n@@ -2019,7 +2019,7 @@ package body Sem_Attr is\n          if not Attribute_83 (Attr_Id) then\n             if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n                Error_Msg_Name_1 := Aname;\n-               Error_Msg_N (\"(Ada 83) attribute% is not standard?\", N);\n+               Error_Msg_N (\"(Ada 83) attribute% is not standard??\", N);\n             end if;\n \n             if Attribute_Impl_Def (Attr_Id) then\n@@ -2640,7 +2640,7 @@ package body Sem_Attr is\n            and then Warn_On_Redundant_Constructs\n          then\n             Error_Msg_NE -- CODEFIX\n-              (\"?redundant attribute, & is its own base type\", N, Typ);\n+              (\"?r?redundant attribute, & is its own base type\", N, Typ);\n          end if;\n \n          if Nkind (Parent (N)) /= N_Attribute_Reference then\n@@ -2896,7 +2896,7 @@ package body Sem_Attr is\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n                  (\"constrained for private type is an \" &\n-                  \"obsolescent feature (RM J.4)?\", N);\n+                  \"obsolescent feature (RM J.4)?j?\", N);\n             end if;\n \n             --  If we are within an instance, the attribute must be legal\n@@ -4346,7 +4346,7 @@ package body Sem_Attr is\n            and then Is_Constant_Object (Entity (P))\n          then\n             Error_Msg_N\n-              (\"?attribute Old applied to constant has no effect\", P);\n+              (\"??attribute Old applied to constant has no effect\", P);\n          end if;\n \n          --  The attribute appears within a pre/postcondition, but refers to\n@@ -4603,7 +4603,7 @@ package body Sem_Attr is\n            and then Warn_On_Redundant_Constructs\n          then\n             Error_Msg_N\n-              (\"postconditions on inlined functions not enforced?\", N);\n+              (\"postconditions on inlined functions not enforced?r?\", N);\n          end if;\n \n          --  If we are in the scope of a function and in Spec_Expression mode,\n@@ -5032,10 +5032,10 @@ package body Sem_Attr is\n                                            Name_Simple_Storage_Pool_Type))\n                then\n                   Error_Msg_Name_1 := Aname;\n-                  Error_Msg_N (\"cannot use % attribute for type with simple \" &\n-                               \"storage pool?\", N);\n+                  Error_Msg_N (\"cannot use % attribute for type with simple \"\n+                               & \"storage pool??\", N);\n                   Error_Msg_N\n-                     (\"\\Program_Error will be raised at run time?\", N);\n+                     (\"\\Program_Error will be raised at run time??\", N);\n \n                   Rewrite\n                     (N, Make_Raise_Program_Error\n@@ -5228,8 +5228,8 @@ package body Sem_Attr is\n          if not Is_Tagged_Type (P_Type) then\n             Error_Attr_P (\"prefix of % attribute must be tagged\");\n \n-         --  Next test does not apply to generated code\n-         --  why not, and what does the illegal reference mean???\n+         --  Next test does not apply to generated code why not, and what does\n+         --  the illegal reference mean???\n \n          elsif Is_Object_Reference (P)\n            and then not Is_Class_Wide_Type (P_Type)\n@@ -5240,9 +5240,9 @@ package body Sem_Attr is\n                \"of class - wide type\");\n          end if;\n \n-         --  The prefix cannot be an incomplete type. However, references\n-         --  to 'Tag can be generated when expanding interface conversions,\n-         --  and this is legal.\n+         --  The prefix cannot be an incomplete type. However, references to\n+         --  'Tag can be generated when expanding interface conversions, and\n+         --  this is legal.\n \n          if Comes_From_Source (N) then\n             Check_Not_Incomplete_Type;\n@@ -5728,8 +5728,8 @@ package body Sem_Attr is\n          begin\n             if Present (Pred_Func) and then Current_Scope = Pred_Func then\n                Error_Msg_N\n-                 (\"attribute Valid requires a predicate check?\", N);\n-               Error_Msg_N (\"\\and will result in infinite recursion?\", N);\n+                 (\"attribute Valid requires a predicate check??\", N);\n+               Error_Msg_N (\"\\and will result in infinite recursion??\", N);\n             end if;\n          end;\n \n@@ -5744,7 +5744,7 @@ package body Sem_Attr is\n          Check_Object_Reference (P);\n \n          if No_Scalar_Parts (P_Type) then\n-            Error_Attr_P (\"?attribute % always True, no scalars to check\");\n+            Error_Attr_P (\"??attribute % always True, no scalars to check\");\n          end if;\n \n          Set_Etype (N, Standard_Boolean);\n@@ -6095,7 +6095,7 @@ package body Sem_Attr is\n \n          elsif Is_Out_Of_Range (N, T) then\n             Apply_Compile_Time_Constraint_Error\n-              (N, \"value not in range of}?\", CE_Range_Check_Failed);\n+              (N, \"value not in range of}??\", CE_Range_Check_Failed);\n \n          elsif not Range_Checks_Suppressed (T) then\n             Enable_Range_Check (N);\n@@ -8894,9 +8894,10 @@ package body Sem_Attr is\n          --  know will fail, so generate an appropriate warning.\n \n          if In_Instance_Body then\n-            Error_Msg_F (\"?non-local pointer cannot point to local object\", P);\n             Error_Msg_F\n-              (\"\\?Program_Error will be raised at run time\", P);\n+              (\"??non-local pointer cannot point to local object\", P);\n+            Error_Msg_F\n+              (\"\\??Program_Error will be raised at run time\", P);\n             Rewrite (N,\n               Make_Raise_Program_Error (Loc,\n                 Reason => PE_Accessibility_Check_Failed));\n@@ -9368,9 +9369,9 @@ package body Sem_Attr is\n \n                   if In_Instance_Body then\n                      Error_Msg_F\n-                       (\"?non-local pointer cannot point to local object\", P);\n+                       (\"??non-local pointer cannot point to local object\", P);\n                      Error_Msg_F\n-                       (\"\\?Program_Error will be raised at run time\", P);\n+                       (\"\\??Program_Error will be raised at run time\", P);\n                      Rewrite (N,\n                        Make_Raise_Program_Error (Loc,\n                          Reason => PE_Accessibility_Check_Failed));\n@@ -9484,11 +9485,13 @@ package body Sem_Attr is\n                      declare\n                         D : constant Node_Id := Declaration_Node (Entity (P));\n                      begin\n-                        Error_Msg_N (\"aliased object has explicit bounds?\",\n-                          D);\n-                        Error_Msg_N (\"\\declare without bounds\"\n-                          & \" (and with explicit initialization)?\", D);\n-                        Error_Msg_N (\"\\for use with unconstrained access?\", D);\n+                        Error_Msg_N\n+                          (\"aliased object has explicit bounds??\", D);\n+                        Error_Msg_N\n+                          (\"\\declare without bounds (and with explicit \"\n+                           & \"initialization)??\", D);\n+                        Error_Msg_N\n+                          (\"\\for use with unconstrained access??\", D);\n                      end;\n                   end if;\n                end if;"}, {"sha": "432de5dc3674530fcd69278a4a97864eee0c3211", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -601,8 +601,8 @@ package body Sem_Case is\n         and then Comes_From_Source (Others_Choice)\n         and then Is_Empty_List (Choice_List)\n       then\n-         Error_Msg_N (\"?OTHERS choice is redundant\", Others_Choice);\n-         Error_Msg_N (\"\\previous choices cover all values\", Others_Choice);\n+         Error_Msg_N (\"?r?OTHERS choice is redundant\", Others_Choice);\n+         Error_Msg_N (\"\\?r?previous choices cover all values\", Others_Choice);\n       end if;\n    end Expand_Others_Choice;\n "}, {"sha": "e4615393dd2bfebcbd75bf619d5f873c5ab7cb5a", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -923,6 +923,7 @@ package body Sem_Cat is\n       then\n          --  If the type is private, it must have the Ada 2005 pragma\n          --  Has_Preelaborable_Initialization.\n+\n          --  The check is omitted within predefined units. This is probably\n          --  obsolete code to fix the Ada 95 weakness in this area ???\n \n@@ -1728,8 +1729,7 @@ package body Sem_Cat is\n       Direct_Designated_Type := Designated_Type (T);\n       Desig_Type := Etype (Direct_Designated_Type);\n \n-      --  Why is the check below not in\n-      --  Validate_Remote_Access_To_Class_Wide_Type???\n+      --  Why is this check not in Validate_Remote_Access_To_Class_Wide_Type???\n \n       if not Is_Valid_Remote_Object_Type (Desig_Type) then\n          Error_Msg_N\n@@ -2047,6 +2047,7 @@ package body Sem_Cat is\n       function Is_Primary (N : Node_Id) return Boolean;\n       --  Determine whether node is syntactically a primary in an expression\n       --  This function should probably be somewhere else ???\n+      --\n       --  Also it does not do what it says, e.g if N is a binary operator\n       --  whose parent is a binary operator, Is_Primary returns True ???\n \n@@ -2170,7 +2171,7 @@ package body Sem_Cat is\n \n                if GNAT_Mode then\n                   Error_Msg_N\n-                    (\"?non-static constant in preelaborated unit\", N);\n+                    (\"??non-static constant in preelaborated unit\", N);\n                else\n                   Flag_Non_Static_Expr\n                     (\"non-static constant in preelaborated unit\", N);"}, {"sha": "89dcb2f4438afed3e73d561609bb6feb9fe7d2dd", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -12996,6 +12996,22 @@ package body Sem_Ch12 is\n             end if;\n \n             if Is_Global (E) then\n+\n+               --  If the entity is a package renaming that is the prefix of\n+               --  an expanded name, it has been rewritten as the renamed\n+               --  package, which is necessary semantically but complicates\n+               --  ASIS tree traversal, so we recover the original entity to\n+               --  expose the renaming.\n+\n+               if Ekind (E) = E_Package\n+                 and then Nkind (Parent (N)) = N_Expanded_Name\n+                 and then Present (Original_Node (N2))\n+                 and then Present (Entity (Original_Node (N2)))\n+               then\n+                  N2 := Original_Node (N2);\n+                  Set_Associated_Node (N, N2);\n+               end if;\n+\n                Set_Global_Type (N, N2);\n \n             elsif Nkind (N) = N_Op_Concat"}, {"sha": "eb25443babf4d5bfd93df943d6b2c6670d5fe664", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -3643,9 +3643,9 @@ package body Sem_Ch3 is\n                                         (E, Attribute_Address))\n                   then\n                      Error_Msg_N\n-                       (\"?more than one task with same entry address\", N);\n+                       (\"??more than one task with same entry address\", N);\n                      Error_Msg_N\n-                       (\"\\?Program_Error will be raised at run time\", N);\n+                       (\"\\??Program_Error will be raised at run time\", N);\n                      Insert_Action (N,\n                        Make_Raise_Program_Error (Loc,\n                          Reason => PE_Duplicated_Entry_Address));\n@@ -10866,7 +10866,7 @@ package body Sem_Ch3 is\n             if Ada_Version < Ada_2005 then\n                Error_Msg_N\n                  (\"access subtype of general access type would not \" &\n-                  \"be allowed in Ada 2005?\", S);\n+                  \"be allowed in Ada 2005?y?\", S);\n             else\n                Error_Msg_N\n                  (\"access subtype of general access type not allowed\", S);\n@@ -10882,7 +10882,7 @@ package body Sem_Ch3 is\n             if Ada_Version < Ada_2005 then\n                Error_Msg_N\n                  (\"access subtype would not be allowed in generic body \" &\n-                  \"in Ada 2005?\", S);\n+                  \"in Ada 2005?y?\", S);\n             else\n                Error_Msg_N\n                  (\"access subtype not allowed in generic body\", S);\n@@ -11320,6 +11320,7 @@ package body Sem_Ch3 is\n          --  to one: one new discriminant can constrain several old ones. In\n          --  that case, scan sequentially the stored_constraint, the list of\n          --  discriminants of the parents, and the constraints.\n+\n          --  Previous code checked for the present of the Stored_Constraint\n          --  list for the derived type, but did not use it at all. Should it\n          --  be present when the component is a discriminated task type?\n@@ -11780,7 +11781,7 @@ package body Sem_Ch3 is\n          if Warn_On_Obsolescent_Feature then\n             Error_Msg_N\n               (\"subtype digits constraint is an \" &\n-               \"obsolescent feature (RM J.3(8))?\", C);\n+               \"obsolescent feature (RM J.3(8))?j?\", C);\n          end if;\n \n          D := Digits_Expression (C);\n@@ -11794,7 +11795,7 @@ package body Sem_Ch3 is\n \n          if Digits_Value (Def_Id) > Digits_Value (T) then\n             Error_Msg_Uint_1 := Digits_Value (T);\n-            Error_Msg_N (\"?digits value is too large, maximum is ^\", D);\n+            Error_Msg_N (\"??digits value is too large, maximum is ^\", D);\n             Rais :=\n               Make_Raise_Constraint_Error (Sloc (D),\n                 Reason => CE_Range_Check_Failed);\n@@ -12007,7 +12008,7 @@ package body Sem_Ch3 is\n          if Warn_On_Obsolescent_Feature then\n             Error_Msg_S\n               (\"subtype delta constraint is an \" &\n-               \"obsolescent feature (RM J.3(7))?\");\n+               \"obsolescent feature (RM J.3(7))?j?\");\n          end if;\n \n          D := Delta_Expression (C);\n@@ -12020,7 +12021,7 @@ package body Sem_Ch3 is\n          --  course there is an ACVC test that checks this!\n \n          if Delta_Value (Def_Id) < Delta_Value (T) then\n-            Error_Msg_N (\"?delta value is too small\", D);\n+            Error_Msg_N (\"??delta value is too small\", D);\n             Rais :=\n               Make_Raise_Constraint_Error (Sloc (D),\n                 Reason => CE_Range_Check_Failed);\n@@ -16797,10 +16798,6 @@ package body Sem_Ch3 is\n \n             Set_Must_Not_Freeze (I);\n             Set_Must_Not_Freeze (Prefix (I));\n-\n-            --  Is order critical??? if so, document why, if not\n-            --  use Analyze_And_Resolve\n-\n             Analyze_And_Resolve (I);\n             T := Etype (I);\n             R := I;\n@@ -16928,7 +16925,8 @@ package body Sem_Ch3 is\n         and then Nkind (Right_Opnd (Mod_Expr)) = N_Integer_Literal\n         and then Intval (Right_Opnd (Mod_Expr)) <= Uint_64\n       then\n-         Error_Msg_N (\"suspicious MOD value, was '*'* intended'??\", Mod_Expr);\n+         Error_Msg_N\n+           (\"suspicious MOD value, was '*'* intended'??M?\", Mod_Expr);\n       end if;\n \n       --  Proceed with analysis of mod expression\n@@ -17273,7 +17271,7 @@ package body Sem_Ch3 is\n             High_Val := Expr_Value_R (High);\n \n             if Low_Val > High_Val then\n-               Error_Msg_NE (\"?fixed point type& has null range\", Def, T);\n+               Error_Msg_NE (\"??fixed point type& has null range\", Def, T);\n             end if;\n          end;\n       end if;\n@@ -19141,7 +19139,7 @@ package body Sem_Ch3 is\n             then\n                Make_Class_Wide_Type (Typ);\n                Error_Msg_N\n-                 (\"incomplete view of tagged type should be declared tagged?\",\n+                 (\"incomplete view of tagged type should be declared tagged??\",\n                   Parent (Current_Entity (Typ)));\n             end if;\n             return;"}, {"sha": "414b2404c2b00e1da093c39a2d15ee83a55f55fc", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -636,7 +636,9 @@ package body Sem_Ch4 is\n                      Analyze (Not_Null_Check);\n \n                   else\n-                     Error_Msg_N (\"null value not allowed here?\", E);\n+                     --  Seems weird for the following to be a warning ???\n+\n+                     Error_Msg_N (\"null value not allowed here??\", E);\n                   end if;\n                end;\n             end if;\n@@ -2082,7 +2084,8 @@ package body Sem_Ch4 is\n             --  account a possible implicit dereference.\n \n             if Is_Access_Type (Array_Type) then\n-               Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+               Error_Msg_NW\n+                 (Warn_On_Dereference, \"?d?implicit dereference\", N);\n                Array_Type := Process_Implicit_Dereference_Prefix (Pent, P);\n             end if;\n \n@@ -2241,7 +2244,8 @@ package body Sem_Ch4 is\n \n             if Is_Access_Type (Typ) then\n                Typ := Designated_Type (Typ);\n-               Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+               Error_Msg_NW\n+                 (Warn_On_Dereference, \"?d?implicit dereference\", N);\n             end if;\n \n             if Is_Array_Type (Typ) then\n@@ -2670,7 +2674,7 @@ package body Sem_Ch4 is\n         and then Intval (Right_Opnd (Parent (N))) <= Uint_64\n       then\n          Error_Msg_N\n-           (\"suspicious MOD value, was '*'* intended'??\", Parent (N));\n+           (\"suspicious MOD value, was '*'* intended'??M?\", Parent (N));\n       end if;\n \n       --  Remaining processing is same as for other arithmetic operators\n@@ -3235,7 +3239,7 @@ package body Sem_Ch4 is\n       while Present (It.Typ) loop\n          if Is_Access_Type (It.Typ) then\n             T := Designated_Type (It.Typ);\n-            Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+            Error_Msg_NW (Warn_On_Dereference, \"?d?implicit dereference\", N);\n          else\n             T := It.Typ;\n          end if;\n@@ -3318,7 +3322,7 @@ package body Sem_Ch4 is\n                   then\n                      Insert_Explicit_Dereference (Nam);\n                      Error_Msg_NW\n-                       (Warn_On_Dereference, \"?implicit dereference\", N);\n+                       (Warn_On_Dereference, \"?d?implicit dereference\", N);\n                   end if;\n                end if;\n \n@@ -3427,13 +3431,13 @@ package body Sem_Ch4 is\n \n             if All_Present (N) then\n                Error_Msg_N\n-                 (\"?quantified expression with ALL \"\n+                 (\"??quantified expression with ALL \"\n                   & \"over a null range has value True\", N);\n                Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n \n             else\n                Error_Msg_N\n-                 (\"?quantified expression with SOME \"\n+                 (\"??quantified expression with SOME \"\n                   & \"over a null range has value False\", N);\n                Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n             end if;\n@@ -3810,7 +3814,7 @@ package body Sem_Ch4 is\n          --  Normal case of selected component applied to access type\n \n          else\n-            Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+            Error_Msg_NW (Warn_On_Dereference, \"?d?implicit dereference\", N);\n \n             if Is_Entity_Name (Name) then\n                Pent := Entity (Name);\n@@ -3922,7 +3926,7 @@ package body Sem_Ch4 is\n \n          if Is_Access_Type (Etype (Name)) then\n             Insert_Explicit_Dereference (Name);\n-            Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+            Error_Msg_NW (Warn_On_Dereference, \"?d?implicit dereference\", N);\n          end if;\n \n       elsif Is_Record_Type (Prefix_Type) then\n@@ -4220,7 +4224,7 @@ package body Sem_Ch4 is\n                if Is_Access_Type (Etype (Name)) then\n                   Insert_Explicit_Dereference (Name);\n                   Error_Msg_NW\n-                    (Warn_On_Dereference, \"?implicit dereference\", N);\n+                    (Warn_On_Dereference, \"?d?implicit dereference\", N);\n                end if;\n             end if;\n \n@@ -4403,7 +4407,7 @@ package body Sem_Ch4 is\n                            Ent => Prefix_Type, Rep => False);\n                      else\n                         Apply_Compile_Time_Constraint_Error\n-                          (N, \"component not present in }?\",\n+                          (N, \"component not present in }??\",\n                            CE_Discriminant_Check_Failed,\n                            Ent => Prefix_Type, Rep => False);\n                      end if;\n@@ -4537,7 +4541,8 @@ package body Sem_Ch4 is\n \n             if Is_Access_Type (Typ) then\n                Typ := Designated_Type (Typ);\n-               Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+               Error_Msg_NW\n+                 (Warn_On_Dereference, \"?d?implicit dereference\", N);\n             end if;\n \n             if Is_Array_Type (Typ)\n@@ -4574,7 +4579,7 @@ package body Sem_Ch4 is\n \n          if Is_Access_Type (Array_Type) then\n             Array_Type := Designated_Type (Array_Type);\n-            Error_Msg_NW (Warn_On_Dereference, \"?implicit dereference\", N);\n+            Error_Msg_NW (Warn_On_Dereference, \"?d?implicit dereference\", N);\n          end if;\n \n          if not Is_Array_Type (Array_Type) then"}, {"sha": "04c07bec6d9050ea952d8e5676da4e0203434a44", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -430,9 +430,9 @@ package body Sem_Ch5 is\n \n                   if Locking_Policy /= 'C' then\n                      Error_Msg_N (\"assignment to the attribute PRIORITY has \" &\n-                                  \"no effect?\", Lhs);\n+                                  \"no effect??\", Lhs);\n                      Error_Msg_N (\"\\since no Locking_Policy has been \" &\n-                                  \"specified\", Lhs);\n+                                  \"specified??\", Lhs);\n                   end if;\n \n                   return;\n@@ -636,8 +636,9 @@ package body Sem_Ch5 is\n \n          if Known_Null (Rhs) then\n             Apply_Compile_Time_Constraint_Error\n-              (N   => Rhs,\n-               Msg => \"(Ada 2005) null not allowed in null-excluding objects?\",\n+              (N      => Rhs,\n+               Msg    =>\n+                 \"(Ada 2005) null not allowed in null-excluding objects??\",\n                Reason => CE_Null_Not_Allowed);\n \n             --  We still mark this as a possible modification, that's necessary\n@@ -717,10 +718,10 @@ package body Sem_Ch5 is\n       then\n          if Nkind (Lhs) in N_Has_Entity then\n             Error_Msg_NE -- CODEFIX\n-              (\"?useless assignment of & to itself!\", N, Entity (Lhs));\n+              (\"?r?useless assignment of & to itself!\", N, Entity (Lhs));\n          else\n             Error_Msg_N -- CODEFIX\n-              (\"?useless assignment of object to itself!\", N);\n+              (\"?r?useless assignment of object to itself!\", N);\n          end if;\n       end if;\n \n@@ -2405,7 +2406,7 @@ package body Sem_Ch5 is\n                        (L, H, Assume_Valid => False) = GT\n                   then\n                      Error_Msg_N\n-                       (\"?loop range is null, loop will not execute\", DS);\n+                       (\"??loop range is null, loop will not execute\", DS);\n \n                      --  Since we know the range of the loop is null, set the\n                      --  appropriate flag to remove the loop entirely during\n@@ -2420,9 +2421,11 @@ package body Sem_Ch5 is\n \n                   else\n                      Error_Msg_N\n-                       (\"?loop range may be null, loop may not execute\", DS);\n+                       (\"??loop range may be null, loop may not execute\",\n+                        DS);\n                      Error_Msg_N\n-                       (\"?can only execute if invalid values are present\", DS);\n+                       (\"??can only execute if invalid values are present\",\n+                        DS);\n                   end if;\n                end if;\n \n@@ -2449,8 +2452,8 @@ package body Sem_Ch5 is\n                 (Intval (Original_Node (H)) = Uint_0\n                   or else Intval (Original_Node (H)) = Uint_1)\n             then\n-               Error_Msg_N (\"?loop range may be null\", DS);\n-               Error_Msg_N (\"\\?bounds may be wrong way round\", DS);\n+               Error_Msg_N (\"??loop range may be null\", DS);\n+               Error_Msg_N (\"\\??bounds may be wrong way round\", DS);\n             end if;\n          end;\n       end if;\n@@ -2666,7 +2669,7 @@ package body Sem_Ch5 is\n                         then\n                            Error_Msg_Sloc := Sloc (ODSD);\n                            Error_Msg_N\n-                             (\"inner range same as outer range#?\", DSD);\n+                             (\"inner range same as outer range#??\", DSD);\n                         end if;\n                      end;\n                   end if;\n@@ -2918,7 +2921,7 @@ package body Sem_Ch5 is\n                      Check_SPARK_Restriction\n                        (\"unreachable code is not allowed\", Error_Node);\n                   else\n-                     Error_Msg (\"?unreachable code!\", Sloc (Error_Node));\n+                     Error_Msg (\"??unreachable code!\", Sloc (Error_Node));\n                   end if;\n                end if;\n "}, {"sha": "2e4186f2652177ce41d8075d3269cfac20d8f7da", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -904,10 +904,10 @@ package body Sem_Disp is\n                  and then not Is_Generic_Type (Typ)\n                  and then not In_Instance\n                then\n-                  Error_Msg_N (\"?declaration of& is too late!\", Subp);\n+                  Error_Msg_N (\"??declaration of& is too late!\", Subp);\n                   Error_Msg_NE -- CODEFIX??\n-                    (\"\\spec should appear immediately after declaration of &!\",\n-                     Subp, Typ);\n+                    (\"\\??spec should appear immediately after declaration \"\n+                     & \"of & !\", Subp, Typ);\n                   exit;\n                end if;\n \n@@ -933,10 +933,10 @@ package body Sem_Disp is\n                  and then not Is_Generic_Type (Typ)\n                  and then not In_Instance\n                then\n-                  Error_Msg_N (\"?declaration of& is too late!\", Subp);\n+                  Error_Msg_N (\"??declaration of& is too late!\", Subp);\n                   Error_Msg_NE\n-                    (\"\\spec should appear immediately after declaration of &!\",\n-                     Subp, Typ);\n+                    (\"\\??spec should appear immediately after declaration \"\n+                     & \"of & !\", Subp, Typ);\n                end if;\n             end if;\n          end;\n@@ -1153,7 +1153,7 @@ package body Sem_Disp is\n            and then In_Same_List (Parent (Tagged_Type), Parent (Parent (Subp)))\n          then\n             Error_Msg_N\n-              (\"?not dispatching (must be defined in a package spec)\", Subp);\n+              (\"??not dispatching (must be defined in a package spec)\", Subp);\n             return;\n \n          --  When the type is frozen, it is legitimate to define a new\n@@ -1169,7 +1169,7 @@ package body Sem_Disp is\n       elsif Is_Frozen (Tagged_Type) and then not Has_Dispatching_Parent then\n          Error_Msg_N (\"this primitive operation is declared too late\", Subp);\n          Error_Msg_NE\n-           (\"?no primitive operations for& after this line\",\n+           (\"??no primitive operations for& after this line\",\n             Freeze_Node (Tagged_Type),\n             Tagged_Type);\n          return;\n@@ -1220,7 +1220,7 @@ package body Sem_Disp is\n \n             else\n                Error_Msg_NE\n-                 (\"operation does not override inherited&?\", Subp, Subp);\n+                 (\"operation does not override inherited&??\", Subp, Subp);\n             end if;\n \n          else"}, {"sha": "f3d3e33ff770d7c232aaa1da2e351d6ce76b3c31", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -522,8 +522,9 @@ package body Sem_Dist is\n       Parameter := First (Parameter_Specifications (Type_Def));\n       while Present (Parameter) loop\n          if Nkind (Parameter_Type (Parameter)) = N_Access_Definition then\n-            Error_Msg_N (\"formal parameter& has anonymous access type?\",\n-              Defining_Identifier (Parameter));\n+            Error_Msg_N\n+              (\"formal parameter& has anonymous access type??\",\n+               Defining_Identifier (Parameter));\n             Is_Degenerate := True;\n             exit;\n          end if;\n@@ -533,7 +534,7 @@ package body Sem_Dist is\n \n       if Is_Degenerate then\n          Error_Msg_NE\n-           (\"remote access-to-subprogram type& can only be null?\",\n+           (\"remote access-to-subprogram type& can only be null??\",\n             Defining_Identifier (Parameter), User_Type);\n \n          --  The only legal value for a RAS with a formal parameter of an"}, {"sha": "2b7c7a1c7793740a00443efe684800932f4bc0e1", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -908,16 +908,16 @@ package body Sem_Elab is\n \n                if Inst_Case then\n                   Elab_Warning\n-                    (\"instantiation of& may raise Program_Error?\",\n-                     \"info: instantiation of& during elaboration?\", Ent);\n+                    (\"instantiation of& may raise Program_Error?l?\",\n+                     \"info: instantiation of& during elaboration?l?\", Ent);\n \n                --  Indirect call case, warning only in static elaboration\n                --  case, because the attribute reference itself cannot raise\n                --  an exception.\n \n                elsif Access_Case then\n                   Elab_Warning\n-                    (\"\", \"info: access to& during elaboration?\", Ent);\n+                    (\"\", \"info: access to& during elaboration?l?\", Ent);\n \n                --  Subprogram call case\n \n@@ -927,14 +927,14 @@ package body Sem_Elab is\n                     and then Comes_From_Source (Ent)\n                   then\n                      Elab_Warning\n-                       (\"implicit call to & may raise Program_Error?\",\n-                        \"info: implicit call to & during elaboration?\",\n+                       (\"implicit call to & may raise Program_Error?l?\",\n+                        \"info: implicit call to & during elaboration?l?\",\n                         Ent);\n \n                   else\n                      Elab_Warning\n-                       (\"call to & may raise Program_Error?\",\n-                        \"info: call to & during elaboration?\",\n+                       (\"call to & may raise Program_Error?l?\",\n+                        \"info: call to & during elaboration?l?\",\n                         Ent);\n                   end if;\n                end if;\n@@ -943,14 +943,14 @@ package body Sem_Elab is\n \n                if Nkind (N) in N_Subprogram_Instantiation then\n                   Elab_Warning\n-                    (\"\\missing pragma Elaborate for&?\",\n-                     \"\\info: implicit pragma Elaborate for& generated?\",\n+                    (\"\\missing pragma Elaborate for&?l?\",\n+                     \"\\info: implicit pragma Elaborate for& generated?l?\",\n                      W_Scope);\n \n                else\n                   Elab_Warning\n-                    (\"\\missing pragma Elaborate_All for&?\",\n-                     \"\\info: implicit pragma Elaborate_All for & generated?\",\n+                    (\"\\missing pragma Elaborate_All for&?l?\",\n+                     \"\\info: implicit pragma Elaborate_All for & generated?l?\",\n                      W_Scope);\n                end if;\n             end Generate_Elab_Warnings;\n@@ -1030,7 +1030,7 @@ package body Sem_Elab is\n                   Error_Msg_Node_2 := W_Scope;\n                   Error_Msg_NE\n                     (\"call to& in elaboration code \" &\n-                     \"requires pragma Elaborate_All on&?\", N, E);\n+                     \"requires pragma Elaborate_All on&??\", N, E);\n                end if;\n \n                --  Set indication for binder to generate Elaborate_All\n@@ -1138,13 +1138,13 @@ package body Sem_Elab is\n \n       --  Here we definitely have a bad instantiation\n \n-      Error_Msg_NE (\"?cannot instantiate& before body seen\", N, Ent);\n+      Error_Msg_NE (\"??cannot instantiate& before body seen\", N, Ent);\n \n       if Present (Instance_Spec (N)) then\n          Supply_Bodies (Instance_Spec (N));\n       end if;\n \n-      Error_Msg_N (\"\\?Program_Error will be raised at run time\", N);\n+      Error_Msg_N (\"\\??Program_Error will be raised at run time\", N);\n       Insert_Elab_Check (N);\n       Set_ABE_Is_Certain (N);\n    end Check_Bad_Instantiation;\n@@ -1720,13 +1720,13 @@ package body Sem_Elab is\n             Error_Msg_Sloc := Sloc (Ent);\n \n             Error_Msg_NE\n-              (\"?elaboration code may access& before it is initialized\",\n+              (\"??elaboration code may access& before it is initialized\",\n                N, Ent);\n             Error_Msg_NE\n-              (\"\\?suggest adding pragma Elaborate_Body to spec of &\",\n+              (\"\\??suggest adding pragma Elaborate_Body to spec of &\",\n                N, Scop);\n             Error_Msg_N\n-              (\"\\?or an explicit initialization could be added #\", N);\n+              (\"\\??or an explicit initialization could be added #\", N);\n          end if;\n \n          if not All_Errors_Mode then\n@@ -2181,12 +2181,12 @@ package body Sem_Elab is\n       if Elab_Call.Last = 0 then\n          if Inst_Case then\n             Error_Msg_NE\n-              (\"?cannot instantiate& before body seen\", N, Orig_Ent);\n+              (\"??cannot instantiate& before body seen\", N, Orig_Ent);\n          else\n-            Error_Msg_NE (\"?cannot call& before body seen\", N, Orig_Ent);\n+            Error_Msg_NE (\"??cannot call& before body seen\", N, Orig_Ent);\n          end if;\n \n-         Error_Msg_N (\"\\?Program_Error will be raised at run time\", N);\n+         Error_Msg_N (\"\\??Program_Error will be raised at run time\", N);\n          Insert_Elab_Check (N);\n \n       --  Call is not at outer level\n@@ -2255,15 +2255,15 @@ package body Sem_Elab is\n          then\n             if Inst_Case then\n                Error_Msg_NE\n-                 (\"instantiation of& may occur before body is seen?\",\n+                 (\"instantiation of& may occur before body is seen??\",\n                   N, Orig_Ent);\n             else\n                Error_Msg_NE\n-                 (\"call to& may occur before body is seen?\", N, Orig_Ent);\n+                 (\"call to& may occur before body is seen??\", N, Orig_Ent);\n             end if;\n \n             Error_Msg_N\n-              (\"\\Program_Error may be raised at run time?\", N);\n+              (\"\\Program_Error may be raised at run time??\", N);\n \n             Output_Calls (N);\n          end if;\n@@ -2359,10 +2359,10 @@ package body Sem_Elab is\n                     Scope (Proc) = Scope (Defining_Identifier (Decl)))\n                then\n                   Error_Msg_N\n-                    (\"task will be activated before elaboration of its body?\",\n+                    (\"task will be activated before elaboration of its body??\",\n                       Decl);\n                   Error_Msg_N\n-                    (\"\\Program_Error will be raised at run time?\", Decl);\n+                    (\"\\Program_Error will be raised at run time??\", Decl);\n \n                elsif\n                  Present (Corresponding_Body (Unit_Declaration_Node (Proc)))\n@@ -2506,7 +2506,7 @@ package body Sem_Elab is\n                Error_Msg_Node_2 := Task_Scope;\n                Error_Msg_NE\n                  (\"activation of an instance of task type&\" &\n-                  \" requires pragma Elaborate_All on &?\", N, Ent);\n+                  \" requires pragma Elaborate_All on &??\", N, Ent);\n             end if;\n \n             Activate_Elaborate_All_Desirable (N, Task_Scope);\n@@ -3082,16 +3082,16 @@ package body Sem_Elab is\n          Ent := Elab_Call.Table (J).Ent;\n \n          if Is_Generic_Unit (Ent) then\n-            Error_Msg_NE (\"\\?& instantiated #\", N, Ent);\n+            Error_Msg_NE (\"\\??& instantiated #\", N, Ent);\n \n          elsif Is_Init_Proc (Ent) then\n-            Error_Msg_N (\"\\?initialization procedure called #\", N);\n+            Error_Msg_N (\"\\??initialization procedure called #\", N);\n \n          elsif Is_Printable_Error_Name (Chars (Ent)) then\n-            Error_Msg_NE (\"\\?& called #\", N, Ent);\n+            Error_Msg_NE (\"\\??& called #\", N, Ent);\n \n          else\n-            Error_Msg_N (\"\\? called #\", N);\n+            Error_Msg_N (\"\\?? called #\", N);\n          end if;\n       end loop;\n    end Output_Calls;"}, {"sha": "ab7f3c934ae5e38f1a731fa2ff6f417ffe0a246d", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -293,7 +293,7 @@ package body Sem_Eval is\n            and then Is_Out_Of_Range (N, Base_Type (T), Assume_Valid => True)\n          then\n             Error_Msg_N\n-              (\"?float value out of range, infinity will be generated\", N);\n+              (\"??float value out of range, infinity will be generated\", N);\n          end if;\n \n          return;\n@@ -369,7 +369,7 @@ package body Sem_Eval is\n            Intval (N) > Expr_Value (Type_High_Bound (Universal_Integer)))\n       then\n          Apply_Compile_Time_Constraint_Error\n-           (N, \"non-static universal integer value out of range?\",\n+           (N, \"non-static universal integer value out of range??\",\n             CE_Range_Check_Failed);\n \n       --  Check out of range of base type\n@@ -390,7 +390,7 @@ package body Sem_Eval is\n \n          elsif Is_Out_Of_Range (N, T, Assume_Valid => True) then\n             Apply_Compile_Time_Constraint_Error\n-              (N, \"value not in range of}?\", CE_Range_Check_Failed);\n+              (N, \"value not in range of}??\", CE_Range_Check_Failed);\n \n          elsif Checks_On then\n             Enable_Range_Check (N);\n@@ -407,14 +407,12 @@ package body Sem_Eval is\n \n    procedure Check_String_Literal_Length (N : Node_Id; Ttype : Entity_Id) is\n    begin\n-      if not Raises_Constraint_Error (N)\n-        and then Is_Constrained (Ttype)\n-      then\n+      if not Raises_Constraint_Error (N) and then Is_Constrained (Ttype) then\n          if\n            UI_From_Int (String_Length (Strval (N))) /= String_Type_Len (Ttype)\n          then\n             Apply_Compile_Time_Constraint_Error\n-              (N, \"string length wrong for}?\",\n+              (N, \"string length wrong for}??\",\n                CE_Length_Check_Failed,\n                Ent => Ttype,\n                Typ => Ttype);\n@@ -1655,7 +1653,7 @@ package body Sem_Eval is\n                begin\n                   if Result < Lo or else Result > Hi then\n                      Apply_Compile_Time_Constraint_Error\n-                       (N, \"value not in range of }?\",\n+                       (N, \"value not in range of }??\",\n                         CE_Overflow_Check_Failed,\n                         Ent => BT);\n                      return;\n@@ -3316,10 +3314,10 @@ package body Sem_Eval is\n                     = Entity (Drange)\n                then\n                   if Warn_On_Redundant_Constructs then\n-                     Error_Msg_N (\"redundant slice denotes whole array?\", N);\n+                     Error_Msg_N (\"redundant slice denotes whole array?r?\", N);\n                   end if;\n \n-                  --  The following might be a useful optimization????\n+                  --  The following might be a useful optimization???\n \n                   --  Rewrite (N, New_Occurrence_Of (E, Sloc (N)));\n                end if;\n@@ -4656,7 +4654,7 @@ package body Sem_Eval is\n \n       else\n          Apply_Compile_Time_Constraint_Error\n-           (N, \"value not in range of}?\", CE_Range_Check_Failed);\n+           (N, \"value not in range of}??\", CE_Range_Check_Failed);\n       end if;\n    end Out_Of_Range;\n "}, {"sha": "fe3855d33d63c81a8b4be22b9c6120c7dba5d772", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -163,7 +163,7 @@ package body Sem_Intr is\n         and then Can_Never_Be_Null (Etype (Arg1))\n       then\n          Error_Msg_N\n-           (\"freeing `NOT NULL` object will raise Constraint_Error?\", N);\n+           (\"freeing `NOT NULL` object will raise Constraint_Error??\", N);\n \n       --  For unchecked deallocation, error to deallocate from empty pool.\n       --  Note: this test used to be in Exp_Intr as a warning, but AI 157"}, {"sha": "e2fce979a22cbcc65834cb1f8104c0c4351d83c9", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -245,7 +245,7 @@ package body Sem_Mech is\n \n       if Mech in Descriptor_Codes and then not Is_Formal (Ent) then\n          if Is_Record_Type (Etype (Ent)) then\n-            Error_Msg_N (\"?records cannot be returned by Descriptor\", Enod);\n+            Error_Msg_N (\"??records cannot be returned by Descriptor\", Enod);\n             return;\n          end if;\n       end if;"}, {"sha": "3364b6eb7e886b4719eb29dcf05cbd56aa7f46d9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 48, "deletions": 40, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -980,7 +980,7 @@ package body Sem_Prag is\n       procedure Check_Ada_83_Warning is\n       begin\n          if Ada_Version = Ada_83 and then Comes_From_Source (N) then\n-            Error_Msg_N (\"(Ada 83) pragma& is non-standard?\", N);\n+            Error_Msg_N (\"(Ada 83) pragma& is non-standard??\", N);\n          end if;\n       end Check_Ada_83_Warning;\n \n@@ -1853,7 +1853,7 @@ package body Sem_Prag is\n          then\n             Error_Msg_Name_1 := Pname;\n             Error_Msg_N\n-              (\"?pragma% is only effective in main program\", N);\n+              (\"??pragma% is only effective in main program\", N);\n          end if;\n       end Check_In_Main_Program;\n \n@@ -3551,7 +3551,7 @@ package body Sem_Prag is\n          else\n             if Warn_On_Export_Import and not OpenVMS_On_Target then\n                Error_Msg_N\n-                 (\"?unrecognized convention name, C assumed\",\n+                 (\"??unrecognized convention name, C assumed\",\n                   Get_Pragma_Arg (Arg1));\n             end if;\n \n@@ -3860,7 +3860,7 @@ package body Sem_Prag is\n       begin\n          if not OpenVMS_On_Target then\n             Error_Pragma\n-              (\"?pragma% ignored (applies only to Open'V'M'S)\");\n+              (\"??pragma% ignored (applies only to Open'V'M'S)\");\n          end if;\n \n          Process_Extended_Import_Export_Internal_Arg (Arg_Internal);\n@@ -3996,7 +3996,7 @@ package body Sem_Prag is\n             end if;\n \n             if Warn_On_Export_Import and then Is_Exported (Def_Id) then\n-               Error_Msg_N (\"?duplicate Export_Object pragma\", N);\n+               Error_Msg_N (\"??duplicate Export_Object pragma\", N);\n             else\n                Set_Exported (Def_Id, Arg_Internal);\n             end if;\n@@ -4019,21 +4019,20 @@ package body Sem_Prag is\n               and then Has_Discriminants (Etype (Def_Id))\n             then\n                Error_Msg_N\n-                 (\"imported value must be initialized?\", Arg_Internal);\n+                 (\"imported value must be initialized??\", Arg_Internal);\n             end if;\n \n             if Warn_On_Export_Import\n               and then Is_Access_Type (Etype (Def_Id))\n             then\n                Error_Pragma_Arg\n-                 (\"cannot import object of an access type?\", Arg_Internal);\n+                 (\"cannot import object of an access type??\", Arg_Internal);\n             end if;\n \n             if Warn_On_Export_Import\n               and then Is_Imported (Def_Id)\n             then\n-               Error_Msg_N\n-                 (\"?duplicate Import_Object pragma\", N);\n+               Error_Msg_N (\"??duplicate Import_Object pragma\", N);\n \n             --  Check for explicit initialization present. Note that an\n             --  initialization generated by the code generator, e.g. for an\n@@ -4957,7 +4956,7 @@ package body Sem_Prag is\n                if Front_End_Inlining\n                  and then Analyzed (Corresponding_Body (Decl))\n                then\n-                  Error_Msg_N (\"pragma appears too late, ignored?\", N);\n+                  Error_Msg_N (\"pragma appears too late, ignored??\", N);\n                   return True;\n \n                --  If the subprogram is a renaming as body, the body is just a\n@@ -5209,10 +5208,12 @@ package body Sem_Prag is\n             then\n                if Inlining_Not_Possible (Subp) then\n                   Error_Msg_NE\n-                    (\"pragma Inline for& is ignored?\", N, Entity (Subp_Id));\n+                    (\"pragma Inline for& is ignored?r?\",\n+                     N, Entity (Subp_Id));\n                else\n                   Error_Msg_NE\n-                    (\"pragma Inline for& is redundant?\", N, Entity (Subp_Id));\n+                    (\"pragma Inline for& is redundant?r?\",\n+                     N, Entity (Subp_Id));\n                end if;\n             end if;\n \n@@ -5284,7 +5285,7 @@ package body Sem_Prag is\n                                       Get_Character (C) = '/'))\n                then\n                   Error_Msg\n-                    (\"?interface name contains illegal character\",\n+                    (\"??interface name contains illegal character\",\n                      Sloc (SN) + Source_Ptr (J));\n                end if;\n             end loop;\n@@ -5704,7 +5705,7 @@ package body Sem_Prag is\n \n                if not UI_Is_In_Int_Range (Val) then\n                   Error_Pragma_Arg\n-                    (\"pragma ignored, value too large?\", Arg);\n+                    (\"pragma ignored, value too large??\", Arg);\n                end if;\n \n                --  Warning case. If the real restriction is active, then we\n@@ -5981,20 +5982,23 @@ package body Sem_Prag is\n                  and then Comes_From_Source (Arg)\n                then\n                   Error_Msg_NE\n-                    (\"?& has been made static as a result of Export\", Arg, E);\n+                    (\"?x?& has been made static as a result of Export\",\n+                     Arg, E);\n                   Error_Msg_N\n-                    (\"\\this usage is non-standard and non-portable\", Arg);\n+                    (\"\\?x?this usage is non-standard and non-portable\",\n+                     Arg);\n                end if;\n             end if;\n          end if;\n \n          if Warn_On_Export_Import and then Is_Type (E) then\n-            Error_Msg_NE (\"exporting a type has no effect?\", Arg, E);\n+            Error_Msg_NE (\"exporting a type has no effect?x?\", Arg, E);\n          end if;\n \n          if Warn_On_Export_Import and Inside_A_Generic then\n             Error_Msg_NE\n-              (\"all instances of& will have the same external name?\", Arg, E);\n+              (\"all instances of& will have the same external name?x?\",\n+               Arg, E);\n          end if;\n       end Set_Exported;\n \n@@ -6562,13 +6566,13 @@ package body Sem_Prag is\n       if not Is_Pragma_Name (Pname) then\n          if Warn_On_Unrecognized_Pragma then\n             Error_Msg_Name_1 := Pname;\n-            Error_Msg_N (\"?unrecognized pragma%!\", Pragma_Identifier (N));\n+            Error_Msg_N (\"?g?unrecognized pragma%!\", Pragma_Identifier (N));\n \n             for PN in First_Pragma_Name .. Last_Pragma_Name loop\n                if Is_Bad_Spelling_Of (Pname, PN) then\n                   Error_Msg_Name_1 := PN;\n                   Error_Msg_N -- CODEFIX\n-                    (\"\\?possible misspelling of %!\", Pragma_Identifier (N));\n+                    (\"\\?g?possible misspelling of %!\", Pragma_Identifier (N));\n                   exit;\n                end if;\n             end loop;\n@@ -8119,7 +8123,7 @@ package body Sem_Prag is\n                --  Following message is obsolete ???\n                Error_Msg_N\n                  (\"'G'N'A'T pragma cpp'_class is now obsolete and has no \" &\n-                  \"effect; replace it by pragma import?\", N);\n+                  \"effect; replace it by pragma import?j?\", N);\n             end if;\n \n             Check_Arg_Count (1);\n@@ -8171,7 +8175,7 @@ package body Sem_Prag is\n \n             if Is_Constructor (Def_Id) then\n                Error_Msg_N\n-                 (\"?duplicate argument for pragma 'C'P'P_Constructor\", Arg1);\n+                 (\"??duplicate argument for pragma 'C'P'P_Constructor\", Arg1);\n                return;\n             end if;\n \n@@ -8245,7 +8249,7 @@ package body Sem_Prag is\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n                  (\"'G'N'A'T pragma cpp'_virtual is now obsolete and has \" &\n-                  \"no effect?\", N);\n+                  \"no effect?j?\", N);\n             end if;\n          end CPP_Virtual;\n \n@@ -8260,7 +8264,7 @@ package body Sem_Prag is\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n                  (\"'G'N'A'T pragma cpp'_vtable is now obsolete and has \" &\n-                  \"no effect?\", N);\n+                  \"no effect?j?\", N);\n             end if;\n          end CPP_Vtable;\n \n@@ -8745,9 +8749,9 @@ package body Sem_Prag is\n \n             if Elab_Warnings and not Dynamic_Elaboration_Checks then\n                Error_Msg_N\n-                 (\"?use of pragma Elaborate may not be safe\", N);\n+                 (\"?l?use of pragma Elaborate may not be safe\", N);\n                Error_Msg_N\n-                 (\"?use pragma Elaborate_All instead if possible\", N);\n+                 (\"?l?use pragma Elaborate_All instead if possible\", N);\n             end if;\n          end Elaborate;\n \n@@ -9586,7 +9590,7 @@ package body Sem_Prag is\n             if not OpenVMS_On_Target then\n                if Chars (Get_Pragma_Arg (Arg1)) = Name_VAX_Float then\n                   Error_Pragma\n-                    (\"?pragma% ignored (applies only to Open'V'M'S)\");\n+                    (\"??pragma% ignored (applies only to Open'V'M'S)\");\n                end if;\n \n                return;\n@@ -11564,7 +11568,7 @@ package body Sem_Prag is\n             Check_Arg_Is_One_Of (Arg1, Name_D_Float, Name_G_Float);\n \n             if not OpenVMS_On_Target then\n-               Error_Pragma (\"?pragma% ignored (applies only to Open'V'M'S)\");\n+               Error_Pragma (\"??pragma% ignored (applies only to Open'V'M'S)\");\n             end if;\n \n             --  D_Float case\n@@ -12468,7 +12472,7 @@ package body Sem_Prag is\n                   elsif VM_Target /= No_VM then\n                      if not GNAT_Mode then\n                         Error_Pragma\n-                          (\"?pragma% ignored in this configuration\");\n+                          (\"??pragma% ignored in this configuration\");\n                      end if;\n \n                   --  Normal case where we do the pack action\n@@ -12494,7 +12498,7 @@ package body Sem_Prag is\n                   if VM_Target /= No_VM then\n                      if not GNAT_Mode then\n                         Error_Pragma\n-                          (\"?pragma% ignored in this configuration\");\n+                          (\"??pragma% ignored in this configuration\");\n                      end if;\n \n                   --  Normal case of pack request active\n@@ -12639,7 +12643,7 @@ package body Sem_Prag is\n             if Has_Pragma_Preelab_Init (Ent)\n               and then Warn_On_Redundant_Constructs\n             then\n-               Error_Pragma (\"?duplicate pragma%!\");\n+               Error_Pragma (\"?r?duplicate pragma%!\");\n             else\n                Set_Has_Pragma_Preelab_Init (Ent);\n             end if;\n@@ -13314,7 +13318,7 @@ package body Sem_Prag is\n                  or else\n                Has_Rep_Pragma (Def_Id, Name_Psect_Object)\n             then\n-               Error_Msg_N (\"?duplicate Common/Psect_Object pragma\", N);\n+               Error_Msg_N (\"??duplicate Common/Psect_Object pragma\", N);\n             end if;\n \n             if Ekind (Def_Id) = E_Constant then\n@@ -13338,7 +13342,7 @@ package body Sem_Prag is\n                        and then Warn_On_Export_Import\n                      then\n                         Error_Msg_N\n-                          (\"?object for pragma % has defaults\", Internal);\n+                          (\"?x?object for pragma % has defaults\", Internal);\n                         exit;\n \n                      else\n@@ -13522,7 +13526,7 @@ package body Sem_Prag is\n                  and then Warn_On_Redundant_Constructs\n                then\n                   Error_Msg_NE\n-                    (\"pragma Pure_Function on& is redundant?\",\n+                    (\"pragma Pure_Function on& is redundant?r?\",\n                      N, Entity (E_Id));\n                end if;\n             end if;\n@@ -13728,8 +13732,10 @@ package body Sem_Prag is\n             Set_Ravenscar_Profile (N);\n \n             if Warn_On_Obsolescent_Feature then\n-               Error_Msg_N (\"pragma Ravenscar is an obsolescent feature?\", N);\n-               Error_Msg_N (\"|use pragma Profile (Ravenscar) instead\", N);\n+               Error_Msg_N\n+                 (\"pragma Ravenscar is an obsolescent feature?j?\", N);\n+               Error_Msg_N\n+                 (\"|use pragma Profile (Ravenscar) instead?j?\", N);\n             end if;\n \n          -------------------------\n@@ -13747,8 +13753,10 @@ package body Sem_Prag is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n-                 (\"pragma Restricted_Run_Time is an obsolescent feature?\", N);\n-               Error_Msg_N (\"|use pragma Profile (Restricted) instead\", N);\n+                 (\"pragma Restricted_Run_Time is an obsolescent feature?j?\",\n+                  N);\n+               Error_Msg_N\n+                 (\"|use pragma Profile (Restricted) instead?j?\", N);\n             end if;\n \n          ------------------\n@@ -14939,7 +14947,7 @@ package body Sem_Prag is\n             end if;\n \n             if not AAMP_On_Target then\n-               Error_Pragma (\"?pragma% ignored (applies only to AAMP)\");\n+               Error_Pragma (\"??pragma% ignored (applies only to AAMP)\");\n             end if;\n \n          ----------------\n@@ -15432,7 +15440,7 @@ package body Sem_Prag is\n \n                            if Err then\n                               Error_Msg\n-                                (\"?pragma Warnings On with no \" &\n+                                (\"??pragma Warnings On with no \" &\n                                  \"matching Warnings Off\",\n                                  Loc);\n                            end if;"}, {"sha": "fff52950e2ab451b9a28f07be3dbd22ca2ddbae6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 70, "deletions": 64, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -577,7 +577,7 @@ package body Sem_Res is\n                --  Warn about the danger\n \n                Error_Msg_N\n-                 (\"?creation of & object may raise Storage_Error!\",\n+                 (\"??creation of & object may raise Storage_Error!\",\n                   Scope (Disc));\n \n                <<No_Danger>>\n@@ -769,8 +769,8 @@ package body Sem_Res is\n               and then Nkind (Parent (P)) = N_Subprogram_Body\n               and then Is_Empty_List (Declarations (Parent (P)))\n             then\n-               Error_Msg_N (\"!?infinite recursion\", N);\n-               Error_Msg_N (\"\\!?Storage_Error will be raised at run time\", N);\n+               Error_Msg_N (\"!??infinite recursion\", N);\n+               Error_Msg_N (\"\\!??Storage_Error will be raised at run time\", N);\n                Insert_Action (N,\n                  Make_Raise_Storage_Error (Sloc (N),\n                    Reason => SE_Infinite_Recursion));\n@@ -867,8 +867,8 @@ package body Sem_Res is\n          end if;\n       end loop;\n \n-      Error_Msg_N (\"!?possible infinite recursion\", N);\n-      Error_Msg_N (\"\\!?Storage_Error may be raised at run time\", N);\n+      Error_Msg_N (\"!??possible infinite recursion\", N);\n+      Error_Msg_N (\"\\!??Storage_Error may be raised at run time\", N);\n \n       return True;\n    end Check_Infinite_Recursion;\n@@ -3963,14 +3963,14 @@ package body Sem_Res is\n                   if Is_Controlling_Formal (F) then\n                      Apply_Compile_Time_Constraint_Error\n                        (N      => A,\n-                        Msg    => \"null value not allowed here?\",\n+                        Msg    => \"null value not allowed here??\",\n                         Reason => CE_Access_Check_Failed);\n \n                   elsif Ada_Version >= Ada_2005 then\n                      Apply_Compile_Time_Constraint_Error\n                        (N      => A,\n                         Msg    => \"(Ada 2005) null not allowed in \"\n-                                  & \"null-excluding formal?\",\n+                                  & \"null-excluding formal??\",\n                         Reason => CE_Null_Not_Allowed);\n                   end if;\n                end if;\n@@ -4448,9 +4448,9 @@ package body Sem_Res is\n                  Deepest_Type_Access_Level (Typ)\n             then\n                if In_Instance_Body then\n-                  Error_Msg_N (\"?type in allocator has deeper level than\" &\n+                  Error_Msg_N (\"??type in allocator has deeper level than\" &\n                                \" designated class-wide type\", E);\n-                  Error_Msg_N (\"\\?Program_Error will be raised at run time\",\n+                  Error_Msg_N (\"\\??Program_Error will be raised at run time\",\n                                E);\n                   Rewrite (N,\n                     Make_Raise_Program_Error (Sloc (N),\n@@ -4556,8 +4556,8 @@ package body Sem_Res is\n         and then Ekind (Current_Scope) = E_Package\n         and then not In_Package_Body (Current_Scope)\n       then\n-         Error_Msg_N (\"?cannot activate task before body seen\", N);\n-         Error_Msg_N (\"\\?Program_Error will be raised at run time\", N);\n+         Error_Msg_N (\"??cannot activate task before body seen\", N);\n+         Error_Msg_N (\"\\??Program_Error will be raised at run time\", N);\n       end if;\n \n       --  Ada 2012 (AI05-0111-3): Detect an attempt to allocate a task or a\n@@ -4569,8 +4569,8 @@ package body Sem_Res is\n         and then Present (Subpool_Handle_Name (N))\n         and then Has_Task (Desig_T)\n       then\n-         Error_Msg_N (\"?cannot allocate task on subpool\", N);\n-         Error_Msg_N (\"\\?Program_Error will be raised at run time\", N);\n+         Error_Msg_N (\"??cannot allocate task on subpool\", N);\n+         Error_Msg_N (\"\\??Program_Error will be raised at run time\", N);\n \n          Rewrite (N,\n            Make_Raise_Program_Error (Sloc (N),\n@@ -5026,24 +5026,24 @@ package body Sem_Res is\n                      then\n                         Error_Msg_N\n                           (\"float division by zero, \" &\n-                           \"may generate '+'/'- infinity?\", Right_Opnd (N));\n+                           \"may generate '+'/'- infinity??\", Right_Opnd (N));\n \n                         --  For all other cases, we get a Constraint_Error\n \n                      else\n                         Apply_Compile_Time_Constraint_Error\n-                          (N, \"division by zero?\", CE_Divide_By_Zero,\n+                          (N, \"division by zero??\", CE_Divide_By_Zero,\n                            Loc => Sloc (Right_Opnd (N)));\n                      end if;\n \n                   when N_Op_Rem =>\n                      Apply_Compile_Time_Constraint_Error\n-                       (N, \"rem with zero divisor?\", CE_Divide_By_Zero,\n+                       (N, \"rem with zero divisor??\", CE_Divide_By_Zero,\n                         Loc => Sloc (Right_Opnd (N)));\n \n                   when N_Op_Mod =>\n                      Apply_Compile_Time_Constraint_Error\n-                       (N, \"mod with zero divisor?\", CE_Divide_By_Zero,\n+                       (N, \"mod with zero divisor??\", CE_Divide_By_Zero,\n                         Loc => Sloc (Right_Opnd (N)));\n \n                   --  Division by zero can only happen with division, rem,\n@@ -5285,10 +5285,10 @@ package body Sem_Res is\n                then\n                   Rtype := Etype (N);\n                   Error_Msg_NE\n-                    (\"?& should not be used in entry body (RM C.7(17))\",\n+                    (\"??& should not be used in entry body (RM C.7(17))\",\n                      N, Nam);\n                   Error_Msg_NE\n-                    (\"\\Program_Error will be raised at run time?\", N, Nam);\n+                    (\"\\Program_Error will be raised at run time??\", N, Nam);\n                   Rewrite (N,\n                     Make_Raise_Program_Error (Loc,\n                       Reason => PE_Current_Task_In_Entry_Body));\n@@ -5578,9 +5578,9 @@ package body Sem_Res is\n \n                      Set_Has_Recursive_Call (Nam);\n                      Error_Msg_N\n-                       (\"?possible infinite recursion!\", N);\n+                       (\"??possible infinite recursion!\", N);\n                      Error_Msg_N\n-                       (\"\\?Storage_Error may be raised at run time!\", N);\n+                       (\"\\??Storage_Error may be raised at run time!\", N);\n                   end if;\n \n                   exit Scope_Loop;\n@@ -5898,8 +5898,8 @@ package body Sem_Res is\n             end loop;\n \n             if not Call_OK then\n-               Error_Msg_N (\"!? cannot determine tag of result\", N);\n-               Error_Msg_N (\"!? Program_Error will be raised\", N);\n+               Error_Msg_N (\"!?? cannot determine tag of result\", N);\n+               Error_Msg_N (\"!?? Program_Error will be raised\", N);\n                Insert_Action (N,\n                  Make_Raise_Program_Error (Sloc (N),\n                     Reason => PE_Explicit_Raise));\n@@ -6100,7 +6100,7 @@ package body Sem_Res is\n       --  Check comparison on unordered enumeration\n \n       if Bad_Unordered_Enumeration_Reference (N, Etype (L)) then\n-         Error_Msg_N (\"comparison on unordered enumeration type?\", N);\n+         Error_Msg_N (\"comparison on unordered enumeration type?U?\", N);\n       end if;\n \n       --  Evaluate the relation (note we do this after the above check since\n@@ -6939,7 +6939,7 @@ package body Sem_Res is\n            and then Comes_From_Source (R)\n          then\n             Error_Msg_N -- CODEFIX\n-              (\"?comparison with True is redundant!\", R);\n+              (\"?r?comparison with True is redundant!\", R);\n          end if;\n \n          Check_Unset_Reference (L);\n@@ -7322,9 +7322,9 @@ package body Sem_Res is\n         and then Is_Bit_Packed_Array (Array_Type)\n         and then Is_LHS (N)\n       then\n-         Error_Msg_N (\"?assignment to component of packed atomic array\",\n+         Error_Msg_N (\"??assignment to component of packed atomic array\",\n                       Prefix (N));\n-         Error_Msg_N (\"?\\may cause unexpected accesses to atomic object\",\n+         Error_Msg_N (\"??\\may cause unexpected accesses to atomic object\",\n                       Prefix (N));\n       end if;\n    end Resolve_Indexed_Component;\n@@ -7700,7 +7700,7 @@ package body Sem_Res is\n                while Present (Alt) loop\n                   if Is_Static_Expression (Alt)\n                     and then (Nkind_In (Alt, N_Integer_Literal,\n-                                         N_Character_Literal)\n+                                             N_Character_Literal)\n                                or else Nkind (Alt) in N_Has_Entity)\n                   then\n                      Nalts := Nalts + 1;\n@@ -7709,7 +7709,7 @@ package body Sem_Res is\n                      for J in 1 .. Nalts - 1 loop\n                         if Alts (J).Val = Alts (Nalts).Val then\n                            Error_Msg_Sloc := Sloc (Alts (J).Alt);\n-                           Error_Msg_N (\"duplicate of value given#?\", Alt);\n+                           Error_Msg_N (\"duplicate of value given#??\", Alt);\n                         end if;\n                      end loop;\n                   end if;\n@@ -7838,7 +7838,7 @@ package body Sem_Res is\n          if not Inside_Init_Proc then\n             Insert_Action\n               (Compile_Time_Constraint_Error (N,\n-                 \"(Ada 2005) null not allowed in null-excluding objects?\"),\n+                 \"(Ada 2005) null not allowed in null-excluding objects??\"),\n                Make_Raise_Constraint_Error (Loc,\n                  Reason => CE_Access_Check_Failed));\n          else\n@@ -8308,7 +8308,7 @@ package body Sem_Res is\n            and then not Is_Boolean_Type (Typ)\n            and then Parent_Is_Boolean\n          then\n-            Error_Msg_N (\"?not expression should be parenthesized here!\", N);\n+            Error_Msg_N (\"?q?not expression should be parenthesized here!\", N);\n          end if;\n \n          --  Warn on double negation if checking redundant constructs\n@@ -8319,7 +8319,7 @@ package body Sem_Res is\n            and then Root_Type (Typ) = Standard_Boolean\n            and then Nkind (Right_Opnd (N)) = N_Op_Not\n          then\n-            Error_Msg_N (\"redundant double negation?\", N);\n+            Error_Msg_N (\"redundant double negation?r?\", N);\n          end if;\n \n          --  Complete resolution and evaluation of NOT\n@@ -8459,7 +8459,7 @@ package body Sem_Res is\n \n         and then not First_Last_Ref\n       then\n-         Error_Msg (\"subrange of unordered enumeration type?\", Sloc (N));\n+         Error_Msg (\"subrange of unordered enumeration type?U?\", Sloc (N));\n       end if;\n \n       Check_Unset_Reference (L);\n@@ -8546,7 +8546,7 @@ package body Sem_Res is\n                  and then Warn_On_Bad_Fixed_Value\n                then\n                   Error_Msg_N\n-                    (\"?static fixed-point value is not a multiple of Small!\",\n+                    (\"?b?static fixed-point value is not a multiple of Small!\",\n                      N);\n                end if;\n \n@@ -8796,9 +8796,9 @@ package body Sem_Res is\n         and then Is_LHS (N)\n       then\n          Error_Msg_N\n-           (\"?assignment to component of packed atomic record\", Prefix (N));\n+           (\"??assignment to component of packed atomic record\", Prefix (N));\n          Error_Msg_N\n-           (\"?\\may cause unexpected accesses to atomic object\", Prefix (N));\n+           (\"\\??may cause unexpected accesses to atomic object\", Prefix (N));\n       end if;\n \n       Analyze_Dimension (N);\n@@ -8891,7 +8891,7 @@ package body Sem_Res is\n                      --  of the First_Node call here.\n \n                      Error_Msg_F\n-                       (\"?assertion would fail at run time!\",\n+                       (\"??assertion would fail at run time!\",\n                         Expression\n                           (First (Pragma_Argument_Associations (Orig))));\n                   end if;\n@@ -8906,10 +8906,9 @@ package body Sem_Res is\n \n                declare\n                   Expr : constant Node_Id :=\n-                           Original_Node\n-                             (Expression\n-                                (Next (First\n-                                  (Pragma_Argument_Associations (Orig)))));\n+                    Original_Node\n+                      (Expression\n+                        (Next (First (Pragma_Argument_Associations (Orig)))));\n                begin\n                   if Is_Entity_Name (Expr)\n                     and then Entity (Expr) = Standard_False\n@@ -8923,7 +8922,7 @@ package body Sem_Res is\n                      --  comment above for an explanation of why we do this.\n \n                      Error_Msg_F\n-                       (\"?check would fail at run time!\",\n+                       (\"??check would fail at run time!\",\n                         Expression\n                           (Last (Pragma_Argument_Associations (Orig))));\n                   end if;\n@@ -9329,7 +9328,8 @@ package body Sem_Res is\n                        or else Char_Val > Expr_Value (Comp_Typ_Hi)\n                      then\n                         Apply_Compile_Time_Constraint_Error\n-                          (N, \"character out of range?\", CE_Range_Check_Failed,\n+                          (N, \"character out of range??\",\n+                           CE_Range_Check_Failed,\n                            Loc => Source_Ptr (Int (Loc) + J));\n                      end if;\n                   end loop;\n@@ -9474,11 +9474,10 @@ package body Sem_Res is\n               and then abs (Realval (Rop)) < Delta_Value (Standard_Duration)\n             then\n                Error_Msg_N\n-                 (\"?universal real operand can only \" &\n-                  \"be interpreted as Duration!\",\n-                  Rop);\n+                 (\"??universal real operand can only \" &\n+                  \"be interpreted as Duration!\", Rop);\n                Error_Msg_N\n-                 (\"\\?precision will be lost in the conversion!\", Rop);\n+                 (\"\\??precision will be lost in the conversion!\", Rop);\n             end if;\n \n          elsif Is_Numeric_Type (Typ)\n@@ -9654,15 +9653,17 @@ package body Sem_Res is\n             --  entity, give the name of the entity in the message. If not,\n             --  just mention the expression.\n \n+            --  Shoudn't we test Warn_On_Redundant_Constructs here ???\n+\n             else\n                if Is_Entity_Name (Orig_N) then\n                   Error_Msg_Node_2 := Orig_T;\n                   Error_Msg_NE -- CODEFIX\n-                    (\"?redundant conversion, & is of type &!\",\n+                    (\"??redundant conversion, & is of type &!\",\n                      N, Entity (Orig_N));\n                else\n                   Error_Msg_NE\n-                    (\"?redundant conversion, expression is of type&!\",\n+                    (\"??redundant conversion, expression is of type&!\",\n                      N, Orig_T);\n                end if;\n             end if;\n@@ -9830,7 +9831,7 @@ package body Sem_Res is\n \n          if OK and then Hi >= Lo and then Lo >= 0 then\n             Error_Msg_N -- CODEFIX\n-             (\"?abs applied to known non-negative value has no effect\", N);\n+             (\"?r?abs applied to known non-negative value has no effect\", N);\n          end if;\n       end if;\n \n@@ -9968,8 +9969,10 @@ package body Sem_Res is\n \n                --  If we fall through warning should be issued\n \n+               --  Shouldn't we test Warn_On_Questionable_Missing_Parens ???\n+\n                Error_Msg_N\n-                 (\"?unary minus expression should be parenthesized here!\", N);\n+                 (\"??unary minus expression should be parenthesized here!\", N);\n             end if;\n          end if;\n       end;\n@@ -10443,9 +10446,11 @@ package body Sem_Res is\n       end loop;\n \n       if Nkind (N) = N_Real_Literal then\n-         Error_Msg_NE (\"?real literal interpreted as }!\", N, T1);\n+         Error_Msg_NE\n+           (\"??real literal interpreted as }!\", N, T1);\n       else\n-         Error_Msg_NE (\"?universal_fixed expression interpreted as }!\", N, T1);\n+         Error_Msg_NE\n+           (\"??universal_fixed expression interpreted as }!\", N, T1);\n       end if;\n \n       return T1;\n@@ -10628,10 +10633,10 @@ package body Sem_Res is\n                then\n                   if In_Instance_Body then\n                      Error_Msg_N\n-                       (\"?source array type has \" &\n+                       (\"??source array type has \" &\n                         \"deeper accessibility level than target\", Operand);\n                      Error_Msg_N\n-                       (\"\\?Program_Error will be raised at run time\",\n+                       (\"\\??Program_Error will be raised at run time\",\n                         Operand);\n                      Rewrite (N,\n                        Make_Raise_Program_Error (Sloc (N),\n@@ -10915,10 +10920,10 @@ package body Sem_Res is\n \n                if In_Instance_Body then\n                   Error_Msg_N\n-                    (\"?cannot convert local pointer to non-local access type\",\n+                    (\"??cannot convert local pointer to non-local access type\",\n                      Operand);\n                   Error_Msg_N\n-                    (\"\\?Program_Error will be raised at run time\", Operand);\n+                    (\"\\??Program_Error will be raised at run time\", Operand);\n \n                else\n                   Error_Msg_N\n@@ -10948,10 +10953,11 @@ package body Sem_Res is\n \n                   if In_Instance_Body then\n                      Error_Msg_N\n-                       (\"?cannot convert access discriminant to non-local\" &\n+                       (\"??cannot convert access discriminant to non-local\" &\n                         \" access type\", Operand);\n                      Error_Msg_N\n-                       (\"\\?Program_Error will be raised at run time\", Operand);\n+                       (\"\\??Program_Error will be raised at run time\",\n+                        Operand);\n                   else\n                      Error_Msg_N\n                        (\"cannot convert access discriminant to non-local\" &\n@@ -11092,10 +11098,10 @@ package body Sem_Res is\n \n                if In_Instance_Body then\n                   Error_Msg_N\n-                    (\"?cannot convert local pointer to non-local access type\",\n+                    (\"??cannot convert local pointer to non-local access type\",\n                      Operand);\n                   Error_Msg_N\n-                    (\"\\?Program_Error will be raised at run time\", Operand);\n+                    (\"\\??Program_Error will be raised at run time\", Operand);\n \n                else\n                   --  Avoid generation of spurious error message\n@@ -11130,10 +11136,10 @@ package body Sem_Res is\n \n                   if In_Instance_Body then\n                      Error_Msg_N\n-                       (\"?cannot convert access discriminant to non-local\" &\n-                        \" access type\", Operand);\n+                       (\"??cannot convert access discriminant to non-local\"\n+                        & \" access type\", Operand);\n                      Error_Msg_N\n-                       (\"\\?Program_Error will be raised at run time\",\n+                       (\"\\??Program_Error will be raised at run time\",\n                         Operand);\n \n                   else"}, {"sha": "648362c658f6bb7a9a0e4f3403643392dd5918bc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -444,8 +444,8 @@ package body Sem_Util is\n    begin\n       if Has_Predicates (Typ) then\n          if Is_Generic_Actual_Type (Typ) then\n-            Error_Msg_FE (Msg & '?', N, Typ);\n-            Error_Msg_F (\"\\Program_Error will be raised at run time?\", N);\n+            Error_Msg_FE (Msg & \"??\", N, Typ);\n+            Error_Msg_F (\"\\Program_Error will be raised at run time??\", N);\n             Insert_Action (N,\n               Make_Raise_Program_Error (Sloc (N),\n                 Reason => PE_Bad_Predicated_Generic_Type));\n@@ -1576,7 +1576,7 @@ package body Sem_Util is\n                   then\n                      Error_Msg_N\n                        (\"result may differ if evaluated \"\n-                        & \"after other actual in expression?\", Act1);\n+                        & \"after other actual in expression??\", Act1);\n                   end if;\n                end if;\n             end loop;\n@@ -1610,7 +1610,7 @@ package body Sem_Util is\n       while Present (S) and then S /= Standard_Standard loop\n          if Is_Protected_Type (S) then\n             Error_Msg_N\n-              (\"potentially blocking operation in protected operation?\", N);\n+              (\"potentially blocking operation in protected operation??\", N);\n             return;\n          end if;\n \n@@ -1724,7 +1724,7 @@ package body Sem_Util is\n                       Object_Access_Level (Context)\n          then\n             Error_Msg_N\n-              (\"?possible unprotected access to protected data\", Expr);\n+              (\"??possible unprotected access to protected data\", Expr);\n          end if;\n       end if;\n    end Check_Unprotected_Access;\n@@ -2249,8 +2249,8 @@ package body Sem_Util is\n       Loc  : Source_Ptr := No_Location;\n       Warn : Boolean    := False) return Node_Id\n    is\n-      Msgc : String (1 .. Msg'Length + 2);\n-      --  Copy of message, with room for possible ? and ! at end\n+      Msgc : String (1 .. Msg'Length + 3);\n+      --  Copy of message, with room for possible ?? and ! at end\n \n       Msgl : Natural;\n       Wmsg : Boolean;\n@@ -2289,11 +2289,15 @@ package body Sem_Util is\n          elsif Warn\n            or else (Ada_Version = Ada_83 and then Comes_From_Source (N))\n          then\n+            Msgl := Msgl + 1;\n+            Msgc (Msgl) := '?';\n             Msgl := Msgl + 1;\n             Msgc (Msgl) := '?';\n             Wmsg := True;\n \n          elsif In_Instance_Not_Visible then\n+            Msgl := Msgl + 1;\n+            Msgc (Msgl) := '?';\n             Msgl := Msgl + 1;\n             Msgc (Msgl) := '?';\n             Wmsg := True;\n@@ -2413,19 +2417,19 @@ package body Sem_Util is\n                        and then not Comes_From_Source (Conc_Typ)\n                      then\n                         Error_Msg_NEL\n-                          (\"\\?& will be raised at run time\",\n+                          (\"\\??& will be raised at run time\",\n                            N, Standard_Constraint_Error, Eloc);\n \n                      else\n                         Error_Msg_NEL\n-                          (\"\\?& will be raised for objects of this type\",\n+                          (\"\\??& will be raised for objects of this type\",\n                            N, Standard_Constraint_Error, Eloc);\n                      end if;\n                   end;\n \n                else\n                   Error_Msg_NEL\n-                    (\"\\?& will be raised at run time\",\n+                    (\"\\??& will be raised at run time\",\n                      N, Standard_Constraint_Error, Eloc);\n                end if;\n \n@@ -3863,7 +3867,7 @@ package body Sem_Util is\n             Is_Potentially_Use_Visible (C))\n       then\n          Error_Msg_Sloc := Sloc (C);\n-         Error_Msg_N (\"declaration hides &#?\", Def_Id);\n+         Error_Msg_N (\"declaration hides &#?h?\", Def_Id);\n       end if;\n    end Enter_Name;\n \n@@ -11258,7 +11262,8 @@ package body Sem_Util is\n                   --  sure this is a modification.\n \n                   if Has_Pragma_Unmodified (Ent) and then Sure then\n-                     Error_Msg_NE (\"?pragma Unmodified given for &!\", N, Ent);\n+                     Error_Msg_NE\n+                       (\"??pragma Unmodified given for &!\", N, Ent);\n                   end if;\n \n                   Set_Never_Set_In_Source (Ent, False);\n@@ -11348,8 +11353,8 @@ package body Sem_Util is\n                         then\n                            Error_Msg_Sloc := Sloc (A);\n                            Error_Msg_NE\n-                             (\"constant& may be modified via address clause#?\",\n-                              N, Entity (Prefix (Exp)));\n+                             (\"constant& may be modified via address \"\n+                              & \"clause#??\", N, Entity (Prefix (Exp)));\n                         end if;\n                      end;\n                   end if;\n@@ -11600,16 +11605,15 @@ package body Sem_Util is\n             end Return_Master_Scope_Depth_Of_Call;\n          end if;\n \n-      --  For convenience we handle qualified expressions, even though\n-      --  they aren't technically object names.\n+      --  For convenience we handle qualified expressions, even though they\n+      --  aren't technically object names.\n \n       elsif Nkind (Obj) = N_Qualified_Expression then\n          return Object_Access_Level (Expression (Obj));\n \n-      --  Otherwise return the scope level of Standard.\n-      --  (If there are cases that fall through\n-      --  to this point they will be treated as\n-      --  having global accessibility for now. ???)\n+      --  Otherwise return the scope level of Standard. (If there are cases\n+      --  that fall through to this point they will be treated as having\n+      --  global accessibility for now. ???)\n \n       else\n          return Scope_Depth (Standard_Standard);"}, {"sha": "f683b2a4db37658546d336f2419f9a6120b25753", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324ac54054c45c6641e601f02b74568c277f903d/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=324ac54054c45c6641e601f02b74568c277f903d", "patch": "@@ -200,15 +200,15 @@ package body Sem_Warn is\n \n       if No (Asm_Input_Value) then\n          Error_Msg_F\n-           (\"?code statement with no inputs should usually be Volatile!\", N);\n+           (\"??code statement with no inputs should usually be Volatile!\", N);\n          return;\n       end if;\n \n       Setup_Asm_Outputs (N);\n \n       if No (Asm_Output_Variable) then\n          Error_Msg_F\n-           (\"?code statement with no outputs should usually be Volatile!\", N);\n+           (\"??code statement with no outputs should usually be Volatile!\", N);\n          return;\n       end if;\n    end Check_Code_Statement;\n@@ -707,9 +707,9 @@ package body Sem_Warn is\n \n       if No_Ref_Found (Loop_Statement) = OK then\n          Error_Msg_NE\n-           (\"?variable& is not modified in loop body!\", Ref, Var);\n+           (\"??variable& is not modified in loop body!\", Ref, Var);\n          Error_Msg_N\n-           (\"\\?possible infinite loop!\", Ref);\n+           (\"\\??possible infinite loop!\", Ref);\n       end if;\n    end Check_Infinite_Loop_Warning;\n \n@@ -1057,7 +1057,7 @@ package body Sem_Warn is\n                   --  the designated object).\n \n                   if not Warnings_Off_E1 then\n-                     Error_Msg_NE (\"?& may be null!\", UR, E1);\n+                     Error_Msg_NE (\"??& may be null!\", UR, E1);\n                   end if;\n \n                   goto Continue;\n@@ -1083,7 +1083,7 @@ package body Sem_Warn is\n                     and then not Is_Imported (E1)\n                   then\n                      Error_Msg_N\n-                       (\"?& is not modified, volatile has no effect!\", E1);\n+                       (\"??& is not modified, volatile has no effect!\", E1);\n \n                   --  Another special case, Exception_Occurrence, this catches\n                   --  the case of exception choice (and a bit more too, but not\n@@ -1105,7 +1105,7 @@ package body Sem_Warn is\n                         then\n                            if not Warnings_Off_E1 then\n                               Error_Msg_N -- CODEFIX\n-                                (\"?& is not modified, \"\n+                                (\"??& is not modified, \"\n                                  & \"could be declared constant!\",\n                                  E1);\n                            end if;\n@@ -1237,15 +1237,15 @@ package body Sem_Warn is\n                              and then not Warnings_Off_E1\n                            then\n                               Output_Reference_Error\n-                                (\"?formal parameter& is read but \"\n+                                (\"?v?formal parameter& is read but \"\n                                  & \"never assigned!\");\n                            end if;\n \n                         elsif not Has_Pragma_Unreferenced_Check_Spec (E1)\n                           and then not Warnings_Off_E1\n                         then\n                            Output_Reference_Error\n-                             (\"?formal parameter& is not referenced!\");\n+                             (\"?v?formal parameter& is not referenced!\");\n                         end if;\n                      end if;\n \n@@ -1257,14 +1257,14 @@ package body Sem_Warn is\n                           and then not Warnings_Off_E1\n                         then\n                            Output_Reference_Error\n-                             (\"?variable& is read but never assigned!\");\n+                             (\"?v?variable& is read but never assigned!\");\n                         end if;\n \n                      elsif not Has_Unreferenced (E1)\n                        and then not Warnings_Off_E1\n                      then\n                         Output_Reference_Error -- CODEFIX\n-                          (\"?variable& is never read and never assigned!\");\n+                          (\"?v?variable& is never read and never assigned!\");\n                      end if;\n \n                      --  Deal with special case where this variable is hidden\n@@ -1275,12 +1275,12 @@ package body Sem_Warn is\n                        and then not Warnings_Off_E1\n                      then\n                         Error_Msg_N\n-                          (\"?for loop implicitly declares loop variable!\",\n+                          (\"?v?for loop implicitly declares loop variable!\",\n                            Hiding_Loop_Variable (E1));\n \n                         Error_Msg_Sloc := Sloc (E1);\n                         Error_Msg_N\n-                          (\"\\?declaration hides & declared#!\",\n+                          (\"\\?v?declaration hides & declared#!\",\n                            Hiding_Loop_Variable (E1));\n                      end if;\n                   end if;\n@@ -1321,7 +1321,8 @@ package body Sem_Warn is\n                      then\n                         if not Warnings_Off_E1 then\n                            Error_Msg_NE\n-                             (\"?OUT parameter& not set before return\", UR, E1);\n+                             (\"?v?OUT parameter& not set before return\",\n+                              UR, E1);\n                         end if;\n \n                         --  If the unset reference is a selected component"}]}