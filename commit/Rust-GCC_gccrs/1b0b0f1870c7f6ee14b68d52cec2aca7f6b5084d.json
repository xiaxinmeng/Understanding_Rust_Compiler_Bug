{"sha": "1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwYjBmMTg3MGM3ZjZlZTE0YjY4ZDUyY2VjMmFjYTdmNmI1MDg0ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2010-10-11T10:02:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T10:02:09Z"}, "message": "gnat_rm.texi, [...] (Analyze_Attribute, [...]): Add handling of Attribute_Ref.\n\n2010-10-11  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_rm.texi, exp_attr.adb, sem_attr.adb, sem_attr.ads,\n\tsnames.ads-tmpl (Analyze_Attribute, Expand_N_Attribute_Reference): Add\n\thandling of Attribute_Ref. Add missing blanks in some error messages.\n\t(Attribute_Ref, Name_Ref): Declare.\n\tDocument 'Ref attribute.\n\nFrom-SVN: r165291", "tree": {"sha": "43baf9e9ccbab4d15c3921dd6055175f7fece5e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43baf9e9ccbab4d15c3921dd6055175f7fece5e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddc1515a6469f08f9b528a6aeb2827683eb1a469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc1515a6469f08f9b528a6aeb2827683eb1a469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc1515a6469f08f9b528a6aeb2827683eb1a469"}], "stats": {"total": 70, "additions": 62, "deletions": 8}, "files": [{"sha": "be1da2d7af15bc69ac33aa4bb08c5f7bd11e3c8a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "patch": "@@ -1,3 +1,11 @@\n+2010-10-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_rm.texi, exp_attr.adb, sem_attr.adb, sem_attr.ads,\n+\tsnames.ads-tmpl (Analyze_Attribute, Expand_N_Attribute_Reference): Add\n+\thandling of Attribute_Ref. Add missing blanks in some error messages.\n+\t(Attribute_Ref, Name_Ref): Declare.\n+\tDocument 'Ref attribute.\n+\n 2010-10-11  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_attr.adb: Minor reformatting."}, {"sha": "7b29d7a3e147fc320cefac7b04445b3af8e31277", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "patch": "@@ -3792,6 +3792,12 @@ package body Exp_Attr is\n          Rewrite_Stream_Proc_Call (Pname);\n       end Read;\n \n+      ---------\n+      -- Ref --\n+      ---------\n+\n+      --  Ref is identical to To_Address, see To_Address for processing\n+\n       ---------------\n       -- Remainder --\n       ---------------\n@@ -4507,10 +4513,10 @@ package body Exp_Attr is\n       -- To_Address --\n       ----------------\n \n-      --  Transforms System'To_Address (X) into unchecked conversion\n-      --  from (integral) type of X to type address.\n+      --  Transforms System'To_Address (X) and System.Address'Ref (X) into\n+      --  unchecked conversion from (integral) type of X to type address.\n \n-      when Attribute_To_Address =>\n+      when Attribute_To_Address | Attribute_Ref =>\n          Rewrite (N,\n            Unchecked_Convert_To (RTE (RE_Address),\n              Relocate_Node (First (Exprs))));"}, {"sha": "0e61132323580b09b86776260bbbfd42cc81cd44", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "patch": "@@ -5582,6 +5582,7 @@ consideration, you should minimize the use of these attributes.\n * Passed_By_Reference::\n * Pool_Address::\n * Range_Length::\n+* Ref::\n * Result::\n * Safe_Emax::\n * Safe_Large::\n@@ -6234,6 +6235,16 @@ range).  The result is static for static subtypes.  @code{Range_Length}\n applied to the index subtype of a one dimensional array always gives the\n same result as @code{Range} applied to the array itself.\n \n+@node Ref\n+@unnumberedsec Ref\n+@findex Ref\n+@noindent\n+The @code{System.Address'Ref}\n+(@code{System.Address} is the only permissible prefix)\n+denotes a function identical to\n+@code{System.Storage_Elements.To_Address} except that\n+it is a static attribute.  See @ref{To_Address} for more details.\n+\n @node Result\n @unnumberedsec Result\n @findex Result"}, {"sha": "75cc2db21ff0fef2ba8bfb9d8c78d529475d095f", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "patch": "@@ -2989,7 +2989,7 @@ package body Sem_Attr is\n                        Ekind (Entity (P)) /= E_Enumeration_Literal)\n             then\n                Error_Attr_P\n-                 (\"prefix of %attribute must be \" &\n+                 (\"prefix of % attribute must be \" &\n                   \"discrete type/object or enum literal\");\n             end if;\n          end if;\n@@ -3461,7 +3461,7 @@ package body Sem_Attr is\n             elsif UI_To_Int (Intval (E1)) > Number_Formals (Entity (P))\n               or else UI_To_Int (Intval (E1)) < 0\n             then\n-               Error_Attr (\"invalid parameter number for %attribute\", E1);\n+               Error_Attr (\"invalid parameter number for % attribute\", E1);\n             end if;\n          end if;\n \n@@ -4010,6 +4010,23 @@ package body Sem_Attr is\n          Resolve (N, Standard_Void_Type);\n          Note_Possible_Modification (E2, Sure => True);\n \n+      ---------\n+      -- Ref --\n+      ---------\n+\n+      when Attribute_Ref =>\n+         Check_E1;\n+         Analyze (P);\n+\n+         if Nkind (P) /= N_Expanded_Name\n+           or else not Is_RTE (P_Type, RE_Address)\n+         then\n+            Error_Attr_P (\"prefix of % attribute must be System.Address\");\n+         end if;\n+\n+         Analyze_And_Resolve (E1, Any_Integer);\n+         Set_Etype (N, RTE (RE_Address));\n+\n       ---------------\n       -- Remainder --\n       ---------------\n@@ -4405,7 +4422,7 @@ package body Sem_Attr is\n          if Nkind (P) /= N_Identifier\n            or else Chars (P) /= Name_System\n          then\n-            Error_Attr_P (\"prefix of %attribute must be System\");\n+            Error_Attr_P (\"prefix of % attribute must be System\");\n          end if;\n \n          Generate_Reference (RTE (RE_Address), P);\n@@ -7630,6 +7647,7 @@ package body Sem_Attr is\n            Attribute_Position                 |\n            Attribute_Priority                 |\n            Attribute_Read                     |\n+           Attribute_Ref                      |\n            Attribute_Result                   |\n            Attribute_Storage_Pool             |\n            Attribute_Storage_Size             |"}, {"sha": "b1a61501f2d64cefbfa84f4f7c117a9d87743481", "filename": "gcc/ada/sem_attr.ads", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fsem_attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fsem_attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.ads?ref=1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -395,6 +395,15 @@ package Sem_Attr is\n       --  as Range applied to the array itself. The result is of type universal\n       --  integer.\n \n+      ---------\n+      -- Ref --\n+      ---------\n+\n+      Attribute_Ref => True,\n+      --  System.Address'Ref (Address is the only permissible prefix) is\n+      --  equivalent to System'To_Address, provided for compatibility with\n+      --  other compilers.\n+\n       ------------------\n       -- Storage_Unit --\n       ------------------\n@@ -439,7 +448,7 @@ package Sem_Attr is\n       ----------------\n \n       Attribute_To_Address => True,\n-      --  System'To_Address (Address is the only permissible prefix) is a\n+      --  System'To_Address (System is the only permissible prefix) is a\n       --  function that takes any integer value, and converts it into an\n       --  address value. The semantics is to first convert the integer value to\n       --  type Integer_Address according to normal conversion rules, and then"}, {"sha": "18357cc77f439eb0976287d91bf45677927381d5", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=1b0b0f1870c7f6ee14b68d52cec2aca7f6b5084d", "patch": "@@ -781,6 +781,7 @@ package Snames is\n    Name_Priority                       : constant Name_Id := N + $; -- Ada 05\n    Name_Range                          : constant Name_Id := N + $;\n    Name_Range_Length                   : constant Name_Id := N + $; -- GNAT\n+   Name_Ref                            : constant Name_Id := N + $; -- GNAT\n    Name_Result                         : constant Name_Id := N + $; -- GNAT\n    Name_Round                          : constant Name_Id := N + $;\n    Name_Safe_Emax                      : constant Name_Id := N + $; -- Ada 83\n@@ -1297,6 +1298,7 @@ package Snames is\n       Attribute_Priority,\n       Attribute_Range,\n       Attribute_Range_Length,\n+      Attribute_Ref,\n       Attribute_Result,\n       Attribute_Round,\n       Attribute_Safe_Emax,"}]}