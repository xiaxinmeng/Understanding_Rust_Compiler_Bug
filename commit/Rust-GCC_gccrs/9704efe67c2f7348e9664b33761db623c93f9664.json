{"sha": "9704efe67c2f7348e9664b33761db623c93f9664", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwNGVmZTY3YzJmNzM0OGU5NjY0YjMzNzYxZGI2MjNjOTNmOTY2NA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-07-26T18:17:32Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-07-26T18:17:32Z"}, "message": "install EH code\n\nFrom-SVN: r12568", "tree": {"sha": "8d8e5ea96872888ab3085c60560c7e2997a1aa9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d8e5ea96872888ab3085c60560c7e2997a1aa9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9704efe67c2f7348e9664b33761db623c93f9664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9704efe67c2f7348e9664b33761db623c93f9664", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9704efe67c2f7348e9664b33761db623c93f9664", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9704efe67c2f7348e9664b33761db623c93f9664/comments", "author": null, "committer": null, "parents": [{"sha": "39950dff997d3a75c807c1339ccf7bb4991e6104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39950dff997d3a75c807c1339ccf7bb4991e6104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39950dff997d3a75c807c1339ccf7bb4991e6104"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "c365e64df6fc39bdfe3e093103be87721a392776", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=9704efe67c2f7348e9664b33761db623c93f9664", "patch": "@@ -2310,6 +2310,13 @@ extern int rs6000_trunc_used;\n \n #define READONLY_DATA_SECTION read_only_data_section\n \n+\n+/* Define the name of the section to use for the exception tables.\n+   TODO: test and see if we can use read_only_data_section, if so,\n+   remove this.  */\n+\n+#define EXCEPTION_SECTION data_section\n+\n /* If we are referencing a function that is static or is known to be\n    in this file, make the SYMBOL_REF special.  We can use this to indicate\n    that we can branch to this function without emitting a no-op after the"}, {"sha": "44cba6a8b244a702fe69a4793d45530ea85276d3", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=9704efe67c2f7348e9664b33761db623c93f9664", "patch": "@@ -895,7 +895,7 @@ extern int sparc_mode_class[];\n #define FRAME_POINTER_REGNUM 30\n \n #if 0\n-/* Register that is used for the return address.  */\n+/* Register that is used for the return address for the flat model.  */\n #define RETURN_ADDR_REGNUM 15\n #endif\n \n@@ -2168,6 +2168,8 @@ extern struct rtx_def *sparc_builtin_saveregs ();\n    ? gen_rtx (REG, Pmode, 31)\t\t\t\\\n    : gen_rtx (MEM, Pmode,\t\t\t\\\n \t      memory_address (Pmode, plus_constant (frame, 15 * UNITS_PER_WORD))))\n+\n+#define DOESNT_NEED_UNWINDER (! TARGET_FLAT)\n \f\n /* Addressing modes, and classification of registers for them.  */\n "}, {"sha": "b5a6b36174bc737832d0bed44b0472d7c1b0800c", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=9704efe67c2f7348e9664b33761db623c93f9664", "patch": "@@ -5392,7 +5392,8 @@\n   [(set_attr \"type\" \"multi\")])\n \f\n (define_insn \"return\"\n-  [(return)]\n+  [(return)\n+   (use (reg:SI 31))]\n   \"! TARGET_EPILOGUE\"\n   \"* return output_return (operands);\"\n   [(set_attr \"type\" \"multi\")])"}, {"sha": "ddd8ac5f6fcaa0f1a80cfd850a56ff6e98b53716", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9704efe67c2f7348e9664b33761db623c93f9664/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=9704efe67c2f7348e9664b33761db623c93f9664", "patch": "@@ -566,7 +566,9 @@ gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n    can ignore COUNT.  */\n \n #define RETURN_ADDR_RTX(COUNT, FRAME)\t\\\n-  gen_rtx (MEM, Pmode, plus_constant (FRAME, RETURN_ADDRESS_OFFSET))\n+  ((COUNT == 0)\t\t\t\t\\\n+   ? gen_rtx (MEM, Pmode, plus_constant (FRAME, RETURN_ADDRESS_OFFSET)) \\\n+   : (rtx) 0)\n \n \f\n /* Addressing modes, and classification of registers for them.  */"}]}