{"sha": "1803581d7698029091783f8c9ac6220aa52ccec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgwMzU4MWQ3Njk4MDI5MDkxNzgzZjhjOWFjNjIyMGFhNTJjY2VjNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-03-09T12:06:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-03-09T12:06:23Z"}, "message": "* fold-const.c (fold_unary): Fix comment.\n\nFrom-SVN: r144723", "tree": {"sha": "dd8a6c24ca4b2cd5bec8db756c897406137899dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd8a6c24ca4b2cd5bec8db756c897406137899dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1803581d7698029091783f8c9ac6220aa52ccec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1803581d7698029091783f8c9ac6220aa52ccec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1803581d7698029091783f8c9ac6220aa52ccec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1803581d7698029091783f8c9ac6220aa52ccec5/comments", "author": null, "committer": null, "parents": [{"sha": "b958b842c03d676b7ebbf2d3511005db401bba4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b958b842c03d676b7ebbf2d3511005db401bba4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b958b842c03d676b7ebbf2d3511005db401bba4a"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "9ab8b72ee35c0206271267d10265e3c764103a1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1803581d7698029091783f8c9ac6220aa52ccec5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1803581d7698029091783f8c9ac6220aa52ccec5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1803581d7698029091783f8c9ac6220aa52ccec5", "patch": "@@ -1,3 +1,7 @@\n+2009-03-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fold-const.c (fold_unary): Fix comment.\n+\n 2009-03-07  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/39361"}, {"sha": "97331f34d24e039357923e98da50ae5dc2db681f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1803581d7698029091783f8c9ac6220aa52ccec5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1803581d7698029091783f8c9ac6220aa52ccec5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1803581d7698029091783f8c9ac6220aa52ccec5", "patch": "@@ -8174,12 +8174,12 @@ fold_unary (enum tree_code code, tree type, tree op0)\n \t      && inter_prec >= final_prec)\n \t    return fold_build1 (code, type, TREE_OPERAND (op0, 0));\n \n-\t  /* Likewise, if the intermediate and final types are either both\n-\t     float or both integer, we don't need the middle conversion if\n-\t     it is wider than the final type and doesn't change the signedness\n-\t     (for integers).  Avoid this if the final type is a pointer\n-\t     since then we sometimes need the inner conversion.  Likewise if\n-\t     the outer has a precision not equal to the size of its mode.  */\n+\t  /* Likewise, if the intermediate and initial types are either both\n+\t     float or both integer, we don't need the middle conversion if the\n+\t     former is wider than the latter and doesn't change the signedness\n+\t     (for integers).  Avoid this if the final type is a pointer since\n+\t     then we sometimes need the middle conversion.  Likewise if the\n+\t     final type has a precision not equal to the size of its mode.  */\n \t  if (((inter_int && inside_int)\n \t       || (inter_float && inside_float)\n \t       || (inter_vec && inside_vec))"}]}