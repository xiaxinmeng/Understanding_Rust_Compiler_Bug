{"sha": "c2504783d9706227f0efa869ce8b5bbd6df51365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI1MDQ3ODNkOTcwNjIyN2YwZWZhODY5Y2U4YjViYmQ2ZGY1MTM2NQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-08-19T09:58:57Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-08-19T09:58:57Z"}, "message": "gimplify.c (gimplify_minimax_expr): Remove.\n\n2004-08-19  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* gimplify.c (gimplify_minimax_expr): Remove.\n\t(gimplify_expr) <MIN_EXPR, MAX_EXPR>: Remove special handling.\n\nFrom-SVN: r86245", "tree": {"sha": "3c7374d0f9652c38c43cc38f328f791e4bf26aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7374d0f9652c38c43cc38f328f791e4bf26aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2504783d9706227f0efa869ce8b5bbd6df51365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2504783d9706227f0efa869ce8b5bbd6df51365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2504783d9706227f0efa869ce8b5bbd6df51365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2504783d9706227f0efa869ce8b5bbd6df51365/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "476a918f8c45c44de2c13ced19a850c8afd2be1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/476a918f8c45c44de2c13ced19a850c8afd2be1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/476a918f8c45c44de2c13ced19a850c8afd2be1d"}], "stats": {"total": 38, "additions": 5, "deletions": 33}, "files": [{"sha": "afb0665def5f18146b1f57ee5d13ef3a7d53c63b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2504783d9706227f0efa869ce8b5bbd6df51365/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2504783d9706227f0efa869ce8b5bbd6df51365/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2504783d9706227f0efa869ce8b5bbd6df51365", "patch": "@@ -1,3 +1,8 @@\n+2004-08-19  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* gimplify.c (gimplify_minimax_expr): Remove.\n+\t(gimplify_expr) <MIN_EXPR, MAX_EXPR>: Remove special handling.\n+\n 2004-08-19  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* tree-vectorizer.c (vect_can_force_dr_alignment_p): Replace "}, {"sha": "3dba42d9b8564781eb4b2144b2d8b5bb67bec7a1", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2504783d9706227f0efa869ce8b5bbd6df51365/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2504783d9706227f0efa869ce8b5bbd6df51365/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=c2504783d9706227f0efa869ce8b5bbd6df51365", "patch": "@@ -1426,34 +1426,6 @@ gimplify_conversion (tree *expr_p)\n   return GS_OK;\n }\n \n-/* Reduce MIN/MAX_EXPR to a COND_EXPR for further gimplification.  */\n-\n-static enum gimplify_status\n-gimplify_minimax_expr (tree *expr_p, tree *pre_p, tree *post_p)\n-{\n-  tree op1 = TREE_OPERAND (*expr_p, 0);\n-  tree op2 = TREE_OPERAND (*expr_p, 1);\n-  enum tree_code code;\n-  enum gimplify_status r0, r1;\n-\n-  if (TREE_CODE (*expr_p) == MIN_EXPR)\n-    code = LE_EXPR;\n-  else\n-    code = GE_EXPR;\n-\n-  r0 = gimplify_expr (&op1, pre_p, post_p, is_gimple_val, fb_rvalue);\n-  r1 = gimplify_expr (&op2, pre_p, post_p, is_gimple_val, fb_rvalue);\n-\n-  *expr_p = build (COND_EXPR, TREE_TYPE (*expr_p),\n-\t\t   build (code, boolean_type_node, op1, op2),\n-\t\t   op1, op2);\n-\n-  if (r0 == GS_ERROR || r1 == GS_ERROR)\n-    return GS_ERROR;\n-  else\n-    return GS_OK;\n-}\n-\n /* Subroutine of gimplify_compound_lval.\n    Converts an ARRAY_REF to the equivalent *(&array + offset) form.  */\n \n@@ -3885,11 +3857,6 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \t  }\n \t  break;\n \n-\tcase MIN_EXPR:\n-\tcase MAX_EXPR:\n-\t  ret = gimplify_minimax_expr (expr_p, pre_p, post_p);\n-\t  break;\n-\n \tcase LABEL_DECL:\n \t  /* We get here when taking the address of a label.  We mark\n \t     the label as \"forced\"; meaning it can never be removed and"}]}