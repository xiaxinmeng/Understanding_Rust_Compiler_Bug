{"sha": "929c046d575c273e80000310b88c24af94cc4cf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5YzA0NmQ1NzVjMjczZTgwMDAwMzEwYjg4YzI0YWY5NGNjNGNmOA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2019-05-31T12:22:52Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2019-05-31T12:22:52Z"}, "message": "cpu-future.c: Require powerpc_future_ok.\n\n2019-05-31  Bill Schmidt  <wschmidt@linux.ibm.com>\n\t    Michael Meissner  <meissner@linux.ibm.com>\n\n\t* gcc.target/powerpc/cpu-future.c: Require powerpc_future_ok.\n\t* gcc.target/powerpc/localentry-1.c: Likewise.\n\t* gcc.target/powerpc/localentry-direct-1.c: Likewise.\n\t* gcc.target/powerpc/notoc-direct-1.c: Likewise.\n\t* gcc.target/powerpc/pcrel-sibcall-1.c: Likewise.\n\t* lib/target-supports.exp (check_powerpc_future_hw_available): New.\n\t(check_effective_target_powerpc_future_ok): New.\n\n\nCo-Authored-By: Michael Meissner <meissner@linux.ibm.com>\n\nFrom-SVN: r271810", "tree": {"sha": "931307ad9553734fa2961295b6aa30114785e262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/931307ad9553734fa2961295b6aa30114785e262"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/929c046d575c273e80000310b88c24af94cc4cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929c046d575c273e80000310b88c24af94cc4cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929c046d575c273e80000310b88c24af94cc4cf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929c046d575c273e80000310b88c24af94cc4cf8/comments", "author": null, "committer": null, "parents": [{"sha": "3228289e1efc9712b12f5ce7d6a0ef5cfca11f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3228289e1efc9712b12f5ce7d6a0ef5cfca11f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3228289e1efc9712b12f5ce7d6a0ef5cfca11f0d"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "31743766289e1099af45ae22e1e73a2f9e2eb9ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -1,3 +1,14 @@\n+2019-05-31  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\t    Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/cpu-future.c: Require powerpc_future_ok.\n+\t* gcc.target/powerpc/localentry-1.c: Likewise.\n+\t* gcc.target/powerpc/localentry-direct-1.c: Likewise.\n+\t* gcc.target/powerpc/notoc-direct-1.c: Likewise.\n+\t* gcc.target/powerpc/pcrel-sibcall-1.c: Likewise.\n+\t* lib/target-supports.exp (check_powerpc_future_hw_available): New.\n+\t(check_effective_target_powerpc_future_ok): New.\n+\n 2019-05-31  Thomas De Schampheleire  <thomas.de_schampheleire@nokia.com>\n \n \tPR debug/86964"}, {"sha": "ae406d08b238e3d7179b104ffbba5b6573badd54", "filename": "gcc/testsuite/gcc.target/powerpc/cpu-future.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcpu-future.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcpu-future.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcpu-future.c?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_future_ok } */\n /* { dg-options \"-mdejagnu-cpu=future -O2\" } */\n \n /* Ensure -mcpu=future compiles cleanly.  */"}, {"sha": "dc4867d0a3c3902a823697754faad68c97d063d2", "filename": "gcc/testsuite/gcc.target/powerpc/localentry-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flocalentry-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flocalentry-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flocalentry-1.c?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mdejagnu-cpu=future -O2\" } */\n /* { dg-require-effective-target powerpc_elfv2 } */\n+/* { dg-require-effective-target powerpc_future_ok } */\n \n /* Ensure we generate \".localentry fn,1\" for both leaf and non-leaf\n    functions.  */"}, {"sha": "70b18ff0aca9f1eb632fe51c9cdda0e21d107bd9", "filename": "gcc/testsuite/gcc.target/powerpc/localentry-detect-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flocalentry-detect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flocalentry-detect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Flocalentry-detect-1.c?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_elfv2 } */\n+/* { dg-require-effective-target powerpc_future_ok } */\n /* { dg-options \"-O2 -mdejagnu-cpu=future\" } */\n \n "}, {"sha": "0917f307e65ac0b4b9fee1caddfa04f47d02848d", "filename": "gcc/testsuite/gcc.target/powerpc/notoc-direct-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fnotoc-direct-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fnotoc-direct-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fnotoc-direct-1.c?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mdejagnu-cpu=future -O2\" } */\n /* { dg-require-effective-target powerpc_elfv2 } */\n+/* { dg-require-effective-target powerpc_future_ok } */\n \n /* Test that calls generated from PC-relative code are\n    annotated with @notoc.  */"}, {"sha": "bd7a0a9bcda25bcecb9d201ca5061052cc76b074", "filename": "gcc/testsuite/gcc.target/powerpc/pcrel-sibcall-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpcrel-sibcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpcrel-sibcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpcrel-sibcall-1.c?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mdejagnu-cpu=future -O2\" } */\n /* { dg-require-effective-target powerpc_elfv2 } */\n+/* { dg-require-effective-target powerpc_future_ok } */\n \n /* Test that potential sibcalls are not generated when the caller preserves\n    the TOC and the callee doesn't, or vice versa.  */"}, {"sha": "6aa814b35bc2e0b7e187e9d42e7b2666f93d74a7", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929c046d575c273e80000310b88c24af94cc4cf8/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=929c046d575c273e80000310b88c24af94cc4cf8", "patch": "@@ -2140,6 +2140,25 @@ proc check_p9modulo_hw_available { } {\n     }]\n }\n \n+\n+# Return 1 if the target supports executing FUTURE instructions, 0 otherwise.\n+# Cache the result.  It is assumed that if a simulator does not support the\n+# FUTURE instructions, that it will generate an error and this test will fail.\n+\n+proc check_powerpc_future_hw_available { } {\n+    return [check_cached_effective_target powerpc_future_hw_available {\n+\tcheck_runtime_nocache powerpc_future_hw_available {\n+\t    int main()\n+\t    {\n+\t\t/* Set e first and use +r to check if pli actually works.  */\n+\t\tlong e = -1;\n+\t\tasm (\"pli %0,%1\" : \"+r\" (e) : \"n\" (0x12345));\n+\t\treturn (e == 0x12345);\n+\t    }\n+\t} \"-mfuture\"\n+    }]\n+}\n+\n # Return 1 if the target supports executing __float128 on PowerPC via software\n # emulation, 0 otherwise.  Cache the result.\n \n@@ -5157,6 +5176,24 @@ proc check_effective_target_powerpc_p9modulo_ok { } {\n     }\n }\n \n+# Return 1 if this is a PowerPC target supporting -mfuture.\n+# Limit this to 64-bit linux systems for now until other\n+# targets support FUTURE.\n+\n+proc check_effective_target_powerpc_future_ok { } {\n+    if { ([istarget powerpc64*-*-linux*]) } {\n+\treturn [check_no_compiler_messages powerpc_future_ok object {\n+\t    int main (void) {\n+\t\tlong e;\n+\t\tasm (\"pli %0,%1\" : \"=r\" (e) : \"n\" (0x12345));\n+\t\treturn e;\n+\t    }\n+\t} \"-mfuture\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is a PowerPC target supporting -mfloat128 via either\n # software emulation on power7/power8 systems or hardware support on power9.\n "}]}