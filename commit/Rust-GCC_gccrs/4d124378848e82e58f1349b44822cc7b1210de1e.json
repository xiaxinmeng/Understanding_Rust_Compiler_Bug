{"sha": "4d124378848e82e58f1349b44822cc7b1210de1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQxMjQzNzg4NDhlODJlNThmMTM0OWI0NDgyMmNjN2IxMjEwZGUxZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-01-03T08:08:30Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2020-01-03T08:08:30Z"}, "message": "Fortran] PR 92994 \u2013 add more ASSOCIATE checks\n\n        PR fortran/92994\n        * primary.c (gfc_match_rvalue): Add some flavor checks\n        gfc_matching_procptr_assignment.\n        * resolve.c (resolve_assoc_var): Add more checks for invalid targets.\n\n        PR fortran/92994\n        * gfortran.dg/associate_50.f90: Update dg-error.\n        * gfortran.dg/associate_51.f90: New.\n\nFrom-SVN: r279853", "tree": {"sha": "a639757f5a1c9424f7007323e1bec9db3de8c610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a639757f5a1c9424f7007323e1bec9db3de8c610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d124378848e82e58f1349b44822cc7b1210de1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d124378848e82e58f1349b44822cc7b1210de1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d124378848e82e58f1349b44822cc7b1210de1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d124378848e82e58f1349b44822cc7b1210de1e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "208cb81f98da659cca6e9b8bfec524e3f5aaffcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/208cb81f98da659cca6e9b8bfec524e3f5aaffcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/208cb81f98da659cca6e9b8bfec524e3f5aaffcf"}], "stats": {"total": 106, "additions": 101, "deletions": 5}, "files": [{"sha": "7f1bdc04be12d76613e59adc4b86d108ddad62b9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4d124378848e82e58f1349b44822cc7b1210de1e", "patch": "@@ -1,3 +1,10 @@\n+2020-01-03  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92994\n+\t* primary.c (gfc_match_rvalue): Add some flavor checks\n+\tgfc_matching_procptr_assignment.\n+\t* resolve.c (resolve_assoc_var): Add more checks for invalid targets.\n+\n 2020-01-02  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/68020"}, {"sha": "e2b6fcb21062f259ec5775e078f62920d45006c4", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=4d124378848e82e58f1349b44822cc7b1210de1e", "patch": "@@ -3447,7 +3447,19 @@ gfc_match_rvalue (gfc_expr **result)\n     }\n \n   if (gfc_matching_procptr_assignment)\n-    goto procptr0;\n+    {\n+      /* It can be a procedure or a derived-type procedure or a not-yet-known\n+\t type.  */\n+      if (sym->attr.flavor != FL_UNKNOWN\n+\t  && sym->attr.flavor != FL_PROCEDURE\n+\t  && sym->attr.flavor != FL_PARAMETER\n+\t  && sym->attr.flavor != FL_VARIABLE)\n+\t{\n+\t  gfc_error (\"Symbol at %C is not appropriate for an expression\");\n+\t  return MATCH_ERROR;\n+\t}\n+      goto procptr0;\n+    }\n \n   if (sym->attr.function || sym->attr.external || sym->attr.intrinsic)\n     goto function0;"}, {"sha": "6f2a4c4d65aa1384a07a7df3cfc40fc54da54e69", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=4d124378848e82e58f1349b44822cc7b1210de1e", "patch": "@@ -8836,9 +8836,20 @@ resolve_assoc_var (gfc_symbol* sym, bool resolve_target)\n \n       gcc_assert (target->symtree);\n       tsym = target->symtree->n.sym;\n-      if (tsym->attr.flavor == FL_PROGRAM)\n+\n+      if (tsym->attr.subroutine\n+\t  || tsym->attr.external\n+\t  || (tsym->attr.function\n+\t      && (tsym->result != tsym || tsym->attr.recursive)))\n \t{\n-\t  gfc_error (\"Associating entity %qs at %L is a PROGRAM\",\n+\t  gfc_error (\"Associating entity %qs at %L is a procedure name\",\n+\t\t     tsym->name, &target->where);\n+\t  return;\n+\t}\n+\n+      if (gfc_expr_attr (target).proc_pointer)\n+\t{\n+\t  gfc_error (\"Associating entity %qs at %L is a procedure pointer\",\n \t\t     tsym->name, &target->where);\n \t  return;\n \t}\n@@ -8851,6 +8862,12 @@ resolve_assoc_var (gfc_symbol* sym, bool resolve_target)\n       if (is_subref_array (target))\n \tsym->attr.subref_array_pointer = 1;\n     }\n+  else if (target->ts.type == BT_PROCEDURE)\n+    {\n+      gfc_error (\"Associating selector-expression at %L yields a procedure\",\n+\t\t &target->where);\n+      return;\n+    }\n \n   if (target->expr_type == EXPR_NULL)\n     {"}, {"sha": "2a3a45e46896b8ad99cd06c43ab09a30aa2d63d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d124378848e82e58f1349b44822cc7b1210de1e", "patch": "@@ -1,3 +1,9 @@\n+2020-01-03  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92994\n+\t* gfortran.dg/associate_50.f90: Update dg-error.\n+\t* gfortran.dg/associate_51.f90: New.\n+\n 2020-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/68020"}, {"sha": "990ec58bffe13833ae53148d74d93f4dd600151e", "filename": "gcc/testsuite/gfortran.dg/associate_50.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_50.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_50.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_50.f90?ref=4d124378848e82e58f1349b44822cc7b1210de1e", "patch": "@@ -3,6 +3,6 @@\n ! Test case by Gerhard Steinmetz.\n \n program p\n-  associate (y => p) ! { dg-error \"is a PROGRAM\" }\n-  end associate\n+  associate (y => p) ! { dg-error \"Invalid association target\" }\n+  end associate  ! { dg-error \"Expecting END PROGRAM statement\" }\n end program p"}, {"sha": "7b3edc44990f664feb9bcc5549ec04ae65c8b4df", "filename": "gcc/testsuite/gfortran.dg/associate_51.f90", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_51.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d124378848e82e58f1349b44822cc7b1210de1e/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_51.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_51.f90?ref=4d124378848e82e58f1349b44822cc7b1210de1e", "patch": "@@ -0,0 +1,54 @@\n+! { dg-do compile }\n+!\n+! PR fortran/92994\n+!\n+! Contributed by G. Steinmetz\n+!\n+recursive function f() result(z)\n+  associate (y1 => f())\n+  end associate\n+  associate (y2 => f)  ! { dg-error \"is a procedure name\" }\n+  end associate\n+end\n+\n+recursive function f2()\n+  associate (y1 => f2()) ! { dg-error \"Invalid association target\" }\n+  end associate          ! { dg-error \"Expecting END FUNCTION statement\" }\n+  associate (y2 => f2)   ! { dg-error \"is a procedure name\" }\n+  end associate\n+end\n+\n+subroutine p2\n+  type t\n+  end type\n+  type(t) :: z = t()\n+  associate (y => t)\n+  end associate\n+end\n+\n+subroutine p3\n+  procedure() :: g\n+  associate (y => g)  ! { dg-error \"is a procedure name\" }\n+  end associate\n+end\n+\n+subroutine p4\n+  external :: g\n+  associate (y => g)  ! { dg-error \"is a procedure name\" }\n+  end associate\n+end\n+\n+recursive subroutine s\n+  associate (y => s)  ! { dg-error \"is a procedure name\" }\n+  end associate\n+end\n+\n+recursive subroutine s2\n+   associate (y => (s2)) ! { dg-error \"Associating selector-expression at .1. yields a procedure\" }\n+   end associate\n+end\n+\n+program p\n+   associate (y => (p)) ! { dg-error \"Invalid association target\" }\n+   end associate ! { dg-error \"Expecting END PROGRAM statement\" }\n+end"}]}