{"sha": "7a56096cc43d969a180f965a0e6bb07941978fea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1NjA5NmNjNDNkOTY5YTE4MGY5NjVhMGU2YmIwNzk0MTk3OGZlYQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-08-26T20:05:32Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-08-26T20:05:32Z"}, "message": "re PR fortran/91390 (treatment of extra parameter in a subroutine call)\n\n2019-08-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/91390\n\tPR fortran/91473\n\t* frontend-passes.c (gfc_check_externals): Make\n\tgfc_errors_to_warnings conditional on -fallow-argument-mismatch.\n\t* invoke.texi: Document -fallow-argument-mismatch.\n\t* lang.opt: Add -fallow-argument-mismatch.\n\n2019-08-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/91390\n\tPR fortran/91473\n\t* gfortran.dg/used_before_typed_4.f90: Change warning to error.\n\t* gfortran.dg/argument_checking_20.f90: New test.\n\nFrom-SVN: r274937", "tree": {"sha": "4e930d375b599516e1553090c77333e69093573a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e930d375b599516e1553090c77333e69093573a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a56096cc43d969a180f965a0e6bb07941978fea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a56096cc43d969a180f965a0e6bb07941978fea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a56096cc43d969a180f965a0e6bb07941978fea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a56096cc43d969a180f965a0e6bb07941978fea/comments", "author": null, "committer": null, "parents": [{"sha": "4d67cae5e6671aaa433b6d6a96c9da47cfd71b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d67cae5e6671aaa433b6d6a96c9da47cfd71b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d67cae5e6671aaa433b6d6a96c9da47cfd71b45"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "643a7d0829a2dfafc82b617368b5b095cffa5d76", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7a56096cc43d969a180f965a0e6bb07941978fea", "patch": "@@ -1,3 +1,12 @@\n+2019-08-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/91390\n+\tPR fortran/91473\n+\t* frontend-passes.c (gfc_check_externals): Make\n+\tgfc_errors_to_warnings conditional on -fallow-argument-mismatch.\n+\t* invoke.texi: Document -fallow-argument-mismatch.\n+\t* lang.opt: Add -fallow-argument-mismatch.\n+\n 2019-08-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/91390"}, {"sha": "86debab05996b9f527d1cbda4d1113d0136c746d", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=7a56096cc43d969a180f965a0e6bb07941978fea", "patch": "@@ -5477,9 +5477,9 @@ gfc_check_externals (gfc_namespace *ns)\n \n   gfc_clear_error ();\n \n-  /* Turn errors into warnings if -std=legacy is given by the user.  */\n+  /* Turn errors into warnings if the user indicated this.  */\n \n-  if (!pedantic && !(gfc_option.warn_std & GFC_STD_LEGACY))\n+  if (!pedantic && flag_allow_argument_mismatch)\n     gfc_errors_to_warnings (true);\n \n   gfc_code_walker (&ns->code, check_externals_code, check_externals_expr, NULL);"}, {"sha": "0b8abc5076801bfc9d11f865413360df2e6ae30f", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=7a56096cc43d969a180f965a0e6bb07941978fea", "patch": "@@ -116,12 +116,12 @@ by type.  Explanations are in the following sections.\n @table @emph\n @item Fortran Language Options\n @xref{Fortran Dialect Options,,Options controlling Fortran dialect}.\n-@gccoptlist{-fall-intrinsics -fallow-invalid-boz -fbackslash -fcray-pointer @gol\n--fd-lines-as-code -fd-lines-as-comments -fdec -fdec-structure @gol\n--fdec-intrinsic-ints -fdec-static -fdec-math -fdec-include @gol\n+@gccoptlist{-fall-intrinsics -fallow-argument-mismatch -fallow-invalid-boz @gol\n+-fbackslash -fcray-pointer -fd-lines-as-code -fd-lines-as-comments -fdec @gol\n+-fdec-structure-fdec-intrinsic-ints -fdec-static -fdec-math -fdec-include @gol\n -fdec-format-defaults -fdec-blank-format-item -fdefault-double-8 @gol\n -fdefault-integer-8 -fdefault-real-8 -fdefault-real-10 -fdefault-real-16 @gol\n--fdollar-ok @gol -ffixed-line-length-@var{n} -ffixed-line-length-none @gol\n+-fdollar-ok -ffixed-line-length-@var{n} -ffixed-line-length-none @gol\n -fpad-source -ffree-form -ffree-line-length-@var{n} -ffree-line-length-none @gol\n -fimplicit-none -finteger-4-integer-8 -fmax-identifier-length @gol\n -fmodule-private -ffixed-form -fno-range-check -fopenacc -fopenmp @gol\n@@ -232,6 +232,14 @@ available with @command{gfortran}.  As a consequence, @option{-Wintrinsics-std}\n will be ignored and no user-defined procedure with the same name as any\n intrinsic will be called except when it is explicitly declared @code{EXTERNAL}.\n \n+@item -fallow-argument-mismatch\n+@opindex @code{fallow-argument-mismatch}\n+Some code contains calls to external procedures whith mismatches\n+between the calls and the procedure definition, or with mismatches\n+between different calls. Such code is non-conforming, and will usually\n+be flagged with an error.  This options degrades the error to a\n+warning.  This option is implied by @option{-std=legacy}.\n+\n @item -fallow-invalid-boz\n @opindex @code{allow-invalid-boz}\n A BOZ literal constant can occur in a limited number of context in"}, {"sha": "1b3364ba9d312509bb9caf8035fe2291037defd3", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=7a56096cc43d969a180f965a0e6bb07941978fea", "patch": "@@ -365,6 +365,10 @@ d\n Fortran Joined\n ; Documented in common.opt\n \n+fallow-argument-mismatch\n+Fortran Var(flag_allow_argument_mismatch) LangEnabledBy(Fortran,std=legacy)\n+Accept argument mismatches in procedure calls.\n+\n faggressive-function-elimination\n Fortran Var(flag_aggressive_function_elimination)\n Eliminate multiple function invocations also for impure functions."}, {"sha": "5f60dc0b1f73b47613131fdee7fabad4275b7d4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a56096cc43d969a180f965a0e6bb07941978fea", "patch": "@@ -1,3 +1,10 @@\n+2019-08-26  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/91390\n+\tPR fortran/91473\n+\t* gfortran.dg/used_before_typed_4.f90: Change warning to error.\n+\t* gfortran.dg/argument_checking_20.f90: New test.\n+\n 2019-08-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91545 - ICE in constexpr store evaluation."}, {"sha": "0604cfe5638d72609f5c985a2e3b1c59055e6531", "filename": "gcc/testsuite/gfortran.dg/used_before_typed_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_before_typed_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a56096cc43d969a180f965a0e6bb07941978fea/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_before_typed_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fused_before_typed_4.f90?ref=7a56096cc43d969a180f965a0e6bb07941978fea", "patch": "@@ -22,5 +22,5 @@ END SUBROUTINE test\n PROGRAM main\n   IMPLICIT NONE\n   INTEGER :: arr1(42), arr2(42)\n-  CALL test (3, arr1, 2, arr2) ! { dg-warning \"Type mismatch in argument\" }\n+  CALL test (3, arr1, 2, arr2) ! { dg-error \"Type mismatch in argument\" }\n END PROGRAM main"}]}