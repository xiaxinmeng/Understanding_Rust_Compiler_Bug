{"sha": "cb7b01db7a1979a45fd1dce87a8738e80568520e", "node_id": "C_kwDOANBUbNoAKGNiN2IwMWRiN2ExOTc5YTQ1ZmQxZGNlODdhODczOGU4MDU2ODUyMGU", "commit": {"author": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2022-07-11T12:12:33Z"}, "committer": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2022-07-11T12:42:39Z"}, "message": "c-family: Fix option check in handle_pragma_diagnostic [PR106252]\n\nIn r13-1544, handle_pragma_diagnostic was refactored to support processing\nearly pragmas. During that process the part looking up option arguments was\ninadvertenly moved too early, prior to checking the option was valid, causing\nPR106252. Fixed by moving the check back where it goes.\n\ngcc/c-family/ChangeLog:\n\n\tPR preprocessor/106252\n\t* c-pragma.cc (handle_pragma_diagnostic_impl): Don't look up the\n\toption argument prior to verifying the option was found.", "tree": {"sha": "967fb4e26470f69e187903785ea1eb7cdebdd838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/967fb4e26470f69e187903785ea1eb7cdebdd838"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb7b01db7a1979a45fd1dce87a8738e80568520e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7b01db7a1979a45fd1dce87a8738e80568520e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7b01db7a1979a45fd1dce87a8738e80568520e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7b01db7a1979a45fd1dce87a8738e80568520e/comments", "author": null, "committer": null, "parents": [{"sha": "f1782a0a8c46a8897923f8e7aaf3846e86434170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1782a0a8c46a8897923f8e7aaf3846e86434170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1782a0a8c46a8897923f8e7aaf3846e86434170"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "789719e6e6af5d92c4765edc54505f64b0d37c70", "filename": "gcc/c-family/c-pragma.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb7b01db7a1979a45fd1dce87a8738e80568520e/gcc%2Fc-family%2Fc-pragma.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb7b01db7a1979a45fd1dce87a8738e80568520e/gcc%2Fc-family%2Fc-pragma.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.cc?ref=cb7b01db7a1979a45fd1dce87a8738e80568520e", "patch": "@@ -1009,10 +1009,6 @@ handle_pragma_diagnostic_impl ()\n   if (early && !c_option_is_from_cpp_diagnostics (option_index))\n     return;\n \n-  const char *arg = NULL;\n-  if (cl_options[option_index].flags & CL_JOINED)\n-    arg = data.option_str + 1 + cl_options[option_index].opt_len;\n-\n   if (option_index == OPT_SPECIAL_unknown)\n     {\n       if (want_diagnostics)\n@@ -1052,6 +1048,10 @@ handle_pragma_diagnostic_impl ()\n       return;\n     }\n \n+  const char *arg = NULL;\n+  if (cl_options[option_index].flags & CL_JOINED)\n+    arg = data.option_str + 1 + cl_options[option_index].opt_len;\n+\n   struct cl_option_handlers handlers;\n   set_default_handlers (&handlers, NULL);\n   /* FIXME: input_location isn't the best location here, but it is"}]}