{"sha": "73c77563c6409ad46357e083f378716defd9b1a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNjNzc1NjNjNjQwOWFkNDYzNTdlMDgzZjM3ODcxNmRlZmQ5YjFhNw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-08-03T18:54:49Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-08-03T18:54:49Z"}, "message": "re PR rtl-optimization/72778 (internal compiler error: in create_pre_exit, at mode-switching.c:451)\n\n2016-08-03  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/72778\n\t* lra-spills.c (regno_in_use_p): Check bb and regno modification.\n\tDon't stop on regular insns.\n\nFrom-SVN: r239091", "tree": {"sha": "c046941efb74a2e8a43bf0d4c9f9df8640b69577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c046941efb74a2e8a43bf0d4c9f9df8640b69577"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73c77563c6409ad46357e083f378716defd9b1a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c77563c6409ad46357e083f378716defd9b1a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c77563c6409ad46357e083f378716defd9b1a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c77563c6409ad46357e083f378716defd9b1a7/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32eaac9c919b4b907d685370ef23aacc1e94f18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32eaac9c919b4b907d685370ef23aacc1e94f18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32eaac9c919b4b907d685370ef23aacc1e94f18b"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "8dcd430a6c7a9474700588d15ab66384b21ea063", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c77563c6409ad46357e083f378716defd9b1a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c77563c6409ad46357e083f378716defd9b1a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73c77563c6409ad46357e083f378716defd9b1a7", "patch": "@@ -1,3 +1,9 @@\n+2016-08-03  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/72778\n+\t* lra-spills.c (regno_in_use_p): Check bb and regno modification.\n+\tDon't stop on regular insns.\n+\n 2016-08-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/nvptx/nvptx.c (nvptx_declare_function_name): Round frame"}, {"sha": "d7529ea371fd4129fcba0b3475b72e60b15a0845", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c77563c6409ad46357e083f378716defd9b1a7/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c77563c6409ad46357e083f378716defd9b1a7/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=73c77563c6409ad46357e083f378716defd9b1a7", "patch": "@@ -686,16 +686,40 @@ return_regno_p (unsigned int regno)\n   return false;\n }\n \n-/* Return true if REGNO is one of subsequent USE after INSN.  */\n+/* Return true if REGNO is in one of subsequent USE after INSN in the\n+   same BB.  */\n static bool\n regno_in_use_p (rtx_insn *insn, unsigned int regno)\n {\n+  static lra_insn_recog_data_t id;\n+  static struct lra_static_insn_data *static_id;\n+  struct lra_insn_reg *reg;\n+  int i, arg_regno;\n+  basic_block bb = BLOCK_FOR_INSN (insn);\n+\n   while ((insn = next_nondebug_insn (insn)) != NULL_RTX\n-\t && INSN_P (insn) && GET_CODE (PATTERN (insn)) == USE)\n+\t && bb == BLOCK_FOR_INSN (insn))\n     {\n-      if (REG_P (XEXP (PATTERN (insn), 0))\n+      if (! INSN_P (insn))\n+\tcontinue;\n+      if (GET_CODE (PATTERN (insn)) == USE\n+\t  && REG_P (XEXP (PATTERN (insn), 0))\n \t  && regno == REGNO (XEXP (PATTERN (insn), 0)))\n-\treturn TRUE;\n+\treturn true;\n+      /* Check that the regno is not modified.  */\n+      id = lra_get_insn_recog_data (insn);\n+      for (reg = id->regs; reg != NULL; reg = reg->next)\n+\tif (reg->type != OP_IN && reg->regno == (int) regno)\n+\t  return false;\n+      static_id = id->insn_static_data;\n+      for (reg = static_id->hard_regs; reg != NULL; reg = reg->next)\n+\tif (reg->type != OP_IN && reg->regno == (int) regno)\n+\t  return false;\n+      if (id->arg_hard_regs != NULL)\n+\tfor (i = 0; (arg_regno = id->arg_hard_regs[i]) >= 0; i++)\n+\t  if ((int) regno == (arg_regno >= FIRST_PSEUDO_REGISTER\n+\t\t\t      ? arg_regno : arg_regno - FIRST_PSEUDO_REGISTER))\n+\t    return false;\n     }\n   return false;\n }"}]}