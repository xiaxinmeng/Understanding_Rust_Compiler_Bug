{"sha": "e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThiZjBmM2JhY2M1ZjNmNGFlODkyZjRkZjc5NGNjMjNlNDE1MTliOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-23T08:25:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-23T08:25:56Z"}, "message": "mips.md (mfhilo_[sd]i): Redefine using :GPR.\n\n\t* config/mips/mips.md (mfhilo_[sd]i): Redefine using :GPR.  Add mode\n\tattribute.\n\nFrom-SVN: r86420", "tree": {"sha": "e8feeb440b6f1a9015f356b7f8ece2d5b40d04f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8feeb440b6f1a9015f356b7f8ece2d5b40d04f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9/comments", "author": null, "committer": null, "parents": [{"sha": "4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "08c8713b17071a8c2fee1bfea0e5ce7d8804ed32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9", "patch": "@@ -1,3 +1,8 @@\n+2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (mfhilo_[sd]i): Redefine using :GPR.  Add mode\n+\tattribute.\n+\n 2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (length): Don't use mips_fetch_insns for indexed"}, {"sha": "2a8ca052a464f694230189cff4f23f70b9adb485", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e8bf0f3bacc5f3f4ae892f4df794cc23e41519b9", "patch": "@@ -4087,23 +4087,15 @@ beq\\t%2,%.,1b\\;\\\n ;; We cope with this by making the mflo and mfhi patterns use both HI and LO.\n ;; Operand 1 is the register we want, operand 2 is the other one.\n \n-(define_insn \"mfhilo_di\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=d,d\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"h,l\")\n-\t\t    (match_operand:DI 2 \"register_operand\" \"l,h\")]\n-\t\t   UNSPEC_MFHILO))]\n-  \"TARGET_64BIT\"\n-  \"mf%1\\t%0\"\n-  [(set_attr \"type\" \"mfhilo\")])\n-\n-(define_insn \"mfhilo_si\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=d,d\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"h,l\")\n-\t\t    (match_operand:SI 2 \"register_operand\" \"l,h\")]\n-\t\t   UNSPEC_MFHILO))]\n+(define_insn \"mfhilo_<mode>\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n+\t(unspec:GPR [(match_operand:GPR 1 \"register_operand\" \"h,l\")\n+\t\t     (match_operand:GPR 2 \"register_operand\" \"l,h\")]\n+\t\t    UNSPEC_MFHILO))]\n   \"\"\n   \"mf%1\\t%0\"\n-  [(set_attr \"type\" \"mfhilo\")])\n+  [(set_attr \"type\" \"mfhilo\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \n ;; Patterns for loading or storing part of a paired floating point\n ;; register.  We need them because odd-numbered floating-point registers"}]}