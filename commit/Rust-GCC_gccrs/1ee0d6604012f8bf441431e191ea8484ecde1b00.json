{"sha": "1ee0d6604012f8bf441431e191ea8484ecde1b00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVlMGQ2NjA0MDEyZjhiZjQ0MTQzMWUxOTFlYTg0ODRlY2RlMWIwMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-09-25T14:55:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-09-25T14:55:12Z"}, "message": "tree-eh.c (cleanup_empty_eh): Allow a call to __builtin_stack_restore if there is no outgoing edge.\n\n\t* tree-eh.c (cleanup_empty_eh): Allow a call to __builtin_stack_restore\n\tif there is no outgoing edge.\n\n\t* tree-scalar-evolution.c (simple_iv): Accept all kinds of pointer and\n\tintegral types.\n\nFrom-SVN: r179165", "tree": {"sha": "d97d634cdfdfd430b5c57a9004ad433969b2d30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d97d634cdfdfd430b5c57a9004ad433969b2d30b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ee0d6604012f8bf441431e191ea8484ecde1b00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee0d6604012f8bf441431e191ea8484ecde1b00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee0d6604012f8bf441431e191ea8484ecde1b00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee0d6604012f8bf441431e191ea8484ecde1b00/comments", "author": null, "committer": null, "parents": [{"sha": "8e19f5a1b3c48e05595cba58223fcb2ae1504599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e19f5a1b3c48e05595cba58223fcb2ae1504599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e19f5a1b3c48e05595cba58223fcb2ae1504599"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "2ad1aeffcce36e9ebdb646dd688cec14c9e8fda3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee0d6604012f8bf441431e191ea8484ecde1b00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee0d6604012f8bf441431e191ea8484ecde1b00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ee0d6604012f8bf441431e191ea8484ecde1b00", "patch": "@@ -1,3 +1,11 @@\n+2011-09-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-eh.c (cleanup_empty_eh): Allow a call to __builtin_stack_restore\n+\tif there is no outgoing edge.\n+\n+\t* tree-scalar-evolution.c (simple_iv): Accept all kinds of pointer and\n+\tintegral types.\n+\n 2011-09-25  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* tree-vect-slp.c (vect_slp_analyze_bb_1): Split out core part"}, {"sha": "3a582678f33885c8d9f61c5d188d1e742f7fcd00", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee0d6604012f8bf441431e191ea8484ecde1b00/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee0d6604012f8bf441431e191ea8484ecde1b00/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=1ee0d6604012f8bf441431e191ea8484ecde1b00", "patch": "@@ -3863,8 +3863,15 @@ cleanup_empty_eh (eh_landing_pad lp)\n       return cleanup_empty_eh_unsplit (bb, e_out, lp);\n     }\n \n-  /* The block should consist only of a single RESX statement.  */\n+  /* The block should consist only of a single RESX statement, modulo a\n+     preceding call to __builtin_stack_restore if there is no outgoing\n+     edge, since the call can be eliminated in this case.  */\n   resx = gsi_stmt (gsi);\n+  if (!e_out && gimple_call_builtin_p (resx, BUILT_IN_STACK_RESTORE))\n+    {\n+      gsi_next (&gsi);\n+      resx = gsi_stmt (gsi);\n+    }\n   if (!is_gimple_resx (resx))\n     return false;\n   gcc_assert (gsi_one_before_end_p (gsi));"}, {"sha": "2077c8dc9f3dc1dda0fed0b927b64cb400ee7be6", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee0d6604012f8bf441431e191ea8484ecde1b00/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee0d6604012f8bf441431e191ea8484ecde1b00/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=1ee0d6604012f8bf441431e191ea8484ecde1b00", "patch": "@@ -3172,8 +3172,8 @@ simple_iv (struct loop *wrto_loop, struct loop *use_loop, tree op,\n   iv->no_overflow = false;\n \n   type = TREE_TYPE (op);\n-  if (TREE_CODE (type) != INTEGER_TYPE\n-      && TREE_CODE (type) != POINTER_TYPE)\n+  if (!POINTER_TYPE_P (type)\n+      && !INTEGRAL_TYPE_P (type))\n     return false;\n \n   ev = analyze_scalar_evolution_in_loop (wrto_loop, use_loop, op,"}]}