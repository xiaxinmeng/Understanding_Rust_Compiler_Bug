{"sha": "750900dba0c3d968f7d059c5dc1ff27a246f05f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUwOTAwZGJhMGMzZDk2OGY3ZDA1OWM1ZGMxZmYyN2EyNDZmMDVmNQ==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2009-01-15T15:27:20Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2009-01-15T15:27:20Z"}, "message": "dce.c (find_call_stack_args, [...]): Fixed comments.\n\n2009-01-15  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* dce.c (find_call_stack_args, delete_unmarked_insns): Fixed\n\tcomments.\n\nFrom-SVN: r143398", "tree": {"sha": "427d8a8e6095a8fadeb55721cd02554e98e1fd22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/427d8a8e6095a8fadeb55721cd02554e98e1fd22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/750900dba0c3d968f7d059c5dc1ff27a246f05f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750900dba0c3d968f7d059c5dc1ff27a246f05f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/750900dba0c3d968f7d059c5dc1ff27a246f05f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/750900dba0c3d968f7d059c5dc1ff27a246f05f5/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "959d14e166813ae53bfc2e0bb5c2953bce764702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/959d14e166813ae53bfc2e0bb5c2953bce764702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/959d14e166813ae53bfc2e0bb5c2953bce764702"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "bb99b6fbf47ddd4c82c9d50630ffcd65b4457970", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750900dba0c3d968f7d059c5dc1ff27a246f05f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750900dba0c3d968f7d059c5dc1ff27a246f05f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=750900dba0c3d968f7d059c5dc1ff27a246f05f5", "patch": "@@ -1,3 +1,8 @@\n+2009-01-15  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* dce.c (find_call_stack_args, delete_unmarked_insns): Fixed\n+\tcomments.\n+\t\n 2009-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/38245"}, {"sha": "5a64fb2ecf831ab8dfa0e4423e257cf7e075184e", "filename": "gcc/dce.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/750900dba0c3d968f7d059c5dc1ff27a246f05f5/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/750900dba0c3d968f7d059c5dc1ff27a246f05f5/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=750900dba0c3d968f7d059c5dc1ff27a246f05f5", "patch": "@@ -358,7 +358,7 @@ find_call_stack_args (rtx call_insn, bool do_mark, bool fast,\n       }\n \n   /* Walk backwards, looking for argument stores.  The search stops\n-     when seeting another call, sp adjustment or memory store other than\n+     when seeing another call, sp adjustment or memory store other than\n      argument store.  */\n   ret = false;\n   for (insn = PREV_INSN (call_insn); insn; insn = prev_insn)\n@@ -522,9 +522,13 @@ delete_unmarked_insns (void)\n \t  else if (marked_insn_p (insn))\n \t    continue;\n \n-\t  /* Beware that reaching a dbg counter limit here can easily result\n-\t     in miscompiled file, whenever some insn is eliminated, but\n-\t     insn that depends on it is not.  */\n+\t  /* Beware that reaching a dbg counter limit here can rarely\n+\t     result in miscompiled file.  This occurs when a group of\n+\t     insns must be deleted together.  Currently this only\n+\t     can happen on non-looping pure and constant calls\n+\t     on machines where ACCUMULATE_OUTGOING_ARGS is true.  By\n+\t     using the dbg_cnt, it is possible to remove the call, but\n+\t     leave the argument pushes to the stack.  */\n \t  if (!dbg_cnt (dce))\n \t    continue;\n "}]}