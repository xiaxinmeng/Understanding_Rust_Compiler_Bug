{"sha": "87fbb651f896c031ec67452dfef71000aad84458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmYmI2NTFmODk2YzAzMWVjNjc0NTJkZmVmNzEwMDBhYWQ4NDQ1OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-07-16T14:17:51Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-07-16T14:17:51Z"}, "message": "Makefile.in (WARN_CFLAGS): New.\n\n\t* Makefile.in (WARN_CFLAGS): New.\n\t(.c.o): Add $(WARN_CFLAGS).\n\t* aclocal.m4: Include ../config/warnings.m4.\n\t* configure.ac: Invoke ACX_PROG_CC_WARNING_OPTS,\n\tACX_PROG_CC_WARNING_ALMOST_PEDANTIC and\n\tACX_PROG_CC_WARNINGS_ARE_ERRORS.\n\t* fixopts.c (initialize_opts): Fix old-style definintion.\n\n\t* configure: Regenerate.\n\nFrom-SVN: r102088", "tree": {"sha": "5b1768cf44367ca62e49b6efd0e18557e36b689c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b1768cf44367ca62e49b6efd0e18557e36b689c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87fbb651f896c031ec67452dfef71000aad84458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fbb651f896c031ec67452dfef71000aad84458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fbb651f896c031ec67452dfef71000aad84458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fbb651f896c031ec67452dfef71000aad84458/comments", "author": null, "committer": null, "parents": [{"sha": "84fc24e8a0955d26e26f81f5a393fccf69156916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84fc24e8a0955d26e26f81f5a393fccf69156916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84fc24e8a0955d26e26f81f5a393fccf69156916"}], "stats": {"total": 193, "additions": 189, "deletions": 4}, "files": [{"sha": "8d68b7e44034cc3d2c350edd63d26b191dbd2aa5", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=87fbb651f896c031ec67452dfef71000aad84458", "patch": "@@ -1,3 +1,15 @@\n+2005-07-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (WARN_CFLAGS): New.\n+\t(.c.o): Add $(WARN_CFLAGS).\n+\t* aclocal.m4: Include ../config/warnings.m4.\n+\t* configure.ac: Invoke ACX_PROG_CC_WARNING_OPTS,\n+\tACX_PROG_CC_WARNING_ALMOST_PEDANTIC and\n+\tACX_PROG_CC_WARNINGS_ARE_ERRORS.\n+\t* fixopts.c (initialize_opts): Fix old-style definintion.\n+\n+\t* configure: Regenerate.\n+\n 2005-06-24  Geoffrey Keating  <geoffk@geoffk.org>\n \n \t* inclhack.def (AAB_darwin7_9_long_double_funcs): New."}, {"sha": "854f6e77612d74de50083c1f36945a50e77bf34a", "filename": "fixincludes/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FMakefile.in?ref=87fbb651f896c031ec67452dfef71000aad84458", "patch": "@@ -29,6 +29,7 @@ STAMP = echo timestamp >\n \n CC = @CC@\n CFLAGS = @CFLAGS@\n+WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@\n LDFLAGS = @LDFLAGS@\n INCLUDES = -I. -I$(srcdir) -I../include -I$(srcdir)/../include\n FIXINC_CFLAGS = -DHAVE_CONFIG_H $(INCLUDES)\n@@ -68,7 +69,7 @@ default : all\n # Now figure out from those variables how to compile and link.\n \n .c.o:\n-\t$(CC) -c $(CFLAGS) $(CPPFLAGS) $(FIXINC_CFLAGS) $<\n+\t$(CC) -c $(CFLAGS) $(WARN_CFLAGS) $(CPPFLAGS) $(FIXINC_CFLAGS) $<\n \n # The only suffixes we want for implicit rules are .c and .o.\n .SUFFIXES:"}, {"sha": "f7cd3caa566125b965aae2c156a42f9170354a7d", "filename": "fixincludes/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Faclocal.m4?ref=87fbb651f896c031ec67452dfef71000aad84458", "patch": "@@ -1,6 +1,7 @@\n sinclude(../config/acx.m4)\n sinclude(../config/gettext.m4)\n sinclude(../config/progtest.m4)\n+sinclude(../config/warnings.m4)\n \n dnl See whether we need a declaration for a function.\n dnl The result is highly dependent on the INCLUDES passed in, so make sure"}, {"sha": "4d445194fb7009b6b1a9e993a52815e719e34d44", "filename": "fixincludes/configure", "status": "modified", "additions": 161, "deletions": 2, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure?ref=87fbb651f896c031ec67452dfef71000aad84458", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT target_noncanonical TARGET CPP EGREP MAINT LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT WARN_CFLAGS WARN_PEDANTIC WERROR target_noncanonical TARGET CPP EGREP MAINT LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -847,6 +847,7 @@ if test -n \"$ac_init_help\"; then\n Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-werror-always  enable -Werror despite compiler version\n   --enable-twoprocess       Use a separate process to apply the fixes\n   --enable-maintainer-mode enable make rules and dependencies not useful\n                           (and sometimes confusing) to the casual installer\n@@ -2352,6 +2353,162 @@ ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n+# Figure out what compiler warnings we can enable.\n+# See config/warnings.m4 for details.\n+\n+\n+WARN_CFLAGS=\n+save_CFLAGS=\"$CFLAGS\"\n+for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n+\t\t\t  -Wmissing-format-attribute; do\n+  as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n+\n+  echo \"$as_me:$LINENO: checking whether $CC supports $option\" >&5\n+echo $ECHO_N \"checking whether $CC supports $option... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_acx_Woption+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  CFLAGS=\"$option\"\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  eval \"$as_acx_Woption=yes\"\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+eval \"$as_acx_Woption=no\"\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_acx_Woption'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_acx_Woption'}'`\" >&6\n+  if test `eval echo '${'$as_acx_Woption'}'` = yes; then\n+  WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$option\"\n+fi\n+\n+  done\n+CFLAGS=\"$save_CFLAGS\"\n+\n+WARN_PEDANTIC=\n+if test \"$GCC\" = yes; then\n+  echo \"$as_me:$LINENO: checking whether $CC supports -pedantic -Wno-long-long\" >&5\n+echo $ECHO_N \"checking whether $CC supports -pedantic -Wno-long-long... $ECHO_C\" >&6\n+if test \"${acx_cv_prog_cc_pedantic__Wno_long_long+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  save_CFLAGS=\"$CFLAGS\"\n+CFLAGS=\"-pedantic -Wno-long-long\"\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  acx_cv_prog_cc_pedantic__Wno_long_long=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+acx_cv_prog_cc_pedantic__Wno_long_long=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+CFLAGS=\"$save_CFLAGS\"\n+fi\n+echo \"$as_me:$LINENO: result: $acx_cv_prog_cc_pedantic__Wno_long_long\" >&5\n+echo \"${ECHO_T}$acx_cv_prog_cc_pedantic__Wno_long_long\" >&6\n+if test $acx_cv_prog_cc_pedantic__Wno_long_long = yes; then\n+  WARN_PEDANTIC=\"-pedantic -Wno-long-long\"\n+fi\n+\n+\n+fi\n+\n+\n+\n+# Only enable with --enable-werror-always until existing warnings are\n+# corrected.\n+WERROR=\n+# Check whether --enable-werror-always or --disable-werror-always was given.\n+if test \"${enable_werror_always+set}\" = set; then\n+  enableval=\"$enable_werror_always\"\n+\n+else\n+  enable_werror_always=no\n+fi;\n+if test $enable_werror_always = yes; then\n+  WERROR=-Werror\n+fi\n+\n+\n+\n # Determine the noncanonical target name, for directory use.\n  case ${build_alias} in\n   \"\") build_noncanonical=${build} ;;\n@@ -2447,7 +2604,6 @@ _ACEOF\n \n \n # Checks for header files.\n-\n ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -5637,6 +5793,9 @@ s,@CPPFLAGS@,$CPPFLAGS,;t t\n s,@ac_ct_CC@,$ac_ct_CC,;t t\n s,@EXEEXT@,$EXEEXT,;t t\n s,@OBJEXT@,$OBJEXT,;t t\n+s,@WARN_CFLAGS@,$WARN_CFLAGS,;t t\n+s,@WARN_PEDANTIC@,$WARN_PEDANTIC,;t t\n+s,@WERROR@,$WERROR,;t t\n s,@target_noncanonical@,$target_noncanonical,;t t\n s,@TARGET@,$TARGET,;t t\n s,@CPP@,$CPP,;t t"}, {"sha": "04305fe63b72adb065318a2175916082a52e71f5", "filename": "fixincludes/configure.ac", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fconfigure.ac?ref=87fbb651f896c031ec67452dfef71000aad84458", "patch": "@@ -6,6 +6,18 @@ AC_CONFIG_AUX_DIR(..)\n AC_CANONICAL_SYSTEM\n AC_PROG_CC\n \n+# Figure out what compiler warnings we can enable.\n+# See config/warnings.m4 for details.\n+\n+ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition \\\n+\t\t\t  -Wmissing-format-attribute])\n+ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long])\n+\n+# Only enable with --enable-werror-always until existing warnings are\n+# corrected.\n+ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual])\n+\n # Determine the noncanonical target name, for directory use.\n ACX_NONCANONICAL_TARGET\n "}, {"sha": "365e27d6faec3bd5783033fda790fd247ede15ca", "filename": "fixincludes/fixopts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Ffixopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fbb651f896c031ec67452dfef71000aad84458/fixincludes%2Ffixopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixopts.c?ref=87fbb651f896c031ec67452dfef71000aad84458", "patch": "@@ -26,7 +26,7 @@ ENV_TABLE\n #undef _ENV_\n \n void\n-initialize_opts ()\n+initialize_opts (void)\n {\n   static const char var_not_found[] =\n #ifndef __STDC__"}]}