{"sha": "315a1c3756cbc751c4af0ce0da2157a88d7c3b09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE1YTFjMzc1NmNiYzc1MWM0YWYwY2UwZGEyMTU3YTg4ZDdjM2IwOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-08-04T15:52:08Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-08-04T15:52:08Z"}, "message": "vect: Tweak dump messages for vector mode choice\n\nAfter vect_analyze_loop has successfully analysed a loop for\none base vector mode B1, it considers using following base vector\nmodes to vectorise an epilogue.  However, for VECT_COMPARE_COSTS,\na later mode B2 might turn out to be better than B1 was.  Initially\nthis comparison will be between an epilogue loop (for B2) and a main\nloop (for B1).  However, in r11-6458 I'd added code to reanalyse the\nB2 epilogue loop as a main loop, partly for correctness and partly\nfor better costing.\n\nThis can lead to a situation in which we think that the B2 epilogue\nloop was better than the B1 main loop, but that the B2 main loop is\nnot better than the B1 main loop.  There was no dump message to say\nthat this had happened, which made it look like B2 had still won.\n\ngcc/\n\t* tree-vect-loop.c (vect_analyze_loop): Print a dump message\n\twhen a reanalyzed loop fails to be cheaper than the current\n\tmain loop.", "tree": {"sha": "ceea55a525b37ca30e9b768c6938016de62fcd7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceea55a525b37ca30e9b768c6938016de62fcd7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/315a1c3756cbc751c4af0ce0da2157a88d7c3b09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315a1c3756cbc751c4af0ce0da2157a88d7c3b09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/315a1c3756cbc751c4af0ce0da2157a88d7c3b09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315a1c3756cbc751c4af0ce0da2157a88d7c3b09/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb55b5b0df26e95c98ab59d34e69189d4f61bc0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb55b5b0df26e95c98ab59d34e69189d4f61bc0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb55b5b0df26e95c98ab59d34e69189d4f61bc0c"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "48a54b0957f0c25c346caeba2ba88d7c61d93407", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/315a1c3756cbc751c4af0ce0da2157a88d7c3b09/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/315a1c3756cbc751c4af0ce0da2157a88d7c3b09/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=315a1c3756cbc751c4af0ce0da2157a88d7c3b09", "patch": "@@ -3064,7 +3064,16 @@ vect_analyze_loop (class loop *loop, vec_info_shared *shared)\n \t\t\t= opt_loop_vec_info::success (main_loop_vinfo);\n \t\t    }\n \t\t  else\n-\t\t    delete main_loop_vinfo;\n+\t\t    {\n+\t\t      if (dump_enabled_p ())\n+\t\t\tdump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t\t\t \"***** No longer preferring vector\"\n+\t\t\t\t\t \" mode %s after reanalyzing the loop\"\n+\t\t\t\t\t \" as a main loop\\n\",\n+\t\t\t\t\t GET_MODE_NAME\n+\t\t\t\t\t   (main_loop_vinfo->vector_mode));\n+\t\t      delete main_loop_vinfo;\n+\t\t    }\n \t\t}\n \t    }\n "}]}