{"sha": "7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiODA4NDljYjRhZjZjMWY5MGMyNDY0YTM4ZjJiMjBhOGUzZDBmYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-05-19T17:51:31Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-05-19T17:51:31Z"}, "message": "typeck2.c (cxx_incomplete_type_diagnostic): Use inform.\n\n/cp\n2014-05-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* typeck2.c (cxx_incomplete_type_diagnostic): Use inform.\n\t* parser.c (cp_parser_enum_specifier): Likewise.\n\n/testsuite\n2014-05-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-c++-common/gomp/simd4.c: Adjust for inform.\n\t* g++.dg/cpp0x/decltype-call1.C: Likewise.\n\t* g++.dg/cpp0x/forw_enum6.C: Likewise.\n\t* g++.dg/cpp0x/lambda/lambda-ice7.C: Likewise.\n\t* g++.dg/cpp0x/noexcept15.C: Likewise.\n\t* g++.dg/cpp0x/variadic-ex2.C: Likewise.\n\t* g++.dg/eh/spec6.C: Likewise.\n\t* g++.dg/expr/cast1.C: Likewise.\n\t* g++.dg/expr/dtor1.C: Likewise.\n\t* g++.dg/ext/is_base_of_diagnostic.C: Likewise.\n\t* g++.dg/ext/unary_trait_incomplete.C: Likewise.\n\t* g++.dg/gomp/pr49223-2.C: Likewise.\n\t* g++.dg/gomp/udr-4.C: Likewise.\n\t* g++.dg/init/delete1.C: Likewise.\n\t* g++.dg/other/crash-2.C: Likewise.\n\t* g++.dg/parse/crash24.C: Likewise.\n\t* g++.dg/parse/crash25.C: Likewise.\n\t* g++.dg/parse/crash31.C: Likewise.\n\t* g++.dg/parse/crash49.C: Likewise.\n\t* g++.dg/parse/crash50.C: Likewise.\n\t* g++.dg/parse/crash54.C: Likewise.\n\t* g++.dg/parse/dtor7.C: Likewise.\n\t* g++.dg/parse/error40.C: Likewise.\n\t* g++.dg/parse/fused-params1.C: Likewise.\n\t* g++.dg/parse/new1.C: Likewise.\n\t* g++.dg/template/crash35.C: Likewise.\n\t* g++.dg/template/crash59.C: Likewise.\n\t* g++.dg/template/crash77.C: Likewise.\n\t* g++.dg/template/error51.C: Likewise.\n\t* g++.dg/template/incomplete1.C: Likewise.\n\t* g++.dg/template/incomplete3.C: Likewise.\n\t* g++.dg/template/incomplete4.C: Likewise.\n\t* g++.dg/template/incomplete5.C: Likewise.\n\t* g++.dg/template/inherit8.C: Likewise.\n\t* g++.dg/template/instantiate1.C: Likewise.\n\t* g++.dg/template/instantiate3.C: Likewis: Likewise.\n\t* g++.dg/template/offsetof2.C: Likewise.\n\t* g++.dg/tm/pr51928.C: Likewise.\n\t* g++.dg/warn/Wdelete-incomplete-1.C: Likewise.\n\t* g++.dg/warn/incomplete1.C: Likewise.\n\t* g++.dg/warn/incomplete2.C: Likewise.\n\t* g++.old-deja/g++.brendan/friend4.C: Likewise.\n\t* g++.old-deja/g++.bugs/900121_01.C: Likewise.\n\t* g++.old-deja/g++.bugs/900214_01.C: Likewise.\n\t* g++.old-deja/g++.eh/catch1.C: Likewise.\n\t* g++.old-deja/g++.eh/spec6.C: Likewise.\n\t* g++.old-deja/g++.mike/p7868.C: Likewise.\n\t* g++.old-deja/g++.other/crash38.C: Likewise.\n\t* g++.old-deja/g++.other/enum2.C: Likewise.\n\t* g++.old-deja/g++.other/incomplete.C: Likewise.\n\t* g++.old-deja/g++.other/vaarg3.C: Likewise.\n\t* g++.old-deja/g++.pt/crash9.C: Likewise.\n\t* g++.old-deja/g++.pt/niklas01a.C: Likewise.\n\t* g++.old-deja/g++.pt/typename8.C: Likewise.\n\t* g++.old-deja/g++.robertl/ice990323-1.C: Likewise.\n\nFrom-SVN: r210623", "tree": {"sha": "a9e4cfc018d804127514c896e8b3b59d6f2247d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9e4cfc018d804127514c896e8b3b59d6f2247d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/comments", "author": null, "committer": null, "parents": [{"sha": "883755a164ac5e56b049e8bf3b68d12eab3962a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/883755a164ac5e56b049e8bf3b68d12eab3962a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/883755a164ac5e56b049e8bf3b68d12eab3962a9"}], "stats": {"total": 220, "additions": 143, "deletions": 77}, "files": [{"sha": "1b0916cdedb467bdd4956e7f6574df0417c04af3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,3 +1,8 @@\n+2014-05-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* typeck2.c (cxx_incomplete_type_diagnostic): Use inform.\n+\t* parser.c (cp_parser_enum_specifier): Likewise.\n+\n 2014-05-17  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* class.c (sorted_fields_type_new): Adjust."}, {"sha": "0c9e113236bd64094c6a76f975f29e6e2ec9d73e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -15540,9 +15540,10 @@ cp_parser_enum_specifier (cp_parser* parser)\n \t}\n       else\n \t{\n-\t  error_at (type_start_token->location, \"multiple definition of %q#T\", type);\n-\t  error_at (DECL_SOURCE_LOCATION (TYPE_MAIN_DECL (type)),\n-\t\t    \"previous definition here\");\n+\t  error_at (type_start_token->location,\n+\t\t    \"multiple definition of %q#T\", type);\n+\t  inform (DECL_SOURCE_LOCATION (TYPE_MAIN_DECL (type)),\n+\t\t  \"previous definition here\");\n \t  type = error_mark_node;\n \t}\n "}, {"sha": "fb1546f91c8ee9fc880d38dd3b58d82d5345e85a", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -438,7 +438,7 @@ void\n cxx_incomplete_type_diagnostic (const_tree value, const_tree type, \n \t\t\t\tdiagnostic_t diag_kind)\n {\n-  int decl = 0;\n+  bool is_decl = false, complained = false;\n \n   gcc_assert (diag_kind == DK_WARNING \n \t      || diag_kind == DK_PEDWARN \n@@ -452,10 +452,10 @@ cxx_incomplete_type_diagnostic (const_tree value, const_tree type,\n \t\t     || TREE_CODE (value) == PARM_DECL\n \t\t     || TREE_CODE (value) == FIELD_DECL))\n     {\n-      emit_diagnostic (diag_kind, input_location, 0,\n-\t\t       \"%q+D has incomplete type\", value);\n-      decl = 1;\n-    }\n+      complained = emit_diagnostic (diag_kind, input_location, 0,\n+\t\t\t\t    \"%q+D has incomplete type\", value);\n+      is_decl = true;\n+    } \n  retry:\n   /* We must print an error message.  Be clever about what it says.  */\n \n@@ -464,15 +464,19 @@ cxx_incomplete_type_diagnostic (const_tree value, const_tree type,\n     case RECORD_TYPE:\n     case UNION_TYPE:\n     case ENUMERAL_TYPE:\n-      if (!decl)\n-\temit_diagnostic (diag_kind, input_location, 0,\n-\t\t\t \"invalid use of incomplete type %q#T\", type);\n-      if (!TYPE_TEMPLATE_INFO (type))\n-\temit_diagnostic (diag_kind, input_location, 0,\n-\t\t\t \"forward declaration of %q+#T\", type);\n-      else\n-\temit_diagnostic (diag_kind, input_location, 0,\n-\t\t\t \"declaration of %q+#T\", type);\n+      if (!is_decl)\n+\tcomplained = emit_diagnostic (diag_kind, input_location, 0,\n+\t\t\t\t      \"invalid use of incomplete type %q#T\",\n+\t\t\t\t      type);\n+      if (complained)\n+\t{\n+      \t  if (!TYPE_TEMPLATE_INFO (type))\n+\t    inform (DECL_SOURCE_LOCATION (TYPE_MAIN_DECL (type)),\n+\t\t    \"forward declaration of %q#T\", type);\n+\t  else\n+\t    inform (DECL_SOURCE_LOCATION (TYPE_MAIN_DECL (type)),\n+\t\t    \"declaration of %q#T\", type);\n+\t}\n       break;\n \n     case VOID_TYPE:"}, {"sha": "f4c9995544f6102c432ebdcc031901d1bdf0f545", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,3 +1,61 @@\n+2014-05-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-c++-common/gomp/simd4.c: Adjust for inform.\n+\t* g++.dg/cpp0x/decltype-call1.C: Likewise.\n+\t* g++.dg/cpp0x/forw_enum6.C: Likewise.\n+\t* g++.dg/cpp0x/lambda/lambda-ice7.C: Likewise.\n+\t* g++.dg/cpp0x/noexcept15.C: Likewise.\n+\t* g++.dg/cpp0x/variadic-ex2.C: Likewise.\n+\t* g++.dg/eh/spec6.C: Likewise.\n+\t* g++.dg/expr/cast1.C: Likewise.\n+\t* g++.dg/expr/dtor1.C: Likewise.\n+\t* g++.dg/ext/is_base_of_diagnostic.C: Likewise.\n+\t* g++.dg/ext/unary_trait_incomplete.C: Likewise.\n+\t* g++.dg/gomp/pr49223-2.C: Likewise.\n+\t* g++.dg/gomp/udr-4.C: Likewise.\n+\t* g++.dg/init/delete1.C: Likewise.\n+\t* g++.dg/other/crash-2.C: Likewise.\n+\t* g++.dg/parse/crash24.C: Likewise.\n+\t* g++.dg/parse/crash25.C: Likewise.\n+\t* g++.dg/parse/crash31.C: Likewise.\n+\t* g++.dg/parse/crash49.C: Likewise.\n+\t* g++.dg/parse/crash50.C: Likewise.\n+\t* g++.dg/parse/crash54.C: Likewise.\n+\t* g++.dg/parse/dtor7.C: Likewise.\n+\t* g++.dg/parse/error40.C: Likewise.\n+\t* g++.dg/parse/fused-params1.C: Likewise.\n+\t* g++.dg/parse/new1.C: Likewise.\n+\t* g++.dg/template/crash35.C: Likewise.\n+\t* g++.dg/template/crash59.C: Likewise.\n+\t* g++.dg/template/crash77.C: Likewise.\n+\t* g++.dg/template/error51.C: Likewise.\n+\t* g++.dg/template/incomplete1.C: Likewise.\n+\t* g++.dg/template/incomplete3.C: Likewise.\n+\t* g++.dg/template/incomplete4.C: Likewise.\n+\t* g++.dg/template/incomplete5.C: Likewise.\n+\t* g++.dg/template/inherit8.C: Likewise.\n+\t* g++.dg/template/instantiate1.C: Likewise.\n+\t* g++.dg/template/instantiate3.C: Likewis: Likewise.\n+\t* g++.dg/template/offsetof2.C: Likewise.\n+\t* g++.dg/tm/pr51928.C: Likewise.\n+\t* g++.dg/warn/Wdelete-incomplete-1.C: Likewise.\n+\t* g++.dg/warn/incomplete1.C: Likewise.\n+\t* g++.dg/warn/incomplete2.C: Likewise.\n+\t* g++.old-deja/g++.brendan/friend4.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900121_01.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900214_01.C: Likewise.\n+\t* g++.old-deja/g++.eh/catch1.C: Likewise.\n+\t* g++.old-deja/g++.eh/spec6.C: Likewise.\n+\t* g++.old-deja/g++.mike/p7868.C: Likewise.\n+\t* g++.old-deja/g++.other/crash38.C: Likewise.\n+\t* g++.old-deja/g++.other/enum2.C: Likewise.\n+\t* g++.old-deja/g++.other/incomplete.C: Likewise.\n+\t* g++.old-deja/g++.other/vaarg3.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash9.C: Likewise.\n+\t* g++.old-deja/g++.pt/niklas01a.C: Likewise.\n+\t* g++.old-deja/g++.pt/typename8.C: Likewise.\n+\t* g++.old-deja/g++.robertl/ice990323-1.C: Likewise.\n+\n 2014-05-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lib/target-supports.exp"}, {"sha": "399003388ae148fb61499a0f8be8cbc196049b68", "filename": "gcc/testsuite/c-c++-common/gomp/simd4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fsimd4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fsimd4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fsimd4.c?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,7 +2,7 @@\n /* { dg-options \"-fopenmp\" } */\n /* { dg-additional-options \"-std=c99\" { target c } } */\n \n-struct S *p;\t/* { dg-error \"forward declaration\" \"\" { target c++ } } */\n+struct S *p;\t/* { dg-message \"forward declaration\" \"\" { target c++ } } */\n float f;\n int j;\n "}, {"sha": "39069ba228f45e110138b017cf03c050d2a543cd", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-call1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-call1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-call1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-call1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,7 +2,7 @@\n // N3276\n // { dg-do compile { target c++11 } }\n \n-struct A;\t\t\t// { dg-error \"forward declaration\" }\n+struct A;\t\t\t// { dg-message \"forward declaration\" }\n A f();\n \n decltype(f()) g1();\t\t // OK"}, {"sha": "7d2094df52bf1c8a106a7cbfe3642b13e1ab766b", "filename": "gcc/testsuite/g++.dg/cpp0x/forw_enum6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fforw_enum6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fforw_enum6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fforw_enum6.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -25,10 +25,10 @@ enum class E3 e3; // { dg-error \"scoped enum must not use\" }\n enum struct E3 e4; // { dg-error \"scoped enum must not use\" }\n enum E5 : int e5; // { dg-error \"expected|invalid type\" }\n \n-enum E6 : int { a, b, c }; // { dg-error \"previous definition\" }\n+enum E6 : int { a, b, c }; // { dg-message \"previous definition\" }\n enum E6 : int { a, b, c }; // { dg-error \"multiple definition\" }\n \n-enum class E7 { }; // { dg-error \"previous definition\" }\n+enum class E7 { }; // { dg-message \"previous definition\" }\n enum class E7 { a, b, c }; // { dg-error \"multiple definition\" }\n \n namespace N1"}, {"sha": "1d7dfcc933ea5c93bc762c25d1a973f4817aa085", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice7.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/52487\n // { dg-do compile { target c++11 } }\n \n-struct A;         // { dg-error \"forward declaration\" }\n+struct A;         // { dg-message \"forward declaration\" }\n \n void foo(A& a)\n {"}, {"sha": "5cbbea8a91a42757fc697a61e44d8be70550cfe3", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept15.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -23,12 +23,10 @@ template<class Tp>\n     return single<typename std::decay<Tp>::type>(x);\n   }\n \n-class Blob;  // { dg-error \"forward declaration\" }\n+class Blob;  // { dg-message \"forward declaration\" }\n \n void\n foo(Blob *b)\n {\n   make_single(*b);\n }\n-\n-// { dg-prune-output \"include\" }"}, {"sha": "a887e339848c3f61ae25d1cc511fe8106cdd0c1d", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex2.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target c++11 } }\n-template<class... Types> struct B { // { dg-error \"declaration of\" }\n+template<class... Types> struct B { // { dg-message \"declaration of\" }\n   void f3();\n   void f4();\n };"}, {"sha": "d6d817628916570a02532791ed8885d3c18e5e14", "filename": "gcc/testsuite/g++.dg/eh/spec6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspec6.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -3,7 +3,7 @@\n \n // { dg-options \"-fpermissive -w\" }\n \n-struct A;\t\t\t// { dg-error \"\" }\n+struct A;\t\t\t// { dg-message \"\" }\n \n struct B\n {"}, {"sha": "2f0e94fc698b1aa2254005f856b3aeb67762d55a", "filename": "gcc/testsuite/g++.dg/expr/cast1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcast1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcast1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcast1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,3 +1,3 @@\n-struct S; // { dg-error \"forward\" } \n+struct S; // { dg-message \"forward\" } \n \n void f(S* p) { ((S) (*p)); } // { dg-error \"\" }"}, {"sha": "5570f786a641dd420da520b29f505d6f0ea71ec0", "filename": "gcc/testsuite/g++.dg/expr/dtor1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fdtor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fdtor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fdtor1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,4 +1,4 @@\n-class Foo; // { dg-error \"\" }\n+class Foo; // { dg-message \"\" }\n \n void\n bar(void* p)"}, {"sha": "aac6cfba4803b2f629e0b2eca6f477a4fa8aff02", "filename": "gcc/testsuite/g++.dg/ext/is_base_of_diagnostic.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_base_of_diagnostic.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_base_of_diagnostic.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_base_of_diagnostic.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n class A\n { };\n \n-class B; // { dg-error \"forward declaration\" }\n+class B; // { dg-message \"forward declaration\" }\n \n union C\n { };"}, {"sha": "b60ce84dcb2323396338f58c445d68ed1c121bbd", "filename": "gcc/testsuite/g++.dg/ext/unary_trait_incomplete.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funary_trait_incomplete.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funary_trait_incomplete.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Funary_trait_incomplete.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n // PR c++/39475\n \n-struct I; // { dg-error \"forward declaration\" }\n+struct I; // { dg-message \"forward declaration\" }\n struct C { };\n \n bool nas1 = __has_nothrow_assign(I); // { dg-error \"incomplete type\" }"}, {"sha": "b367b0419b8c776e8d8ea3df3b7b7b800916c7cc", "filename": "gcc/testsuite/g++.dg/gomp/pr49223-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr49223-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr49223-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr49223-2.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -3,7 +3,7 @@\n // { dg-require-effective-target tls }\n // { dg-options \"-fopenmp\" }\n \n-struct S;\t\t\t// { dg-error \"forward declaration\" }\n+struct S;\t\t\t// { dg-message \"forward declaration\" }\n extern __thread struct S s;\t// { dg-error \"has incomplete type\" }\n struct T;\n extern __thread struct T t;"}, {"sha": "566d7d1321fe654633fb381c8031c18b5f6c2844", "filename": "gcc/testsuite/g++.dg/gomp/udr-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fudr-4.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-struct S;\t\t\t\t\t// { dg-error \"forward declaration\" }\n+struct S;\t\t\t\t\t// { dg-message \"forward declaration\" }\n #pragma omp declare reduction (+:S:omp_out.s += omp_in.s) // { dg-error \"invalid use of incomplete type\" }\n struct S { int s; S () : s (1) {} };\n #pragma omp declare reduction (*:S:omp_out.s *= omp_in.s)"}, {"sha": "8236abcd6fe262bce6d861b003e61d9618aac452", "filename": "gcc/testsuite/g++.dg/init/delete1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdelete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdelete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fdelete1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n // PR c++/19811\n \n-class C; // { dg-warning \"forward\" }\n+class C; // { dg-message \"forward\" }\n \n void foo(void *p) {\n   delete [] ((C*)p) ; // { dg-warning \"problem|incomplete\" }"}, {"sha": "b8645b09309b1cf67f6fd758c91175f944219525", "filename": "gcc/testsuite/g++.dg/other/crash-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-2.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -3,7 +3,7 @@\n // Contributed by Hans Buchmann <hans dot buchmann at fhso dot ch>\n // PR c++/14033: ICE while inlining a function with incomplete parameter\n \n-struct A;           // { dg-error \"forward declaration\" }\n+struct A;           // { dg-message \"forward declaration\" }\n void foo(A a) {}    // { dg-error \"incomplete\" }\n struct A {};\n "}, {"sha": "d0804b13381850aafeef2be28357ec163223bd42", "filename": "gcc/testsuite/g++.dg/parse/crash24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash24.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n // PR c++/20461\n // { dg-do compile }\n \n-class C; // { dg-error \"forward declaration\" }\n+class C; // { dg-message \"forward declaration\" }\n \n C::C() : f() {} // { dg-error \"invalid use|does not have\" }"}, {"sha": "f0d8ffd7218d9592be47266102cd0cac1342e019", "filename": "gcc/testsuite/g++.dg/parse/crash25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash25.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -4,7 +4,7 @@\n  \n struct yyguts_t \n { \n-  class TestScanner* yyextra_r; // { dg-error \"forward declaration\" }\n+  class TestScanner* yyextra_r; // { dg-message \"forward declaration\" }\n }; \n     \n TestScanner::TestScanner() {} // { dg-error \"invalid use\" }"}, {"sha": "c22ad5ed3ba09980959d5ac54a866ed4658379f4", "filename": "gcc/testsuite/g++.dg/parse/crash31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash31.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,4 +1,4 @@\n-struct A // { dg-error \"forward declaration\" }\n+struct A // { dg-message \"forward declaration\" }\n {\n   A : A; // { dg-error \"expected|incomplete\" }\n   A : B; // { dg-error \"not declared|incomplete\" }"}, {"sha": "a922ef3cfc749f6b360b0b4fe6c5b362d61e11a5", "filename": "gcc/testsuite/g++.dg/parse/crash49.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash49.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/37552\n // { dg-do compile }\n \n-extern struct A a[1];\t// { dg-error \"forward declaration\" }\n+extern struct A a[1];\t// { dg-message \"forward declaration\" }\n \n void\n foo ()"}, {"sha": "630eb25a94d68f35088f5ce9489b17b132d7b77b", "filename": "gcc/testsuite/g++.dg/parse/crash50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash50.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,7 +2,7 @@\n // Origin PR c++/38636\n // { dg-do compile }\n \n-struct A; // { dg-error \"forward declaration of 'struct A'\" }\n+struct A; // { dg-message \"forward declaration of 'struct A'\" }\n \n A::A(\n "}, {"sha": "89d59ef2c165ba8d518e20bf509ed9570ed168ea", "filename": "gcc/testsuite/g++.dg/parse/crash54.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash54.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n // PR c++/42057\n \n-struct A; // { dg-error \"forward declaration\" }\n+struct A; // { dg-message \"forward declaration\" }\n \n struct B\n {"}, {"sha": "343b2e42c238b77e28159957ea97ed80bca80eb0", "filename": "gcc/testsuite/g++.dg/parse/dtor7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor7.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,4 +1,4 @@\n // PR c++/25856\n \n-struct A; // { dg-error \"forward\" } \n+struct A; // { dg-message \"forward\" } \n A::~A() {} // { dg-error \"incomplete\" }"}, {"sha": "643f1f56c53b6f91e3a0e86db0b4ea663ecff008", "filename": "gcc/testsuite/g++.dg/parse/error40.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror40.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/31489\n \n-class foo;   // { dg-error \"'class foo'\" }\n-struct bar;  // { dg-error \"'struct bar'\" }\n+class foo;   // { dg-message \"'class foo'\" }\n+struct bar;  // { dg-message \"'struct bar'\" }\n \n int main()\n {"}, {"sha": "ebb226befb9aa1298cc5f8dc075d84644c1a9c50", "filename": "gcc/testsuite/g++.dg/parse/fused-params1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,7 +2,7 @@\n // Origin: Alexander Zvyagin <Alexander.Zviagine@cern.ch>\n // { dg-do compile }\n \n-template <int N,typename T> struct A //  { dg-error \"\" }\n+template <int N,typename T> struct A //  { dg-message \"\" }\n {\n     typedef T X;\n     template <int M> void foo (const A<M,X>&);"}, {"sha": "d8c376617d2e2be37a9228b556bf40dd22c8432f", "filename": "gcc/testsuite/g++.dg/parse/new1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnew1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,4 +1,4 @@\n-struct T; // { dg-error \"forward\" }\n+struct T; // { dg-message \"forward\" }\n T* manage(T* t);\n template <class Obj> struct ObjectSlot0_ {\n   void create() {"}, {"sha": "c457798dd02c06420ac5088c62bcadd204e6c8a6", "filename": "gcc/testsuite/g++.dg/template/crash35.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash35.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/20463\n // { dg-do compile }\n \n-template <typename T> struct C; // { dg-error \"declaration\" }\n+template <typename T> struct C; // { dg-message \"declaration\" }\n \n template <typename T> void C<T>::f() // { dg-error \"invalid|template\" }\n {"}, {"sha": "ebc0e281c54c25e4fc58ba364ce122ba42e095df", "filename": "gcc/testsuite/g++.dg/template/crash59.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash59.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n //PR c++/27329\n \n-template<int> struct A                          // { dg-error \"forward declaration\" }\n+template<int> struct A                          // { dg-message \"forward declaration\" }\n !                                               // { dg-error \"expected unqualified-id\" }\n   ;\n "}, {"sha": "21747792c2f07a9109ff74d0a5e3e884fc7fe38f", "filename": "gcc/testsuite/g++.dg/template/crash77.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash77.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,5 +1,5 @@\n // PR c++/34603\n \n-template<typename> struct A; // { dg-error \"declaration\" }\n+template<typename> struct A; // { dg-message \"declaration\" }\n \n template<typename T> A<T>::A( struct A; // { dg-error \"definition|expected|incomplete\" }"}, {"sha": "304a13a70fb00ed23e618085f41a9dd2c736d788", "filename": "gcc/testsuite/g++.dg/template/error51.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror51.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror51.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror51.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,7 +2,7 @@\n \n template<int> void foo()\n {\n-  struct A;                // { dg-error \"declaration\" }\n+  struct A;                // { dg-message \"declaration\" }\n   struct B : A {};         // { dg-error \"invalid use of incomplete\" }\n }\n "}, {"sha": "53bd8170e62db058828b319a9333dba2c99b10dd", "filename": "gcc/testsuite/g++.dg/template/incomplete1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,7 +2,7 @@\n // Origin: Ivan Godard <igodard at pacbell dot net>\n // PR c++/17447: Detect parameters of dependent types even in templates\n \n-struct B;   // { dg-error \"forward declaration\" }\n+struct B;   // { dg-message \"forward declaration\" }\n template<typename T> struct A {\n \n     friend A& operator <<(A& a, B b) { return a; } // { dg-error \"incomplete\" }"}, {"sha": "9b2efb77b7ee1f6e0bf24349aac6b1d7344a5e32", "filename": "gcc/testsuite/g++.dg/template/incomplete3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete3.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,5 +1,5 @@\n // PR c++/27315\n // { dg-do compile }\n \n-struct A;                  // { dg-error \"forward declaration\" }\n+struct A;                  // { dg-message \"forward declaration\" }\n template void A::foo<0>(); // { dg-error \"before|incomplete\" }"}, {"sha": "7cff66bdc04d158abb57fd55a77eabbef0c84ee8", "filename": "gcc/testsuite/g++.dg/template/incomplete4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/33501\n // { dg-do compile }\n \n-class A;\t// { dg-error \"forward declaration\" }\n+class A;\t// { dg-message \"forward declaration\" }\n \n template <typename T> struct X\n {"}, {"sha": "1bd21b95e8c5b45ef06e410f0dbbec29522ea9af", "filename": "gcc/testsuite/g++.dg/template/incomplete5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/33501\n // { dg-do compile }\n \n-class A;\t// { dg-error \"forward declaration\" }\n+class A;\t// { dg-message \"forward declaration\" }\n \n template <typename T> struct X\n {"}, {"sha": "f2ebd5cba6fecf323dcbdbb320cea21b04cb2bec", "filename": "gcc/testsuite/g++.dg/template/inherit8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finherit8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finherit8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finherit8.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -4,7 +4,7 @@ template <typename T>\n struct A\n {\n   template <typename U>\n-  struct B : public A <B<U> >\t// { dg-error \"declaration\" }\n+  struct B : public A <B<U> >\t// { dg-message \"declaration\" }\n   {\n     struct C : public B<U>\t// { dg-error \"incomplete\" }\n     {"}, {"sha": "a9c8cf869681faef752808009c483268d3b58f27", "filename": "gcc/testsuite/g++.dg/template/instantiate1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -12,7 +12,7 @@ template <class T> struct Y {\n   X<T> x;\t\t\t// { dg-message \"required\" }\n };\n \n-template <class T> struct Z {\t// { dg-error \"declaration\" }\n+template <class T> struct Z {\t// { dg-message \"declaration\" }\n   Y<Z<T> > y;\t\t\t// { dg-message \"required\" }\n };\n "}, {"sha": "e99ec84c2ac98c654881a39f707e560e37273654", "filename": "gcc/testsuite/g++.dg/template/instantiate3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -4,7 +4,7 @@\n // PR c++/7639\n // ICE when accessing member with incomplete type.\n \n-class ACE_Null_Mutex;\t// { dg-error \"forward declaration\" }\n+class ACE_Null_Mutex;\t// { dg-message \"forward declaration\" }\n \n template <class TYPE>\n struct ACE_Cleanup_Adapter"}, {"sha": "6f741a96205b5e122466aad8ed8597bfcc8168fe", "filename": "gcc/testsuite/g++.dg/template/offsetof2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foffsetof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foffsetof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foffsetof2.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/49085\n \n template <class T>\n-struct A\t\t\t// { dg-error \"declaration\" }\n+struct A\t\t\t// { dg-message \"declaration\" }\n {\n   int i, j;\n   int ar[__builtin_offsetof(A,j)]; // { dg-error \"incomplete type\" }"}, {"sha": "5ea0b0457a140bd21fb3c57b56eadae3cf524576", "filename": "gcc/testsuite/g++.dg/tm/pr51928.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr51928.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr51928.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr51928.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fgnu-tm\" } */\n \n-struct A; // { dg-error \"forward declaration of 'struct A'\" }\n+struct A; // { dg-message \"forward declaration of 'struct A'\" }\n \n struct B\n {"}, {"sha": "729ea21017bf81425e6e50651aee7ec33b8a1e41", "filename": "gcc/testsuite/g++.dg/warn/Wdelete-incomplete-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdelete-incomplete-1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,6 +1,6 @@\n // PR c++/43452\n \n-class Foo;         // { dg-warning \"forward\" }\n+class Foo;         // { dg-message \"forward\" }\n int main() {\n    Foo* p;         // { dg-warning \"incomplete\" }\n    delete [] p;    // { dg-warning \"problem\" }"}, {"sha": "1fa27123e6bb580afa07be7e09c3d244b0e69f5d", "filename": "gcc/testsuite/g++.dg/warn/incomplete1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -9,7 +9,7 @@\n // (But the deletion does not constitute an ill-formed program. So the\n // program should nevertheless compile, but it should give a warning.)\n \n-class A;\t// { dg-warning \"forward declaration of 'class A'\" \"\" }\n+class A;\t// { dg-message \"forward declaration of 'class A'\" \"\" }\n \n A *a;\t\t// { dg-warning \"'a' has incomplete type\" \"\" }\n "}, {"sha": "bfaf6be310c5f867bcbe528faa0244094c1ffbd9", "filename": "gcc/testsuite/g++.dg/warn/incomplete2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // PR c++/33501\n // { dg-do compile }\n \n-class A;\t// { dg-error \"forward declaration\" }\n+class A;\t// { dg-message \"forward declaration\" }\n \n int f (A);\t\t\t// { dg-message \"initializing\" }\n const A &make ();"}, {"sha": "dc55280751d1cb101d01bbcdede7dc588e682dfc", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/friend4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ffriend4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ffriend4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ffriend4.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -2,5 +2,5 @@\n // GROUPS passed friends\n // do_friend should complain that foo was declared as a friend of\n // A before A was defined\n-struct A; // { dg-error \"forward\" } \n+struct A; // { dg-message \"forward\" } \n struct B { friend A::foo (); };// { dg-error \"\" } .*"}, {"sha": "da619b883377788744f0a50dba7416a66ef92c95", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900121_01.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900121_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900121_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900121_01.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -7,7 +7,7 @@\n \n // keywords: abort, incomplete types, reference types, formal parameters\n \n-struct s0;              // { dg-error \"\" } forward declaration\n+struct s0;              // { dg-message \"\" } forward declaration\n \n void function (struct s0 &arg1, struct s0 &arg2)\n {"}, {"sha": "4b161bf89c0d7841bb888175a5ff1a8d42413876", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900214_01.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900214_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900214_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900214_01.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -8,7 +8,7 @@\n \n // keywords: friends, incomplete types, function members\n \n-struct A;                       // { dg-error \"\" } forward declaration\n+struct A;                       // { dg-message \"\" } forward declaration\n \n struct B {\n   friend void A::foo();\t\t// { dg-error \"\" } type A is incomplete"}, {"sha": "67779d945eafd8217da0bf279289a2def339dbf2", "filename": "gcc/testsuite/g++.old-deja/g++.eh/catch1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatch1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatch1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatch1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -5,7 +5,7 @@\n \n // We cannot catch an incomplete type, or ptr to one\n \n-struct A; // { dg-error \"\" } forward decl\n+struct A; // { dg-message \"\" } forward decl\n \n void fn()\n {"}, {"sha": "85e9b4e7c4e74fd76d159dc6a23f944d1ac6afe3", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -7,7 +7,7 @@\n \n // [except.spec] 1, a type in an exception specifier shall not be incomplete,\n // or pointer or ref to incomplete\n-struct X;                         // { dg-error \"\" } forward declaration.*\n+struct X;                         // { dg-message \"\" } forward declaration.*\n void fn1() throw(X);              // { dg-error \"\" } invalid use of undefined type\n void fn2() throw(X *);            // { dg-error \"\" } invalid use of undefined type\n void fn3() throw(X &);            // { dg-error \"\" } invalid use of undefined tyoe"}, {"sha": "8a94b3ecb1a8bfd25d63758b39cefe2484e65f14", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p7868.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp7868.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp7868.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp7868.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -4,13 +4,13 @@\n struct DIAGTYP {\n };\n struct DIAGTYP1 {\n-  struct DIAGTYP;       // { dg-error \"\" } forward declaration\n+  struct DIAGTYP;       // { dg-message \"\" } forward declaration\n   void bar() { new struct DIAGTYP; }\t// { dg-error \"\" } undefined\n   void foo() { new struct DIAGTYP1; }\n };\n \n int main () {\n-  struct DIAGTYP;               // { dg-error \"\" } forward declaration\n+  struct DIAGTYP;               // { dg-message \"\" } forward declaration\n   struct DIAGTYP  *lerror_desc;\n   lerror_desc= new struct DIAGTYP;\t// { dg-error \"\" } undefined\n }"}, {"sha": "87e55556128cf87b0d637169bc7aa751d133fe03", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash38.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash38.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -6,7 +6,7 @@\n // Bug 611. We ICEd when calling a member function returning an incomplete\n // type by value.\n \n-struct X;   // { dg-error \"\" } forward ref\n+struct X;   // { dg-message \"\" } forward ref\n \n struct Y\n {"}, {"sha": "7fc269d9de0cafadd6d57acf320423cf9a52d946", "filename": "gcc/testsuite/g++.old-deja/g++.other/enum2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fenum2.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -5,7 +5,7 @@\n \n // We'd like the enum location to be its identifier.\n \n-enum thing // { dg-error \"\" } previous def\n+enum thing // { dg-message \"\" } previous def\n {\n   val1\n };"}, {"sha": "7f0bc9409e8fcf081590f043251558769f497c26", "filename": "gcc/testsuite/g++.old-deja/g++.other/incomplete.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fincomplete.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fincomplete.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fincomplete.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -4,7 +4,7 @@\n // a void parm. We need to distinguish between a parmlist of (void), and\n // some ill-formed ones.\n \n-struct S; // { dg-error \"\" } forward ref\n+struct S; // { dg-message \"\" } forward ref\n \n void f(S);            // ok\n void f(S s) {}        // { dg-error \"\" } incomplete type"}, {"sha": "134a89c97f631f2532137eed84599cd828166058", "filename": "gcc/testsuite/g++.old-deja/g++.other/vaarg3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg3.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -10,7 +10,7 @@\n \n struct X {int m;};\n struct Y { Y(const Y&); };\n-struct Z;   // { dg-error \"forward decl\" } \n+struct Z;   // { dg-message \"forward decl\" }\n void fn1(va_list args)\n {\n   int i = va_arg (args, int);"}, {"sha": "f54d6387c291bdce578a37ef7bf3fe19b176b70c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -3,7 +3,7 @@\n template <class T>\n void f(T) {}\t\t\t// { dg-message \"initializing\" }\n \n-class C;    // { dg-error \"forward declaration\" }\n+class C;    // { dg-message \"forward declaration\" }\n \n void g(const C& c)\n {"}, {"sha": "3130d32cadb83aaa2bac928b34716c7c23d90738", "filename": "gcc/testsuite/g++.old-deja/g++.pt/niklas01a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fniklas01a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fniklas01a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fniklas01a.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n // { dg-options \"-fshow-column\" }\n \n-struct A { // { dg-error \"\" } forward declaration\n+struct A { // { dg-message \"\" } forward declaration\n   friend struct B : A {\t\t// { dg-error \"invalid use of incomplete type 'struct A\" \"invalid\" }\n     int x;\n   };\t// { dg-error \"class definition may not be declared a friend\" \"may not\"  { target *-*-* } { 5 } }"}, {"sha": "581d6ce764d08bbb0c7776358b073be134167578", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename8.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -17,7 +17,7 @@ public:\n   }\n };\n \n-class B : public A< B > // { dg-error \"\" } forward declaration\n+class B : public A< B > // { dg-message \"\" } forward declaration\n {\n public:\n   typedef int myT;"}, {"sha": "cecf0aac50fbb09d049315b649e287e7c664219d", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/ice990323-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Fice990323-1.C?ref=7fb80849cb4af6c1f90c2464a38f2b20a8e3d0fb", "patch": "@@ -4,6 +4,6 @@\n struct A {};\n void f()\n {\n-        struct A; // { dg-error \"\" } forward ref\n+        struct A; // { dg-message \"\" } forward ref\n         throw *(new A); // { dg-error \"\" } invalid use of undefined type\n }"}]}