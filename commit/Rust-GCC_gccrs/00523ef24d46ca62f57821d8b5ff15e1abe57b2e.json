{"sha": "00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA1MjNlZjI0ZDQ2Y2E2MmY1NzgyMWQ4YjVmZjE1ZTFhYmU1N2IyZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:28:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:28:02Z"}, "message": "(andsi3): Changed into define_expand.\n\n(andsi3_internal): Rename from old andsi3, changed condition to !TARGET_5200.\n(andsi2_5200): New insn.\n(iorsi3): Change into define_expand.\n(iorsi2_internal): Rename from old iorsi3, changed condition to !TARGET_5200.\n(iorsi2_5200): New insn.\n(xorsi3): Change into define_expand.\n(xorsi2_internal): Rename from old xorsi3, changed condition to !TARGET_5200.\n(xorsi2_5200): New insn.\n\nFrom-SVN: r13240", "tree": {"sha": "09405082b7d914da9e95c147ec912214c24a3280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09405082b7d914da9e95c147ec912214c24a3280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00523ef24d46ca62f57821d8b5ff15e1abe57b2e/comments", "author": null, "committer": null, "parents": [{"sha": "3022deed9ea808bef6b3069fbe5da75271a6dab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3022deed9ea808bef6b3069fbe5da75271a6dab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3022deed9ea808bef6b3069fbe5da75271a6dab3"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "30642e670dfc8804b8647ab2384d776e851e86f1", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00523ef24d46ca62f57821d8b5ff15e1abe57b2e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00523ef24d46ca62f57821d8b5ff15e1abe57b2e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "patch": "@@ -3431,11 +3431,19 @@\n ;; Prevent AND from being made with sp.  This doesn't exist in the machine\n ;; and reload will cause inefficient code.  Since sp is a FIXED_REG, we\n ;; can't allocate pseudos into it.\n-(define_insn \"andsi3\"\n+\n+(define_expand \"andsi3\"\n   [(set (match_operand:SI 0 \"not_sp_operand\" \"=m,d\")\n \t(and:SI (match_operand:SI 1 \"general_operand\" \"%0,0\")\n \t\t(match_operand:SI 2 \"general_operand\" \"dKs,dmMs\")))]\n   \"\"\n+  \"\")\n+\n+(define_insn \"andsi3_internal\"\n+  [(set (match_operand:SI 0 \"not_sp_operand\" \"=m,d\")\n+\t(and:SI (match_operand:SI 1 \"general_operand\" \"%0,0\")\n+\t\t(match_operand:SI 2 \"general_operand\" \"dKs,dmMs\")))]\n+  \"!TARGET_5200\"\n   \"*\n {\n   int logval;\n@@ -3476,6 +3484,13 @@\n   return \\\"and%.l %2,%0\\\";\n }\")\n \n+(define_insn \"andsi3_5200\"\n+  [(set (match_operand:SI 0 \"not_sp_operand\" \"=m,d\")\n+\t(and:SI (match_operand:SI 1 \"general_operand\" \"%0,0\")\n+\t\t(match_operand:SI 2 \"general_operand\" \"d,dmsK\")))]\n+  \"TARGET_5200\"\n+  \"and%.l %2,%0\")\n+\n (define_insn \"andhi3\"\n   [(set (match_operand:HI 0 \"general_operand\" \"=m,d\")\n \t(and:HI (match_operand:HI 1 \"general_operand\" \"%0,0\")\n@@ -3520,11 +3535,18 @@\n \f\n ;; inclusive-or instructions\n \n-(define_insn \"iorsi3\"\n+(define_expand \"iorsi3\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"\")\n+\t(ior:SI (match_operand:SI 1 \"general_operand\" \"\")\n+\t\t(match_operand:SI 2 \"general_operand\" \"\")))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"iorsi3_internal\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=m,d\")\n \t(ior:SI (match_operand:SI 1 \"general_operand\" \"%0,0\")\n \t\t(match_operand:SI 2 \"general_operand\" \"dKs,dmMs\")))]\n-  \"\"\n+  \"!TARGET_5200\"\n   \"*\n {\n   register int logval;\n@@ -3560,6 +3582,13 @@\n   return \\\"or%.l %2,%0\\\";\n }\")\n \n+(define_insn \"iorsi3_5200\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"=m,d\")\n+\t(ior:SI (match_operand:SI 1 \"general_operand\" \"%0,0\")\n+\t\t(match_operand:SI 2 \"general_operand\" \"d,dmsK\")))]\n+  \"TARGET_5200\"\n+  \"or%.l %2,%0\")\n+\n (define_insn \"iorhi3\"\n   [(set (match_operand:HI 0 \"general_operand\" \"=m,d\")\n \t(ior:HI (match_operand:HI 1 \"general_operand\" \"%0,0\")\n@@ -3623,11 +3652,18 @@\n \f\n ;; xor instructions\n \n-(define_insn \"xorsi3\"\n+(define_expand \"xorsi3\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"\")\n+\t(xor:SI (match_operand:SI 1 \"general_operand\" \"\")\n+\t\t(match_operand:SI 2 \"general_operand\" \"\")))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"xorsi3_internal\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=do,m\")\n \t(xor:SI (match_operand:SI 1 \"general_operand\" \"%0,0\")\n \t\t(match_operand:SI 2 \"general_operand\" \"di,dKs\")))]\n-  \"\"\n+  \"!TARGET_5200\"\n   \"*\n {\n   if (GET_CODE (operands[2]) == CONST_INT\n@@ -3644,6 +3680,13 @@\n   return \\\"eor%.l %2,%0\\\";\n }\")\n \n+(define_insn \"xorsi3_5200\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"=dm\")\n+\t(xor:SI (match_operand:SI 1 \"general_operand\" \"%0\")\n+\t\t(match_operand:SI 2 \"general_operand\" \"dn\")))]\n+  \"TARGET_5200\"\n+  \"eor%.l %2,%0\")\n+\n (define_insn \"xorhi3\"\n   [(set (match_operand:HI 0 \"general_operand\" \"=dm\")\n \t(xor:HI (match_operand:HI 1 \"general_operand\" \"%0\")"}]}