{"sha": "8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE0NDQ0ZTgwNGY4YzlhNTVhMTJhZTJiOThlNjM5NGE2YTRkOGJhMQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2007-12-13T10:32:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:32:34Z"}, "message": "sem_type.adb (Function_Interp_Has_Abstract_Op): Add guard to check whether formal E is an entity which may have parameters.\n\n2007-12-06  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_type.adb (Function_Interp_Has_Abstract_Op): Add guard to check\n\twhether formal E is an entity which may have parameters.\n\nFrom-SVN: r130858", "tree": {"sha": "1d0b66a98fc5e743ba8b02abb499058ea5d49692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d0b66a98fc5e743ba8b02abb499058ea5d49692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1980be8313c131ac0f97966e2574c88296a7669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1980be8313c131ac0f97966e2574c88296a7669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1980be8313c131ac0f97966e2574c88296a7669"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "c5ae359e7fe47099e05178aa97d06d00c9a48066", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=8a4444e804f8c9a55a12ae2b98e6394a6a4d8ba1", "patch": "@@ -424,11 +424,11 @@ package body Sem_Type is\n         and then Present (Abstract_Interface_Alias (E))\n       then\n          --  Ada 2005 (AI-251): If this primitive operation corresponds with\n-         --  an inmediate ancestor interface there is no need to add it to the\n-         --  list of interpretations; the corresponding aliased primitive is\n+         --  an immediate ancestor interface there is no need to add it to the\n+         --  list of interpretations. The corresponding aliased primitive is\n          --  also in this list of primitive operations and will be used instead\n-         --  because otherwise we have a dummy between the two subprograms that\n-         --  are in fact the same.\n+         --  because otherwise we have a dummy ambiguity between the two\n+         --  subprograms which are in fact the same.\n \n          if not Is_Ancestor\n                   (Find_Dispatching_Type (Abstract_Interface_Alias (E)),\n@@ -505,8 +505,8 @@ package body Sem_Type is\n             end;\n \n          else\n-            --  Overloaded prefix in indexed or selected component,\n-            --  or call whose name is an expression or another call.\n+            --  Overloaded prefix in indexed or selected component, or call\n+            --  whose name is an expression or another call.\n \n             Add_Entry (Etype (N), Etype (N));\n          end if;\n@@ -530,6 +530,7 @@ package body Sem_Type is\n             Write_Entity_Info (All_Interp.Table (J). Nam, \" \");\n          else\n             Write_Str (\"No Interp\");\n+            Write_Eol;\n          end if;\n \n          Write_Str (\"=================\");\n@@ -641,7 +642,7 @@ package body Sem_Type is\n                Add_One_Interp (N, H, Etype (H));\n \n                if Debug_Flag_E then\n-                  Write_Str (\"Add overloaded Interpretation \");\n+                  Write_Str (\"Add overloaded interpretation \");\n                   Write_Int (Int (H));\n                   Write_Eol;\n                end if;\n@@ -1981,7 +1982,10 @@ package body Sem_Type is\n       Form_Parm : Node_Id;\n \n    begin\n-      if Is_Overloaded (N) then\n+      --  Why is check on E needed below ???\n+      --  In any case this para needs comments ???\n+\n+      if Is_Overloaded (N) and then Is_Overloadable (E) then\n          Act_Parm  := First_Actual (N);\n          Form_Parm := First_Formal (E);\n          while Present (Act_Parm)"}]}