{"sha": "c3a5818eb21528f43a47e603dccb3e0b42c0c879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNhNTgxOGViMjE1MjhmNDNhNDdlNjAzZGNjYjNlMGI0MmMwYzg3OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-10-25T21:30:04Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-10-25T21:30:04Z"}, "message": "spu: Remove vec_extract_even/odd and vec_interleave expanders.\n\n        * config/spu/spu.md (vec_extract_evenv4si, vec_extract_evenv4sf,\n        vec_extract_evenv8hi, vec_extract_evenv16qi, vec_extract_oddv4si,\n        vec_extract_oddv4sf, vec_extract_oddv8hi, vec_extract_oddv16qi,\n        vec_interleave_highv4sf, vec_interleave_lowv4sf,\n        vec_interleave_highv4si, vec_interleave_lowv4si,\n        vec_interleave_highv8hi, vec_interleave_lowv8hi,\n        vec_interleave_highv16qi, vec_interleave_lowv16qi): Remove.\n\nFrom-SVN: r180451", "tree": {"sha": "83004855d56f4085e07f9c6a3b6bd0f39eac2a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83004855d56f4085e07f9c6a3b6bd0f39eac2a11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3a5818eb21528f43a47e603dccb3e0b42c0c879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a5818eb21528f43a47e603dccb3e0b42c0c879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a5818eb21528f43a47e603dccb3e0b42c0c879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a5818eb21528f43a47e603dccb3e0b42c0c879/comments", "author": null, "committer": null, "parents": [{"sha": "a6b3dfde4c29fda63839bcac6cc9377d42704507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b3dfde4c29fda63839bcac6cc9377d42704507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b3dfde4c29fda63839bcac6cc9377d42704507"}], "stats": {"total": 441, "additions": 8, "deletions": 433}, "files": [{"sha": "873e6ad893b2593a7e33a2799ea808c365f4af54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3a5818eb21528f43a47e603dccb3e0b42c0c879/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3a5818eb21528f43a47e603dccb3e0b42c0c879/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3a5818eb21528f43a47e603dccb3e0b42c0c879", "patch": "@@ -1,5 +1,13 @@\n 2011-10-25  Richard Henderson  <rth@redhat.com>\n \n+\t* config/spu/spu.md (vec_extract_evenv4si, vec_extract_evenv4sf,\n+\tvec_extract_evenv8hi, vec_extract_evenv16qi, vec_extract_oddv4si,\n+\tvec_extract_oddv4sf, vec_extract_oddv8hi, vec_extract_oddv16qi,\n+\tvec_interleave_highv4sf, vec_interleave_lowv4sf,\n+\tvec_interleave_highv4si, vec_interleave_lowv4si,\n+\tvec_interleave_highv8hi, vec_interleave_lowv8hi,\n+\tvec_interleave_highv16qi, vec_interleave_lowv16qi): Remove.\n+\n \t* expr.c (expand_expr_real_2) [VEC_EXTRACT_EVEN_EXPR]: Use binop.\n \t[VEC_EXTRACT_ODD_EXPR, VEC_INTERLEAVE_HIGH_EXPR]: Likewise.\n \t[VEC_INTERLEAVE_LOW_EXPR]: Likewise."}, {"sha": "3178a6df5936a864746ed53e8bbf2919a08a54f1", "filename": "gcc/config/spu/spu.md", "status": "modified", "additions": 0, "deletions": 433, "changes": 433, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3a5818eb21528f43a47e603dccb3e0b42c0c879/gcc%2Fconfig%2Fspu%2Fspu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3a5818eb21528f43a47e603dccb3e0b42c0c879/gcc%2Fconfig%2Fspu%2Fspu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.md?ref=c3a5818eb21528f43a47e603dccb3e0b42c0c879", "patch": "@@ -4947,439 +4947,6 @@ DONE;\n })\n \n \f\n-(define_expand \"vec_extract_evenv4si\"\n- [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V4SI\n-         (vec_select:V2SI\n-\t   (match_operand:V4SI 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)]))\n-         (vec_select:V2SI\n-\t   (match_operand:V4SI 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-\t0x00, 0x01, 0x02, 0x03,\n- \t0x08, 0x09, 0x0A, 0x0B,\n- \t0x10, 0x11, 0x12, 0x13,\n- \t0x18, 0x19, 0x1A, 0x1B};\t\n- \n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n-\n- \n-(define_expand \"vec_extract_evenv4sf\"\n- [(set (match_operand:V4SF 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V4SF\n-         (vec_select:V2SF\n-\t   (match_operand:V4SF 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)]))\n-         (vec_select:V2SF\n-\t   (match_operand:V4SF 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x00, 0x01, 0x02, 0x03,\n-        0x08, 0x09, 0x0A, 0x0B,\n-        0x10, 0x11, 0x12, 0x13,\n-        0x18, 0x19, 0x1A, 0x1B};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_extract_evenv8hi\"\n- [(set (match_operand:V8HI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V8HI\n-         (vec_select:V4HI\n-\t   (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)]))\n-         (vec_select:V4HI\n-\t   (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x00, 0x01, 0x04, 0x05,\n-        0x08, 0x09, 0x0C, 0x0D,\n-        0x10, 0x11, 0x14, 0x15,\n-        0x18, 0x19, 0x1C, 0x1D};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_extract_evenv16qi\"\n- [(set (match_operand:V16QI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V16QI\n-         (vec_select:V8QI\n-\t   (match_operand:V16QI 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)\n-\t\t      (const_int 8)(const_int 10)(const_int 12)(const_int 14)]))\n-         (vec_select:V8QI\n-\t   (match_operand:V16QI 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 0)(const_int 2)(const_int 4)(const_int 6)\n-\t\t      (const_int 8)(const_int 10)(const_int 12)(const_int 14)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x00, 0x02, 0x04, 0x06,\n-        0x08, 0x0A, 0x0C, 0x0E,\n-        0x10, 0x12, 0x14, 0x16,\n-        0x18, 0x1A, 0x1C, 0x1E};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_extract_oddv4si\"\n- [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V4SI\n-         (vec_select:V2SI\n-\t   (match_operand:V4SI 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)]))\n-         (vec_select:V2SI\n-\t   (match_operand:V4SI 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x04, 0x05, 0x06, 0x07,\n-        0x0C, 0x0D, 0x0E, 0x0F,\n-        0x14, 0x15, 0x16, 0x17,\n-        0x1C, 0x1D, 0x1E, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_extract_oddv4sf\"\n- [(set (match_operand:V4SF 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V4SF\n-         (vec_select:V2SF\n-\t   (match_operand:V4SF 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)]))\n-         (vec_select:V2SF\n-\t   (match_operand:V4SF 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x04, 0x05, 0x06, 0x07,\n-        0x0C, 0x0D, 0x0E, 0x0F,\n-        0x14, 0x15, 0x16, 0x17,\n-        0x1C, 0x1D, 0x1E, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n-\n-(define_expand \"vec_extract_oddv8hi\"\n- [(set (match_operand:V8HI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V8HI\n-         (vec_select:V4HI\n-\t   (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)]))\n-         (vec_select:V4HI\n-\t   (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x02, 0x03, 0x06, 0x07,\n-        0x0A, 0x0B, 0x0E, 0x0F,\n-        0x12, 0x13, 0x16, 0x17,\n-        0x1A, 0x1B, 0x1E, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_extract_oddv16qi\"\n- [(set (match_operand:V16QI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_concat:V16QI\n-         (vec_select:V8QI\n-\t   (match_operand:V16QI 1 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)\n-\t\t      (const_int 9)(const_int 11)(const_int 13)(const_int 15)]))\n-         (vec_select:V8QI\n-\t   (match_operand:V16QI 2 \"spu_reg_operand\" \"r\")\n-\t   (parallel [(const_int 1)(const_int 3)(const_int 5)(const_int 7)\n-\t\t      (const_int 9)(const_int 11)(const_int 13)(const_int 15)]))))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x01, 0x03, 0x05, 0x07,\n-        0x09, 0x0B, 0x0D, 0x0F,\n-        0x11, 0x13, 0x15, 0x17,\n-        0x19, 0x1B, 0x1D, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_interleave_highv4sf\"\n- [(set (match_operand:V4SF 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V4SF\n-         (vec_concat:V4SF\n-           (vec_select:V2SF\n-\t     (match_operand:V4SF 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)]))\n-           (vec_select:V2SF\n-\t     (match_operand:V4SF 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)])))\n-\t (parallel [(const_int 0)(const_int 2)(const_int 1)(const_int 3)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x00, 0x01, 0x02, 0x03,\n-        0x10, 0x11, 0x12, 0x13,\n-        0x04, 0x05, 0x06, 0x07,\n-        0x14, 0x15, 0x16, 0x17};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n-\n-(define_expand \"vec_interleave_lowv4sf\"\n- [(set (match_operand:V4SF 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V4SF\n-         (vec_concat:V4SF\n-           (vec_select:V2SF\n-\t     (match_operand:V4SF 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 2)(const_int 3)]))\n-           (vec_select:V2SF\n-\t     (match_operand:V4SF 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 2)(const_int 3)])))\n-\t (parallel [(const_int 0)(const_int 2)(const_int 1)(const_int 3)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x08, 0x09, 0x0A, 0x0B,\n-        0x18, 0x19, 0x1A, 0x1B,\n-        0x0C, 0x0D, 0x0E, 0x0F,\n-        0x1C, 0x1D, 0x1E, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_interleave_highv4si\"\n- [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V4SI\n-         (vec_concat:V4SI\n-           (vec_select:V2SI\n-\t     (match_operand:V4SI 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)]))\n-           (vec_select:V2SI\n-\t     (match_operand:V4SI 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)])))\n-\t (parallel [(const_int 0)(const_int 2)(const_int 1)(const_int 3)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-\t0x00, 0x01, 0x02, 0x03,\n-\t0x10, 0x11, 0x12, 0x13,\n- \t0x04, 0x05, 0x06, 0x07,\n- \t0x14, 0x15, 0x16, 0x17};\n- \n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n-\n-(define_expand \"vec_interleave_lowv4si\"\n- [(set (match_operand:V4SI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V4SI\n-         (vec_concat:V4SI\n-           (vec_select:V2SI\n-\t     (match_operand:V4SI 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 2)(const_int 3)]))\n-           (vec_select:V2SI\n-\t     (match_operand:V4SI 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 2)(const_int 3)])))\n-\t (parallel [(const_int 0)(const_int 2)(const_int 1)(const_int 3)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x08, 0x09, 0x0A, 0x0B,\n-        0x18, 0x19, 0x1A, 0x1B,\n-        0x0C, 0x0D, 0x0E, 0x0F,\n-        0x1C, 0x1D, 0x1E, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_interleave_highv8hi\"\n- [(set (match_operand:V8HI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V8HI\n-         (vec_concat:V8HI\n-           (vec_select:V4HI\n-\t     (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)(const_int 2)(const_int 3)]))\n-           (vec_select:V4HI\n-\t     (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)(const_int 2)(const_int 3)])))\n-\t (parallel [(const_int 0)(const_int 4)(const_int 1)(const_int 5)\n-\t\t    (const_int 2)(const_int 6)(const_int 3)(const_int 7)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x00, 0x01, 0x10, 0x11,\n-        0x02, 0x03, 0x12, 0x13,\n-        0x04, 0x05, 0x14, 0x15,\n-        0x06, 0x07, 0x16, 0x17};\n- \n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n- }\")\n- \n-(define_expand \"vec_interleave_lowv8hi\"\n- [(set (match_operand:V8HI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V8HI\n-         (vec_concat:V8HI\n-           (vec_select:V4HI\n-\t     (match_operand:V8HI 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 4)(const_int 5)(const_int 6)(const_int 7)]))\n-           (vec_select:V4HI\n-\t     (match_operand:V8HI 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 4)(const_int 5)(const_int 6)(const_int 7)])))\n-\t (parallel [(const_int 0)(const_int 4)(const_int 1)(const_int 5)\n-\t\t    (const_int 2)(const_int 6)(const_int 3)(const_int 7)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x08, 0x09, 0x18, 0x19,\n-        0x0A, 0x0B, 0x1A, 0x1B,\n-        0x0C, 0x0D, 0x1C, 0x1D,\n-        0x0E, 0x0F, 0x1E, 0x1F};\n-\n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_interleave_highv16qi\"\n- [(set (match_operand:V16QI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V16QI\n-         (vec_concat:V16QI\n-           (vec_select:V8QI\n-\t     (match_operand:V16QI 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)(const_int 2)(const_int 3)\n-\t\t        (const_int 4)(const_int 5)(const_int 6)(const_int 7)]))\n-           (vec_select:V8QI\n-\t     (match_operand:V16QI 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 0)(const_int 1)(const_int 2)(const_int 3)\n-\t\t        (const_int 4)(const_int 5)(const_int 6)(const_int 7)])))\n-\t (parallel [(const_int 0)(const_int 8)(const_int 1)(const_int 9)\n-\t\t    (const_int 2)(const_int 10)(const_int 3)(const_int 11)\n-\t\t    (const_int 4)(const_int 12)(const_int 5)(const_int 13)\n-\t\t    (const_int 6)(const_int 14)(const_int 7)(const_int 15)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-        0x00, 0x10, 0x01, 0x11,\n-        0x02, 0x12, 0x03, 0x13,\n-        0x04, 0x14, 0x05, 0x15,\n-        0x06, 0x16, 0x07, 0x17};\n- \n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n- \n-(define_expand \"vec_interleave_lowv16qi\"\n- [(set (match_operand:V16QI 0 \"spu_reg_operand\" \"=r\")\n-       (vec_select:V16QI\n-         (vec_concat:V16QI\n-           (vec_select:V8QI\n-\t     (match_operand:V16QI 1 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 8)(const_int 9)(const_int 10)(const_int 11)\n-\t\t        (const_int 12)(const_int 13)(const_int 14)(const_int 15)]))\n-           (vec_select:V8QI\n-\t     (match_operand:V16QI 2 \"spu_reg_operand\" \"r\")\n-\t     (parallel [(const_int 8)(const_int 9)(const_int 10)(const_int 11)\n-\t\t        (const_int 12)(const_int 13)(const_int 14)(const_int 15)])))\n-\t (parallel [(const_int 0)(const_int 8)(const_int 1)(const_int 9)\n-\t\t    (const_int 2)(const_int 10)(const_int 3)(const_int 11)\n-\t\t    (const_int 4)(const_int 12)(const_int 5)(const_int 13)\n-\t\t    (const_int 6)(const_int 14)(const_int 7)(const_int 15)])))]\n- \n-  \"\"\n-  \"\n-{\n-  rtx mask = gen_reg_rtx (TImode);\n-  unsigned char arr[16] = {\n-         0x08, 0x18, 0x09, 0x19,\n-         0x0A, 0x1A, 0x0B, 0x1B,\n-         0x0C, 0x1C, 0x0D, 0x1D,\n-         0x0E, 0x1E, 0x0F, 0x1F};\n- \n-  emit_move_insn (mask, array_to_constant (TImode, arr));\n-  emit_insn (gen_shufb (operands[0], operands[1], operands[2], mask));\n-  DONE;\n-}\")\n-\n (define_expand \"vec_pack_trunc_v8hi\"\n   [(set (match_operand:V16QI 0 \"spu_reg_operand\" \"=r\")\n \t(vec_concat:V16QI"}]}