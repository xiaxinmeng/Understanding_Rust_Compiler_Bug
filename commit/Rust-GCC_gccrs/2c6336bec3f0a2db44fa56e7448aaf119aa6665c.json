{"sha": "2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM2MzM2YmVjM2YwYTJkYjQ0ZmE1NmU3NDQ4YWFmMTE5YWE2NjY1Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-30T15:06:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-30T15:06:14Z"}, "message": "[multiple changes]\n\n2015-01-30  Gary Dismukes  <dismukes@adacore.com>\n\n\t* freeze.adb: Minor reformatting.\n\n2015-01-30  Javier Miranda  <miranda@adacore.com>\n\n\t* errout.ads (Error_Msg_PT): Replace Node_Id by Entity_Id and\n\timprove its documentation.\n\t* errout.adb (Error_Msg_PT): Improve the error message.\n\t* sem_ch6.adb (Check_Conformance): Update call to Error_Msg_PT.\n\t(Check_Synchronized_Overriding): Update call to Error_Msg_PT.\n\t* sem_ch3.adb (Check_Abstract_Overriding): Code cleanup.\n\n2015-01-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb (Warn_On_Known_Condition): Do special casing of\n\tmessage for False case.\n\n2015-01-30  Doug Rupp  <rupp@adacore.com>\n\n\t* s-vxwext-kernel.ads (Task_Cont): Remove imported subprogram body.\n\t* s-vxwext-kernel.adb (Task_Cont): New subpprogram body specialized for\n\tkernel.\n\nFrom-SVN: r220284", "tree": {"sha": "8432c210f1c0904e02463c384d2865634f6ba147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8432c210f1c0904e02463c384d2865634f6ba147"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/comments", "author": null, "committer": null, "parents": [{"sha": "46413d9ea9ce2b3d5b59cc141842fa2d84d74b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46413d9ea9ce2b3d5b59cc141842fa2d84d74b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46413d9ea9ce2b3d5b59cc141842fa2d84d74b69"}], "stats": {"total": 158, "additions": 99, "deletions": 59}, "files": [{"sha": "6a0dbd26f71808f54ae4874cb3bddff7e7d164b7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -1,3 +1,27 @@\n+2015-01-30  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* freeze.adb: Minor reformatting.\n+\n+2015-01-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* errout.ads (Error_Msg_PT): Replace Node_Id by Entity_Id and\n+\timprove its documentation.\n+\t* errout.adb (Error_Msg_PT): Improve the error message.\n+\t* sem_ch6.adb (Check_Conformance): Update call to Error_Msg_PT.\n+\t(Check_Synchronized_Overriding): Update call to Error_Msg_PT.\n+\t* sem_ch3.adb (Check_Abstract_Overriding): Code cleanup.\n+\n+2015-01-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Known_Condition): Do special casing of\n+\tmessage for False case.\n+\n+2015-01-30  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-vxwext-kernel.ads (Task_Cont): Remove imported subprogram body.\n+\t* s-vxwext-kernel.adb (Task_Cont): New subpprogram body specialized for\n+\tkernel.\n+\n 2015-01-30  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_attr.adb (Declared_Within_Generic_Unit):"}, {"sha": "d04d132636e6c761b217cf7f9fd2a6299979224a", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -680,14 +680,14 @@ package body Errout is\n    -- Error_Msg_PT --\n    ------------------\n \n-   procedure Error_Msg_PT (Typ : Node_Id; Subp : Node_Id) is\n+   procedure Error_Msg_PT (E : Entity_Id; Iface_Prim : Entity_Id) is\n    begin\n-      Error_Msg_NE\n-        (\"first formal of & must be of mode `OUT`, `IN OUT` or \" &\n-         \"access-to-variable\", Typ, Subp);\n       Error_Msg_N\n-        (\"\\in order to be overridden by protected procedure or entry \" &\n-         \"(RM 9.4(11.9/2))\", Typ);\n+        (\"illegal overriding of subprogram inherited from interface\", E);\n+\n+      Error_Msg_Sloc := Sloc (Iface_Prim);\n+      Error_Msg_N\n+        (\"\\first formal of & declared # has wrong mode (RM 9.4(11.9))\", E);\n    end Error_Msg_PT;\n \n    -----------------"}, {"sha": "610588048d061ac27846c3d14ac7c3359eb8d607", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -848,9 +848,10 @@ package Errout is\n    --  run-time mode or no run-time mode (as appropriate). In the former case,\n    --  the name of the library is output if available.\n \n-   procedure Error_Msg_PT (Typ : Node_Id; Subp : Node_Id);\n-   --  Posts an error on the protected type declaration Typ indicating wrong\n-   --  mode of the first formal of protected type primitive Subp.\n+   procedure Error_Msg_PT (E : Entity_Id; Iface_Prim : Entity_Id);\n+   --  Posts an error on protected type entry or subprogram E (referencing its\n+   --  overridden interface primitive Iface_Prim) indicating wrong mode of the\n+   --  first formal (RM 9.4(11.9/3))\n \n    procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr);\n    --  If not operating in Ada 2012 mode, posts errors complaining that Feature"}, {"sha": "3c88297aae9f2c20defbf48ed98fe78e1266fc81", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -1800,7 +1800,7 @@ package body Freeze is\n \n          --  Historical note: We used to create a finalization master for an\n          --  access type whose designated type is not controlled, but contains\n-         --  private controlled compoments. This form of post processing is no\n+         --  private controlled compoments. This form of postprocessing is no\n          --  longer needed because the finalization master is now created when\n          --  the access type is frozen (see Exp_Ch3.Freeze_Type).\n "}, {"sha": "404e9aaa946a27dceea5efb9eb0d4ba204f8f4a6", "filename": "gcc/ada/s-vxwext-kernel.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fs-vxwext-kernel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fs-vxwext-kernel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.adb?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2015, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -85,6 +85,17 @@ package body System.VxWorks.Ext is\n       return ERROR;\n    end taskMaskAffinitySet;\n \n+   --------------\n+   -- taskCont --\n+   --------------\n+\n+   function Task_Cont (tid : t_id) return int is\n+      function taskCont (tid : t_id) return int;\n+      pragma Import (C, taskCont, \"taskCont\");\n+   begin\n+      return taskCont (tid);\n+   end Task_Cont;\n+\n    --------------\n    -- taskStop --\n    --------------"}, {"sha": "dfdbcf1954492a6564f04c458f60ce8db0c0f74b", "filename": "gcc/ada/s-vxwext-kernel.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fs-vxwext-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fs-vxwext-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.ads?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2015, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,7 +73,7 @@ package System.VxWorks.Ext is\n    pragma Convention (C, semDelete);\n \n    function Task_Cont (tid : t_id) return int;\n-   pragma Import (C, Task_Cont, \"taskCont\");\n+   pragma Convention (C, Task_Cont);\n \n    function Task_Stop (tid : t_id) return int;\n    pragma Convention (C, Task_Stop);"}, {"sha": "7699a6fc80f98ea1b5720fdcd6feac8cfd0c339d", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 23, "deletions": 35, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -10050,46 +10050,34 @@ package body Sem_Ch3 is\n                elsif Is_Concurrent_Record_Type (T)\n                  and then Present (Interfaces (T))\n                then\n-                  --  If an inherited subprogram is implemented by a protected\n-                  --  procedure or an entry, then the first parameter of the\n-                  --  inherited subprogram shall be of mode OUT or IN OUT, or\n-                  --  an access-to-variable parameter (RM 9.4(11.9/3))\n-\n-                  if Is_Protected_Type (Corresponding_Concurrent_Type (T))\n-                    and then Ekind (First_Formal (Subp)) = E_In_Parameter\n-                    and then Ekind (Subp) /= E_Function\n-                    and then not Is_Predefined_Dispatching_Operation (Subp)\n-                  then\n-                     Error_Msg_PT (T, Subp);\n-\n-                  --  Some other kind of overriding failure\n+                  --  There is no need to check here RM 9.4(11.9/3) since we\n+                  --  are processing the corresponding record type and the\n+                  --  mode of the overriding subprograms was verified by\n+                  --  Check_Conformance when the corresponding concurrent\n+                  --  type declaration was analyzed.\n \n-                  else\n-                     Error_Msg_NE\n-                       (\"interface subprogram & must be overridden\",\n-                        T, Subp);\n+                  Error_Msg_NE\n+                    (\"interface subprogram & must be overridden\", T, Subp);\n \n-                     --  Examine primitive operations of synchronized type,\n-                     --  to find homonyms that have the wrong profile.\n+                  --  Examine primitive operations of synchronized type to find\n+                  --  homonyms that have the wrong profile.\n \n-                     declare\n-                        Prim : Entity_Id;\n+                  declare\n+                     Prim : Entity_Id;\n \n-                     begin\n-                        Prim :=\n-                          First_Entity (Corresponding_Concurrent_Type (T));\n-                        while Present (Prim) loop\n-                           if Chars (Prim) = Chars (Subp) then\n-                              Error_Msg_NE\n-                                (\"profile is not type conformant with \"\n-                                   & \"prefixed view profile of \"\n-                                   & \"inherited operation&\", Prim, Subp);\n-                           end if;\n+                  begin\n+                     Prim := First_Entity (Corresponding_Concurrent_Type (T));\n+                     while Present (Prim) loop\n+                        if Chars (Prim) = Chars (Subp) then\n+                           Error_Msg_NE\n+                             (\"profile is not type conformant with prefixed \"\n+                              & \"view profile of inherited operation&\",\n+                              Prim, Subp);\n+                        end if;\n \n-                           Next_Entity (Prim);\n-                        end loop;\n-                     end;\n-                  end if;\n+                        Next_Entity (Prim);\n+                     end loop;\n+                  end;\n                end if;\n \n             else"}, {"sha": "575f0b68039bbe64031d97548133547d3e46dff1", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5117,7 +5117,7 @@ package body Sem_Ch6 is\n                   begin\n                      if Is_Protected_Type (Corresponding_Concurrent_Type (T))\n                      then\n-                        Error_Msg_PT (T, New_Id);\n+                        Error_Msg_PT (New_Id, Ultimate_Alias (Old_Id));\n                      else\n                         Conformance_Error\n                           (\"\\mode of & does not match!\", New_Formal);\n@@ -9364,7 +9364,7 @@ package body Sem_Ch6 is\n                      or else Is_Synchronized_Interface (Iface_Typ)\n                      or else Is_Task_Interface (Iface_Typ))\n                then\n-                  Error_Msg_PT (Parent (Typ), Candidate);\n+                  Error_Msg_PT (Def_Id, Candidate);\n                end if;\n             end if;\n "}, {"sha": "355599b095745afe08291aa304c6778bfca012e2", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6336bec3f0a2db44fa56e7448aaf119aa6665c/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=2c6336bec3f0a2db44fa56e7448aaf119aa6665c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3390,28 +3390,44 @@ package body Sem_Warn is\n                Cond        : Node_Id := C;\n \n             begin\n-               if Present (Parent (C)) and then Nkind (Parent (C)) = N_Op_Not\n+               if Present (Parent (C))\n+                 and then Nkind (Parent (C)) = N_Op_Not\n                then\n                   True_Branch := not True_Branch;\n-                  Cond        := Parent (C);\n+                  Cond := Parent (C);\n                end if;\n \n+               --  Condition always True\n+\n                if True_Branch then\n                   if Is_Entity_Name (Original_Node (C))\n                     and then Nkind (Cond) /= N_Op_Not\n                   then\n                      Error_Msg_NE\n-                       (\"object & is always True?c?\", Cond, Original_Node (C));\n+                       (\"object & is always True?c?\",\n+                        Cond, Original_Node (C));\n                      Track (Original_Node (C), Cond);\n \n                   else\n                      Error_Msg_N (\"condition is always True?c?\", Cond);\n                      Track (Cond, Cond);\n                   end if;\n \n+               --  Condition always False\n+\n                else\n-                  Error_Msg_N (\"condition is always False?c?\", Cond);\n-                  Track (Cond, Cond);\n+                  if Is_Entity_Name (Original_Node (C))\n+                    and then Nkind (Cond) /= N_Op_Not\n+                  then\n+                     Error_Msg_NE\n+                       (\"object & is always False?c?\",\n+                        Cond, Original_Node (C));\n+                     Track (Original_Node (C), Cond);\n+\n+                  else\n+                     Error_Msg_N (\"condition is always False?c?\", Cond);\n+                     Track (Cond, Cond);\n+                  end if;\n                end if;\n             end;\n          end if;"}]}