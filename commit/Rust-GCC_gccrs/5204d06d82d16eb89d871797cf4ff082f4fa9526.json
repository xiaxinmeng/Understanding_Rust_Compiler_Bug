{"sha": "5204d06d82d16eb89d871797cf4ff082f4fa9526", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwNGQwNmQ4MmQxNmViODlkODcxNzk3Y2Y0ZmYwODJmNGZhOTUyNg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2006-04-24T13:40:21Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2006-04-24T13:40:21Z"}, "message": "dyn_load.c (GC_has_static_roots): Declare.\n\n2006-03-07  Andrew Haley  <aph@redhat.com>\n\n        * dyn_load.c (GC_has_static_roots): Declare.\n        (GC_register_dynlib_callback): Call GC_has_static_roots.\n\nFrom-SVN: r113223", "tree": {"sha": "a8074b9a8a67aadac33d1495f247696c5b362985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8074b9a8a67aadac33d1495f247696c5b362985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5204d06d82d16eb89d871797cf4ff082f4fa9526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5204d06d82d16eb89d871797cf4ff082f4fa9526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5204d06d82d16eb89d871797cf4ff082f4fa9526", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5204d06d82d16eb89d871797cf4ff082f4fa9526/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d84b37b08adcd3f280d1711317488ad7824e4697", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d84b37b08adcd3f280d1711317488ad7824e4697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d84b37b08adcd3f280d1711317488ad7824e4697"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "a27b9f3518db7181ca55c3e280e48bbd90573437", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5204d06d82d16eb89d871797cf4ff082f4fa9526/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5204d06d82d16eb89d871797cf4ff082f4fa9526/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=5204d06d82d16eb89d871797cf4ff082f4fa9526", "patch": "@@ -1,3 +1,8 @@\n+2006-03-07  Andrew Haley  <aph@redhat.com>\n+\n+\t* dyn_load.c (GC_has_static_roots): Declare.\n+\t(GC_register_dynlib_callback): Call GC_has_static_roots.\n+\n 2006-04-11  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* darwin_stop_world.c (GC_push_all_stacks, GC_stop_world,"}, {"sha": "94e66092e3133643d07661f22ff41f19291013b4", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5204d06d82d16eb89d871797cf4ff082f4fa9526/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5204d06d82d16eb89d871797cf4ff082f4fa9526/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=5204d06d82d16eb89d871797cf4ff082f4fa9526", "patch": "@@ -119,6 +119,17 @@\n #    endif\n #  endif\n \n+/* An user-supplied routine that is called to dtermine if a DSO must\n+   be scanned by the gc.  */\n+static int (*GC_has_static_roots)(const char *, void *, size_t);\n+/* Register the routine.  */\n+void\n+GC_register_has_static_roots_callback \n+  (int (*callback)(const char *, void *, size_t))\n+{\n+  GC_has_static_roots = callback;\n+}\n+\n #if defined(SUNOS5DL) && !defined(USE_PROC_FOR_LIBRARIES)\n \n #ifdef LINT\n@@ -371,7 +382,7 @@ GC_bool GC_register_main_static_data()\n {\n   return FALSE;\n }\n-  \n+\n # define HAVE_REGISTER_MAIN_STATIC_DATA\n \n #endif /* USE_PROC_FOR_LIBRARIES */\n@@ -411,6 +422,11 @@ static int GC_register_dynlib_callback(info, size, ptr)\n \t{\n \t  if( !(p->p_flags & PF_W) ) break;\n \t  start = ((char *)(p->p_vaddr)) + info->dlpi_addr;\n+\n+\t  if (GC_has_static_roots \n+\t      && !GC_has_static_roots(info->dlpi_name, start, p->p_memsz))\n+\t    break;\n+\n \t  GC_add_roots_inner(start, start + p->p_memsz, TRUE);\n \t}\n       break;"}, {"sha": "3507db74dc51955e813c2f8ca43f9938ff6ea526", "filename": "boehm-gc/include/gc.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5204d06d82d16eb89d871797cf4ff082f4fa9526/boehm-gc%2Finclude%2Fgc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5204d06d82d16eb89d871797cf4ff082f4fa9526/boehm-gc%2Finclude%2Fgc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc.h?ref=5204d06d82d16eb89d871797cf4ff082f4fa9526", "patch": "@@ -925,6 +925,15 @@ extern void GC_thr_init GC_PROTO((void));/* Needed for Solaris/X86\t*/\n \n #endif /* THREADS && !SRC_M3 */\n \n+/* Register a callback to control the scanning of dynamic libraries.\n+   When the GC scans the static data of a dynamic library, it will\n+   first call a user-supplied routine with filename of the library and\n+   the address and length of the memory region.  This routine should\n+   return nonzero if that region should be scanned.  */\n+GC_API void GC_register_has_static_roots_callback \n+  (int (*callback)(const char *, void *, size_t));\n+\n+\n #if defined(GC_WIN32_THREADS) && !defined(__CYGWIN32__) && !defined(__CYGWIN__)\n # include <windows.h>\n "}]}