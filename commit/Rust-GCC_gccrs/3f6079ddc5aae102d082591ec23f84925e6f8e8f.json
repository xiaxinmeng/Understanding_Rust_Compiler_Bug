{"sha": "3f6079ddc5aae102d082591ec23f84925e6f8e8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y2MDc5ZGRjNWFhZTEwMmQwODI1OTFlYzIzZjg0OTI1ZTZmOGU4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-12-02T23:52:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-12-02T23:52:02Z"}, "message": "PR c++/35782, c++/37860\n\n        PR c++/35782, c++/37860\n        * call.c (build_user_type_conversion_1): Remember\n        list-initialization.\n        (convert_like_real): Likewise.\n        (build_over_call): Don't require the copy constructor\n        for copy-list-initialization.\n        * cp-tree.h (TARGET_EXPR_LIST_INIT_P): New macro.\n\n        PR c++/37234\n        * decl.c (cp_finish_decl): Handle =default and =delete for\n        templates, too.\n\nFrom-SVN: r142379", "tree": {"sha": "262be80ee636ba4bc960b1d2b5e08a3f8df6719d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/262be80ee636ba4bc960b1d2b5e08a3f8df6719d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f6079ddc5aae102d082591ec23f84925e6f8e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6079ddc5aae102d082591ec23f84925e6f8e8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6079ddc5aae102d082591ec23f84925e6f8e8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6079ddc5aae102d082591ec23f84925e6f8e8f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ba62f90e187e93b37d2bc88a818caa42ad51619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba62f90e187e93b37d2bc88a818caa42ad51619", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba62f90e187e93b37d2bc88a818caa42ad51619"}], "stats": {"total": 139, "additions": 119, "deletions": 20}, "files": [{"sha": "124dc3f959fb67ba27bec8344c3293b7e93d209b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -1,3 +1,17 @@\n+2008-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35782, c++/37860\n+\t* call.c (build_user_type_conversion_1): Remember\n+\tlist-initialization.\n+\t(convert_like_real): Likewise.\n+\t(build_over_call): Don't require the copy constructor\n+\tfor copy-list-initialization.\n+\t* cp-tree.h (TARGET_EXPR_LIST_INIT_P): New macro.\n+\n+\tPR c++/37234\n+\t* decl.c (cp_finish_decl): Handle =default and =delete for\n+\ttemplates, too.\n+\n 2008-12-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/38257"}, {"sha": "273599eddfc2ca083547225197f4eab86ce4b54c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -2871,6 +2871,10 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n      build_identity_conv (TREE_TYPE (expr), expr));\n   conv->cand = cand;\n \n+  /* Remember that this was a list-initialization.  */\n+  if (flags & LOOKUP_NO_NARROWING)\n+    conv->check_narrowing = true;\n+\n   /* Combine it with the second conversion sequence.  */\n   cand->second_conv = merge_conversion_sequences (conv,\n \t\t\t\t\t\t  cand->second_conv);\n@@ -4579,7 +4583,13 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t/* If this is a constructor or a function returning an aggr type,\n \t   we need to build up a TARGET_EXPR.  */\n \tif (DECL_CONSTRUCTOR_P (convfn))\n-\t  expr = build_cplus_new (totype, expr);\n+\t  {\n+\t    expr = build_cplus_new (totype, expr);\n+\n+\t    /* Remember that this was list-initialization.  */\n+\t    if (convs->check_narrowing)\n+\t      TARGET_EXPR_LIST_INIT_P (expr) = true;\n+\t  }\n \n \treturn expr;\n       }\n@@ -5314,9 +5324,15 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n       else\n \targ = cp_build_indirect_ref (arg, 0, complain);\n \n+      if (TREE_CODE (arg) == TARGET_EXPR\n+\t  && TARGET_EXPR_LIST_INIT_P (arg))\n+\t{\n+\t  /* Copy-list-initialization doesn't require the copy constructor\n+\t     to be defined.  */\n+\t}\n       /* [class.copy]: the copy constructor is implicitly defined even if\n \t the implementation elided its use.  */\n-      if (TYPE_HAS_COMPLEX_INIT_REF (DECL_CONTEXT (fn)))\n+      else if (TYPE_HAS_COMPLEX_INIT_REF (DECL_CONTEXT (fn)))\n \t{\n \t  mark_used (fn);\n \t  already_used = true;"}, {"sha": "7f33ff139b4b072805804da942f19d61b27ee8f3", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -89,6 +89,7 @@ framework extensions, you must include this file before toplev.h, not after.\n       DECL_INITIALIZED_P (in VAR_DECL)\n       TYPENAME_IS_CLASS_P (in TYPENAME_TYPE)\n       STMT_IS_FULL_EXPR_P (in _STMT)\n+      TARGET_EXPR_LIST_INIT_P (in TARGET_EXPR)\n    2: IDENTIFIER_OPNAME_P (in IDENTIFIER_NODE)\n       ICS_THIS_FLAG (in _CONV)\n       DECL_INITIALIZED_BY_CONSTANT_EXPRESSION_P (in VAR_DECL)\n@@ -3463,6 +3464,11 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n #define TARGET_EXPR_IMPLICIT_P(NODE) \\\n   TREE_LANG_FLAG_0 (TARGET_EXPR_CHECK (NODE))\n \n+/* True if this TARGET_EXPR is the result of list-initialization of a\n+   temporary.  */\n+#define TARGET_EXPR_LIST_INIT_P(NODE) \\\n+  TREE_LANG_FLAG_1 (TARGET_EXPR_CHECK (NODE))\n+\n /* An enumeration of the kind of tags that C++ accepts.  */\n enum tag_types {\n   none_type = 0, /* Not a tag type.  */"}, {"sha": "d045935445e454c15a931eed777cf5a7bd38be1e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -5504,6 +5504,25 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t}\n     }\n \n+  if (init && TREE_CODE (decl) == FUNCTION_DECL)\n+    {\n+      if (init == ridpointers[(int)RID_DELETE])\n+\t{\n+\t  /* FIXME check this is 1st decl.  */\n+\t  DECL_DELETED_FN (decl) = 1;\n+\t  DECL_DECLARED_INLINE_P (decl) = 1;\n+\t  DECL_INITIAL (decl) = error_mark_node;\n+\t  init = NULL_TREE;\n+\t}\n+      else if (init == ridpointers[(int)RID_DEFAULT])\n+\t{\n+\t  if (!defaultable_fn_p (decl))\n+\t    error (\"%qD cannot be defaulted\", decl);\n+\t  else\n+\t    DECL_DEFAULTED_FN (decl) = 1;\n+\t}\n+    }\n+    \n   if (processing_template_decl)\n     {\n       bool type_dependent_p;\n@@ -5765,25 +5784,12 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t{\n \t  if (init)\n \t    {\n-\t      if (init == ridpointers[(int)RID_DELETE])\n-\t\t{\n-\t\t  /* fixme check this is 1st decl */\n-\t\t  DECL_DELETED_FN (decl) = 1;\n-\t\t  DECL_DECLARED_INLINE_P (decl) = 1;\n-\t\t  DECL_INITIAL (decl) = error_mark_node;\n-\t\t}\n-\t      else if (init == ridpointers[(int)RID_DEFAULT])\n+\t      if (init == ridpointers[(int)RID_DEFAULT])\n \t\t{\n-\t\t  if (!defaultable_fn_p (decl))\n-\t\t    error (\"%qD cannot be defaulted\", decl);\n-\t\t  else\n-\t\t    {\n-\t\t      /* An out-of-class default definition is defined at\n-\t\t\t the point where it is explicitly defaulted.  */\n-\t\t      DECL_DEFAULTED_FN (decl) = 1;\n-\t\t      if (DECL_INITIAL (decl) == error_mark_node)\n-\t\t\tsynthesize_method (decl);\n-\t\t    }\n+\t\t  /* An out-of-class default definition is defined at\n+\t\t     the point where it is explicitly defaulted.  */\n+\t\t  if (DECL_INITIAL (decl) == error_mark_node)\n+\t\t    synthesize_method (decl);\n \t\t}\n \t      else\n \t\terror (\"function %q#D is initialized like a variable\", decl);"}, {"sha": "6d585a6ef25530fdb1f6c38eb99e89d660670f28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -1,3 +1,11 @@\n+2008-12-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/35782, c++/37860\n+\t* g++.dg/cpp0x/initlist9.C: New test.\n+\n+\tPR c++/37234\n+\t* g++.dg/cpp0x/defaulted5.C: New test.\n+\n 2008-12-02  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \t* gcc.misc-tests/linkage.exp: Correct file type check for Darwin."}, {"sha": "b7bd16b4063cd1287dd5038e1fc116e3fa96c4d0", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted5.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted5.C?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/37234\n+// { dg-do link }\n+// { dg-options \"-std=c++0x\" }\n+\n+template <typename T>\n+class foo {\n+  public:\n+    foo() =default;\n+    ~foo();\n+};\n+\n+template <typename T>\n+foo<T>::~foo() =default;\n+\n+int main() {\n+\n+    foo<int> fi;\n+\n+    return 0;\n+}"}, {"sha": "61d87f979452920356f46b4a3b21a2468c1b45db", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist9.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6079ddc5aae102d082591ec23f84925e6f8e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist9.C?ref=3f6079ddc5aae102d082591ec23f84925e6f8e8f", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/37860\n+// { dg-options \"-std=c++0x\" }\n+\n+struct b\n+{\n+  bool t;\n+\n+  b() = default;\n+  ~b() = default;\n+  b& operator=(const b&) = delete;\n+  b(const b&) = delete;\n+\n+  b(bool _t): t (_t) { }\n+};\n+\n+int main()\n+{\n+  // copy list initialization\n+  b tst1 = { false };\n+\n+  // copy initialization.\n+  b tst2 = false;\t\t// { dg-error \"deleted\" }\n+\n+  // direct list initialization\n+  b tst3 { false };\n+\n+  // default initialization\n+  b tst4;\n+}"}]}