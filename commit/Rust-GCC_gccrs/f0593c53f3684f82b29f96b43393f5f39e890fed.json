{"sha": "f0593c53f3684f82b29f96b43393f5f39e890fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA1OTNjNTNmMzY4NGY4MmIyOWY5NmI0MzM5M2Y1ZjM5ZTg5MGZlZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2019-07-16T14:44:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-07-16T14:44:44Z"}, "message": "re PR rtl-optimization/91173 (ICE: in int_mode_for_mode, at stor-layout.c:403)\n\n\tPR rtl-optimization/91173\n\t* tree-ssa-address.c (addr_for_mem_ref): If the base is an\n\tSSA_NAME with a constant value, fold its value into the offset\n\tand clear the base before calling gen_addr_rtx.\n\nFrom-SVN: r273529", "tree": {"sha": "f11555575dbcc3b8c3656c20d41d508fb42b336c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f11555575dbcc3b8c3656c20d41d508fb42b336c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0593c53f3684f82b29f96b43393f5f39e890fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0593c53f3684f82b29f96b43393f5f39e890fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0593c53f3684f82b29f96b43393f5f39e890fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0593c53f3684f82b29f96b43393f5f39e890fed/comments", "author": null, "committer": null, "parents": [{"sha": "de2ad117f603491e404acb90510981aa27e087cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2ad117f603491e404acb90510981aa27e087cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de2ad117f603491e404acb90510981aa27e087cc"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "2bce569e320d74b3db484aa50f746fd69118e1a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0593c53f3684f82b29f96b43393f5f39e890fed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0593c53f3684f82b29f96b43393f5f39e890fed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0593c53f3684f82b29f96b43393f5f39e890fed", "patch": "@@ -1,3 +1,10 @@\n+2019-07-16  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/91173\n+\t* tree-ssa-address.c (addr_for_mem_ref): If the base is an\n+\tSSA_NAME with a constant value, fold its value into the offset\n+\tand clear the base before calling gen_addr_rtx.\n+\n 2019-07-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/91164"}, {"sha": "8004951d2e875241eebc37cb22d10fd70307c43d", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0593c53f3684f82b29f96b43393f5f39e890fed/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0593c53f3684f82b29f96b43393f5f39e890fed/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=f0593c53f3684f82b29f96b43393f5f39e890fed", "patch": "@@ -259,6 +259,20 @@ addr_for_mem_ref (struct mem_address *addr, addr_space_t as,\n \t ? expand_expr (addr->index, NULL_RTX, pointer_mode, EXPAND_NORMAL)\n \t : NULL_RTX);\n \n+  /* addr->base could be an SSA_NAME that was set to a constant value.  The\n+     call to expand_expr may expose that constant.  If so, fold the value\n+     into OFF and clear BSE.  Otherwise we may later try to pull a mode from\n+     BSE to generate a REG, which won't work with constants because they\n+     are modeless.  */\n+  if (bse && GET_CODE (bse) == CONST_INT)\n+    {\n+      if (off)\n+\toff = simplify_gen_binary (PLUS, pointer_mode, bse, off);\n+      else\n+\toff = bse;\n+      gcc_assert (GET_CODE (off) == CONST_INT);\n+      bse = NULL_RTX;\n+    }\n   gen_addr_rtx (pointer_mode, sym, bse, idx, st, off, &address, NULL, NULL);\n   if (pointer_mode != address_mode)\n     address = convert_memory_address (address_mode, address);"}]}