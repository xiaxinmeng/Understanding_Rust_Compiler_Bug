{"sha": "1262fd02b65bb037b36551b91df729bace07ba46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2MmZkMDJiNjViYjAzN2IzNjU1MWI5MWRmNzI5YmFjZTA3YmE0Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-14T10:31:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-14T10:31:09Z"}, "message": "re PR target/41019 (Vector conditional move produces wrong code with -O3.)\n\n\tPR target/41019\n\t* config/i386/sse.md (SSEMODE124C8): New mode iterator.\n\t(vcond<SSEMODEF2P:mode>): Assert that operation is supported by\n\tix86_expand_fp_vcond.\n\t(vcond<SSEMODE124C8:mode>): Use SSEMODE124C8 instead of SSEMODE124.\n\tAssert that operation is supported by ix86_expand_int_vcond.\n\t(vcondu<SSEMODE124C8:mode>): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/41019\n\t* gcc.target/i386/pr41019.c: New test.\n\nFrom-SVN: r150738", "tree": {"sha": "9a7c526dfaa2ff8b3a0e7551ef2e56ef87703395", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a7c526dfaa2ff8b3a0e7551ef2e56ef87703395"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1262fd02b65bb037b36551b91df729bace07ba46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1262fd02b65bb037b36551b91df729bace07ba46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1262fd02b65bb037b36551b91df729bace07ba46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1262fd02b65bb037b36551b91df729bace07ba46/comments", "author": null, "committer": null, "parents": [{"sha": "34d3575322b96adb6147df121b6eef8ac03953dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d3575322b96adb6147df121b6eef8ac03953dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34d3575322b96adb6147df121b6eef8ac03953dd"}], "stats": {"total": 116, "additions": 75, "deletions": 41}, "files": [{"sha": "e48cbcdfdba33102834ec9dddcaa59de53cdb207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1262fd02b65bb037b36551b91df729bace07ba46", "patch": "@@ -1,3 +1,13 @@\n+2009-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/41019\n+\t* config/i386/sse.md (SSEMODE124C8): New mode iterator.\n+\t(vcond<SSEMODEF2P:mode>): Assert that operation is supported by\n+\tix86_expand_fp_vcond.\n+\t(vcond<SSEMODE124C8:mode>): Use SSEMODE124C8 instead of SSEMODE124.\n+\tAssert that operation is supported by ix86_expand_int_vcond.\n+\t(vcondu<SSEMODE124C8:mode>): Ditto.\n+\n 2009-08-13  DJ Delorie  <dj@redhat.com>\n \n \t* config/i386/djgpp-stdint.h: New.\n@@ -6,8 +16,7 @@\n 2009-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_override_options): When flag_exceptions or\n-\tflag_unwind_tables is on, turn flag_reorder_blocks_and_partition\n-\toff.\n+\tflag_unwind_tables is on, turn flag_reorder_blocks_and_partition off.\n \n 2009-08-13  Ghassan Shobaki  <ghassan.shobaki@amd.com>\n \n@@ -182,18 +191,19 @@\n \ttransform has been done.  Call restore_scattering if the transform\n \tis not legal.\n \t(graphite-interchange.c): Same.\n-\t* graphite-poly.c (print_scattering_function): Test for PBB_TRANSFORMED.\n+\t* graphite-poly.c (print_scattering_function): Test for\n+\tPBB_TRANSFORMED.\n \t(graphite_read_transforms): Initialize PBB_TRANSFORMED.\n \t(apply_poly_transforms): Do not gcc_assert that\n \tthe transform is legal.\n-\t(new_poly_bb): Initialize PBB_TRANSFORMED, PBB_SAVED, and PBB_ORIGINAL.\n+\t(new_poly_bb): Initialize PBB_TRANSFORMED, PBB_SAVED and PBB_ORIGINAL.\n \tDo not initialize PBB_NB_SCATTERING_TRANSFORM, PBB_NB_LOCAL_VARIABLES,\n \tPBB_TRANSFORMED_SCATTERING, and PBB_ORIGINAL_SCATTERING.\n \t(free_poly_dr): Free PBB_TRANSFORMED, PBB_SAVED, and PBB_ORIGINAL.\n \t* graphite-poly.h (struct poly_scattering): New.\n \t(struct poly_bb): Add original, transformed, and saved fields.\n-\tRemove transformed_scattering, original_scattering, nb_local_variables,\n-\tand nb_scattering_transform fields.\n+\tRemove transformed_scattering, original_scattering,\n+\tnb_local_variables and nb_scattering_transform fields.\n \t(PBB_ORIGINAL, PBB_TRANSFORMED, PBB_SAVED): New.\n \t(poly_scattering_new): New.\n \t(poly_scattering_free): New.\n@@ -248,8 +258,7 @@\n \t* config/mips/mips-protos.h (and_operands_ok): Declare it.\n \t* config/mips/mips.md (move_type): Add ext_ins and logical.\n \t(type): Handle them.\n-\t(and<mode>3): Use and_reg_operand as the second operand's\n-\tpredicate.\n+\t(and<mode>3): Use and_reg_operand as the second operand's predicate.\n \t(*and<mode>3): Add alternatives for lbu, lhu, lwu, <d>ext and\n \tshift_shift.  Remove commutative constraint modifier.\n \t(*and<mode>3_mips16): Add alternatives for lbu, lhu, lwu and\n@@ -1396,9 +1405,9 @@\n \t(vec_unpacks_hi_v4sf): Ditto.\n \t(vec_unpacks_lo_v4sf): Ditto.\n \t(vec_unpacks_float_hi_v4si): Ditto.\n-\t(vec_unpacku_float_lo_v4si): Ditto.\n-\t(vec_unpacku_float_hi_v4si): Ditto.\n \t(vec_unpacks_float_lo_v4si): Ditto.\n+\t(vec_unpacku_float_hi_v4si): Ditto.\n+\t(vec_unpacku_float_lo_v4si): Ditto.\n \t(movmisalign<mode>): Ditto.\n \t(vector_ceil<mode>2): New patterns for vectorizing math library.\n \t(vector_floor<mode>2): Ditto."}, {"sha": "7c60f015e83ca114792c02396caa9591aba5ed12", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1262fd02b65bb037b36551b91df729bace07ba46", "patch": "@@ -64,6 +64,10 @@\n (define_mode_iterator SSEMODE4S [V4SF V4SI])\n (define_mode_iterator SSEMODE2D [V2DF V2DI])\n \n+;; Modes handled by integer vcond pattern\n+(define_mode_iterator SSEMODE124C8 [V16QI V8HI V4SI\n+\t\t\t\t    (V2DI \"TARGET_SSE4_2 || TARGET_SSE5\")])\n+\n ;; Mapping from float mode to required SSE level\n (define_mode_attr sse [(SF \"sse\") (DF \"sse2\") (V4SF \"sse\") (V2DF \"sse2\")])\n \n@@ -1520,10 +1524,9 @@\n           (match_operand:SSEMODEF2P 2 \"general_operand\" \"\")))]\n   \"SSE_VEC_FLOAT_MODE_P (<MODE>mode)\"\n {\n-  if (ix86_expand_fp_vcond (operands))\n-    DONE;\n-  else\n-    FAIL;\n+  bool ok = ix86_expand_fp_vcond (operands);\n+  gcc_assert (ok);\n+  DONE;\n })\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n@@ -6071,35 +6074,33 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"vcond<mode>\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n-        (if_then_else:SSEMODEI\n+  [(set (match_operand:SSEMODE124C8 0 \"register_operand\" \"\")\n+        (if_then_else:SSEMODE124C8\n           (match_operator 3 \"\"\n-            [(match_operand:SSEMODEI 4 \"nonimmediate_operand\" \"\")\n-             (match_operand:SSEMODEI 5 \"nonimmediate_operand\" \"\")])\n-          (match_operand:SSEMODEI 1 \"general_operand\" \"\")\n-          (match_operand:SSEMODEI 2 \"general_operand\" \"\")))]\n+            [(match_operand:SSEMODE124C8 4 \"nonimmediate_operand\" \"\")\n+             (match_operand:SSEMODE124C8 5 \"nonimmediate_operand\" \"\")])\n+          (match_operand:SSEMODE124C8 1 \"general_operand\" \"\")\n+          (match_operand:SSEMODE124C8 2 \"general_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n-  if (ix86_expand_int_vcond (operands))\n-    DONE;\n-  else\n-    FAIL;\n+  bool ok = ix86_expand_int_vcond (operands);\n+  gcc_assert (ok);\n+  DONE;\n })\n \n (define_expand \"vcondu<mode>\"\n-  [(set (match_operand:SSEMODEI 0 \"register_operand\" \"\")\n-        (if_then_else:SSEMODEI\n+  [(set (match_operand:SSEMODE124C8 0 \"register_operand\" \"\")\n+        (if_then_else:SSEMODE124C8\n           (match_operator 3 \"\"\n-            [(match_operand:SSEMODEI 4 \"nonimmediate_operand\" \"\")\n-             (match_operand:SSEMODEI 5 \"nonimmediate_operand\" \"\")])\n-          (match_operand:SSEMODEI 1 \"general_operand\" \"\")\n-          (match_operand:SSEMODEI 2 \"general_operand\" \"\")))]\n+            [(match_operand:SSEMODE124C8 4 \"nonimmediate_operand\" \"\")\n+             (match_operand:SSEMODE124C8 5 \"nonimmediate_operand\" \"\")])\n+          (match_operand:SSEMODE124C8 1 \"general_operand\" \"\")\n+          (match_operand:SSEMODE124C8 2 \"general_operand\" \"\")))]\n   \"TARGET_SSE2\"\n {\n-  if (ix86_expand_int_vcond (operands))\n-    DONE;\n-  else\n-    FAIL;\n+  bool ok = ix86_expand_int_vcond (operands);\n+  gcc_assert (ok);\n+  DONE;\n })\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "db94b62afef6f2da11e34be336c572f16b88752b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1262fd02b65bb037b36551b91df729bace07ba46", "patch": "@@ -1,3 +1,8 @@\n+2009-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/41019\n+\t* gcc.target/i386/pr41019.c: New test.\n+\n 2009-08-13  Jerry DeLisle <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/40955\n@@ -77,13 +82,13 @@\n \n 2009-08-10  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n-       * gcc.dg/dg.exp: Test also c-c++-common dir.\n-       * g++.dg/dg.exp: Likewise.\n-       * g++.dg/warn/Wconversion-real.C: Delete.\n-       * gcc.dg/Wconversion-real.c: Move to ...\n-       * c-c++-common/Wconversion-real.c: ... here.\n-       * lib/target-supports.exp\n-       (check_effective_target_c,check_effective_target_c++): New.\n+\t* gcc.dg/dg.exp: Test also c-c++-common dir.\n+\t* g++.dg/dg.exp: Likewise.\n+\t* g++.dg/warn/Wconversion-real.C: Delete.\n+\t* gcc.dg/Wconversion-real.c: Move to ...\n+\t* c-c++-common/Wconversion-real.c: ... here.\n+\t* lib/target-supports.exp\n+\t(check_effective_target_c,check_effective_target_c++): New.\n \n 2009-08-10  Daniel Kraft  <d@domob.eu>\n "}, {"sha": "c0021c6a45066d3e6526740731ac7d1fb703ad2b", "filename": "gcc/testsuite/gcc.target/i386/pr41019.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41019.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1262fd02b65bb037b36551b91df729bace07ba46/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41019.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41019.c?ref=1262fd02b65bb037b36551b91df729bace07ba46", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -msse2 -ftree-vectorize\" } */\n+\n+#include \"sse2-check.h\"\n+\n+long long int a[64];\n+\n+void\n+sse2_test (void)\n+{\n+  int k;\n+\n+  for (k = 0; k < 64; k++)\n+    a[k] = a[k] != 5 ? 12 : 10;\n+\n+  for (k = 0; k < 64; k++)\n+    if (a[k] != 12)\n+      abort ();\n+}"}]}