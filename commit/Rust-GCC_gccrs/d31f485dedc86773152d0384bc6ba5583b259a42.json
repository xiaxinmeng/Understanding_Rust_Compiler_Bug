{"sha": "d31f485dedc86773152d0384bc6ba5583b259a42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxZjQ4NWRlZGM4Njc3MzE1MmQwMzg0YmM2YmE1NTgzYjI1OWE0Mg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-04-09T08:18:24Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-04-09T08:41:39Z"}, "message": "Fortran: Fix fndecl with -fcoarray=lib [PR99817]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/99817\n\t* trans-types.c (gfc_get_function_type): Also generate hidden\n\tcoarray argument for character arguments.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/99817\n\t* gfortran.dg/coarray/dummy_2.f90: New test.", "tree": {"sha": "b3e6029593f7a3410761fab418466d5bf92a7f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3e6029593f7a3410761fab418466d5bf92a7f02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d31f485dedc86773152d0384bc6ba5583b259a42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31f485dedc86773152d0384bc6ba5583b259a42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d31f485dedc86773152d0384bc6ba5583b259a42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31f485dedc86773152d0384bc6ba5583b259a42/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cc863ca8f48662e9c9339710fa303587479bf71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cc863ca8f48662e9c9339710fa303587479bf71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cc863ca8f48662e9c9339710fa303587479bf71"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "9f21b3ee780fe9a442bc8e14976496d7015b6595", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31f485dedc86773152d0384bc6ba5583b259a42/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31f485dedc86773152d0384bc6ba5583b259a42/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d31f485dedc86773152d0384bc6ba5583b259a42", "patch": "@@ -3152,14 +3152,14 @@ gfc_get_function_type (gfc_symbol * sym, gfc_actual_arglist *actual_args,\n \tvec_safe_push (typelist, boolean_type_node);\n       /* Coarrays which are descriptorless or assumed-shape pass with\n \t -fcoarray=lib the token and the offset as hidden arguments.  */\n-      else if (arg\n-\t       && flag_coarray == GFC_FCOARRAY_LIB\n-\t       && ((arg->ts.type != BT_CLASS\n-\t\t    && arg->attr.codimension\n-\t\t    && !arg->attr.allocatable)\n-\t\t   || (arg->ts.type == BT_CLASS\n-\t\t       && CLASS_DATA (arg)->attr.codimension\n-\t\t       && !CLASS_DATA (arg)->attr.allocatable)))\n+      if (arg\n+\t  && flag_coarray == GFC_FCOARRAY_LIB\n+\t  && ((arg->ts.type != BT_CLASS\n+\t       && arg->attr.codimension\n+\t       && !arg->attr.allocatable)\n+\t      || (arg->ts.type == BT_CLASS\n+\t\t  && CLASS_DATA (arg)->attr.codimension\n+\t\t  && !CLASS_DATA (arg)->attr.allocatable)))\n \t{\n \t  vec_safe_push (typelist, pvoid_type_node);  /* caf_token.  */\n \t  vec_safe_push (typelist, gfc_array_index_type);  /* caf_offset.  */"}, {"sha": "35263745bb8b89427b9f38212b405aae2b1db82d", "filename": "gcc/testsuite/gfortran.dg/coarray/dummy_2.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d31f485dedc86773152d0384bc6ba5583b259a42/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fdummy_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d31f485dedc86773152d0384bc6ba5583b259a42/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fdummy_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fdummy_2.f90?ref=d31f485dedc86773152d0384bc6ba5583b259a42", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! PR fortran/99817\n+!\n+! Contributed by G. Steinmetz\n+!\n+subroutine s1 (x)\n+   character(*) :: x(*)[*]\n+end\n+\n+subroutine s2 (x)\n+   character(*), dimension(*), codimension[*] :: x\n+   integer :: i\n+   i = len(x)\n+end\n+\n+subroutine s3 (x, y)\n+   character(*), dimension(:) :: x[*]\n+   character(*) :: y\n+end\n+\n+subroutine s4 (x, y, z)\n+   character(*), dimension(:) :: x[2, *]\n+   character(*), dimension(*) :: y\n+   character(*) :: z\n+end"}]}