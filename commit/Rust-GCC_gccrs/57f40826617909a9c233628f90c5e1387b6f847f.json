{"sha": "57f40826617909a9c233628f90c5e1387b6f847f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdmNDA4MjY2MTc5MDlhOWMyMzM2MjhmOTBjNWUxMzg3YjZmODQ3Zg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-12-27T23:15:39Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-12-27T23:15:39Z"}, "message": "configure: Remove unneeded 'export's.\n\n\n\t* configure: Remove unneeded 'export's.  Make CC_FOR_TARGET,\n\tCXX_FOR_TARGET, GCJ_FOR_TARGET substituted in configure.in only.\n\nFrom-SVN: r60550", "tree": {"sha": "a1617897585fe08093a5148f0cd72087a407c13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1617897585fe08093a5148f0cd72087a407c13a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57f40826617909a9c233628f90c5e1387b6f847f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f40826617909a9c233628f90c5e1387b6f847f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f40826617909a9c233628f90c5e1387b6f847f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f40826617909a9c233628f90c5e1387b6f847f/comments", "author": null, "committer": null, "parents": [{"sha": "43be7fe7d7fc9b07999f5c48ca8890fd73753107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43be7fe7d7fc9b07999f5c48ca8890fd73753107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43be7fe7d7fc9b07999f5c48ca8890fd73753107"}], "stats": {"total": 43, "additions": 13, "deletions": 30}, "files": [{"sha": "49a6147e461f956d6fe4af858d73904b86adf5d7", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f40826617909a9c233628f90c5e1387b6f847f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f40826617909a9c233628f90c5e1387b6f847f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=57f40826617909a9c233628f90c5e1387b6f847f", "patch": "@@ -1,3 +1,8 @@\n+2002-12-27  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure: Remove unneeded 'export's.  Make CC_FOR_TARGET, \n+\tCXX_FOR_TARGET, GCJ_FOR_TARGET substituted in configure.in only.\n+\n 2002-12-25  Svein E. Seldal  <Svein.Seldal@solidas.com>\n \n \t* config.sub: Import from master repository"}, {"sha": "071ac8fef064940ef067d54bc9df4be7f60c9f2b", "filename": "configure", "status": "modified", "additions": 8, "deletions": 30, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57f40826617909a9c233628f90c5e1387b6f847f/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57f40826617909a9c233628f90c5e1387b6f847f/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=57f40826617909a9c233628f90c5e1387b6f847f", "patch": "@@ -87,7 +87,7 @@ srctrigger=\n target_alias=NOTARGET\n target_makefile_frag=\n undefs=NOUNDEFS\n-version=\"$Revision: 1.50 $\"\n+version=\"$Revision: 1.51 $\"\n x11=default\n bindir='${exec_prefix}/bin'\n sbindir='${exec_prefix}/sbin'\n@@ -869,16 +869,16 @@ do\n done\n \n \n+tools=\"AR AR_FOR_TARGET AS AS_FOR_TARGET BISON CC_FOR_BUILD\"\n+tools=\"${tools} DLLTOOL DLLTOOL_FOR_TARGET GCC_FOR_TARGET BUILD_PREFIX\"\n+tools=\"${tools} BUILD_PREFIX_1 LD LD_FOR_TARGET LEX MAKEINFO NM\"\n+tools=\"${tools} NM_FOR_TARGET RANLIB RANLIB_FOR_TARGET\"\n+tools=\"${tools} WINDRES WINDRES_FOR_TARGET YACC\"\n+tools=\"${tools} OBJCOPY OBJDUMP\"\n if [ \"${build}\" != \"${host}\" ]; then\n   # If we are doing a Canadian Cross, in which the host and build systems\n   # are not the same, we set reasonable default values for the tools.\n-  tools=\"AR AR_FOR_TARGET AS AS_FOR_TARGET BISON CC_FOR_BUILD\"\n-  tools=\"${tools} CC_FOR_TARGET CXX_FOR_TARGET GCJ_FOR_TARGET\"\n-  tools=\"${tools} DLLTOOL DLLTOOL_FOR_TARGET GCC_FOR_TARGET BUILD_PREFIX\"\n-  tools=\"${tools} BUILD_PREFIX_1 LD LD_FOR_TARGET LEX MAKEINFO NM\"\n-  tools=\"${tools} NM_FOR_TARGET RANLIB RANLIB_FOR_TARGET\"\n-  tools=\"${tools} WINDRES WINDRES_FOR_TARGET YACC\"\n-  tools=\"${tools} OBJCOPY OBJDUMP\"\n+  tools=\"${tools} RANLIB\"\n \n   for var in ${tools}; do\n     if eval [ -z \\\"\\$${var}\\\" ] && [ -r Makefile ]; then\n@@ -968,17 +968,6 @@ t loop\n     LEX=${LEX-flex}\n   fi\n \n-  # Export variables which autoconf might try to set.\n-  export AS\n-  export AR\n-  export CC_FOR_BUILD\n-  export DLLTOOL\n-  export LD\n-  export NM\n-  export RANLIB\n-  export WINDRES\n-  export OBJCOPY\n-  export OBJDUMP\n else\n   # Set reasonable default values for some tools even if not Canadian.\n   # Of course, these are different reasonable default values, originally\n@@ -988,12 +977,6 @@ else\n   # in Makefile.in, so can still be overridden by fragments.\n   # This is all going to change when we autoconfiscate...\n \n-  tools=\"AR AR_FOR_TARGET AS AS_FOR_TARGET BISON CC_FOR_BUILD\"\n-  tools=\"${tools} DLLTOOL DLLTOOL_FOR_TARGET GCC_FOR_TARGET BUILD_PREFIX\"\n-  tools=\"${tools} BUILD_PREFIX_1 LD LD_FOR_TARGET LEX MAKEINFO NM\"\n-  tools=\"${tools} NM_FOR_TARGET RANLIB_FOR_TARGET\"\n-  tools=\"${tools} WINDRES WINDRES_FOR_TARGET YACC\"\n-\n   AR=ar\n   AR_FOR_TARGET='\\$(USUAL_AR_FOR_TARGET)'\n   AR_FOR_TARGET=${AR_FOR_TARGET}${extra_arflags_for_target}\n@@ -1065,11 +1048,6 @@ else\n   CXXFLAGS=${CXXFLAGS-\"-g -O2\"}\n fi\n \n-export CC\n-export CXX\n-export CFLAGS\n-export CXXFLAGS\n-\n # FIXME Should this be done recursively ??? (Useful for e.g. gdbtest)\n # Set up the list of links to be made.\n # ${links} is the list of link names, and ${files} is the list of names to link to."}]}