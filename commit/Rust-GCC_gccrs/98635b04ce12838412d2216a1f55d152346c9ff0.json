{"sha": "98635b04ce12838412d2216a1f55d152346c9ff0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg2MzViMDRjZTEyODM4NDEyZDIyMTZhMWY1NWQxNTIzNDZjOWZmMA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2010-09-09T11:29:10Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-09-09T11:29:10Z"}, "message": "s390.c (s390_symref_operand_p): Return false for literal pool references.\n\n2010-09-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n\n\t* config/s390/s390.c (s390_symref_operand_p): Return false for\n\tliteral pool references.\n\t(s390_check_qrst_address): Update caller.\n\nFrom-SVN: r164075", "tree": {"sha": "8975493229ad3b4e861bc37ba57e660ca479cb8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8975493229ad3b4e861bc37ba57e660ca479cb8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98635b04ce12838412d2216a1f55d152346c9ff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98635b04ce12838412d2216a1f55d152346c9ff0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98635b04ce12838412d2216a1f55d152346c9ff0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98635b04ce12838412d2216a1f55d152346c9ff0/comments", "author": null, "committer": null, "parents": [{"sha": "06f29237d759b49656326add6d7c8e1c2c34049a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06f29237d759b49656326add6d7c8e1c2c34049a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06f29237d759b49656326add6d7c8e1c2c34049a"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "8e05709466ef722ef3f02a0b2058db25d0f62540", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98635b04ce12838412d2216a1f55d152346c9ff0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98635b04ce12838412d2216a1f55d152346c9ff0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98635b04ce12838412d2216a1f55d152346c9ff0", "patch": "@@ -1,3 +1,9 @@\n+2010-09-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_symref_operand_p): Return false for\n+\tliteral pool references.\n+\t(s390_check_qrst_address): Update caller.\n+\n 2010-09-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/predicates.md (ext_register_operand): Check that"}, {"sha": "32e51970bbc235975779db87d3dbad1871f5da74", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98635b04ce12838412d2216a1f55d152346c9ff0/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98635b04ce12838412d2216a1f55d152346c9ff0/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=98635b04ce12838412d2216a1f55d152346c9ff0", "patch": "@@ -2092,7 +2092,8 @@ s390_legitimate_address_without_index_p (rtx op)\n \n /* Return true if ADDR is of kind symbol_ref or symbol_ref + const_int\n    and return these parts in SYMREF and ADDEND.  You can pass NULL in\n-   SYMREF and/or ADDEND if you are not interested in these values.  */\n+   SYMREF and/or ADDEND if you are not interested in these values.\n+   Literal pool references are *not* considered symbol references.  */\n \n static bool\n s390_symref_operand_p (rtx addr, rtx *symref, HOST_WIDE_INT *addend)\n@@ -2105,6 +2106,7 @@ s390_symref_operand_p (rtx addr, rtx *symref, HOST_WIDE_INT *addend)\n   if (GET_CODE (addr) == PLUS)\n     {\n       if (GET_CODE (XEXP (addr, 0)) == SYMBOL_REF\n+\t  && !CONSTANT_POOL_ADDRESS_P (XEXP (addr, 0))\n \t  && CONST_INT_P (XEXP (addr, 1)))\n \t{\n \t  tmpaddend = INTVAL (XEXP (addr, 1));\n@@ -2114,7 +2116,7 @@ s390_symref_operand_p (rtx addr, rtx *symref, HOST_WIDE_INT *addend)\n \treturn false;\n     }\n   else\n-    if (GET_CODE (addr) != SYMBOL_REF)\n+    if (GET_CODE (addr) != SYMBOL_REF || CONSTANT_POOL_ADDRESS_P (addr))\n \treturn false;\n \n   if (symref)\n@@ -2140,12 +2142,14 @@ s390_check_qrst_address (char c, rtx op, bool lit_pool_ok)\n   /* This check makes sure that no symbolic address (except literal\n      pool references) are accepted by the R or T constraints.  */\n   if (s390_symref_operand_p (op, NULL, NULL))\n+    return 0;\n+\n+  /* Ensure literal pool references are only accepted if LIT_POOL_OK.  */\n+  if (!lit_pool_ok)\n     {\n-      if (!lit_pool_ok)\n-\treturn 0;\n       if (!s390_decompose_address (op, &addr))\n \treturn 0;\n-      if (!addr.literal_pool)\n+      if (addr.literal_pool)\n \treturn 0;\n       decomposed = true;\n     }"}]}