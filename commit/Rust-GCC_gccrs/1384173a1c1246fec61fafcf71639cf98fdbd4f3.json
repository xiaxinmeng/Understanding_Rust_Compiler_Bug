{"sha": "1384173a1c1246fec61fafcf71639cf98fdbd4f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM4NDE3M2ExYzEyNDZmZWM2MWZhZmNmNzE2MzljZjk4ZmRiZDRmMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-12T12:44:57Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-12T12:44:57Z"}, "message": "Makefile.am: Use it.\n\n\n2000-10-11  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* libsupc++/Makefile.am: Use it.\n\t* libio/Makefile.am: Use it.\n\t* libmath/Makefile.am: Use it.\n\t* src/Makefile.am: Use it.\n\t* Makefile.am (AM_MAKEFLAGS): Remove includes.\n\n\t* acinclude.m4 (GLIBCPP_EXPORT_INCLUES): Move include macros here.\n\t(GLIBCPP_EXPORT_FLAGS): Move CXX flag setting here.\n\t* configure.in: Use it.\n\n\t* mkcheck.in (SRC_DIR): Use C_INCLUDE_DIR.\n\n\t* src/Makefile.am (CXXCOMPILE): Remove.\n\t* src/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.am (CXXCOMPILE): Same here.\n\t* libsupc++/Makefile.in: Regenerate.\n\n\t* include/c_std/*: Merge with shadow.\n\t* include/c_std/bits/*: Same.\n\n20\n\nFrom-SVN: r36850", "tree": {"sha": "014aadc0771bc8a36859e93443b51e4eca86d0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/014aadc0771bc8a36859e93443b51e4eca86d0e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1384173a1c1246fec61fafcf71639cf98fdbd4f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1384173a1c1246fec61fafcf71639cf98fdbd4f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1384173a1c1246fec61fafcf71639cf98fdbd4f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1384173a1c1246fec61fafcf71639cf98fdbd4f3/comments", "author": null, "committer": null, "parents": [{"sha": "74490e0552eae199098f2c5975bf570956704d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74490e0552eae199098f2c5975bf570956704d95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74490e0552eae199098f2c5975bf570956704d95"}], "stats": {"total": 1405, "additions": 1405, "deletions": 0}, "files": [{"sha": "3507bdf449a5663a590fbc79f4fc1b488effa0a5", "filename": "libstdc++-v3/include/c_std/assert.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,51 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+// no include guard here.\n+#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+# undef _IN_C_LEGACY_\n+# define _ASSERT_NEED_C_LEGACY_\n+#endif\n+\n+#include <cassert>\n+ \n+  // expose global C names, including non-standard ones, but shadow\n+  //   some names and types with the std:: C++ version.\n+\n+#ifdef _ASSERT_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+# define _IN_C_LEGACY_\n+# undef _ASSERT_NEED_C_LEGACY_\n+#endif /* _ASSERT_NEED_C_LEGACY_ */"}, {"sha": "144a3ea794c15282d13c380563d6d213cf71e416", "filename": "libstdc++-v3/include/c_std/bits/wrap_unistd.h", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_unistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_unistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_unistd.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,79 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 26.5  C library extensions\n+//\n+\n+#ifndef _CPP_WRAP_UNISTD_H\n+#define _CPP_WRAP_UNISTD_H 1\n+\n+namespace _C_legacy {\n+  extern \"C\" {\n+#     define _IN_C_LEGACY_\n+#     pragma GCC system_header\n+#     include_next <unistd.h>\n+  }\n+} // namespace _C_legacy\n+\n+# undef _IN_C_LEGACY_\n+\n+#endif\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+"}, {"sha": "7dcea803ab527ef4d0e9f75e6a1c8a8f1b749fc4", "filename": "libstdc++-v3/include/c_std/ctype.h", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fctype.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,68 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_CTYPE_H_\n+# define _INCLUDED_CPP_CTYPE_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+#error ctype.h\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _CTYPE_NEED_C_LEGACY_\n+# endif\n+\n+# include <cctype>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::isalnum;\n+  using std::isalpha;\n+  using std::iscntrl;\n+  using std::isdigit;\n+  using std::isgraph;\n+  using std::islower;\n+  using std::isprint;\n+  using std::ispunct;\n+  using std::isspace;\n+  using std::isupper;\n+  using std::isxdigit;\n+  using std::tolower;\n+  using std::toupper;\n+\n+# ifdef _CTYPE_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _CTYPE_NEED_C_LEGACY_\n+# endif /* _CTYPE_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_CTYPE_H_ */"}, {"sha": "f2e6aee6701524157b71bbf8eba3063c2266711c", "filename": "libstdc++-v3/include/c_std/errno.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,55 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_ERRNO_H_\n+# define _INCLUDED_CPP_ERRNO_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _ERRNO_NEED_C_LEGACY_\n+# endif\n+\n+# include <cerrno>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::errno;\n+\n+# ifdef _ERRNO_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _ERRNO_NEED_C_LEGACY_\n+# endif /* _ERRNO_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_ERRNO_H_ */"}, {"sha": "f52c5f5c9eb578316b18e6bacf1ac2e4b5a18d31", "filename": "libstdc++-v3/include/c_std/float.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffloat.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,54 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_FLOAT_H_\n+# define _INCLUDED_CPP_FLOAT_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _FLOAT_NEED_C_LEGACY_\n+# endif\n+\n+# include <cfloat>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+\n+# ifdef _FLOAT_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _FLOAT_NEED_C_LEGACY_\n+# endif /* _FLOAT_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_FLOAT_H_ */"}, {"sha": "26aa771f2d58860e0aa5866d6102f5aad7e5da75", "filename": "libstdc++-v3/include/c_std/limits.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flimits.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,54 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_LIMITS_H_\n+# define _INCLUDED_CPP_LIMITS_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _LIMITS_NEED_C_LEGACY_\n+# endif\n+\n+# include <climits>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+\n+# ifdef _LIMITS_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _LIMITS_NEED_C_LEGACY_\n+# endif /* _LIMITS_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_LIMITS_H_ */"}, {"sha": "1d5f529ed896d1d9be2aaca82bf58a41cee6f28f", "filename": "libstdc++-v3/include/c_std/locale.h", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flocale.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,57 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_LOCALE_H_\n+# define _INCLUDED_CPP_LOCALE_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _LOCALE_NEED_C_LEGACY_\n+#endif\n+\n+# include <clocale>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::lconv;\n+  using std::setlocale;\n+  using std::localeconv;\n+\n+# ifdef _LOCALE_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _LOCALE_NEED_C_LEGACY_\n+# endif /* _LOCALE_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_LOCALE_H_ */"}, {"sha": "f2ec04af671b228edf7769e4fc7a64eaca8f0720", "filename": "libstdc++-v3/include/c_std/math.h", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fmath.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,131 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_MATH_H_\n+# define _INCLUDED_CPP_MATH_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _MATH_NEED_C_LEGACY_\n+# endif\n+\n+# include <cmath>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::abs;\n+  using std::acos;\n+  using std::asin;\n+  using std::atan;\n+  using std::atan2;\n+  using std::cos;\n+  using std::sin;\n+  using std::tan;\n+  using std::cosh;\n+  using std::sinh;\n+  using std::tanh;\n+  using std::exp;\n+  using std::frexp;\n+  using std::ldexp;\n+  using std::log;\n+  using std::log10;\n+  using std::modf;\n+  using std::pow;\n+  using std::sqrt;\n+  using std::ceil;\n+  using std::fabs;\n+  using std::floor;\n+  using std::fmod;\n+\n+  // From ISO/IEC 9899:1999\n+  using std::absf;\n+  using std::acosf;\n+  using std::asinf;\n+  using std::atanf;\n+  using std::atan2f;\n+  using std::cosf;\n+  using std::sinf;\n+  using std::tanf;\n+  using std::coshf;\n+  using std::sinhf;\n+  using std::tanhf;\n+  using std::expf;\n+  using std::frexpf;\n+  using std::ldexpf;\n+  using std::logf;\n+  using std::log10f;\n+  using std::modff;\n+  using std::powf;\n+  using std::sqrtf;\n+  using std::ceilf;\n+  using std::fabsf;\n+  using std::floorf;\n+  using std::fmodf;\n+\n+  // From ISO/IEC 9899:1999\n+  using std::absl;\n+  using std::acosl;\n+  using std::asinl;\n+  using std::atanl;\n+  using std::atan2l;\n+  using std::cosl;\n+  using std::sinl;\n+  using std::tanl;\n+  using std::coshl;\n+  using std::sinhl;\n+  using std::tanhl;\n+  using std::expl;\n+  using std::frexpl;\n+  using std::ldexpl;\n+  using std::logl;\n+  using std::log10l;\n+  using std::modfl;\n+  using std::powl;\n+  using std::sqrtl;\n+  using std::ceill;\n+  using std::fabsl;\n+  using std::floorl;\n+  using std::fmodl;\n+\n+# ifdef _MATH_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _MATH_NEED_C_LEGACY_\n+# endif /* _MATH_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_MATH_H_ */\n+\n+\n+\n+"}, {"sha": "c4061e871dbaa3dd2137066dfaad982bd0c6f489", "filename": "libstdc++-v3/include/c_std/setjmp.h", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsetjmp.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,56 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_SETJMP_H_\n+# define _INCLUDED_CPP_SETJMP_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _SETJMP_NEED_C_LEGACY_\n+# endif\n+\n+# include <csetjmp>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::jmp_buf;\n+  using std::longjmp;\n+\n+# ifdef _SETJMP_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _SETJMP_NEED_C_LEGACY_\n+# endif /* _SETJMP_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_SETJMP_H_ */"}, {"sha": "819ddf22f325f0277f8f08fbd49d929a4d19c125", "filename": "libstdc++-v3/include/c_std/signal.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsignal.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,58 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_SIGNAL_H_\n+# define _INCLUDED_CPP_SIGNAL_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _SIGNAL_NEED_C_LEGACY_\n+# endif\n+\n+# include <csignal>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::sig_atomic_t;\n+\n+  using std::raise;\n+  using std::signal;\n+\n+# ifdef _SIGNAL_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _SIGNAL_NEED_C_LEGACY_\n+#  endif /* _SIGNAL_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_SIGNAL_H_ */"}, {"sha": "cb32feca7d60956f2a2961373f64f17c7b7de81b", "filename": "libstdc++-v3/include/c_std/stdarg.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdarg.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,55 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_STDARG_H_\n+# define _INCLUDED_CPP_STDARG_H_ 1\n+\n+#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _STDARG_NEED_C_LEGACY_\n+# endif\n+\n+# include <cstdarg>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::va_list;\n+\n+# ifdef _STDARG_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _STDARG_NEED_C_LEGACY_\n+# endif /* _STDARG_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_STDARG_H_ */"}, {"sha": "03d5896779ea32e7e4d9709223d1fbe8d789d070", "filename": "libstdc++-v3/include/c_std/stddef.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstddef.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,60 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_STDDEF_H_\n+# define _INCLUDED_CPP_STDDEF_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _STDDEF_NEED_C_LEGACY_\n+# endif\n+\n+# include <cstddef>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::ptrdiff_t;\n+  using std::size_t;\n+\n+# ifdef _STDDEF_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _STDDEF_NEED_C_LEGACY_\n+# endif /* _STDDEF_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_STDDEF_H_ */\n+\n+\n+\n+"}, {"sha": "c3a43b736c2dc14aa61b42b1c361373716f3aa1a", "filename": "libstdc++-v3/include/c_std/stdio.h", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,97 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef  _INCLUDED_CPP_STDIO_H_\n+# define _INCLUDED_CPP_STDIO_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _STDIO_NEED_C_LEGACY_\n+# endif\n+\n+# include <cstdio>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::FILE;\n+  using std::fpos_t; \n+\n+  using std::remove;\n+  using std::rename;\n+  using std::tmpfile;\n+  using std::tmpnam;\n+  using std::fclose;\n+  using std::fflush;\n+  using std::fopen;\n+  using std::freopen;\n+  using std::setbuf;\n+  using std::setvbuf;\n+  using std::fprintf;\n+  using std::fscanf;\n+  using std::printf;\n+  using std::scanf;\n+  using std::sprintf;\n+  using std::sscanf;\n+  using std::vfprintf;\n+  using std::vprintf;\n+  using std::vsprintf;\n+  using std::fgetc;\n+  using std::fgets;\n+  using std::fputc;\n+  using std::fputs;\n+  using std::getc;\n+  using std::getchar;\n+  using std::gets;\n+  using std::putc;\n+  using std::putchar;\n+  using std::puts;\n+  using std::ungetc;\n+  using std::fread;\n+  using std::fwrite;\n+  using std::fgetpos;\n+  using std::fseek;\n+  using std::fsetpos;\n+  using std::ftell;\n+  using std::rewind;\n+  using std::clearerr;\n+  using std::feof;\n+  using std::ferror;\n+  using std::perror;\n+\n+# ifdef _STDIO_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _STDIO_NEED_C_LEGACY_\n+# endif /* _STDIO_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_STDIO_H_ */"}, {"sha": "bc5dcc96743f8980d45340fd2904074b484f7ea7", "filename": "libstdc++-v3/include/c_std/stdlib.h", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,95 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_STDLIB_H_\n+# define _INCLUDED_CPP_STDLIB_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _STDLIB_NEED_C_LEGACY_\n+# endif\n+\n+# include <cstdlib>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::div_t;\n+  using std::ldiv_t;\n+#ifdef _GLIBCPP_USE_LONG_LONG\n+  using std::lldiv_t;\n+#endif\n+\n+  using std::abort;\n+  using std::abs;\n+  using std::atexit;\n+  using std::atof;\n+  using std::atoi;\n+  using std::atol;\n+  using std::bsearch;\n+  using std::calloc;\n+  using std::div;\n+  using std::exit;\n+  using std::free;\n+  using std::getenv;\n+  using std::labs;\n+  using std::ldiv;\n+  using std::malloc;\n+  using std::mblen;\n+  using std::mbstowcs;\n+  using std::mbtowc;\n+  using std::qsort;\n+  using std::rand;\n+  using std::realloc;\n+  using std::srand;\n+  using std::strtod;\n+  using std::strtol;\n+  using std::strtoul;\n+  using std::system;\n+  using std::wcstombs;\n+  using std::wctomb;\n+\n+#ifdef _GLIBCPP_USE_LONG_LONG\n+  using std::strtoll;\n+  using std::strtoull;\n+  using std::strtof;\n+  using std::strtold;\n+#endif\n+\n+# ifdef _STDLIB_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _STDLIB_NEED_C_LEGACY_\n+# endif /* _STDLIB_NEED_C__LEGACY_ */\n+#endif /* _INCLUDED_CPP_STDLIB_H_ */"}, {"sha": "6f9e6cc6372e8b53172ed1fc12f432e79213abe3", "filename": "libstdc++-v3/include/c_std/string.h", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstring.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,76 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_STRING_H_\n+# define _INCLUDED_CPP_STRING_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _STRING_NEED_C_LEGACY_\n+# endif\n+\n+# include <cstring>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::memcpy;\n+  using std::memmove;\n+  using std::strcpy;\n+  using std::strncpy;\n+  using std::strcat;\n+  using std::strncat;\n+  using std::memcmp;\n+  using std::strcmp;\n+  using std::strcoll;\n+  using std::strncmp;\n+  using std::strxfrm;\n+  using std::memchr;\n+  using std::strchr;\n+  using std::strcspn;\n+  using std::strpbrk;\n+  using std::strrchr;\n+  using std::strspn;\n+  using std::strstr;\n+  using std::strtok;\n+  using std::memset;\n+  using std::strerror;\n+  using std::strlen;\n+\n+# ifdef _STRING_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _STRING_NEED_C_LEGACY_\n+# endif /* _STRING_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_STRING_H_ */"}, {"sha": "31064aaa135187a98d64b1cbdb8d63d8368c0405", "filename": "libstdc++-v3/include/c_std/time.h", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ftime.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,67 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_TIME_H_\n+# define _INCLUDED_CPP_TIME_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _TIME_NEED_C_LEGACY_\n+# endif\n+\n+# include <ctime>\n+ \n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::clock_t;\n+  using std::time_t;\n+  using std::tm;\n+\n+  using std::clock;\n+  using std::difftime;\n+  using std::mktime;\n+  using std::time;\n+  using std::asctime;\n+  using std::ctime;\n+  using std::gmtime;\n+  using std::localtime;\n+  using std::strftime;\n+\n+# ifdef _TIME_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _TIME_NEED_C_LEGACY_\n+# endif /* _TIME_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_TIME_H_ */"}, {"sha": "39cfaae642d1bcd3638962eb78da5547cba441a6", "filename": "libstdc++-v3/include/c_std/unistd.h", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Funistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Funistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Funistd.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,87 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_UNISTD_H_\n+# define _INCLUDED_CPP_UNISTD_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _TIME_NEED_C_LEGACY_\n+# endif\n+\n+# include <bits/wrap_unistd.h>\n+ \n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using _C_legacy::gid_t;\n+  using _C_legacy::uid_t;\n+  using _C_legacy::off_t;\n+  using _C_legacy::off64_t;\n+  using _C_legacy::useconds_t;\n+  using _C_legacy::pid_t;\n+  using _C_legacy::intptr_t;\n+  using _C_legacy::socklen_t;\n+\n+  using _C_legacy::access;\n+  using _C_legacy::euidaccess;\n+  using _C_legacy::lseek;\n+  using _C_legacy::close;\n+  using _C_legacy::read;\n+  using _C_legacy::write;\n+  using _C_legacy::pread;\n+  using _C_legacy::pwrite;\n+  using _C_legacy::pipe;\n+  using _C_legacy::alarm;\n+  using _C_legacy::sleep;\n+  using _C_legacy::ualarm;\n+  using _C_legacy::usleep;\n+  using _C_legacy::pause;\n+  using _C_legacy::chown;\n+  using _C_legacy::fchown;\n+  using _C_legacy::lchown;\n+  using _C_legacy::chdir;\n+  using _C_legacy::fchdir;\n+  using _C_legacy::getcwd;\n+  using _C_legacy::get_current_dir_name;\n+  using _C_legacy::getwd;\n+  using _C_legacy::dup;\n+  using _C_legacy::dup2;\n+\n+# ifdef _TIME_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _TIME_NEED_C_LEGACY_\n+# endif /* _TIME_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_UNISTD_H_ */"}, {"sha": "efabb1519a5b85011ec829ba81b03c9eca80d2d7", "filename": "libstdc++-v3/include/c_std/wchar.h", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwchar.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,131 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_WCHAR_H_\n+# define _INCLUDED_CPP_WCHAR_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_  /* sub-included by a C header */\n+#  define _WCHAR_NEED_C_LEGACY_\n+# endif\n+\n+# include <cwchar>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::wchar_t;\n+  using std::wint_t;\n+  using std::mbstate_t;\n+\n+#if 0\n+  using std::fwprintf;\n+  using std::fwscanf;\n+  using std::swprintf;\n+  using std::swscanf;\n+  using std::vfwprintf;\n+  using std::vfwscanf;\n+  using std::vswprintf;\n+  using std::vswscanf;\n+  using std::vwprintf;\n+  using std::vwscanf;\n+  using std::wprintf;\n+  using std::wscanf;\n+  using std::fgetwc;\n+  using std::fgetws;\n+  using std::fputwc;\n+  using std::fputws;\n+  using std::fwide;\n+  using std::getwc;\n+  using std::getwchar;\n+  using std::putwc;\n+  using std::putwchar;\n+  using std::ungetwc;\n+#endif\n+\n+  using std::wcstod;\n+  using std::wcstof;\n+  using std::wcstold;\n+  using std::wcstol;\n+  using std::wcstoll;\n+  using std::wcstoul;\n+  using std::wcstoull;\n+  using std::wcscpy;\n+  using std::wcsncpy;\n+  using std::wcscat;\n+  using std::wcsncat;\n+\n+#if 0\n+  using std::wcsmp;\n+#endif\n+\n+  using std::wcscoll;\n+  using std::wcsncmp;\n+  using std::wcsxfrm;\n+  using std::wcschr;\n+  using std::wcscspn;\n+  using std::wcslen;\n+  using std::wcspbrk;\n+  using std::wcsrchr;\n+  using std::wcsspn;\n+  using std::wcsstr;\n+  using std::wcstok;\n+  using std::wmemchr;\n+  using std::wmemcmp;\n+  using std::wmemcpy;\n+  using std::wmemmove;\n+  using std::wmemset;\n+\n+#if 0\n+  using std::wcsftime;\n+#endif\n+\n+  using std::btowc;\n+  using std::wctob;\n+  using std::mbsinit;\n+  using std::mbrlen;\n+  using std::mbrtowc;\n+  using std::wcrtomb;\n+  using std::mbsrtowcs;\n+  using std::wcsrtombs;\n+\n+# ifdef _WCHAR_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _WCHAR_NEED_C_LEGACY_\n+# endif /* _WCHAR_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_WCHAR_H_ */\n+\n+\n+"}, {"sha": "cae1aff43e14caecac6184781dc9e73e306a0265", "filename": "libstdc++-v3/include/c_std/wctype.h", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1384173a1c1246fec61fafcf71639cf98fdbd4f3/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwctype.h?ref=1384173a1c1246fec61fafcf71639cf98fdbd4f3", "patch": "@@ -0,0 +1,74 @@\n+// -*- C++ -*- header wrapper.\n+\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef  _INCLUDED_CPP_CWCTYPE_H_\n+# define _INCLUDED_CPP_CWCTYPE_H_ 1\n+\n+# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n+      // get out of the \"legacy\"\n+    } // close extern \"C\"\n+  }   // close namespace _C_legacy::\n+#  undef _IN_C_LEGACY_\n+#  define _CWCHAR_NEED_C_LEGACY_\n+# endif\n+\n+# include <cwctype>\n+\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n+  using std::wint_t;\n+  using std::wctype_t;\n+  using std::wctrans_t;\n+  using std::iswalpha;\n+  using std::iswupper;\n+  using std::iswlower;\n+  using std::iswdigit;\n+  using std::iswxdigit;\n+  using std::iswalnum;\n+  using std::iswspace;\n+  using std::iswpunct;\n+  using std::iswprint;\n+  using std::iswgraph;\n+  using std::iswcntrl;\n+  using std::iswctype;\n+  using std::towctrans;\n+  using std::towlower;\n+  using std::towupper;\n+  using std::wctrans;\n+  using std::wctype;\n+\n+# ifdef _CWCHAR_NEED_C_LEGACY_\n+  // dive back into the \"swamp\"\n+  namespace _C_legacy {\n+    extern \"C\" {\n+#  define _IN_C_LEGACY_\n+#  undef _CWCHAR_NEED_C_LEGACY_\n+# endif /* _CWCHAR_NEED_C_LEGACY_ */\n+#endif /* _INCLUDED_CPP_CWCTYPE_H_ */"}]}