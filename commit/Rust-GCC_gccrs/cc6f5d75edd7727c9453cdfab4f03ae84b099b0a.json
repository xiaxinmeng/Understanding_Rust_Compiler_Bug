{"sha": "cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M2ZjVkNzVlZGQ3NzI3Yzk0NTNjZGZhYjRmMDNhZTg0YjA5OWIwYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:45:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T10:45:42Z"}, "message": "[multiple changes]\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* debug.adb: Document that d7 suppresses compilation time output.\n\t* errout.adb (Write_Header): Include compilation time in\n\theader output.\n\t* exp_intr.adb (Expand_Intrinsic_Call): Add\n\tCompilation_Date/Compilation_Time (Expand_Source_Info): Expand\n\tCompilation_Date/Compilation_Time.\n\t* g-souinf.ads (Compilation_Date): New function\n\t(Compilation_Time): New function.\n\t* gnat1drv.adb (Gnat1drv): Set Opt.Compilation_Time.\n\t* gnat_rm.texi (Compilation_Date): New function\n\t(Compilation_Time): New function.\n\t* opt.ads (Compilation_Time): New variable.\n\t* s-os_lib.ads, s-os_lib.adb (Current_Time_String): New function.\n\t* sem_intr.adb (Compilation_Date): New function.\n\t(Compilation_Time): New function.\n\t* snames.ads-tmpl (Name_Compilation_Date): New entry.\n\t(Name_Compilation_Time): New entry.\n\n2014-07-30  Yannick Moy  <moy@adacore.com>\n\n\t* inline.adb: Add comment.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch4.adb (Is_Parameterless_Attribute): 'Result is a\n\tparameterless attribute, and a postondition can mention an\n\tindexed component or a slice whose prefix is an attribute\n\treference F'Result.\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* sprint.adb (Sprint_Node_Actual, case Object_Declaration):\n\tAvoid bomb when printing package Standard.\n\n2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_elab.adb (Check_Internal_Call_Continue): If an elaboration\n\tentity is created at this point, ensure that the name of the\n\tflag is unique, because the subprogram may be overloaded and\n\tother homonyms may also have elaboration flags created on the fly.\n\n2014-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_attr.adb (Analyze_Array_Component_Update): New routine.\n\t(Analyze_Attribute): Major cleanup of attribute\n\t'Update. The logic is now split into two distinct routines\n\tdepending on the type of the prefix. The use of <> is now illegal\n\tin attribute 'Update.\n\t(Analyze_Record_Component_Update): New routine.\n\t(Check_Component_Reference): Removed.\n\t(Resolve_Attribute): Remove the return statement and ??? comment\n\tfollowing the processing for attribute 'Update. As a result,\n\tthe attribute now freezes its prefix.\n\n2014-07-30  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch4.adb (Apply_Accessibility_Check): Do\n\tnot call Base_Address() in VM targets.\n\nFrom-SVN: r213246", "tree": {"sha": "1349fa352faceacd002257f1bbe9c0a29a330470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1349fa352faceacd002257f1bbe9c0a29a330470"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/comments", "author": null, "committer": null, "parents": [{"sha": "43478196de6d652e2cfcd4e0985f7371e2b351fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43478196de6d652e2cfcd4e0985f7371e2b351fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43478196de6d652e2cfcd4e0985f7371e2b351fb"}], "stats": {"total": 812, "additions": 515, "deletions": 297}, "files": [{"sha": "768c313a28147c4878c3c9767e41233d368c0fd2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -1,3 +1,64 @@\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* debug.adb: Document that d7 suppresses compilation time output.\n+\t* errout.adb (Write_Header): Include compilation time in\n+\theader output.\n+\t* exp_intr.adb (Expand_Intrinsic_Call): Add\n+\tCompilation_Date/Compilation_Time (Expand_Source_Info): Expand\n+\tCompilation_Date/Compilation_Time.\n+\t* g-souinf.ads (Compilation_Date): New function\n+\t(Compilation_Time): New function.\n+\t* gnat1drv.adb (Gnat1drv): Set Opt.Compilation_Time.\n+\t* gnat_rm.texi (Compilation_Date): New function\n+\t(Compilation_Time): New function.\n+\t* opt.ads (Compilation_Time): New variable.\n+\t* s-os_lib.ads, s-os_lib.adb (Current_Time_String): New function.\n+\t* sem_intr.adb (Compilation_Date): New function.\n+\t(Compilation_Time): New function.\n+\t* snames.ads-tmpl (Name_Compilation_Date): New entry.\n+\t(Name_Compilation_Time): New entry.\n+\n+2014-07-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb: Add comment.\n+\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch4.adb (Is_Parameterless_Attribute): 'Result is a\n+\tparameterless attribute, and a postondition can mention an\n+\tindexed component or a slice whose prefix is an attribute\n+\treference F'Result.\n+\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sprint.adb (Sprint_Node_Actual, case Object_Declaration):\n+\tAvoid bomb when printing package Standard.\n+\n+2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_elab.adb (Check_Internal_Call_Continue): If an elaboration\n+\tentity is created at this point, ensure that the name of the\n+\tflag is unique, because the subprogram may be overloaded and\n+\tother homonyms may also have elaboration flags created on the fly.\n+\n+2014-07-30  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Array_Component_Update): New routine.\n+\t(Analyze_Attribute): Major cleanup of attribute\n+\t'Update. The logic is now split into two distinct routines\n+\tdepending on the type of the prefix. The use of <> is now illegal\n+\tin attribute 'Update.\n+\t(Analyze_Record_Component_Update): New routine.\n+\t(Check_Component_Reference): Removed.\n+\t(Resolve_Attribute): Remove the return statement and ??? comment\n+\tfollowing the processing for attribute 'Update. As a result,\n+\tthe attribute now freezes its prefix.\n+\n+2014-07-30  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Apply_Accessibility_Check): Do\n+\tnot call Base_Address() in VM targets.\n+\n 2014-07-30  Yannick Moy  <moy@adacore.com>\n \n \t* gnat1drv.adb (Adjust_Global_Switches): Set"}, {"sha": "1f7c8e283042670820d5668a3c5603b56b5240a0", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -151,7 +151,7 @@ package body Debug is\n    --  d4   Inhibit automatic krunch of predefined library unit files\n    --  d5   Debug output for tree read/write\n    --  d6   Default access unconstrained to thin pointers\n-   --  d7   Do not output version & file time stamp in -gnatv or -gnatl mode\n+   --  d7   Suppress version/source stamp/compilation time for -gnatv/-gnatl\n    --  d8   Force opposite endianness in packed stuff\n    --  d9   Allow lock free implementation\n \n@@ -721,10 +721,11 @@ package body Debug is\n    --       implications of using thin pointers, and also to test that the\n    --       compiler functions correctly with this choice.\n \n-   --  d7   Normally a -gnatl or -gnatv listing includes the time stamp\n-   --       of the source file. This debug flag suppresses this output,\n-   --       and also suppresses the message with the version number.\n-   --       This is useful in certain regression tests.\n+   --  d7   Normally a -gnatl or -gnatv listing includes the time stamp of the\n+   --       source file and the time of the compilation. This debug flag can\n+   --       be used to suppress this output, and also suppresses the message\n+   --       with the version of the compiler. This is useful for regression\n+   --       tests which need to have consistent output.\n \n    --  d8   This forces the packed stuff to generate code assuming the\n    --       opposite endianness from the actual correct value. Useful in"}, {"sha": "4fc280556099e763e4928e38060289ba92b199bf", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -1761,9 +1761,11 @@ package body Errout is\n             Write_Name (Full_File_Name (Sfile));\n \n             if not Debug_Flag_7 then\n-               Write_Str (\" (source file time stamp: \");\n+               Write_Eol;\n+               Write_Str (\"Source file time stamp: \");\n                Write_Time_Stamp (Sfile);\n-               Write_Char (')');\n+               Write_Eol;\n+               Write_Str (\"Compiled at: \" & Compilation_Time);\n             end if;\n \n             Write_Eol;"}, {"sha": "e9487f0e2202dba93e93daddf8786ee53dfe0a5a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 95, "deletions": 96, "changes": 191, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -765,7 +765,7 @@ package body Exp_Ch4 is\n             --  and also generates code invoking Free, which requires also a\n             --  reference to the base of the unallocated object.\n \n-            if Is_Interface (DesigT) then\n+            if Is_Interface (DesigT) and then Tagged_Type_Expansion then\n                Obj_Ref :=\n                  Unchecked_Convert_To (Etype (Obj_Ref),\n                    Make_Function_Call (Loc,\n@@ -803,10 +803,10 @@ package body Exp_Ch4 is\n \n             if Needs_Finalization (DesigT) then\n                Fin_Call :=\n-                 Make_Final_Call (\n-                   Obj_Ref =>\n-                     Make_Explicit_Dereference (Loc, New_Copy (Obj_Ref)),\n-                   Typ     => DesigT);\n+                 Make_Final_Call\n+                   (Obj_Ref =>\n+                      Make_Explicit_Dereference (Loc, New_Copy (Obj_Ref)),\n+                    Typ     => DesigT);\n \n                --  When the target or profile supports deallocation, wrap the\n                --  finalization call in a block to ensure proper deallocation\n@@ -1063,9 +1063,9 @@ package body Exp_Ch4 is\n                  and then Present (Finalization_Master (PtrT))\n                then\n                   Insert_Action (N,\n-                    Make_Attach_Call (\n-                      Obj_Ref => New_Occurrence_Of (Temp, Loc),\n-                      Ptr_Typ => PtrT));\n+                    Make_Attach_Call\n+                      (Obj_Ref => New_Occurrence_Of (Temp, Loc),\n+                       Ptr_Typ => PtrT));\n                end if;\n \n             else\n@@ -1092,10 +1092,9 @@ package body Exp_Ch4 is\n                  and then Present (Finalization_Master (PtrT))\n                then\n                   Insert_Action (N,\n-                    Make_Attach_Call (\n-                      Obj_Ref =>\n-                        New_Occurrence_Of (Temp, Loc),\n-                      Ptr_Typ => PtrT));\n+                    Make_Attach_Call\n+                      (Obj_Ref => New_Occurrence_Of (Temp, Loc),\n+                       Ptr_Typ => PtrT));\n                end if;\n             end if;\n \n@@ -1112,7 +1111,7 @@ package body Exp_Ch4 is\n                New_Decl :=\n                  Make_Full_Type_Declaration (Loc,\n                    Defining_Identifier => Def_Id,\n-                   Type_Definition =>\n+                   Type_Definition     =>\n                      Make_Access_To_Object_Definition (Loc,\n                        All_Present            => True,\n                        Null_Exclusion_Present => False,\n@@ -1232,9 +1231,9 @@ package body Exp_Ch4 is\n             begin\n                Tag_Assign :=\n                  Make_Assignment_Statement (Loc,\n-                   Name =>\n+                   Name       =>\n                      Make_Selected_Component (Loc,\n-                       Prefix => TagR,\n+                       Prefix        => TagR,\n                        Selector_Name =>\n                          New_Occurrence_Of\n                            (First_Tag_Component (Full_T), Loc)),\n@@ -1367,9 +1366,8 @@ package body Exp_Ch4 is\n       then\n          --  Apply constraint to designated subtype indication\n \n-         Apply_Constraint_Check (Expression (Exp),\n-           Designated_Type (DesigT),\n-           No_Sliding => True);\n+         Apply_Constraint_Check\n+           (Expression (Exp), Designated_Type (DesigT), No_Sliding => True);\n \n          if Nkind (Expression (Exp)) = N_Raise_Constraint_Error then\n \n@@ -1839,9 +1837,9 @@ package body Exp_Ch4 is\n       begin\n          return\n            Make_Attribute_Reference (Loc,\n-            Attribute_Name => Nam,\n-            Prefix => New_Occurrence_Of (Arr, Loc),\n-            Expressions => New_List (Make_Integer_Literal (Loc, Num)));\n+             Attribute_Name => Nam,\n+             Prefix         => New_Occurrence_Of (Arr, Loc),\n+             Expressions    => New_List (Make_Integer_Literal (Loc, Num)));\n       end Arr_Attr;\n \n       ------------------------\n@@ -1883,7 +1881,7 @@ package body Exp_Ch4 is\n          else\n             return\n               Make_Implicit_If_Statement (Nod,\n-                Condition => Make_Op_Not (Loc, Right_Opnd => Test),\n+                Condition       => Make_Op_Not (Loc, Right_Opnd => Test),\n                 Then_Statements => New_List (\n                   Make_Simple_Return_Statement (Loc,\n                     Expression => New_Occurrence_Of (Standard_False, Loc))));\n@@ -1974,7 +1972,7 @@ package body Exp_Ch4 is\n                Make_Exit_Statement (Loc,\n                  Condition =>\n                    Make_Op_Eq (Loc,\n-                      Left_Opnd => New_Occurrence_Of (An, Loc),\n+                      Left_Opnd  => New_Occurrence_Of (An, Loc),\n                       Right_Opnd => Arr_Attr (A, Name_Last, N))));\n \n             Append_To (Stm_List,\n@@ -2163,18 +2161,17 @@ package body Exp_Ch4 is\n               Statements => New_List (\n \n                 Make_Implicit_If_Statement (Nod,\n-                  Condition => Test_Empty_Arrays,\n+                  Condition       => Test_Empty_Arrays,\n                   Then_Statements => New_List (\n                     Make_Simple_Return_Statement (Loc,\n                       Expression =>\n                         New_Occurrence_Of (Standard_True, Loc)))),\n \n                 Make_Implicit_If_Statement (Nod,\n-                  Condition => Test_Lengths_Correspond,\n+                  Condition       => Test_Lengths_Correspond,\n                   Then_Statements => New_List (\n                     Make_Simple_Return_Statement (Loc,\n-                      Expression =>\n-                        New_Occurrence_Of (Standard_False, Loc)))),\n+                      Expression => New_Occurrence_Of (Standard_False, Loc)))),\n \n                 Handle_One_Dimension (1, First_Index (Ltyp)),\n \n@@ -2272,8 +2269,7 @@ package body Exp_Ch4 is\n \n          elsif Nkind (Parent (N)) = N_Op_Not\n            and then Nkind (N) = N_Op_And\n-           and then\n-             Safe_In_Place_Array_Op (Name (Parent (Parent (N))), L, R)\n+           and then Safe_In_Place_Array_Op (Name (Parent (Parent (N))), L, R)\n          then\n             return;\n          else\n@@ -3496,13 +3492,13 @@ package body Exp_Ch4 is\n       --  Low_Bound + Length - 1.\n \n       High_Bound :=\n-        To_Ityp (\n-          Make_Op_Add (Loc,\n-            Left_Opnd  => To_Artyp (New_Copy (Low_Bound)),\n-            Right_Opnd =>\n-              Make_Op_Subtract (Loc,\n-                Left_Opnd  => New_Copy (Aggr_Length (NN)),\n-                Right_Opnd => Make_Artyp_Literal (1))));\n+        To_Ityp\n+          (Make_Op_Add (Loc,\n+             Left_Opnd  => To_Artyp (New_Copy (Low_Bound)),\n+             Right_Opnd =>\n+               Make_Op_Subtract (Loc,\n+                 Left_Opnd  => New_Copy (Aggr_Length (NN)),\n+                 Right_Opnd => Make_Artyp_Literal (1))));\n \n       --  Note that calculation of the high bound may cause overflow in some\n       --  very weird cases, so in the general case we need an overflow check on\n@@ -3605,9 +3601,8 @@ package body Exp_Ch4 is\n       if Atyp = Standard_String\n         and then NN in 2 .. 9\n         and then (Lib_Level_Target\n-          or else\n-            ((Opt.Optimization_Level = 0 or else Debug_Flag_Dot_CC)\n-               and then not Debug_Flag_Dot_C))\n+          or else ((Opt.Optimization_Level = 0 or else Debug_Flag_Dot_CC)\n+                     and then not Debug_Flag_Dot_C))\n       then\n          declare\n             RR : constant array (Nat range 2 .. 9) of RE_Id :=\n@@ -3803,7 +3798,7 @@ package body Exp_Ch4 is\n          begin\n             Rewrite (Rop,\n               Make_Range (Loc,\n-                Low_Bound =>\n+                Low_Bound  =>\n                   Make_Attribute_Reference (Loc,\n                     Attribute_Name => Name_First,\n                     Prefix         => New_Occurrence_Of (Rtyp, Loc)),\n@@ -3877,13 +3872,14 @@ package body Exp_Ch4 is\n                     Name       => New_Occurrence_Of (Bnn, Loc),\n                     Expression =>\n                       Make_And_Then (Loc,\n-                        Left_Opnd =>\n+                        Left_Opnd  =>\n                           Make_Function_Call (Loc,\n                             Name                   =>\n                               New_Occurrence_Of (RTE (RE_Big_GE), Loc),\n                             Parameter_Associations => New_List (\n                               New_Occurrence_Of (L, Loc),\n                               Lbound)),\n+\n                         Right_Opnd =>\n                           Make_Function_Call (Loc,\n                             Name                   =>\n@@ -3982,8 +3978,8 @@ package body Exp_Ch4 is\n             --              Lnn in LLIB (T'Base'First) .. LLIB (T'Base'Last)\n             --                and then T'Base (Lnn) in T;\n             --         end if;\n-            --\n-            --          SS_Release (M);\n+\n+            --         SS_Release (M);\n             --       end\n             --   in\n             --       Bnn\n@@ -4137,12 +4133,14 @@ package body Exp_Ch4 is\n                              Convert_To (LLIB,\n                                Make_Attribute_Reference (Loc,\n                                  Attribute_Name => Name_First,\n-                                 Prefix => New_Occurrence_Of (TB, Loc))),\n+                                 Prefix         =>\n+                                   New_Occurrence_Of (TB, Loc))),\n                            High_Bound =>\n                              Convert_To (LLIB,\n                                Make_Attribute_Reference (Loc,\n                                  Attribute_Name => Name_Last,\n-                                 Prefix => New_Occurrence_Of (TB, Loc))))),\n+                                 Prefix         =>\n+                                   New_Occurrence_Of (TB, Loc))))),\n                    Right_Opnd => Nin));\n                Set_Analyzed (N, False);\n                Analyze_And_Resolve (N, Restype);\n@@ -5257,10 +5255,10 @@ package body Exp_Ch4 is\n \n       if Compile_Time_Known_Value (Cond) then\n          if Is_True (Expr_Value (Cond)) then\n-            Expr := Thenx;\n+            Expr    := Thenx;\n             Actions := Then_Actions (N);\n          else\n-            Expr := Elsex;\n+            Expr    := Elsex;\n             Actions := Else_Actions (N);\n          end if;\n \n@@ -5636,7 +5634,7 @@ package body Exp_Ch4 is\n               and then Nkind (Prefix (Lo_Orig)) in N_Has_Entity\n               and then Entity (Prefix (Lo_Orig)) = Ltyp\n \n-            --  Same tests for right operand\n+              --  Same tests for right operand\n \n               and then Nkind (Hi_Orig) = N_Attribute_Reference\n               and then Attribute_Name (Hi_Orig) = Name_Last\n@@ -5941,7 +5939,7 @@ package body Exp_Ch4 is\n                   if Is_Acc then\n                      Cond :=\n                        Make_Or_Else (Loc,\n-                         Left_Opnd =>\n+                         Left_Opnd  =>\n                            Make_Op_Eq (Loc,\n                              Left_Opnd  => Obj,\n                              Right_Opnd => Make_Null (Loc)),\n@@ -5968,7 +5966,7 @@ package body Exp_Ch4 is\n \n                   if Is_Acc then\n                      Cond := Make_Or_Else (Loc,\n-                       Left_Opnd =>\n+                       Left_Opnd  =>\n                          Make_Op_Eq (Loc,\n                            Left_Opnd  => Obj,\n                            Right_Opnd => Make_Null (Loc)),\n@@ -6170,7 +6168,7 @@ package body Exp_Ch4 is\n       if Nkind (P) = N_Slice then\n          Rewrite (N,\n            Make_Indexed_Component (Loc,\n-             Prefix => Prefix (P),\n+             Prefix      => Prefix (P),\n              Expressions => New_List (\n                Convert_To\n                  (Etype (First_Index (Etype (P))),\n@@ -6404,7 +6402,7 @@ package body Exp_Ch4 is\n \n    procedure Expand_N_Op_Abs (N : Node_Id) is\n       Loc  : constant Source_Ptr := Sloc (N);\n-      Expr : constant Node_Id := Right_Opnd (N);\n+      Expr : constant Node_Id    := Right_Opnd (N);\n \n    begin\n       Unary_Op_Validity_Checks (N);\n@@ -6436,7 +6434,7 @@ package body Exp_Ch4 is\n                  Left_Opnd  => Duplicate_Subexpr (Expr),\n                  Right_Opnd =>\n                    Make_Attribute_Reference (Loc,\n-                     Prefix =>\n+                     Prefix         =>\n                        New_Occurrence_Of (Base_Type (Etype (Expr)), Loc),\n                      Attribute_Name => Name_First)),\n              Reason => CE_Overflow_Check_Failed));\n@@ -6741,8 +6739,8 @@ package body Exp_Ch4 is\n \n       procedure Build_Equality_Call (Eq : Entity_Id) is\n          Op_Type : constant Entity_Id := Etype (First_Formal (Eq));\n-         L_Exp   : Node_Id := Relocate_Node (Lhs);\n-         R_Exp   : Node_Id := Relocate_Node (Rhs);\n+         L_Exp   : Node_Id            := Relocate_Node (Lhs);\n+         R_Exp   : Node_Id            := Relocate_Node (Rhs);\n \n       begin\n          --  Adjust operands if necessary to comparison type\n@@ -6850,10 +6848,10 @@ package body Exp_Ch4 is\n                        First_Discriminant\n                          (Scope (Entity (Selector_Name (Lhs))));\n                      while Present (Discr) loop\n-                        Append_Elmt (\n-                          Make_Identifier (Loc,\n-                            Chars => New_External_Name (Chars (Discr), 'A')),\n-                          To => Lhs_Discr_Vals);\n+                        Append_Elmt\n+                          (Make_Identifier (Loc,\n+                             Chars => New_External_Name (Chars (Discr), 'A')),\n+                           To => Lhs_Discr_Vals);\n                         Next_Discriminant (Discr);\n                      end loop;\n \n@@ -6863,15 +6861,15 @@ package body Exp_Ch4 is\n                   else\n                      Discr := First_Discriminant (Lhs_Type);\n                      while Present (Discr) loop\n-                        Append_Elmt (\n-                          Make_Selected_Component (Loc,\n-                            Prefix => Prefix (Lhs),\n-                            Selector_Name =>\n-                              New_Copy\n-                                (Get_Discriminant_Value (Discr,\n-                                    Lhs_Type,\n-                                    Stored_Constraint (Lhs_Type)))),\n-                          To => Lhs_Discr_Vals);\n+                        Append_Elmt\n+                          (Make_Selected_Component (Loc,\n+                             Prefix        => Prefix (Lhs),\n+                             Selector_Name =>\n+                               New_Copy\n+                                 (Get_Discriminant_Value (Discr,\n+                                     Lhs_Type,\n+                                     Stored_Constraint (Lhs_Type)))),\n+                           To => Lhs_Discr_Vals);\n                         Next_Discriminant (Discr);\n                      end loop;\n                   end if;\n@@ -6883,12 +6881,12 @@ package body Exp_Ch4 is\n \n                   Discr := First_Discriminant (Lhs_Type);\n                   while Present (Discr) loop\n-                     Append_Elmt (\n-                       New_Copy\n-                         (Get_Discriminant_Value (Discr,\n+                     Append_Elmt\n+                       (New_Copy\n+                          (Get_Discriminant_Value (Discr,\n                              Lhs_Type,\n                              Stored_Constraint (Lhs_Type))),\n-                       To => Lhs_Discr_Vals);\n+                        To => Lhs_Discr_Vals);\n                      Next_Discriminant (Discr);\n                   end loop;\n                end if;\n@@ -6900,44 +6898,44 @@ package body Exp_Ch4 is\n                    Has_Per_Object_Constraint (Entity (Selector_Name (Rhs)))\n                then\n                   if Is_Unchecked_Union\n-                    (Scope (Entity (Selector_Name (Rhs))))\n+                       (Scope (Entity (Selector_Name (Rhs))))\n                   then\n                      Discr :=\n                        First_Discriminant\n                          (Scope (Entity (Selector_Name (Rhs))));\n                      while Present (Discr) loop\n-                        Append_Elmt (\n-                          Make_Identifier (Loc,\n-                            Chars => New_External_Name (Chars (Discr), 'B')),\n-                          To => Rhs_Discr_Vals);\n+                        Append_Elmt\n+                          (Make_Identifier (Loc,\n+                             Chars => New_External_Name (Chars (Discr), 'B')),\n+                           To => Rhs_Discr_Vals);\n                         Next_Discriminant (Discr);\n                      end loop;\n \n                   else\n                      Discr := First_Discriminant (Rhs_Type);\n                      while Present (Discr) loop\n-                        Append_Elmt (\n-                          Make_Selected_Component (Loc,\n-                            Prefix        => Prefix (Rhs),\n-                            Selector_Name =>\n-                              New_Copy (Get_Discriminant_Value\n-                                          (Discr,\n-                                           Rhs_Type,\n-                                           Stored_Constraint (Rhs_Type)))),\n-                          To => Rhs_Discr_Vals);\n+                        Append_Elmt\n+                          (Make_Selected_Component (Loc,\n+                             Prefix        => Prefix (Rhs),\n+                             Selector_Name =>\n+                               New_Copy (Get_Discriminant_Value\n+                                           (Discr,\n+                                            Rhs_Type,\n+                                            Stored_Constraint (Rhs_Type)))),\n+                           To => Rhs_Discr_Vals);\n                         Next_Discriminant (Discr);\n                      end loop;\n                   end if;\n \n                else\n                   Discr := First_Discriminant (Rhs_Type);\n                   while Present (Discr) loop\n-                     Append_Elmt (\n-                       New_Copy (Get_Discriminant_Value\n-                                   (Discr,\n-                                    Rhs_Type,\n-                                    Stored_Constraint (Rhs_Type))),\n-                       To => Rhs_Discr_Vals);\n+                     Append_Elmt\n+                       (New_Copy (Get_Discriminant_Value\n+                                    (Discr,\n+                                     Rhs_Type,\n+                                     Stored_Constraint (Rhs_Type))),\n+                        To => Rhs_Discr_Vals);\n                      Next_Discriminant (Discr);\n                   end loop;\n                end if;\n@@ -7662,7 +7660,8 @@ package body Exp_Ch4 is\n             Rewrite (N,\n               Convert_To (Typ,\n                 Make_Function_Call (Loc,\n-                  Name => New_Occurrence_Of (RTE (RE_Exp_Modular), Loc),\n+                  Name                   =>\n+                    New_Occurrence_Of (RTE (RE_Exp_Modular), Loc),\n                   Parameter_Associations => New_List (\n                     Convert_To (RTE (RE_Unsigned), Base),\n                     Make_Integer_Literal (Loc, Modulus (Rtyp)),\n@@ -7682,9 +7681,9 @@ package body Exp_Ch4 is\n             Rewrite (N,\n               Convert_To (Typ,\n                 Make_Op_And (Loc,\n-                  Left_Opnd =>\n+                  Left_Opnd  =>\n                     Make_Function_Call (Loc,\n-                      Name => New_Occurrence_Of (Ent, Loc),\n+                      Name                   => New_Occurrence_Of (Ent, Loc),\n                       Parameter_Associations => New_List (\n                         Convert_To (Etype (First_Formal (Ent)), Base),\n                         Exp)),\n@@ -8083,7 +8082,7 @@ package body Exp_Ch4 is\n \n       if (LOK and ROK)\n         and then ((Llo >= 0 and then Rlo >= 0)\n-                    or else\n+                     or else\n                   (Lhi <= 0 and then Rhi <= 0))\n       then\n          Rewrite (N,"}, {"sha": "f0ca3e3afc67ea039048b9ace9cb36772c6ff823", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 38, "deletions": 5, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -109,10 +109,12 @@ package body Exp_Intr is\n    procedure Expand_Source_Info (N : Node_Id; Nam : Name_Id);\n    --  Rewrite the node by the appropriate string or positive constant.\n    --  Nam can be one of the following:\n-   --    Name_File             - expand string that is the name of source file\n-   --    Name_Line             - expand integer line number\n-   --    Name_Source_Location  - expand string of form file:line\n-   --    Name_Enclosing_Entity - expand string  with name of enclosing entity\n+   --    Name_File                  - expand string name of source file\n+   --    Name_Line                  - expand integer line number\n+   --    Name_Source_Location       - expand string of form file:line\n+   --    Name_Enclosing_Entity      - expand string name of enclosing entity\n+   --    Name_Compilation_Date      - expand string with compilation date\n+   --    Name_Compilation_Time      - expand string with compilation time\n \n    ---------------------------------\n    -- Expand_Binary_Operator_Call --\n@@ -557,7 +559,9 @@ package body Exp_Intr is\n       elsif Nam_In (Nam, Name_File,\n                          Name_Line,\n                          Name_Source_Location,\n-                         Name_Enclosing_Entity)\n+                         Name_Enclosing_Entity,\n+                         Name_Compilation_Date,\n+                         Name_Compilation_Time)\n       then\n          Expand_Source_Info (N, Nam);\n \n@@ -806,6 +810,35 @@ package body Exp_Intr is\n \n                Write_Entity_Name (Ent);\n \n+            when Name_Compilation_Date =>\n+               declare\n+                  subtype S13 is String (1 .. 3);\n+                  Months : constant array (1 .. 12) of S13 :=\n+                    (\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n+                     \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\");\n+\n+                  M1 : constant Character := Opt.Compilation_Time (6);\n+                  M2 : constant Character := Opt.Compilation_Time (7);\n+\n+                  MM : constant Natural range 1 .. 12 :=\n+                    (Character'Pos (M1) - Character'Pos ('0')) * 10 +\n+                    (Character'Pos (M2) - Character'Pos ('0'));\n+\n+               begin\n+                  --  Reformat ISO date into MMM DD YYYY (__DATE__) format\n+\n+                  Name_Buffer (1 .. 3)  := Months (MM);\n+                  Name_Buffer (4)       := ' ';\n+                  Name_Buffer (5 .. 6)  := Opt.Compilation_Time (9 .. 10);\n+                  Name_Buffer (7)       := ' ';\n+                  Name_Buffer (8 .. 11) := Opt.Compilation_Time (1 .. 4);\n+                  Name_Len := 11;\n+               end;\n+\n+            when Name_Compilation_Time =>\n+               Name_Buffer (1 .. 8) := Opt.Compilation_Time (12 .. 19);\n+               Name_Len := 8;\n+\n             when others =>\n                raise Program_Error;\n          end case;"}, {"sha": "610db23371883885a4e3f749b82c72bf218ad0b2", "filename": "gcc/ada/g-souinf.ads", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fg-souinf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fg-souinf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-souinf.ads?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,23 +46,27 @@ package GNAT.Source_Info is\n    --  Historical note: this used to be Pure, but that was when we marked all\n    --  intrinsics as not Pure, even in Pure units, so no problems arose.\n \n-   function File return String;\n+   function File return String with\n+     Import, Convention => Intrinsic;\n    --  Return the name of the current file, not including the path information.\n    --  The result is considered to be a static string constant.\n \n-   function Line return Positive;\n+   function Line return Positive with\n+     Import, Convention => Intrinsic;\n    --  Return the current input line number. The result is considered to be a\n    --  static expression.\n \n-   function Source_Location return String;\n+   function Source_Location return String with\n+     Import, Convention => Intrinsic;\n    --  Return a string literal of the form \"name:line\", where name is the\n    --  current source file name without path information, and line is the\n    --  current line number. In the event that instantiations are involved,\n    --  additional suffixes of the same form are appended after the separating\n    --  string \" instantiated at \". The result is considered to be a static\n    --  string constant.\n \n-   function Enclosing_Entity return String;\n+   function Enclosing_Entity return String with\n+     Import, Convention => Intrinsic;\n    --  Return the name of the current subprogram, package, task, entry or\n    --  protected subprogram. The string is in exactly the form used for the\n    --  declaration of the entity (casing and encoding conventions), and is\n@@ -75,9 +79,14 @@ package GNAT.Source_Info is\n    --  package itself. This is useful in identifying and logging information\n    --  from within generic templates.\n \n-private\n-   pragma Import (Intrinsic, File);\n-   pragma Import (Intrinsic, Line);\n-   pragma Import (Intrinsic, Source_Location);\n-   pragma Import (Intrinsic, Enclosing_Entity);\n+   function Compilation_Date return String with\n+     Import, Convention => Intrinsic;\n+   --  Returns date of compilation as a static string \"mmm dd yyyy\". This is\n+   --  in local time form, and is exactly compatible with C macro __DATE__.\n+\n+   function Compilation_Time return String with\n+     Import, Convention => Intrinsic;\n+   --  Returns GMT time of compilation as a static string \"hh:mm:ss\". This is\n+   --  in local time form, and is exactly compatible with C macro __TIME__.\n+\n end GNAT.Source_Info;"}, {"sha": "14dc0eea3ee98ab3aaae6df5fce663e5ef2fc507", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -82,6 +82,7 @@ with Usage;\n with Validsw;  use Validsw;\n \n with System.Assertions;\n+with System.OS_Lib;\n \n --------------\n -- Gnat1drv --\n@@ -838,6 +839,10 @@ begin\n       Sem_Eval.Initialize;\n       Sem_Type.Init_Interp_Tables;\n \n+      --  Capture compilation date and time\n+\n+      Opt.Compilation_Time := System.OS_Lib.Current_Time_String;\n+\n       --  Acquire target parameters from system.ads (source of package System)\n \n       Targparm_Acquire : declare"}, {"sha": "f417d39e657bfdd6e02cdeeaf43ef070d1864a94", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -14637,6 +14637,8 @@ There are no restrictions on pragma @code{Restrictions}.\n \n @menu\n * Intrinsic Operators::\n+* Compilation_Date::\n+* Compilation_Time::\n * Enclosing_Entity::\n * Exception_Information::\n * Exception_Message::\n@@ -14694,12 +14696,34 @@ of the differing types @code{Int1} and @code{Int2}.\n It is also possible to specify such operators for private types, if the\n full views are appropriate arithmetic types.\n \n+@node Compilation_Date\n+@section Compilation_Date\n+@cindex Compilation_Date\n+@noindent\n+This intrinsic subprogram is used in the implementation of the\n+library package @code{GNAT.Source_Info}.  The only useful use of the\n+intrinsic import in this case is the one in this unit, so an\n+application program should simply call the function\n+@code{GNAT.Source_Info.Compilation_Date} to obtain the date of\n+the current compilation (in local time format MMM DD YYYY).\n+\n+@node Compilation_Time\n+@section Compilation_Time\n+@cindex Compilation_Time\n+@noindent\n+This intrinsic subprogram is used in the implementation of the\n+library package @code{GNAT.Source_Info}.  The only useful use of the\n+intrinsic import in this case is the one in this unit, so an\n+application program should simply call the function\n+@code{GNAT.Source_Info.Compilation_Time} to obtain the time of\n+the current compilation (in local time format HH:MM:SS).\n+\n @node Enclosing_Entity\n @section Enclosing_Entity\n @cindex Enclosing_Entity\n @noindent\n This intrinsic subprogram is used in the implementation of the\n-library routine @code{GNAT.Source_Info}.  The only useful use of the\n+library package @code{GNAT.Source_Info}.  The only useful use of the\n intrinsic import in this case is the one in this unit, so an\n application program should simply call the function\n @code{GNAT.Source_Info.Enclosing_Entity} to obtain the name of\n@@ -14710,7 +14734,7 @@ the current subprogram, package, task, entry, or protected subprogram.\n @cindex Exception_Information'\n @noindent\n This intrinsic subprogram is used in the implementation of the\n-library routine @code{GNAT.Current_Exception}.  The only useful\n+library package @code{GNAT.Current_Exception}.  The only useful\n use of the intrinsic import in this case is the one in this unit,\n so an application program should simply call the function\n @code{GNAT.Current_Exception.Exception_Information} to obtain\n@@ -14721,7 +14745,7 @@ the exception information associated with the current exception.\n @cindex Exception_Message\n @noindent\n This intrinsic subprogram is used in the implementation of the\n-library routine @code{GNAT.Current_Exception}.  The only useful\n+library package @code{GNAT.Current_Exception}.  The only useful\n use of the intrinsic import in this case is the one in this unit,\n so an application program should simply call the function\n @code{GNAT.Current_Exception.Exception_Message} to obtain\n@@ -14732,7 +14756,7 @@ the message associated with the current exception.\n @cindex Exception_Name\n @noindent\n This intrinsic subprogram is used in the implementation of the\n-library routine @code{GNAT.Current_Exception}.  The only useful\n+library package @code{GNAT.Current_Exception}.  The only useful\n use of the intrinsic import in this case is the one in this unit,\n so an application program should simply call the function\n @code{GNAT.Current_Exception.Exception_Name} to obtain\n@@ -14743,7 +14767,7 @@ the name of the current exception.\n @cindex File\n @noindent\n This intrinsic subprogram is used in the implementation of the\n-library routine @code{GNAT.Source_Info}.  The only useful use of the\n+library package @code{GNAT.Source_Info}.  The only useful use of the\n intrinsic import in this case is the one in this unit, so an\n application program should simply call the function\n @code{GNAT.Source_Info.File} to obtain the name of the current\n@@ -14754,7 +14778,7 @@ file.\n @cindex Line\n @noindent\n This intrinsic subprogram is used in the implementation of the\n-library routine @code{GNAT.Source_Info}.  The only useful use of the\n+library package @code{GNAT.Source_Info}.  The only useful use of the\n intrinsic import in this case is the one in this unit, so an\n application program should simply call the function\n @code{GNAT.Source_Info.Line} to obtain the number of the current\n@@ -20172,7 +20196,9 @@ for the LynxOS@ cross port.\n \n @noindent\n Provides subprograms that give access to source code information known at\n-compile time, such as the current file name and line number.\n+compile time, such as the current file name and line number. Also provides\n+subprograms yielding the date and time of the current compilation (like the\n+C macros @code{__DATE__} and @code{__TIME__})\n \n @node GNAT.Spelling_Checker (g-speche.ads)\n @section @code{GNAT.Spelling_Checker} (@file{g-speche.ads})"}, {"sha": "69388ac26a72468a0d52d6dc751712bef8dcaccc", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -1399,6 +1399,11 @@ package body Inline is\n \n          Error_Msg_NE (Msg (Msg'First .. Msg'Last - 1), N, Subp);\n \n+      --  Do not issue errors/warnings when compiling with optimizations. Note\n+      --  that GNATprove mode is only set when we are analyzing (not compiling)\n+      --  the program, so in that case the value of optimization level does not\n+      --  matter.\n+\n       elsif Optimization_Level = 0 or else GNATprove_Mode then\n \n          --  Do not emit warning if this is a predefined unit which is not"}, {"sha": "8781d97f2512668b1e3c84fa4f616dafb6600f65", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -366,14 +366,17 @@ package Opt is\n    --  True if source lines removed by the preprocessor should be commented\n    --  in the output file.\n \n+   Compilation_Time : String (1 .. 19);\n+   --  GNAT\n+   --  Compilation date and time in form YYYY-MM-DD HH:MM:SS\n+\n    Compile_Only : Boolean := False;\n    --  GNATMAKE, GNATCLEAN, GPRMAKE, GPBUILD, GPRCLEAN\n    --  GNATMAKE, GPRMAKE, GPRMAKE:\n-   --    set to True to skip bind and link steps (except when Bind_Only is\n-   --    True).\n+   --    set True to skip bind and link steps (except when Bind_Only is True)\n    --  GNATCLEAN, GPRCLEAN:\n-   --    set to True to delete only the files produced by the compiler but not\n-   --    the library files or the executable files.\n+   --    set True to delete only the files produced by the compiler but not the\n+   --    library files or the executable files.\n \n    Compiler_Unit : Boolean := False;\n    --  GNAT1\n@@ -772,11 +775,12 @@ package Opt is\n    --  use of pragma Implicit_Packing.\n \n    Ineffective_Inline_Warnings : Boolean := False;\n-   --  GNAT Set True to activate warnings if front-end inlining (-gnatN) is\n-   --  not able to actually inline a particular call (or all calls). Can be\n-   --  controlled by use of -gnatwp/-gnatwP. Also set True to activate warnings\n-   --  if frontend inlining is not able to inline a subprogram expected to be\n-   --  inlined in GNATprove mode.\n+   --  GNAT\n+   --  Set True to activate warnings if front-end inlining (-gnatN) is not able\n+   --  to actually inline a particular call (or all calls). Can be controlled\n+   --  by use of -gnatwp/-gnatwP. Also set True to activate warnings if\n+   --  frontend inlining is not able to inline a subprogram expected to\n+   --  be inlined in GNATprove mode.\n \n    Init_Or_Norm_Scalars : Boolean := False;\n    --  GNAT, GANTBIND"}, {"sha": "e5fb00c6657a9c228256bc8c5cae9cc17932e784", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -42,6 +42,7 @@ package body Ch4 is\n       Attribute_Img          => True,\n       Attribute_Loop_Entry   => True,\n       Attribute_Old          => True,\n+      Attribute_Result       => True,\n       Attribute_Stub_Type    => True,\n       Attribute_Version      => True,\n       Attribute_Type_Key     => True,"}, {"sha": "794d30665f6848aba360e132f4596b786ddf51ca", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -888,6 +888,26 @@ package body System.OS_Lib is\n       end loop File_Loop;\n    end Create_Temp_File_Internal;\n \n+   -------------------------\n+   -- Current_Time_String --\n+   -------------------------\n+\n+   function Current_Time_String return String is\n+      subtype S23 is String (1 .. 23);\n+      --  Holds current time in ISO 8601 format YYYY-MM-DD HH:MM:SS.SS + NUL\n+\n+      procedure Current_Time_String (Time : System.Address);\n+      pragma Import (C, Current_Time_String, \"__gnat_current_time_string\");\n+      --  Puts current time into Time in above ISO 8601 format\n+\n+      Result23 : aliased S23;\n+      --  Current time in ISO 8601 format\n+\n+   begin\n+      Current_Time_String (Result23'Address);\n+      return Result23 (1 .. 19);\n+   end Current_Time_String;\n+\n    -----------------\n    -- Delete_File --\n    -----------------"}, {"sha": "a79e0b9c9a4927d02593c5784a87510b5657abac", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -101,14 +101,14 @@ package System.OS_Lib is\n    ---------------------\n \n    type OS_Time is private;\n-   --  The OS's notion of time is represented by the private type OS_Time.\n-   --  This is the type returned by the File_Time_Stamp functions to obtain\n-   --  the time stamp of a specified file. Functions and a procedure (modeled\n-   --  after the similar subprograms in package Calendar) are provided for\n-   --  extracting information from a value of this type. Although these are\n-   --  called GM, the intention is not that they provide GMT times in all\n-   --  cases but rather the actual (time-zone independent) time stamp of the\n-   --  file (of course in Unix systems, this *is* in GMT form).\n+   --  The OS's notion of time is represented by the private type OS_Time. This\n+   --  is the type returned by the File_Time_Stamp functions to obtain the time\n+   --  stamp of a specified file. Functions and a procedure (modeled after the\n+   --  similar subprograms in package Calendar) are provided for extracting\n+   --  information from a value of this type. Although these are called GM, the\n+   --  intention in the case of time stamps is not that they provide GMT times\n+   --  in all cases but rather the actual (time-zone independent) time stamp of\n+   --  the file (of course in Unix systems, this *is* in GMT form).\n \n    Invalid_Time : constant OS_Time;\n    --  A special unique value used to flag an invalid time stamp value\n@@ -130,7 +130,7 @@ package System.OS_Lib is\n    function GM_Hour    (Date : OS_Time) return Hour_Type;\n    function GM_Minute  (Date : OS_Time) return Minute_Type;\n    function GM_Second  (Date : OS_Time) return Second_Type;\n-   --  Functions to extract information from OS_Time value\n+   --  Functions to extract information from OS_Time value in GMT form\n \n    function \"<\"  (X, Y : OS_Time) return Boolean;\n    function \">\"  (X, Y : OS_Time) return Boolean;\n@@ -163,6 +163,10 @@ package System.OS_Lib is\n    --  component parts and returns an OS_Time. Returns Invalid_Time if the\n    --  creation fails.\n \n+   function Current_Time_String return String;\n+   --  Returns current local time in the form YYYY-MM-DD HH:MM:SS. The result\n+   --  has bounds 1 .. 19.\n+\n    ----------------\n    -- File Stuff --\n    ----------------"}, {"sha": "f9493faaf035ab44258dc71da9156adcf90ec075", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 189, "deletions": 150, "changes": 339, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -6220,69 +6220,158 @@ package body Sem_Attr is\n       ------------\n \n       when Attribute_Update => Update : declare\n+         Common_Typ : Entity_Id;\n+         --  The common type of a multiple component update for a record\n+\n          Comps : Elist_Id := No_Elist;\n-         Expr  : Node_Id;\n+         --  A list used in the resolution of a record update. It contains the\n+         --  entities of all record components processed so far.\n \n-         procedure Check_Component_Reference\n-           (Comp : Entity_Id;\n-            Typ  : Entity_Id);\n-         --  Comp is a record component (possibly a discriminant) and Typ is a\n-         --  record type. Determine whether Comp is a legal component of Typ.\n-         --  Emit an error if Comp mentions a discriminant or is not a unique\n-         --  component reference in the update aggregate.\n+         procedure Analyze_Array_Component_Update (Assoc : Node_Id);\n+         --  Analyze and resolve array_component_association Assoc against the\n+         --  index of array type P_Type.\n \n-         -------------------------------\n-         -- Check_Component_Reference --\n-         -------------------------------\n+         procedure Analyze_Record_Component_Update (Comp : Node_Id);\n+         --  Analyze and resolve record_component_association Comp against\n+         --  record type P_Type.\n \n-         procedure Check_Component_Reference\n-           (Comp : Entity_Id;\n-            Typ  : Entity_Id)\n-         is\n-            Comp_Name : constant Name_Id := Chars (Comp);\n+         ------------------------------------\n+         -- Analyze_Array_Component_Update --\n+         ------------------------------------\n \n-            function Is_Duplicate_Component return Boolean;\n-            --  Determine whether component Comp already appears in list Comps\n+         procedure Analyze_Array_Component_Update (Assoc : Node_Id) is\n+            Expr      : Node_Id;\n+            High      : Node_Id;\n+            Index     : Node_Id;\n+            Index_Typ : Entity_Id;\n+            Low       : Node_Id;\n \n-            ----------------------------\n-            -- Is_Duplicate_Component --\n-            ----------------------------\n+         begin\n+            --  The current association contains a sequence of indexes denoting\n+            --  an element of a multidimensional array:\n \n-            function Is_Duplicate_Component return Boolean is\n-               Comp_Elmt : Elmt_Id;\n+            --    (Index_1, ..., Index_N)\n \n-            begin\n-               if Present (Comps) then\n-                  Comp_Elmt := First_Elmt (Comps);\n-                  while Present (Comp_Elmt) loop\n-                     if Chars (Node (Comp_Elmt)) = Comp_Name then\n-                        return True;\n+            --  Examine each individual index and resolve it against the proper\n+            --  index type of the array.\n+\n+            if Nkind (First (Choices (Assoc))) = N_Aggregate then\n+               Expr := First (Choices (Assoc));\n+               while Present (Expr) loop\n+\n+                  --  The use of others is illegal (SPARK RM 4.4.1(12))\n+\n+                  if Nkind (Expr) = N_Others_Choice then\n+                     Error_Attr\n+                       (\"others choice not allowed in attribute %\", Expr);\n+\n+                  --  Otherwise analyze and resolve all indexes\n+\n+                  else\n+                     Index     := First (Expressions (Expr));\n+                     Index_Typ := First_Index (P_Type);\n+                     while Present (Index) and then Present (Index_Typ) loop\n+                        Analyze_And_Resolve (Index, Etype (Index_Typ));\n+                        Next (Index);\n+                        Next_Index (Index_Typ);\n+                     end loop;\n+\n+                     --  Detect a case where the association either lacks an\n+                     --  index or contains an extra index.\n+\n+                     if Present (Index) or else Present (Index_Typ) then\n+                        Error_Msg_N\n+                          (\"dimension mismatch in index list\", Assoc);\n                      end if;\n+                  end if;\n \n-                     Next_Elmt (Comp_Elmt);\n-                  end loop;\n+                  Next (Expr);\n+               end loop;\n+\n+            --  The current association denotes either a single component or a\n+            --  range of components of a one dimensional array:\n+\n+            --    1, 2 .. 5\n+\n+            --  Resolve the index or its high and low bounds (if range) against\n+            --  the proper index type of the array.\n+\n+            else\n+               Index     := First (Choices (Assoc));\n+               Index_Typ := First_Index (P_Type);\n+\n+               if Present (Next_Index (Index_Typ)) then\n+                  Error_Msg_N (\"too few subscripts in array reference\", Assoc);\n                end if;\n \n-               return False;\n-            end Is_Duplicate_Component;\n+               while Present (Index) loop\n \n-            --  Local variables\n+                  --  The use of others is illegal (SPARK RM 4.4.1(12))\n \n-            Comp_Or_Discr : Entity_Id;\n+                  if Nkind (Index) = N_Others_Choice then\n+                     Error_Attr\n+                       (\"others choice not allowed in attribute %\", Index);\n+\n+                  --  The index denotes a range of elements\n+\n+                  elsif Nkind (Index) = N_Range then\n+                     Low  := Low_Bound  (Index);\n+                     High := High_Bound (Index);\n+\n+                     Analyze_And_Resolve (Low,  Etype (Index_Typ));\n+                     Analyze_And_Resolve (High, Etype (Index_Typ));\n+\n+                     --  Add a range check to ensure that the bounds of the\n+                     --  range are within the index type when this cannot be\n+                     --  determined statically.\n+\n+                     if not Is_OK_Static_Expression (Low) then\n+                        Set_Do_Range_Check (Low);\n+                     end if;\n+\n+                     if not Is_OK_Static_Expression (High) then\n+                        Set_Do_Range_Check (High);\n+                     end if;\n+\n+                  --  Otherwise the index denotes a single element\n+\n+                  else\n+                     Analyze_And_Resolve (Index, Etype (Index_Typ));\n+\n+                     --  Add a range check to ensure that the index is within\n+                     --  the index type when it is not possible to determine\n+                     --  this statically.\n+\n+                     if not Is_OK_Static_Expression (Index) then\n+                        Set_Do_Range_Check (Index);\n+                     end if;\n+                  end if;\n+\n+                  Next (Index);\n+               end loop;\n+            end if;\n+         end Analyze_Array_Component_Update;\n+\n+         -------------------------------------\n+         -- Analyze_Record_Component_Update --\n+         -------------------------------------\n \n-         --  Start of processing for Check_Component_Reference\n+         procedure Analyze_Record_Component_Update (Comp : Node_Id) is\n+            Comp_Name     : constant Name_Id := Chars (Comp);\n+            Base_Typ      : Entity_Id;\n+            Comp_Or_Discr : Entity_Id;\n \n          begin\n             --  Find the discriminant or component whose name corresponds to\n             --  Comp. A simple character comparison is sufficient because all\n             --  visible names within a record type are unique.\n \n-            Comp_Or_Discr := First_Entity (Typ);\n+            Comp_Or_Discr := First_Entity (P_Type);\n             while Present (Comp_Or_Discr) loop\n                if Chars (Comp_Or_Discr) = Comp_Name then\n \n-                  --  Record component entity and type in the given aggregate\n-                  --  choice, for subsequent resolution.\n+                  --  Decorate the component reference by setting its entity\n+                  --  and type for resolution purposes.\n \n                   Set_Entity (Comp, Comp_Or_Discr);\n                   Set_Etype  (Comp, Etype (Comp_Or_Discr));\n@@ -6292,16 +6381,16 @@ package body Sem_Attr is\n                Comp_Or_Discr := Next_Entity (Comp_Or_Discr);\n             end loop;\n \n-            --  Diagnose possible illegal references\n+            --  Diagnose an illegal reference\n \n             if Present (Comp_Or_Discr) then\n                if Ekind (Comp_Or_Discr) = E_Discriminant then\n                   Error_Attr\n                     (\"attribute % may not modify record discriminants\", Comp);\n \n                else pragma Assert (Ekind (Comp_Or_Discr) = E_Component);\n-                  if Is_Duplicate_Component then\n-                     Error_Msg_NE (\"component & already updated\", Comp, Comp);\n+                  if Contains (Comps, Comp_Or_Discr) then\n+                     Error_Msg_N (\"component & already updated\", Comp);\n \n                   --  Mark this component as processed\n \n@@ -6310,24 +6399,42 @@ package body Sem_Attr is\n                         Comps := New_Elmt_List;\n                      end if;\n \n-                     Append_Elmt (Comp, Comps);\n+                     Append_Elmt (Comp_Or_Discr, Comps);\n                   end if;\n                end if;\n \n             --  The update aggregate mentions an entity that does not belong to\n             --  the record type.\n \n             else\n-               Error_Msg_NE\n-                 (\"& is not a component of aggregate subtype\", Comp, Comp);\n+               Error_Msg_N (\"& is not a component of aggregate subtype\", Comp);\n+            end if;\n+\n+            --  Verify the consistency of types when the current component is\n+            --  part of a miltiple component update.\n+\n+            --    Comp_1, ..., Comp_N => <value>\n+\n+            if Present (Etype (Comp)) then\n+               Base_Typ := Base_Type (Etype (Comp));\n+\n+               --  Save the type of the first component reference as the\n+               --  remaning references (if any) must resolve to this type.\n+\n+               if No (Common_Typ) then\n+                  Common_Typ := Base_Typ;\n+\n+               elsif Base_Typ /= Common_Typ then\n+                  Error_Msg_N\n+                    (\"components in choice list must have same type\", Comp);\n+               end if;\n             end if;\n-         end Check_Component_Reference;\n+         end Analyze_Record_Component_Update;\n \n          --  Local variables\n \n-         Assoc     : Node_Id;\n-         Comp      : Node_Id;\n-         Comp_Type : Entity_Id;\n+         Assoc : Node_Id;\n+         Comp  : Node_Id;\n \n       --  Start of processing for Update\n \n@@ -6353,128 +6460,64 @@ package body Sem_Attr is\n          --  choices. Perform the following checks:\n \n          --    1) Legality of \"others\" in all cases\n-         --    2) Component legality for records\n+         --    2) Legality of <>\n+         --    3) Component legality for arrays\n+         --    4) Component legality for records\n \n          --  The remaining checks are performed on the expanded attribute\n \n          Assoc := First (Component_Associations (E1));\n          while Present (Assoc) loop\n-            Comp := First (Choices (Assoc));\n-            Analyze (Expression (Assoc));\n-            Comp_Type := Empty;\n-            while Present (Comp) loop\n-               if Nkind (Comp) = N_Others_Choice then\n-                  Error_Attr\n-                    (\"others choice not allowed in attribute %\", Comp);\n-\n-               elsif Is_Array_Type (P_Type) then\n-                  declare\n-                     Index      : Node_Id;\n-                     Index_Type : Entity_Id;\n-                     Lo, Hi     : Node_Id;\n-\n-                  begin\n-                     if Nkind (First (Choices (Assoc))) /= N_Aggregate then\n \n-                        --  Choices denote separate components of one-\n-                        --  dimensional array.\n+            --  The use of <> is illegal (SPARK RM 4.4.1(1))\n \n-                        Index_Type := First_Index (P_Type);\n+            if Box_Present (Assoc) then\n+               Error_Attr\n+                 (\"default initialization not allowed in attribute %\", Assoc);\n \n-                        if Present (Next_Index (Index_Type)) then\n-                           Error_Msg_N\n-                             (\"too few subscripts in array reference\", Comp);\n-                        end if;\n+            --  Otherwise process the association\n \n-                        Index := First (Choices (Assoc));\n-                        while Present (Index) loop\n-                           if Nkind (Index) = N_Range then\n-                              Lo := Low_Bound  (Index);\n-                              Hi := High_Bound (Index);\n+            else\n+               Analyze (Expression (Assoc));\n \n-                              Analyze_And_Resolve (Lo, Etype (Index_Type));\n+               if Is_Array_Type (P_Type) then\n+                  Analyze_Array_Component_Update (Assoc);\n \n-                              if not Is_OK_Static_Expression (Lo) then\n-                                 Set_Do_Range_Check (Lo);\n-                              end if;\n+               elsif Is_Record_Type (P_Type) then\n \n-                              Analyze_And_Resolve (Hi, Etype (Index_Type));\n+                  --  Reset the common type used in a multiple component update\n+                  --  as we are processing the contents of a new association.\n \n-                              if not Is_OK_Static_Expression (Hi) then\n-                                 Set_Do_Range_Check (Hi);\n-                              end if;\n+                  Common_Typ := Empty;\n \n-                           else\n-                              Analyze_And_Resolve (Index, Etype (Index_Type));\n+                  Comp := First (Choices (Assoc));\n+                  while Present (Comp) loop\n+                     if Nkind (Comp) = N_Identifier then\n+                        Analyze_Record_Component_Update (Comp);\n \n-                              if not Is_OK_Static_Expression (Index) then\n-                                 Set_Do_Range_Check (Index);\n-                              end if;\n-                           end if;\n+                     --  The use of others is illegal (SPARK RM 4.4.1(5))\n \n-                           Next (Index);\n-                        end loop;\n+                     elsif Nkind (Comp) = N_Others_Choice then\n+                        Error_Attr\n+                          (\"others choice not allowed in attribute %\", Comp);\n \n-                     --  Choice is a sequence of indexes for each dimension\n+                     --  The name of a record component cannot appear in any\n+                     --  other form.\n \n                      else\n-                        Expr := First (Choices (Assoc));\n-                        while Present (Expr) loop\n-                           Index_Type := First_Index (P_Type);\n-                           Index := First (Expressions (Expr));\n-                           while Present (Index_Type)\n-                             and then Present (Index)\n-                           loop\n-                              Analyze_And_Resolve (Index, Etype (Index_Type));\n-                              Next_Index (Index_Type);\n-                              Next (Index);\n-                           end loop;\n-\n-                           if Present (Index) or else Present (Index_Type) then\n-                              Error_Msg_N\n-                                (\"dimension mismatch in index list\", Assoc);\n-                           end if;\n-\n-                           Next (Expr);\n-                        end loop;\n-                     end if;\n-                  end;\n-\n-               elsif Is_Record_Type (P_Type) then\n-\n-                  --  Make sure we have an identifier. Old SPARK allowed\n-                  --  a component selection e.g. A.B in the corresponding\n-                  --  context, but we do not yet permit this for 'Update.\n-\n-                  if Nkind (Comp) /= N_Identifier then\n-                     Error_Msg_N (\"name should be identifier or OTHERS\", Comp);\n-                  else\n-                     Check_Component_Reference (Comp, P_Type);\n-\n-                     --  Verify that all choices in an association denote\n-                     --  components of the same type.\n-\n-                     if No (Etype (Comp)) then\n-                        null;\n-\n-                     elsif No (Comp_Type) then\n-                        Comp_Type := Base_Type (Etype (Comp));\n-\n-                     elsif Comp_Type /= Base_Type (Etype (Comp)) then\n                         Error_Msg_N\n-                          (\"components in choice list must have same type\",\n-                           Assoc);\n+                          (\"name should be identifier or OTHERS\", Comp);\n                      end if;\n-                  end if;\n-               end if;\n \n-               Next (Comp);\n-            end loop;\n+                     Next (Comp);\n+                  end loop;\n+               end if;\n+            end if;\n \n             Next (Assoc);\n          end loop;\n \n-         --  The type of attribute Update is that of the prefix\n+         --  The type of attribute 'Update is that of the prefix\n \n          Set_Etype (N, P_Type);\n       end Update;\n@@ -11044,7 +11087,7 @@ package body Sem_Attr is\n                if Is_Array_Type (Typ) then\n                   Assoc := First (Component_Associations (Aggr));\n                   while Present (Assoc) loop\n-                     Expr  := Expression (Assoc);\n+                     Expr := Expression (Assoc);\n                      Resolve (Expr, Component_Type (Typ));\n \n                      --  For scalar array components set Do_Range_Check when\n@@ -11129,10 +11172,6 @@ package body Sem_Attr is\n                end if;\n             end;\n \n-            --  Premature return requires comment ???\n-\n-            return;\n-\n          ---------\n          -- Val --\n          ---------"}, {"sha": "aeff7a8508e7683abf8a5910fae938762b43e89e", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -2253,13 +2253,15 @@ package body Sem_Elab is\n \n                --  Create object declaration for elaboration entity, and put it\n                --  just in front of the spec of the subprogram or generic unit,\n-               --  in the same scope as this unit.\n+               --  in the same scope as this unit. The subprogram may be over-\n+               --  loaded, so make the name of elaboration entity unique by\n+               --  means of a numeric suffix.\n \n                declare\n                   Loce : constant Source_Ptr := Sloc (E);\n                   Ent  : constant Entity_Id  :=\n                            Make_Defining_Identifier (Loc,\n-                             Chars => New_External_Name (Chars (E), 'E'));\n+                             Chars => New_External_Name (Chars (E), 'E', -1));\n \n                begin\n                   Set_Elaboration_Entity (E, Ent);"}, {"sha": "fe93484071240c04c5d79b9912d2c4ac3ff09d6b", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -362,8 +362,12 @@ package body Sem_Intr is\n \n       --  Source_Location and navigation functions\n \n-      elsif Nam_In (Nam, Name_File, Name_Line, Name_Source_Location,\n-                         Name_Enclosing_Entity)\n+      elsif Nam_In (Nam, Name_File,\n+                         Name_Line,\n+                         Name_Source_Location,\n+                         Name_Enclosing_Entity,\n+                         Name_Compilation_Date,\n+                         Name_Compilation_Time)\n       then\n          null;\n "}, {"sha": "a5791228df1231bf9e71ad8daed58717acfcfb5e", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -1187,6 +1187,8 @@ package Snames is\n    --  convention name. So is To_Address, which is a GNAT attribute.\n \n    First_Intrinsic_Name                  : constant Name_Id := N + $;\n+   Name_Compilation_Date                 : constant Name_Id := N + $;\n+   Name_Compilation_Time                 : constant Name_Id := N + $;\n    Name_Divide                           : constant Name_Id := N + $;\n    Name_Enclosing_Entity                 : constant Name_Id := N + $;\n    Name_Exception_Information            : constant Name_Id := N + $;"}, {"sha": "55669c7f3b513455db8ee59df0e3e625b5b3373a", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc6f5d75edd7727c9453cdfab4f03ae84b099b0a/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=cc6f5d75edd7727c9453cdfab4f03ae84b099b0a", "patch": "@@ -2269,6 +2269,7 @@ package body Sprint is\n \n                   begin\n                      if Nkind (Odef) = N_Identifier\n+                       and then Present (Etype (Odef))\n                        and then Is_Array_Type (Etype (Odef))\n                        and then not Is_Constrained (Etype (Odef))\n                        and then Present (Etype (Def_Id))"}]}