{"sha": "5ee5b32cb20051b96dee793ef1c34355b43f8889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVlNWIzMmNiMjAwNTFiOTZkZWU3OTNlZjFjMzQzNTViNDNmODg4OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-08-07T15:48:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-08-07T15:48:38Z"}, "message": "sparc.c (insert_pass_work_around_errata): Move into...\n\n2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n\n\t* config/sparc/sparc.c (insert_pass_work_around_errata): Move\n\tinto...\n\t(sparc_option_override): ...and port to new C++ pass API.\n\t* config/sparc/t-sparc (sparc.o): Add dep on CONTEXT_H\n\nFrom-SVN: r201569", "tree": {"sha": "66a4a3da0306dcdf8254881e83c4665e63decf23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66a4a3da0306dcdf8254881e83c4665e63decf23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ee5b32cb20051b96dee793ef1c34355b43f8889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ee5b32cb20051b96dee793ef1c34355b43f8889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ee5b32cb20051b96dee793ef1c34355b43f8889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ee5b32cb20051b96dee793ef1c34355b43f8889/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeb1f2be122c4fa3406587fdd913c4e762dbf5ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb1f2be122c4fa3406587fdd913c4e762dbf5ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb1f2be122c4fa3406587fdd913c4e762dbf5ad"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "1dd783d7672a5e1926e921fc12cf6acd74b0e3af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ee5b32cb20051b96dee793ef1c34355b43f8889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ee5b32cb20051b96dee793ef1c34355b43f8889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ee5b32cb20051b96dee793ef1c34355b43f8889", "patch": "@@ -1,3 +1,10 @@\n+2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* config/sparc/sparc.c (insert_pass_work_around_errata): Move\n+\tinto...\n+\t(sparc_option_override): ...and port to new C++ pass API.\n+\t* config/sparc/t-sparc (sparc.o): Add dep on CONTEXT_H\n+\n 2013-08-07  Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (htm_expand_builtin) <case 0>: Remove."}, {"sha": "7080b3364a360415bab38cc800a2415da0973739", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ee5b32cb20051b96dee793ef1c34355b43f8889/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ee5b32cb20051b96dee793ef1c34355b43f8889/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=5ee5b32cb20051b96dee793ef1c34355b43f8889", "patch": "@@ -53,6 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"opts.h\"\n #include \"tree-pass.h\"\n+#include \"context.h\"\n \n /* Processor costs */\n \n@@ -1038,14 +1039,6 @@ make_pass_work_around_errata (gcc::context *ctxt)\n   return new pass_work_around_errata (ctxt);\n }\n \n-struct register_pass_info insert_pass_work_around_errata =\n-{\n-  &pass_work_around_errata.pass,\t/* pass */\n-  \"dbr\",\t\t\t\t/* reference_pass_name */\n-  1,\t\t\t\t\t/* ref_pass_instance_number */\n-  PASS_POS_INSERT_AFTER\t\t\t/* po_op */\n-};\n-\n /* Helpers for TARGET_DEBUG_OPTIONS.  */\n static void\n dump_target_flag_bits (const int flags)\n@@ -1495,6 +1488,14 @@ sparc_option_override (void)\n      (essentially) final form of the insn stream to work on.\n      Registering the pass must be done at start up.  It's convenient to\n      do it here.  */\n+  opt_pass *errata_pass = make_pass_work_around_errata (g);\n+  struct register_pass_info insert_pass_work_around_errata =\n+    {\n+      errata_pass,\t\t/* pass */\n+      \"dbr\",\t\t\t/* reference_pass_name */\n+      1,\t\t\t/* ref_pass_instance_number */\n+      PASS_POS_INSERT_AFTER\t/* po_op */\n+    };\n   register_pass (&insert_pass_work_around_errata);\n }\n \f"}, {"sha": "62ad3f77934b0194b2eb8ef7f27376c673589853", "filename": "gcc/config/sparc/t-sparc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ee5b32cb20051b96dee793ef1c34355b43f8889/gcc%2Fconfig%2Fsparc%2Ft-sparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ee5b32cb20051b96dee793ef1c34355b43f8889/gcc%2Fconfig%2Fsparc%2Ft-sparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparc?ref=5ee5b32cb20051b96dee793ef1c34355b43f8889", "patch": "@@ -24,7 +24,7 @@ sparc.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(FUNCTION_H) $(EXCEPT_H) $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n   $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TM_P_H) debug.h $(TARGET_H) \\\n   $(TARGET_DEF_H) $(COMMON_TARGET_H) $(GIMPLE_H) $(TREE_PASS_H) \\\n-  langhooks.h reload.h $(PARAMS_H) $(DF_H) $(OPTS_H) \\\n+  langhooks.h reload.h $(PARAMS_H) $(DF_H) $(OPTS_H) $(CONTEXT_H) \\\n   gt-sparc.h\n \n sparc-c.o: $(srcdir)/config/sparc/sparc-c.c \\"}]}