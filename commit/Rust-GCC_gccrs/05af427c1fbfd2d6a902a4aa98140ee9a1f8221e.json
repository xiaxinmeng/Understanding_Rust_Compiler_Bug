{"sha": "05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVhZjQyN2MxZmJmZDJkNmE5MDJhNGFhOTgxNDBlZTlhMWY4MjIxZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-08-31T10:23:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-08-31T10:23:25Z"}, "message": "tree.c (build_complex_type): Always set TYPE_NAME for comples types.\n\n2007-08-31  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.c (build_complex_type): Always set TYPE_NAME for\n\tcomples types.\n\nFrom-SVN: r127975", "tree": {"sha": "37a29ba8d8dd1371ff4ef0c24b5ab7ae25901252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37a29ba8d8dd1371ff4ef0c24b5ab7ae25901252"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "671231d26ed16d187281ff215d4c9e5377cc2d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671231d26ed16d187281ff215d4c9e5377cc2d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/671231d26ed16d187281ff215d4c9e5377cc2d43"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "bc077fae8a459f627c1ffdc215ec502dc56ddf79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "patch": "@@ -1,3 +1,8 @@\n+2007-08-31  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (build_complex_type): Always set TYPE_NAME for\n+\tcomples types.\n+\n 2007-08-31  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/rs6000/xcoff.h (XCOFF_CSECT_DEFAULT_ALIGNMENT_STR): New"}, {"sha": "c9587aafb26c77471d76fbf26885c68c05c71537", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05af427c1fbfd2d6a902a4aa98140ee9a1f8221e/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=05af427c1fbfd2d6a902a4aa98140ee9a1f8221e", "patch": "@@ -5992,10 +5992,8 @@ build_complex_type (tree component_type)\n \t  = build_complex_type (TYPE_CANONICAL (component_type));\n     }\n \n-  /* If we are writing Dwarf2 output we need to create a name,\n-     since complex is a fundamental type.  */\n-  if ((write_symbols == DWARF2_DEBUG || write_symbols == VMS_AND_DWARF2_DEBUG)\n-      && ! TYPE_NAME (t))\n+  /* We need to create a name, since complex is a fundamental type.  */\n+  if (! TYPE_NAME (t))\n     {\n       const char *name;\n       if (component_type == char_type_node)"}]}