{"sha": "31007091b10944c358e5038a6271d7e2744cde37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEwMDcwOTFiMTA5NDRjMzU4ZTUwMzhhNjI3MWQ3ZTI3NDRjZGUzNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-08T09:45:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-08T09:45:30Z"}, "message": "openmp: -fopenmp-simd fixes [PR98187]\n\nThis patch fixes two bugs in the -fopenmp-simd support.  One is that\nin C++ #pragma omp parallel master would actually create OMP_PARALLEL\nin the IL, which is a big no-no for -fopenmp-simd, we should be creating\nonly the constructs -fopenmp-simd handles (mainly OMP_SIMD, OMP_LOOP which\nis gimplified as simd in that case, declare simd/reduction and ordered simd).\n\nThe other bug was that #pragma omp master taskloop simd combined construct\ncontains simd and thus should be recognized as #pragma omp simd (with only\nthe simd applicable clauses), but as master wasn't included in\nomp_pragmas_simd, we'd ignore it completely instead.\n\n2020-12-08  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/98187\n\t* c-pragma.c (omp_pragmas): Remove \"master\".\n\t(omp_pragmas_simd): Add \"master\".\n\n\t* parser.c (cp_parser_omp_parallel): For parallel master with\n\t-fopenmp-simd only, just call cp_parser_omp_master instead of\n\twrapping it in OMP_PARALLEL.\n\n\t* c-c++-common/gomp/pr98187.c: New test.", "tree": {"sha": "beb5b083c035dd644ad764ab68d9ab8f6c240a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beb5b083c035dd644ad764ab68d9ab8f6c240a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31007091b10944c358e5038a6271d7e2744cde37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31007091b10944c358e5038a6271d7e2744cde37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31007091b10944c358e5038a6271d7e2744cde37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31007091b10944c358e5038a6271d7e2744cde37/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2c198bfd1e747b761c6b9b13417685bd4378d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2c198bfd1e747b761c6b9b13417685bd4378d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2c198bfd1e747b761c6b9b13417685bd4378d57"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "14d77e05d1e7c84abff03c773e44a35317d870fc", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31007091b10944c358e5038a6271d7e2744cde37/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31007091b10944c358e5038a6271d7e2744cde37/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=31007091b10944c358e5038a6271d7e2744cde37", "patch": "@@ -1317,7 +1317,6 @@ static const struct omp_pragma_def omp_pragmas[] = {\n   { \"depobj\", PRAGMA_OMP_DEPOBJ },\n   { \"end\", PRAGMA_OMP_END_DECLARE_TARGET },\n   { \"flush\", PRAGMA_OMP_FLUSH },\n-  { \"master\", PRAGMA_OMP_MASTER },\n   { \"requires\", PRAGMA_OMP_REQUIRES },\n   { \"section\", PRAGMA_OMP_SECTION },\n   { \"sections\", PRAGMA_OMP_SECTIONS },\n@@ -1333,6 +1332,7 @@ static const struct omp_pragma_def omp_pragmas_simd[] = {\n   { \"distribute\", PRAGMA_OMP_DISTRIBUTE },\n   { \"for\", PRAGMA_OMP_FOR },\n   { \"loop\", PRAGMA_OMP_LOOP },\n+  { \"master\", PRAGMA_OMP_MASTER },\n   { \"ordered\", PRAGMA_OMP_ORDERED },\n   { \"parallel\", PRAGMA_OMP_PARALLEL },\n   { \"scan\", PRAGMA_OMP_SCAN },"}, {"sha": "6aa42efa7322bf78932c04df066bc0d0ba8050e0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31007091b10944c358e5038a6271d7e2744cde37/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31007091b10944c358e5038a6271d7e2744cde37/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=31007091b10944c358e5038a6271d7e2744cde37", "patch": "@@ -40491,6 +40491,9 @@ cp_parser_omp_parallel (cp_parser *parser, cp_token *pragma_tok,\n \t  cclauses = cclauses_buf;\n \n \t  cp_lexer_consume_token (parser->lexer);\n+\t  if (!flag_openmp)  /* flag_openmp_simd  */\n+\t    return cp_parser_omp_master (parser, pragma_tok, p_name, mask,\n+\t\t\t\t\t cclauses, if_p);\n \t  block = begin_omp_parallel ();\n \t  save = cp_parser_begin_omp_structured_block (parser);\n \t  tree ret = cp_parser_omp_master (parser, pragma_tok, p_name, mask,"}, {"sha": "fc252fd7e91ee0a0f12ac85554584a9fa4855535", "filename": "gcc/testsuite/c-c++-common/gomp/pr98187.c", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31007091b10944c358e5038a6271d7e2744cde37/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr98187.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31007091b10944c358e5038a6271d7e2744cde37/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr98187.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr98187.c?ref=31007091b10944c358e5038a6271d7e2744cde37", "patch": "@@ -0,0 +1,109 @@\n+/* PR c++/98187 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fopenmp-simd -O2 -fdump-tree-gimple\" } */\n+/* { dg-final { scan-tree-dump-times \"#pragma omp simd\" 17 \"gimple\" } } */\n+\n+void\n+foo (int *p)\n+{\n+  int i;\n+  #pragma omp distribute parallel for\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp distribute parallel for simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp distribute simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+}\n+\n+void\n+bar (int *p)\n+{\n+  int i;\n+  #pragma omp for simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp master taskloop\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp master taskloop simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp parallel for\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp parallel for simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp parallel loop\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp parallel master\n+  p[0]++;\n+  #pragma omp parallel master taskloop\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp parallel master taskloop simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp parallel sections\n+  {\n+    p[0]++;\n+    #pragma omp section\n+    p[1]++;\n+    #pragma omp section\n+    p[2]++;\n+  }\n+  #pragma omp target parallel\n+  #pragma omp master\n+  p[0]++;\n+  #pragma omp target parallel for\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target parallel for simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target parallel loop\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target teams private (i)\n+  i = 0;\n+  #pragma omp target teams distribute\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target teams distribute parallel for\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target teams distribute parallel for simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target teams distribute simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target teams loop\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp target simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp taskloop simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp teams distribute\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp teams distribute parallel for\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp teams distribute parallel for simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp teams distribute simd\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+  #pragma omp teams loop\n+  for (i = 0; i < 64; i++)\n+    p[i]++;\n+}"}]}