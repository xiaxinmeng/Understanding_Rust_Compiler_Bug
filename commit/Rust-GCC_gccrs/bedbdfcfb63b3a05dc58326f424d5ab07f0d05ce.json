{"sha": "bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkYmRmY2ZiNjNiM2EwNWRjNTgzMjZmNDI0ZDVhYjA3ZjBkMDVjZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-10T15:40:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-10T15:40:05Z"}, "message": "tree.c (make_vector_type): Do not set TYPE_DEBUG_REPRESENTATION_TYPE.\n\n2010-09-10  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.c (make_vector_type): Do not set TYPE_DEBUG_REPRESENTATION_TYPE.\n\t* tree.h (TYPE_DEBUG_REPRESENTATION_TYPE): Remove.\n\t* lto-streamer-out.c (lto_output_ts_type_tree_pointers): Do\n\tnot stream TYPE_DEBUG_REPRESENTATION_TYPE.\n\t* lto-streamer-in.c (lto_input_ts_type_tree_pointers): Likewise.\n\nFrom-SVN: r164193", "tree": {"sha": "efaf9c669cfb8da62589ecfaa1ee5183abefa6cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efaf9c669cfb8da62589ecfaa1ee5183abefa6cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf6a409750631fd7ae7b168a94967a33d509be5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf6a409750631fd7ae7b168a94967a33d509be5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf6a409750631fd7ae7b168a94967a33d509be5d"}], "stats": {"total": 36, "additions": 8, "deletions": 28}, "files": [{"sha": "4d1e7b66ffc7114b7be96455d5de633edb9ad31a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "patch": "@@ -1,3 +1,11 @@\n+2010-09-10  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.c (make_vector_type): Do not set TYPE_DEBUG_REPRESENTATION_TYPE.\n+\t* tree.h (TYPE_DEBUG_REPRESENTATION_TYPE): Remove.\n+\t* lto-streamer-out.c (lto_output_ts_type_tree_pointers): Do\n+\tnot stream TYPE_DEBUG_REPRESENTATION_TYPE.\n+\t* lto-streamer-in.c (lto_input_ts_type_tree_pointers): Likewise.\n+\n 2010-09-10  Richard Guenther  <rguenther@suse.de>\n \n \t* dwarf2out.c (gen_array_type_die): Output DW_TAG_subrange_type"}, {"sha": "fec9833fa8bf7102078a0daa3f2e2836807b7947", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "patch": "@@ -2037,8 +2037,6 @@ lto_input_ts_type_tree_pointers (struct lto_input_block *ib,\n   else if (TREE_CODE (expr) == FUNCTION_TYPE\n \t   || TREE_CODE (expr) == METHOD_TYPE)\n     TYPE_ARG_TYPES (expr) = lto_input_tree (ib, data_in);\n-  else if (TREE_CODE (expr) == VECTOR_TYPE)\n-    TYPE_DEBUG_REPRESENTATION_TYPE (expr) = lto_input_tree (ib, data_in);\n \n   TYPE_SIZE (expr) = lto_input_tree (ib, data_in);\n   TYPE_SIZE_UNIT (expr) = lto_input_tree (ib, data_in);"}, {"sha": "d792526862215c81182ebb026807be1fc879f1c3", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "patch": "@@ -959,8 +959,6 @@ lto_output_ts_type_tree_pointers (struct output_block *ob, tree expr,\n   else if (TREE_CODE (expr) == FUNCTION_TYPE\n \t   || TREE_CODE (expr) == METHOD_TYPE)\n     lto_output_tree_or_ref (ob, TYPE_ARG_TYPES (expr), ref_p);\n-  else if (TREE_CODE (expr) == VECTOR_TYPE)\n-    lto_output_tree_or_ref (ob, TYPE_DEBUG_REPRESENTATION_TYPE (expr), ref_p);\n \n   lto_output_tree_or_ref (ob, TYPE_SIZE (expr), ref_p);\n   lto_output_tree_or_ref (ob, TYPE_SIZE_UNIT (expr), ref_p);"}, {"sha": "c20d3b6c5cee8b428d4bef597c4212a27fd77d42", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "patch": "@@ -8792,24 +8792,6 @@ make_vector_type (tree innertype, int nunits, enum machine_mode mode)\n \n   layout_type (t);\n \n-  {\n-    tree index = build_int_cst (NULL_TREE, nunits - 1);\n-    tree array = build_array_type (TYPE_MAIN_VARIANT (innertype),\n-\t\t\t\t   build_index_type (index));\n-    tree rt = make_node (RECORD_TYPE);\n-\n-    TYPE_FIELDS (rt) = build_decl (UNKNOWN_LOCATION, FIELD_DECL,\n-\t\t\t\t   get_identifier (\"f\"), array);\n-    DECL_CONTEXT (TYPE_FIELDS (rt)) = rt;\n-    layout_type (rt);\n-    TYPE_DEBUG_REPRESENTATION_TYPE (t) = rt;\n-    /* In dwarfout.c, type lookup uses TYPE_UID numbers.  We want to output\n-       the representation type, and we want to find that die when looking up\n-       the vector type.  This is most easily achieved by making the TYPE_UID\n-       numbers equal.  */\n-    TYPE_UID (rt) = TYPE_UID (t);\n-  }\n-\n   hashcode = iterative_hash_host_wide_int (VECTOR_TYPE, hashcode);\n   hashcode = iterative_hash_host_wide_int (nunits, hashcode);\n   hashcode = iterative_hash_host_wide_int (mode, hashcode);"}, {"sha": "a75a852561c67295a39de8edf7246ebf9ba0c9da", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=bedbdfcfb63b3a05dc58326f424d5ab07f0d05ce", "patch": "@@ -2118,12 +2118,6 @@ extern enum machine_mode vector_type_mode (const_tree);\n #define TYPE_IBIT(NODE) (GET_MODE_IBIT (TYPE_MODE (NODE)))\n #define TYPE_FBIT(NODE) (GET_MODE_FBIT (TYPE_MODE (NODE)))\n \n-/* For a VECTOR_TYPE node, this describes a different type which is emitted\n-   in the debugging output.  We use this to describe a vector as a\n-   structure containing an array.  */\n-#define TYPE_DEBUG_REPRESENTATION_TYPE(NODE) \\\n-  (VECTOR_TYPE_CHECK (NODE)->type.values)\n-\n /* For record and union types, information about this type, as a base type\n    for itself.  */\n #define TYPE_BINFO(NODE) (RECORD_OR_UNION_CHECK(NODE)->type.binfo)"}]}