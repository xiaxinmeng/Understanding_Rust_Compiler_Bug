{"sha": "af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYxNWEyZmVkNzZiNWRhMmZhZjBjMmVlOWUwNTI5MjNjNzU2MmU4Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-09-20T20:31:37Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-09-20T20:31:37Z"}, "message": "c.opt (fextended-identifiers): New.\n\ngcc:\n\t* c.opt (fextended-identifiers): New.\n\t* c-opts.c (c_common_handle_option): Handle\n\t-fextended-identifiers.\n\t* doc/cpp.texi: Update documentation of extended identifiers.\n\t* doc/cppopts.texi (-fextended-identifiers): Document.\n\ngcc/testsuite:\n\t* g++.dg/cpp/ucnid-1.C, g++.dg/cpp/normalize-1.C,\n\tg++.dg/other/ucnid-1.C, gcc.dg/cpp/normalize-1.c,\n\tgcc.dg/cpp/normalize-2.c, gcc.dg/cpp/normalize-3.c,\n\tgcc.dg/cpp/normalize-4.c, gcc.dg/cpp/ucnid-1.c,\n\tgcc.dg/cpp/ucnid-2.c, gcc.dg/cpp/ucnid-3.c, gcc.dg/cpp/ucnid-4.c,\n\tgcc.dg/cpp/ucnid-5.c, gcc.dg/cpp/ucnid-7.c,gcc.dg/ucnid-1.c,\n\tgcc.dg/ucnid-2.c, gcc.dg/ucnid-3.c, gcc.dg/ucnid-4.c,\n\tgcc.dg/ucnid-5.c, gcc.dg/ucnid-6.c: Add -fextended-identifiers.\n\t* gcc.dg/cpp/ucnid-8.c: New test.\n\nlibcpp:\n\t* include/cpplib.h (struct cpp_options): Add extended_identifiers.\n\t* init.c (struct lang_flags, lang_defaults): Add\n\textended_identifiers.\n\t(cpp_set_lang): Use it.\n\t* lex.c (forms_identifier_p): Check extended_identifiers.\n\nFrom-SVN: r104462", "tree": {"sha": "00694b7f29cada5340d6da00c4838abdd73404a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00694b7f29cada5340d6da00c4838abdd73404a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fff2603132ecacd4e5cdd97ea92ab5443de613f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fff2603132ecacd4e5cdd97ea92ab5443de613f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fff2603132ecacd4e5cdd97ea92ab5443de613f"}], "stats": {"total": 148, "additions": 106, "deletions": 42}, "files": [{"sha": "4f55ac077c36b0117231f1792e316b734407b23a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,3 +1,11 @@\n+2005-09-20  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* c.opt (fextended-identifiers): New.\n+\t* c-opts.c (c_common_handle_option): Handle\n+\t-fextended-identifiers.\n+\t* doc/cpp.texi: Update documentation of extended identifiers.\n+\t* doc/cppopts.texi (-fextended-identifiers): Document.\n+\n 2005-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/23929"}, {"sha": "b0efaf4a61b11ff4e6739341028eb099fbbd0eb2", "filename": "gcc/c-opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -647,6 +647,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       flag_enforce_eh_specs = value;\n       break;\n \n+    case OPT_fextended_identifiers:\n+      cpp_opts->extended_identifiers = value;\n+      break;\n+\n     case OPT_ffixed_form:\n     case OPT_ffixed_line_length_:\n       /* Fortran front end options ignored when preprocessing only.  */"}, {"sha": "eb01d325ab2ce35560e7694c18fb76d4a346e263", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -495,6 +495,10 @@ fexec-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n -fexec-charset=<cset>\tConvert all strings and character constants to character set <cset>\n \n+fextended-identifiers\n+C ObjC C++ ObjC++\n+Permit universal character names (\\\\u and \\\\U) in identifiers\n+\n finput-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n -finput-charset=<cset>\tSpecify the default character set for source files"}, {"sha": "c019adbac6703b7822793cc64103685ff45568e4", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -281,11 +281,11 @@ the character in the source character set that they represent, then\n converted to the execution character set, just like unescaped\n characters.\n \n+Unless the experimental @option{-fextended-identifiers} option is used,\n GCC does not permit the use of characters outside the ASCII range, nor\n-@samp{\\u} and @samp{\\U} escapes, in identifiers.  We hope this will\n-change eventually, but there are problems with the standard semantics\n-of such ``extended identifiers'' which must be resolved through the\n-ISO C and C++ committees first.\n+@samp{\\u} and @samp{\\U} escapes, in identifiers.  Even with that\n+option, characters outside the ASCII range can only be specified with\n+the @samp{\\u} and @samp{\\U} escapes, not used directly in identifiers.\n \n @node Initial processing\n @section Initial processing\n@@ -510,8 +510,10 @@ In the 1999 C standard, identifiers may contain letters which are not\n part of the ``basic source character set'', at the implementation's\n discretion (such as accented Latin letters, Greek letters, or Chinese\n ideograms).  This may be done with an extended character set, or the\n-@samp{\\u} and @samp{\\U} escape sequences.  GCC does not presently\n-implement either feature in the preprocessor or the compiler.\n+@samp{\\u} and @samp{\\U} escape sequences.  The implementation of this\n+feature in GCC is experimental; such characters are only accepted in\n+the @samp{\\u} and @samp{\\U} forms and only if\n+@option{-fextended-identifiers} is used.\n \n As an extension, GCC treats @samp{$} as a letter.  This is for\n compatibility with some systems, such as VMS, where @samp{$} is commonly\n@@ -3791,7 +3793,9 @@ character set may be controlled by the user, with the\n The C and C++ standards allow identifiers to be composed of @samp{_}\n and the alphanumeric characters.  C++ and C99 also allow universal\n character names, and C99 further permits implementation-defined\n-characters.\n+characters.  GCC currently only permits universal character names if\n+@option{-fextended-identifiers} is used, because the implementation of\n+universal character names in identifiers is experimental.\n \n GCC allows the @samp{$} character in identifiers as an extension for\n most targets.  This is true regardless of the @option{std=} switch,"}, {"sha": "adf77e1802a8da7a5843b969895e76370b2fe784", "filename": "gcc/doc/cppopts.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fdoc%2Fcppopts.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Fdoc%2Fcppopts.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppopts.texi?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -511,6 +511,12 @@ Accept @samp{$} in identifiers.\n   @xref{Identifier characters}.\n @end ifset\n \n+@item -fextended-identifiers\n+@opindex fextended-identifiers\n+Accept universal character names in identifiers.  This option is\n+experimental; in a future version of GCC, it will be enabled by\n+default for C99 and C++.\n+\n @item -fpreprocessed\n @opindex fpreprocessed\n Indicate to the preprocessor that the input file has already been"}, {"sha": "92e197728ac8c6fe9e8aff5cdff554d4bd008ec4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,3 +1,15 @@\n+2005-09-20  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* g++.dg/cpp/ucnid-1.C, g++.dg/cpp/normalize-1.C,\n+\tg++.dg/other/ucnid-1.C, gcc.dg/cpp/normalize-1.c,\n+\tgcc.dg/cpp/normalize-2.c, gcc.dg/cpp/normalize-3.c,\n+\tgcc.dg/cpp/normalize-4.c, gcc.dg/cpp/ucnid-1.c,\n+\tgcc.dg/cpp/ucnid-2.c, gcc.dg/cpp/ucnid-3.c, gcc.dg/cpp/ucnid-4.c,\n+\tgcc.dg/cpp/ucnid-5.c, gcc.dg/cpp/ucnid-7.c,gcc.dg/ucnid-1.c,\n+\tgcc.dg/ucnid-2.c, gcc.dg/ucnid-3.c, gcc.dg/ucnid-4.c,\n+\tgcc.dg/ucnid-5.c, gcc.dg/ucnid-6.c: Add -fextended-identifiers.\n+\t* gcc.dg/cpp/ucnid-8.c: New test.\n+\n 2005-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/23929"}, {"sha": "536a3b45b98bb54deebe0c6d6f7b2b82eb87ded8", "filename": "gcc/testsuite/g++.dg/cpp/normalize-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fnormalize-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fnormalize-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fnormalize-1.C?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-Wnormalized=id\" } */\n+/* { dg-options \"-fextended-identifiers -Wnormalized=id\" } */\n \n \\u00AA\n \\u00B7"}, {"sha": "d15be4f8e03051bc384d8b94658fa8cf556cae7d", "filename": "gcc/testsuite/g++.dg/cpp/ucnid-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp%2Fucnid-1.C?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-pedantic\" } */\n+/* { dg-options \"-pedantic -fextended-identifiers\" } */\n \n \\u00AA /* { dg-error \"not valid in an identifier\" } */\n \\u00AB /* { dg-error \"not valid in an identifier\" } */"}, {"sha": "ff5696bbc2bc67ccea7a65afe781ee365c3cde0f", "filename": "gcc/testsuite/g++.dg/other/ucnid-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fucnid-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fucnid-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fucnid-1.C?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-options \"-fextended-identifiers\" } */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n #include <cstdlib>\n "}, {"sha": "b20f235ee98abef68b287e2198957efd6ee1becd", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-1.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n \n \\u00AA\n \\u00B7"}, {"sha": "6f2f495643002327b3f57072a81573d80eb7f604", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-2.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99 -Wnormalized=nfkc\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers -Wnormalized=nfkc\" } */\n \n \\u00AA  /* { dg-warning \"not in NFKC\" } */\n \\u00B7"}, {"sha": "a4f496fbb3a804b9a5c81373c6f7e22e484af872", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-3.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99 -Wnormalized=id\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers -Wnormalized=id\" } */\n \n \\u00AA\n \\u00B7"}, {"sha": "0040c03aa29236329891e97d92a270f26a38cd4c", "filename": "gcc/testsuite/gcc.dg/cpp/normalize-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fnormalize-4.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99 -Wnormalized=none\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers -Wnormalized=none\" } */\n \n \\u00AA\n \\u00B7"}, {"sha": "3fad08831a6194b181bad8672f1bba389bd5d31b", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-1.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n void abort (void);\n \n #define \\u00C0 1"}, {"sha": "6719c783f561c1e42e87a2b95985fa0c7fba7051", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-2.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n #include <stdlib.h>\n #include <string.h>\n "}, {"sha": "6389b7ebfee2908fd5e1e2d3a18d932cc31d272c", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-3.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n \n #define paste(x, y) x ## y\n "}, {"sha": "6a6699b942c8b325141c121125ad70ebffb135e2", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-4.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n \n \\u00AA\n \\u00AB /* { dg-error \"not valid in an identifier\" } */"}, {"sha": "cdccd3cdf6a15a97520744343e587d8ffb3f35b7", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-5.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-options \"-std=c99 -pedantic\" } */\n+/* { dg-options \"-std=c99 -pedantic -fextended-identifiers\" } */\n \n \\u00AA\n \\u00AB /* { dg-error \"not valid in an identifier\" } */"}, {"sha": "93404225de1e2a8cc3db21f2524b480875c14937", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-7.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n #define a b(\n #define b(x) q\n int a\\U0000000z );"}, {"sha": "1f0379a5bb51dfe47d720ceb98819cb94ba12a52", "filename": "gcc/testsuite/gcc.dg/cpp/ucnid-8.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fucnid-8.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c99\" } */\n+/* Test that -std=c99 does not enable extended identifiers while the\n+   feature is experimental; remove this test after audit of all\n+   identifier uses in the compiler.  */\n+#define a b(\n+#define b(x) q\n+int a\\u00aa);"}, {"sha": "ed89cfdeec48df403617dd539fe6f7b38a2015aa", "filename": "gcc/testsuite/gcc.dg/ucnid-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-1.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n void abort (void);\n \n int main (void)"}, {"sha": "c7dd35bc7ff94565a116500a8bb30ba66fb5f3c2", "filename": "gcc/testsuite/gcc.dg/ucnid-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-2.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n void abort (void);\n \n static int \\u00C0 = 1;"}, {"sha": "79f1be88752004cacf2e3c692da14f21f4ebfce4", "filename": "gcc/testsuite/gcc.dg/ucnid-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-3.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n void abort (void);\n \n int \\u00C0 = 1;"}, {"sha": "f9bf68eb6f6664726db51f9d7b820418aac4fd1a", "filename": "gcc/testsuite/gcc.dg/ucnid-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-4.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n-/* { dg-options \"-std=c99\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers\" } */\n void abort (void);\n \n int \\u00C0(void) { return 1; }"}, {"sha": "8cd86060dfe1fdebeef1803518c164d96f623082", "filename": "gcc/testsuite/gcc.dg/ucnid-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-5.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n-/* { dg-options \"-std=c99 -fdollars-in-identifiers\" } */\n+/* { dg-options \"-std=c99 -fdollars-in-identifiers -fextended-identifiers\" } */\n void abort (void);\n \n int a$b(void) { return 1; }"}, {"sha": "37433a1ebf219e5987ea5b03e96bf65daf341643", "filename": "gcc/testsuite/gcc.dg/ucnid-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fucnid-6.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run */\n /* { dg-xfail-if \"\" { \"powerpc-ibm-aix*\" } { \"*\" } { \"\" } } */\n-/* { dg-options \"-std=c99 -save-temps\" } */\n+/* { dg-options \"-std=c99 -fextended-identifiers -save-temps\" } */\n void abort (void);\n \n int \\u00C0(void) { return 1; }"}, {"sha": "faf6b93070adaf8190c62e2a46c6f5f7ffeb1365", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -1,3 +1,11 @@\n+2005-09-20  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* include/cpplib.h (struct cpp_options): Add extended_identifiers.\n+\t* init.c (struct lang_flags, lang_defaults): Add\n+\textended_identifiers.\n+\t(cpp_set_lang): Use it.\n+\t* lex.c (forms_identifier_p): Check extended_identifiers.\n+\n 2005-08-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/20348"}, {"sha": "c84f62433766eb7301ecf2e2d4b6c1cbd4214449", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -345,6 +345,9 @@ struct cpp_options\n   /* Zero means dollar signs are punctuation.  */\n   unsigned char dollars_in_ident;\n \n+  /* Nonzero means UCNs are accepted in identifiers.  */\n+  unsigned char extended_identifiers;\n+\n   /* True if we should warn about dollars in identifiers or numbers\n      for this translation unit.  */\n   unsigned char warn_dollars;"}, {"sha": "8d564c933f461b2b1d57bfd4a4a332952f3a1d09", "filename": "libcpp/init.c", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -72,21 +72,26 @@ struct lang_flags\n   char c99;\n   char cplusplus;\n   char extended_numbers;\n+  char extended_identifiers;\n   char std;\n   char cplusplus_comments;\n   char digraphs;\n };\n \n static const struct lang_flags lang_defaults[] =\n-{ /*              c99 c++ xnum std  //   digr  */\n-  /* GNUC89 */  { 0,  0,  1,   0,   1,   1     },\n-  /* GNUC99 */  { 1,  0,  1,   0,   1,   1     },\n-  /* STDC89 */  { 0,  0,  0,   1,   0,   0     },\n-  /* STDC94 */  { 0,  0,  0,   1,   0,   1     },\n-  /* STDC99 */  { 1,  0,  1,   1,   1,   1     },\n-  /* GNUCXX */  { 0,  1,  1,   0,   1,   1     },\n-  /* CXX98  */  { 0,  1,  1,   1,   1,   1     },\n-  /* ASM    */  { 0,  0,  1,   0,   1,   0     }\n+{ /*              c99 c++ xnum xid std  //   digr  */\n+  /* GNUC89 */  { 0,  0,  1,   0,  0,   1,   1     },\n+  /* GNUC99 */  { 1,  0,  1,   0,  0,   1,   1     },\n+  /* STDC89 */  { 0,  0,  0,   0,  1,   0,   0     },\n+  /* STDC94 */  { 0,  0,  0,   0,  1,   0,   1     },\n+  /* STDC99 */  { 1,  0,  1,   0,  1,   1,   1     },\n+  /* GNUCXX */  { 0,  1,  1,   0,  0,   1,   1     },\n+  /* CXX98  */  { 0,  1,  1,   0,  1,   1,   1     },\n+  /* ASM    */  { 0,  0,  1,   0,  0,   1,   0     }\n+  /* xid should be 1 for GNUC99, STDC99, GNUCXX and CXX98 when no\n+     longer experimental (when all uses of identifiers in the compiler\n+     have been audited for correct handling of extended\n+     identifiers).  */\n };\n \n /* Sets internal flags correctly for a given language.  */\n@@ -97,13 +102,14 @@ cpp_set_lang (cpp_reader *pfile, enum c_lang lang)\n \n   CPP_OPTION (pfile, lang) = lang;\n \n-  CPP_OPTION (pfile, c99)\t\t = l->c99;\n-  CPP_OPTION (pfile, cplusplus)\t\t = l->cplusplus;\n-  CPP_OPTION (pfile, extended_numbers)\t = l->extended_numbers;\n-  CPP_OPTION (pfile, std)\t\t = l->std;\n-  CPP_OPTION (pfile, trigraphs)\t\t = l->std;\n-  CPP_OPTION (pfile, cplusplus_comments) = l->cplusplus_comments;\n-  CPP_OPTION (pfile, digraphs)\t\t = l->digraphs;\n+  CPP_OPTION (pfile, c99)\t\t\t = l->c99;\n+  CPP_OPTION (pfile, cplusplus)\t\t\t = l->cplusplus;\n+  CPP_OPTION (pfile, extended_numbers)\t\t = l->extended_numbers;\n+  CPP_OPTION (pfile, extended_identifiers)\t = l->extended_identifiers;\n+  CPP_OPTION (pfile, std)\t\t\t = l->std;\n+  CPP_OPTION (pfile, trigraphs)\t\t\t = l->std;\n+  CPP_OPTION (pfile, cplusplus_comments)\t = l->cplusplus_comments;\n+  CPP_OPTION (pfile, digraphs)\t\t\t = l->digraphs;\n }\n \n /* Initialize library global state.  */"}, {"sha": "03131618eb550f7e7468df535bd1bee90cffc977", "filename": "libcpp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af15a2fed76b5da2faf0c2ee9e052923c7562e8f/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=af15a2fed76b5da2faf0c2ee9e052923c7562e8f", "patch": "@@ -476,7 +476,7 @@ forms_identifier_p (cpp_reader *pfile, int first,\n     }\n \n   /* Is this a syntactically valid UCN?  */\n-  if ((CPP_OPTION (pfile, cplusplus) || CPP_OPTION (pfile, c99))\n+  if (CPP_OPTION (pfile, extended_identifiers)\n       && *buffer->cur == '\\\\'\n       && (buffer->cur[1] == 'u' || buffer->cur[1] == 'U'))\n     {"}]}