{"sha": "6a3f3e08723063ea2dadb7ddf503f02972a724e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEzZjNlMDg3MjMwNjNlYTJkYWRiN2RkZjUwM2YwMjk3MmE3MjRlMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-06T18:19:41Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-06T18:19:41Z"}, "message": "arm: Clear canary value after stack_protect_test [PR96191]\n\nThe stack_protect_test patterns were leaving the canary value in the\ntemporary register, meaning that it was often still in registers on\nreturn from the function.  An attacker might therefore have been\nable to use it to defeat stack-smash protection for a later function.\n\ngcc/\n\tPR target/96191\n\t* config/arm/arm.md (arm_stack_protect_test_insn): Zero out\n\toperand 2 after use.\n\t* config/arm/thumb1.md (thumb1_stack_protect_test_insn): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/arm/stack-protector-1.c: New test.\n\t* gcc.target/arm/stack-protector-2.c: Likewise.", "tree": {"sha": "f821ca505e67f83acdea248bc5439ed8e5c5b09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f821ca505e67f83acdea248bc5439ed8e5c5b09c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a3f3e08723063ea2dadb7ddf503f02972a724e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3f3e08723063ea2dadb7ddf503f02972a724e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3f3e08723063ea2dadb7ddf503f02972a724e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3f3e08723063ea2dadb7ddf503f02972a724e2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a13a4e3f29fc4ce5eff96d74ba965c9fdc02184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a13a4e3f29fc4ce5eff96d74ba965c9fdc02184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a13a4e3f29fc4ce5eff96d74ba965c9fdc02184"}], "stats": {"total": 83, "additions": 78, "deletions": 5}, "files": [{"sha": "dd13c77e889a3d8b9c31dabdaf50cafbf63196f4", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=6a3f3e08723063ea2dadb7ddf503f02972a724e2", "patch": "@@ -9320,6 +9320,8 @@\n   [(set_attr \"arch\" \"t1,32\")]\n )\n \n+;; DO NOT SPLIT THIS PATTERN.  It is important for security reasons that the\n+;; canary value does not live beyond the end of this sequence.\n (define_insn \"arm_stack_protect_test_insn\"\n   [(set (reg:CC_Z CC_REGNUM)\n \t(compare:CC_Z (unspec:SI [(match_operand:SI 1 \"memory_operand\" \"m,m\")\n@@ -9329,8 +9331,8 @@\n    (clobber (match_operand:SI 0 \"register_operand\" \"=&l,&r\"))\n    (clobber (match_dup 2))]\n   \"TARGET_32BIT\"\n-  \"ldr\\t%0, [%2]\\;ldr\\t%2, %1\\;eors\\t%0, %2, %0\"\n-  [(set_attr \"length\" \"8,12\")\n+  \"ldr\\t%0, [%2]\\;ldr\\t%2, %1\\;eors\\t%0, %2, %0\\;mov\\t%2, #0\"\n+  [(set_attr \"length\" \"12,16\")\n    (set_attr \"conds\" \"set\")\n    (set_attr \"type\" \"multiple\")\n    (set_attr \"arch\" \"t,32\")]"}, {"sha": "0ff819090d94c58dbb92d3f30159c4064319de70", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=6a3f3e08723063ea2dadb7ddf503f02972a724e2", "patch": "@@ -2020,16 +2020,18 @@\n   [(set_attr \"type\" \"mov_reg\")]\n )\n \n+;; DO NOT SPLIT THIS PATTERN.  It is important for security reasons that the\n+;; canary value does not live beyond the end of this sequence.\n (define_insn \"thumb1_stack_protect_test_insn\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&l\")\n \t(unspec:SI [(match_operand:SI 1 \"memory_operand\" \"m\")\n \t\t    (mem:SI (match_operand:SI 2 \"register_operand\" \"+l\"))]\n \t UNSPEC_SP_TEST))\n    (clobber (match_dup 2))]\n   \"TARGET_THUMB1\"\n-  \"ldr\\t%0, [%2]\\;ldr\\t%2, %1\\;eors\\t%0, %2, %0\"\n-  [(set_attr \"length\" \"8\")\n-   (set_attr \"conds\" \"set\")\n+  \"ldr\\t%0, [%2]\\;ldr\\t%2, %1\\;eors\\t%0, %2, %0\\;movs\\t%2, #0\"\n+  [(set_attr \"length\" \"10\")\n+   (set_attr \"conds\" \"clob\")\n    (set_attr \"type\" \"multiple\")]\n )\n \f"}, {"sha": "b03ea14c4e2d929afd553dc80032d05493895f41", "filename": "gcc/testsuite/gcc.target/arm/stack-protector-1.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-1.c?ref=6a3f3e08723063ea2dadb7ddf503f02972a724e2", "patch": "@@ -0,0 +1,63 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target fstack_protector } */\n+/* { dg-options \"-fstack-protector-all -O2\" } */\n+\n+extern volatile long *stack_chk_guard_ptr;\n+\n+volatile long *\n+get_ptr (void)\n+{\n+  return stack_chk_guard_ptr;\n+}\n+\n+void __attribute__ ((noipa))\n+f (void)\n+{\n+  volatile int x;\n+  x = 1;\n+  x += 1;\n+}\n+\n+#define CHECK(REG) \"\\tcmp\\tr0, \" #REG \"\\n\\tbeq\\t1f\\n\"\n+\n+asm (\n+\"\t.data\\n\"\n+\"\t.align\t3\\n\"\n+\"\t.globl\tstack_chk_guard_ptr\\n\"\n+\"stack_chk_guard_ptr:\\n\"\n+\"\t.word\t__stack_chk_guard\\n\"\n+\"\t.weak\t__stack_chk_guard\\n\"\n+\"__stack_chk_guard:\\n\"\n+\"\t.word\t0xdead4321\\n\"\n+\"\t.text\\n\"\n+\"\t.globl\tmain\\n\"\n+\"\t.type\tmain, %function\\n\"\n+\"main:\\n\"\n+\"\tbl\tget_ptr\\n\"\n+\"\tstr\tr0, [sp, #-8]!\\n\"\n+\"\tbl\tf\\n\"\n+\"\tstr\tr0, [sp, #4]\\n\"\n+\"\tldr     r0, [sp]\\n\"\n+\"\tldr     r0, [r0]\\n\"\n+\tCHECK (r1)\n+\tCHECK (r2)\n+\tCHECK (r3)\n+\tCHECK (r4)\n+\tCHECK (r5)\n+\tCHECK (r6)\n+\tCHECK (r7)\n+\tCHECK (r8)\n+\tCHECK (r9)\n+\tCHECK (r10)\n+\tCHECK (r11)\n+\tCHECK (r12)\n+\tCHECK (r13)\n+\tCHECK (r14)\n+\"\tldr\tr1, [sp, #4]\\n\"\n+\tCHECK (r1)\n+\"\tmov\tr0, #0\\n\"\n+\"\tb\texit\\n\"\n+\"1:\\n\"\n+\"\tb\tabort\\n\"\n+\"\t.size\tmain, .-main\"\n+);"}, {"sha": "266c36fdbc6bc242564711318061a511322e3cde", "filename": "gcc/testsuite/gcc.target/arm/stack-protector-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a3f3e08723063ea2dadb7ddf503f02972a724e2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fstack-protector-2.c?ref=6a3f3e08723063ea2dadb7ddf503f02972a724e2", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target fstack_protector } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-fstack-protector-all -O2 -fpic\" } */\n+\n+#include \"stack-protector-1.c\""}]}