{"sha": "c55d267039b1dfe9f5d29e02066a00cfea40305c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU1ZDI2NzAzOWIxZGZlOWY1ZDI5ZTAyMDY2YTAwY2ZlYTQwMzA1Yw==", "commit": {"author": {"name": "Theodore Papadopoulo", "email": "Theodore.Papadopoulo@sophia.inria.fr", "date": "2000-11-17T22:59:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-11-17T22:59:03Z"}, "message": "stl_tree.h: Overload operators == and != to be able to handle the case...\n\n\n2000-11-17  Theodore Papadopoulo  <Theodore.Papadopoulo@sophia.inria.fr>\n\n\t* include/bits/stl_tree.h: Overload operators == and != to be able\n\tto handle the case (const_iterator,iterator) and\n\t(iterator,const_iterator), thus fixing libstdc++/737 and the like.\n\t* testsuite/23_containers/map_operators.cc (test02): New tests.\n\nFrom-SVN: r37532", "tree": {"sha": "74716b85b3c8eb3ebc1e1fd1e60ec543afb8344e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74716b85b3c8eb3ebc1e1fd1e60ec543afb8344e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c55d267039b1dfe9f5d29e02066a00cfea40305c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55d267039b1dfe9f5d29e02066a00cfea40305c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c55d267039b1dfe9f5d29e02066a00cfea40305c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c55d267039b1dfe9f5d29e02066a00cfea40305c/comments", "author": {"login": "papadop", "id": 1387516, "node_id": "MDQ6VXNlcjEzODc1MTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1387516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papadop", "html_url": "https://github.com/papadop", "followers_url": "https://api.github.com/users/papadop/followers", "following_url": "https://api.github.com/users/papadop/following{/other_user}", "gists_url": "https://api.github.com/users/papadop/gists{/gist_id}", "starred_url": "https://api.github.com/users/papadop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papadop/subscriptions", "organizations_url": "https://api.github.com/users/papadop/orgs", "repos_url": "https://api.github.com/users/papadop/repos", "events_url": "https://api.github.com/users/papadop/events{/privacy}", "received_events_url": "https://api.github.com/users/papadop/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9b6c28211cdf126b8e05c57a1ac9da148108a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9b6c28211cdf126b8e05c57a1ac9da148108a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9b6c28211cdf126b8e05c57a1ac9da148108a73"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "1324f10dd51b582e35eeee077af3e5a1596a4bef", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55d267039b1dfe9f5d29e02066a00cfea40305c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55d267039b1dfe9f5d29e02066a00cfea40305c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c55d267039b1dfe9f5d29e02066a00cfea40305c", "patch": "@@ -3,7 +3,8 @@\n \t* include/bits/stl_tree.h: Overload operators == and != to be able\n \tto handle the case (const_iterator,iterator) and\n \t(iterator,const_iterator), thus fixing libstdc++/737 and the like.\n-\n+\t* testsuite/23_containers/map_operators.cc (test02): New tests.\n+\t\n 2000-11-17  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_CSTDIO): Correct last patch"}, {"sha": "21b62ed5e4ea44fcd5699fbd57b96f6d86bacf38", "filename": "libstdc++-v3/testsuite/23_containers/map_operators.cc", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c55d267039b1dfe9f5d29e02066a00cfea40305c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_operators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c55d267039b1dfe9f5d29e02066a00cfea40305c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_operators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_operators.cc?ref=c55d267039b1dfe9f5d29e02066a00cfea40305c", "patch": "@@ -22,11 +22,12 @@\n \n #include <map>\n #include <string>\n+#include <iostream>\n \n // map and set\n // libstdc++/86: map & set iterator comparisons are not type-safe\n // XXX this is XFAIL for the time being, ie this should not compile\n-int main(void)\n+void test01()\n {\n   bool test = true;\n   std::map<unsigned int, int> mapByIndex;\n@@ -42,3 +43,28 @@ int main(void)\n \n   return 0;\n }\n+\n+// http://sources.redhat.com/ml/libstdc++/2000-11/msg00093.html\n+void test02()\n+{\n+    typedef std::map<int,const int> MapInt;\n+\n+    MapInt m;\n+\n+    for (unsigned i=0;i<10;++i)\n+        m.insert(MapInt::value_type(i,i));\n+\n+    for (MapInt::const_iterator i=m.begin();i!=m.end();++i)\n+        std::cerr << i->second << ' ';\n+\n+    for (MapInt::const_iterator i=m.begin();m.end()!=i;++i)\n+        std::cerr << i->second << ' ';\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+\n+  return 0;\n+}"}]}