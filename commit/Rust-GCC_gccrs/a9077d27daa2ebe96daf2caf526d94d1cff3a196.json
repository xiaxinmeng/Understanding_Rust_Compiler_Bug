{"sha": "a9077d27daa2ebe96daf2caf526d94d1cff3a196", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkwNzdkMjdkYWEyZWJlOTZkYWYyY2FmNTI2ZDk0ZDFjZmYzYTE5Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-10-28T21:39:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-10-28T21:39:15Z"}, "message": "tree-ssa-operands.c (add_vars_for_offset): Add parameter telling if the var is to be treated as points-to location.\n\n2007-10-28  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-operands.c (add_vars_for_offset): Add parameter\n\ttelling if the var is to be treated as points-to location.\n\t(add_vars_for_bitmap): Pass true to add_vars_for_offset.\n\t(add_virtual_operand): Only recurse into MPTs if aliases\n\tis from a NMT.\n\nFrom-SVN: r129704", "tree": {"sha": "ad7d04c51c358fd8705fd4abd8ae5ff7b569811e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad7d04c51c358fd8705fd4abd8ae5ff7b569811e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9077d27daa2ebe96daf2caf526d94d1cff3a196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9077d27daa2ebe96daf2caf526d94d1cff3a196", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9077d27daa2ebe96daf2caf526d94d1cff3a196", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9077d27daa2ebe96daf2caf526d94d1cff3a196/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07bd6227933933df29af6cb5db4f52afc5e9043b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07bd6227933933df29af6cb5db4f52afc5e9043b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07bd6227933933df29af6cb5db4f52afc5e9043b"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "5c3973897fb92c18f8db625f732014d49fe3bfe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9077d27daa2ebe96daf2caf526d94d1cff3a196/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9077d27daa2ebe96daf2caf526d94d1cff3a196/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9077d27daa2ebe96daf2caf526d94d1cff3a196", "patch": "@@ -1,3 +1,11 @@\n+2007-10-28  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-operands.c (add_vars_for_offset): Add parameter\n+\ttelling if the var is to be treated as points-to location.\n+\t(add_vars_for_bitmap): Pass true to add_vars_for_offset.\n+\t(add_virtual_operand): Only recurse into MPTs if aliases\n+\tis from a NMT.\n+\n 2007-10-28  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-operands.c (add_vars_for_offset): Clean and speed up."}, {"sha": "feeba6ee120b8c4c5dd2c12cc4c0d87516b0e512", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9077d27daa2ebe96daf2caf526d94d1cff3a196/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9077d27daa2ebe96daf2caf526d94d1cff3a196/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=a9077d27daa2ebe96daf2caf526d94d1cff3a196", "patch": "@@ -1386,11 +1386,12 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n    This is necessary because foop only actually points to foo's first\n    member, so that is all the points-to set contains.  However, an access\n    to foop->a may be touching some single SFT if we have created some\n-   SFT's for a structure.  */\n+   SFT's for a structure.  If AS_PTO is false, just add VAR to the vops.  */\n \n static bool\n add_vars_for_offset (tree full_ref, tree var, HOST_WIDE_INT offset,\n-\t\t     HOST_WIDE_INT size, bool is_call_site, bool is_def)\n+\t\t     HOST_WIDE_INT size, bool is_call_site, bool is_def,\n+\t\t     bool as_pto)\n {\n   bool added = false;\n   subvar_t sv;\n@@ -1405,7 +1406,8 @@ add_vars_for_offset (tree full_ref, tree var, HOST_WIDE_INT offset,\n     return false;\n \n   /* For SFTs we have to consider all subvariables of the parent var.  */\n-  if (TREE_CODE (var) != STRUCT_FIELD_TAG)\n+  if (TREE_CODE (var) != STRUCT_FIELD_TAG\n+      || !as_pto)\n     {\n       /* If we do not know the full reference tree or if the access is\n \t unspecified [0, -1], we cannot prune it.  Otherwise try doing\n@@ -1465,7 +1467,7 @@ add_vars_for_bitmap (bitmap aliases, tree full_ref,\n \n       if (TREE_CODE (al) == STRUCT_FIELD_TAG)\n \t*none_added &= !add_vars_for_offset (full_ref, al, offset, size,\n-\t\t\t\t\t     is_call_site, is_def);\n+\t\t\t\t\t     is_call_site, is_def, true);\n     }\n }\n \n@@ -1546,12 +1548,15 @@ add_virtual_operand (tree var, stmt_ann_t s_ann, int flags,\n \t  /* We have to consider SFTs inside MPTs as possible pointed-to\n \t     location as well because even if aliases does not contain\n \t     a single SFT, the SFTs inside the MPT may be incomplete in\n-\t     that not all aliased subvars have to be in this MPT, too.  */\n-\t  if (TREE_CODE (al) == MEMORY_PARTITION_TAG)\n+\t     that not all aliased subvars have to be in this MPT, too.\n+\t     But only if we start with NMT aliases.  */\n+\t  if (TREE_CODE (al) == MEMORY_PARTITION_TAG\n+\t      && TREE_CODE (var) == NAME_MEMORY_TAG)\n \t    add_vars_for_bitmap (MPT_SYMBOLS (al), full_ref, offset, size,\n \t\t\t\t is_call_site, flags & opf_def, &none_added);\n \t  none_added &= !add_vars_for_offset (full_ref, al, offset, size,\n-\t\t\t\t\t      is_call_site, flags & opf_def);\n+\t\t\t\t\t      is_call_site, flags & opf_def,\n+\t\t\t\t\t      TREE_CODE (var) == NAME_MEMORY_TAG);\n \t}\n \n       if (flags & opf_def)"}]}