{"sha": "84df40f7680c388bdb85cd859021013dd5c34197", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkZjQwZjc2ODBjMzg4YmRiODVjZDg1OTAyMTAxM2RkNWMzNDE5Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:23:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:23:32Z"}, "message": "[multiple changes]\n\n2011-08-01  Geert Bosch  <bosch@adacore.com>\n\n\t* par-ch3.adb (P_Discrete_Choice_List): Improve error message for extra\n\t\",\" in choice list.\n\n2011-08-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch11.adb (Expand_N_Raise_Statement): Mark N_Raise_xxx_Error for\n\texplicit raise of a predefined exception as Comes_From_Source if the\n\toriginal N_Raise_Statement comes from source.\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads: Add comment.\n\t* sem_ch6.adb: Minor reformatting.\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Refine check for bad component size\n\tclause to avoid rejecting confirming clause when atomic/aliased present.\n\n2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Find_Direct_Name, Analyze_Expanded_Name): use Is_LHS to\n\tbetter determine whether an entity reference is a write.\n\t* sem_util.adb (Is_LHS): refine predicate to handle assignment to a\n\tsubcomponent.\n\t* lib-xref.adb (Output_References): Do no suppress a read reference at\n\tthe same location as an immediately preceeding modify-reference, to\n\thandle properly in-out actuals.\n\n2011-08-01  Tristan Gingold  <gingold@adacore.com>\n\n\t* env.c (__gnat_setenv) [VMS]: Refine previous change.\n\n2011-08-01  Quentin Ochem  <ochem@adacore.com>\n\n\t* i-cstrin.adb (New_String): Changed implementation, now uses only the\n\theap to compute the result.\n\nFrom-SVN: r177029", "tree": {"sha": "bea83af31a5e3fb5b89d4ffbdd8ec590840e1e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bea83af31a5e3fb5b89d4ffbdd8ec590840e1e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84df40f7680c388bdb85cd859021013dd5c34197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84df40f7680c388bdb85cd859021013dd5c34197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84df40f7680c388bdb85cd859021013dd5c34197", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84df40f7680c388bdb85cd859021013dd5c34197/comments", "author": null, "committer": null, "parents": [{"sha": "c7f0d2c0c5f24657874d7a4adeb504b3fe6c1f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f0d2c0c5f24657874d7a4adeb504b3fe6c1f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f0d2c0c5f24657874d7a4adeb504b3fe6c1f6f"}], "stats": {"total": 193, "additions": 161, "deletions": 32}, "files": [{"sha": "1f243eb503dd097d6b5efcd9d2be11efdd936c9f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -1,3 +1,43 @@\n+2011-08-01  Geert Bosch  <bosch@adacore.com>\n+\n+\t* par-ch3.adb (P_Discrete_Choice_List): Improve error message for extra\n+\t\",\" in choice list.\n+\n+2011-08-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch11.adb (Expand_N_Raise_Statement): Mark N_Raise_xxx_Error for\n+\texplicit raise of a predefined exception as Comes_From_Source if the\n+\toriginal N_Raise_Statement comes from source.\n+\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads: Add comment.\n+\t* sem_ch6.adb: Minor reformatting.\n+\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Refine check for bad component size\n+\tclause to avoid rejecting confirming clause when atomic/aliased present.\n+\n+2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Direct_Name, Analyze_Expanded_Name): use Is_LHS to\n+\tbetter determine whether an entity reference is a write.\n+\t* sem_util.adb (Is_LHS): refine predicate to handle assignment to a\n+\tsubcomponent.\n+\t* lib-xref.adb (Output_References): Do no suppress a read reference at\n+\tthe same location as an immediately preceeding modify-reference, to\n+\thandle properly in-out actuals.\n+\n+2011-08-01  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* env.c (__gnat_setenv) [VMS]: Refine previous change.\n+\n+2011-08-01  Quentin Ochem  <ochem@adacore.com>\n+\n+\t* i-cstrin.adb (New_String): Changed implementation, now uses only the\n+\theap to compute the result.\n+\n 2011-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* atree.ads: Minor reformatting."}, {"sha": "e83a051921b546bcb1dd515df3da089c5f2ebc06", "filename": "gcc/ada/env.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -50,7 +50,6 @@ extern \"C\" {\n #include <time.h>\n #ifdef VMS\n #include <unixio.h>\n-#include <vms/descrip.h>\n #endif\n \n #if defined (__MINGW32__)\n@@ -74,6 +73,10 @@ extern char** ppGlobalEnviron;\n #include <crt_externs.h>\n #endif\n \n+#ifdef VMS\n+#include <vms/descrip.h>\n+#endif\n+\n #include \"env.h\"\n \n void"}, {"sha": "726af2191bc252e53b434116c3be5ff30afb5a9f", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -1439,6 +1439,7 @@ package body Exp_Ch11 is\n       E     : Entity_Id;\n       Str   : String_Id;\n       H     : Node_Id;\n+      Src   : Boolean;\n \n    begin\n       --  Processing for locally handled exception (exclude reraise case)\n@@ -1510,12 +1511,12 @@ package body Exp_Ch11 is\n          return;\n       end if;\n \n-      --  Remaining processing is for the case where no string expression\n-      --  is present.\n+      --  Remaining processing is for the case where no string expression is\n+      --  present.\n \n-      --  Don't expand a raise statement that does not come from source\n-      --  if we have already had configurable run-time violations, since\n-      --  most likely it will be junk cascaded nonsense.\n+      --  Don't expand a raise statement that does not come from source if we\n+      --  have already had configurable run-time violations, since most likely\n+      --  it will be junk cascaded nonsense.\n \n       if Configurable_Run_Time_Violations > 0\n         and then not Comes_From_Source (N)\n@@ -1526,27 +1527,29 @@ package body Exp_Ch11 is\n       --  Convert explicit raise of Program_Error, Constraint_Error, and\n       --  Storage_Error into the corresponding raise (in High_Integrity_Mode\n       --  all other raises will get normal expansion and be disallowed,\n-      --  but this is also faster in all modes).\n+      --  but this is also faster in all modes). Propagate Comes_From_Source\n+      --  flag to the new node.\n \n       if Present (Name (N)) and then Nkind (Name (N)) = N_Identifier then\n+         Src := Comes_From_Source (N);\n          if Entity (Name (N)) = Standard_Constraint_Error then\n             Rewrite (N,\n-              Make_Raise_Constraint_Error (Loc,\n-                Reason => CE_Explicit_Raise));\n+              Make_Raise_Constraint_Error (Loc, Reason => CE_Explicit_Raise));\n+            Set_Comes_From_Source (N, Src);\n             Analyze (N);\n             return;\n \n          elsif Entity (Name (N)) = Standard_Program_Error then\n             Rewrite (N,\n-              Make_Raise_Program_Error (Loc,\n-                Reason => PE_Explicit_Raise));\n+              Make_Raise_Program_Error (Loc, Reason => PE_Explicit_Raise));\n+            Set_Comes_From_Source (N, Src);\n             Analyze (N);\n             return;\n \n          elsif Entity (Name (N)) = Standard_Storage_Error then\n             Rewrite (N,\n-              Make_Raise_Storage_Error (Loc,\n-                Reason => SE_Explicit_Raise));\n+              Make_Raise_Storage_Error (Loc, Reason => SE_Explicit_Raise));\n+            Set_Comes_From_Source (N, Src);\n             Analyze (N);\n             return;\n          end if;"}, {"sha": "3ecc13e643250855a46c17cf3e721fd7a64efe80", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -3447,12 +3447,28 @@ package body Freeze is\n                      --  Start of processing for Alias_Atomic_Check\n \n                      begin\n-                        --  Case where component size has no effect\n+                        --  Case where component size has no effect. First\n+                        --  check for object size of component type known\n+                        --  and a multiple of the storage unit size.\n \n                         if Known_Static_Esize (Ctyp)\n-                          and then Known_Static_RM_Size (Ctyp)\n-                          and then Esize (Ctyp) = RM_Size (Ctyp)\n-                          and then Esize (Ctyp) mod 8 = 0\n+                          and then Esize (Ctyp) mod System_Storage_Unit = 0\n+\n+                          --  OK in both packing case and component size case\n+                          --  if RM size is known and static and the same as\n+                          --  the object size.\n+\n+                          and then\n+                            ((Known_Static_RM_Size (Ctyp)\n+                               and then Esize (Ctyp) = RM_Size (Ctyp))\n+\n+                             --  Or if we have an explicit component size\n+                             --  clause and the component size and object size\n+                             --  are equal.\n+\n+                             or else\n+                                 (Has_Component_Size_Clause (E)\n+                                 and then Component_Size (E) = Esize (Ctyp)))\n                         then\n                            null;\n "}, {"sha": "ce74f4fafe4cab024780ccfed2c3242fc6296f82", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -139,8 +139,24 @@ package body Interfaces.C.Strings is\n    ----------------\n \n    function New_String (Str : String) return chars_ptr is\n+      --  It's important that this subprogram uses directly the heap to compute\n+      --  the result, and doesn't copy the string on the stack, otherwise its\n+      --  use is limited when used from tasks on large strings.\n+\n+      Result       : constant chars_ptr := Memory_Alloc (Str'Length + 1);\n+      Result_Array : char_array  (1 .. Str'Length + 1);\n+      for Result_Array'Address use To_Address (Result);\n+      pragma Import (Ada, Result_Array);\n+\n+      Count : size_t;\n    begin\n-      return New_Char_Array (To_C (Str));\n+      To_C\n+        (Item       => Str,\n+         Target     => Result_Array,\n+         Count      => Count,\n+         Append_Nul => True);\n+\n+      return Result;\n    end New_String;\n \n    ----------"}, {"sha": "c0471407a347d4ab5304d260479780c08eceaf73", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -1377,6 +1377,9 @@ package body Lib.Xref is\n          Ctyp : Character;\n          --  Entity type character\n \n+         Prevt : Character;\n+         --  reference kind of previous reference\n+\n          Tref : Entity_Id;\n          --  Type reference\n \n@@ -1519,6 +1522,7 @@ package body Lib.Xref is\n          Curdef := No_Location;\n          Curru  := No_Unit;\n          Crloc  := No_Location;\n+         Prevt  := 'm';\n \n          --  Loop to output references\n \n@@ -2193,12 +2197,17 @@ package body Lib.Xref is\n                      Crloc := No_Location;\n                   end if;\n \n-                  --  Output the reference\n+                  --  Output the reference if it is not as the same location\n+                  --  as the previous one, or it is a read-reference that\n+                  --  indicates that the entity is an in-out actual in a call.\n \n                   if XE.Loc /= No_Location\n-                     and then XE.Loc /= Crloc\n+                    and then\n+                      (XE.Loc /= Crloc\n+                         or else (Prevt = 'm' and then  XE.Typ = 'r'))\n                   then\n                      Crloc := XE.Loc;\n+                     Prevt := XE.Typ;\n \n                      --  Start continuation if line full, else blank\n "}, {"sha": "4ae03fd213b845e94352583c16391965f99b18cd", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -3714,13 +3714,23 @@ package body Ch3 is\n          end if;\n \n          if Token = Tok_Comma then\n-            Error_Msg_SC -- CODEFIX\n-              (\"\"\",\"\" should be \"\"'|\"\"\");\n+            Scan; -- past comma\n+\n+            if Token = Tok_Vertical_Bar then\n+               Error_Msg_SP -- CODEFIX\n+                 (\"|extra \"\",\"\" ignored\");\n+               Scan; -- past |\n+\n+            else\n+               Error_Msg_SP -- CODEFIX\n+                 (\"\"\",\"\" should be \"\"'|\"\"\");\n+            end if;\n+\n          else\n             exit when Token /= Tok_Vertical_Bar;\n+            Scan; -- past |\n          end if;\n \n-         Scan; -- past | or comma\n       end loop;\n \n       return Choices;"}, {"sha": "9b328fa4f2ec7c6f4913af69bdd3a47475d28079", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -1072,12 +1072,13 @@ package body Sem_Ch6 is\n    procedure Analyze_Parameterized_Expression (N : Node_Id) is\n       Loc      : constant Source_Ptr := Sloc (N);\n       LocX     : constant Source_Ptr := Sloc (Expression (N));\n-      Def_Id   : constant Entity_Id := Defining_Entity (Specification (N));\n-      Prev     : constant Entity_Id := Current_Entity_In_Scope (Def_Id);\n+      Def_Id   : constant Entity_Id  := Defining_Entity (Specification (N));\n+      New_Body : Node_Id;\n+\n+      Prev : constant Entity_Id := Current_Entity_In_Scope (Def_Id);\n       --  If the expression is a completion, Prev is the entity whose\n       --  declaration is completed.\n \n-      New_Body : Node_Id;\n    begin\n       --  This is one of the occasions on which we transform the tree during\n       --  semantic analysis. Transform the parameterized expression into an\n@@ -1096,7 +1097,6 @@ package body Sem_Ch6 is\n       if Present (Prev)\n         and then Ekind (Prev) = E_Generic_Function\n       then\n-\n          --  If the expression completes a generic subprogram, we must create\n          --  a separate node for the body, because at instantiation the\n          --  original node of the generic copy must be a generic subprogram"}, {"sha": "6c78a5b7f54c9b5a2ba82b3cf9e6905e47dfca84", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -4574,10 +4574,21 @@ package body Sem_Ch8 is\n             --\n             --    The Is_Actual_Parameter routine takes care of one of these\n             --    cases but there are others probably ???\n+            --\n+            --    If the entity is the LHS of an assignment, and is a variable\n+            --    (rather than a package prefix),  we can mark it as a\n+            --    modification right away, to avoid duplicate references.\n \n             else\n                if not Is_Actual_Parameter then\n-                  Generate_Reference (E, N);\n+                  if Is_LHS (N)\n+                    and then Ekind (E) /= E_Package\n+                    and then Ekind (E) /= E_Generic_Package\n+                  then\n+                     Generate_Reference (E, N, 'm');\n+                  else\n+                     Generate_Reference (E, N);\n+                  end if;\n                end if;\n \n                Check_Nested_Access (E);\n@@ -4980,7 +4991,12 @@ package body Sem_Ch8 is\n          Set_Entity (N, Id);\n       else\n          Set_Entity_Or_Discriminal (N, Id);\n-         Generate_Reference (Id, N);\n+\n+         if Is_LHS (N) then\n+            Generate_Reference (Id, N, 'm');\n+         else\n+            Generate_Reference (Id, N);\n+         end if;\n       end if;\n \n       if Is_Type (Id) then"}, {"sha": "a5dac143aa84e945ec442f02e0e9f83d7356efac", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -6663,8 +6663,17 @@ package body Sem_Util is\n    function Is_LHS (N : Node_Id) return Boolean is\n       P : constant Node_Id := Parent (N);\n    begin\n-      return Nkind (P) = N_Assignment_Statement\n-        and then Name (P) = N;\n+      if Nkind (P) = N_Assignment_Statement then\n+         return Name (P) = N;\n+\n+      elsif\n+        Nkind_In (P, N_Indexed_Component, N_Selected_Component, N_Slice)\n+      then\n+         return N = Prefix (P) and then Is_LHS (P);\n+\n+      else\n+         return False;\n+      end if;\n    end Is_LHS;\n \n    ----------------------------"}, {"sha": "57129f99b6e739171509ec3bc753aa53860e4cf9", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84df40f7680c388bdb85cd859021013dd5c34197/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=84df40f7680c388bdb85cd859021013dd5c34197", "patch": "@@ -7449,6 +7449,13 @@ package Sinfo is\n \n       --  N_Has_Etype, N_Has_Chars\n \n+      --  Note: of course N_Error does not really have Etype or Chars fields,\n+      --  and any attempt to access these fields in N_Error will cause an\n+      --  error, but historically this always has been positioned so that an\n+      --  \"in N_Has_Chars\" or \"in N_Has_Etype\" test yields true for N_Error.\n+      --  Most likely this makes coding easier somewhere but still seems\n+      --  undesirable. To be investigated some time ???\n+\n       N_Error,\n \n       --  N_Entity, N_Has_Etype, N_Has_Chars"}]}