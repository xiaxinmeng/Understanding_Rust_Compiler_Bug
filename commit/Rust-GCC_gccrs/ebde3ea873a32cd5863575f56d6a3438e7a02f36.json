{"sha": "ebde3ea873a32cd5863575f56d6a3438e7a02f36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkZTNlYTg3M2EzMmNkNTg2MzU3NWY1NmQ2YTM0MzhlN2EwMmYzNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-07-11T18:26:43Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-11T18:26:43Z"}, "message": "* gcc.c-torture/execute/20020720-1.x: Remove.\n\nFrom-SVN: r101893", "tree": {"sha": "914e418e9a390161b0a98d4f83488118180df4d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/914e418e9a390161b0a98d4f83488118180df4d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebde3ea873a32cd5863575f56d6a3438e7a02f36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebde3ea873a32cd5863575f56d6a3438e7a02f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebde3ea873a32cd5863575f56d6a3438e7a02f36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebde3ea873a32cd5863575f56d6a3438e7a02f36/comments", "author": null, "committer": null, "parents": [{"sha": "7ddcf3d26f2966c5fdfccb271c9fe7f535509186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ddcf3d26f2966c5fdfccb271c9fe7f535509186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ddcf3d26f2966c5fdfccb271c9fe7f535509186"}], "stats": {"total": 43, "additions": 4, "deletions": 39}, "files": [{"sha": "174c6793b13a3461bb07e2d8394fe2231c3ee1e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebde3ea873a32cd5863575f56d6a3438e7a02f36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebde3ea873a32cd5863575f56d6a3438e7a02f36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebde3ea873a32cd5863575f56d6a3438e7a02f36", "patch": "@@ -1,3 +1,7 @@\n+2005-07-11  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/20020720-1.x: Remove.\n+\n 2005-07-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.fortran-torture/execute/forall_7.f90: New test."}, {"sha": "8d14adc2f26e87c7f981444c3fe9ecb48f778b65", "filename": "gcc/testsuite/gcc.c-torture/execute/20020720-1.x", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ddcf3d26f2966c5fdfccb271c9fe7f535509186/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020720-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ddcf3d26f2966c5fdfccb271c9fe7f535509186/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020720-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020720-1.x?ref=7ddcf3d26f2966c5fdfccb271c9fe7f535509186", "patch": "@@ -1,39 +0,0 @@\n-# The following targets fail 20020720-1.c for several reasons:\n-# (1) They implement floating point instructions via software, or\n-# (2) The \"abs(x) < 0.0\" comparison is split up in too many intermediate\n-#     insns for combine to handle -- it can handle max three insns\n-#     simultaneously.  For example, for RISCy machines it is common that 1\n-#     insn performs abs, 1 insn loads 0.0, 1 insn sets CCmode flags based\n-#     upon the FP comparison, and a 4th insn makes a conditional branch\n-#     based upon the appropriate bits in the flags.  On the other hand, if\n-#     for example the comparison insn takes 0.0 as an operand, the\n-#     combiner is able to see all intermediate instructions simultaneously\n-#     and can make the optimization.\n-\n-# Don't XFAIL at -O0, that should never fail.\n-if { [istarget \"sparc*-*-*\"] } {\n-    set torture_eval_before_compile {\n-        global compiler_conditional_xfail_data\n-        set compiler_conditional_xfail_data {\n-            \"PR opt/10348\" \\\n-            { \"*-*-*\" } \\\n-            { \"-fpic\" \"-fPIC\" } \\\n-            { \"-O0\" }\n-        }\n-    }\n-    return 0\n-}\n-\n-set torture_eval_before_compile {\n-    global compiler_conditional_xfail_data\n-    set compiler_conditional_xfail_data {\n-        \"This test fails to optimize completely on certain platforms.\" \\\n-        { \"xtensa-*-*\" \"sh-*-*\" \"arm*-*-*\" \"strongarm*-*-*\" \"xscale*-*-*\" \\\n-\t  \"h8300*-*-*\" \"frv-*-*\" \"powerpc*-*-*\" \"rs6000-*-*\" \"bfin*-*\" \\\n-\t  \"m32r*-*-*\" \"avr-*-*\"} \\\n-        { \"*\" } \\\n-        { \"-O0\" }\n-    }\n-}\n-\n-return 0"}]}