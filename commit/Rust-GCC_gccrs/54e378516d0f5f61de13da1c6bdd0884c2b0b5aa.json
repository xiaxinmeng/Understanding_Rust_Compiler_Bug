{"sha": "54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlMzc4NTE2ZDBmNWY2MWRlMTNkYTFjNmJkZDA4ODRjMmIwYjVhYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2015-07-02T12:04:27Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2015-07-02T12:04:27Z"}, "message": "Regenerate .pot files.\n\ngcc/po:\n\t* gcc.pot: Regenerate.\n\nlibcpp/po:\n\t* cpplib.pot: Regenerate.\n\nFrom-SVN: r225313", "tree": {"sha": "c51ea90d5c6acb30ce78dea4a984ce1b629e47f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c51ea90d5c6acb30ce78dea4a984ce1b629e47f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f9a2b4e884acb7db0e9acb3c13b0adfbce65725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9a2b4e884acb7db0e9acb3c13b0adfbce65725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9a2b4e884acb7db0e9acb3c13b0adfbce65725"}], "stats": {"total": 21092, "additions": 11074, "deletions": 10018}, "files": [{"sha": "a566e89b24979c614c9dc62a95dcdf79faeba71f", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "patch": "@@ -1,3 +1,7 @@\n+2015-07-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2015-06-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "5042c71183a03d9adef64704456dceb883bc7549", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 10893, "deletions": 9849, "changes": 20742, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=54e378516d0f5f61de13da1c6bdd0884c2b0b5aa"}, {"sha": "513f71d5c5e7fe267571dece2de8b17abf1def9d", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "patch": "@@ -1,3 +1,7 @@\n+2015-07-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2015-05-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "2086c27fda5eb63038d447f9c2ef4a0030e5040e", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 173, "deletions": 169, "changes": 342, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2015-04-13 20:08+0000\\n\"\n+\"POT-Creation-Date: 2015-07-02 12:02+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -37,7 +37,7 @@ msgid \"character 0x%lx is not in the basic source character set\\n\"\n msgstr \"\"\n \n #: charset.c:798\n-#: charset.c:1452\n+#: charset.c:1453\n msgid \"converting to execution character set\"\n msgstr \"\"\n \n@@ -74,7 +74,7 @@ msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n #: charset.c:1064\n-#: lex.c:1218\n+#: lex.c:1236\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -89,7 +89,7 @@ msgid \"universal character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n #: charset.c:1110\n-#: charset.c:1682\n+#: charset.c:1684\n msgid \"converting UCN to source character set\"\n msgstr \"\"\n \n@@ -136,20 +136,20 @@ msgstr \"\"\n msgid \"converting escape sequence to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1517\n-#: charset.c:1581\n+#: charset.c:1518\n+#: charset.c:1582\n msgid \"character constant too long for its type\"\n msgstr \"\"\n \n-#: charset.c:1520\n+#: charset.c:1521\n msgid \"multi-character character constant\"\n msgstr \"\"\n \n-#: charset.c:1620\n+#: charset.c:1622\n msgid \"empty character constant\"\n msgstr \"\"\n \n-#: charset.c:1729\n+#: charset.c:1731\n #, c-format\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n@@ -267,159 +267,159 @@ msgid \"line number out of range\"\n msgstr \"\"\n \n #: directives.c:960\n-#: directives.c:1040\n+#: directives.c:1041\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:1000\n+#: directives.c:1001\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1095\n-#: directives.c:1097\n-#: directives.c:1099\n-#: directives.c:1685\n+#: directives.c:1102\n+#: directives.c:1104\n+#: directives.c:1106\n+#: directives.c:1692\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1123\n+#: directives.c:1130\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1186\n+#: directives.c:1193\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1195\n+#: directives.c:1202\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1213\n+#: directives.c:1220\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1216\n+#: directives.c:1223\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1219\n+#: directives.c:1226\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1249\n+#: directives.c:1256\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1466\n+#: directives.c:1473\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1489\n+#: directives.c:1496\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1544\n+#: directives.c:1551\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.c:1599\n+#: directives.c:1606\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1608\n+#: directives.c:1615\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1627\n+#: directives.c:1634\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1652\n+#: directives.c:1659\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1656\n+#: directives.c:1663\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1680\n+#: directives.c:1687\n #, c-format\n msgid \"invalid \\\"#pragma GCC %s\\\" directive\"\n msgstr \"\"\n \n-#: directives.c:1874\n+#: directives.c:1881\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1995\n+#: directives.c:2002\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:2000\n+#: directives.c:2007\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:2002\n-#: directives.c:2035\n+#: directives.c:2009\n+#: directives.c:2042\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:2028\n+#: directives.c:2035\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:2033\n+#: directives.c:2040\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:2064\n+#: directives.c:2071\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:2144\n+#: directives.c:2151\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:2159\n+#: directives.c:2166\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:2179\n+#: directives.c:2186\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:2206\n+#: directives.c:2213\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:2209\n+#: directives.c:2216\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2295\n+#: directives.c:2302\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2587\n+#: directives.c:2594\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:221\n-#: lex.c:2433\n+#: lex.c:2459\n #: traditional.c:167\n msgid \"unterminated comment\"\n msgstr \"\"\n@@ -433,175 +433,175 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:512\n-#: expr.c:629\n+#: expr.c:517\n+#: expr.c:634\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:537\n+#: expr.c:542\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:550\n+#: expr.c:555\n msgid \"use of C++11 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:553\n+#: expr.c:558\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:597\n+#: expr.c:602\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:608\n-#: expr.c:668\n+#: expr.c:613\n+#: expr.c:673\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:616\n+#: expr.c:621\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:622\n+#: expr.c:627\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:633\n+#: expr.c:638\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:651\n+#: expr.c:656\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:676\n+#: expr.c:681\n msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:677\n+#: expr.c:682\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:693\n+#: expr.c:698\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:699\n+#: expr.c:704\n msgid \"binary constants are a C++14 feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:701\n+#: expr.c:706\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:796\n+#: expr.c:801\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:827\n+#: expr.c:832\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:922\n+#: expr.c:927\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:929\n+#: expr.c:934\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:937\n+#: expr.c:942\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:947\n+#: expr.c:952\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:1007\n+#: expr.c:1012\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1012\n+#: expr.c:1017\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1018\n+#: expr.c:1023\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1070\n+#: expr.c:1076\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:1083\n+#: expr.c:1089\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:1086\n+#: expr.c:1092\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1331\n+#: expr.c:1338\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1351\n+#: expr.c:1358\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1452\n+#: expr.c:1459\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1481\n+#: expr.c:1488\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1491\n+#: expr.c:1498\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1496\n+#: expr.c:1503\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1528\n+#: expr.c:1535\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1533\n+#: expr.c:1540\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1792\n+#: expr.c:1799\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1890\n+#: expr.c:1897\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:2026\n+#: expr.c:2033\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n-#: expr.c:2123\n+#: expr.c:2130\n msgid \"operator \\\"__has_include__\\\" requires a header string\"\n msgstr \"\"\n \n-#: expr.c:2139\n+#: expr.c:2146\n msgid \"missing ')' after \\\"__has_include__\\\"\"\n msgstr \"\"\n \n@@ -641,322 +641,326 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:546\n+#: init.c:549\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:550\n+#: init.c:553\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:557\n+#: init.c:560\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:560\n+#: init.c:563\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:564\n+#: init.c:567\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:568\n+#: init.c:571\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:573\n+#: init.c:576\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:577\n+#: init.c:580\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:1011\n+#: lex.c:1029\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:1016\n+#: lex.c:1034\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:1032\n+#: lex.c:1050\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:1040\n+#: lex.c:1058\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:1089\n+#: lex.c:1107\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:1147\n+#: lex.c:1165\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:1156\n+#: lex.c:1174\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:1193\n+#: lex.c:1211\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:1196\n+#: lex.c:1214\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:1265\n-#: lex.c:1354\n+#: lex.c:1283\n+#: lex.c:1372\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:1275\n-#: lex.c:1364\n+#: lex.c:1293\n+#: lex.c:1382\n msgid \"__VA_ARGS__ can only appear in the expansion of a C++11 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1279\n-#: lex.c:1368\n+#: lex.c:1297\n+#: lex.c:1386\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1286\n-#: lex.c:1375\n+#: lex.c:1304\n+#: lex.c:1393\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1665\n+#: lex.c:1683\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1669\n+#: lex.c:1687\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1673\n+#: lex.c:1691\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1722\n-#: lex.c:1744\n+#: lex.c:1740\n+#: lex.c:1762\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1765\n-#: lex.c:1894\n+#: lex.c:1783\n+#: lex.c:1913\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.c:1876\n+#: lex.c:1895\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:1879\n+#: lex.c:1898\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2447\n-#: lex.c:2481\n+#: lex.c:1931\n+msgid \"C++11 requires a space between string literal and macro\"\n+msgstr \"\"\n+\n+#: lex.c:2473\n+#: lex.c:2507\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2449\n-#: lex.c:2460\n-#: lex.c:2483\n+#: lex.c:2475\n+#: lex.c:2486\n+#: lex.c:2509\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2458\n+#: lex.c:2484\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.c:2489\n+#: lex.c:2515\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:2833\n+#: lex.c:2859\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: macro.c:200\n+#: macro.c:202\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:238\n-#: macro.c:470\n+#: macro.c:240\n+#: macro.c:472\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:245\n-#: macro.c:342\n+#: macro.c:247\n+#: macro.c:344\n #, c-format\n msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n msgstr \"\"\n \n-#: macro.c:276\n+#: macro.c:278\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:377\n+#: macro.c:379\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:393\n+#: macro.c:395\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:581\n+#: macro.c:583\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:643\n+#: macro.c:645\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:767\n+#: macro.c:769\n msgid \"\"\n \"ISO C++11 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:771\n+#: macro.c:773\n msgid \"\"\n \"ISO C99 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:778\n+#: macro.c:780\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:783\n+#: macro.c:785\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:977\n+#: macro.c:979\n #: traditional.c:819\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1128\n+#: macro.c:1130\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1814\n+#: macro.c:1816\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C+\"\n \"+98\"\n msgstr \"\"\n \n-#: macro.c:1822\n-#: macro.c:1831\n+#: macro.c:1824\n+#: macro.c:1833\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C90\"\n msgstr \"\"\n \n-#: macro.c:2800\n+#: macro.c:2802\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:2849\n+#: macro.c:2851\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2857\n+#: macro.c:2859\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:2875\n+#: macro.c:2877\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:2896\n+#: macro.c:2898\n msgid \"anonymous variadic macros were introduced in C++11\"\n msgstr \"\"\n \n-#: macro.c:2900\n-#: macro.c:2905\n+#: macro.c:2902\n+#: macro.c:2907\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:2912\n+#: macro.c:2914\n msgid \"ISO C++ does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:2915\n+#: macro.c:2917\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:2925\n+#: macro.c:2927\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2976\n+#: macro.c:2978\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:3013\n+#: macro.c:3015\n msgid \"ISO C++11 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3016\n+#: macro.c:3018\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3041\n+#: macro.c:3043\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3075\n+#: macro.c:3077\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3236\n+#: macro.c:3238\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3241\n+#: macro.c:3243\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3302\n+#: macro.c:3304\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:3329\n+#: macro.c:3331\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\""}]}