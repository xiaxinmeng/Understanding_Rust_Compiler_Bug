{"sha": "6732c4035d54dbc543e067aa1886c88939b0fed5", "node_id": "C_kwDOANBUbNoAKDY3MzJjNDAzNWQ1NGRiYzU0M2UwNjdhYTE4ODZjODg5MzliMGZlZDU", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2021-08-08T14:34:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-01T06:13:36Z"}, "message": "[Ada] Spurious range checks on aggregate with non-static bounds\n\ngcc/ada/\n\n\t* exp_aggr.adb (Must_Slide): If the aggregate only contains an\n\tothers_clause no sliding id involved. Otherwise sliding is\n\trequired if any bound of the aggregate or the context subtype is\n\tnon-static.", "tree": {"sha": "d4f0932380dd5a04a5f2e9d9f34fa93ce8637963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4f0932380dd5a04a5f2e9d9f34fa93ce8637963"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6732c4035d54dbc543e067aa1886c88939b0fed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6732c4035d54dbc543e067aa1886c88939b0fed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6732c4035d54dbc543e067aa1886c88939b0fed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6732c4035d54dbc543e067aa1886c88939b0fed5/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e20570d9076d8792db2c22eb12261c47e161ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e20570d9076d8792db2c22eb12261c47e161ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e20570d9076d8792db2c22eb12261c47e161ab0"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "461e4faac203915525cde65e7cebea349b2f39c9", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6732c4035d54dbc543e067aa1886c88939b0fed5/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6732c4035d54dbc543e067aa1886c88939b0fed5/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6732c4035d54dbc543e067aa1886c88939b0fed5", "patch": "@@ -124,7 +124,8 @@ package body Exp_Aggr is\n    --  constants that are done in place.\n \n    function Must_Slide\n-     (Obj_Type : Entity_Id;\n+     (Aggr     : Node_Id;\n+      Obj_Type : Entity_Id;\n       Typ      : Entity_Id) return Boolean;\n    --  A static array aggregate in an object declaration can in most cases be\n    --  expanded in place. The one exception is when the aggregate is given\n@@ -1776,7 +1777,7 @@ package body Exp_Aggr is\n                if Nkind (Parent (N)) = N_Assignment_Statement\n                  and then Is_Array_Type (Comp_Typ)\n                  and then Present (Component_Associations (Expr_Q))\n-                 and then Must_Slide (Comp_Typ, Etype (Expr_Q))\n+                 and then Must_Slide (N, Comp_Typ, Etype (Expr_Q))\n                then\n                   Set_Expansion_Delayed (Expr_Q, False);\n                   Set_Analyzed (Expr_Q, False);\n@@ -6855,7 +6856,7 @@ package body Exp_Aggr is\n         and then Parent_Kind = N_Object_Declaration\n         and then Present (Expression (Parent_Node))\n         and then not\n-          Must_Slide (Etype (Defining_Identifier (Parent_Node)), Typ)\n+          Must_Slide (N, Etype (Defining_Identifier (Parent_Node)), Typ)\n         and then not Is_Bit_Packed_Array (Typ)\n       then\n          In_Place_Assign_OK_For_Declaration := True;\n@@ -9616,13 +9617,16 @@ package body Exp_Aggr is\n    ----------------\n \n    function Must_Slide\n-     (Obj_Type : Entity_Id;\n+     (Aggr     : Node_Id;\n+      Obj_Type : Entity_Id;\n       Typ      : Entity_Id) return Boolean\n    is\n    begin\n       --  No sliding if the type of the object is not established yet, if it is\n       --  an unconstrained type whose actual subtype comes from the aggregate,\n-      --  or if the two types are identical.\n+      --  or if the two types are identical. If the aggregate contains only\n+      --  an Others_Clause it gets its type from the context and no sliding\n+      --  is involved either.\n \n       if not Is_Array_Type (Obj_Type) then\n          return False;\n@@ -9633,8 +9637,13 @@ package body Exp_Aggr is\n       elsif Typ = Obj_Type then\n          return False;\n \n+      elsif Is_Others_Aggregate (Aggr) then\n+         return False;\n+\n       else\n          --  Sliding can only occur along the first dimension\n+         --  If any the bounds of non-static sliding is required\n+         --  to force potential range checks.\n \n          declare\n             Bounds1 : constant Range_Nodes :=\n@@ -9648,7 +9657,8 @@ package body Exp_Aggr is\n                not Is_OK_Static_Expression (Bounds1.Last) or else\n                not Is_OK_Static_Expression (Bounds2.Last)\n             then\n-               return False;\n+               return True;\n+\n             else\n                return Expr_Value (Bounds1.First) /= Expr_Value (Bounds2.First)\n                         or else"}]}