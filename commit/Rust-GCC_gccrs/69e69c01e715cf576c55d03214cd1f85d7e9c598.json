{"sha": "69e69c01e715cf576c55d03214cd1f85d7e9c598", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllNjljMDFlNzE1Y2Y1NzZjNTVkMDMyMTRjZDFmODVkN2U5YzU5OA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-09-22T16:36:06Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-09-22T16:36:06Z"}, "message": "[Testsuite] Add tests of reductions using whole-vector-shifts (ior)\n\n\t* gcc.dg/vect/vect-reduc-or_1.c: New test.\n\t* gcc.dg/vect/vect-reduc-or_2.c: New test.\n\nFrom-SVN: r215475", "tree": {"sha": "3bf46b55bc0f7ac109daeae984ea585783036a61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf46b55bc0f7ac109daeae984ea585783036a61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69e69c01e715cf576c55d03214cd1f85d7e9c598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e69c01e715cf576c55d03214cd1f85d7e9c598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e69c01e715cf576c55d03214cd1f85d7e9c598", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e69c01e715cf576c55d03214cd1f85d7e9c598/comments", "author": null, "committer": null, "parents": [{"sha": "2eac08538adf450dafec3b4b092362a7b60d8b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eac08538adf450dafec3b4b092362a7b60d8b44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eac08538adf450dafec3b4b092362a7b60d8b44"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "efbb084ddb7cc0a382b98bf98d621346dfa3d350", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e69c01e715cf576c55d03214cd1f85d7e9c598/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e69c01e715cf576c55d03214cd1f85d7e9c598/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69e69c01e715cf576c55d03214cd1f85d7e9c598", "patch": "@@ -1,3 +1,8 @@\n+2014-09-22  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.dg/vect/vect-reduc-or_1.c: New test.\n+\t* gcc.dg/vect/vect-reduc-or_2.c: Likewise.\n+\n 2014-09-22  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* lib/target-supports.exp (check_effective_target_whole_vector_shift):"}, {"sha": "4e1a8577ce21aad539fca7cf07700b99575dfab0", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-or_1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e69c01e715cf576c55d03214cd1f85d7e9c598/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-or_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e69c01e715cf576c55d03214cd1f85d7e9c598/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-or_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-or_1.c?ref=69e69c01e715cf576c55d03214cd1f85d7e9c598", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-require-effective-target whole_vector_shift } */\n+\n+/* Write a reduction loop to be reduced using vector shifts.  */\n+\n+extern void abort(void);\n+\n+unsigned char in[16] __attribute__((__aligned__(16)));\n+\n+int\n+main (unsigned char argc, char **argv)\n+{\n+  unsigned char i = 0;\n+  unsigned char sum = 1;\n+\n+  for (i = 0; i < 16; i++)\n+    in[i] = (i + i + 1) & 0xfd;\n+\n+  /* Prevent constant propagation of the entire loop below.  */\n+  asm volatile (\"\" : : : \"memory\");\n+\n+  for (i = 0; i < 16; i++)\n+    sum |= in[i];\n+\n+  if (sum != 29)\n+    {\n+      __builtin_printf(\"Failed %d\\n\", sum);\n+      abort();\n+    }\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Reduce using vector shifts\" \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "e25467e59221adc09cbe0bb7548842902a4bf6da", "filename": "gcc/testsuite/gcc.dg/vect/vect-reduc-or_2.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e69c01e715cf576c55d03214cd1f85d7e9c598/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-or_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e69c01e715cf576c55d03214cd1f85d7e9c598/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-or_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-reduc-or_2.c?ref=69e69c01e715cf576c55d03214cd1f85d7e9c598", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-require-effective-target whole_vector_shift } */\n+\n+/* Write a reduction loop to be reduced using vector shifts and folded.  */\n+\n+extern void abort(void);\n+\n+int\n+main (unsigned char argc, char **argv)\n+{\n+  unsigned char in[16] __attribute__((aligned(16)));\n+  unsigned char i = 0;\n+  unsigned char sum = 1;\n+\n+  for (i = 0; i < 16; i++)\n+    in[i] = (i + i + 1) & 0xfd;\n+\n+  for (i = 0; i < 16; i++)\n+    sum |= in[i];\n+\n+  if (sum != 29)\n+    {\n+      __builtin_printf(\"Failed %d\\n\", sum);\n+      abort();\n+    }\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Reduce using vector shifts\" \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}]}