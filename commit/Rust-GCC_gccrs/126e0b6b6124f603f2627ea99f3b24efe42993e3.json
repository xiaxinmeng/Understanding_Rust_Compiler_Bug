{"sha": "126e0b6b6124f603f2627ea99f3b24efe42993e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI2ZTBiNmI2MTI0ZjYwM2YyNjI3ZWE5OWYzYjI0ZWZlNDI5OTNlMw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-11-09T04:32:08Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-11-09T04:32:08Z"}, "message": "Configury changes for obstack optimization\n\n\t* configure.ac: Check size of size_t.\n\t* configure: Regenerate.\n\nFrom-SVN: r229990", "tree": {"sha": "65bf1dc69bb09c998e2a2e820d57c08b54ba56d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65bf1dc69bb09c998e2a2e820d57c08b54ba56d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/126e0b6b6124f603f2627ea99f3b24efe42993e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126e0b6b6124f603f2627ea99f3b24efe42993e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/126e0b6b6124f603f2627ea99f3b24efe42993e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/126e0b6b6124f603f2627ea99f3b24efe42993e3/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a186d523f2c78682594c9b101fb0b2e370f59334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a186d523f2c78682594c9b101fb0b2e370f59334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a186d523f2c78682594c9b101fb0b2e370f59334"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "d0b1e8bcf7ba575df6ad91c076b42974cc5201f7", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e0b6b6124f603f2627ea99f3b24efe42993e3/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e0b6b6124f603f2627ea99f3b24efe42993e3/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=126e0b6b6124f603f2627ea99f3b24efe42993e3", "patch": "@@ -1,3 +1,8 @@\n+2015-11-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac: Check size of size_t.\n+\t* configure: Regenerate.\n+\n 2015-11-09  Alan Modra  <amodra@gmail.com>\n \n \t* obstack.c (_obstack_newchunk): Silence -Wc++compat warning."}, {"sha": "bde78ffd25db650445a3a0bbe0b03e79efb786cb", "filename": "libiberty/configure", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e0b6b6124f603f2627ea99f3b24efe42993e3/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e0b6b6124f603f2627ea99f3b24efe42993e3/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=126e0b6b6124f603f2627ea99f3b24efe42993e3", "patch": "@@ -4389,6 +4389,12 @@ fi\n \n ac_c_preproc_warn_flag=yes\n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n ac_libiberty_warn_cflags=\n save_CFLAGS=\"$CFLAGS\"\n for real_option in -W -Wall -Wwrite-strings -Wc++-compat \\\n@@ -4434,6 +4440,18 @@ $as_echo \"$ac_res\" >&6; }\n fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n # Do the check with the no- prefix removed from the warning options\n # since gcc silently accepts any -Wno-* option on purpose\n@@ -4471,6 +4489,12 @@ if test $acx_cv_prog_cc_pedantic_ = yes; then :\n fi\n \n fi\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n \n \n if test \"x$CC\" != xcc; then\n@@ -5381,6 +5405,40 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+# The cast to long int works around a bug in the HP C Compiler\n+# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n+# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n+# This bug is HP SR number 8606223364.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of size_t\" >&5\n+$as_echo_n \"checking size of size_t... \" >&6; }\n+if test \"${ac_cv_sizeof_size_t+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (size_t))\" \"ac_cv_sizeof_size_t\"        \"$ac_includes_default\"; then :\n+\n+else\n+  if test \"$ac_cv_type_size_t\" = yes; then\n+     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+{ as_fn_set_status 77\n+as_fn_error \"cannot compute sizeof (size_t)\n+See \\`config.log' for more details.\" \"$LINENO\" 5; }; }\n+   else\n+     ac_cv_sizeof_size_t=0\n+   fi\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_size_t\" >&5\n+$as_echo \"$ac_cv_sizeof_size_t\" >&6; }\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SIZEOF_SIZE_T $ac_cv_sizeof_size_t\n+_ACEOF\n+\n+\n \n # Check for presense of long long\n ac_fn_c_check_type \"$LINENO\" \"long long\" \"ac_cv_type_long_long\" \"$ac_includes_default\""}, {"sha": "9d3f2988d5d240d95a2bdc3829e8837efcc6b898", "filename": "libiberty/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/126e0b6b6124f603f2627ea99f3b24efe42993e3/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/126e0b6b6124f603f2627ea99f3b24efe42993e3/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=126e0b6b6124f603f2627ea99f3b24efe42993e3", "patch": "@@ -276,6 +276,7 @@ libiberty_AC_DECLARE_ERRNO\n # Determine sizes of some types.\n AC_CHECK_SIZEOF([int])\n AC_CHECK_SIZEOF([long])\n+AC_CHECK_SIZEOF([size_t])\n \n # Check for presense of long long\n AC_CHECK_TYPE([long long],"}]}