{"sha": "d763bb10051498ab4bafe220b644f2aa414de381", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc2M2JiMTAwNTE0OThhYjRiYWZlMjIwYjY0NGYyYWE0MTRkZTM4MQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-05-31T16:40:09Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-05-31T16:40:09Z"}, "message": "[multiple changes]\n\n2005-05-31  Andrew pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/20931\n        * g++.dg/opt/pr20931.C: New test.\n\n2005-05-31  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/20931\n        PR middle-end/20946\n        * fold-const.c (fold_checksum_tree): Copy types also if\n        TYPE_CONTAINS_PLACEHOLDER_INTERNAL is set.\n        Don't call fold_checksum_tree for TREE_LIST's TREE_CHAIN\n        first.\n        Tail recurse TREE_LIST's TREE_CHAIN.\n\nFrom-SVN: r100397", "tree": {"sha": "841cd73dd378c353190d93fd81e931ed2544fbee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/841cd73dd378c353190d93fd81e931ed2544fbee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d763bb10051498ab4bafe220b644f2aa414de381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d763bb10051498ab4bafe220b644f2aa414de381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d763bb10051498ab4bafe220b644f2aa414de381", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d763bb10051498ab4bafe220b644f2aa414de381/comments", "author": null, "committer": null, "parents": [{"sha": "fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb03baf21043a29fe3ca5bc66b06eb2b41ea2365"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "f486794d600667bfbf1a4397908758f52b8af6f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d763bb10051498ab4bafe220b644f2aa414de381", "patch": "@@ -1,3 +1,13 @@\n+2005-05-31  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/20931\n+\tPR middle-end/20946\n+\t* fold-const.c (fold_checksum_tree): Copy types also if\n+\tTYPE_CONTAINS_PLACEHOLDER_INTERNAL is set.\n+\tDon't call fold_checksum_tree for TREE_LIST's TREE_CHAIN\n+\tfirst.\n+\tTail recurse TREE_LIST's TREE_CHAIN.\n+\n 2005-05-31  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR tree-opt/21732"}, {"sha": "97caf1515a293faeadd28f5c694d939f8633a179", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=d763bb10051498ab4bafe220b644f2aa414de381", "patch": "@@ -10419,6 +10419,8 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n   enum tree_code code;\n   char buf[sizeof (struct tree_decl)];\n   int i, len;\n+  \n+recursive_label:\n \n   gcc_assert ((sizeof (struct tree_exp) + 5 * sizeof (tree)\n \t       <= sizeof (struct tree_decl))\n@@ -10440,11 +10442,13 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n     }\n   else if (TREE_CODE_CLASS (code) == tcc_type\n \t   && (TYPE_POINTER_TO (expr) || TYPE_REFERENCE_TO (expr)\n-\t       || TYPE_CACHED_VALUES_P (expr)))\n+\t       || TYPE_CACHED_VALUES_P (expr)\n+\t       || TYPE_CONTAINS_PLACEHOLDER_INTERNAL (expr)))\n     {\n       /* Allow these fields to be modified.  */\n       memcpy (buf, expr, tree_size (expr));\n       expr = (tree) buf;\n+      TYPE_CONTAINS_PLACEHOLDER_INTERNAL (expr) = 0;\n       TYPE_POINTER_TO (expr) = NULL;\n       TYPE_REFERENCE_TO (expr) = NULL;\n       if (TYPE_CACHED_VALUES_P (expr))\n@@ -10456,7 +10460,8 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n   md5_process_bytes (expr, tree_size (expr), ctx);\n   fold_checksum_tree (TREE_TYPE (expr), ctx, ht);\n   if (TREE_CODE_CLASS (code) != tcc_type\n-      && TREE_CODE_CLASS (code) != tcc_declaration)\n+      && TREE_CODE_CLASS (code) != tcc_declaration\n+      && code != TREE_LIST)\n     fold_checksum_tree (TREE_CHAIN (expr), ctx, ht);\n   switch (TREE_CODE_CLASS (code))\n     {\n@@ -10484,6 +10489,8 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n \tcase TREE_LIST:\n \t  fold_checksum_tree (TREE_PURPOSE (expr), ctx, ht);\n \t  fold_checksum_tree (TREE_VALUE (expr), ctx, ht);\n+\t  expr = TREE_CHAIN (expr);\n+\t  goto recursive_label;\n \t  break;\n \tcase TREE_VEC:\n \t  for (i = 0; i < TREE_VEC_LENGTH (expr); ++i)"}, {"sha": "2b499e94dd72bdbe303ef9c4e585c19fb065a566", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d763bb10051498ab4bafe220b644f2aa414de381", "patch": "@@ -1,3 +1,8 @@\n+2005-05-31  Andrew pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/20931\n+\t* g++.dg/opt/pr20931.C: New test.\n+\n 2005-05-31  Andreas Jaeger  <aj@suse.de>\n \n \tPR testsuite/20772"}, {"sha": "01518c06d24dde10efa99e88df86243deae05d71", "filename": "gcc/testsuite/g++.dg/opt/pr20931.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr20931.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d763bb10051498ab4bafe220b644f2aa414de381/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr20931.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr20931.C?ref=d763bb10051498ab4bafe220b644f2aa414de381", "patch": "@@ -0,0 +1,13 @@\n+// PR middle-end\n+// This testcase ICEd because fold checking saw a type change which\n+// is allowed as TYPE_CONTAINS_PLACEHOLDER_INTERNAL could change.\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+  \n+int\n+__finite (double __x) throw ()\n+{\n+  return (__extension__\n+   (((((union { double __d; int __i[2]; }) {__d: __x}).__i[1]\n+      | 0x800fffffu) + 1) >> 31));\n+}"}]}