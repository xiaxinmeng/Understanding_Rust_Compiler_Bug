{"sha": "45fa0eef76179a17ab3a34283683856ab7ba5f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVmYTBlZWY3NjE3OWExN2FiM2EzNDI4MzY4Mzg1NmFiN2JhNWYxNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-02-28T10:13:48Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-02-28T10:13:48Z"}, "message": "re PR rtl-optimization/56466 (ICE in verify_loop_structure, at cfgloop.c:1629 (loop with header n not in loop tree !))\n\n        PR rtl-optimization/56466\n        * loop-unroll.c (unroll_and_peel_loops): Call fix_loop_structure\n        if we're changing a loop.\n        (peel_loops_completely): Likewise.\n\nFrom-SVN: r196335", "tree": {"sha": "666ccd47fad9a9f01055af3366f1d252e2e6761a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/666ccd47fad9a9f01055af3366f1d252e2e6761a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45fa0eef76179a17ab3a34283683856ab7ba5f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45fa0eef76179a17ab3a34283683856ab7ba5f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45fa0eef76179a17ab3a34283683856ab7ba5f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45fa0eef76179a17ab3a34283683856ab7ba5f17/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "502c067d54d373d7a8769b481bbae6279fb701f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502c067d54d373d7a8769b481bbae6279fb701f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502c067d54d373d7a8769b481bbae6279fb701f1"}], "stats": {"total": 74, "additions": 62, "deletions": 12}, "files": [{"sha": "5ecbe51f4c2798729332df4b527ad2580da9a1d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45fa0eef76179a17ab3a34283683856ab7ba5f17", "patch": "@@ -1,3 +1,10 @@\n+2013-02-28  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR rtl-optimization/56466\n+\t* loop-unroll.c (unroll_and_peel_loops): Call fix_loop_structure\n+\tif we're changing a loop.\n+\t(peel_loops_completely): Likewise.\n+\n 2013-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/55813"}, {"sha": "1eb904b5061aeb11327c12d9d05c7da525d4b2ef", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=45fa0eef76179a17ab3a34283683856ab7ba5f17", "patch": "@@ -207,7 +207,7 @@ void\n unroll_and_peel_loops (int flags)\n {\n   struct loop *loop;\n-  bool check;\n+  bool changed = false;\n   loop_iterator li;\n \n   /* First perform complete loop peeling (it is almost surely a win,\n@@ -220,7 +220,6 @@ unroll_and_peel_loops (int flags)\n   /* Scan the loops, inner ones first.  */\n   FOR_EACH_LOOP (li, loop, LI_FROM_INNERMOST)\n     {\n-      check = true;\n       /* And perform the appropriate transformations.  */\n       switch (loop->lpt_decision.decision)\n \t{\n@@ -229,30 +228,33 @@ unroll_and_peel_loops (int flags)\n \t  gcc_unreachable ();\n \tcase LPT_PEEL_SIMPLE:\n \t  peel_loop_simple (loop);\n+\t  changed = true;\n \t  break;\n \tcase LPT_UNROLL_CONSTANT:\n \t  unroll_loop_constant_iterations (loop);\n+\t  changed = true;\n \t  break;\n \tcase LPT_UNROLL_RUNTIME:\n \t  unroll_loop_runtime_iterations (loop);\n+\t  changed = true;\n \t  break;\n \tcase LPT_UNROLL_STUPID:\n \t  unroll_loop_stupid (loop);\n+\t  changed = true;\n \t  break;\n \tcase LPT_NONE:\n-\t  check = false;\n \t  break;\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n-      if (check)\n-\t{\n-#ifdef ENABLE_CHECKING\n-\t  verify_loop_structure ();\n-#endif\n-\t}\n     }\n \n+    if (changed)\n+      {\n+\tcalculate_dominance_info (CDI_DOMINATORS);\n+\tfix_loop_structure (NULL);\n+      }\n+\n   iv_analysis_done ();\n }\n \n@@ -283,6 +285,7 @@ peel_loops_completely (int flags)\n {\n   struct loop *loop;\n   loop_iterator li;\n+  bool changed = false;\n \n   /* Scan the loops, the inner ones first.  */\n   FOR_EACH_LOOP (li, loop, LI_FROM_INNERMOST)\n@@ -306,11 +309,15 @@ peel_loops_completely (int flags)\n \t{\n \t  report_unroll_peel (loop, locus);\n \t  peel_loop_completely (loop);\n-#ifdef ENABLE_CHECKING\n-\t  verify_loop_structure ();\n-#endif\n+\t  changed = true;\n \t}\n     }\n+\n+    if (changed)\n+      {\n+\tcalculate_dominance_info (CDI_DOMINATORS);\n+\tfix_loop_structure (NULL);\n+      }\n }\n \n /* Decide whether unroll or peel loops (depending on FLAGS) and how much.  */"}, {"sha": "40d6a80fa8d6c5563e4c2b1b92baa6da8566b3cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45fa0eef76179a17ab3a34283683856ab7ba5f17", "patch": "@@ -1,3 +1,8 @@\n+2013-02-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR rtl-optimization/56466\n+\t* gcc.dg/pr56466.c: New test.\n+\n 2013-02-28  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* gcc.dg/tree-ssa/slsr-1.c: Allow widening multiplications."}, {"sha": "9d9e27356e6ca3f0e7e91810c86b8aab1a9b7a09", "filename": "gcc/testsuite/gcc.dg/pr56466.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56466.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45fa0eef76179a17ab3a34283683856ab7ba5f17/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56466.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56466.c?ref=45fa0eef76179a17ab3a34283683856ab7ba5f17", "patch": "@@ -0,0 +1,31 @@\n+/* PR rtl-optimization/56466 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w -funroll-loops\" } */\n+\n+int a, b, c;\n+\n+void\n+f (void)\n+{\n+  for (; b; b++)\n+    {\n+      if (0)\n+\tfor (; b < 0; b++)\n+\t  if (1 % 0)\n+\t    {\n+\t      while (1)\n+\t\t{\n+\t\t  a = 0;\n+\t\tlbl1:\n+\t\t  c++;\n+\t\t}\n+\t    lbl2:\n+\t      ;\n+\t    }\n+\n+      goto lbl1;\n+    }\n+\n+  a = 0;\n+  goto lbl2;\n+}"}]}