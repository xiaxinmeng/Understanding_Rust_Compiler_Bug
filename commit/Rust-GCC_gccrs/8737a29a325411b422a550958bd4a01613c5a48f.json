{"sha": "8737a29a325411b422a550958bd4a01613c5a48f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODczN2EyOWEzMjU0MTFiNDIyYTU1MDk1OGJkNGEwMTYxM2M1YTQ4Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T12:17:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T12:17:42Z"}, "message": "[multiple changes]\n\n2009-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads: Minor comment fixes\n\n\t* exp_disp.adb: Minor reformatting\n\n\t* gnat1drv.adb: Minor reformatting\n\n\t* output.adb: Minor reformatting\n\n\t* s-vxwext-kernel.ads: Minor reformatting\n\n\t* sem.ads: Minor reformatting\n\n\t* sem.adb: Minor reformatting\n\n\t* sem_elim.adb: Minor reformatting\n\n\t* uname.ads: Minor reformatting\n\n2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* init.c (__gnat_adjust_context_for_raise): On x86{-64}/Linux, add\n\ta small dope of 4 words to the adjustment to the stack pointer.\n\n2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* xoscons.adb: generate C header s-oscons.h in\n\taddition to s-oscons.ads.\n\n\t* socket.c: On VMS, use s-oscons.h.\n\n\t* sem_ch3.adb: Minor reformatting\n\n\t* exp_ch9.adb: Minor reformatting\n\nFrom-SVN: r146401", "tree": {"sha": "4bebcf3a2e3f9d1be7744405c508ced9f3c8cbad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bebcf3a2e3f9d1be7744405c508ced9f3c8cbad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8737a29a325411b422a550958bd4a01613c5a48f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8737a29a325411b422a550958bd4a01613c5a48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8737a29a325411b422a550958bd4a01613c5a48f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8737a29a325411b422a550958bd4a01613c5a48f/comments", "author": null, "committer": null, "parents": [{"sha": "85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85087bcb0d17eeb4d3621f7b4baa954fb17e96d1"}], "stats": {"total": 274, "additions": 188, "deletions": 86}, "files": [{"sha": "0cb78558f2bb7b711524efdf5684ef266b054e0b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -1,3 +1,39 @@\n+2009-04-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads: Minor comment fixes\n+\n+\t* exp_disp.adb: Minor reformatting\n+\n+\t* gnat1drv.adb: Minor reformatting\n+\n+\t* output.adb: Minor reformatting\n+\n+\t* s-vxwext-kernel.ads: Minor reformatting\n+\n+\t* sem.ads: Minor reformatting\n+\n+\t* sem.adb: Minor reformatting\n+\n+\t* sem_elim.adb: Minor reformatting\n+\n+\t* uname.ads: Minor reformatting\n+\n+2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* init.c (__gnat_adjust_context_for_raise): On x86{-64}/Linux, add\n+\ta small dope of 4 words to the adjustment to the stack pointer.\n+\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* xoscons.adb: generate C header s-oscons.h in\n+\taddition to s-oscons.ads.\n+\n+\t* socket.c: On VMS, use s-oscons.h.\n+\n+\t* sem_ch3.adb: Minor reformatting\n+\n+\t* exp_ch9.adb: Minor reformatting\n+\n 2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (check_for_eliminated_entity): Remove."}, {"sha": "f784e54ef3ac0ab08596f9e13ff843d86159cac0", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -7217,21 +7217,21 @@ package body Exp_Ch9 is\n \n             when N_Subprogram_Body =>\n \n-               --  Do not create bodies for eliminated operations.\n+               --  Do not create bodies for eliminated operations\n \n                if not Is_Eliminated (Defining_Entity (Op_Body))\n                  and then not Is_Eliminated (Corresponding_Spec (Op_Body))\n                then\n                   New_Op_Body :=\n                     Build_Unprotected_Subprogram_Body (Op_Body, Pid);\n \n-                  --  Propagate the finalization chain to the new body.\n-                  --  In the unlikely event that the subprogram contains a\n-                  --  declaration or allocator for an object that requires\n-                  --  finalization, the corresponding chain is created when\n-                  --  analyzing the body, and attached to its entity. This\n-                  --  entity is not further elaborated, and so the chain\n-                  --  properly belongs to the newly created subprogram body.\n+                  --  Propagate the finalization chain to the new body. In the\n+                  --  unlikely event that the subprogram contains a declaration\n+                  --  or allocator for an object that requires finalization,\n+                  --  the corresponding chain is created when analyzing the\n+                  --  body, and attached to its entity. This entity is not\n+                  --  further elaborated, and so the chain properly belongs to\n+                  --  the newly created subprogram body.\n \n                   Chain :=\n                     Finalization_Chain_Entity (Defining_Entity (Op_Body));\n@@ -7252,11 +7252,11 @@ package body Exp_Ch9 is\n                   --  appear that this is needed only if this is a visible\n                   --  operation of the type, or if it is an interrupt handler,\n                   --  and this was the strategy used previously in GNAT.\n-                  --  However, the operation may be exported through a\n-                  --  'Access to an external caller. This is the common idiom\n-                  --  in code that uses the Ada 2005 Timing_Events package\n-                  --  As a result we need to produce the protected body for\n-                  --  both visible and private operations.\n+                  --  However, the operation may be exported through a 'Access\n+                  --  to an external caller. This is the common idiom in code\n+                  --  that uses the Ada 2005 Timing_Events package. As a result\n+                  --  we need to produce the protected body for both visible\n+                  --  and private operations.\n \n                   if Present (Corresponding_Spec (Op_Body)) then\n                      Op_Decl :="}, {"sha": "7df45501536120095f9ba4a5cf0830fea85328c3", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -179,12 +179,12 @@ package body Exp_Disp is\n                  or else\n                   (not Comes_From_Source (Defining_Entity (D))\n                      and then\n-                   Has_Unknown_Discriminants (Etype (Defining_Entity (D)))\n+                       Has_Unknown_Discriminants (Etype (Defining_Entity (D)))\n                      and then\n-                   not Comes_From_Source (First_Subtype (Defining_Entity (D))))\n+                       not Comes_From_Source\n+                             (First_Subtype (Defining_Entity (D))))\n                then\n                   null;\n-\n                else\n                   Insert_List_After_And_Analyze (Last (Target_List),\n                     Make_DT (Defining_Entity (D)));"}, {"sha": "9d2a4957e03f444e58fc0935e466cf335e35545a", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -258,21 +258,27 @@ procedure Gnat1drv is\n    -- Check_Library_Items --\n    -------------------------\n \n+   --  Walk_Library_Items has plenty of assertions, so all we need to do is\n+   --  call it, just for these assertions, not actually doing anything else.\n+\n    procedure Check_Library_Items is\n-      --  Walk_Library_Items has plenty of assertions, so all we need to do is\n-      --  call it.\n \n       procedure Action (Item : Node_Id);\n       --  Action passed to Walk_Library_Items to do nothing\n \n+      ------------\n+      -- Action --\n+      ------------\n+\n       procedure Action (Item : Node_Id) is\n       begin\n          null;\n       end Action;\n \n       procedure Walk is new Sem.Walk_Library_Items (Action);\n \n-      --  Start of processing for Check_Library_Items\n+   --  Start of processing for Check_Library_Items\n+\n    begin\n       Walk;\n    end Check_Library_Items;"}, {"sha": "16a9662b8e18f4b83034d1ebdc4fda2cc23c73a2", "filename": "gcc/ada/init.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -592,20 +592,21 @@ __gnat_adjust_context_for_raise (int signo ATTRIBUTE_UNUSED, void *ucontext)\n      by the time the EH return is executed.\n \n      We therefore adjust the saved value of the stack pointer by the size\n-     of one page, in order to make sure that it points to an accessible\n-     address in case it's used as the target CFA.  The stack checking code\n-     guarantees that this page is unused by the time this happens.  */\n+     of one page + a small dope of 4 words, in order to make sure that it\n+     points to an accessible address in case it's used as the target CFA.\n+     The stack checking code guarantees that this address is unused by the\n+     time this happens.  */\n \n #if defined (i386)\n   unsigned long pattern = *(unsigned long *)mcontext->gregs[REG_EIP];\n   /* The pattern is \"orl $0x0,(%esp)\" for a probe in 32-bit mode.  */\n   if (signo == SIGSEGV && pattern == 0x00240c83)\n-    mcontext->gregs[REG_ESP] += 4096;\n+    mcontext->gregs[REG_ESP] += 4096 + 4 * sizeof (unsigned long);\n #elif defined (__x86_64__)\n   unsigned long pattern = *(unsigned long *)mcontext->gregs[REG_RIP];\n   /* The pattern is \"orq $0x0,(%rsp)\" for a probe in 64-bit mode.  */\n   if (signo == SIGSEGV && (pattern & 0xffffffffff) == 0x00240c8348)\n-    mcontext->gregs[REG_RSP] += 4096;\n+    mcontext->gregs[REG_RSP] += 4096 + 4 * sizeof (unsigned long);\n #elif defined (__ia64__)\n   /* ??? The IA-64 unwinder doesn't compensate for signals.  */\n   mcontext->sc_ip++;"}, {"sha": "745d47fab38880a0e5f9f3f1a92b6f566f8e612f", "filename": "gcc/ada/output.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Foutput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Foutput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -162,9 +162,11 @@ package body Output is\n \n    procedure Indent is\n    begin\n+      --  The \"mod\" in the following assignment is to cause a wrap around in\n+      --  the case where there is too much indentation.\n+\n       Cur_Indentation :=\n         (Cur_Indentation + Indentation_Amount) mod Indentation_Limit;\n-      --  The \"mod\" is to wrap around in case there's too much indentation\n    end Indent;\n \n    -------------\n@@ -173,6 +175,8 @@ package body Output is\n \n    procedure Outdent is\n    begin\n+      --  The \"mod\" here undoes the wrap around from Indent above\n+\n       Cur_Indentation :=\n         (Cur_Indentation - Indentation_Amount) mod Indentation_Limit;\n    end Outdent;"}, {"sha": "c1883abdff6af5917a26567b291e65b3b80307bd", "filename": "gcc/ada/s-vxwext-kernel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fs-vxwext-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fs-vxwext-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.ads?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -78,7 +78,7 @@ package System.VxWorks.Ext is\n    type UINT64 is mod 2 ** Long_Long_Integer'Size;\n \n    function tickGet return UINT64;\n-   --  needed for ravenscar-cert\n+   --  Needed for ravenscar-cert\n    pragma Import (C, tickGet, \"tick64Get\");\n \n end System.VxWorks.Ext;"}, {"sha": "5e2fa1bdbd0f85847b12e1332449a704b06098be", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -1477,14 +1477,14 @@ package body Sem is\n          --  assertions and debugging output.\n \n          case Nkind (Item) is\n-            when N_Generic_Subprogram_Declaration |\n-              N_Generic_Package_Declaration |\n-              N_Package_Declaration |\n-              N_Subprogram_Declaration |\n-              N_Subprogram_Renaming_Declaration |\n-              N_Package_Renaming_Declaration |\n+            when N_Generic_Subprogram_Declaration     |\n+              N_Generic_Package_Declaration           |\n+              N_Package_Declaration                   |\n+              N_Subprogram_Declaration                |\n+              N_Subprogram_Renaming_Declaration       |\n+              N_Package_Renaming_Declaration          |\n               N_Generic_Function_Renaming_Declaration |\n-              N_Generic_Package_Renaming_Declaration |\n+              N_Generic_Package_Renaming_Declaration  |\n               N_Generic_Procedure_Renaming_Declaration =>\n                null;  --  Specs are OK\n \n@@ -1497,8 +1497,8 @@ package body Sem is\n             --  All other cases cannot happen\n \n             when N_Function_Instantiation |\n-              N_Procedure_Instantiation |\n-              N_Package_Instantiation =>\n+              N_Procedure_Instantiation   |\n+              N_Package_Instantiation     =>\n                pragma Assert (False, \"instantiation\");\n                null;\n \n@@ -1520,15 +1520,20 @@ package body Sem is\n                Write_Int (Int (Get_Cunit_Unit_Number (CU)));\n                Write_Str (\", \");\n                Write_Str (Node_Kind'Image (Nkind (Item)));\n+\n                if Item /= Original_Node (Item) then\n                   Write_Str (\", orig = \");\n                   Write_Str (Node_Kind'Image (Nkind (Original_Node (Item))));\n                end if;\n+\n                Write_Eol;\n             end if;\n \n-         else  --  Must be Standard\n+         else\n+            --  Must be Standard\n+\n             pragma Assert (Item = Stand.Standard_Package_Node);\n+\n             if Enable_Output then\n                Write_Line (\"Standard\");\n             end if;\n@@ -1537,9 +1542,11 @@ package body Sem is\n          Action (Item);\n       end Do_Action;\n \n+      --  Local Declarations\n+\n       Cur : Elmt_Id := First_Elmt (Comp_Unit_List);\n \n-      --  Start of processing for Walk_Library_Items\n+   --  Start of processing for Walk_Library_Items\n \n    begin\n       if Enable_Output then\n@@ -1555,24 +1562,31 @@ package body Sem is\n          declare\n             CU : constant Node_Id := Node (Cur);\n             N  : constant Node_Id := Unit (CU);\n+\n          begin\n             pragma Assert (Nkind (CU) = N_Compilation_Unit);\n \n             case Nkind (N) is\n+\n                --  If it's a body, then ignore it, unless it's an instance (in\n                --  which case we do the spec), or it's the main unit (in which\n                --  case we do it). Note that it could be both.\n \n                when N_Package_Body | N_Subprogram_Body =>\n                   declare\n                      Entity : Node_Id := N;\n+\n                   begin\n                      if Nkind (N) = N_Subprogram_Body then\n                         Entity := Specification (Entity);\n                      end if;\n+\n                      Entity := Defining_Unit_Name (Entity);\n+\n                      if Nkind (Entity) not in N_Entity then\n+\n                         --  Must be N_Defining_Program_Unit_Name\n+\n                         Entity := Defining_Identifier (Entity);\n                      end if;\n \n@@ -1582,6 +1596,7 @@ package body Sem is\n                   end;\n \n                   if CU = Cunit (Main_Unit) then\n+\n                      --  Must come last\n \n                      pragma Assert (No (Next_Elmt (Cur)));"}, {"sha": "a1873e86defa5e4bc11071df6383d4021e4b6fca", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -651,7 +651,7 @@ package Sem is\n    --  is the N_Package_Declaration node for package Standard. Bodies are not\n    --  included, except for the main unit itself, which always comes last.\n    --\n-   --  Item is never a subunit.\n+   --  Item is never a subunit\n    --\n    --  Item is never an instantiation. Instead, the instance declaration is\n    --  passed, and (if the instantiation is the main unit), the instance body."}, {"sha": "3fc35a2fadb2c17c09f3ff44e76295131e21f4a8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -4037,29 +4037,25 @@ package body Sem_Ch3 is\n          --  This does not apply if the base type is a generic type, whose\n          --  declaration is independent of the current derived definition.\n \n-         if B /= T\n-           and then not Is_Generic_Type (B)\n-         then\n+         if B /= T and then not Is_Generic_Type (B) then\n             Ensure_Freeze_Node (B);\n             Set_First_Subtype_Link (Freeze_Node (B), T);\n          end if;\n \n          --  A type that is imported through a limited_with clause cannot\n-         --  generate any code, and thus need not be frozen. However, an\n-         --  access type with an imported designated type needs a finalization\n-         --  list, which may be referenced in some other package that has\n-         --  non-limited visibility on the designated type. Thus we must\n-         --  create the finalization list at the point the access type is\n-         --  frozen, to prevent unsatisfied references at link time.\n-\n-         if not From_With_Type (T)\n-           or else Is_Access_Type (T)\n-         then\n+         --  generate any code, and thus need not be frozen. However, an access\n+         --  type with an imported designated type needs a finalization list,\n+         --  which may be referenced in some other package that has non-limited\n+         --  visibility on the designated type. Thus we must create the\n+         --  finalization list at the point the access type is frozen, to\n+         --  prevent unsatisfied references at link time.\n+\n+         if not From_With_Type (T) or else Is_Access_Type (T) then\n             Set_Has_Delayed_Freeze (T);\n          end if;\n       end;\n \n-      --  Case of T is the full declaration of some private type which has\n+      --  Case where T is the full declaration of some private type which has\n       --  been swapped in Defining_Identifier (N).\n \n       if T /= Def_Id and then Is_Private_Type (Def_Id) then\n@@ -4101,7 +4097,7 @@ package body Sem_Ch3 is\n          Generate_Definition (Def_Id);\n       end if;\n \n-      if Chars (Scope (Def_Id)) =  Name_System\n+      if Chars (Scope (Def_Id)) = Name_System\n         and then Chars (Def_Id) = Name_Address\n         and then Is_Predefined_File_Name (Unit_File_Name (Get_Source_Unit (N)))\n       then"}, {"sha": "d285e08355c5d0d8025b588c847655d2368db322", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -674,7 +674,6 @@ package body Sem_Elim is\n \n    begin\n       if Is_Eliminated (Ultimate_Subp) and then not Inside_A_Generic then\n-\n          Enclosing_Subp := Current_Subprogram;\n          while Present (Enclosing_Subp) loop\n             if Is_Eliminated (Enclosing_Subp) then"}, {"sha": "7343a95f98297a258f95f681552b97e45b9684e8", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -5319,7 +5319,7 @@ package Sinfo is\n       --  There is no explicit node in the tree for a compilation, since in\n       --  general the compiler is processing only a single compilation unit\n       --  at a time. It is possible to parse multiple units in syntax check\n-      --  only mode, but they the trees are discarded in any case.\n+      --  only mode, but the trees are discarded in that case.\n \n       ------------------------------\n       -- 10.1.1  Compilation Unit --\n@@ -5389,7 +5389,7 @@ package Sinfo is\n \n       --  There is no explicit node in the tree for library item, instead\n       --  the declaration or body, and the flag for private if present,\n-      --  appear in the N_Compilation_Unit clause.\n+      --  appear in the N_Compilation_Unit node.\n \n       --------------------------------------\n       -- 10.1.1  Library Unit Declaration --"}, {"sha": "226f3be8592882f6b96aa61ac7c4336319d12d80", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -32,6 +32,15 @@\n /*  This file provides a portable binding to the sockets API                */\n \n #include \"gsocket.h\"\n+#ifdef VMS\n+/*\n+ * For VMS, gsocket.h can't include sockets-related DEC C header files\n+ * when building the runtime (because these files are in DEC C archives,\n+ * not accessable to GCC). So, we generate a separate header file along\n+ * with s-oscons.ads and include it here.\n+ */\n+# include \"s-oscons.h\"\n+#endif\n \n #if defined(HAVE_SOCKETS)\n "}, {"sha": "c1b59b6cb9299df37929f8c8a313efe26a2c7012", "filename": "gcc/ada/uname.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Funame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Funame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.ads?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -38,11 +38,11 @@ package Uname is\n    -- Unit Name Conventions --\n    ---------------------------\n \n-   --  Units are associated with a unique ASCII name as follows. First we\n-   --  have the fully expanded name of the unit, with lower case letters\n-   --  (except for the use of upper case letters for encoding upper half\n-   --  and wide characters, as described in Namet), and periods. Following\n-   --  this is one of the following suffixes:\n+   --  Units are associated with a unique ASCII name as follows. First we have\n+   --  the fully expanded name of the unit, with lower case letters (except\n+   --  for the use of upper case letters for encoding upper half and wide\n+   --  characters, as described in Namet), and periods. Following this is one\n+   --  of the following suffixes:\n \n    --    %s  for package/subprogram/generic declarations (specs)\n    --    %b  for package/subprogram/generic bodies and subunits\n@@ -144,11 +144,11 @@ package Uname is\n    function New_Child\n      (Old  : Unit_Name_Type;\n       Newp : Unit_Name_Type) return Unit_Name_Type;\n-   --   Old is a child unit name (for either a body or spec). Newp is the\n-   --   unit name of the actual parent (this may be different from the\n-   --   parent in old). The returned unit name is formed by taking the\n-   --   parent name from Newp and the child unit name from Old, with the\n-   --   result being a body or spec depending on Old. For example:\n+   --   Old is a child unit name (for either a body or spec). Newp is the unit\n+   --   name of the actual parent (this may be different from the parent in\n+   --   old). The returned unit name is formed by taking the parent name from\n+   --   Newp and the child unit name from Old, with the result being a body or\n+   --   spec depending on Old. For example:\n    --\n    --     Old    = A.B.C (body)\n    --     Newp   = A.R (spec)"}, {"sha": "64a9e799a3f9484b38d92847b93593557aece089", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 56, "deletions": 20, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8737a29a325411b422a550958bd4a01613c5a48f/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=8737a29a325411b422a550958bd4a01613c5a48f", "patch": "@@ -105,11 +105,16 @@ procedure XOSCons is\n       Table_Initial        => 100,\n       Table_Increment      => 10);\n \n-   Max_Constant_Name_Len  : Natural := 0;\n+   Max_Const_Name_Len  : Natural := 0;\n    Max_Constant_Value_Len : Natural := 0;\n    --  Longest name and longest value lengths\n \n-   procedure Output_Info (OFile : Sfile; Info_Index : Integer);\n+   type Language is (Lang_Ada, Lang_C);\n+\n+   procedure Output_Info\n+     (Lang       : Language;\n+      OFile      : Sfile;\n+      Info_Index : Integer);\n    --  Output information from the indicated asm info line\n \n    procedure Parse_Asm_Line (Line : String);\n@@ -128,14 +133,22 @@ procedure XOSCons is\n \n    function Contains_Template_Name (S : String) return Boolean is\n    begin\n-      return Index (Source => To_Lower (S), Pattern => Tmpl_Name) > 0;\n+      if Index (Source => To_Lower (S), Pattern => Tmpl_Name) > 0 then\n+         return True;\n+      else\n+         return False;\n+      end if;\n    end Contains_Template_Name;\n \n    -----------------\n    -- Output_Info --\n    -----------------\n \n-   procedure Output_Info (OFile : Sfile; Info_Index : Integer) is\n+   procedure Output_Info\n+     (Lang       : Language;\n+      OFile      : Sfile;\n+      Info_Index : Integer)\n+   is\n       Info : Asm_Info renames Asm_Infos.Table (Info_Index);\n \n       procedure Put (S : String);\n@@ -153,11 +166,17 @@ procedure XOSCons is\n       if Info.Kind /= TXT then\n          --  TXT case is handled by the common code below\n \n-         Put (\"   \");\n-         Put (Info.Constant_Name.all);\n-         Put (Spaces (Max_Constant_Name_Len - Info.Constant_Name'Length));\n+         case Lang is\n+            when Lang_Ada =>\n+               Put (\"   \" & Info.Constant_Name.all);\n+               Put (Spaces (Max_Const_Name_Len - Info.Constant_Name'Length));\n \n-         Put (\" : constant := \");\n+               Put (\" : constant := \");\n+\n+            when Lang_C =>\n+               Put (\"#define \" & Info.Constant_Name.all & \" \");\n+               Put (Spaces (Max_Const_Name_Len - Info.Constant_Name'Length));\n+         end case;\n \n          if Info.Kind = CND then\n             if not Info.Int_Value.Positive then\n@@ -168,15 +187,20 @@ procedure XOSCons is\n             Put (Info.Text_Value.all);\n          end if;\n \n-         Put (\";\");\n+         if Lang = Lang_Ada then\n+            Put (\";\");\n \n-         if Info.Comment'Length > 0 then\n-            Put (Spaces (Max_Constant_Value_Len - Info.Value_Len));\n-            Put (\" --  \");\n+            if Info.Comment'Length > 0 then\n+               Put (Spaces (Max_Constant_Value_Len - Info.Value_Len));\n+               Put (\" --  \");\n+            end if;\n          end if;\n       end if;\n \n-      Put (Info.Comment.all);\n+      if Lang = Lang_Ada then\n+         Put (Info.Comment.all);\n+      end if;\n+\n       New_Line (OFile);\n    end Output_Info;\n \n@@ -272,8 +296,8 @@ procedure XOSCons is\n                Find_Colon (Index2);\n \n                Info.Constant_Name := Field_Alloc;\n-               if Info.Constant_Name'Length > Max_Constant_Name_Len then\n-                  Max_Constant_Name_Len := Info.Constant_Name'Length;\n+               if Info.Constant_Name'Length > Max_Const_Name_Len then\n+                  Max_Const_Name_Len := Info.Constant_Name'Length;\n                end if;\n \n                Index1 := Index2 + 1;\n@@ -332,13 +356,20 @@ procedure XOSCons is\n \n    --  Local declarations\n \n-   Asm_File_Name  : constant String := Tmpl_Name & \".s\";\n+   --  Input files\n+\n    Tmpl_File_Name : constant String := Tmpl_Name & \".i\";\n+   Asm_File_Name  : constant String := Tmpl_Name & \".s\";\n+\n+   --  Output files\n+\n    Ada_File_Name  : constant String := Unit_Name & \".ads\";\n+   C_File_Name    : constant String := Unit_Name & \".h\";\n \n    Asm_File  : Ada.Text_IO.File_Type;\n    Tmpl_File : Ada.Text_IO.File_Type;\n-   OFile     : Sfile;\n+   Ada_OFile : Sfile;\n+   C_OFile   : Sfile;\n \n    Line : String (1 .. 256);\n    Last : Integer;\n@@ -368,7 +399,8 @@ begin\n    --  Load C template and output definitions\n \n    Open (Tmpl_File, In_File, Tmpl_File_Name);\n-   Create (OFile, Out_File, Ada_File_Name);\n+   Create (Ada_OFile, Out_File, Ada_File_Name);\n+   Create (C_OFile,   Out_File, C_File_Name);\n \n    Current_Line := 0;\n    Current_Info := Asm_Infos.First;\n@@ -398,16 +430,20 @@ begin\n       elsif In_Template then\n          if In_Comment then\n             if Line (1 .. Last) = \"*/\" then\n+               Put_Line (C_OFile, Line (1 .. Last));\n                In_Comment := False;\n             else\n-               Put_Line (OFile, Line (1 .. Last));\n+               Put_Line (Ada_OFile, Line (1 .. Last));\n+               Put_Line (C_OFile, Line (1 .. Last));\n             end if;\n \n          elsif Line (1 .. Last) = \"/*\" then\n+            Put_Line (C_OFile, Line (1 .. Last));\n             In_Comment := True;\n \n          elsif Asm_Infos.Table (Current_Info).Line_Number = Current_Line then\n-            Output_Info (OFile, Current_Info);\n+            Output_Info (Lang_Ada, Ada_OFile, Current_Info);\n+            Output_Info (Lang_C,   C_OFile,   Current_Info);\n             Current_Info := Current_Info + 1;\n          end if;\n          Current_Line := Current_Line + 1;"}]}