{"sha": "ed4ebabc902c38b6d93c8d88405fa38cbb081498", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ0ZWJhYmM5MDJjMzhiNmQ5M2M4ZDg4NDA1ZmEzOGNiYjA4MTQ5OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-14T19:18:38Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-14T19:18:38Z"}, "message": "libgo: Check whether we need -lrt for sched_yield.\n\nFrom Rainer Orth.\n\nFrom-SVN: r168816", "tree": {"sha": "b06d52ec11eb4a047cce6d629203450c13c1d9c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06d52ec11eb4a047cce6d629203450c13c1d9c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed4ebabc902c38b6d93c8d88405fa38cbb081498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4ebabc902c38b6d93c8d88405fa38cbb081498", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4ebabc902c38b6d93c8d88405fa38cbb081498", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4ebabc902c38b6d93c8d88405fa38cbb081498/comments", "author": null, "committer": null, "parents": [{"sha": "3ad3790dc05e42b3539ffc8167b1cadd65e5ad7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad3790dc05e42b3539ffc8167b1cadd65e5ad7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad3790dc05e42b3539ffc8167b1cadd65e5ad7f"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "edc6c1abf8b600805998aef9f64b81838c9f09ed", "filename": "libgo/configure", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4ebabc902c38b6d93c8d88405fa38cbb081498/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4ebabc902c38b6d93c8d88405fa38cbb081498/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=ed4ebabc902c38b6d93c8d88405fa38cbb081498", "patch": "@@ -13635,6 +13635,63 @@ fi\n \n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing sched_yield\" >&5\n+$as_echo_n \"checking for library containing sched_yield... \" >&6; }\n+if test \"${ac_cv_search_sched_yield+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_func_search_save_LIBS=$LIBS\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char sched_yield ();\n+int\n+main ()\n+{\n+return sched_yield ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+for ac_lib in '' rt; do\n+  if test -z \"$ac_lib\"; then\n+    ac_res=\"none required\"\n+  else\n+    ac_res=-l$ac_lib\n+    LIBS=\"-l$ac_lib  $ac_func_search_save_LIBS\"\n+  fi\n+  if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_search_sched_yield=$ac_res\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext\n+  if test \"${ac_cv_search_sched_yield+set}\" = set; then :\n+  break\n+fi\n+done\n+if test \"${ac_cv_search_sched_yield+set}\" = set; then :\n+\n+else\n+  ac_cv_search_sched_yield=no\n+fi\n+rm conftest.$ac_ext\n+LIBS=$ac_func_search_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_sched_yield\" >&5\n+$as_echo \"$ac_cv_search_sched_yield\" >&6; }\n+ac_res=$ac_cv_search_sched_yield\n+if test \"$ac_res\" != no; then :\n+  test \"$ac_res\" = \"none required\" || LIBS=\"$ac_res $LIBS\"\n+\n+fi\n+\n+\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether byte ordering is bigendian\" >&5\n $as_echo_n \"checking whether byte ordering is bigendian... \" >&6; }\n if test \"${ac_cv_c_bigendian+set}\" = set; then :"}, {"sha": "3d272ec8d60e348b904ea031c31c3d74feeae3d9", "filename": "libgo/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed4ebabc902c38b6d93c8d88405fa38cbb081498/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed4ebabc902c38b6d93c8d88405fa38cbb081498/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=ed4ebabc902c38b6d93c8d88405fa38cbb081498", "patch": "@@ -274,6 +274,9 @@ PTHREAD_LIBS=\n AC_CHECK_LIB([pthread], [pthread_create], PTHREAD_LIBS=-lpthread)\n AC_SUBST(PTHREAD_LIBS)\n \n+dnl Test if -lrt is required for sched_yield.\n+AC_SEARCH_LIBS([sched_yield], [rt])\n+\n AC_C_BIGENDIAN\n \n GCC_CHECK_UNWIND_GETIPINFO"}]}