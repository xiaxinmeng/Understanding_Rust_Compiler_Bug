{"sha": "f8c33439c6ada920a72170010472ecda965371d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhjMzM0MzljNmFkYTkyMGE3MjE3MDAxMDQ3MmVjZGE5NjUzNzFkMg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-06-08T16:14:33Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-06-08T16:14:33Z"}, "message": "re PR tree-optimization/36218 (VRP causes stack overflow while building libgcj)\n\n\tPR tree-optimization/36218\n\t* Makefile.def (flags_to_pass): Add LDFLAGS_FOR_BUILD.\n\t* Makefile.tpl (EXTRA_BUILD_FLAGS): Define.\n\t(all prefix=\"build-\"): Pass them to build-system sub-makes.\n\t* Makefile.in: Regenerate.\n\nconfig:\n\t* config/mh-mingw (LDFLAGS): Define.\n\ngcc:\n\t* configure.ac: Use LDFLAGS=\"${LDFLAGS_FOR_BUILD}\" when running\n\tconfigure for the build system.\n\t(BUILD_LDFLAGS): Define.\n\t* configure: Regenerate.\n\t* Makefile.in (BUILD_LDFLAGS): Define to @BUILD_LDFLAGS@.\n\nFrom-SVN: r136563", "tree": {"sha": "aec648ca3453c6e069be4508f594fbeb9d4bf473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aec648ca3453c6e069be4508f594fbeb9d4bf473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8c33439c6ada920a72170010472ecda965371d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c33439c6ada920a72170010472ecda965371d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c33439c6ada920a72170010472ecda965371d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c33439c6ada920a72170010472ecda965371d2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91635d0806bad0493405beac1cd528ed07cbaf87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91635d0806bad0493405beac1cd528ed07cbaf87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91635d0806bad0493405beac1cd528ed07cbaf87"}], "stats": {"total": 100, "additions": 73, "deletions": 27}, "files": [{"sha": "9f8d407867fe6314d9c004fd68476f47dda74d96", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -1,3 +1,11 @@\n+2008-06-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR tree-optimization/36218\n+\t* Makefile.def (flags_to_pass): Add LDFLAGS_FOR_BUILD.\n+\t* Makefile.tpl (EXTRA_BUILD_FLAGS): Define.\n+\t(all prefix=\"build-\"): Pass them to build-system sub-makes.\n+\t* Makefile.in: Regenerate.\n+\n 2008-06-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* MAINTAINERS (mt port): Remove."}, {"sha": "3924617ebd3daad8f375cfdc0471dbe6a5961520", "filename": "Makefile.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -215,6 +215,7 @@ flags_to_pass = { flag= INSTALL ; };\n flags_to_pass = { flag= INSTALL_DATA ; };\n flags_to_pass = { flag= INSTALL_PROGRAM ; };\n flags_to_pass = { flag= INSTALL_SCRIPT ; };\n+flags_to_pass = { flag= LDFLAGS_FOR_BUILD ; };\n flags_to_pass = { flag= LEX ; };\n flags_to_pass = { flag= M4 ; };\n flags_to_pass = { flag= MAKE ; };"}, {"sha": "1bd87fd52cbef4451596b1591d86f7dc6f05b5f7", "filename": "Makefile.in", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -144,6 +144,12 @@ BUILD_EXPORTS = \\\n \tWINDRES=\"$(WINDRES_FOR_BUILD)\"; export WINDRES; \\\n \tWINDMC=\"$(WINDMC_FOR_BUILD)\"; export WINDMC;\n \n+# These variables must be set on the make command line for directories\n+# built for the build system to override those in BASE_FLAGS_TO_PASSS.\n+EXTRA_BUILD_FLAGS = \\\n+\tCFLAGS=\"$(CFLAGS_FOR_BUILD)\" \\\n+\tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"\n+\n # This is the list of directories to built for the host system.\n SUBDIRS = @configdirs@\n # This is set by the configure script to the arguments to use when configuring\n@@ -499,6 +505,7 @@ BASE_FLAGS_TO_PASS = \\\n \t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"LDFLAGS_FOR_BUILD=$(LDFLAGS_FOR_BUILD)\" \\\n \t\"LEX=$(LEX)\" \\\n \t\"M4=$(M4)\" \\\n \t\"MAKE=$(MAKE)\" \\\n@@ -2762,7 +2769,7 @@ all-build-libiberty: configure-build-libiberty\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/libiberty && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-libiberty))\n @endif build-libiberty\n \n@@ -2818,7 +2825,7 @@ all-build-bison: configure-build-bison\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/bison && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-bison))\n @endif build-bison\n \n@@ -2874,7 +2881,7 @@ all-build-byacc: configure-build-byacc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/byacc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-byacc))\n @endif build-byacc\n \n@@ -2930,7 +2937,7 @@ all-build-flex: configure-build-flex\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/flex && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-flex))\n @endif build-flex\n \n@@ -2986,7 +2993,7 @@ all-build-m4: configure-build-m4\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/m4 && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-m4))\n @endif build-m4\n \n@@ -3042,7 +3049,7 @@ all-build-texinfo: configure-build-texinfo\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/texinfo && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-texinfo))\n @endif build-texinfo\n \n@@ -3098,7 +3105,7 @@ all-build-fixincludes: configure-build-fixincludes\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS) \\\n \t(cd $(BUILD_SUBDIR)/fixincludes && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS)   \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n \t\t$(TARGET-build-fixincludes))\n @endif build-fixincludes\n "}, {"sha": "c9b34eda22ddb2a67bf9fd2ef8da0de1d076db17", "filename": "Makefile.tpl", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -147,6 +147,12 @@ BUILD_EXPORTS = \\\n \tWINDRES=\"$(WINDRES_FOR_BUILD)\"; export WINDRES; \\\n \tWINDMC=\"$(WINDMC_FOR_BUILD)\"; export WINDMC;\n \n+# These variables must be set on the make command line for directories\n+# built for the build system to override those in BASE_FLAGS_TO_PASSS.\n+EXTRA_BUILD_FLAGS = \\\n+\tCFLAGS=\"$(CFLAGS_FOR_BUILD)\" \\\n+\tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"\n+\n # This is the list of directories to built for the host system.\n SUBDIRS = @configdirs@\n # This is set by the configure script to the arguments to use when configuring\n@@ -955,7 +961,8 @@ clean-stage[+id+]-[+prefix+][+module+]:\n \t     target_alias=(get \"target\" \"${target_alias}\")\n \t     args=\"$(BUILD_CONFIGARGS)\" no-config-site=true +]\n \n-[+ all prefix=\"build-\" subdir=\"$(BUILD_SUBDIR)\" exports=\"$(BUILD_EXPORTS)\" +]\n+[+ all prefix=\"build-\" subdir=\"$(BUILD_SUBDIR)\" exports=\"$(BUILD_EXPORTS)\"\n+\t     args=\"$(EXTRA_BUILD_FLAGS)\" +]\n [+ ENDFOR build_module +]\n \n # --------------------------------------"}, {"sha": "55d74f668a1a017ded5dd8325f15b39004832102", "filename": "config/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -1,3 +1,8 @@\n+2008-06-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR tree-optimization/36218\n+\t* config/mh-mingw (LDFLAGS): Define.\n+\n 2008-06-05  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR driver/35916"}, {"sha": "e31bfd323b45208631fc35e7fd376e4dd72ee53f", "filename": "config/mh-mingw", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/config%2Fmh-mingw", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/config%2Fmh-mingw", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-mingw?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -2,3 +2,5 @@\n # Vista (see PR33281 for details).\n BOOT_CFLAGS += -D__USE_MINGW_ACCESS\n CFLAGS += -D__USE_MINGW_ACCESS\n+# Increase stack limit to same as Linux default.\n+LDFLAGS = -Wl,--stack,8388608"}, {"sha": "e65bf878ed6ddc677d6d4c4dc376c53b755530c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -1,3 +1,12 @@\n+2008-06-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR tree-optimization/36218\n+\t* configure.ac: Use LDFLAGS=\"${LDFLAGS_FOR_BUILD}\" when running\n+\tconfigure for the build system.\n+\t(BUILD_LDFLAGS): Define.\n+\t* configure: Regenerate.\n+\t* Makefile.in (BUILD_LDFLAGS): Define to @BUILD_LDFLAGS@.\n+\n 2008-07-08  Anatoly Sokolov  <aesok@post.ru>\n \n \tPR target/36424"}, {"sha": "7069728a1289786de8e6229fb1513f3adc8d5694", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -662,7 +662,7 @@ CC_FOR_BUILD = @CC_FOR_BUILD@\n BUILD_CFLAGS= @BUILD_CFLAGS@ -DGENERATOR_FILE\n \n # Native linker and preprocessor flags.  For x-fragment overrides.\n-BUILD_LDFLAGS=$(LDFLAGS)\n+BUILD_LDFLAGS=@BUILD_LDFLAGS@\n BUILD_CPPFLAGS=$(ALL_CPPFLAGS)\n \n # Actual name to use when installing a native compiler."}, {"sha": "1f478817ac813480b0044fdbfc567a5a7de9e86c", "filename": "gcc/configure", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -458,7 +458,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn cxx_compat_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT host_cc_for_libada CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN ac_ct_AR STRIP ac_ct_STRIP lt_ECHO objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn cxx_compat_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT host_cc_for_libada CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN ac_ct_AR STRIP ac_ct_STRIP lt_ECHO objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n \n # Initialize some variables set by options.\n@@ -868,13 +868,13 @@ echo X\"$0\" |\n   \t  /^X\\(\\/\\).*/{ s//\\1/; q; }\n   \t  s/.*/./; q'`\n   srcdir=$ac_confdir\n-  if test ! -r \"$srcdir/$ac_unique_file\"; then\n+  if test ! -r $srcdir/$ac_unique_file; then\n     srcdir=..\n   fi\n else\n   ac_srcdir_defaulted=no\n fi\n-if test ! -r \"$srcdir/$ac_unique_file\"; then\n+if test ! -r $srcdir/$ac_unique_file; then\n   if test \"$ac_srcdir_defaulted\" = yes; then\n     { echo \"$as_me: error: cannot find sources ($ac_unique_file) in $ac_confdir or ..\" >&2\n    { (exit 1); exit 1; }; }\n@@ -883,7 +883,7 @@ if test ! -r \"$srcdir/$ac_unique_file\"; then\n    { (exit 1); exit 1; }; }\n   fi\n fi\n-(cd $srcdir && test -r \"./$ac_unique_file\") 2>/dev/null ||\n+(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||\n   { echo \"$as_me: error: sources are in $srcdir, but \\`cd $srcdir' does not work\" >&2\n    { (exit 1); exit 1; }; }\n srcdir=`echo \"$srcdir\" | sed 's%\\([^\\\\/]\\)[\\\\/]*$%\\1%'`\n@@ -13571,6 +13571,7 @@ else\n \tesac\n \tsaved_CFLAGS=\"${CFLAGS}\"\n \tCC=\"${CC_FOR_BUILD}\" CFLAGS=\"${CFLAGS_FOR_BUILD}\" \\\n+\tLDFLAGS=\"${LDFLAGS_FOR_BUILD}\" \\\n \t${realsrcdir}/configure \\\n \t\t--enable-languages=${enable_languages-all} \\\n \t\t--target=$target_alias --host=$build_alias --build=$build_alias\n@@ -14068,6 +14069,7 @@ fi\n # These are the normal (build=host) settings:\n CC_FOR_BUILD='$(CC)'\n BUILD_CFLAGS='$(ALL_CFLAGS)'\n+BUILD_LDFLAGS='$(LDFLAGS)'\n STMP_FIXINC=stmp-fixinc\n \n # Possibly disable fixproto, on a per-target basis.\n@@ -14085,6 +14087,7 @@ esac\n if test x$build != x$host || test \"x$coverage_flags\" != x\n then\n     BUILD_CFLAGS='$(INTERNAL_CFLAGS) $(T_CFLAGS) $(CFLAGS_FOR_BUILD)'\n+    BUILD_LDFLAGS='$(LDFLAGS_FOR_BUILD)'\n \n     if test \"x$TARGET_SYSTEM_ROOT\" = x; then\n \tif test \"x$STMP_FIXPROTO\" != x; then\n@@ -14663,13 +14666,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:14666: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14669: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14669: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14672: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:14672: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:14675: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -15724,7 +15727,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 15727 \"configure\"' > conftest.$ac_ext\n+  echo '#line 15730 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -16344,11 +16347,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16347: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16350: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:16351: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16354: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -16666,11 +16669,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16669: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16672: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:16673: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16676: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -16771,11 +16774,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16774: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16777: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:16778: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16781: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -16826,11 +16829,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16829: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16832: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:16833: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16836: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -19623,7 +19626,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19626 \"configure\"\n+#line 19629 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19723,7 +19726,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19726 \"configure\"\n+#line 19729 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -24559,6 +24562,7 @@ s,@SYSTEM_HEADER_DIR@,$SYSTEM_HEADER_DIR,;t t\n s,@inhibit_libc@,$inhibit_libc,;t t\n s,@CC_FOR_BUILD@,$CC_FOR_BUILD,;t t\n s,@BUILD_CFLAGS@,$BUILD_CFLAGS,;t t\n+s,@BUILD_LDFLAGS@,$BUILD_LDFLAGS,;t t\n s,@STMP_FIXINC@,$STMP_FIXINC,;t t\n s,@STMP_FIXPROTO@,$STMP_FIXPROTO,;t t\n s,@collect2@,$collect2,;t t"}, {"sha": "57be54a5b9776bdbe7ed3daa166ee402aebfa8b5", "filename": "gcc/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8c33439c6ada920a72170010472ecda965371d2/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8c33439c6ada920a72170010472ecda965371d2/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=f8c33439c6ada920a72170010472ecda965371d2", "patch": "@@ -1460,6 +1460,7 @@ else\n \tesac\n \tsaved_CFLAGS=\"${CFLAGS}\"\n \tCC=\"${CC_FOR_BUILD}\" CFLAGS=\"${CFLAGS_FOR_BUILD}\" \\\n+\tLDFLAGS=\"${LDFLAGS_FOR_BUILD}\" \\\n \t${realsrcdir}/configure \\\n \t\t--enable-languages=${enable_languages-all} \\\n \t\t--target=$target_alias --host=$build_alias --build=$build_alias\n@@ -1756,6 +1757,7 @@ AC_SUBST(inhibit_libc)\n # These are the normal (build=host) settings:\n CC_FOR_BUILD='$(CC)'\t\tAC_SUBST(CC_FOR_BUILD)\n BUILD_CFLAGS='$(ALL_CFLAGS)'\tAC_SUBST(BUILD_CFLAGS)\n+BUILD_LDFLAGS='$(LDFLAGS)'\tAC_SUBST(BUILD_LDFLAGS)\n STMP_FIXINC=stmp-fixinc\t\tAC_SUBST(STMP_FIXINC)\n \n # Possibly disable fixproto, on a per-target basis.\n@@ -1773,6 +1775,7 @@ AC_SUBST(STMP_FIXPROTO)\n if test x$build != x$host || test \"x$coverage_flags\" != x\n then\n     BUILD_CFLAGS='$(INTERNAL_CFLAGS) $(T_CFLAGS) $(CFLAGS_FOR_BUILD)'\n+    BUILD_LDFLAGS='$(LDFLAGS_FOR_BUILD)'\n \n     if test \"x$TARGET_SYSTEM_ROOT\" = x; then\n \tif test \"x$STMP_FIXPROTO\" != x; then"}]}