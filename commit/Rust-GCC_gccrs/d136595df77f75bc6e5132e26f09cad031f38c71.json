{"sha": "d136595df77f75bc6e5132e26f09cad031f38c71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEzNjU5NWRmNzdmNzViYzZlNTEzMmUyNmYwOWNhZDAzMWYzOGM3MQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-10-24T08:49:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-10-24T08:49:02Z"}, "message": "Fix another UBSAN in Fortran coarray.\n\n2019-10-24  Martin Liska  <mliska@suse.cz>\n\n\tPR fortran/92174\n\t* array.c (gfc_resolve_array_spec): Break the loop\n\tfor out of bounds index.\n\t* resolve.c (is_non_constant_shape_array): Likewise.\n\nFrom-SVN: r277367", "tree": {"sha": "26803e010c153593fe9cf23c845d7eae3e88e346", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26803e010c153593fe9cf23c845d7eae3e88e346"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d136595df77f75bc6e5132e26f09cad031f38c71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d136595df77f75bc6e5132e26f09cad031f38c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d136595df77f75bc6e5132e26f09cad031f38c71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d136595df77f75bc6e5132e26f09cad031f38c71/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0214d31a48f867b9b00134cea7223d35ed7865aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0214d31a48f867b9b00134cea7223d35ed7865aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0214d31a48f867b9b00134cea7223d35ed7865aa"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4e3910298b61def5b32e2c3f8507005272bb319d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d136595df77f75bc6e5132e26f09cad031f38c71/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d136595df77f75bc6e5132e26f09cad031f38c71/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d136595df77f75bc6e5132e26f09cad031f38c71", "patch": "@@ -1,3 +1,10 @@\n+2019-10-24  Martin Liska  <mliska@suse.cz>\n+\n+\tPR fortran/92174\n+\t* array.c (gfc_resolve_array_spec): Break the loop\n+\tfor out of bounds index.\n+\t* resolve.c (is_non_constant_shape_array): Likewise.\n+\n 2019-10-23  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tdump-parse-tree.c (show_expr): Add dumping of BT_BOZ constants."}, {"sha": "36223d2233daabc0e7b788ffa187aa91a1ca548e", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d136595df77f75bc6e5132e26f09cad031f38c71/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d136595df77f75bc6e5132e26f09cad031f38c71/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=d136595df77f75bc6e5132e26f09cad031f38c71", "patch": "@@ -410,6 +410,9 @@ gfc_resolve_array_spec (gfc_array_spec *as, int check_constant)\n \n   for (i = 0; i < as->rank + as->corank; i++)\n     {\n+      if (i == GFC_MAX_DIMENSIONS)\n+\treturn false;\n+\n       e = as->lower[i];\n       if (!resolve_array_bound (e, check_constant))\n \treturn false;"}, {"sha": "5deeb4fc87b0b62f2412d1b7b8977605deb111a9", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d136595df77f75bc6e5132e26f09cad031f38c71/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d136595df77f75bc6e5132e26f09cad031f38c71/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d136595df77f75bc6e5132e26f09cad031f38c71", "patch": "@@ -12266,6 +12266,9 @@ is_non_constant_shape_array (gfc_symbol *sym)\n \t simplification now.  */\n       for (i = 0; i < sym->as->rank + sym->as->corank; i++)\n \t{\n+\t  if (i == GFC_MAX_DIMENSIONS)\n+\t    break;\n+\n \t  e = sym->as->lower[i];\n \t  if (e && (!resolve_index_expr(e)\n \t\t    || !gfc_is_constant_expr (e)))"}]}