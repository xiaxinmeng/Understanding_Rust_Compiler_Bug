{"sha": "86b31d583a3657f11d930ff156c07b2e20ab05eb", "node_id": "C_kwDOANBUbNoAKDg2YjMxZDU4M2EzNjU3ZjExZDkzMGZmMTU2YzA3YjJlMjBhYjA1ZWI", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2023-04-15T02:53:36Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-04-15T02:53:57Z"}, "message": "rs6000: don't expect __ibm128 with 64-bit long double [PR99708]\n\nWhen long double is 64-bit wide, as on vxworks, the rs6000 backend\ndefines neither the __ibm128 type nor the __SIZEOF_IBM128__ macro, but\npr99708.c expected both to be always defined.  Adjust the test to\nmatch the implementation.\n\n\nCo-Authored-By: Kewen Lin <linkw@linux.ibm.com>\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR target/99708\n\t* gcc.target/powerpc/pr99708.c: Accept lack of\n\t__SIZEOF_IBM128__ when long double is 64-bit wide.", "tree": {"sha": "e639ca747cbc992740de04796fddc88a68f02f07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e639ca747cbc992740de04796fddc88a68f02f07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86b31d583a3657f11d930ff156c07b2e20ab05eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b31d583a3657f11d930ff156c07b2e20ab05eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b31d583a3657f11d930ff156c07b2e20ab05eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b31d583a3657f11d930ff156c07b2e20ab05eb/comments", "author": null, "committer": null, "parents": [{"sha": "9964df74a9e99e850bf9b0b6ff5c47133f846db8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9964df74a9e99e850bf9b0b6ff5c47133f846db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9964df74a9e99e850bf9b0b6ff5c47133f846db8"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "c6aa0511b89259dc288bc416b53b48f294622a5b", "filename": "gcc/testsuite/gcc.target/powerpc/pr99708.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b31d583a3657f11d930ff156c07b2e20ab05eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99708.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b31d583a3657f11d930ff156c07b2e20ab05eb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99708.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr99708.c?ref=86b31d583a3657f11d930ff156c07b2e20ab05eb", "patch": "@@ -14,9 +14,17 @@\n int main (void)\n {\n   if (__SIZEOF_FLOAT128__ != sizeof (__float128)\n-      || __SIZEOF_IBM128__ != sizeof (__ibm128))\n+  /* FIXME: Once type __ibm128 gets supported with long-double-64,\n+     we shouldn't need this conditional #ifdef and xfail.  */\n+#ifdef __SIZEOF_IBM128__\n+      || __SIZEOF_IBM128__ != sizeof (__ibm128)\n+#else\n+      || 1\n+#endif\n+     )\n     abort ();\n \n   return 0;\n }\n \n+/* { dg-xfail-run-if \"unsupported type __ibm128 with long-double-64\" { longdouble64 } } */"}]}