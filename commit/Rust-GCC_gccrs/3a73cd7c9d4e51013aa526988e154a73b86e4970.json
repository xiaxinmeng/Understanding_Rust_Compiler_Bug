{"sha": "3a73cd7c9d4e51013aa526988e154a73b86e4970", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E3M2NkN2M5ZDRlNTEwMTNhYTUyNjk4OGUxNTRhNzNiODZlNDk3MA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-10-10T19:14:07Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-10-10T19:14:07Z"}, "message": "[Darwin, machopic 4/n] Arrange to indirect IVARs when needed.\n\nObjective C V2 (m64) IVAR offset refs from Apple GCC-4.x have an indirection\nfor m64 code on PPC (which is the only 64b user for Mach-O PIC).  Apple GCC\n4.x places the indirections in the .data section, however this seems to have\nbeen unintentional - and we are placing the indirections in the non-lazy\nsymbol pointers section.\n\ngcc/ChangeLog:\n\n2019-10-10  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* config/darwin.c: Lookup Objective C metadata and force indirection\n\tfor IVAR refs.\n\nFrom-SVN: r276848", "tree": {"sha": "c06d581f219fc6df7f7a513a965ef7bc21535813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c06d581f219fc6df7f7a513a965ef7bc21535813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a73cd7c9d4e51013aa526988e154a73b86e4970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a73cd7c9d4e51013aa526988e154a73b86e4970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a73cd7c9d4e51013aa526988e154a73b86e4970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a73cd7c9d4e51013aa526988e154a73b86e4970/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb870e5e5ed4d5b784533d23afee637543e7dacc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb870e5e5ed4d5b784533d23afee637543e7dacc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb870e5e5ed4d5b784533d23afee637543e7dacc"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "f91ff7ec8c41624ab70a811f2d08eb0cc08d0c59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a73cd7c9d4e51013aa526988e154a73b86e4970/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a73cd7c9d4e51013aa526988e154a73b86e4970/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a73cd7c9d4e51013aa526988e154a73b86e4970", "patch": "@@ -1,3 +1,8 @@\n+2019-10-10  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c: Lookup Objective C metadata and force indirection\n+\tfor IVAR refs.\n+\n 2019-10-10  Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/rs6000.c (quad_address_p): Add check for prefixed"}, {"sha": "539ef759d31ea6bfacaf5edc06ef949761974a3a", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a73cd7c9d4e51013aa526988e154a73b86e4970/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a73cd7c9d4e51013aa526988e154a73b86e4970/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=3a73cd7c9d4e51013aa526988e154a73b86e4970", "patch": "@@ -1270,6 +1270,17 @@ darwin_encode_section_info (tree decl, rtx rtl, int first)\n       || (DECL_WEAK (decl) && ! MACHO_SYMBOL_HIDDEN_VIS_P (sym_ref))\n       || lookup_attribute (\"weakref\", DECL_ATTRIBUTES (decl)))\n      SYMBOL_REF_FLAGS (sym_ref) |= MACHO_SYMBOL_FLAG_MUST_INDIRECT;\n+\n+#if DARWIN_PPC\n+  /* Objective C V2 (m64) IVAR offset refs from Apple GCC-4.x have an\n+     indirection for m64 code on PPC.  Historically, these indirections\n+     also appear in the .data section.  */\n+  tree o2meta = lookup_attribute (\"OBJC2META\", DECL_ATTRIBUTES (decl));\n+  o2meta = o2meta ? TREE_VALUE (o2meta) : NULL_TREE;\n+\n+  if (o2meta && strncmp (IDENTIFIER_POINTER (o2meta), \"V2_IVRF\",7) == 0)\n+    SYMBOL_REF_FLAGS (sym_ref) |= MACHO_SYMBOL_FLAG_MUST_INDIRECT;\n+#endif\n }\n \n void"}]}