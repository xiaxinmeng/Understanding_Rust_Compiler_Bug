{"sha": "50926346e5b0fb75665a5ee5db3bbba77aa37e98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5MjYzNDZlNWIwZmI3NTY2NWE1ZWU1ZGIzYmJiYTc3YWEzN2U5OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-23T14:35:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-23T14:35:05Z"}, "message": "i386.c (ix86_prepare_sse_fp_compare_args): For GE/GT/UNLE/UNLT swap arguments and condition even for TARGET_AVX.\n\n\t* config/i386/i386.c (ix86_prepare_sse_fp_compare_args): For\n\tGE/GT/UNLE/UNLT swap arguments and condition even for TARGET_AVX.\n\n\t* gcc.target/i386/avxfp-1.c: New test.\n\t* gcc.target/i386/avxfp-2.c: New test.\n\nFrom-SVN: r179119", "tree": {"sha": "399b068d96b5519e2c6f9ccd41a907acc1c4e0d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/399b068d96b5519e2c6f9ccd41a907acc1c4e0d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50926346e5b0fb75665a5ee5db3bbba77aa37e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50926346e5b0fb75665a5ee5db3bbba77aa37e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50926346e5b0fb75665a5ee5db3bbba77aa37e98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50926346e5b0fb75665a5ee5db3bbba77aa37e98/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e4ef69ef80e6ef91c4897f0d6c0f7e47fdfd279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4ef69ef80e6ef91c4897f0d6c0f7e47fdfd279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4ef69ef80e6ef91c4897f0d6c0f7e47fdfd279"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "dec03cfdfde0c48c5b1df975f775c77b5565d076", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50926346e5b0fb75665a5ee5db3bbba77aa37e98", "patch": "@@ -1,3 +1,8 @@\n+2011-09-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_prepare_sse_fp_compare_args): For\n+\tGE/GT/UNLE/UNLT swap arguments and condition even for TARGET_AVX.\n+\n 2011-09-23  Ian Lance Taylor  <iant@google.com>\n \n \t* godump.c (go_define): Treat a single character in single quotes,"}, {"sha": "291d73f49194811432fb72f5a7b9496112ac8f92", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=50926346e5b0fb75665a5ee5db3bbba77aa37e98", "patch": "@@ -18735,15 +18735,13 @@ ix86_prepare_sse_fp_compare_args (rtx dest, enum rtx_code code,\n {\n   rtx tmp;\n \n-  /* AVX supports all the needed comparisons, no need to swap arguments\n-     nor help reload.  */\n-  if (TARGET_AVX)\n-    return code;\n-\n   switch (code)\n     {\n     case LTGT:\n     case UNEQ:\n+      /* AVX supports all the needed comparisons.  */\n+      if (TARGET_AVX)\n+\tbreak;\n       /* We have no LTGT as an operator.  We could implement it with\n \t NE & ORDERED, but this requires an extra temporary.  It's\n \t not clear that it's worth it.  */\n@@ -18760,6 +18758,9 @@ ix86_prepare_sse_fp_compare_args (rtx dest, enum rtx_code code,\n     case NE:\n     case UNORDERED:\n     case ORDERED:\n+      /* AVX has 3 operand comparisons, no need to swap anything.  */\n+      if (TARGET_AVX)\n+\tbreak;\n       /* For commutative operators, try to canonicalize the destination\n \t operand to be first in the comparison - this helps reload to\n \t avoid extra moves.  */\n@@ -18771,8 +18772,10 @@ ix86_prepare_sse_fp_compare_args (rtx dest, enum rtx_code code,\n     case GT:\n     case UNLE:\n     case UNLT:\n-      /* These are not supported directly.  Swap the comparison operands\n-\t to transform into something that is supported.  */\n+      /* These are not supported directly before AVX, and furthermore\n+\t ix86_expand_sse_fp_minmax only optimizes LT/UNGE.  Swap the\n+\t comparison operands to transform into something that is\n+\t supported.  */\n       tmp = *pop0;\n       *pop0 = *pop1;\n       *pop1 = tmp;"}, {"sha": "37f5beca9ea9ec5b23ed9a0d17c85c2e613d4b3f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50926346e5b0fb75665a5ee5db3bbba77aa37e98", "patch": "@@ -1,3 +1,8 @@\n+2011-09-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/avxfp-1.c: New test.\n+\t* gcc.target/i386/avxfp-2.c: New test.\n+\n 2011-09-23  Terry Guo  <terry.guo@arm.com>\n \n \t* gcc.c-torture/execute/941014-1.x: Deleted."}, {"sha": "70bc8f1edb494f2741ce144731acefd396f52c8f", "filename": "gcc/testsuite/gcc.target/i386/avxfp-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-1.c?ref=50926346e5b0fb75665a5ee5db3bbba77aa37e98", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler \"vmaxsd\" } } */\n+/* { dg-final { scan-assembler \"vminsd\" } } */\n+double x;\n+t()\n+{\n+  x=x>5?x:5;\n+}\n+\n+double x;\n+q()\n+{\n+  x=x<5?x:5;\n+}"}, {"sha": "c34a1bd7c36a1aa358ef2b3ded1025d10d709470", "filename": "gcc/testsuite/gcc.target/i386/avxfp-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50926346e5b0fb75665a5ee5db3bbba77aa37e98/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favxfp-2.c?ref=50926346e5b0fb75665a5ee5db3bbba77aa37e98", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler \"vmaxsd\" } } */\n+/* { dg-final { scan-assembler \"vminsd\" } } */\n+double x;\n+q()\n+{\n+  x=x<5?5:x;\n+}\n+\n+double x;\n+q1()\n+{\n+  x=x>5?5:x;\n+}"}]}