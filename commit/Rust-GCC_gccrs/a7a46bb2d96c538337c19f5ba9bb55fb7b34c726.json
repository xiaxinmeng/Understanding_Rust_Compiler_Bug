{"sha": "a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdhNDZiYjJkOTZjNTM4MzM3YzE5ZjViYTliYjU1ZmI3YjM0YzcyNg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2008-07-17T14:18:27Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-07-17T14:18:27Z"}, "message": "utils.c (create_var_decl_1): Relax expectations on the PUBLIC_FLAG argument...\n\n\tada/\n\t* utils.c (create_var_decl_1): Relax expectations on the PUBLIC_FLAG\n\targument, to apply to references in addition to definitions.  Prevent\n\tsetting TREE_STATIC on externals.\n\t(gnat_pushdecl): Always clear DECL_CONTEXT on public externals.\n\n\ttestsuite/\n\t* gnat.dg/tree_static_def.ad[bs]: Support for ...\n\t* gnat.dg/tree_static_use.adb: New test.\n\t* gnat.dg/decl_ctx_def.ads: Support for ...\n\t* gnat.dg/decl_ctx_use.ad[bs]: New test.\n\nFrom-SVN: r137923", "tree": {"sha": "3b74d3ff953a20ee785835248912fbefebafef7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b74d3ff953a20ee785835248912fbefebafef7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "711b299844b8eb77451d96a360f4525fc005279e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711b299844b8eb77451d96a360f4525fc005279e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711b299844b8eb77451d96a360f4525fc005279e"}], "stats": {"total": 86, "additions": 79, "deletions": 7}, "files": [{"sha": "696e9d1423c5d31bff75b9368086f64895b39d49", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -1,3 +1,10 @@\n+2008-07-17  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* utils.c (create_var_decl_1): Relax expectations on the PUBLIC_FLAG\n+\targument, to apply to references in addition to definitions.  Prevent\n+\tsetting TREE_STATIC on externals.\n+\t(gnat_pushdecl): Always clear DECL_CONTEXT on public externals.\n+\n 2008-07-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR documentation/15479"}, {"sha": "278255958856f1455d9328be3b3e6a722f030b73", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -418,9 +418,11 @@ gnat_poplevel ()\n void\n gnat_pushdecl (tree decl, Node_Id gnat_node)\n {\n-  /* If at top level, there is no context. But PARM_DECLs always go in the\n-     level of its function.  */\n-  if (global_bindings_p () && TREE_CODE (decl) != PARM_DECL)\n+  /* If this decl is public external or at toplevel, there is no context.\n+     But PARM_DECLs always go in the level of its function.  */\n+  if (TREE_CODE (decl) != PARM_DECL\n+      && ((DECL_EXTERNAL (decl) && TREE_PUBLIC (decl))\n+\t  || global_bindings_p ()))\n     DECL_CONTEXT (decl) = 0;\n   else\n     {\n@@ -1471,9 +1473,9 @@ create_type_decl (tree type_name, tree type, struct attrib *attr_list,\n    CONST_FLAG is true if this variable is constant, in which case we might\n    return a CONST_DECL node unless CONST_DECL_ALLOWED_P is false.\n \n-   PUBLIC_FLAG is true if this definition is to be made visible outside of\n-   the current compilation unit. This flag should be set when processing the\n-   variable definitions in a package specification.\n+   PUBLIC_FLAG is true if this is for a reference to a public entity or for a\n+   definition to be made visible outside of the current compilation unit, for\n+   instance variable definitions in a package specification.\n \n    EXTERN_FLAG is nonzero when processing an external variable declaration (as\n    opposed to a definition: no storage is to be allocated for the variable).\n@@ -1549,7 +1551,7 @@ create_var_decl_1 (tree var_name, tree asm_name, tree type, tree var_init,\n      variable if and only if it's not external. If we are not at the top level\n      we allocate automatic storage unless requested not to.  */\n   TREE_STATIC (var_decl)\n-    = public_flag || (global_bindings_p () ? !extern_flag : static_flag);\n+    = !extern_flag && (public_flag || static_flag || global_bindings_p ());\n \n   if (asm_name && VAR_OR_FUNCTION_DECL_P (var_decl))\n     SET_DECL_ASSEMBLER_NAME (var_decl, asm_name);"}, {"sha": "e5cd6a37c175eb9aa055b6326cd294f93a718c76", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -1,3 +1,10 @@\n+2008-07-17  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gnat.dg/tree_static_def.ad[bs]: Support for ...\n+\t* gnat.dg/tree_static_use.adb: New test.\n+\t* gnat.dg/decl_ctx_def.ads: Support for ...\n+\t* gnat.dg/decl_ctx_use.ad[bs]: New test.\n+\n 2008-07-17  Julian Brown  <julian@codesourcery.com>\n \t    Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "dd004dfe07af983aefdcf13355e314328b8dfdfd", "filename": "gcc/testsuite/gnat.dg/decl_ctx_def.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_def.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_def.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_def.ads?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -0,0 +1,4 @@\n+\n+package DECL_CTX_Def is\n+   X : exception;\n+end;"}, {"sha": "c4fde2b3eb27b723cc2ee09247e72345524a809c", "filename": "gcc/testsuite/gnat.dg/decl_ctx_use.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_use.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_use.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_use.adb?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -0,0 +1,14 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O1\" }\n+with DECL_CTX_Def; use DECL_CTX_Def;\n+package body DECL_CTX_Use is\n+   procedure Check_1 is\n+   begin\n+      raise X;\n+   end;\n+\n+   procedure Check_2 is\n+   begin\n+      raise X;\n+   end;\n+end;"}, {"sha": "2f38f8917938e845b23157ca53cc7b573e2f2385", "filename": "gcc/testsuite/gnat.dg/decl_ctx_use.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_use.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_use.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdecl_ctx_use.ads?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -0,0 +1,5 @@\n+\n+package DECL_CTX_Use is\n+   procedure Check_1;\n+   procedure Check_2;\n+end;"}, {"sha": "ed86747a8b156f62ef66e0e40a046d06b58c2e55", "filename": "gcc/testsuite/gnat.dg/tree_static_def.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_def.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_def.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_def.adb?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -0,0 +1,11 @@\n+\n+package body TREE_STATIC_Def is\n+\n+ procedure check (i : int; v : integer) is\n+ begin\n+    if i.value /= v then\n+      raise program_error;\n+    end if;\n+ end;\n+end;\n+"}, {"sha": "1ea58ee03e4984fb4a6a9b2a2ae6a6ff5d125d8e", "filename": "gcc/testsuite/gnat.dg/tree_static_def.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_def.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_def.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_def.ads?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -0,0 +1,10 @@\n+package TREE_STATIC_Def is\n+\n+   type Int is record\n+      Value : Integer;\n+   end record;\n+\n+   procedure check (I : Int; v : integer);\n+\n+   One : constant Int := (Value => 1);\n+end;"}, {"sha": "ff02b54565cdfdaeccf86853d673845db193a8bf", "filename": "gcc/testsuite/gnat.dg/tree_static_use.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_use.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a46bb2d96c538337c19f5ba9bb55fb7b34c726/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_use.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftree_static_use.adb?ref=a7a46bb2d96c538337c19f5ba9bb55fb7b34c726", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do run }\n+-- { dg-options \"-O1\" }\n+\n+with TREE_STATIC_Def; use TREE_STATIC_Def;\n+\n+procedure TREE_STATIC_Use is\n+   I : Int := One;\n+begin\n+   check (I, 1);\n+end;\n+\n+"}]}