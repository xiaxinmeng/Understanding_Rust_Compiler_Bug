{"sha": "338329a085ccce3c898694e0326831ea9a39ff05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4MzI5YTA4NWNjY2UzYzg5ODY5NGUwMzI2ODMxZWE5YTM5ZmYwNQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-06-11T09:19:14Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-06-11T09:19:14Z"}, "message": "[AArch64] Add CRC32 ACLE intrinsics testsuite.\n\n\t* gcc.target/aarch64/acle/acle.exp: New.\n\t* gcc.target/aarch64/acle/crc32b.c: New test.\n\t* gcc.target/aarch64/acle/crc32cb.c: Likewise.\n\t* gcc.target/aarch64/acle/crc32cd.c: Likewise.\n\t* gcc.target/aarch64/acle/crc32ch.c: Likewise.\n\t* gcc.target/aarch64/acle/crc32cw.c: Likewise.\n\t* gcc.target/aarch64/acle/crc32d.c: Likewise.\n\t* gcc.target/aarch64/acle/crc32h.c: Likewise.\n\t* gcc.target/aarch64/acle/crc32w.c: Likewise.\n--This line,gand those below, will be ignored--\n\nA    gcc/testsuite/gcc.target/aarch64/acle\nA    gcc/testsuite/gcc.target/aarch64/acle/acle.exp\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32b.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32d.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32cb.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32cd.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32w.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32h.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32cw.c\nA    gcc/testsuite/gcc.target/aarch64/acle/crc32ch.c\nM    gcc/testsuite/ChangeLog\n\nFrom-SVN: r211441", "tree": {"sha": "4d96a0b14b3bd007911ff84198786fb1855e4128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d96a0b14b3bd007911ff84198786fb1855e4128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338329a085ccce3c898694e0326831ea9a39ff05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338329a085ccce3c898694e0326831ea9a39ff05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338329a085ccce3c898694e0326831ea9a39ff05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338329a085ccce3c898694e0326831ea9a39ff05/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d357f260ce3312db63b4fb69bec250fa07de553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d357f260ce3312db63b4fb69bec250fa07de553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d357f260ce3312db63b4fb69bec250fa07de553"}], "stats": {"total": 167, "additions": 167, "deletions": 0}, "files": [{"sha": "ce69a0e234306974b265c085c6d7e4e24589b707", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -1,3 +1,15 @@\n+2014-06-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/acle/acle.exp: New.\n+\t* gcc.target/aarch64/acle/crc32b.c: New test.\n+\t* gcc.target/aarch64/acle/crc32cb.c: Likewise.\n+\t* gcc.target/aarch64/acle/crc32cd.c: Likewise.\n+\t* gcc.target/aarch64/acle/crc32ch.c: Likewise.\n+\t* gcc.target/aarch64/acle/crc32cw.c: Likewise.\n+\t* gcc.target/aarch64/acle/crc32d.c: Likewise.\n+\t* gcc.target/aarch64/acle/crc32h.c: Likewise.\n+\t* gcc.target/aarch64/acle/crc32w.c: Likewise.\n+\n 2014-06-11  Evgeny Stupachenko  <evstupac@gmail.com>\n \n \tPR tree-optimization/52252"}, {"sha": "e820f6c8c4d093b93aefc3b037a4f3328c571151", "filename": "gcc/testsuite/gcc.target/aarch64/acle/acle.exp", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Facle.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Facle.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Facle.exp?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,35 @@\n+# Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't an AArch64 target.\n+if ![istarget aarch64*-*-*] then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cCS\\]]] \\\n+\t\"\" \"\"\n+\n+# All done.\n+dg-finish"}, {"sha": "bf9a3d82a738a630f1208a2f8353c191781cca72", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32b.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32b.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32b ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32b (uint32_t arg0, uint8_t arg1)\n+{\n+  return __crc32b (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32b\\tw..?, w..?, w..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "a5a39b139dc6921b5b44d368f8e6c3ee50b60d0e", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32cb.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cb.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32cb ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32cb (uint32_t arg0, uint8_t arg1)\n+{\n+  return __crc32cb (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32cb\\tw..?, w..?, w..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "b50097a20d017442e3ca36775ab793ffbc4d5c2c", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32cd.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cd.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32cd ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32cd (uint32_t arg0, uint64_t arg1)\n+{\n+  return __crc32cd (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32cx\\tw..?, w..?, x..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "523faa25be93eabb23f7997ec5dcea1964be8d81", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32ch.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32ch.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32ch ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32ch (uint32_t arg0, uint16_t arg1)\n+{\n+  return __crc32ch (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32ch\\tw..?, w..?, w..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "531e60432091e8b6a182ff6c4578b3bbe14b0e54", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32cw.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32cw.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32cw ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32cw (uint32_t arg0, uint32_t arg1)\n+{\n+  return __crc32cw (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32cw\\tw..?, w..?, w..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "14fa627ba91851c662b82448eb6c269743168b03", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32d.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32d.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32d ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32d (uint32_t arg0, uint64_t arg1)\n+{\n+  return __crc32d (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32x\\tw..?, w..?, x..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "90819e615cb661b23aa70f82344051b1c0ac9646", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32h.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32h.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32h.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32h.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32h ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32h (uint32_t arg0, uint16_t arg1)\n+{\n+  return __crc32h (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32h\\tw..?, w..?, w..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "006f17635b81cba04f895817031c397978376f3f", "filename": "gcc/testsuite/gcc.target/aarch64/acle/crc32w.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32w.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338329a085ccce3c898694e0326831ea9a39ff05/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32w.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Facle%2Fcrc32w.c?ref=338329a085ccce3c898694e0326831ea9a39ff05", "patch": "@@ -0,0 +1,15 @@\n+/* Test the crc32w ACLE intrinsic.  */\n+\n+/* { dg-do assemble } */\n+/* { dg-options \"-save-temps -O2 -march=armv8-a+crc\" } */\n+\n+#include \"arm_acle.h\"\n+\n+uint32_t\n+test_crc32w (uint32_t arg0, uint32_t arg1)\n+{\n+  return __crc32w (arg0, arg1);\n+}\n+\n+/* { dg-final { scan-assembler \"crc32w\\tw..?, w..?, w..?\\n\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}]}