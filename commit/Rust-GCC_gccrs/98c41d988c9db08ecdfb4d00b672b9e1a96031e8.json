{"sha": "98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjNDFkOTg4YzlkYjA4ZWNkZmI0ZDAwYjY3MmI5ZTFhOTYwMzFlOA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-04-22T14:36:30Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-04-22T14:36:30Z"}, "message": "re PR target/20813 (ICE in gen_reg_rtx for 3 spec tests)\n\n\tPR target/20813\n\t* config/rs6000/default64.h (TARGET_DEFAULT): Add MASK_PPC_GFXOPT.\n\t* config/rs6000/rs6000.c (processor_target_table): Rename rs64a to\n\trs64.  Add MASK_PPC_GFXOPT to powerpc64 and rs64.\n\t(rs6000_init_libfuncs): Set TFmode optabs to xlq names if\n\tTARGET_XL_COMPAT.\n\t* doc/invoke.texi (PowerPC options): Change rs64a to rs64.\n\nFrom-SVN: r98562", "tree": {"sha": "c15ec9c2c21ef02f82debf843593c9c8af47e30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c15ec9c2c21ef02f82debf843593c9c8af47e30b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/comments", "author": null, "committer": null, "parents": [{"sha": "e6ef8d816eb03369d473bd2f482848e175999b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ef8d816eb03369d473bd2f482848e175999b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ef8d816eb03369d473bd2f482848e175999b49"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "643192939d93b1759f9abe26759f709fb4f408c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "patch": "@@ -1,3 +1,13 @@\n+2005-04-22 David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/20813\n+\t* config/rs6000/default64.h (TARGET_DEFAULT): Add MASK_PPC_GFXOPT.\n+\t* config/rs6000/rs6000.c (processor_target_table): Rename rs64a to\n+\trs64.  Add MASK_PPC_GFXOPT to powerpc64 and rs64.\n+\t(rs6000_init_libfuncs): Set TFmode optabs to xlq names if\n+\tTARGET_XL_COMPAT.\n+\t* doc/invoke.texi (PowerPC options): Change rs64a to rs64.\n+\n 2005-04-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* lambda-code.c: Define VEC(int,heap), VEC(lambda_loop,heap)."}, {"sha": "f94103ccce7b3af92e517055d4425514ec389955", "filename": "gcc/config/rs6000/default64.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2Fconfig%2Frs6000%2Fdefault64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdefault64.h?ref=98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "patch": "@@ -21,4 +21,5 @@ Boston, MA 02111-1307, USA.  */\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n-  (MASK_POWERPC | MASK_POWERPC64 | MASK_64BIT | MASK_NEW_MNEMONICS)\n+  (MASK_POWERPC | MASK_PPC_GFXOPT | \\\n+   MASK_POWERPC64 | MASK_64BIT | MASK_NEW_MNEMONICS)"}, {"sha": "90ffed037f6b1a68c6f2228c232eae771a07727a", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "patch": "@@ -1161,14 +1161,15 @@ rs6000_override_options (const char *default_cpu)\n \t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_MFCRF | MASK_POWERPC64},\n \t {\"powerpc\", PROCESSOR_POWERPC, POWERPC_BASE_MASK},\n \t {\"powerpc64\", PROCESSOR_POWERPC64,\n-\t  POWERPC_BASE_MASK | MASK_POWERPC64},\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_POWERPC64},\n \t {\"rios\", PROCESSOR_RIOS1, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n \t {\"rios1\", PROCESSOR_RIOS1, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n \t {\"rios2\", PROCESSOR_RIOS2,\n \t  MASK_POWER | MASK_POWER2 | MASK_MULTIPLE | MASK_STRING},\n \t {\"rsc\", PROCESSOR_PPC601, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n \t {\"rsc1\", PROCESSOR_PPC601, MASK_POWER | MASK_MULTIPLE | MASK_STRING},\n-\t {\"rs64a\", PROCESSOR_RS64A, POWERPC_BASE_MASK | MASK_POWERPC64},\n+\t {\"rs64\", PROCESSOR_RS64A,\n+\t  POWERPC_BASE_MASK | MASK_PPC_GFXOPT | MASK_POWERPC64}\n       };\n \n   const size_t ptt_size = ARRAY_SIZE (processor_target_table);\n@@ -8139,11 +8140,21 @@ rs6000_init_libfuncs (void)\n \t  set_conv_libfunc (ufix_optab, SImode, TFmode, \"_quitrunc\");\n \t}\n \n-      /* Standard AIX/Darwin/64-bit SVR4 quad floating point routines.  */\n-      set_optab_libfunc (add_optab, TFmode, \"__gcc_qadd\");\n-      set_optab_libfunc (sub_optab, TFmode, \"__gcc_qsub\");\n-      set_optab_libfunc (smul_optab, TFmode, \"__gcc_qmul\");\n-      set_optab_libfunc (sdiv_optab, TFmode, \"__gcc_qdiv\");\n+      /* AIX/Darwin/64-bit Linux quad floating point routines.  */\n+      if (!TARGET_XL_COMPAT)\n+\t{\n+\t  set_optab_libfunc (add_optab, TFmode, \"__gcc_qadd\");\n+\t  set_optab_libfunc (sub_optab, TFmode, \"__gcc_qsub\");\n+\t  set_optab_libfunc (smul_optab, TFmode, \"__gcc_qmul\");\n+\t  set_optab_libfunc (sdiv_optab, TFmode, \"__gcc_qdiv\");\n+\t}\n+      else\n+\t{\n+\t  set_optab_libfunc (add_optab, TFmode, \"_xlqadd\");\n+\t  set_optab_libfunc (sub_optab, TFmode, \"_xlqsub\");\n+\t  set_optab_libfunc (smul_optab, TFmode, \"_xlqmul\");\n+\t  set_optab_libfunc (sdiv_optab, TFmode, \"_xlqdiv\");\n+\t}\n     }\n   else\n     {"}, {"sha": "f273c2c51d812229918c43a7e10ec2ab0bf56a81", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c41d988c9db08ecdfb4d00b672b9e1a96031e8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=98c41d988c9db08ecdfb4d00b672b9e1a96031e8", "patch": "@@ -10565,7 +10565,7 @@ Supported values for @var{cpu_type} are @samp{401}, @samp{403},\n @samp{860}, @samp{970}, @samp{8540}, @samp{common}, @samp{ec603e}, @samp{G3},\n @samp{G4}, @samp{G5}, @samp{power}, @samp{power2}, @samp{power3},\n @samp{power4}, @samp{power5}, @samp{powerpc}, @samp{powerpc64},\n-@samp{rios}, @samp{rios1}, @samp{rios2}, @samp{rsc}, and @samp{rs64a}.\n+@samp{rios}, @samp{rios1}, @samp{rios2}, @samp{rsc}, and @samp{rs64}.\n \n @option{-mcpu=common} selects a completely generic processor.  Code\n generated under this option will run on any POWER or PowerPC processor."}]}