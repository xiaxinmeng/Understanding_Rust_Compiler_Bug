{"sha": "6e782a29b9b9ee1187cb832a3af9bb0ceeae6349", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3ODJhMjliOWI5ZWUxMTg3Y2I4MzJhM2FmOWJiMGNlZWFlNjM0OQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2009-04-22T16:09:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2009-04-22T16:09:40Z"}, "message": "arm.c (arm_size_rtx_costs): Treat a PLUS with a shift the same as a PLUS without a shift.\n\n\t* config/arm/arm.c (arm_size_rtx_costs): Treat a PLUS with a shift\n\tthe same as a PLUS without a shift.  Increase the cost of a\n\tCONST_INT in MULT.\n\nFrom-SVN: r146595", "tree": {"sha": "56bbeb52f7d8a28a67c27660283844b999e9262a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56bbeb52f7d8a28a67c27660283844b999e9262a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349/comments", "author": null, "committer": null, "parents": [{"sha": "38d2336a2356074209d055098c7646cc30eb43df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38d2336a2356074209d055098c7646cc30eb43df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38d2336a2356074209d055098c7646cc30eb43df"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "ec64ac249204fc10042e60995829691bb6d73591", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e782a29b9b9ee1187cb832a3af9bb0ceeae6349", "patch": "@@ -1,3 +1,9 @@\n+2009-04-22  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_size_rtx_costs): Treat a PLUS with a shift\n+\tthe same as a PLUS without a shift.  Increase the cost of a\n+\tCONST_INT in MULT.\n+\n 2009-04-22  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* Makefile.in: Update dependencies."}, {"sha": "547e7602f368eaa3aee4790517ed7efa337a0b47", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e782a29b9b9ee1187cb832a3af9bb0ceeae6349/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=6e782a29b9b9ee1187cb832a3af9bb0ceeae6349", "patch": "@@ -5681,6 +5681,16 @@ arm_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t  return false;\n \t}\n \n+      /* A shift as a part of ADD costs nothing.  */\n+      if (GET_CODE (XEXP (x, 0)) == MULT\n+\t  && power_of_two_operand (XEXP (XEXP (x, 0), 1), SImode))\n+\t{\n+\t  *total = COSTS_N_INSNS (TARGET_THUMB2 ? 2 : 1);\n+\t  *total += rtx_cost (XEXP (XEXP (x, 0), 0), code, false);\n+\t  *total += rtx_cost (XEXP (x, 1), code, false);\n+\t  return true;\n+\t}\n+\n       /* Fall through */\n     case AND: case XOR: case IOR:\n       if (mode == SImode)\n@@ -5774,7 +5784,10 @@ arm_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \n     case CONST_INT:\n       if (const_ok_for_arm (INTVAL (x)))\n-\t*total = COSTS_N_INSNS (outer_code == SET ? 1 : 0);\n+\t/* A multiplication by a constant requires another instruction\n+\t   to load the constant to a register.  */\n+\t*total = COSTS_N_INSNS ((outer_code == SET || outer_code == MULT)\n+\t\t\t\t? 1 : 0);\n       else if (const_ok_for_arm (~INTVAL (x)))\n \t*total = COSTS_N_INSNS (outer_code == AND ? 0 : 1);\n       else if (const_ok_for_arm (-INTVAL (x)))"}]}