{"sha": "26db82d823eeb8de6d630e24eed02e3c6162371b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZkYjgyZDgyM2VlYjhkZTZkNjMwZTI0ZWVkMDJlM2M2MTYyMzcxYg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-09-24T10:07:04Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-09-24T10:07:04Z"}, "message": "Allow to distinguish between three classes of builtin functions\n\nFrom-SVN: r29653", "tree": {"sha": "b6a1620ccaaf62ffd2a78f363d4bc02b528fabe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6a1620ccaaf62ffd2a78f363d4bc02b528fabe8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26db82d823eeb8de6d630e24eed02e3c6162371b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26db82d823eeb8de6d630e24eed02e3c6162371b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26db82d823eeb8de6d630e24eed02e3c6162371b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26db82d823eeb8de6d630e24eed02e3c6162371b/comments", "author": null, "committer": null, "parents": [{"sha": "fd903acc8077c9a197f2c2e05104579290453bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd903acc8077c9a197f2c2e05104579290453bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd903acc8077c9a197f2c2e05104579290453bcd"}], "stats": {"total": 756, "additions": 420, "deletions": 336}, "files": [{"sha": "587c95053395eff210b56b8b3e5449b73799ec7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1,3 +1,26 @@\n+Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* builtins.c (expand_builtin): Use MD_EXPAND_BUILTIN if defined.\n+\t* c-common.h (builtin_function): Don't declare.\n+\n+\t* c-decl.c (duplicate_decls): Use DECL_BUILT_IN_CLASS rather than\n+\tDECL_BUILT_IN.\n+\t(pushdecl): Likewise.\n+\t(finish_decl): Likewise.\n+\t(builtin_function): New arg CLASS.  Arg FUNCTION_CODE now of type\n+\tint.  All callers changed.\n+\tSet the builtin's DECL_BUILT_IN_CLASS.\n+\t* tree.h (enum built_in_class): New.\n+\t(enum built_in_function): Delete NOT_BUILT_IN.\n+\t(DECL_FUNCTION_CODE): The corresponding field in tree_decl is now\n+\tin a union.\n+\t(DECL_SET_FUNCTION_CODE): Likewise.\n+\t(DECL_BUILT_IN_CLASS): New macro.\n+\t(DECL_BUILT_IN): Use DECL_BUILT_IN_CLASS.\n+\t(struct tree_decl): Split builtin function code field into a\n+\tstruct.\n+\t(builtin_function): Declare.\n+\n Fri Sep 24 01:45:05 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* optabs.c (init_traps): Fix typo in last change."}, {"sha": "250177c9c45b1e2487fda986fec317fec7343e84", "filename": "gcc/builtins.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -2222,6 +2222,11 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n   tree arglist = TREE_OPERAND (exp, 1);\n   enum built_in_function fcode = DECL_FUNCTION_CODE (fndecl);\n \n+#ifdef MD_EXPAND_BUILTIN\n+  if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD)\n+    return MD_EXPAND_BUILTIN (exp, target, subtarget, mode, ignore);\n+#endif\n+  \n   /* When not optimizing, generate calls to library functions for a certain\n      set of builtins.  */\n   if (! optimize && ! CALLED_AS_BUILT_IN (fndecl)"}, {"sha": "afdea93853a57d3330bad590e67b73a39bca9c08", "filename": "gcc/c-common.c", "status": "modified", "additions": 93, "deletions": 72, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -3581,70 +3581,74 @@ c_common_nodes_and_builtins (cplus_mode, no_builtins, no_nonansi_builtins)\n \t\t\t\t\t\t\t    endlink))));\n \n   builtin_function (\"__builtin_constant_p\", default_function_type,\n-\t\t    BUILT_IN_CONSTANT_P, NULL_PTR);\n+\t\t    BUILT_IN_CONSTANT_P, BUILT_IN_NORMAL, NULL_PTR);\n \n   builtin_function (\"__builtin_return_address\", ptr_ftype_unsigned,\n-\t\t    BUILT_IN_RETURN_ADDRESS, NULL_PTR);\n+\t\t    BUILT_IN_RETURN_ADDRESS, BUILT_IN_NORMAL, NULL_PTR);\n \n   builtin_function (\"__builtin_frame_address\", ptr_ftype_unsigned,\n-\t\t    BUILT_IN_FRAME_ADDRESS, NULL_PTR);\n+\t\t    BUILT_IN_FRAME_ADDRESS, BUILT_IN_NORMAL, NULL_PTR);\n \n   builtin_function (\"__builtin_alloca\", ptr_ftype_sizetype,\n-\t\t    BUILT_IN_ALLOCA, \"alloca\");\n-  builtin_function (\"__builtin_ffs\", int_ftype_int, BUILT_IN_FFS, NULL_PTR);\n+\t\t    BUILT_IN_ALLOCA, BUILT_IN_NORMAL, \"alloca\");\n+  builtin_function (\"__builtin_ffs\", int_ftype_int, BUILT_IN_FFS,\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   /* Define alloca, ffs as builtins.\n      Declare _exit just to mark it as volatile.  */\n   if (! no_builtins && ! no_nonansi_builtins)\n     {\n       temp = builtin_function (\"alloca\", ptr_ftype_sizetype,\n-\t\t\t       BUILT_IN_ALLOCA, NULL_PTR);\n+\t\t\t       BUILT_IN_ALLOCA, BUILT_IN_NORMAL, NULL_PTR);\n       /* Suppress error if redefined as a non-function.  */\n       DECL_BUILT_IN_NONANSI (temp) = 1;\n-      temp = builtin_function (\"ffs\", int_ftype_int, BUILT_IN_FFS, NULL_PTR);\n+      temp = builtin_function (\"ffs\", int_ftype_int, BUILT_IN_FFS,\n+\t\t\t       BUILT_IN_NORMAL, NULL_PTR);\n       /* Suppress error if redefined as a non-function.  */\n       DECL_BUILT_IN_NONANSI (temp) = 1;\n       temp = builtin_function (\"_exit\", void_ftype_int,\n-\t\t\t       NOT_BUILT_IN, NULL_PTR);\n+\t\t\t       0, NOT_BUILT_IN, NULL_PTR);\n       TREE_THIS_VOLATILE (temp) = 1;\n       TREE_SIDE_EFFECTS (temp) = 1;\n       /* Suppress error if redefined as a non-function.  */\n       DECL_BUILT_IN_NONANSI (temp) = 1;\n     }\n \n-  builtin_function (\"__builtin_abs\", int_ftype_int, BUILT_IN_ABS, NULL_PTR);\n+  builtin_function (\"__builtin_abs\", int_ftype_int, BUILT_IN_ABS,\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_fabsf\", float_ftype_float, BUILT_IN_FABS,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_fabs\", double_ftype_double, BUILT_IN_FABS,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_fabsl\", ldouble_ftype_ldouble, BUILT_IN_FABS,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_labs\", long_ftype_long, BUILT_IN_LABS,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_saveregs\", ptr_ftype, BUILT_IN_SAVEREGS,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_classify_type\", default_function_type,\n-\t\t    BUILT_IN_CLASSIFY_TYPE, NULL_PTR);\n+\t\t    BUILT_IN_CLASSIFY_TYPE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_next_arg\", ptr_ftype, BUILT_IN_NEXT_ARG,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_args_info\", int_ftype_int, BUILT_IN_ARGS_INFO,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_setjmp\",\n \t\t    build_function_type (integer_type_node,\n \t\t\t\t\t tree_cons (NULL_TREE, ptr_type_node,\n \t\t\t\t\t\t    endlink)),\n-\t\t    BUILT_IN_SETJMP, NULL_PTR);\n+\t\t    BUILT_IN_SETJMP, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_longjmp\",\n \t\t    build_function_type (void_type_node,\n \t\t\t\t\t tree_cons (NULL_TREE, ptr_type_node,\n \t\t\t\t\t\t    tree_cons (NULL_TREE,\n \t\t\t\t\t\t\t       integer_type_node,\n \t\t\t\t\t\t\t       endlink))),\n-\t\t    BUILT_IN_LONGJMP, NULL_PTR);\n-  builtin_function (\"__builtin_trap\", void_ftype, BUILT_IN_TRAP, NULL_PTR);\n+\t\t    BUILT_IN_LONGJMP, BUILT_IN_NORMAL, NULL_PTR);\n+  builtin_function (\"__builtin_trap\", void_ftype, BUILT_IN_TRAP,\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n \n   /* Untyped call and return.  */\n   builtin_function (\"__builtin_apply_args\", ptr_ftype,\n-\t\t    BUILT_IN_APPLY_ARGS, NULL_PTR);\n+\t\t    BUILT_IN_APPLY_ARGS, BUILT_IN_NORMAL, NULL_PTR);\n \n   temp = tree_cons (NULL_TREE,\n \t\t    build_pointer_type (build_function_type (void_type_node,\n@@ -3656,31 +3660,31 @@ c_common_nodes_and_builtins (cplus_mode, no_builtins, no_nonansi_builtins)\n \t\t\t\t\t  endlink)));\n   builtin_function (\"__builtin_apply\",\n \t\t    build_function_type (ptr_type_node, temp),\n-\t\t    BUILT_IN_APPLY, NULL_PTR);\n+\t\t    BUILT_IN_APPLY, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_return\", void_ftype_ptr,\n-\t\t    BUILT_IN_RETURN, NULL_PTR);\n+\t\t    BUILT_IN_RETURN, BUILT_IN_NORMAL, NULL_PTR);\n \n   /* Support for varargs.h and stdarg.h.  */\n   builtin_function (\"__builtin_varargs_start\",\n \t\t    build_function_type (void_type_node,\n \t\t\t\t\t tree_cons (NULL_TREE,\n \t\t\t\t\t\t    va_list_ptr_type_node,\n \t\t\t\t\t\t    endlink)),\n-\t\t    BUILT_IN_VARARGS_START, NULL_PTR);\n+\t\t    BUILT_IN_VARARGS_START, BUILT_IN_NORMAL, NULL_PTR);\n \n   builtin_function (\"__builtin_stdarg_start\",\n \t\t    build_function_type (void_type_node,\n \t\t\t\t\t tree_cons (NULL_TREE,\n \t\t\t\t\t\t    va_list_ptr_type_node,\n \t\t\t\t\t\t    NULL_TREE)),\n-\t\t    BUILT_IN_STDARG_START, NULL_PTR);\n+\t\t    BUILT_IN_STDARG_START, BUILT_IN_NORMAL, NULL_PTR);\n \n   builtin_function (\"__builtin_va_end\",\n \t\t    build_function_type (void_type_node,\n \t\t\t\t\t tree_cons (NULL_TREE,\n \t\t\t\t\t\t    va_list_arg_type_node,\n \t\t\t\t\t\t    endlink)),\n-\t\t    BUILT_IN_VA_END, NULL_PTR);\n+\t\t    BUILT_IN_VA_END, BUILT_IN_NORMAL, NULL_PTR);\n \n   builtin_function (\"__builtin_va_copy\",\n \t\t    build_function_type (void_type_node,\n@@ -3689,72 +3693,87 @@ c_common_nodes_and_builtins (cplus_mode, no_builtins, no_nonansi_builtins)\n \t\t\t\t\t\t    tree_cons (NULL_TREE,\n \t\t\t\t\t\t      va_list_arg_type_node,\n \t\t\t\t\t\t      endlink))),\n-\t\t    BUILT_IN_VA_COPY, NULL_PTR);\n+\t\t    BUILT_IN_VA_COPY, BUILT_IN_NORMAL, NULL_PTR);\n \n   /* Currently under experimentation.  */\n   builtin_function (\"__builtin_memcpy\", memcpy_ftype, BUILT_IN_MEMCPY,\n-\t\t    \"memcpy\");\n+\t\t    BUILT_IN_NORMAL, \"memcpy\");\n   builtin_function (\"__builtin_memcmp\", int_ftype_cptr_cptr_sizet,\n-\t\t    BUILT_IN_MEMCMP, \"memcmp\");\n+\t\t    BUILT_IN_MEMCMP, BUILT_IN_NORMAL, \"memcmp\");\n   builtin_function (\"__builtin_memset\", memset_ftype, BUILT_IN_MEMSET,\n-\t\t    \"memset\");\n+\t\t    BUILT_IN_NORMAL, \"memset\");\n   builtin_function (\"__builtin_strcmp\", int_ftype_string_string,\n-\t\t    BUILT_IN_STRCMP, \"strcmp\");\n+\t\t    BUILT_IN_STRCMP, BUILT_IN_NORMAL, \"strcmp\");\n   builtin_function (\"__builtin_strcpy\", string_ftype_ptr_ptr,\n-\t\t    BUILT_IN_STRCPY, \"strcpy\");\n+\t\t    BUILT_IN_STRCPY, BUILT_IN_NORMAL, \"strcpy\");\n   builtin_function (\"__builtin_strlen\", strlen_ftype,\n-\t\t    BUILT_IN_STRLEN, \"strlen\");\n+\t\t    BUILT_IN_STRLEN, BUILT_IN_NORMAL, \"strlen\");\n   builtin_function (\"__builtin_sqrtf\", float_ftype_float, \n-\t\t    BUILT_IN_FSQRT, \"sqrtf\");\n+\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrtf\");\n   builtin_function (\"__builtin_fsqrt\", double_ftype_double,\n-\t\t    BUILT_IN_FSQRT, \"sqrt\");\n+\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrt\");\n   builtin_function (\"__builtin_sqrtl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_FSQRT, \"sqrtl\");\n+\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrtl\");\n   builtin_function (\"__builtin_sinf\", float_ftype_float, \n-\t\t    BUILT_IN_SIN, \"sinf\");\n+\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sinf\");\n   builtin_function (\"__builtin_sin\", double_ftype_double, \n-\t\t    BUILT_IN_SIN, \"sin\");\n+\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sin\");\n   builtin_function (\"__builtin_sinl\", ldouble_ftype_ldouble, \n-\t\t    BUILT_IN_SIN, \"sinl\");\n+\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sinl\");\n   builtin_function (\"__builtin_cosf\", float_ftype_float, \n-\t\t    BUILT_IN_COS, \"cosf\");\n+\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cosf\");\n   builtin_function (\"__builtin_cos\", double_ftype_double, \n-\t\t    BUILT_IN_COS, \"cos\");\n+\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cos\");\n   builtin_function (\"__builtin_cosl\", ldouble_ftype_ldouble, \n-\t\t    BUILT_IN_COS, \"cosl\");\n+\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cosl\");\n \n   if (! no_builtins)\n     {\n-      builtin_function (\"abs\", int_ftype_int, BUILT_IN_ABS, NULL_PTR);\n-      builtin_function (\"fabsf\", float_ftype_float, BUILT_IN_FABS, NULL_PTR);\n-      builtin_function (\"fabs\", double_ftype_double, BUILT_IN_FABS, NULL_PTR);\n+      builtin_function (\"abs\", int_ftype_int, BUILT_IN_ABS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"fabsf\", float_ftype_float, BUILT_IN_FABS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"fabs\", double_ftype_double, BUILT_IN_FABS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n       builtin_function (\"fabsl\", ldouble_ftype_ldouble, BUILT_IN_FABS,\n-\t\t\tNULL_PTR);\n-      builtin_function (\"labs\", long_ftype_long, BUILT_IN_LABS, NULL_PTR);\n-      builtin_function (\"memcpy\", memcpy_ftype, BUILT_IN_MEMCPY, NULL_PTR);\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"labs\", long_ftype_long, BUILT_IN_LABS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"memcpy\", memcpy_ftype, BUILT_IN_MEMCPY,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n       builtin_function (\"memcmp\", int_ftype_cptr_cptr_sizet, BUILT_IN_MEMCMP,\n-\t\t\tNULL_PTR);\n-      builtin_function (\"memset\", memset_ftype, BUILT_IN_MEMSET, NULL_PTR);\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"memset\", memset_ftype, BUILT_IN_MEMSET,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n       builtin_function (\"strcmp\", int_ftype_string_string, BUILT_IN_STRCMP,\n-\t\t\tNULL_PTR);\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n       builtin_function (\"strcpy\", string_ftype_ptr_ptr, BUILT_IN_STRCPY,\n-\t\t\tNULL_PTR);\n-      builtin_function (\"strlen\", strlen_ftype, BUILT_IN_STRLEN, NULL_PTR);\n-      builtin_function (\"sqrtf\", float_ftype_float, BUILT_IN_FSQRT, NULL_PTR);\n-      builtin_function (\"sqrt\", double_ftype_double, BUILT_IN_FSQRT, NULL_PTR);\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"strlen\", strlen_ftype, BUILT_IN_STRLEN,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"sqrtf\", float_ftype_float, BUILT_IN_FSQRT,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"sqrt\", double_ftype_double, BUILT_IN_FSQRT,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n       builtin_function (\"sqrtl\", ldouble_ftype_ldouble, BUILT_IN_FSQRT,\n-\t\t\tNULL_PTR);\n-      builtin_function (\"sinf\", float_ftype_float, BUILT_IN_SIN, NULL_PTR);\n-      builtin_function (\"sin\", double_ftype_double, BUILT_IN_SIN, NULL_PTR);\n-      builtin_function (\"sinl\", ldouble_ftype_ldouble, BUILT_IN_SIN, NULL_PTR);\n-      builtin_function (\"cosf\", float_ftype_float, BUILT_IN_COS, NULL_PTR);\n-      builtin_function (\"cos\", double_ftype_double, BUILT_IN_COS, NULL_PTR);\n-      builtin_function (\"cosl\", ldouble_ftype_ldouble, BUILT_IN_COS, NULL_PTR);\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"sinf\", float_ftype_float, BUILT_IN_SIN,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"sin\", double_ftype_double, BUILT_IN_SIN,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"sinl\", ldouble_ftype_ldouble, BUILT_IN_SIN,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"cosf\", float_ftype_float, BUILT_IN_COS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"cos\", double_ftype_double, BUILT_IN_COS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n+      builtin_function (\"cosl\", ldouble_ftype_ldouble, BUILT_IN_COS,\n+\t\t\tBUILT_IN_NORMAL, NULL_PTR);\n \n       /* Declare these functions volatile\n \t to avoid spurious \"control drops through\" warnings.  */\n       temp = builtin_function (\"abort\", cplus_mode ? void_ftype : void_ftype_any,\n-\t\t\t       NOT_BUILT_IN, NULL_PTR);\n+\t\t\t       0, NOT_BUILT_IN, NULL_PTR);\n       TREE_THIS_VOLATILE (temp) = 1;\n       TREE_SIDE_EFFECTS (temp) = 1;\n \n@@ -3765,7 +3784,7 @@ c_common_nodes_and_builtins (cplus_mode, no_builtins, no_nonansi_builtins)\n #endif\n       temp = builtin_function (\"exit\",\n \t\t\t       cplus_mode ? void_ftype_int : void_ftype_any,\n-\t\t\t       NOT_BUILT_IN, NULL_PTR);\n+\t\t\t       0, NOT_BUILT_IN, NULL_PTR);\n       TREE_THIS_VOLATILE (temp) = 1;\n       TREE_SIDE_EFFECTS (temp) = 1;\n \n@@ -3779,20 +3798,22 @@ c_common_nodes_and_builtins (cplus_mode, no_builtins, no_nonansi_builtins)\n #if 0\n   /* Support for these has not been written in either expand_builtin\n      or build_function_call.  */\n-  builtin_function (\"__builtin_div\", default_ftype, BUILT_IN_DIV, NULL_PTR);\n-  builtin_function (\"__builtin_ldiv\", default_ftype, BUILT_IN_LDIV, NULL_PTR);\n+  builtin_function (\"__builtin_div\", default_ftype, BUILT_IN_DIV,\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n+  builtin_function (\"__builtin_ldiv\", default_ftype, BUILT_IN_LDIV,\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_ffloor\", double_ftype_double, BUILT_IN_FFLOOR,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_fceil\", double_ftype_double, BUILT_IN_FCEIL,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_fmod\", double_ftype_double_double,\n-\t\t    BUILT_IN_FMOD, NULL_PTR);\n+\t\t    BUILT_IN_FMOD, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_frem\", double_ftype_double_double,\n-\t\t    BUILT_IN_FREM, NULL_PTR);\n+\t\t    BUILT_IN_FREM, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_getexp\", double_ftype_double, BUILT_IN_GETEXP,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_getman\", double_ftype_double, BUILT_IN_GETMAN,\n-\t\t    NULL_PTR);\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n #endif\n \n   /* ??? Perhaps there's a better place to do this.  But it is related"}, {"sha": "86abdbf3d0326b4b9b49b479267b2ca04a58a443", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -113,10 +113,6 @@ extern tree truthvalue_conversion\t\tPROTO((tree));\n extern tree type_for_mode\t\t\tPROTO((enum machine_mode, int));\n extern tree type_for_size\t\t\tPROTO((unsigned, int));\n \n-/* Declare a predefined function.  Return the declaration.  This function is\n-   provided by each language frontend.  */\n-extern tree builtin_function\t\t\tPROTO((const char *, tree, enum built_in_function, const char *));\n-\n /* Build tree nodes and builtin functions common to both C and C++ language\n    frontends.  */\n extern void c_common_nodes_and_builtins\t\tPROTO((int, int, int));"}, {"sha": "289deeb5c20d1eda0bb70e6d4bc82c0189476e26", "filename": "gcc/c-decl.c", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1939,14 +1939,14 @@ duplicate_decls (newdecl, olddecl, different_binding_level)\n \t      if (! different_binding_level)\n \t\t{\n \t\t  TREE_TYPE (olddecl) = TREE_TYPE (newdecl);\n-\t\t  DECL_BUILT_IN (olddecl) = 0;\n+\t\t  DECL_BUILT_IN_CLASS (olddecl) = NOT_BUILT_IN;\n \t\t}\n \t    }\n \t  else\n \t    {\n \t      /* If redeclaring a builtin function, and not a definition,\n \t\t it stays built in.  */\n-\t      DECL_BUILT_IN (newdecl) = 1;\n+\t      DECL_BUILT_IN_CLASS (newdecl) = DECL_BUILT_IN_CLASS (olddecl);\n \t      DECL_FUNCTION_CODE (newdecl) = DECL_FUNCTION_CODE (olddecl);\n \t    }\n \t}\n@@ -2333,7 +2333,7 @@ pushdecl (x)\n \t\t  /* Inner extern decl is built-in if global one is.  */\n \t\t  if (DECL_BUILT_IN (oldglobal))\n \t\t    {\n-\t\t      DECL_BUILT_IN (x) = DECL_BUILT_IN (oldglobal);\n+\t\t      DECL_BUILT_IN_CLASS (x) = DECL_BUILT_IN_CLASS (oldglobal);\n \t\t      DECL_FUNCTION_CODE (x) = DECL_FUNCTION_CODE (oldglobal);\n \t\t    }\n \t\t  /* Keep the arg types from a file-scope fcn defn.  */\n@@ -3044,23 +3044,24 @@ init_decl_processing ()\n \n   builtin_function (\"__builtin_aggregate_incoming_address\",\n \t\t    build_function_type (ptr_type_node, NULL_TREE),\n-\t\t    BUILT_IN_AGGREGATE_INCOMING_ADDRESS, NULL_PTR);\n+\t\t    BUILT_IN_AGGREGATE_INCOMING_ADDRESS,\n+\t\t    BUILT_IN_NORMAL, NULL_PTR);\n \n   /* Hooks for the DWARF 2 __throw routine.  */\n   builtin_function (\"__builtin_unwind_init\",\n \t\t    build_function_type (void_type_node, endlink),\n-\t\t    BUILT_IN_UNWIND_INIT, NULL_PTR);\n+\t\t    BUILT_IN_UNWIND_INIT, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_dwarf_cfa\", ptr_ftype_void,\n-\t\t    BUILT_IN_DWARF_CFA, NULL_PTR);\n+\t\t    BUILT_IN_DWARF_CFA, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_dwarf_fp_regnum\",\n \t\t    build_function_type (unsigned_type_node, endlink),\n-\t\t    BUILT_IN_DWARF_FP_REGNUM, NULL_PTR);\n+\t\t    BUILT_IN_DWARF_FP_REGNUM, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_dwarf_reg_size\", int_ftype_int,\n-\t\t    BUILT_IN_DWARF_REG_SIZE, NULL_PTR);\t\t    \n+\t\t    BUILT_IN_DWARF_REG_SIZE, BUILT_IN_NORMAL, NULL_PTR);\t\t    \n   builtin_function (\"__builtin_frob_return_addr\", ptr_ftype_ptr,\n-\t\t    BUILT_IN_FROB_RETURN_ADDR, NULL_PTR);\n+\t\t    BUILT_IN_FROB_RETURN_ADDR, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function (\"__builtin_extract_return_addr\", ptr_ftype_ptr,\n-\t\t    BUILT_IN_EXTRACT_RETURN_ADDR, NULL_PTR);\n+\t\t    BUILT_IN_EXTRACT_RETURN_ADDR, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function\n     (\"__builtin_eh_return\",\n      build_function_type (void_type_node,\n@@ -3070,7 +3071,7 @@ init_decl_processing ()\n \t\t\t\t\t        tree_cons (NULL_TREE,\n \t\t\t\t\t\t\t   ptr_type_node,\n \t\t\t\t\t\t\t   endlink)))),\n-     BUILT_IN_EH_RETURN, NULL_PTR);\n+     BUILT_IN_EH_RETURN, BUILT_IN_NORMAL, NULL_PTR);\n \n   pedantic_lvalues = pedantic;\n \n@@ -3111,10 +3112,11 @@ init_decl_processing ()\n    the name to be called if we can't opencode the function.  */\n \n tree\n-builtin_function (name, type, function_code, library_name)\n+builtin_function (name, type, function_code, class, library_name)\n      const char *name;\n      tree type;\n-     enum built_in_function function_code;\n+     int function_code;\n+     enum built_in_class class;\n      const char *library_name;\n {\n   tree decl = build_decl (FUNCTION_DECL, get_identifier (name), type);\n@@ -3129,11 +3131,9 @@ builtin_function (name, type, function_code, library_name)\n     DECL_ASSEMBLER_NAME (decl) = get_identifier (library_name);\n   make_decl_rtl (decl, NULL_PTR, 1);\n   pushdecl (decl);\n-  if (function_code != NOT_BUILT_IN)\n-    {\n-      DECL_BUILT_IN (decl) = 1;\n-      DECL_FUNCTION_CODE (decl) = function_code;\n-    }\n+  DECL_BUILT_IN_CLASS (decl) = class;\n+  DECL_FUNCTION_CODE (decl) = function_code;\n+\n   /* Warn if a function in the namespace for users\n      is used without an occasion to consider it declared.  */\n   if (name[0] != '_' || name[1] != '_')\n@@ -3567,7 +3567,7 @@ finish_decl (decl, init, asmspec_tree)\n      name.  */\n   if (TREE_CODE (decl) == FUNCTION_DECL && asmspec)\n       {\n-\tDECL_BUILT_IN (decl) = 0;\n+\tDECL_BUILT_IN_CLASS (decl) = NOT_BUILT_IN;\n \tDECL_RTL (decl) = 0;\n \tDECL_ASSEMBLER_NAME (decl) = get_identifier (asmspec);\n       }"}, {"sha": "779e08f51db1919148dea5207ddc03d87d6ec5b0", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1,3 +1,10 @@\n+Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* ch-tree.h (builtin_function): Don't declare.\n+\t* decl.c (builtin_function): New arg CLASS.  Arg FUNCTION_CODE now of\n+ \ttype int.  All callers changed.\n+\tSet the builtin's DECL_BUILT_IN_CLASS.\n+\n 1999-09-20  Nick Clifton  <nickc@cygnus.com>\n \n \t* lang.c (lang_decode_option): Extend comment."}, {"sha": "40e7b13b1594b063a3650a0a6a08c1b844fd8442", "filename": "gcc/ch/ch-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Fch-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Fch-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fch-tree.h?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -664,7 +664,6 @@ extern void nonvalue_begin_loop_scope           PROTO((void));\n extern void nonvalue_end_loop_scope             PROTO((void));\n \n extern tree build_enumerator                    PROTO((tree, tree));\n-extern tree builtin_function                    PROTO((const char *, tree, enum built_in_function function_, const char *));\n extern tree c_build_type_variant                PROTO((tree, int, int));\n extern int  c_decode_option                     PROTO((int, char **));\n extern void c_mark_varargs                      PROTO((void));"}, {"sha": "8b651796a16731a0fc2cd8c209068a89c3ad1d4f", "filename": "gcc/ch/decl.c", "status": "modified", "additions": 83, "deletions": 85, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fdecl.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -3898,89 +3898,89 @@ init_decl_processing ()\n /* These are compiler-internal function calls, not intended\n    to be directly called by user code */\n   builtin_function (\"__allocate\", ptr_ftype_luns_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"_allocate_global_memory\", void_ftype_refptr_int_ptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"_allocate_memory\", void_ftype_refptr_int_ptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__andpowerset\", bool_ftype_ptr_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__bitsetpowerset\", void_ftype_ptr_int_int_int_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__cardpowerset\", long_ftype_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__cause_ex1\", void_ftype_cptr_cptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__concatstring\", ptr_ftype_ptr_ptr_int_ptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__continue\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__diffpowerset\", void_ftype_ptr_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__eqpowerset\", bool_ftype_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__ffsetclrpowerset\", find_bit_ftype,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__flsetclrpowerset\", find_bit_ftype,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__flsetpowerset\", int_ftype_ptr_luns_long_ptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__ffsetpowerset\", int_ftype_ptr_luns_long_ptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__inbitstring\", bool_ftype_luns_ptr_luns_long_ptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__inpowerset\", bool_ftype_luns_ptr_luns_long, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__lepowerset\", bool_ftype_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__ltpowerset\", bool_ftype_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   /* Currently under experimentation.  */\n   builtin_function (\"memmove\", memcpy_ftype,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"memcmp\", memcmp_ftype,\n-                    NOT_BUILT_IN, NULL_PTR);\n+                    0, NOT_BUILT_IN, NULL_PTR);\n \n   /* this comes from c-decl.c (init_decl_processing) */\n   builtin_function (\"__builtin_alloca\",\n \t\t    build_function_type (ptr_type_node,\n \t\t\t\t\t tree_cons (NULL_TREE,\n \t\t\t\t\t\t    sizetype,\n \t\t\t\t\t\t    endlink)),\n-\t\t    BUILT_IN_ALLOCA, \"alloca\");\n+\t\t    BUILT_IN_ALLOCA, BUILT_IN_NORMAL, \"alloca\");\n \n   builtin_function (\"memset\", ptr_ftype_ptr_int_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__notpowerset\", bool_ftype_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__orpowerset\", bool_ftype_ptr_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__psslice\", void_ftype_ptr_int_ptr_int_int_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__pscpy\", void_ftype_ptr_luns_luns_cptr_luns_luns_luns,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"_return_memory\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__setbitpowerset\", void_ftype_ptr_luns_long_long_bool_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__terminate\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__unhandled_ex\", void_ftype_cptr_cptr_int, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__xorpowerset\", bool_ftype_ptr_ptr_ptr_luns, \n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n \n   /* declare floating point functions */\n-  builtin_function (\"__sin\", double_ftype_double, NOT_BUILT_IN, \"sin\");\n-  builtin_function (\"__cos\", double_ftype_double, NOT_BUILT_IN, \"cos\");\n-  builtin_function (\"__tan\", double_ftype_double, NOT_BUILT_IN, \"tan\");\n-  builtin_function (\"__asin\", double_ftype_double, NOT_BUILT_IN, \"asin\");\n-  builtin_function (\"__acos\", double_ftype_double, NOT_BUILT_IN, \"acos\");\n-  builtin_function (\"__atan\", double_ftype_double, NOT_BUILT_IN, \"atan\");\n-  builtin_function (\"__exp\", double_ftype_double, NOT_BUILT_IN, \"exp\");\n-  builtin_function (\"__log\", double_ftype_double, NOT_BUILT_IN, \"log\");\n-  builtin_function (\"__log10\", double_ftype_double, NOT_BUILT_IN, \"log10\");\n-  builtin_function (\"__sqrt\", double_ftype_double, NOT_BUILT_IN, \"sqrt\");\n+  builtin_function (\"__sin\", double_ftype_double, 0, NOT_BUILT_IN, \"sin\");\n+  builtin_function (\"__cos\", double_ftype_double, 0, NOT_BUILT_IN, \"cos\");\n+  builtin_function (\"__tan\", double_ftype_double, 0, NOT_BUILT_IN, \"tan\");\n+  builtin_function (\"__asin\", double_ftype_double, 0, NOT_BUILT_IN, \"asin\");\n+  builtin_function (\"__acos\", double_ftype_double, 0, NOT_BUILT_IN, \"acos\");\n+  builtin_function (\"__atan\", double_ftype_double, 0, NOT_BUILT_IN, \"atan\");\n+  builtin_function (\"__exp\", double_ftype_double, 0, NOT_BUILT_IN, \"exp\");\n+  builtin_function (\"__log\", double_ftype_double, 0, NOT_BUILT_IN, \"log\");\n+  builtin_function (\"__log10\", double_ftype_double, 0, NOT_BUILT_IN, \"log10\");\n+  builtin_function (\"__sqrt\", double_ftype_double, 0, NOT_BUILT_IN, \"sqrt\");\n \n   tasking_init ();\n   timing_init ();\n@@ -3991,114 +3991,114 @@ init_decl_processing ()\n      the same names.  Note the lack of a leading underscore. */\n   builtin_function ((ignore_case || ! special_UC) ?  \"abs\" : \"ABS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CH_ABS, NULL_PTR);\n+\t\t    BUILT_IN_CH_ABS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"abstime\" : \"ABSTIME\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ABSTIME, NULL_PTR);\n+\t\t    BUILT_IN_ABSTIME, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"allocate\" : \"ALLOCATE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ALLOCATE, NULL_PTR);\n+\t\t    BUILT_IN_ALLOCATE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"allocate_memory\" : \"ALLOCATE_MEMORY\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ALLOCATE_MEMORY, NULL_PTR);\n+\t\t    BUILT_IN_ALLOCATE_MEMORY, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"addr\" : \"ADDR\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ADDR, NULL_PTR);\n+\t\t    BUILT_IN_ADDR, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"allocate_global_memory\" : \"ALLOCATE_GLOBAL_MEMORY\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ALLOCATE_GLOBAL_MEMORY, NULL_PTR);\n+\t\t    BUILT_IN_ALLOCATE_GLOBAL_MEMORY, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"arccos\" : \"ARCCOS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ARCCOS, NULL_PTR);\n+\t\t    BUILT_IN_ARCCOS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"arcsin\" : \"ARCSIN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ARCSIN, NULL_PTR);\n+\t\t    BUILT_IN_ARCSIN, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"arctan\" : \"ARCTAN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ARCTAN, NULL_PTR);\n+\t\t    BUILT_IN_ARCTAN, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"card\" : \"CARD\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CARD, NULL_PTR);\n+\t\t    BUILT_IN_CARD, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"cos\" : \"COS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CH_COS, NULL_PTR);\n+\t\t    BUILT_IN_CH_COS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"days\" : \"DAYS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_DAYS, NULL_PTR);\n+\t\t    BUILT_IN_DAYS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"descr\" : \"DESCR\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_DESCR, NULL_PTR);\n+\t\t    BUILT_IN_DESCR, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"getstack\" : \"GETSTACK\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GETSTACK, NULL_PTR);\n+\t\t    BUILT_IN_GETSTACK, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"exp\" : \"EXP\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_EXP, NULL_PTR);\n+\t\t    BUILT_IN_EXP, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"hours\" : \"HOURS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_HOURS, NULL_PTR);\n+\t\t    BUILT_IN_HOURS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"inttime\" : \"INTTIME\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_INTTIME, NULL_PTR);\n+\t\t    BUILT_IN_INTTIME, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"length\" : \"LENGTH\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_LENGTH, NULL_PTR);\n+\t\t    BUILT_IN_LENGTH, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"log\" : \"LOG\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_LOG, NULL_PTR);\n+\t\t    BUILT_IN_LOG, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"lower\" : \"LOWER\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_LOWER, NULL_PTR);\n+\t\t    BUILT_IN_LOWER, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"ln\" : \"LN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_LN, NULL_PTR);\n+\t\t    BUILT_IN_LN, BUILT_IN_NORMAL, NULL_PTR);\n   /* Note: these are *not* the C integer MAX and MIN.  They're\n      for powerset arguments. */\n   builtin_function ((ignore_case || ! special_UC) ?  \"max\" : \"MAX\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_MAX, NULL_PTR);\n+\t\t    BUILT_IN_MAX, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"millisecs\" : \"MILLISECS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_MILLISECS, NULL_PTR);\n+\t\t    BUILT_IN_MILLISECS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"min\" : \"MIN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_MIN, NULL_PTR);\n+\t\t    BUILT_IN_MIN, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"minutes\" : \"MINUTES\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_MINUTES, NULL_PTR);\n+\t\t    BUILT_IN_MINUTES, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"num\" : \"NUM\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_NUM, NULL_PTR);\n+\t\t    BUILT_IN_NUM, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"pred\" : \"PRED\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_PRED, NULL_PTR);\n+\t\t    BUILT_IN_PRED, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"return_memory\" : \"RETURN_MEMORY\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_RETURN_MEMORY, NULL_PTR);\n+\t\t    BUILT_IN_RETURN_MEMORY, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"secs\" : \"SECS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SECS, NULL_PTR);\n+\t\t    BUILT_IN_SECS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"sin\" : \"SIN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CH_SIN, NULL_PTR);\n+\t\t    BUILT_IN_CH_SIN, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"size\" : \"SIZE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SIZE, NULL_PTR);\n+\t\t    BUILT_IN_SIZE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"sqrt\" : \"SQRT\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SQRT, NULL_PTR);\n+\t\t    BUILT_IN_SQRT, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"succ\" : \"SUCC\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SUCC, NULL_PTR);\n+\t\t    BUILT_IN_SUCC, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"tan\" : \"TAN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_TAN, NULL_PTR);\n+\t\t    BUILT_IN_TAN, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"terminate\" : \"TERMINATE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_TERMINATE, NULL_PTR);\n+\t\t    BUILT_IN_TERMINATE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ?  \"upper\" : \"UPPER\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_UPPER, NULL_PTR);\n+\t\t    BUILT_IN_UPPER, BUILT_IN_NORMAL, NULL_PTR);\n \n   build_chill_descr_type ();\n   build_chill_inttime_type ();\n@@ -4119,10 +4119,11 @@ init_decl_processing ()\n    the name to be called if we can't opencode the function.  */\n \n tree\n-builtin_function (name, type, function_code, library_name)\n+builtin_function (name, type, function_code, class, library_name)\n      const char *name;\n      tree type;\n-     enum built_in_function function_code;\n+     int function_code;\n+     enum built_in_class class;\n      const char *library_name;\n {\n   tree decl = build_decl (FUNCTION_DECL, get_identifier (name), type);\n@@ -4137,11 +4138,8 @@ builtin_function (name, type, function_code, library_name)\n     DECL_ASSEMBLER_NAME (decl) = get_identifier (library_name);\n   make_decl_rtl (decl, NULL_PTR, 1);\n   pushdecl (decl);\n-  if (function_code != NOT_BUILT_IN)\n-    {\n-      DECL_BUILT_IN (decl) = 1;\n-      DECL_SET_FUNCTION_CODE (decl, function_code);\n-    }\n+  DECL_BUILT_IN_CLASS (decl) = class;\n+  DECL_FUNCTION_CODE (decl) = function_code;\n \n   return decl;\n }"}, {"sha": "7870a397b11b6ca948bec4bdb5fb660d46a2dc49", "filename": "gcc/ch/except.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fexcept.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -550,7 +550,7 @@ initialize_exceptions ()\n   setjmp_fndecl = builtin_function (\"setjmp\",\n \t\t\t\t    build_function_type (integer_type_node,\n \t\t\t\t\t\t\t parmtypes),\n-\t\t\t\t    NOT_BUILT_IN,\n+\t\t\t\t    0, NOT_BUILT_IN,\n \t\t\t\t    SETJMP_LIBRARY_NAME);\n   BISJ = build1 (ADDR_EXPR, build_pointer_type (TREE_TYPE (setjmp_fndecl)),\n \t\t setjmp_fndecl);\n@@ -601,9 +601,9 @@ initialize_exceptions ()\n \t\t\t\t\t       handler_link_pointer_type,\n \t\t\t\t\t       void_list_node));\n   link_handler_decl = builtin_function (\"__ch_link_handler\", link_ftype,\n-\t\t\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n   unlink_handler_decl = builtin_function (\"__ch_unlink_handler\", link_ftype,\n-\t\t\t\t\t  NOT_BUILT_IN, NULL_PTR);\n+\t\t\t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n \n   exceptions_initialized = 1;\n }"}, {"sha": "6a8e9bc58c123b5edeecf4d96758f204b6d274e6", "filename": "gcc/ch/inout.c", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Finout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Finout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Finout.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1111,88 +1111,88 @@ inout_init ()\n \n   builtin_function ((ignore_case || ! special_UC) ? \"associate\" : \"ASSOCIATE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ASSOCIATE, NULL_PTR);\n+\t\t    BUILT_IN_ASSOCIATE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"connect\" : \"CONNECT\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CONNECT, NULL_PTR);\n+\t\t    BUILT_IN_CONNECT, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"create\" : \"CREATE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CREATE, NULL_PTR);\n+\t\t    BUILT_IN_CREATE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"delete\" : \"DELETE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_CH_DELETE, NULL_PTR);\n+\t\t    BUILT_IN_CH_DELETE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"disconnect\" : \"DISCONNECT\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_DISCONNECT, NULL_PTR);\n+\t\t    BUILT_IN_DISCONNECT, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"dissociate\" : \"DISSOCIATE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_DISSOCIATE, NULL_PTR);\n+\t\t    BUILT_IN_DISSOCIATE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"eoln\" : \"EOLN\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_EOLN, NULL_PTR);\n+\t\t    BUILT_IN_EOLN, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"existing\" : \"EXISTING\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_EXISTING, NULL_PTR);\n+\t\t    BUILT_IN_EXISTING, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"getassociation\" : \"GETASSOCIATION\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GETASSOCIATION, NULL_PTR);\n+\t\t    BUILT_IN_GETASSOCIATION, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"gettextaccess\" : \"GETTEXTASSCESS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GETTEXTACCESS, NULL_PTR);\n+\t\t    BUILT_IN_GETTEXTACCESS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"gettextindex\" : \"GETTEXTINDEX\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GETTEXTINDEX, NULL_PTR);\n+\t\t    BUILT_IN_GETTEXTINDEX, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"gettextrecord\" : \"GETTEXTRECORD\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GETTEXTRECORD, NULL_PTR);\n+\t\t    BUILT_IN_GETTEXTRECORD, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"getusage\" : \"GETUSAGE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GETUSAGE, NULL_PTR);\n+\t\t    BUILT_IN_GETUSAGE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"indexable\" : \"INDEXABLE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_INDEXABLE, NULL_PTR);\n+\t\t    BUILT_IN_INDEXABLE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"isassociated\" : \"ISASSOCIATED\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_ISASSOCIATED, NULL_PTR);\n+\t\t    BUILT_IN_ISASSOCIATED, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"modify\" : \"MODIFY\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_MODIFY, NULL_PTR);\n+\t\t    BUILT_IN_MODIFY, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"outoffile\" : \"OUTOFFILE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_OUTOFFILE, NULL_PTR);\n+\t\t    BUILT_IN_OUTOFFILE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"readable\" : \"READABLE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_READABLE, NULL_PTR);\n+\t\t    BUILT_IN_READABLE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"readrecord\" : \"READRECORD\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_READRECORD, NULL_PTR);\n+\t\t    BUILT_IN_READRECORD, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"readtext\" : \"READTEXT\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_READTEXT, NULL_PTR);\n+\t\t    BUILT_IN_READTEXT, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"sequencible\" : \"SEQUENCIBLE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SEQUENCIBLE, NULL_PTR);\n+\t\t    BUILT_IN_SEQUENCIBLE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"settextaccess\" : \"SETTEXTACCESS\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SETTEXTACCESS, NULL_PTR);\n+\t\t    BUILT_IN_SETTEXTACCESS, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"settextindex\" : \"SETTEXTINDEX\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SETTEXTINDEX, NULL_PTR);\n+\t\t    BUILT_IN_SETTEXTINDEX, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"settextrecord\" : \"SETTEXTRECORD\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_SETTEXTRECORD, NULL_PTR);\n+\t\t    BUILT_IN_SETTEXTRECORD, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"variable\" : \"VARIABLE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_VARIABLE, NULL_PTR);\n+\t\t    BUILT_IN_VARIABLE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"writeable\" : \"WRITEABLE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_WRITEABLE, NULL_PTR);\n+\t\t    BUILT_IN_WRITEABLE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"writerecord\" : \"WRITERECORD\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_WRITERECORD, NULL_PTR);\n+\t\t    BUILT_IN_WRITERECORD, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"writetext\" : \"WRITETEXT\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_WRITETEXT, NULL_PTR);\n+\t\t    BUILT_IN_WRITETEXT, BUILT_IN_NORMAL, NULL_PTR);\n \n   /* build function prototypes */\n   bool_ftype_ptr_ptr_int = \n@@ -1300,65 +1300,65 @@ inout_init ()\n                       endlink)))))))));\n \n   builtin_function (\"__associate\", ptr_ftype_ptr_ptr_int_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__connect\", void_ftype_ptr_ptr_int_int_int_long_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__create\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__delete\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__disconnect\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__dissociate\", void_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__eoln\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__existing\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__getassociation\", ptr_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__gettextaccess\", ptr_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__gettextindex\", luns_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__gettextrecord\", ptr_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__getusage\", int_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__indexable\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__isassociated\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__modify\", void_ftype_ptr_ptr_int_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__outoffile\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__readable\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__readrecord\", ptr_ftype_ptr_int_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__readtext_f\", void_ftype_ptr_int_ptr_int_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__readtext_s\", void_ftype_ptr_int_ptr_int_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__sequencible\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__settextaccess\", void_ftype_ptr_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__settextindex\", void_ftype_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__settextrecord\", void_ftype_ptr_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__variable\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__writeable\", bool_ftype_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__writerecord\", void_ftype_ptr_int_ptr_luns_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__writetext_f\", void_ftype_ptr_int_ptr_int_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__writetext_s\", void_ftype_ptr_int_ptr_int_ptr_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n \n   /* declare ASSOCIATION, ACCESS, and TEXT modes */\n   build_io_types ();"}, {"sha": "3b03dea0056fcb43503e375084b9a60d5f47187e", "filename": "gcc/ch/tasking.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Ftasking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Ftasking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftasking.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -3310,7 +3310,7 @@ tasking_init ()\n \t  build_tree_list (NULL_TREE, void_type_node)));\n \n   builtin_function (\"__whoami\", ins_ftype_void,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n \n   build_tasking_message_type ();\n    \n@@ -3325,22 +3325,22 @@ tasking_init ()\n \n   builtin_function ((ignore_case || ! special_UC) ? \"copy_number\" : \"COPY_NUMBER\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_COPY_NUMBER, NULL_PTR);\n+\t\t    BUILT_IN_COPY_NUMBER, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"gen_code\" : \"GEN_CODE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GEN_CODE, NULL_PTR);\n+\t\t    BUILT_IN_GEN_CODE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"gen_inst\" : \"GEN_INST\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GEN_INST, NULL_PTR);\n+\t\t    BUILT_IN_GEN_INST, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"gen_ptype\" : \"GEN_PTYPE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_GEN_PTYPE, NULL_PTR);\n+\t\t    BUILT_IN_GEN_PTYPE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"proc_type\" : \"PROC_TYPE\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_PROC_TYPE, NULL_PTR);\n+\t\t    BUILT_IN_PROC_TYPE, BUILT_IN_NORMAL, NULL_PTR);\n   builtin_function ((ignore_case || ! special_UC) ? \"queue_length\" : \"QUEUE_LENGTH\",\n \t\t    chill_predefined_function_type,\n-\t\t    BUILT_IN_QUEUE_LENGTH, NULL_PTR);\n+\t\t    BUILT_IN_QUEUE_LENGTH, BUILT_IN_NORMAL, NULL_PTR);\n \n   int_ftype_ptr_int_ptr_ptr_int_ptr_int_ptr_ptr_int\n      = build_function_type (integer_type_node,\n@@ -3409,23 +3409,23 @@ tasking_init ()\n                    endlink)));\n \n   builtin_function (\"__delay_event\", int_ftype_ptr_int_ptr_int_ptr_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__queue_length\", int_ftype_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__register_tasking\", void_ftype_ptr,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__send_signal\", void_ftype_ptr_ins_int_int_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__send_buffer\", int_ftype_ptr_ptr_int_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__start_process\", void_ftype_int_int_int_ptr_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n-  builtin_function (\"__stop_process\", void_ftype_void, NOT_BUILT_IN,\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n+  builtin_function (\"__stop_process\", void_ftype_void, 0, NOT_BUILT_IN,\n \t\t    NULL_PTR);\n   builtin_function (\"__wait_buffer\", int_ftype_ptr_int_ptr_ptr_int_ptr_int_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__wait_signal_timed\", int_ftype_ptr_int_ptr_ptr_int_ptr_int_ptr_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n \n   infinite_buffer_event_length_node = build_int_2 (-1, 0);\n   TREE_TYPE (infinite_buffer_event_length_node) = long_integer_type_node;"}, {"sha": "35bef786b23527eb1816ba4676a290d4b50ae8dc", "filename": "gcc/ch/timing.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Ftiming.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fch%2Ftiming.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Ftiming.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -175,21 +175,21 @@ timing_init ()\n                 endlink)))));\n \n   builtin_function (\"_abstime\", long_ftype_int_int_int_int_int_int_int_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__check_cycle\", void_ftype_ptr_durt_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__convert_duration_rtstime\", void_ftype_durt_ptr,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__define_timeout\", ptr_ftype_durt_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"_inttime\", void_ftype_abstime_ptr,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__remaintime\", int_ftype_ptr_durt_ptr,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__rtstime\", void_ftype_ptr,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n   builtin_function (\"__wait_until\", int_ftype_abst_ptr_int,\n-\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t    0, NOT_BUILT_IN, NULL_PTR);\n }\n \n #if 0"}, {"sha": "ee850ce65b233ec6816b4c7a834b4742809e6fe7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1,3 +1,11 @@\n+Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* decl.c (duplicate_decls): Use DECL_BUILT_IN_CLASS rather than\n+\tDECL_BUILT_IN.\n+\t(builtin_function): New arg CLASS.  Arg CODE now of type int.  All\n+\tcallers changed.\n+\tSet the builtin's DECL_BUILT_IN_CLASS.\n+\n 1999-09-24  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (pushdecl): Don't make local declarations of extern"}, {"sha": "b3e676bd6e1ba7f3cc727d1fd5f1ce52b414bcc8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -3539,7 +3539,7 @@ duplicate_decls (newdecl, olddecl)\n \t     it stays built in.  */\n \t  if (DECL_BUILT_IN (olddecl))\n \t    {\n-\t      DECL_BUILT_IN (newdecl) = 1;\n+\t      DECL_BUILT_IN_CLASS (newdecl) = DECL_BUILT_IN_CLASS (olddecl);\n \t      DECL_FUNCTION_CODE (newdecl) = DECL_FUNCTION_CODE (olddecl);\n \t      /* If we're keeping the built-in definition, keep the rtl,\n \t\t regardless of declaration matches.  */\n@@ -6467,19 +6467,17 @@ define_function (name, type, pfn, library_name)\n    See tree.h for its possible values.  */\n \n tree\n-builtin_function (name, type, code, libname)\n+builtin_function (name, type, code, class, libname)\n      const char *name;\n      tree type;\n-     enum built_in_function code;\n+     int code;\n+     enum built_in_class class;\n      const char *libname;\n {\n   tree decl = define_function (name, type, (void (*) PROTO((tree)))pushdecl,\n \t\t\t       libname);\n-  if (code != NOT_BUILT_IN)\n-    {\n-      DECL_BUILT_IN (decl) = 1;\n-      DECL_FUNCTION_CODE (decl) = code;\n-    }\n+  DECL_BUILT_IN_CLASS (decl) = class;\n+  DECL_FUNCTION_CODE (decl) = code;\n   return decl;\n }\n \f"}, {"sha": "425f6a02cf277bbfe42e20cdb0bcfe4d26b8c985", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1,3 +1,11 @@\n+Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* com.c (duplicate_decls): Use DECL_BUILT_IN_CLASS rather than\n+\tDECL_BUILT_IN.\n+\t(builtin_function): No longer static.  New arg CLASS.  Arg\n+\tFUNCTION_CODE now of type int.  All callers changed.\n+\tSet the builtin's DECL_BUILT_IN_CLASS.\n+\n Tue Sep 21 09:08:30 1999  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* g77spec.c (lang_specific_driver): Initialise return value."}, {"sha": "189515424eccaaf1b66aff95a12910a97e1f0e5e", "filename": "gcc/f/com.c", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -466,9 +466,6 @@ static tree ffecom_convert_widen_ (tree type, tree expr);\n #if FFECOM_targetCURRENT == FFECOM_targetGCC\n static tree bison_rule_compstmt_ (void);\n static void bison_rule_pushlevel_ (void);\n-static tree builtin_function (const char *name, tree type,\n-\t\t\t      enum built_in_function function_code,\n-\t\t\t      const char *library_name);\n static void delete_block (tree block);\n static int duplicate_decls (tree newdecl, tree olddecl);\n static void finish_decl (tree decl, tree init, bool is_top_level);\n@@ -12176,23 +12173,23 @@ ffecom_init_0 ()\n     = build_function_type (void_type_node, NULL_TREE);\n \n   builtin_function (\"__builtin_sqrtf\", float_ftype_float,\n-\t\t    BUILT_IN_FSQRT, \"sqrtf\");\n+\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrtf\");\n   builtin_function (\"__builtin_fsqrt\", double_ftype_double,\n-\t\t    BUILT_IN_FSQRT, \"sqrt\");\n+\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrt\");\n   builtin_function (\"__builtin_sqrtl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_FSQRT, \"sqrtl\");\n+\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrtl\");\n   builtin_function (\"__builtin_sinf\", float_ftype_float,\n-\t\t    BUILT_IN_SIN, \"sinf\");\n+\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sinf\");\n   builtin_function (\"__builtin_sin\", double_ftype_double,\n-\t\t    BUILT_IN_SIN, \"sin\");\n+\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sin\");\n   builtin_function (\"__builtin_sinl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_SIN, \"sinl\");\n+\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sinl\");\n   builtin_function (\"__builtin_cosf\", float_ftype_float,\n-\t\t    BUILT_IN_COS, \"cosf\");\n+\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cosf\");\n   builtin_function (\"__builtin_cos\", double_ftype_double,\n-\t\t    BUILT_IN_COS, \"cos\");\n+\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cos\");\n   builtin_function (\"__builtin_cosl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_COS, \"cosl\");\n+\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cosl\");\n \n #if BUILT_FOR_270\n   pedantic_lvalues = FALSE;\n@@ -13758,9 +13755,9 @@ bison_rule_compstmt_ ()\n    If LIBRARY_NAME is nonzero, use that for DECL_ASSEMBLER_NAME,\n    the name to be called if we can't opencode the function.  */\n \n-static tree\n-builtin_function (const char *name, tree type,\n-\t\t  enum built_in_function function_code,\n+tree\n+builtin_function (const char *name, tree type, int function_code,\n+\t\t  enum built_in_class class,\n \t\t  const char *library_name)\n {\n   tree decl = build_decl (FUNCTION_DECL, get_identifier (name), type);\n@@ -13770,11 +13767,8 @@ builtin_function (const char *name, tree type,\n     DECL_ASSEMBLER_NAME (decl) = get_identifier (library_name);\n   make_decl_rtl (decl, NULL_PTR, 1);\n   pushdecl (decl);\n-  if (function_code != NOT_BUILT_IN)\n-    {\n-      DECL_BUILT_IN (decl) = 1;\n-      DECL_FUNCTION_CODE (decl) = function_code;\n-    }\n+  DECL_BUILT_IN_CLASS (decl) = class;\n+  DECL_FUNCTION_CODE (decl) = function_code;\n \n   return decl;\n }\n@@ -14025,7 +14019,7 @@ duplicate_decls (tree newdecl, tree olddecl)\n       && (!types_match || new_is_definition))\n     {\n       TREE_TYPE (olddecl) = TREE_TYPE (newdecl);\n-      DECL_BUILT_IN (olddecl) = 0;\n+      DECL_BUILT_IN_CLASS (olddecl) = NOT_BUILT_IN;\n     }\n \n   /* If redeclaring a builtin function, and not a definition,\n@@ -14035,7 +14029,7 @@ duplicate_decls (tree newdecl, tree olddecl)\n     {\n       if (DECL_BUILT_IN (olddecl))\n \t{\n-\t  DECL_BUILT_IN (newdecl) = 1;\n+\t  DECL_BUILT_IN_CLASS (newdecl) = DECL_BUILT_IN_CLASS (olddecl);\n \t  DECL_FUNCTION_CODE (newdecl) = DECL_FUNCTION_CODE (olddecl);\n \t}\n       else"}, {"sha": "da15f8a028b8a331e01d743fc44a7f330114c40b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1,3 +1,9 @@\n+Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* decl.c (builtin_function): No longer static.  New arg CLASS.  Arg\n+\tFUNCTION_CODE now of type int.  All callers changed.\n+\tSet the builtin's DECL_BUILT_IN_CLASS.\n+\n 1999-09-23  Tom Tromey  <tromey@cygnus.com>\n \n \t* jvspec.c (lang_specific_driver): Don't read spec file if"}, {"sha": "77332df51fd1e3c8b4b66c60d7b68daf542ab1f1", "filename": "gcc/java/decl.c", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -37,8 +37,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"defaults.h\"\n \n static tree push_jvm_slot PROTO ((int, tree));\n-static tree builtin_function PROTO ((const char *, tree,\n-\t\t\t\t     enum built_in_function, const char *));\n static tree lookup_name_current_level PROTO ((tree));\n static tree push_promoted_type PROTO ((const char *, tree));\n static struct binding_level *make_binding_level PROTO ((void));\n@@ -391,11 +389,12 @@ tree integer_negative_one_node;\n    If LIBRARY_NAME is nonzero, use that for DECL_ASSEMBLER_NAME,\n    the name to be called if we can't opencode the function.  */\n \n-static tree\n-builtin_function (name, type, function_code, library_name)\n+tree\n+builtin_function (name, type, function_code, class, library_name)\n      const char *name;\n      tree type;\n-     enum built_in_function function_code;\n+     int function_code;\n+     enum built_in_class class;\n      const char *library_name;\n {\n   tree decl = build_decl (FUNCTION_DECL, get_identifier (name), type);\n@@ -405,11 +404,8 @@ builtin_function (name, type, function_code, library_name)\n     DECL_ASSEMBLER_NAME (decl) = get_identifier (library_name);\n   make_decl_rtl (decl, NULL_PTR, 1);\n   pushdecl (decl);\n-  if (function_code != NOT_BUILT_IN)\n-    {\n-      DECL_BUILT_IN (decl) = 1;\n-      DECL_FUNCTION_CODE (decl) = function_code;\n-    }\n+  DECL_BUILT_IN_CLASS (decl) = class;\n+  DECL_FUNCTION_CODE (decl) = function_code;\n   return decl;\n }\n \n@@ -702,48 +698,51 @@ init_decl_processing ()\n \t\t tree_cons (NULL_TREE, int_type_node, endlink));\n   alloc_object_node = builtin_function (\"_Jv_AllocObject\",\n \t\t\t\t\tbuild_function_type (ptr_type_node, t),\n-\t\t\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n   soft_initclass_node = builtin_function (\"_Jv_InitClass\",\n \t\t\t\t\t  build_function_type (void_type_node,\n \t\t\t\t\t\t\t       t),\n-\t\t\t\t\t  NOT_BUILT_IN, NULL_PTR);\n+\t\t\t\t\t  0, NOT_BUILT_IN,\n+\t\t\t\t\t  NULL_PTR);\n   t = tree_cons (NULL_TREE, ptr_type_node, endlink);\n   throw_node = builtin_function (\"_Jv_Throw\",\n \t\t\t\t build_function_type (ptr_type_node, t),\n-\t\t\t\t NOT_BUILT_IN, NULL_PTR);\n+\t\t\t\t 0, NOT_BUILT_IN, NULL_PTR);\n   t = build_function_type (int_type_node, endlink);\n   soft_monitorenter_node \n-      = builtin_function (\"_Jv_MonitorEnter\", t, NOT_BUILT_IN, NULL_PTR);\n+    = builtin_function (\"_Jv_MonitorEnter\", t, 0, NOT_BUILT_IN,\n+\t\t\tNULL_PTR);\n   soft_monitorexit_node \n-      = builtin_function (\"_Jv_MonitorExit\", t, NOT_BUILT_IN, NULL_PTR);\n+    = builtin_function (\"_Jv_MonitorExit\", t, 0, NOT_BUILT_IN,\n+\t\t\tNULL_PTR);\n   \n   t = tree_cons (NULL_TREE, int_type_node, \n \t\t tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_newarray_node\n       = builtin_function (\"_Jv_NewArray\",\n \t\t\t  build_function_type(ptr_type_node, t),\n-\t\t\t  NOT_BUILT_IN, NULL_PTR );\n+\t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n \n   t = tree_cons (NULL_TREE, int_type_node,\n \t\t tree_cons (NULL_TREE, class_ptr_type,\n \t\t\t    tree_cons (NULL_TREE, object_ptr_type_node, endlink)));\n   soft_anewarray_node\n       = builtin_function (\"_Jv_NewObjectArray\",\n \t\t\t  build_function_type (ptr_type_node, t),\n-\t\t\t  NOT_BUILT_IN, NULL_PTR );\n+\t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n \n   t = tree_cons (NULL_TREE, ptr_type_node,\n \t\t tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_multianewarray_node\n       = builtin_function (\"_Jv_NewMultiArray\",\n \t\t\t  build_function_type (ptr_type_node, t),\n-\t\t\t  NOT_BUILT_IN, NULL_PTR );\n+\t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n \n   t = build_function_type (void_type_node, \n \t\t\t   tree_cons (NULL_TREE, int_type_node, endlink));\n   soft_badarrayindex_node\n       = builtin_function (\"_Jv_ThrowBadArrayIndex\", t, \n-\t\t\t  NOT_BUILT_IN, NULL_PTR);\n+\t\t\t  0, NOT_BUILT_IN, NULL_PTR);\n   TREE_THIS_VOLATILE (soft_badarrayindex_node) = 1;\n   TREE_SIDE_EFFECTS (soft_badarrayindex_node) = 1;\n \n@@ -752,40 +751,40 @@ init_decl_processing ()\n   soft_checkcast_node\n     = builtin_function (\"_Jv_CheckCast\",\n \t\t\tbuild_function_type (ptr_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n   t = tree_cons (NULL_TREE, object_ptr_type_node,\n \t\t tree_cons (NULL_TREE, class_ptr_type, endlink));\n   soft_instanceof_node\n     = builtin_function (\"_Jv_IsInstanceOf\",\n \t\t\tbuild_function_type (promoted_boolean_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n   t = tree_cons (NULL_TREE, object_ptr_type_node,\n \t\t tree_cons (NULL_TREE, object_ptr_type_node, endlink));\n   soft_checkarraystore_node\n     = builtin_function (\"_Jv_CheckArrayStore\",\n \t\t\tbuild_function_type (void_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n   t = tree_cons (NULL_TREE, ptr_type_node,\n \t\t tree_cons (NULL_TREE, ptr_type_node,\n \t\t\t    tree_cons (NULL_TREE, ptr_type_node, endlink)));\n   soft_lookupinterfacemethod_node \n     = builtin_function (\"_Jv_LookupInterfaceMethod\",\n \t\t\tbuild_function_type (ptr_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n   t = tree_cons (NULL_TREE, double_type_node,\n \t\t tree_cons (NULL_TREE, double_type_node, endlink));\n   soft_fmod_node\n     = builtin_function (\"__builtin_fmod\",\n \t\t\tbuild_function_type (double_type_node, t),\n-\t\t\tBUILT_IN_FMOD, \"fmod\");\n+\t\t\tBUILT_IN_FMOD, BUILT_IN_NORMAL, \"fmod\");\n \n   soft_exceptioninfo_call_node\n     = build (CALL_EXPR, \n \t     ptr_type_node,\n \t     build_address_of \n \t       (builtin_function (\"_Jv_exception_info\", \n \t\t\t\t  build_function_type (ptr_type_node, endlink),\n-\t\t\t\t  NOT_BUILT_IN, NULL_PTR)),\n+\t\t\t\t  0, NOT_BUILT_IN, NULL_PTR)),\n \t     NULL_TREE, NULL_TREE);\n   TREE_SIDE_EFFECTS (soft_exceptioninfo_call_node) = 1;\n #if 0\n@@ -794,28 +793,28 @@ init_decl_processing ()\n   soft_fmodf_node\n     = builtin_function (\"__builtin_fmodf\",\n \t\t\tbuild_function_type (float_type_node, t),\n-\t\t\tBUILT_IN_FMOD, \"fmodf\");\n+\t\t\tBUILT_IN_FMOD, BUILT_IN_NORMAL, \"fmodf\");\n #endif\n     \n   soft_idiv_node\n     = builtin_function (\"_Jv_divI\",\n \t\t\tbuild_function_type (int_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n \n   soft_irem_node\n     = builtin_function (\"_Jv_remI\",\n \t\t\tbuild_function_type (int_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n \n   soft_ldiv_node\n     = builtin_function (\"_Jv_divJ\",\n \t\t\tbuild_function_type (long_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n \n   soft_lrem_node\n     = builtin_function (\"_Jv_remJ\",\n \t\t\tbuild_function_type (long_type_node, t),\n-\t\t\tNOT_BUILT_IN, NULL_PTR);\n+\t\t\t0, NOT_BUILT_IN, NULL_PTR);\n \n   init_class_processing ();\n }"}, {"sha": "5cb797b2de738b5a00f2095d8ca8b44036bc013a", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -1226,7 +1226,7 @@ synth_module_prologue ()\n       pushdecl (umsg_decl);\n     }\n   else\n-    umsg_decl = builtin_function (TAG_MSGSEND, temp_type, NOT_BUILT_IN, 0);\n+    umsg_decl = builtin_function (TAG_MSGSEND, temp_type, 0, NOT_BUILT_IN, 0);\n \n   /* id objc_msgSendSuper (struct objc_super *, SEL, ...); */\n \n@@ -1237,7 +1237,7 @@ synth_module_prologue ()\n \t\t\t\t\t\t NULL_TREE)));\n \n   umsg_super_decl = builtin_function (TAG_MSGSENDSUPER,\n-\t\t\t\t     temp_type, NOT_BUILT_IN, 0);\n+\t\t\t\t     temp_type, 0, NOT_BUILT_IN, 0);\n \n   /* id objc_getClass (const char *); */\n \n@@ -1248,12 +1248,12 @@ synth_module_prologue ()\n \t\t\t\t\t      NULL_TREE)));\n \n   objc_get_class_decl\n-    = builtin_function (TAG_GETCLASS, temp_type, NOT_BUILT_IN, 0);\n+    = builtin_function (TAG_GETCLASS, temp_type, 0, NOT_BUILT_IN, 0);\n \n   /* id objc_getMetaClass (const char *); */\n \n   objc_get_meta_class_decl\n-    = builtin_function (TAG_GETMETACLASS, temp_type, NOT_BUILT_IN, 0);\n+    = builtin_function (TAG_GETMETACLASS, temp_type, 0, NOT_BUILT_IN, 0);\n \n   /* static SEL _OBJC_SELECTOR_TABLE[]; */\n "}, {"sha": "e61f829323e09dbd7a3cf13034c2f14fb5dfe96d", "filename": "gcc/tree.h", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26db82d823eeb8de6d630e24eed02e3c6162371b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=26db82d823eeb8de6d630e24eed02e3c6162371b", "patch": "@@ -65,12 +65,20 @@ extern int tree_code_length[MAX_TREE_CODES];\n \n extern const char *tree_code_name[MAX_TREE_CODES];\n \f\n+/* Classify which part of the compiler has defined a given builtin\n+   function.  */\n+enum built_in_class\n+{\n+  NOT_BUILT_IN = 0,\n+  BUILT_IN_FRONTEND,\n+  BUILT_IN_MD,\n+  BUILT_IN_NORMAL\n+};\n /* Codes that identify the various built in functions\n    so that expand_call can identify them quickly.  */\n \n enum built_in_function\n {\n-  NOT_BUILT_IN,\n   BUILT_IN_ALLOCA,\n   BUILT_IN_ABS,\n   BUILT_IN_FABS,\n@@ -1126,8 +1134,8 @@ struct tree_type\n #define DECL_FRAME_SIZE(NODE) (DECL_CHECK (NODE)->decl.frame_size.i)\n /* For FUNCTION_DECL, if it is built-in,\n    this identifies which built-in operation it is.  */\n-#define DECL_FUNCTION_CODE(NODE) (DECL_CHECK (NODE)->decl.frame_size.f)\n-#define DECL_SET_FUNCTION_CODE(NODE,VAL) (DECL_CHECK (NODE)->decl.frame_size.f = (VAL))\n+#define DECL_FUNCTION_CODE(NODE) (DECL_CHECK (NODE)->decl.frame_size.f.code)\n+#define DECL_SET_FUNCTION_CODE(NODE,VAL) (DECL_CHECK (NODE)->decl.frame_size.f.code = (VAL))\n /* For a FIELD_DECL, holds the size of the member as an integer.  */\n #define DECL_FIELD_SIZE(NODE) (DECL_CHECK (NODE)->decl.saved_insns.i)\n \n@@ -1241,8 +1249,12 @@ struct tree_type\n /* In a LABEL_DECL, nonzero means label was defined inside a binding\n    contour that restored a stack level and which is now exited.  */\n #define DECL_TOO_LATE(NODE) (DECL_CHECK (NODE)->decl.bit_field_flag)\n+\n /* In a FUNCTION_DECL, nonzero means a built in function.  */\n-#define DECL_BUILT_IN(NODE) (DECL_CHECK (NODE)->decl.bit_field_flag)\n+#define DECL_BUILT_IN(NODE) (DECL_BUILT_IN_CLASS (NODE) != NOT_BUILT_IN)\n+/* For a builtin function, identify which part of the compiler defined it.  */\n+#define DECL_BUILT_IN_CLASS(NODE) (DECL_CHECK (NODE)->decl.frame_size.f.class)\n+\n /* In a VAR_DECL that's static,\n    nonzero if the space is in the text section.  */\n #define DECL_IN_TEXT_SECTION(NODE) (DECL_CHECK (NODE)->decl.bit_field_flag)\n@@ -1370,7 +1382,11 @@ struct tree_decl\n   union {\n     int i;\n     unsigned int u;\n-    enum built_in_function f;\n+    struct\n+      {\n+\tunsigned int code:24;\n+\tunsigned int class:8;\n+      } f;\n   } frame_size;\n \n   union tree_node *name;\n@@ -2009,7 +2025,13 @@ extern void (*incomplete_decl_finalize_hook)\tPROTO((tree));\n extern char *init_parse\t\t\t\tPROTO((char *));\n extern void finish_parse\t\t\tPROTO((void));\n \n-extern const char * const language_string;  \n+extern const char * const language_string;\n+\n+/* Declare a predefined function.  Return the declaration.  This function is\n+   provided by each language frontend.  */\n+extern tree builtin_function\t\t\tPROTO((const char *, tree, int,\n+\t\t\t\t\t\t       enum built_in_class,\n+\t\t\t\t\t\t       const char *));\n \f\n /* In tree.c */\n extern char *perm_calloc\t\t\tPROTO((int, long));"}]}