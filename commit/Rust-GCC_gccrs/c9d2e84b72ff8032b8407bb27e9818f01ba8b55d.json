{"sha": "c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlkMmU4NGI3MmZmODAzMmI4NDA3YmIyN2U5ODE4ZjAxYmE4YjU1ZA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2016-10-13T12:24:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T12:24:21Z"}, "message": "exp_ch7.adb, [...]: Minor typo fixes and reformatting.\n\n2016-10-13  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch7.adb, einfo.ads, sem_prag.adb, sem_prag.ads, sem.ads,\n\tsem_attr.adb, sem_case.adb, sem_ch13.ads: Minor typo fixes and\n\treformatting.\n\nFrom-SVN: r241109", "tree": {"sha": "a11d98f66dba227f2c9ca059635970615b0eb260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a11d98f66dba227f2c9ca059635970615b0eb260"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2eef1fc11358cb848d027f43956e8166ba613b5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2eef1fc11358cb848d027f43956e8166ba613b5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2eef1fc11358cb848d027f43956e8166ba613b5d"}], "stats": {"total": 62, "additions": 34, "deletions": 28}, "files": [{"sha": "68c60a4a357b000a7e7cf19113afc0867ebca5a6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -1,3 +1,9 @@\n+2016-10-13  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch7.adb, einfo.ads, sem_prag.adb, sem_prag.ads, sem.ads,\n+\tsem_attr.adb, sem_case.adb, sem_ch13.ads: Minor typo fixes and\n+\treformatting.\n+\n 2016-10-13  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_prag.ads (Process_Compile_Time_Warning_Or_Error): New"}, {"sha": "c5534559d5f4727343b4e7ce53e8fdc785210b94", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -440,7 +440,7 @@ package Einfo is\n \n --    Anonymous_Designated_Type (Node35)\n --       Defined in variables which represent anonymous finalization masters.\n---       Contains the designated type which is being services by the master.\n+--       Contains the designated type which is being serviced by the master.\n \n --    Anonymous_Masters (Elist29)\n --       Defined in packages, subprograms, and subprogram bodies. Contains a\n@@ -3795,7 +3795,7 @@ package Einfo is\n --    Partial_Refinement_Constituents (synthesized)\n --       Defined in abstract state entities. Returns the constituents that\n --       refine the state in the current scope, which are allowed in a global\n---       refinement in this scope. These consist in those constituents that are\n+--       refinement in this scope. These consist of those constituents that are\n --       abstract states with no or only partial refinement visible, and those\n --       that are not themselves abstract states.\n "}, {"sha": "031c49734e3c7be602f0152e18b8741a866acca6", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -645,8 +645,8 @@ package body Exp_Ch7 is\n \n          --  Include the anonymous master in the list of existing masters which\n          --  appear in this unit. This effectively creates a mapping between a\n-         --  master and a designated type which in turn allows for the reusal\n-         --  of masters on a per-unit basis.\n+         --  master and a designated type which in turn allows for the reuse of\n+         --  masters on a per-unit basis.\n \n          All_FMs := Anonymous_Masters (Unit_Id);\n "}, {"sha": "9adc8b2b13fb9128cbddc5123fae6916299f60f9", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -255,8 +255,8 @@ package Sem is\n \n    In_Compile_Time_Warning_Or_Error : Boolean := False;\n    --  Switch to indicate that we are validating a pragma Compile_Time_Warning\n-   --  or Compile_Time_Error after the backend has been called (to check these\n-   --  pragmas for size and alignment apropriateness).\n+   --  or Compile_Time_Error after the back end has been called (to check these\n+   --  pragmas for size and alignment appropriateness).\n \n    In_Default_Expr : Boolean := False;\n    --  Switch to indicate that we are analyzing a default component expression."}, {"sha": "7b31ca16ca3a1107eed7fbefa29f574cf9b029d4", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -3025,7 +3025,7 @@ package body Sem_Attr is\n       when Attribute_Asm_Input =>\n          Check_Asm_Attribute;\n \n-         --  The back-end may need to take the address of E2\n+         --  The back end may need to take the address of E2\n \n          if Is_Entity_Name (E2) then\n             Set_Address_Taken (Entity (E2));\n@@ -3052,7 +3052,7 @@ package body Sem_Attr is\n \n          Note_Possible_Modification (E2, Sure => True);\n \n-         --  The back-end may need to take the address of E2\n+         --  The back end may need to take the address of E2\n \n          if Is_Entity_Name (E2) then\n             Set_Address_Taken (Entity (E2));\n@@ -4991,7 +4991,7 @@ package body Sem_Attr is\n             --  out-of-order issues.\n \n             --  This expansion is both harmful and not needed in SPARK mode,\n-            --  since the formal verification backend relies on the types of\n+            --  since the formal verification back end relies on the types of\n             --  nodes (hence is not robust w.r.t. a change to base type here),\n             --  and does not suffer from the out-of-order issue described\n             --  above. Thus, this expansion is skipped in SPARK mode.\n@@ -5748,7 +5748,7 @@ package body Sem_Attr is\n          Set_Etype (N, Universal_Integer);\n \n          --  If we are processing pragmas Compile_Time_Warning and Compile_\n-         --  Time_Errors after the backend has been called and this occurrence\n+         --  Time_Errors after the back end has been called and this occurrence\n          --  of 'Size is known at compile time then it is safe to perform this\n          --  evaluation. Needed to perform the static evaluation of the full\n          --  boolean expression of these pragmas.\n@@ -6276,9 +6276,9 @@ package body Sem_Attr is\n             Store_String_Char (Get_String_Char (Full_Name, Pos (J)));\n          end loop;\n \n-         --  For standard type return the name of the type. as there is no\n+         --  For standard types return the name of the type, as there is no\n          --  explicit source declaration to use. Otherwise compute CRC and\n-         --  convert it to string one character at a time so as not to use\n+         --  convert it to string one character at a time, so as not to use\n          --  Image within the compiler.\n \n          if Scope (Entity (P)) /= Standard_Standard then"}, {"sha": "f8368536c50178f152c8dc38d2fa1caf07cd47fd", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -133,7 +133,7 @@ package body Sem_Case is\n       --  found an illegal intersection.\n \n       procedure Check_Duplicates;\n-      --  Check for duplicate choices, and call Dup_Choice is there are any\n+      --  Check for duplicate choices, and call Dup_Choice if there are any\n       --  such errors. Note that predicates are irrelevant here.\n \n       procedure Dup_Choice (Lo, Hi : Uint; C : Node_Id);\n@@ -811,7 +811,7 @@ package body Sem_Case is\n       --  Then check for overlaps\n \n       --  If the subtype has a static predicate, the predicate defines subsets\n-      --  of legal values and requires finer grained analysis.\n+      --  of legal values and requires finer-grained analysis.\n \n       --  Note that in GNAT the predicate is considered static if the predicate\n       --  expression is static, independently of whether the aspect mentions"}, {"sha": "8003f8e3b25a6b9beb1c17cf7cf256b638d03766", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -192,13 +192,13 @@ package Sem_Ch13 is\n    --  N is a pragma Compile_Time_Error or Compile_Warning_Error whose boolean\n    --  expression is not known at compile time. This procedure makes an entry\n    --  in a table. The actual checking is performed by Validate_Compile_Time_\n-   --  Warning_Errors which is invoked after calling the backend.\n+   --  Warning_Errors, which is invoked after calling the back end.\n \n    procedure Validate_Compile_Time_Warning_Errors;\n-   --  This routine is called after calling the backend to validate pragmas\n+   --  This routine is called after calling the back end to validate pragmas\n    --  Compile_Time_Error and Compile_Time_Warning for size and alignment\n    --  appropriateness. The reason it is called that late is to take advantage\n-   --  of any back-annotation of size and alignment performed by the backend.\n+   --  of any back-annotation of size and alignment performed by the back end.\n \n    procedure Validate_Unchecked_Conversion\n      (N        : Node_Id;\n@@ -212,10 +212,10 @@ package Sem_Ch13 is\n    --  back end as required.\n \n    procedure Validate_Unchecked_Conversions;\n-   --  This routine is called after calling the backend to validate unchecked\n+   --  This routine is called after calling the back end to validate unchecked\n    --  conversions for size and alignment appropriateness. The reason it is\n    --  called that late is to take advantage of any back-annotation of size\n-   --  and alignment performed by the backend.\n+   --  and alignment performed by the back end.\n \n    procedure Validate_Address_Clauses;\n    --  This is called after the back end has been called (and thus after the"}, {"sha": "e553dabaf8f6ce7309ad82b04d6a437e754509ad", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -263,7 +263,7 @@ package body Sem_Prag is\n       Constit_Id : Entity_Id) return Entity_Id;\n    --  Given the entity of a constituent Constit_Id, find the corresponding\n    --  encapsulating state which appears in States. The routine returns Empty\n-   --  is no such state is found.\n+   --  if no such state is found.\n \n    function Find_Related_Context\n      (Prag      : Node_Id;\n@@ -24848,10 +24848,10 @@ package body Sem_Prag is\n \n             --  Not one of the constituents appeared as Input. Always emit an\n             --  error when the full refinement is visible (SPARK RM 7.2.4(3a)).\n-            --  When only partial refinement is visible, emit an\n-            --  error if the abstract state itself is not utilized\n-            --  (SPARK RM 7.2.4(3d)). In the case where both are utilized,\n-            --  an error will be issued in Check_State_And_Constituent_Use.\n+            --  When only partial refinement is visible, emit an error if the\n+            --  abstract state itself is not utilized (SPARK RM 7.2.4(3d)). In\n+            --  the case where both are utilized, an error will be issued in\n+            --  Check_State_And_Constituent_Use.\n \n             if not In_Seen\n               and then (Has_Visible_Refinement (State_Id)\n@@ -25032,8 +25032,8 @@ package body Sem_Prag is\n          procedure Check_Constituent_Usage (State_Id : Entity_Id);\n          --  Determine whether at least one constituent of state State_Id with\n          --  full or partial visible refinement is used and has mode Proof_In.\n-         --  Ensure that the remaining constituents do not have Input, In_Out\n-         --  or Output modes. Emit an error of this is not the case\n+         --  Ensure that the remaining constituents do not have Input, In_Out,\n+         --  or Output modes. Emit an error if this is not the case\n          --  (SPARK RM 7.2.4(5)).\n \n          -----------------------------"}, {"sha": "b229a6c8fe75e1ff9e66a2fedd74f7f71513805c", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d2e84b72ff8032b8407bb27e9818f01ba8b55d/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=c9d2e84b72ff8032b8407bb27e9818f01ba8b55d", "patch": "@@ -490,8 +490,8 @@ package Sem_Prag is\n       Eloc : Source_Ptr);\n    --  Common processing for Compile_Time_Error and Compile_Time_Warning of\n    --  pragma N. Called when the pragma is processed as part of its regular\n-   --  analysis but also called after calling the backend to validate these\n-   --  pragmas for size and alignment apropriateness.\n+   --  analysis but also called after calling the back end to validate these\n+   --  pragmas for size and alignment appropriateness.\n \n    procedure Process_Compilation_Unit_Pragmas (N : Node_Id);\n    --  Called at the start of processing compilation unit N to deal with any"}]}