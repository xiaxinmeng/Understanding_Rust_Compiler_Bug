{"sha": "63d59526e325b820a4694f4e32b55400611753ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNkNTk1MjZlMzI1YjgyMGE0Njk0ZjRlMzJiNTU0MDA2MTE3NTNhZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-05T00:05:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-05T00:05:02Z"}, "message": "(strength_reduce): Ignore initial value if it is the wrong mode.\n\n(record_initial): Don't ignore any set of the register.\n\nFrom-SVN: r6002", "tree": {"sha": "887bd72b739fa2daabb7425d397940a61def907f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/887bd72b739fa2daabb7425d397940a61def907f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63d59526e325b820a4694f4e32b55400611753ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d59526e325b820a4694f4e32b55400611753ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d59526e325b820a4694f4e32b55400611753ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d59526e325b820a4694f4e32b55400611753ae/comments", "author": null, "committer": null, "parents": [{"sha": "4eae5fe18f93432fde3d744d5ddeda6d85efdedd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eae5fe18f93432fde3d744d5ddeda6d85efdedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eae5fe18f93432fde3d744d5ddeda6d85efdedd"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "99b2170e9ff0500174cbc2d1d5999e927d764a29", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d59526e325b820a4694f4e32b55400611753ae/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d59526e325b820a4694f4e32b55400611753ae/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=63d59526e325b820a4694f4e32b55400611753ae", "patch": "@@ -3410,7 +3410,8 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t\t \"Biv %d initialized at insn %d: initial value \",\n \t\t bl->regno, INSN_UID (bl->init_insn));\n \n-      if (valid_initial_value_p (src, bl->init_insn, call_seen, loop_start))\n+      if (GET_MODE (src) == GET_MODE (regno_reg_rtx[bl->regno])\n+\t  && valid_initial_value_p (src, bl->init_insn, call_seen, loop_start))\n \t{\n \t  bl->initial_value = src;\n \n@@ -6239,9 +6240,7 @@ record_initial (dest, set)\n \n   if (GET_CODE (dest) != REG\n       || REGNO (dest) >= max_reg_before_loop\n-      || reg_iv_type[REGNO (dest)] != BASIC_INDUCT\n-      /* Reject this insn if the source isn't valid for the mode of DEST.  */\n-      || GET_MODE (dest) != GET_MODE (SET_DEST (set)))\n+      || reg_iv_type[REGNO (dest)] != BASIC_INDUCT)\n     return;\n \n   bl = reg_biv_class[REGNO (dest)];"}]}