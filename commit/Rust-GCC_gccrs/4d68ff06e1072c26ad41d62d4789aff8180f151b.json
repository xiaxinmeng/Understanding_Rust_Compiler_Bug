{"sha": "4d68ff06e1072c26ad41d62d4789aff8180f151b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2OGZmMDZlMTA3MmMyNmFkNDFkNjJkNDc4OWFmZjgxODBmMTUxYg==", "commit": {"author": {"name": "Daniel Santos", "email": "daniel.santos@pobox.com", "date": "2017-08-22T17:59:24Z"}, "committer": {"name": "Daniel Santos", "email": "dansan@gcc.gnu.org", "date": "2017-08-22T17:59:24Z"}, "message": "PR target/71958: Error on -mx32 with -mabi=ms\n\ngcc/ChangeLog:\n2017-08-11  Daniel Santos  <daniel.santos@pobox.com>\n\n\t* config/i386/i386.c (ix86_option_override_internal): Error when\n\t-mx32 is combined with -mabi=ms.\n\t(ix86_function_type_abi): Limit errors for mixing -mx32 with\n\tattribute ms_abi.\n\ngcc/testsuite/ChangeLog:\n2017-08-11  Daniel Santos  <daniel.santos@pobox.com>\n\n\t* gcc.target/i386/pr71958.c: New test to verify error on -mx32\n\tand -mabi=ms\n \t* gcc.target/i386/pr64409.c: Modify to only run on x32.\n\t* gcc.target/i386/pr46470.c: Modify to skip x32 target.\n \t* gcc.target/i386/pr66275.c: Likewise.\n \t* gcc.target/i386/pr68018.c: Likewise.\n\nFrom-SVN: r251287", "tree": {"sha": "97e181e2b8433052176482e37cdb62bd87ca2c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97e181e2b8433052176482e37cdb62bd87ca2c11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d68ff06e1072c26ad41d62d4789aff8180f151b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d68ff06e1072c26ad41d62d4789aff8180f151b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d68ff06e1072c26ad41d62d4789aff8180f151b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d68ff06e1072c26ad41d62d4789aff8180f151b/comments", "author": {"login": "daniel-santos", "id": 980562, "node_id": "MDQ6VXNlcjk4MDU2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/980562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-santos", "html_url": "https://github.com/daniel-santos", "followers_url": "https://api.github.com/users/daniel-santos/followers", "following_url": "https://api.github.com/users/daniel-santos/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-santos/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-santos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-santos/subscriptions", "organizations_url": "https://api.github.com/users/daniel-santos/orgs", "repos_url": "https://api.github.com/users/daniel-santos/repos", "events_url": "https://api.github.com/users/daniel-santos/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-santos/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65d3dce8e80d0a697d63c92abfde078a11e37e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d3dce8e80d0a697d63c92abfde078a11e37e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d3dce8e80d0a697d63c92abfde078a11e37e64"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "8a9da80b7e9d34b85b0c20f79b21d2dab7131d8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -1,3 +1,10 @@\n+2017-08-22  Daniel Santos  <daniel.santos@pobox.com>\n+\n+\t* config/i386/i386.c (ix86_option_override_internal): Error when -mx32\n+\tis combined with -mabi=ms.\n+\t(ix86_function_type_abi): Limit errors for mixing -mx32 with attribute\n+\tms_abi.\n+\n 2017-08-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/81488"}, {"sha": "650bcbc65ae92801c50610e2b733bda2201c1ba7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -5684,6 +5684,10 @@ ix86_option_override_internal (bool main_args_p,\n   if (!opts_set->x_ix86_abi)\n     opts->x_ix86_abi = DEFAULT_ABI;\n \n+  if (opts->x_ix86_abi == MS_ABI && TARGET_X32_P (opts->x_ix86_isa_flags))\n+    error (\"-mabi=ms not supported with X32 ABI\");\n+  gcc_assert (opts->x_ix86_abi == SYSV_ABI || opts->x_ix86_abi == MS_ABI);\n+\n   /* For targets using ms ABI enable ms-extensions, if not\n      explicit turned off.  For non-ms ABI we turn off this\n      option.  */\n@@ -8777,8 +8781,12 @@ ix86_function_type_abi (const_tree fntype)\n   if (abi == SYSV_ABI\n       && lookup_attribute (\"ms_abi\", TYPE_ATTRIBUTES (fntype)))\n     {\n-      if (TARGET_X32)\n-\terror (\"X32 does not support ms_abi attribute\");\n+      static int warned;\n+      if (TARGET_X32 && !warned)\n+\t{\n+\t  error (\"X32 does not support ms_abi attribute\");\n+\t  warned = 1;\n+\t}\n \n       abi = MS_ABI;\n     }"}, {"sha": "fe394556efe58964ae1d5559582b8c9c1e684b85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -1,3 +1,12 @@\n+2017-08-22  Daniel Santos  <daniel.santos@pobox.com>\n+\n+\t* gcc.target/i386/pr71958.c: New test to verify error on -mx32 and\n+\t-mabi=ms\n+\t* gcc.target/i386/pr64409.c: Modify to only run on x32.\n+\t* gcc.target/i386/pr46470.c: Modify to skip x32 target.\n+\t* gcc.target/i386/pr66275.c: Likewise.\n+\t* gcc.target/i386/pr68018.c: Likewise.\n+\n 2017-08-22  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-sums-int.c: New."}, {"sha": "c66a378a1ad91ecf0465f5ca9931154e9dee93d9", "filename": "gcc/testsuite/gcc.target/i386/pr46470.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46470.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46470.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46470.c?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target { ! x32 } } } */\n /* The pic register save adds unavoidable stack pointer references.  */\n /* { dg-skip-if \"\" { ia32 && { ! nonpic } } } */\n /* These options are selected to ensure 1 word needs to be allocated"}, {"sha": "7bf9d1e398d2aa0f4ee8f0b4b402a2d82f4e8abe", "filename": "gcc/testsuite/gcc.target/i386/pr64409.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64409.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64409.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64409.c?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-do compile { target x32 } } */\n /* { dg-require-effective-target maybe_x32 } */\n /* { dg-options \"-O0 -mx32\" } */\n "}, {"sha": "51ae1f6859c37de48f61f0722a05d8db41ae10fd", "filename": "gcc/testsuite/gcc.target/i386/pr66275.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66275.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66275.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66275.c?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { *-*-linux* && { ! ia32 } } } } */\n+/* { dg-do compile { target { *-*-linux* && lp64 } } } */\n /* { dg-options \"-mabi=ms -fdump-rtl-dfinit\" } */\n \n void"}, {"sha": "04929c6c13c2a2a111969d02f4ffc60a0c279545", "filename": "gcc/testsuite/gcc.target/i386/pr68018.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68018.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68018.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68018.c?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { *-*-linux* && { ! ia32 } } } } */\n+/* { dg-do compile { target { *-*-linux* && lp64 } } } */\n /* { dg-options \"-O -mabi=ms -mstackrealign\" } */\n \n typedef float V __attribute__ ((vector_size (16)));"}, {"sha": "c5a109767c1b477df8384e10baaaeb8e4e39f601", "filename": "gcc/testsuite/gcc.target/i386/pr71958.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71958.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d68ff06e1072c26ad41d62d4789aff8180f151b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71958.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71958.c?ref=4d68ff06e1072c26ad41d62d4789aff8180f151b", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { x32 } } } */\n+/* { dg-options \"-mabi=ms\" } */\n+/* { dg-error \"-mabi=ms not supported with X32 ABI\" \"\" { target *-*-* } 0 } */\n+\n+void main ()\n+{\n+}"}]}