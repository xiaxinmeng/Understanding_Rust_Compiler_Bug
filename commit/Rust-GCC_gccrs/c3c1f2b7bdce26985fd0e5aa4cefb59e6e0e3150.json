{"sha": "c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjMWYyYjdiZGNlMjY5ODVmZDBlNWFhNGNlZmI1OWU2ZTBlMzE1MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-10-19T22:45:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-19T22:45:58Z"}, "message": "re PR c++/13657 (Error message incorrectly describes return type as argument type)\n\n/cp\n2011-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/13657\n\t* class.c (instantiate_type): Fix error message.\n\n/testsuite\n2011-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/13657\n\t* g++.dg/parse/error42.C: New.\n\t* g++.old-deja/g++.other/ptrmem7.C: Tweak dg-errors.\n\nFrom-SVN: r180228", "tree": {"sha": "a02fd41d6c61be0f14c97b3b7e62f955d2f52009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a02fd41d6c61be0f14c97b3b7e62f955d2f52009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/comments", "author": null, "committer": null, "parents": [{"sha": "875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "a32a7b9fca0db8ad26aa8083f2399b5a746236c8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "patch": "@@ -1,3 +1,8 @@\n+2011-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/13657\n+\t* class.c (instantiate_type): Fix error message.\n+\n 2011-10-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50793"}, {"sha": "ee6ca049d3f2d3a76273a5c69290e39d540a12be", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "patch": "@@ -6867,8 +6867,8 @@ instantiate_type (tree lhstype, tree rhs, tsubst_flags_t flags)\n       else\n \t{\n \t  if (flags & tf_error)\n-\t    error (\"argument of type %qT does not match %qT\",\n-\t\t   TREE_TYPE (rhs), lhstype);\n+\t    error (\"cannot convert %qE from type %qT to type %qT\",\n+\t\t   rhs, TREE_TYPE (rhs), lhstype);\n \t  return error_mark_node;\n \t}\n     }"}, {"sha": "709fae4848c453929a92e10ce07f877dd9957b83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "patch": "@@ -1,3 +1,9 @@\n+2011-10-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/13657\n+\t* g++.dg/parse/error42.C: New.\n+\t* g++.old-deja/g++.other/ptrmem7.C: Tweak dg-errors.\n+\n 2011-10-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/50793"}, {"sha": "5e4c5bbdd2dcc4df0713180dc49034d4ac83a8fc", "filename": "gcc/testsuite/g++.dg/parse/error42.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror42.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror42.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror42.C?ref=c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/13657\n+\n+class C { public: int (*f())(); int bar(); };\n+int (*C::f())() { return C::bar; } // { dg-error \"cannot convert 'C::bar'\" }"}, {"sha": "987c0445a674269c56ac173eb96c2353c000c3f7", "filename": "gcc/testsuite/g++.old-deja/g++.other/ptrmem7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C?ref=c3c1f2b7bdce26985fd0e5aa4cefb59e6e0e3150", "patch": "@@ -31,9 +31,9 @@ void A::foo ()\n   int (*ptr8) (short) = ns;\n \n   int (A::*ptr11) (int) = &A::single;\n-  int (A::*ptr12) (int) = A::single;      // { dg-error \"match\" }\n+  int (A::*ptr12) (int) = A::single;      // { dg-error \"cannot convert\" }\n   int (A::*ptr13) (int) = &single;        // { dg-error \"pointer to member\" }\n-  int (A::*ptr14) (int) = single;         // { dg-error \"match\" }\n+  int (A::*ptr14) (int) = single;         // { dg-error \"cannot convert\" }\n \n   int (A::*ptr20) (int) = &(A::ns);       // { dg-error \"pointer to member\" }\n   int (A::*ptr21) (int) = &(A::single);   // { dg-error \"pointer to member\" }"}]}