{"sha": "983acf87d6ce85034448b8f654de457c50617090", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgzYWNmODdkNmNlODUwMzQ0NDhiOGY2NTRkZTQ1N2M1MDYxNzA5MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-06-13T15:00:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-06-13T15:00:41Z"}, "message": "re PR tree-optimization/90869 (Non-disambiguated memory accesses)\n\n\tPR tree-optimize/90869\n\t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Watch for view\n\tconverts in MEM_REF referencing decl rather than view converts\n\tfrom decl type to MEM_REF type.\n\n\t* g++.dg/tree-ssa/alias-access-path-1.C: New testcase.\n\nFrom-SVN: r272247", "tree": {"sha": "6075c4952eba390990b2664a93c58112b154e596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6075c4952eba390990b2664a93c58112b154e596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/983acf87d6ce85034448b8f654de457c50617090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983acf87d6ce85034448b8f654de457c50617090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/983acf87d6ce85034448b8f654de457c50617090", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/983acf87d6ce85034448b8f654de457c50617090/comments", "author": null, "committer": null, "parents": [{"sha": "9bc83b61ff2b3353934704befe02c2262c48d2bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc83b61ff2b3353934704befe02c2262c48d2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc83b61ff2b3353934704befe02c2262c48d2bc"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "8ca14720788b9f598345deb24a3bf4f5c60e2a59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983acf87d6ce85034448b8f654de457c50617090/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983acf87d6ce85034448b8f654de457c50617090/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=983acf87d6ce85034448b8f654de457c50617090", "patch": "@@ -1,3 +1,10 @@\n+2019-06-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-optimization/90869\n+\t* tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Watch for view\n+\tconverts in MEM_REF referencing decl rather than view converts\n+\tfrom decl type to MEM_REF type.\n+\n 2019-06-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90856"}, {"sha": "62919d5d41ef1dd9e54cc0988fa6c69f3d7d757a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983acf87d6ce85034448b8f654de457c50617090/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983acf87d6ce85034448b8f654de457c50617090/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=983acf87d6ce85034448b8f654de457c50617090", "patch": "@@ -1,3 +1,8 @@\n+2019-06-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR tree-optimization/90869\n+\t* g++.dg/tree-ssa/alias-access-path-1.C: New testcase.\n+\n 2019-06-13  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90856"}, {"sha": "ceb0e70ff685c1ddbbb7d66321a5772770b66f86", "filename": "gcc/testsuite/g++.dg/tree-ssa/alias-access-path-1.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983acf87d6ce85034448b8f654de457c50617090/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Falias-access-path-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983acf87d6ce85034448b8f654de457c50617090/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Falias-access-path-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Falias-access-path-1.C?ref=983acf87d6ce85034448b8f654de457c50617090", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-fre1\" } */\n+\n+struct a {int a1; int a2;};\n+struct b:a {};\n+\n+struct b bvar,*bptr2;\n+int\n+test(void)\n+{\n+  struct a *bptr = &bvar;\n+  bptr->a2=0;\n+  bptr2->a1=1;\n+  return bptr->a2;\n+}\n+int\n+test2(void)\n+{\n+  struct b *bptr = &bvar;\n+  bptr->a2=0;\n+  bptr2->a1=1;\n+  return bptr->a2;\n+}\n+/* { dg-final { scan-tree-dump-times \"return 0\" 2 \"fre1\" } } */"}, {"sha": "2d2b3b86cfdafacb1e9ac8695c0cbb0dc8e0aab3", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/983acf87d6ce85034448b8f654de457c50617090/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/983acf87d6ce85034448b8f654de457c50617090/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=983acf87d6ce85034448b8f654de457c50617090", "patch": "@@ -1370,11 +1370,16 @@ indirect_ref_may_alias_decl_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n   poly_offset_int doffset2 = offset2;\n   if (TREE_CODE (dbase2) == MEM_REF\n       || TREE_CODE (dbase2) == TARGET_MEM_REF)\n-    doffset2 -= mem_ref_offset (dbase2) << LOG2_BITS_PER_UNIT;\n+    {\n+      doffset2 -= mem_ref_offset (dbase2) << LOG2_BITS_PER_UNIT;\n+      tree ptrtype2 = TREE_TYPE (TREE_OPERAND (dbase2, 1));\n+      /* If second reference is view-converted, give up now.  */\n+      if (same_type_for_tbaa (TREE_TYPE (dbase2), TREE_TYPE (ptrtype2)) != 1)\n+\treturn true;\n+    }\n \n-  /* If either reference is view-converted, give up now.  */\n-  if (same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) != 1\n-      || same_type_for_tbaa (TREE_TYPE (dbase2), TREE_TYPE (base2)) != 1)\n+  /* If first reference is view-converted, give up now.  */\n+  if (same_type_for_tbaa (TREE_TYPE (base1), TREE_TYPE (ptrtype1)) != 1)\n     return true;\n \n   /* If both references are through the same type, they do not alias\n@@ -1408,7 +1413,13 @@ indirect_ref_may_alias_decl_p (tree ref1 ATTRIBUTE_UNUSED, tree base1,\n \t\t\t\t      offset1, max_size1,\n \t\t\t\t      ref2,\n \t\t\t\t      ref2_alias_set, base2_alias_set,\n-\t\t\t\t      offset2, max_size2, true);\n+\t\t\t\t      offset2, max_size2, \n+\t\t\t\t      /* Only if the other reference is actual\n+\t\t\t\t\t decl we can safely check only toplevel\n+\t\t\t\t\t part of access path 1.  */\n+\t\t\t\t      same_type_for_tbaa (TREE_TYPE (dbase2),\n+\t\t\t\t\t                  TREE_TYPE (base2))\n+\t\t\t\t      == 1);\n \n   return true;\n }"}]}