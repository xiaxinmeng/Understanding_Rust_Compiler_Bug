{"sha": "194f712f8b7a6a31651f4cf57d49fbf701da5ed6", "node_id": "C_kwDOANBUbNoAKDE5NGY3MTJmOGI3YTZhMzE2NTFmNGNmNTdkNDlmYmY3MDFkYTVlZDY", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2022-01-05T20:28:37Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2022-01-05T20:32:24Z"}, "message": "Avoid -Wformat-diag.\n\ngcc/ChangeLog:\n\t* gimple-ssa-warn-access.cc (pass_waccess::maybe_warn_memmodel): Use\n\t%qs to avoid -Wformat-diag.", "tree": {"sha": "5d1df3d942e957b2e32966aa4120f9c8604ce5c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d1df3d942e957b2e32966aa4120f9c8604ce5c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/194f712f8b7a6a31651f4cf57d49fbf701da5ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194f712f8b7a6a31651f4cf57d49fbf701da5ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/194f712f8b7a6a31651f4cf57d49fbf701da5ed6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194f712f8b7a6a31651f4cf57d49fbf701da5ed6/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aa44066b342b9636a736f28d7ac3a0d44dae5c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa44066b342b9636a736f28d7ac3a0d44dae5c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa44066b342b9636a736f28d7ac3a0d44dae5c8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e4c078a8e43c3453e0d7858ddab9737a7070e095", "filename": "gcc/gimple-ssa-warn-access.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194f712f8b7a6a31651f4cf57d49fbf701da5ed6/gcc%2Fgimple-ssa-warn-access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194f712f8b7a6a31651f4cf57d49fbf701da5ed6/gcc%2Fgimple-ssa-warn-access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-access.cc?ref=194f712f8b7a6a31651f4cf57d49fbf701da5ed6", "patch": "@@ -2841,7 +2841,7 @@ pass_waccess::maybe_warn_memmodel (gimple *stmt, tree ord_sucs,\n       for (unsigned i = 0; valid[i] != UCHAR_MAX; ++i)\n \t{\n \t  const char *modname = memory_models[valid[i]].modname;\n-\t  pp_printf (&pp, \"%s%<%s%>\", i ? \", \" : \"\", modname);\n+\t  pp_printf (&pp, \"%s%qs\", i ? \", \" : \"\", modname);\n \t}\n \n       inform (loc, \"valid models are %s\", pp_formatted_text (&pp));"}]}