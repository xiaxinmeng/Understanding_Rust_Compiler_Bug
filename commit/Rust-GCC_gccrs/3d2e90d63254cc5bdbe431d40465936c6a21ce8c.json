{"sha": "3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QyZTkwZDYzMjU0Y2M1YmRiZTQzMWQ0MDQ2NTkzNmM2YTIxY2U4Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-18T21:50:25Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-18T21:50:25Z"}, "message": "h8300-protos.h: Update the prototype for expand_a_rotate().\n\n\t* config/h8300/h8300-protos.h: Update the prototype for\n\texpand_a_rotate().\n\t* config/h8300/h8300.c (expand_a_rotate): Remove the first\n\targument.\n\t* config/h8300/h8300.md: Update all callers.\n\nFrom-SVN: r78047", "tree": {"sha": "5acacac4173d458ac8b66a269850552f82a61101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5acacac4173d458ac8b66a269850552f82a61101"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/comments", "author": null, "committer": null, "parents": [{"sha": "79ae63b183c55dc44a5071ed804c4955adeb99af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ae63b183c55dc44a5071ed804c4955adeb99af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79ae63b183c55dc44a5071ed804c4955adeb99af"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "82b99989b292800f7233be09c5fa3c102a266820", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "patch": "@@ -1,3 +1,11 @@\n+2004-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300-protos.h: Update the prototype for\n+\texpand_a_rotate().\n+\t* config/h8300/h8300.c (expand_a_rotate): Remove the first\n+\targument.\n+\t* config/h8300/h8300.md: Update all callers.\n+\n 2004-02-18  Jan Hubicka  <jh@suse.cz>\n \n \t* simplify-rtx.c (simplify_unary_operation): Deal with logicals on"}, {"sha": "a37933a8211e4b97ca0396b13f603bdf1f0d7444", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "patch": "@@ -47,7 +47,7 @@ extern unsigned int compute_logical_op_length (enum machine_mode,\n extern int compute_logical_op_cc (enum machine_mode, rtx *);\n extern void expand_a_shift (enum machine_mode, int, rtx[]);\n extern int h8300_shift_needs_scratch_p (int, enum machine_mode);\n-extern int expand_a_rotate (enum rtx_code, rtx[]);\n+extern int expand_a_rotate (rtx[]);\n extern int fix_bit_operand (rtx *, enum rtx_code);\n extern int h8300_adjust_insn_length (rtx, int);\n extern void split_adds_subs (enum machine_mode, rtx[]);"}, {"sha": "6857f80c838295e73dfd492a7356752112cca57f", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "patch": "@@ -3855,7 +3855,7 @@ compute_a_shift_cc (rtx insn ATTRIBUTE_UNUSED, rtx *operands)\n    output_a_rotate () at the insn emit time.  */\n \n int\n-expand_a_rotate (enum rtx_code code, rtx operands[])\n+expand_a_rotate (rtx operands[])\n {\n   rtx dst = operands[0];\n   rtx src = operands[1];"}, {"sha": "bf37b8928baa4f5ff3550da1ed96d0171f3509fd", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2e90d63254cc5bdbe431d40465936c6a21ce8c/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=3d2e90d63254cc5bdbe431d40465936c6a21ce8c", "patch": "@@ -2600,7 +2600,7 @@\n \t(rotate:QI (match_operand:QI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n+  \"if (expand_a_rotate (operands)) DONE; else FAIL;\")\n \n (define_insn \"rotlqi3_1\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n@@ -2616,7 +2616,7 @@\n \t(rotate:HI (match_operand:HI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"\"\n-  \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n+  \"if (expand_a_rotate (operands)) DONE; else FAIL;\")\n \n (define_insn \"rotlhi3_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n@@ -2632,7 +2632,7 @@\n \t(rotate:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t   (match_operand:QI 2 \"nonmemory_operand\" \"\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n-  \"if (expand_a_rotate (ROTATE, operands)) DONE; else FAIL;\")\n+  \"if (expand_a_rotate (operands)) DONE; else FAIL;\")\n \n (define_insn \"rotlsi3_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")"}]}