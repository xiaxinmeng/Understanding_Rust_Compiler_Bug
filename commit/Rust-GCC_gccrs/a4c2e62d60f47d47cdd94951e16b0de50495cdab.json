{"sha": "a4c2e62d60f47d47cdd94951e16b0de50495cdab", "node_id": "C_kwDOANBUbNoAKGE0YzJlNjJkNjBmNDdkNDdjZGQ5NDk1MWUxNmIwZGU1MDQ5NWNkYWI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-05T09:45:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-05T09:45:26Z"}, "message": "gimple-fold: Remove incorrect folding of debug stmts [PR103691]\n\nFor ADDR_EXPR gimple_debug_bind_get_value fold_stmt_1 uses\nmaybe_canonicalize_mem_ref_addr earlier and I think that should\nresolve the concerns raised in PR52329.  But folding ADDR_EXPR\noperand using maybe_fold_reference and then taking address of that\nlooks like an invalid transformation, it can transform\n  # DEBUG D.4293 => &a[0]\ninto\n  # DEBUG D.4293 => &2.0e+0\netc., all we want to allow are the lhs folding of the operand which\nmaybe_fold_reference no longer does since r12-21-g0bf8cd9d5e8ac.\n\n2022-01-05  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR fortran/103691\n\t* gimple-fold.c (fold_stmt_1): Don't call maybe_fold_reference\n\tfor DEBUG stmts with ADDR_EXPR gimple_debug_bind_get_value,\n\tit can do unwanted rhs folding like &a[0] into &2.0 etc.\n\n\t* gfortran.dg/pr103691.f90: New test.", "tree": {"sha": "b9cc67bf30b21cd6ad4cff43af9b193c52e8f4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9cc67bf30b21cd6ad4cff43af9b193c52e8f4ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4c2e62d60f47d47cdd94951e16b0de50495cdab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c2e62d60f47d47cdd94951e16b0de50495cdab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4c2e62d60f47d47cdd94951e16b0de50495cdab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4c2e62d60f47d47cdd94951e16b0de50495cdab/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ce3bd7993bc8413197e07c4f54052e4ecaeccaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce3bd7993bc8413197e07c4f54052e4ecaeccaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce3bd7993bc8413197e07c4f54052e4ecaeccaa"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "77c551af942db1e0c3154e6714312a0d9754a335", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c2e62d60f47d47cdd94951e16b0de50495cdab/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c2e62d60f47d47cdd94951e16b0de50495cdab/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=a4c2e62d60f47d47cdd94951e16b0de50495cdab", "patch": "@@ -6283,8 +6283,7 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace, tree (*valueize) (tree))\n       if (gimple_debug_bind_p (stmt))\n \t{\n \t  tree val = gimple_debug_bind_get_value (stmt);\n-\t  if (val\n-\t      && REFERENCE_CLASS_P (val))\n+\t  if (val && REFERENCE_CLASS_P (val))\n \t    {\n \t      tree tem = maybe_fold_reference (val);\n \t      if (tem)\n@@ -6293,18 +6292,6 @@ fold_stmt_1 (gimple_stmt_iterator *gsi, bool inplace, tree (*valueize) (tree))\n \t\t  changed = true;\n \t\t}\n \t    }\n-\t  else if (val\n-\t\t   && TREE_CODE (val) == ADDR_EXPR)\n-\t    {\n-\t      tree ref = TREE_OPERAND (val, 0);\n-\t      tree tem = maybe_fold_reference (ref);\n-\t      if (tem)\n-\t\t{\n-\t\t  tem = build_fold_addr_expr_with_type (tem, TREE_TYPE (val));\n-\t\t  gimple_debug_bind_set_value (stmt, tem);\n-\t\t  changed = true;\n-\t\t}\n-\t    }\n \t}\n       break;\n "}, {"sha": "f1f551e20fa1f546672ea84110b7dc91830e33c8", "filename": "gcc/testsuite/gfortran.dg/pr103691.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4c2e62d60f47d47cdd94951e16b0de50495cdab/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr103691.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4c2e62d60f47d47cdd94951e16b0de50495cdab/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr103691.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr103691.f90?ref=a4c2e62d60f47d47cdd94951e16b0de50495cdab", "patch": "@@ -0,0 +1,9 @@\n+! PR fortran/103691\n+! { dg-do compile }\n+! { dg-options \"-O2 -g\" }\n+\n+program pr103691\n+  real, parameter :: a(0) = 2.0\n+  real, allocatable :: b(:)\n+  allocate (b, mold=a)\n+end"}]}