{"sha": "510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwYThkZDUxZDJlM2M5YjhlYjUxYTExZjMyM2Q1ZWQzMDY3NWY4MQ==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2006-02-03T23:58:09Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2006-02-03T23:58:09Z"}, "message": "Makefile.am (src.zip): Update src.zip file search to look in classpath directory.\n\n2006-02-03  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am (src.zip): Update src.zip file search to look in\n\tclasspath directory.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r110570", "tree": {"sha": "668064d847a2e0483460c671fa9c2e47e7957aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668064d847a2e0483460c671fa9c2e47e7957aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/comments", "author": null, "committer": null, "parents": [{"sha": "b323323f9b6324e9384b524e45ae0f4e406f9dc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b323323f9b6324e9384b524e45ae0f4e406f9dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b323323f9b6324e9384b524e45ae0f4e406f9dc7"}], "stats": {"total": 57, "additions": 51, "deletions": 6}, "files": [{"sha": "bdb0a89adab1294b949249e428a3b428930f997b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "patch": "@@ -1,3 +1,9 @@\n+2006-02-03  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (src.zip): Update src.zip file search to look in\n+\tclasspath directory.\n+\t* Makefile.in: Regenerate.\n+\n 2006-02-03  Robert Schuster  <robertschuster@fsfe.org>\n \n \t* link.cc:"}, {"sha": "4f663a0c9c5e9970909a940cde35610fa17faa29", "filename": "libjava/Makefile.am", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "patch": "@@ -864,20 +864,40 @@ gnu/gcj/xlib/natXUnmapEvent.cc\n src.zip:\n \t-rm -f src.zip\n \there=`pwd`; \\\n-\t( ( cd $(srcdir); \\\n+\t( \\\n+\t  ( cd $(srcdir)/classpath; \\\n \t  find java gnu javax org -name '*.java' -print | \\\n \t  while read file; do \\\n ## Ugly code to avoid \"echo -C\".  Must separate each entry by a newline\n ## Gross but easy.\n \t    echo \"x-C\" | sed -e 's/^.//'; \\\n-\t    echo $(srcdir); \\\n+\t    echo $(srcdir)/classpath; \\\n \t    echo $$file; \\\n \t  done ); \\\n ## Now the build tree.\n-\t  find gnu java -name '*.java' -print) | \\\n+\t  ( cd classpath; \\\n+\t    find gnu java -name '*.java' -print | \\\n+\t    while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo `pwd`; \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t) | \\\n ## Many of the above circumlocutions are because ZIP will most likely\n ## be a relative path to fastjar.\n \t$(ZIP) -cfM@ $$here/src.zip\n+## Override GNU Classpath sources with libgcj replacements.\n+\there=`pwd`; \\\n+\t( \\\n+\t  ( cd $(srcdir); \\\n+\t  find gnu java -name '*.java' -print | \\\n+\t  while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir); \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t) | \\\n+\t$(ZIP) -ufM@ $$here/src.zip\n \n ## We use a variable for this in case the user wants to override it.\n sourcesdir = $(jardir)"}, {"sha": "af11934ec76521ee6d5463ada3024982e6f88b14", "filename": "libjava/Makefile.in", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510a8dd51d2e3c9b8eb51a11f323d5ed30675f81/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=510a8dd51d2e3c9b8eb51a11f323d5ed30675f81", "patch": "@@ -9465,15 +9465,34 @@ write-entries-to-file-check:\n src.zip:\n \t-rm -f src.zip\n \there=`pwd`; \\\n-\t( ( cd $(srcdir); \\\n+\t( \\\n+\t  ( cd $(srcdir)/classpath; \\\n \t  find java gnu javax org -name '*.java' -print | \\\n \t  while read file; do \\\n \t    echo \"x-C\" | sed -e 's/^.//'; \\\n-\t    echo $(srcdir); \\\n+\t    echo $(srcdir)/classpath; \\\n \t    echo $$file; \\\n \t  done ); \\\n-\t  find gnu java -name '*.java' -print) | \\\n+\t  ( cd classpath; \\\n+\t    find gnu java -name '*.java' -print | \\\n+\t    while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo `pwd`; \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t) | \\\n \t$(ZIP) -cfM@ $$here/src.zip\n+\there=`pwd`; \\\n+\t( \\\n+\t  ( cd $(srcdir); \\\n+\t  find gnu java -name '*.java' -print | \\\n+\t  while read file; do \\\n+\t    echo \"x-C\" | sed -e 's/^.//'; \\\n+\t    echo $(srcdir); \\\n+\t    echo $$file; \\\n+\t  done ); \\\n+\t) | \\\n+\t$(ZIP) -ufM@ $$here/src.zip\n \n install-src.zip: src.zip\n \t$(INSTALL_DATA) src.zip $(DESTDIR)$(sourcesdir)/src-$(gcc_version).zip"}]}