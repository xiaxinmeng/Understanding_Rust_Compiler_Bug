{"sha": "e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE4Y2QzNzZlMGQ1ZmZjMmEyYjIxZWJhMGMzOTZhNzcxYzMwZTFkNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-08T15:16:10Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-08T15:16:10Z"}, "message": "libstdc++: Add comparison operators to <charconv> result types\n\nSome more C++20 changes from P1614R2, \"The Mothership has Landed\".\n\n\t* include/std/charconv (to_chars_result, from_chars_result): Add\n\tdefaulted equality comparisons for C++20.\n\t* testsuite/20_util/from_chars/compare.cc: New test.\n\t* testsuite/20_util/to_chars/compare.cc: New test.", "tree": {"sha": "e1d9ad6e5dc9494a76e22bd5128788663af579b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1d9ad6e5dc9494a76e22bd5128788663af579b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef684c7827361e7e66543b4511fb1ca15ace4b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef684c7827361e7e66543b4511fb1ca15ace4b1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef684c7827361e7e66543b4511fb1ca15ace4b1f"}], "stats": {"total": 121, "additions": 120, "deletions": 1}, "files": [{"sha": "fddba57d5484cc1bc641914de728a0be985eb167", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "patch": "@@ -1,3 +1,10 @@\n+2020-04-08  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/charconv (to_chars_result, from_chars_result): Add\n+\tdefaulted equality comparisons for C++20.\n+\t* testsuite/20_util/from_chars/compare.cc: New test.\n+\t* testsuite/20_util/to_chars/compare.cc: New test.\n+\n 2020-04-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/94520"}, {"sha": "3caa0f8ac1047b4afb8356ef217aba35bd0726c9", "filename": "libstdc++-v3/include/std/charconv", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv?ref=e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "patch": "@@ -44,7 +44,8 @@\n #include <bits/error_constants.h> // for std::errc\n #include <bits/int_limits.h>\n \n-// Define when floating point is supported: #define __cpp_lib_to_chars 201611L\n+// FIXME: Define when floating point is supported:\n+// #define __cpp_lib_to_chars 201611L\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -55,13 +56,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   {\n     char* ptr;\n     errc ec;\n+\n+#if __cplusplus > 201703L && __cpp_impl_three_way_comparison >= 201907L\n+    friend bool\n+    operator==(const to_chars_result&, const to_chars_result&) = default;\n+#endif\n   };\n \n   /// Result type of std::from_chars\n   struct from_chars_result\n   {\n     const char* ptr;\n     errc ec;\n+\n+#if __cplusplus > 201703L && __cpp_impl_three_way_comparison >= 201907L\n+    friend bool\n+    operator==(const from_chars_result&, const from_chars_result&) = default;\n+#endif\n   };\n \n namespace __detail"}, {"sha": "04d51afa4e3c81f35a583a955000b0bf20b28b34", "filename": "libstdc++-v3/testsuite/20_util/from_chars/compare.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2Fcompare.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2Fcompare.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffrom_chars%2Fcompare.cc?ref=e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <charconv>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::from_chars_result r1{}, r2{};\n+  VERIFY( r1 == r1 );\n+  VERIFY( !(r1 != r1) );\n+  VERIFY( r2 == r1 );\n+  VERIFY( !(r2 != r1) );\n+  r1.ptr = \"\";\n+  VERIFY( r1 == r1 );\n+  VERIFY( r1 != r2 );\n+  r2.ptr = \"a\" + 1;\n+  VERIFY( r1 != r2 );\n+  r2.ptr = r1.ptr;\n+  r2.ec = std::errc::invalid_argument;\n+  VERIFY( r1 != r2 );\n+  r1.ec = std::errc::no_such_file_or_directory;\n+  VERIFY( r1 != r2 );\n+  r1.ec = std::errc::invalid_argument;\n+  VERIFY( r2 == r1 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "64232955956dd223e4714dc6503236ec50c2bcfa", "filename": "libstdc++-v3/testsuite/20_util/to_chars/compare.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Fcompare.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Fcompare.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2Fcompare.cc?ref=e18cd376e0d5ffc2a2b21eba0c396a771c30e1d4", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <charconv>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  char str[2]{};\n+  std::to_chars_result r1{}, r2{};\n+  VERIFY( r1 == r1 );\n+  VERIFY( !(r1 != r1) );\n+  VERIFY( r2 == r1 );\n+  VERIFY( !(r2 != r1) );\n+  r1.ptr = str;\n+  VERIFY( r1 == r1 );\n+  VERIFY( r1 != r2 );\n+  r2.ptr = str + 1;\n+  VERIFY( r1 != r2 );\n+  r2.ptr = r1.ptr;\n+  r2.ec = std::errc::invalid_argument;\n+  VERIFY( r1 != r2 );\n+  r1.ec = std::errc::no_such_file_or_directory;\n+  VERIFY( r1 != r2 );\n+  r1.ec = std::errc::invalid_argument;\n+  VERIFY( r2 == r1 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}