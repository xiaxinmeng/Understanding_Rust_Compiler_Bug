{"sha": "319ea138fee0999bf71bf7f73a8783a24b596d4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE5ZWExMzhmZWUwOTk5YmY3MWJmN2Y3M2E4NzgzYTI0YjU5NmQ0ZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-08-19T01:31:47Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-08-19T01:31:47Z"}, "message": "toplev.c (independent_decode_option): Always process -g.\n\n        * toplev.c (independent_decode_option): Always process -g.\n        Remove third argument, now unused.  Adjust caller to match.\n\nFrom-SVN: r35800", "tree": {"sha": "841da35a8acdfcfcb2f603d88e123e4f412d1627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/841da35a8acdfcfcb2f603d88e123e4f412d1627"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/319ea138fee0999bf71bf7f73a8783a24b596d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319ea138fee0999bf71bf7f73a8783a24b596d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/319ea138fee0999bf71bf7f73a8783a24b596d4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319ea138fee0999bf71bf7f73a8783a24b596d4e/comments", "author": null, "committer": null, "parents": [{"sha": "8231ad949dda0d5941a56be74714e970970a4311", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8231ad949dda0d5941a56be74714e970970a4311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8231ad949dda0d5941a56be74714e970970a4311"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "76a9956e3aed603d85a6ac5080f4936c2c427269", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319ea138fee0999bf71bf7f73a8783a24b596d4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319ea138fee0999bf71bf7f73a8783a24b596d4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=319ea138fee0999bf71bf7f73a8783a24b596d4e", "patch": "@@ -1,3 +1,8 @@\n+2000-08-18  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* toplev.c (independent_decode_option): Always process -g.\n+\tRemove third argument, now unused.  Adjust caller to match.\n+\n 2000-08-18  Richard Henderson  <rth@cygnus.com>\n \n \t* combine.c (make_compound_operation): Break after creating"}, {"sha": "70082f944dddd7f9337404a0b51bb955d817efad", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319ea138fee0999bf71bf7f73a8783a24b596d4e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319ea138fee0999bf71bf7f73a8783a24b596d4e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=319ea138fee0999bf71bf7f73a8783a24b596d4e", "patch": "@@ -176,8 +176,7 @@ static void decode_d_option PARAMS ((const char *));\n static int decode_f_option PARAMS ((const char *));\n static int decode_W_option PARAMS ((const char *));\n static int decode_g_option PARAMS ((const char *));\n-static unsigned int independent_decode_option PARAMS ((int, char **,\n-\t\t\t\t\t\t       unsigned int));\n+static unsigned int independent_decode_option PARAMS ((int, char **));\n \n static void print_version PARAMS ((FILE *, const char *));\n static int print_single_switch PARAMS ((FILE *, int, int, const char *,\n@@ -4230,15 +4229,12 @@ ignoring option `%s' due to invalid debug level specification\",\n }\n \n /* Decode the first argument in the argv as a language-independent option.\n-   Return the number of strings consumed.  'strings_processed' is the\n-   number of strings that have already been decoded in a language\n-   specific fashion before this function was invoked.  */\n+   Return the number of strings consumed.  */\n \n static unsigned int\n-independent_decode_option (argc, argv, strings_processed)\n+independent_decode_option (argc, argv)\n      int argc;\n      char **argv;\n-     unsigned int strings_processed;\n {\n   char *arg = argv[0];\n \n@@ -4280,10 +4276,7 @@ independent_decode_option (argc, argv, strings_processed)\n       return decode_f_option (arg + 1);\n \n     case 'g':\n-      if (strings_processed == 0)\n-\treturn decode_g_option (arg + 1);\n-      else\n-\treturn strings_processed;\n+      return decode_g_option (arg + 1);\n \n     case 'd':\n       if (!strcmp (arg, \"dumpbase\"))\n@@ -4609,12 +4602,8 @@ main (argc, argv)\n \n       /* Now see if the option also has a language independent meaning.\n \t Some options are both language specific and language independent,\n-\t eg --help.  It is possible that there might be options that should\n-\t only be decoded in a language independent way if they were not\n-\t decoded in a language specific way, which is why 'lang_processed'\n-\t is passed in.  */\n-      indep_processed = independent_decode_option (argc - i, argv + i,\n-\t\t\t\t\t\t   lang_processed);\n+\t eg --help.  */\n+      indep_processed = independent_decode_option (argc - i, argv + i);\n \n       if (lang_processed || indep_processed)\n \ti += (lang_processed > indep_processed"}]}