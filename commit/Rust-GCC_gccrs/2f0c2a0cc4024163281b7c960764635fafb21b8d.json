{"sha": "2f0c2a0cc4024163281b7c960764635fafb21b8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYwYzJhMGNjNDAyNDE2MzI4MWI3Yzk2MDc2NDYzNWZhZmIyMWI4ZA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-09-12T22:19:00Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-09-12T22:19:00Z"}, "message": "remove STRUCT_VALUE macro\n\nThis macro was converted to the TARGET_STRUCT_VALUE_RTX hook many years\nago, however there are still some lingering definitions, and a use in\nlibobjc.  All the remaining definitions define the macro to 0, which\nlibobjc treats the same as undefined, so it won't break anything else to\nhave libobjc stop checking the macro.  However it may be that this part\nof libobjc has been broken for a long time on targets that only define\nthe hook, but that is a separate issue.\n\ngcc/ChangeLog:\n\n2015-09-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* config/arc/arc.h: Remove define of STRUCT_VALUE.\n\t* config/lm32/lm32.h: Likewise.\n\t* config/mep/mep.h: Likewise.\n\t* config/visium/visium.h: Likewise.\n\t* system.h: Poison STRUCT_VALUE macro.\n\nlibobjc/ChangeLog:\n\n2015-09-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\tPR libobjc/24775\n\t* sendmsg.c: Remove check of STRUCT_VALUE macro.\n\nFrom-SVN: r227710", "tree": {"sha": "640127d272b25dce189f22f63c39c3ffc6518f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/640127d272b25dce189f22f63c39c3ffc6518f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f0c2a0cc4024163281b7c960764635fafb21b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0c2a0cc4024163281b7c960764635fafb21b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0c2a0cc4024163281b7c960764635fafb21b8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0c2a0cc4024163281b7c960764635fafb21b8d/comments", "author": null, "committer": null, "parents": [{"sha": "ffaa5de654e256225a7dd324d40958fa93ad0250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffaa5de654e256225a7dd324d40958fa93ad0250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffaa5de654e256225a7dd324d40958fa93ad0250"}], "stats": {"total": 36, "additions": 14, "deletions": 22}, "files": [{"sha": "6e9e378ee9614d4f85fb47c1987be7f027e7a2a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -1,3 +1,11 @@\n+2015-09-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* config/arc/arc.h: Remove define of STRUCT_VALUE.\n+\t* config/lm32/lm32.h: Likewise.\n+\t* config/mep/mep.h: Likewise.\n+\t* config/visium/visium.h: Likewise.\n+\t* system.h: Poison STRUCT_VALUE macro.\n+\n 2015-09-12  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa.c (pa_output_move_double): Enhance to handle HIGH"}, {"sha": "e8baf5b8d79e0854e219f04e8164b4d23b14978c", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -896,10 +896,6 @@ arc_return_addr_rtx(COUNT,FRAME)\n /* Tell GCC to use RETURN_IN_MEMORY.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n-/* Register in which address to store a structure value\n-   is passed to a function, or 0 to use `invisible' first argument.  */\n-#define STRUCT_VALUE 0\n-\n /* EXIT_IGNORE_STACK should be nonzero if, when returning from a function,\n    the stack pointer does not matter.  The value is tested only in\n    functions that have frame pointers."}, {"sha": "c65538adcd8e0483bbbf618917f3bd587c21c975", "filename": "gcc/config/lm32/lm32.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Flm32%2Flm32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Flm32%2Flm32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.h?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -302,8 +302,6 @@ enum reg_class\n   LM32_NUM_INTS ((MODE) == BLKmode ?                     \\\n   int_size_in_bytes (TYPE) : GET_MODE_SIZE (MODE))\n \n-#define STRUCT_VALUE 0\n-\n /*---------------------------*/\n /* Function entry and exit.  */\n /*---------------------------*/"}, {"sha": "4d335b05adf06fa3d4198dc0baf65c7074a67bad", "filename": "gcc/config/mep/mep.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Fmep%2Fmep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Fmep%2Fmep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.h?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -499,8 +499,6 @@ typedef struct\n \n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n-#define STRUCT_VALUE 0\n-\n #define FUNCTION_OK_FOR_SIBCALL(DECL) mep_function_ok_for_sibcall(DECL)\n \f\n /* Prologue and epilogues are all handled via RTL.  */"}, {"sha": "71c960ed4fa65648708221fa54c646a14ce09ffe", "filename": "gcc/config/visium/visium.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Fvisium%2Fvisium.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fconfig%2Fvisium%2Fvisium.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.h?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -1075,14 +1075,6 @@ struct visium_args\n    If not defined, this defaults to the value 1. */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n-/* `STRUCT_VALUE'\n-\n-   If the structure value address is not passed in a register, define\n-   `STRUCT_VALUE' as an expression returning an RTX for the place\n-   where the address is passed.  If it returns 0, the address is\n-   passed as an \"invisible\" first argument. */\n-#define STRUCT_VALUE 0\n-\n /* Caller-Saves Register Allocation\n \n    If you enable it, GNU CC can save registers around function calls."}, {"sha": "3189bda8e5f790bb49e1e977c6c02b50976ac81d", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -956,7 +956,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tEXTRA_ADDRESS_CONSTRAINT CONST_DOUBLE_OK_FOR_CONSTRAINT_P\t   \\\n \tCALLER_SAVE_PROFITABLE LARGEST_EXPONENT_IS_NORMAL\t\t   \\\n \tROUND_TOWARDS_ZERO SF_SIZE DF_SIZE XF_SIZE TF_SIZE LIBGCC2_TF_CEXT \\\n-\tLIBGCC2_LONG_DOUBLE_TYPE_SIZE\n+\tLIBGCC2_LONG_DOUBLE_TYPE_SIZE STRUCT_VALUE\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}, {"sha": "26e468fc58487919e8d89604f52dd86e5bf64906", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -1,3 +1,8 @@\n+2015-09-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\tPR libobjc/24775\n+\t* sendmsg.c: Remove check of STRUCT_VALUE macro.\n+\n 2015-05-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* configure.ac: Remove manual SJLJ check."}, {"sha": "3a079f089031883e4beb1ace26f752a1728eca82", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f0c2a0cc4024163281b7c960764635fafb21b8d/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f0c2a0cc4024163281b7c960764635fafb21b8d/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=2f0c2a0cc4024163281b7c960764635fafb21b8d", "patch": "@@ -47,19 +47,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <assert.h> /* For assert */\n #include <string.h> /* For strlen */\n \n-/* This is how we hack STRUCT_VALUE to be 1 or 0.   */\n #define gen_rtx(args...) 1\n #define gen_rtx_MEM(args...) 1\n #define gen_rtx_REG(args...) 1\n /* Already defined in gcc/coretypes.h. So prevent double definition warning.  */\n #undef rtx\n #define rtx int\n \n-#if ! defined (STRUCT_VALUE) || STRUCT_VALUE == 0\n #define INVISIBLE_STRUCT_RETURN 1\n-#else\n-#define INVISIBLE_STRUCT_RETURN 0\n-#endif\n \n /* The uninstalled dispatch table.  If a class' dispatch table points\n    to __objc_uninstalled_dtable then that means it needs its dispatch"}]}