{"sha": "f256c2743099dca4e5708d51d423c6ca70c4afb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1NmMyNzQzMDk5ZGNhNGU1NzA4ZDUxZDQyM2M2Y2E3MGM0YWZiNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-01-05T22:47:24Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-01-05T22:47:24Z"}, "message": "invoke.texi (max-inline-insns-small): New parameters.\n\n\n\t* doc/invoke.texi (max-inline-insns-small): New parameters.\n\t* ipa-inline.c (want_early_inline_function_p): simplify.\n\t(want_inline_small_function_p): Fix pasto from previous patch;\n\tuse max-inline-insns-small bound.\n\t* params.def (max-inline-insns-small): New param.\n\t* ipa-fnsummary.c (analyze_function_body): Initialize time/size\n\tvariables correctly.\n\nFrom-SVN: r267603", "tree": {"sha": "e728e6206f4450d4d3306086625736287922b6d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e728e6206f4450d4d3306086625736287922b6d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f256c2743099dca4e5708d51d423c6ca70c4afb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f256c2743099dca4e5708d51d423c6ca70c4afb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f256c2743099dca4e5708d51d423c6ca70c4afb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f256c2743099dca4e5708d51d423c6ca70c4afb6/comments", "author": null, "committer": null, "parents": [{"sha": "beb04ce9d4d6b30ca881ff7f5ebd143433f84722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb04ce9d4d6b30ca881ff7f5ebd143433f84722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb04ce9d4d6b30ca881ff7f5ebd143433f84722"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "a231aeea3567f4c2a9d4af7c51c7f5680d192933", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -1,3 +1,13 @@\n+2019-01-05  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* doc/invoke.texi (max-inline-insns-small): New parameters.\n+\t* ipa-inline.c (want_early_inline_function_p): simplify.\n+\t(want_inline_small_function_p): Fix pasto from previous patch;\n+\tuse max-inline-insns-small bound.\n+\t* params.def (max-inline-insns-small): New param.\n+\t* ipa-fnsummary.c (analyze_function_body): Initialize time/size\n+\tvariables correctly.\n+\n 2019-01-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* doc/invoke.texi: Document max-inline-insns-size,"}, {"sha": "0706db60e11f867e7cd6579e10957eb76956ee73", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -11007,6 +11007,10 @@ by the compiler are investigated.  To those functions, a different\n (more restrictive) limit compared to functions declared inline can\n be applied.\n \n+@item max-inline-insns-small\n+This is bound applied to calls which are considered relevant with\n+@option{-finline-small-functions}.\n+\n @item max-inline-insns-size\n This is bound applied to calls which are optimized for size. Small growth\n may be desirable to anticipate optimization oppurtunities exposed by inlining."}, {"sha": "6bc9cb3c57fd4af6994a549d6f9d18bd8b33689e", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -1969,9 +1969,9 @@ fp_expression_p (gimple *stmt)\n static void\n analyze_function_body (struct cgraph_node *node, bool early)\n {\n-  sreal time = 0;\n+  sreal time = PARAM_VALUE (PARAM_UNINLINED_FUNCTION_TIME);\n   /* Estimate static overhead for function prologue/epilogue and alignment. */\n-  int size = 2;\n+  int size = PARAM_VALUE (PARAM_UNINLINED_FUNCTION_INSNS);\n   /* Benefits are scaled by probability of elimination that is in range\n      <0,2>.  */\n   basic_block bb;"}, {"sha": "73da38c78599aacedf4692266218c6e2a4da4d23", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -637,8 +637,7 @@ want_early_inline_function_p (struct cgraph_edge *e)\n \n       if (growth <= PARAM_VALUE (PARAM_MAX_INLINE_INSNS_SIZE))\n \t;\n-      else if (!e->maybe_hot_p ()\n-\t       && growth > 0)\n+      else if (!e->maybe_hot_p ())\n \t{\n \t  if (dump_enabled_p ())\n \t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, e->call_stmt,\n@@ -791,7 +790,7 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n       ipa_hints hints = estimate_edge_hints (e);\n       int big_speedup = -1; /* compute this lazily */\n \n-      if (growth <= PARAM_VALUE (PARAM_VALUE (PARAM_MAX_INLINE_INSNS_SIZE)))\n+      if (growth <= PARAM_VALUE (PARAM_MAX_INLINE_INSNS_SIZE))\n \t;\n       /* Apply MAX_INLINE_INSNS_SINGLE limit.  Do not do so when\n \t hints suggests that inlining given function is very profitable.  */\n@@ -809,9 +808,8 @@ want_inline_small_function_p (struct cgraph_edge *e, bool report)\n \t  want_inline = false;\n \t}\n       else if (!DECL_DECLARED_INLINE_P (callee->decl)\n-\t       && (in_lto_p\n-\t\t   && growth >= PARAM_VALUE (PARAM_EARLY_INLINING_INSNS))\n-\t       && !opt_for_fn (e->caller->decl, flag_inline_functions))\n+\t       && !opt_for_fn (e->caller->decl, flag_inline_functions)\n+\t       && growth >= PARAM_VALUE (PARAM_MAX_INLINE_INSNS_SMALL))\n \t{\n \t  /* growth_likely_positive is expensive, always test it last.  */\n           if (growth >= MAX_INLINE_INSNS_SINGLE"}, {"sha": "0e08db2fe3749bb2902c384276f9733a1b7000cd", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -83,6 +83,11 @@ DEFPARAM (PARAM_MAX_INLINE_INSNS_AUTO,\n \t  \"The maximum number of instructions when automatically inlining.\",\n \t  30, 0, 0)\n \n+DEFPARAM (PARAM_MAX_INLINE_INSNS_SMALL,\n+\t  \"max-inline-insns-small\",\n+\t  \"The maximum number of instructions when automatically inlining small functions.\",\n+\t  0, 0, 0)\n+\n DEFPARAM (PARAM_MAX_INLINE_INSNS_SIZE,\n \t  \"max-inline-insns-size\",\n \t  \"The maximum number of instructions when inlining for size.\","}, {"sha": "bbc65cb16736f88dd324b4c5cec00c00cde1e15c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -1,3 +1,7 @@\n+2019-01-05  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* gcc.dg/ipa/ipcp-2.c: Update bounds.\n+\n 2019-01-05  Dominique d'Humieres  <dominiq@gcc.gnu.org>\n \n \t* gcc.dg/plugin/plugindir1.c: Adjust dg-prune-output for Darwin."}, {"sha": "74b2c03103e37037a7cdc4288a2ea2e4625fc19b", "filename": "gcc/testsuite/gcc.dg/ipa/ipcp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f256c2743099dca4e5708d51d423c6ca70c4afb6/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-2.c?ref=f256c2743099dca4e5708d51d423c6ca70c4afb6", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -fipa-cp -fipa-cp-clone -fdump-ipa-cp -fno-early-inlining --param ipa-cp-eval-threshold=80\"  } */\n+/* { dg-options \"-O3 -fipa-cp -fipa-cp-clone -fdump-ipa-cp -fno-early-inlining --param ipa-cp-eval-threshold=200\"  } */\n /* { dg-add-options bind_pic_locally } */\n \n extern int get_stuff (int);"}]}