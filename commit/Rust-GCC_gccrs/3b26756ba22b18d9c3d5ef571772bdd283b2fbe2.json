{"sha": "3b26756ba22b18d9c3d5ef571772bdd283b2fbe2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IyNjc1NmJhMjJiMThkOWMzZDVlZjU3MTc3MmJkZDI4M2IyZmJlMg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2018-12-16T23:18:25Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2018-12-16T23:18:25Z"}, "message": "libphobos: Merge common version blocks for core.sys.posix.sys.msg.\n\nThis is a continuation of simplifying C bindings so there aren't dozens\nof duplicated code for each architecture.  For this particular module,\nit now more closely resembles how glibc arranges msq.h, fixing a couple\nof targets in the process, notably X32.\n\nBackport from upstream druntime 2.084.\n\nReviewed-on: https://github.com/dlang/druntime/pull/2362\n\nFrom-SVN: r267192", "tree": {"sha": "384ed9e2dfbf47db381f755164750c72e1b918e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/384ed9e2dfbf47db381f755164750c72e1b918e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b26756ba22b18d9c3d5ef571772bdd283b2fbe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b26756ba22b18d9c3d5ef571772bdd283b2fbe2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b26756ba22b18d9c3d5ef571772bdd283b2fbe2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b26756ba22b18d9c3d5ef571772bdd283b2fbe2/comments", "author": null, "committer": null, "parents": [{"sha": "8c02e054351eede75adf7cbffa8e9dfc20057623", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c02e054351eede75adf7cbffa8e9dfc20057623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c02e054351eede75adf7cbffa8e9dfc20057623"}], "stats": {"total": 569, "additions": 174, "deletions": 395}, "files": [{"sha": "1957debbda77ee3ec906f5718e0111856a639c77", "filename": "libphobos/libdruntime/core/sys/posix/sys/msg.d", "status": "modified", "additions": 174, "deletions": 395, "changes": 569, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b26756ba22b18d9c3d5ef571772bdd283b2fbe2/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmsg.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b26756ba22b18d9c3d5ef571772bdd283b2fbe2/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmsg.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmsg.d?ref=3b26756ba22b18d9c3d5ef571772bdd283b2fbe2", "patch": "@@ -6,421 +6,200 @@\n \n module core.sys.posix.sys.msg;\n \n+import core.sys.posix.config;\n import core.sys.posix.sys.ipc;\n-public import core.sys.posix.sys.types;\n-public import core.stdc.config;\n+import core.sys.posix.sys.types;\n+import core.stdc.config;\n \n version (CRuntime_Glibc):\n // Some of these may be from linux kernel headers.\n extern (C):\n \n-public enum MSG_STAT = 11;\n-public enum MSG_INFO = 12;\n+version (ARM)     version = ARM_Any;\n+version (AArch64) version = ARM_Any;\n+version (HPPA)    version = HPPA_Any;\n+version (HPPA64)  version = HPPA_Any;\n+version (MIPS32)  version = MIPS_Any;\n+version (MIPS64)  version = MIPS_Any;\n+version (PPC)     version = PPC_Any;\n+version (PPC64)   version = PPC_Any;\n+version (RISCV32) version = RISCV_Any;\n+version (RISCV64) version = RISCV_Any;\n+version (S390)    version = IBMZ_Any;\n+version (SPARC)   version = SPARC_Any;\n+version (SPARC64) version = SPARC_Any;\n+version (SystemZ) version = IBMZ_Any;\n+\n+version (linux)\n+{\n+    enum MSG_STAT = 11;\n+    enum MSG_INFO = 12;\n+\n+    enum MSG_NOERROR = 1 << 12; // octal!10000\n+    enum  MSG_EXCEPT = 2 << 12; // octal!20000\n+    enum    MSG_COPY = 4 << 12; // octal!40000\n+\n+    struct msginfo\n+    {\n+        int msgpool;\n+        int msgmap;\n+        int msgmax;\n+        int msgmnb;\n+        int msgmni;\n+        int msgssz;\n+        int msgtql;\n+        ushort msgseg;\n+    }\n+\n+    version (Alpha)     version = GENERICMSQ;\n+    version (ARM_Any)   version = GENERICMSQ;\n+    version (IA64)      version = GENERICMSQ;\n+    version (IBMZ_Any)  version = GENERICMSQ;\n+    version (RISCV_Any) version = GENERICMSQ;\n+\n+    version (GENERICMSQ)\n+    {\n+        // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/bits/msq-pad.h\n+        private enum MSQ_PAD_AFTER_TIME = (__WORDSIZE == 32);\n+        private enum MSQ_PAD_BEFORE_TIME = false;\n+    }\n+    else version (HPPA_Any)\n+    {\n+        // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/hppa/bits/msq-pad.h\n+        private enum MSQ_PAD_AFTER_TIME = false;\n+        private enum MSQ_PAD_BEFORE_TIME = (__WORDSIZE == 32);\n+    }\n+    else version (MIPS_Any)\n+    {\n+        // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/mips/bits/msq-pad.h\n+        version (LittleEndian)\n+        {\n+            private enum MSQ_PAD_AFTER_TIME = (__WORDSIZE == 32);\n+            private enum MSQ_PAD_BEFORE_TIME = false;\n+        }\n+        else\n+        {\n+            private enum MSQ_PAD_AFTER_TIME = false;\n+            private enum MSQ_PAD_BEFORE_TIME = (__WORDSIZE == 32);\n+        }\n+    }\n+    else version (PPC_Any)\n+    {\n+        //  https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/powerpc/bits/msq-pad.h\n+        private enum MSQ_PAD_AFTER_TIME = false;\n+        private enum MSQ_PAD_BEFORE_TIME = (__WORDSIZE == 32);\n+    }\n+    else version (SPARC_Any)\n+    {\n+        // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/sparc/bits/msq-pad.h\n+        private enum MSQ_PAD_AFTER_TIME = false;\n+        private enum MSQ_PAD_BEFORE_TIME = (__WORDSIZE == 32);\n+    }\n+    else version (X86)\n+    {\n+        // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/x86/bits/msq-pad.h\n+        private enum MSQ_PAD_AFTER_TIME = true;\n+        private enum MSQ_PAD_BEFORE_TIME = false;\n+    }\n+    else version (X86_64)\n+    {\n+        // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/x86/bits/msq-pad.h\n+        private enum MSQ_PAD_AFTER_TIME = false;\n+        private enum MSQ_PAD_BEFORE_TIME = false;\n+    }\n+    else\n+        static assert(0, \"unimplemented\");\n+\n+    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/bits/msq.h\n+    alias msgqnum_t = ulong_t;\n+    alias msglen_t = ulong_t;\n+\n+    static if (MSQ_PAD_BEFORE_TIME)\n+    {\n+        struct msqid_ds\n+        {\n+            ipc_perm        msg_perm;\n+            c_ulong __glibc_reserved1;\n+            time_t          msg_stime;\n+            c_ulong __glibc_reserved2;\n+            time_t          msg_rtime;\n+            c_ulong __glibc_reserved3;\n+            time_t          msg_ctime;\n+            ulong_t         __msg_cbytes;\n+            msgqnum_t       msg_qnum;\n+            msglen_t        msg_qbytes;\n+            pid_t           msg_lspid;\n+            pid_t           msg_lrpid;\n+            ulong_t __glibc_reserved4;\n+            ulong_t __glibc_reserved5;\n+        }\n+    }\n+    else static if (MSQ_PAD_AFTER_TIME)\n+    {\n+        struct msqid_ds\n+        {\n+            ipc_perm        msg_perm;\n+            time_t          msg_stime;\n+            c_ulong __glibc_reserved1;\n+            time_t          msg_rtime;\n+            c_ulong __glibc_reserved2;\n+            time_t          msg_ctime;\n+            c_ulong __glibc_reserved3;\n+            ulong_t         __msg_cbytes;\n+            msgqnum_t       msg_qnum;\n+            msglen_t        msg_qbytes;\n+            pid_t           msg_lspid;\n+            pid_t           msg_lrpid;\n+            ulong_t __glibc_reserved4;\n+            ulong_t __glibc_reserved5;\n+        }\n+    }\n+    else\n+    {\n+        struct msqid_ds\n+        {\n+            ipc_perm        msg_perm;\n+            time_t          msg_stime;\n+            time_t          msg_rtime;\n+            time_t          msg_ctime;\n+            ulong_t         __msg_cbytes;\n+            msgqnum_t       msg_qnum;\n+            msglen_t        msg_qbytes;\n+            pid_t           msg_lspid;\n+            pid_t           msg_lrpid;\n+            ulong_t __glibc_reserved4;\n+            ulong_t __glibc_reserved5;\n+        }\n+    }\n+}\n+else\n+{\n+    // https://sourceware.org/git/?p=glibc.git;a=blob;f=bits/msq.h\n+    enum MSG_NOERROR = 1 << 12; // octal!10000\n+\n+    alias msgqnum_t = ushort;\n+    alias msglen_t = ushort;\n \n-public enum MSG_NOERROR = 1 << 12; // octal!10000\n-public enum  MSG_EXCEPT = 2 << 12; // octal!20000\n-public enum    MSG_COPY = 4 << 12; // octal!40000\n-\n-struct msgbuf\n-{\n-    c_long mtype;\n-    char[1] mtext;\n-}\n-\n-struct msginfo\n-{\n-    int msgpool;\n-    int msgmap;\n-    int msgmax;\n-    int msgmnb;\n-    int msgmni;\n-    int msgssz;\n-    int msgtql;\n-    ushort msgseg;\n-}\n-\n-version (Alpha)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/alpha/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        time_t msg_stime;\n-        time_t msg_rtime;\n-        time_t msg_ctime;\n-        c_ulong __msg_cbytes;\n-        msgqnum_t msg_qnum;\n-        msglen_t msg_qbytes;\n-        pid_t msg_lspid;\n-        pid_t msg_lrpid;\n-        c_ulong __glibc_reserved1;\n-        c_ulong __glibc_reserved2;\n-    }\n-}\n-else version (HPPA)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/hppa/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    // Assuming word size is 32\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __pad1;\n-        time_t          msg_stime;\n-        c_ulong __pad2;\n-        time_t          msg_rtime;\n-        c_ulong __pad3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved1;\n-        c_ulong __glibc_reserved2;\n-    }\n-\n-}\n-else version (MIPS32)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/mips/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm  msg_perm;\n-        version (BigEndian) c_ulong __glibc_reserved1;\n-        time_t    msg_stime;\n-        version (LittleEndian) c_ulong __glibc_reserved1;\n-        version (BigEndian) c_ulong __glibc_reserved2;\n-        time_t    msg_rtime;\n-        version (LittleEndian) c_ulong __glibc_reserved2;\n-        version (BigEndian) c_ulong __glibc_reserved3;\n-        time_t    msg_ctime;\n-        version (LittleEndian) c_ulong __glibc_reserved3;\n-        c_ulong   __msg_cbytes;\n-        msgqnum_t msg_qnum;\n-        msglen_t  msg_qbytes;\n-        pid_t     msg_lspid;\n-        pid_t     msg_lrpid;\n-        c_ulong   __glibc_reserved4;\n-        c_ulong   __glibc_reserved5;\n-    }\n-}\n-else version (MIPS64)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/mips/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm  msg_perm;\n-        time_t    msg_stime;\n-        time_t    msg_rtime;\n-        time_t    msg_ctime;\n-        c_ulong   __msg_cbytes;\n-        msgqnum_t msg_qnum;\n-        msglen_t  msg_qbytes;\n-        pid_t     msg_lspid;\n-        pid_t     msg_lrpid;\n-        c_ulong   __glibc_reserved4;\n-        c_ulong   __glibc_reserved5;\n-    }\n-}\n-else version (PPC)\n-{\n-\n-    //  https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/powerpc/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __glibc_reserved1;\n-        time_t          msg_stime;\n-        c_ulong __glibc_reserved2;\n-        time_t          msg_rtime;\n-        c_ulong __glibc_reserved3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-}\n-else version (PPC64)\n-{\n-    //  https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/powerpc/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm  msg_perm;\n-        time_t    msg_stime;\n-        time_t    msg_rtime;\n-        time_t    msg_ctime;\n-        c_ulong   __msg_cbytes;\n-        msgqnum_t msg_qnum;\n-        msglen_t  msg_qbytes;\n-        pid_t     msg_lspid;\n-        pid_t     msg_lrpid;\n-        c_ulong   __glibc_reserved4;\n-        c_ulong   __glibc_reserved5;\n-    }\n-}\n-else version (RISCV32)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/generic/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __glibc_reserved1;\n-        time_t          msg_stime;\n-        c_ulong __glibc_reserved2;\n-        time_t          msg_rtime;\n-        c_ulong __glibc_reserved3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-}\n-else version (RISCV64)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/generic/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        time_t          msg_stime;\n-        time_t          msg_rtime;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-}\n-else version (S390)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/s390/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    // Assuming wordsize != 64\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __glibc_reserved1;\n-        time_t          msg_stime;\n-        c_ulong __glibc_reserved2;\n-        time_t          msg_rtime;\n-        c_ulong __glibc_reserved3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-}\n-else version (SystemZ)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/s390/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    // Assuming wordsize == 64\n     struct msqid_ds\n     {\n         ipc_perm msg_perm;\n         time_t          msg_stime;\n         time_t          msg_rtime;\n         time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n         msgqnum_t       msg_qnum;\n         msglen_t        msg_qbytes;\n         pid_t           msg_lspid;\n         pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n     }\n }\n-else version (SPARC)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/sparc/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n \n-    // Assuming word size is 32\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __pad1;\n-        time_t          msg_stime;\n-        c_ulong __pad2;\n-        time_t          msg_rtime;\n-        c_ulong __pad3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved1;\n-        c_ulong __glibc_reserved2;\n-    }\n-}\n-else version (SPARC64)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/sparc/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    // Assuming word size is 32\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __pad1;\n-        time_t          msg_stime;\n-        c_ulong __pad2;\n-        time_t          msg_rtime;\n-        c_ulong __pad3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved1;\n-        c_ulong __glibc_reserved2;\n-    }\n-}\n-else version (X86)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/x86/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        time_t          msg_stime;\n-        time_t          msg_rtime;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-}\n-else version (X86_64)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/x86/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __glibc_reserved1;\n-        time_t          msg_stime;\n-        c_ulong __glibc_reserved2;\n-        time_t          msg_rtime;\n-        c_ulong __glibc_reserved3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-}\n-else version (AArch64)\n+struct msgbuf\n {\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/generic/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        time_t          msg_stime;\n-        time_t          msg_rtime;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n+    c_long mtype;\n+    char[1] mtext;\n }\n-else version (ARM)\n-{\n-    // https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/generic/bits/msq.h\n-    alias c_ulong msgqnum_t;\n-    alias c_ulong msglen_t;\n-\n-    struct msqid_ds\n-    {\n-        ipc_perm msg_perm;\n-        c_ulong __glibc_reserved1;\n-        time_t          msg_stime;\n-        c_ulong __glibc_reserved2;\n-        time_t          msg_rtime;\n-        c_ulong __glibc_reserved3;\n-        time_t          msg_ctime;\n-        c_ulong         __msg_cbytes;\n-        msgqnum_t       msg_qnum;\n-        msglen_t        msg_qbytes;\n-        pid_t           msg_lspid;\n-        pid_t           msg_lrpid;\n-        c_ulong __glibc_reserved4;\n-        c_ulong __glibc_reserved5;\n-    }\n-} else\n-    static assert(0, \"unimplemented\");\n-\n-\n-public enum MSG_MEM_SCALE =  32;\n-public enum MSGMNI =     16;\n-public enum MSGMAX =   8192;\n-public enum MSGMNB =  16384;\n \n-int msgctl (int msqid, int cmd, msqid_ds *__buf);\n-int msgget ( key_t key, int msgflg );\n-ssize_t msgrcv(int msqid, void *msgp, size_t msgsz, c_long msgtyp, int msgflg);\n-int msgsnd ( int msqid, msgbuf *msgp, int msgsz, int msgflg );\n+int msgctl(int msqid, int cmd, msqid_ds* __buf);\n+int msgget(key_t key, int msgflg);\n+ssize_t msgrcv(int msqid, void* msgp, size_t msgsz, c_long msgtyp, int msgflg);\n+int msgsnd(int msqid, msgbuf* msgp, int msgsz, int msgflg);"}]}