{"sha": "70712859a1068dfd0683199fe6fa669280ecfec4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA3MTI4NTlhMTA2OGRmZDA2ODMxOTlmZTZmYTY2OTI4MGVjZmVjNA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2014-12-19T04:36:54Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2014-12-19T04:36:54Z"}, "message": "lra-constraints.c (process_address_1): Swap base_term and index_term if INDEX_REG_CLASS is assigned to base_term...\n\n* lra-constraints.c (process_address_1): Swap base_term and index_term\n  if INDEX_REG_CLASS is assigned to base_term already when INDEX_REG_CLASS\n  is a single register class.\n\nFrom-SVN: r218885", "tree": {"sha": "6dd63a10a345d428e8fa62b0b61cd20f1a97835c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dd63a10a345d428e8fa62b0b61cd20f1a97835c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70712859a1068dfd0683199fe6fa669280ecfec4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70712859a1068dfd0683199fe6fa669280ecfec4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70712859a1068dfd0683199fe6fa669280ecfec4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70712859a1068dfd0683199fe6fa669280ecfec4/comments", "author": null, "committer": null, "parents": [{"sha": "47b6f9825f7867fcd91e3150ce6f95676ee3985d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b6f9825f7867fcd91e3150ce6f95676ee3985d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b6f9825f7867fcd91e3150ce6f95676ee3985d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "4d83cadb0ee741d0b60292a88a5f3619c14b3d82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70712859a1068dfd0683199fe6fa669280ecfec4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70712859a1068dfd0683199fe6fa669280ecfec4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70712859a1068dfd0683199fe6fa669280ecfec4", "patch": "@@ -1,3 +1,9 @@\n+2014-12-19  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* lra-constraints.c (process_address_1): Swap base_term and\n+\tindex_term if INDEX_REG_CLASS is assigned to base_term already\n+\twhen INDEX_REG_CLASS is a single register class.\n+\n 2014-12-18  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* lra-constraints.c (lra-constraints.c): Exchange places of sclass"}, {"sha": "8fc2cb77a5d913d015e67b470bc602bfe99cdec5", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70712859a1068dfd0683199fe6fa669280ecfec4/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70712859a1068dfd0683199fe6fa669280ecfec4/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=70712859a1068dfd0683199fe6fa669280ecfec4", "patch": "@@ -2834,6 +2834,20 @@ process_address_1 (int nop, bool check_only_p,\n     decompose_mem_address (&ad, SUBREG_REG (op));\n   else\n     return false;\n+  /* If INDEX_REG_CLASS is assigned to base_term already and isn't to\n+     index_term, swap them so to avoid assigning INDEX_REG_CLASS to both\n+     when INDEX_REG_CLASS is a single register class.  */\n+  if (ad.base_term != NULL\n+      && ad.index_term != NULL\n+      && ira_class_hard_regs_num[INDEX_REG_CLASS] == 1\n+      && REG_P (*ad.base_term)\n+      && REG_P (*ad.index_term)\n+      && in_class_p (*ad.base_term, INDEX_REG_CLASS, NULL)\n+      && ! in_class_p (*ad.index_term, INDEX_REG_CLASS, NULL))\n+    {\n+      std::swap (ad.base, ad.index);\n+      std::swap (ad.base_term, ad.index_term);\n+    }\n   if (! check_only_p)\n     change_p = equiv_address_substitution (&ad);\n   if (ad.base_term != NULL"}]}