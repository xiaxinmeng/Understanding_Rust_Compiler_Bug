{"sha": "3784b33cd1260c128a7a9a5975bb13d7905369b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4NGIzM2NkMTI2MGMxMjhhN2E5YTU5NzViYjEzZDc5MDUzNjliOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-12T17:34:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-12T17:34:55Z"}, "message": "re PR c++/20669 (Template candidates not listed in error message.)\n\n\tPR c++/20669\n\t* call.c (add_template_candidate_real): If deduction fails, still\n\tadd the template as a non-viable candidate.\n\t(equal_functions): Handle template candidates.\n\t(print_z_candidate): Likewise.\n\t(print_z_candidates): Likewise.\n\t(build_new_function_call): Likewise.\n\nFrom-SVN: r159335", "tree": {"sha": "2313d89c18902359a7691d09beab1a87f30f42a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2313d89c18902359a7691d09beab1a87f30f42a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3784b33cd1260c128a7a9a5975bb13d7905369b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3784b33cd1260c128a7a9a5975bb13d7905369b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3784b33cd1260c128a7a9a5975bb13d7905369b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3784b33cd1260c128a7a9a5975bb13d7905369b8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d451d5b28fe184ef45c1275a544c91937b790bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d451d5b28fe184ef45c1275a544c91937b790bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d451d5b28fe184ef45c1275a544c91937b790bd8"}], "stats": {"total": 273, "additions": 188, "deletions": 85}, "files": [{"sha": "5f0569ad07be3d689ab96b0de9eae0d1d8075ec5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,13 @@\n 2010-05-12  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/20669\n+\t* call.c (add_template_candidate_real): If deduction fails, still\n+\tadd the template as a non-viable candidate.\n+\t(equal_functions): Handle template candidates.\n+\t(print_z_candidate): Likewise.\n+\t(print_z_candidates): Likewise.\n+\t(build_new_function_call): Likewise.\n+\n \t* cp-tree.h (LOOKUP_LIST_ONLY): New.\n \t* call.c (add_candidates): Enforce it.\n \t(build_new_method_call): Try non-list ctor if no viable list ctor."}, {"sha": "dccb1d4fbfe9a3bb5ab053645ee228492254f275", "filename": "gcc/cp/call.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -2508,11 +2508,11 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n \t\t\t   return_type, strict, flags);\n \n   if (i != 0)\n-    return NULL;\n+    goto fail;\n \n   fn = instantiate_template (tmpl, targs, tf_none);\n   if (fn == error_mark_node)\n-    return NULL;\n+    goto fail;\n \n   /* In [class.copy]:\n \n@@ -2541,7 +2541,7 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n       tree arg_types = FUNCTION_FIRST_USER_PARMTYPE (fn);\n       if (arg_types && same_type_p (TYPE_MAIN_VARIANT (TREE_VALUE (arg_types)),\n \t\t\t\t    ctype))\n-\treturn NULL;\n+\tgoto fail;\n     }\n \n   if (obj != NULL_TREE)\n@@ -2575,6 +2575,9 @@ add_template_candidate_real (struct z_candidate **candidates, tree tmpl,\n     cand->template_decl = DECL_TEMPLATE_INFO (fn);\n \n   return cand;\n+ fail:\n+  return add_candidate (candidates, tmpl, first_arg, arglist, nargs, NULL,\n+\t\t\taccess_path, conversion_path, 0);\n }\n \n \n@@ -2607,10 +2610,10 @@ add_template_conv_candidate (struct z_candidate **candidates, tree tmpl,\n }\n \n /* The CANDS are the set of candidates that were considered for\n-   overload resolution.  Return the set of viable candidates.  If none\n-   of the candidates were viable, set *ANY_VIABLE_P to true.  STRICT_P\n-   is true if a candidate should be considered viable only if it is\n-   strictly viable.  */\n+   overload resolution.  Return the set of viable candidates, or CANDS\n+   if none are viable.  If any of the candidates were viable, set\n+   *ANY_VIABLE_P to true.  STRICT_P is true if a candidate should be\n+   considered viable only if it is strictly viable.  */\n \n static struct z_candidate*\n splice_viable (struct z_candidate *cands,\n@@ -2675,6 +2678,10 @@ build_this (tree obj)\n static inline int\n equal_functions (tree fn1, tree fn2)\n {\n+  if (TREE_CODE (fn1) != TREE_CODE (fn2))\n+    return 0;\n+  if (TREE_CODE (fn1) == TEMPLATE_DECL)\n+    return fn1 == fn2;\n   if (DECL_LOCAL_FUNCTION_P (fn1) || DECL_LOCAL_FUNCTION_P (fn2)\n       || DECL_EXTERN_C_FUNCTION_P (fn1))\n     return decls_match (fn1, fn2);\n@@ -2710,7 +2717,7 @@ print_z_candidate (const char *msgstr, struct z_candidate *candidate)\n     inform (input_location, \"%s %T <conversion>\", msgstr, candidate->fn);\n   else if (candidate->viable == -1)\n     inform (input_location, \"%s %+#D <near match>\", msgstr, candidate->fn);\n-  else if (DECL_DELETED_FN (candidate->fn))\n+  else if (DECL_DELETED_FN (STRIP_TEMPLATE (candidate->fn)))\n     inform (input_location, \"%s %+#D <deleted>\", msgstr, candidate->fn);\n   else\n     inform (input_location, \"%s %+#D\", msgstr, candidate->fn);\n@@ -2750,12 +2757,12 @@ print_z_candidates (struct z_candidate *candidates)\n     {\n       tree fn = cand1->fn;\n       /* Skip builtin candidates and conversion functions.  */\n-      if (TREE_CODE (fn) != FUNCTION_DECL)\n+      if (!DECL_P (fn))\n \tcontinue;\n       cand2 = &cand1->next;\n       while (*cand2)\n \t{\n-\t  if (TREE_CODE ((*cand2)->fn) == FUNCTION_DECL\n+\t  if (DECL_P ((*cand2)->fn)\n \t      && equal_functions (fn, (*cand2)->fn))\n \t    *cand2 = (*cand2)->next;\n \t  else\n@@ -3167,7 +3174,8 @@ build_new_function_call (tree fn, VEC(tree,gc) **args, bool koenig_p,\n     {\n       if (complain & tf_error)\n \t{\n-\t  if (!any_viable_p && candidates && ! candidates->next)\n+\t  if (!any_viable_p && candidates && ! candidates->next\n+\t      && (TREE_CODE (candidates->fn) == FUNCTION_DECL))\n \t    return cp_build_function_call_vec (candidates->fn, args, complain);\n \t  if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n \t    fn = TREE_OPERAND (fn, 0);"}, {"sha": "a3200c944048b0c76b79aac69b14875208c3ba52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,69 @@\n 2010-05-12  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/conversion/op1.C: Expect template candidate message.\n+\t* g++.dg/cpp0x/nullptr15.C: Likewise.\n+\t* g++.dg/cpp0x/pr31431-2.C: Likewise.\n+\t* g++.dg/cpp0x/pr31431.C: Likewise.\n+\t* g++.dg/cpp0x/temp_default2.C: Likewise.\n+\t* g++.dg/cpp0x/trailing4.C: Likewise.\n+\t* g++.dg/cpp0x/variadic-ex3.C: Likewise.\n+\t* g++.dg/cpp0x/variadic-ex4.C: Likewise.\n+\t* g++.dg/cpp0x/variadic-throw.C: Likewise.\n+\t* g++.dg/cpp0x/variadic35.C: Likewise.\n+\t* g++.dg/cpp0x/vt-35147.C: Likewise.\n+\t* g++.dg/cpp0x/vt-37737-1.C: Likewise.\n+\t* g++.dg/cpp0x/vt-37737-2.C: Likewise.\n+\t* g++.dg/ext/visibility/anon8.C: Likewise.\n+\t* g++.dg/ext/vla2.C: Likewise.\n+\t* g++.dg/other/pr28114.C: Likewise.\n+\t* g++.dg/other/ptrmem10.C: Likewise.\n+\t* g++.dg/other/ptrmem11.C: Likewise.\n+\t* g++.dg/overload/unknown1.C: Likewise.\n+\t* g++.dg/parse/template7.C: Likewise.\n+\t* g++.dg/parse/typename7.C: Likewise.\n+\t* g++.dg/template/conv11.C: Likewise.\n+\t* g++.dg/template/copy1.C: Likewise.\n+\t* g++.dg/template/deduce3.C: Likewise.\n+\t* g++.dg/template/dependent-expr5.C: Likewise.\n+\t* g++.dg/template/friend.C: Likewise.\n+\t* g++.dg/template/incomplete2.C: Likewise.\n+\t* g++.dg/template/local4.C: Likewise.\n+\t* g++.dg/template/local6.C: Likewise.\n+\t* g++.dg/template/operator10.C: Likewise.\n+\t* g++.dg/template/overload6.C: Likewise.\n+\t* g++.dg/template/ptrmem2.C: Likewise.\n+\t* g++.dg/template/ptrmem20.C: Likewise.\n+\t* g++.dg/template/ptrmem8.C: Likewise.\n+\t* g++.dg/template/sfinae2.C: Likewise.\n+\t* g++.dg/template/ttp25.C: Likewise.\n+\t* g++.dg/template/unify10.C: Likewise.\n+\t* g++.dg/template/unify11.C: Likewise.\n+\t* g++.dg/template/unify6.C: Likewise.\n+\t* g++.dg/template/unify7.C: Likewise.\n+\t* g++.dg/template/unify9.C: Likewise.\n+\t* g++.dg/template/varmod1.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash56.C: Likewise.\n+\t* g++.old-deja/g++.law/operators32.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash28.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash60.C: Likewise.\n+\t* g++.old-deja/g++.pt/explicit38.C: Likewise.\n+\t* g++.old-deja/g++.pt/explicit39.C: Likewise.\n+\t* g++.old-deja/g++.pt/explicit41.C: Likewise.\n+\t* g++.old-deja/g++.pt/explicit67.C: Likewise.\n+\t* g++.old-deja/g++.pt/explicit77.C: Likewise.\n+\t* g++.old-deja/g++.pt/expr2.C: Likewise.\n+\t* g++.old-deja/g++.pt/overload7.C: Likewise.\n+\t* g++.old-deja/g++.pt/ptrmem6.C: Likewise.\n+\t* g++.old-deja/g++.pt/spec5.C: Likewise.\n+\t* g++.old-deja/g++.pt/spec6.C: Likewise.\n+\t* g++.old-deja/g++.pt/t24.C: Likewise.\n+\t* g++.old-deja/g++.pt/unify4.C: Likewise.\n+\t* g++.old-deja/g++.pt/unify6.C: Likewise.\n+\t* g++.old-deja/g++.pt/unify8.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb119.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb79.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb98.C: Likewise.\n+\n \t* g++.dg/cpp0x/initlist32.C: New.\n \n \t* g++.dg/template/conv11.C: New."}, {"sha": "65b925a4d61d944fcc5cdbb06678b9f231a28384", "filename": "gcc/testsuite/g++.dg/conversion/op1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop1.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n class C\n {\n   template<typename U> \n-  operator U();\n+  operator U();\t\t\t// { dg-message \"candidate\" }\n };\n \n int fn (C c) "}, {"sha": "abb45f4e9374568c48e36e03cd3c11acab3b4dfd", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -10,7 +10,7 @@ template <typename T, typename U>\n inline typename tType_equal<T, U>::type\n type_equal(U) { }\n \n-template<typename T> T* g( T* t );\n+template<typename T> T* g( T* t ); // { dg-message \"candidate\" }\n \n void test_g()\n {"}, {"sha": "59e1afeab25a88b88355af74be05cb3ad0b7b47e", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31431-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431-2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<typename, typename..., typename> void foo();\n+template<typename, typename..., typename> void foo(); // { dg-message \"candidate\" }\n \n void bar()\n {"}, {"sha": "b150a047f8c05ba3341e10b1b88f5547bb3a5f76", "filename": "gcc/testsuite/g++.dg/cpp0x/pr31431.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr31431.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<typename..., typename> void foo();\n+template<typename..., typename> void foo(); // { dg-message \"candidate\" }\n \n void bar()\n {"}, {"sha": "5a9cbe03e743154df13aa7558f9b9472a0a30fb6", "filename": "gcc/testsuite/g++.dg/cpp0x/temp_default2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemp_default2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemp_default2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemp_default2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=c++0x\" }\n \n template <class T, class U = double> \n-void f(T t = 0, U u = 0); \n+void f(T t = 0, U u = 0); \t// { dg-message \"candidate\" }\n \n void g() \n { "}, {"sha": "247efd4b56cb8dcc0cb480a30fe382d801234101", "filename": "gcc/testsuite/g++.dg/cpp0x/trailing4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing4.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -5,7 +5,7 @@ template<class T, class U>\n auto f(T,U) -> decltype(T() + U())\n { return T() + U(); }\n \n-template<class T> void g(T){}\n+template<class T> void g(T){}\t// { dg-message \"candidate\" }\n \n int main() { g(f); }\t\t// { dg-error \"no matching function\" }\n "}, {"sha": "60c47176d0029bb61989228e8faa517f424d6915", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex3.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<class X, class Y, class... Z> X f(Y); \n+template<class X, class Y, class... Z> X f(Y); // { dg-message \"candidate\" }\n void g() \n { \n   int i = f<int>(5.6);"}, {"sha": "b8aec1f5140c428e4260c8214bac343a0c736b2e", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex4.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,5 @@\n // { dg-options \"-std=gnu++0x\" }\n-template<class X, class Y, class Z> X f(Y,Z); \n+template<class X, class Y, class Z> X f(Y,Z); // { dg-message \"candidate\" }\n template<class... Args> void f2();\n void g() \n { "}, {"sha": "8363c2a73f98f3580eb76d4d3e781b7949ddafc9", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-throw.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-throw.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-throw.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-throw.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,4 +1,5 @@\n // { dg-options -std=c++0x }\n+// { dg-prune-output \"note\" }\n // PR c++/33509\n template<int M, int N> struct pair\n {"}, {"sha": "a85771d1595681e638f40bdd72ff5fb0d2f1d4ef", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic35.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic35.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n template<int I, typename... Args>\n-void get_ith(const Args&... args);\n+void get_ith(const Args&... args); // { dg-message \"candidate\" }\n \n void f()\n {"}, {"sha": "9008180799b1e41594a1a8a7c58c11c41e959097", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-35147.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35147.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35147.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-35147.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=c++0x\" }\n \n template<typename _Tp>\n-  _Tp&& forward(_Tp&& __t) { return __t; }\n+  _Tp&& forward(_Tp&& __t) { return __t; } // { dg-message \"candidate\" }\n \n void f(...);\n "}, {"sha": "de11b1651b43a9cd5dd7b45d290d4a4b09f9aa74", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-37737-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-1.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,4 +1,5 @@\n // { dg-options \"-std=c++0x\" }\n+// { dg-prune-output \"note\" }\n \n void f() { }\n "}, {"sha": "16df69bd89285d9e812a3ef6f03f092323eb842a", "filename": "gcc/testsuite/g++.dg/cpp0x/vt-37737-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvt-37737-2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=c++0x\" }\n \n template<class U, class... T>\n-void f()\n+void f()\t\t\t// { dg-message \"candidate\" }\n {\n   f<T...>(); // { dg-error \"no matching\" }\n }"}, {"sha": "b0d3849b26fe0ee6dcba4ea224a21af40a074dee", "filename": "gcc/testsuite/g++.dg/ext/visibility/anon8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fanon8.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n \n template <void (*fn) ()>\n-void call ()\n+void call ()\t\t\t// { dg-message \"candidate\" }\n {\n   fn ();\n }"}, {"sha": "5e37f8a5fc2c96e1617fb4b02bf21dc836bbd302", "filename": "gcc/testsuite/g++.dg/ext/vla2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -8,7 +8,7 @@\n // errors.\n \n template <unsigned int N>\n-char* begin(char (&a) [N] );\n+char* begin(char (&a) [N] );\t// { dg-message \"candidate\" }\n \n void bar(int i)\n {"}, {"sha": "d54fec960857aa4dc4afa9b979fcddb79ad9f60a", "filename": "gcc/testsuite/g++.dg/other/pr28114.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28114.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28114.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr28114.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n \n // Test to make sure we do not ICE on this invalid program.\n \n-template<int> void foo(struct {}*); // { dg-error \"\" }\n+template<int> void foo(struct {}*); // { dg-message \"\" }\n \n void bar()\n {"}, {"sha": "53d5c85a80794d8b044110a642bbb3a0ca9f1b84", "filename": "gcc/testsuite/g++.dg/other/ptrmem10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem10.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -3,7 +3,7 @@\n \n template <class C, void (C::*M) ()>\n static\n-void foo(void *obj)\n+void foo(void *obj)\t\t// { dg-message \"candidate\" }\n {\n   C *p = static_cast<C*>(obj);\n   (p->*M)();"}, {"sha": "c1c8677c9dc07ea59aa1807ceb97a6077884cb05", "filename": "gcc/testsuite/g++.dg/other/ptrmem11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem11.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -5,7 +5,7 @@ struct A {};\n \n template <int A::* p>\n int\n-foo(A* q)\n+foo(A* q)\t\t\t// { dg-message \"candidate\" }\n {\n   return q->*p;\n }"}, {"sha": "61b60b063cd798f4dfce30274991c6c0dfb8384b", "filename": "gcc/testsuite/g++.dg/overload/unknown1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Funknown1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Funknown1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Funknown1.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -2,7 +2,7 @@\n \n void foo(void);\n int foo(int);\n-template <typename T> void bar(T f);\n+template <typename T> void bar(T f); // { dg-message \"candidate\" }\n \n void baz() {\n   bar(foo); // { dg-error \"<unresolved overloaded function type>\" }"}, {"sha": "e07d5f85d8f3e1c8dd1e7158e16f6c4a44e73d10", "filename": "gcc/testsuite/g++.dg/parse/template7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate7.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,4 +1,4 @@\n template <int I>\n-void f();\n+void f();\t\t\t// { dg-message \"candidate\" }\n \n void g() { f<(3, 2)>(); } // { dg-error \"\" }"}, {"sha": "0ac53112126bd4c7d466b7123f3de5717fd4b3be", "filename": "gcc/testsuite/g++.dg/parse/typename7.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -7,8 +7,8 @@\n \n struct A\n {\n-  template<typename>   void foo(int);\n-  template<typename T> void bar(T t) {\n+  template<typename>   void foo(int); // { dg-message \"candidate\" }\n+  template<typename T> void bar(T t) { // { dg-message \"candidate\" }\n     this->foo<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n   template<typename T> void bad(T t) {\n     foo<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }"}, {"sha": "de41d6a2122d6a7034c3c427790440d916991455", "filename": "gcc/testsuite/g++.dg/template/conv11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv11.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n int i;\n struct A\n {\n-  template <class T> operator T&() { return i; }\n+  template <class T> operator T&() { return i; } // { dg-message \"candidate\" }\n };\n \n int main()"}, {"sha": "bec506dd991fa19d8f885d30e46d7a60a8059666", "filename": "gcc/testsuite/g++.dg/template/copy1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -6,8 +6,8 @@\n \n struct A\n {\n-  A(A&); // { dg-message \"candidate\" }\n-  template <class T> A(T); \n+  A(A&); // { dg-message \"note\" }\n+  template <class T> A(T); \t// { dg-message \"candidate\" }\n };\n \n A a = 0; // { dg-error \"no matching function\" }"}, {"sha": "fbf41e0e32850452c838a80c4bcbdcc9a6500975", "filename": "gcc/testsuite/g++.dg/template/deduce3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdeduce3.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,5 @@\n template <typename T>\n-void f(int, T (*)() = 0);\n+void f(int, T (*)() = 0);\t// { dg-message \"candidate\" }\n \n void g() {\n   typedef int A[2];"}, {"sha": "b36d38233e9eaa1e83731ef228aa2482011d4f3d", "filename": "gcc/testsuite/g++.dg/template/dependent-expr5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -4,9 +4,9 @@\n // contributed by Alexandre Oliva <aoliva@redhat.com>\n // inspired in the failure reported in Red Hat bugzilla #168260.\n \n-template<class F> void bind(F f) {}\n+template<class F> void bind(F f) {} // { dg-message \"note\" }\n \n-template<class F> void bindm(F f) {}\n+template<class F> void bindm(F f) {} // { dg-message \"note\" }\n template<class F, class T> void bindm(F (T::*f)(void)) {} // { dg-message \"note\" }\n \n template<class F> void bindn(F f) {}"}, {"sha": "ac22f2ffb2de003d235ff425ae5c6cc55f9fe00c", "filename": "gcc/testsuite/g++.dg/template/friend.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -7,7 +7,7 @@ extern ostream& cout;\n template <class T> struct s;\n \n template <class T>\n-ostream& operator<<(ostream &o, const typename s<T>::t &x)\n+ostream& operator<<(ostream &o, const typename s<T>::t &x) // { dg-message \"note\" }\n {\n   return o;\n }"}, {"sha": "73b6c6fd64d816d224e02f197db3e2a5f3fac7cb", "filename": "gcc/testsuite/g++.dg/template/incomplete2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -3,7 +3,7 @@\n \n struct A;\n \n-template<A&> void foo();\n+template<A&> void foo();\t// { dg-message \"candidate\" }\n \n A a;  // { dg-error \"incomplete type\" }\n "}, {"sha": "e3044e993eea2843f212fa029e202f9569d9b066", "filename": "gcc/testsuite/g++.dg/template/local4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal4.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // PR c++/17413\n \n-template <typename T> void foo() {}\n+template <typename T> void foo() {} // { dg-message \"candidate\" }\n \n int main () {\n   struct S {};"}, {"sha": "1fa39bc7a758eebf6ed2c84038a86b8497e4e25b", "filename": "gcc/testsuite/g++.dg/template/local6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n-template <class T> struct PCVector2 // { dg-message \"candidate is\" }\n+template <class T> struct PCVector2 // { dg-message \"note\" }\n {\n-    template <class T2> PCVector2(const PCVector2<T> &cv) ;\n+    template <class T2> PCVector2(const PCVector2<T> &cv) ; // { dg-message \"candidate\" }\n \n     PCVector2<T> operator- (const PCVector2<T> &ov) const \n \t{ "}, {"sha": "448b022905fc109bc43617f8cd032ce8cb1d72ed", "filename": "gcc/testsuite/g++.dg/template/operator10.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator10.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,4 +1,5 @@\n // PR c++/30535\n+// { dg-prune-output \"note\" }\n \n struct A {};\n "}, {"sha": "fd868333447d345c47e658ecf80f4a64b622728d", "filename": "gcc/testsuite/g++.dg/template/overload6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload6.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -4,7 +4,7 @@\n // PR 21592:ICE\n // Origin:  Volker Reichelt <reichelt@gcc.gnu.org>\n \n-template<typename T> void unique(T,T);\n+template<typename T> void unique(T,T); // { dg-message \"note\" }\n \n struct A\n {"}, {"sha": "848a6d9cca0e1a07483379e95caeaee49d4e5628", "filename": "gcc/testsuite/g++.dg/template/ptrmem2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -7,7 +7,7 @@\n \n struct A {};\n \n-template <typename T> T A::* Foo ();\n+template <typename T> T A::* Foo (); // { dg-message \"candidate\" }\n \n void Baz ()\n {"}, {"sha": "23488737a6771f10abee5b64b50a86ab8375fe3a", "filename": "gcc/testsuite/g++.dg/template/ptrmem20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem20.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -8,7 +8,7 @@ struct B\n   void foo();\n };\n \n-template<void (A::*)()> void bar();\n+template<void (A::*)()> void bar(); // { dg-message \"candidate\" }\n \n void baz()\n {"}, {"sha": "8585f83578737b9bc80b43c4cbe65571a87eaecf", "filename": "gcc/testsuite/g++.dg/template/ptrmem8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -11,7 +11,7 @@ struct B\n \n struct D : B {};\n \n-template <int (D::*fun)() const> int Get();\n+template <int (D::*fun)() const> int Get(); // { dg-message \"candidate\" }\n \n int main () \n {"}, {"sha": "0b11ecc0f020c8f7fac6b45b45099fa560cc6aab", "filename": "gcc/testsuite/g++.dg/template/sfinae2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -8,7 +8,7 @@ template<int T> struct cl {\n   const static int value = T;\n };\n \n-template<int I> void fn (char (*) [cl<I>::value] = 0 );\n+template<int I> void fn (char (*) [cl<I>::value] = 0 ); // { dg-message \"candidate\" }\n \n void foo (void)\n {"}, {"sha": "23e5a7a799099129cff23dc944dc9fc55c9d0b20", "filename": "gcc/testsuite/g++.dg/template/ttp25.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp25.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,19 +1,19 @@\n // { dg-do compile }\n template<typename T, template<T> class C>\n-void f1(T, C<5>);\n+void f1(T, C<5>);\t\t// { dg-message \"note\" }\n \n template<typename T, template<T> class C>\n void f2(C<5>, T);\n \n template<typename T, template<T> class C>\n-void f3(C<5>, T);\n+void f3(C<5>, T);\t\t// { dg-message \"note\" }\n \n template<typename T> struct metafun { typedef T type; };\n \n template<> struct metafun<short> { typedef int type; };\n \n template<typename T, template<typename metafun<T>::type> class C>\n-void f4(T, C<5>);\n+void f4(T, C<5>);\t\t// { dg-message \"note\" }\n \n template<int N> struct X {};\n void g() {"}, {"sha": "7b19e1ebfe82d3267988af7d3317bb7b6216177d", "filename": "gcc/testsuite/g++.dg/template/unify10.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify10.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -12,16 +12,16 @@ struct MyClass {\n };\n \n template<class CLASS>\n-void mFunction(void (CLASS::* method)()) {}\n+void mFunction(void (CLASS::* method)()) {} // { dg-message \"candidate\" }\n \n template<class CLASS>\n-void cFunction(void (CLASS::* method)() const) {}\n+void cFunction(void (CLASS::* method)() const) {} // { dg-message \"candidate\" }\n \n template<class CLASS>\n-void vFunction(void (CLASS::* method)() volatile) {}\n+void vFunction(void (CLASS::* method)() volatile) {} // { dg-message \"candidate\" }\n \n template<class CLASS>\n-void cvFunction(void (CLASS::* method)() const volatile) {}\n+void cvFunction(void (CLASS::* method)() const volatile) {} // { dg-message \"candidate\" }\n \n int main() {\n   mFunction(&MyClass::mMethod);"}, {"sha": "a49f5c1b2d0aef535136de8e8c1f9281239d70d1", "filename": "gcc/testsuite/g++.dg/template/unify11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify11.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -8,7 +8,7 @@ struct A\n \n template <typename S, typename T, typename U, typename S::v = &S::v::s>\n typename S::A\n-foo (S c, T t, U u)\n+foo (S c, T t, U u)\t\t// { dg-message \"candidate\" }\n {\n }\n "}, {"sha": "4e890fe50b3ed025189d2179b3b8635be2bd54cc", "filename": "gcc/testsuite/g++.dg/template/unify6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify6.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -8,7 +8,7 @@ template <typename T> void Foo1 (T const *a) {a (1);} // #2\n \n template <typename T> T const *Foo2 (T *);\n \n-template <typename T> void Foo3 (T *, T const * = 0);\n+template <typename T> void Foo3 (T *, T const * = 0); // { dg-message \"candidate\" }\n \n void Bar ()\n {"}, {"sha": "23f61f3dcca578a42099537cbcbf3902e8625c2d", "filename": "gcc/testsuite/g++.dg/template/unify7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify7.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -3,7 +3,7 @@\n \n // PR c++/3518\n template <typename T> void Foo (const T &);\n-template <typename T> void Baz (const T (*)());\n+template <typename T> void Baz (const T (*)()); // { dg-message \"candidate\" }\n \n int &f ();\n "}, {"sha": "1e16c432b8a8b416b4af188deed8a10f9c4a59bb", "filename": "gcc/testsuite/g++.dg/template/unify9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Funify9.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -4,7 +4,7 @@\n // Origin:Wolfgang Bangerth <bangerth@dealii.org>\n // PR 21799: deduction of cvqualifiers on member functions was wrong\n \n-template <class T> void f (T &,       void (T::*)()      ); \n+template <class T> void f (T &,       void (T::*)()      ); // { dg-message \"candidate\" }\n  \n struct X { \n     void g() const {}"}, {"sha": "c2c51c72173dca78a39b0b6cfe8f039f8235641e", "filename": "gcc/testsuite/g++.dg/template/varmod1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvarmod1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvarmod1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvarmod1.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-w\" }\n \n-template<typename T> void foo(T);\n+template<typename T> void foo(T); // { dg-message \"candidate\" }\n  \n void bar()\n {"}, {"sha": "5dc1a87490309ee1074180fd547b3f613e5c529e", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash56.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -292,7 +292,7 @@ SetLD<T>::contains(const T& item) const\n }\n template<class T>\n int\n-operator==(const SetLD<T>& a, const SetLD<T>& b)\n+operator==(const SetLD<T>& a, const SetLD<T>& b) // { dg-message \"note\" }\n {\n     if (a.length() != b.length())\n \treturn FALSE;"}, {"sha": "8d5372c6c3027238e799e468dc009983b7081257", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators32.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -7,7 +7,7 @@\n //\n \n template <class T>\n-void ffree(long rows, T** array)\n+void ffree(long rows, T** array) // { dg-message \"candidate\" }\n {\n for( long i = 0; i < rows; i++ )\n   delete [] array[i];                   // delete row\n@@ -21,7 +21,7 @@ return array = new T[size];\n }\n \n template <class T>\n-T** allocate2d(long d1, long d2, T**& array)\n+T** allocate2d(long d1, long d2, T**& array) // { dg-message \"note\" }\n {\n if( allocate1d(d1, array) != 0 )\n   {"}, {"sha": "23d0d2c76bd7bf1090f08fae2cfdc23e43344809", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -2,7 +2,7 @@\n // { dg-options \"\" }\n \n template <class ARRY>\n-inline unsigned int asize(ARRY &a)\n+inline unsigned int asize(ARRY &a) // { dg-message \"candidate\" }\n {\n   return sizeof(a) / sizeof(a[0]);\n }"}, {"sha": "fb9ca3cf121e4e3651d76e0c67a60beba3c77a0f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash60.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash60.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -7,7 +7,7 @@\n template< typename SID, class SDR >\n void k( SID sid, SDR* p,\n  void (SDR::*)\n- ( typename SID::T ) );\n+ ( typename SID::T ) );\t\t// { dg-message \"candidate\" }\n \n struct E { };\n struct S { void f( int ); };"}, {"sha": "35540240b93e1245d6d4d162286a0f13c290daf1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit38.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit38.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n template <int I>\n-void f(int j);\n+void f(int j);\t\t\t// { dg-message \"candidate\" }\n \n void g()\n {"}, {"sha": "70c72d003ed82540bb380a84aee914b7aa0e5978", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit39.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit39.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n template <class T>\n-void f(int i);\n+void f(int i);\t\t\t// { dg-message \"candidate\" }\n \n void g()\n {"}, {"sha": "e04e814dcaad75b61d83b460091cc0479650af32", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit41.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit41.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n template <int I>\n-void f(int i);\n+void f(int i);\t\t\t// { dg-message \"candidate\" }\n \n void g()\n {"}, {"sha": "534309f0c986f5480160a97efe5959b9f3ab062c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit67.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit67.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit67.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit67.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -9,9 +9,9 @@ void g(int);\n void g(double);\n \n template <int* IP>\n-void foo();\n+void foo();\t\t\t// { dg-message \"note\" }\n template <long l>\n-void foo();\n+void foo();\t\t\t// { dg-message \"note\" }\n \n void bar()\n {"}, {"sha": "0df1f46dbdcac5ab798052267a01f222a674ca35", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit77.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit77.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -7,7 +7,7 @@ template <int I, int J>\n struct S<I, J, 2> : public S<I, I, I>, S<J, J, J> {};\n \n template <int I, int J, int K>\n-void f(S<I, J, K>, S<I, I, I>);\n+void f(S<I, J, K>, S<I, I, I>);\t// { dg-message \"candidate\" }\n \n void g() {\n   S<0, 0, 0> s0;"}, {"sha": "881b906704b182c4c12e82b69ca000ea3570636c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/expr2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexpr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexpr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexpr2.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -4,7 +4,7 @@ template <int I>\n struct S {};\n \n template <int J>\n-void foo(S<J + 2>);\n+void foo(S<J + 2>);\t\t// { dg-message \"candidate\" }\n \n void bar()\n {"}, {"sha": "6f5dff0a2ffd1392e47407d513c2d6c4574dbdee", "filename": "gcc/testsuite/g++.old-deja/g++.pt/overload7.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload7.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,4 +1,5 @@\n // { dg-do assemble  }\n+// { dg-prune-output \"note\" }\n \n // Adapted from testcase by Corey Kosak <kosak@cs.cmu.edu>\n "}, {"sha": "51c5536c7d104f47f767e766d77208a89204e61c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem6.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -13,9 +13,9 @@ public:\n };\n \n template <void (A::*)() >\n-void g() {}\n+void g() {}\t\t\t// { dg-message \"candidate\" }\n template <int A::*>\n-void h() {}\n+void h() {}\t\t\t// { dg-message \"candidate\" }\n \n \n int main() {"}, {"sha": "9aee75fdb21a9f3710988b162d78d1460c14f482", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec5.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,13 +1,13 @@\n // { dg-do assemble  }\n \n template <class T>\n-void f(T t1, T t2);\n+void f(T t1, T t2);\t\t// { dg-message \"candidate\" }\n \n template <>\n void f(int i, int j);\n \n template <class T>\n-void g(T t1, T t2) {}\n+void g(T t1, T t2) {}\t\t// { dg-message \"candidate\" }\n \n template void g(int i, int j);\n "}, {"sha": "765dd8e7583bc6910b5215c3ca6f70633036f355", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec6.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -3,7 +3,7 @@\n struct S1\n {\n   template <class T>\n-  void f(T t1, T t2);\n+  void f(T t1, T t2);\t\t// { dg-message \"candidate\" }\n };\n \n \n@@ -14,7 +14,7 @@ template <class U>\n struct S2\n {\n   template <class T>\n-  void f(T t1, T t2);\n+  void f(T t1, T t2);\t\t// { dg-message \"candidate\" }\n };\n \n template <>"}, {"sha": "fe6281b9ca2b4cc3f295041889087ef8522c417c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft24.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n // { dg-options \"\" }\n \n-template <class X> int f (X x, X y) { return 23; }\n+template <class X> int f (X x, X y) { return 23; } // { dg-message \"candidate\" }\n \n int foo () {\n   return f (7);\t// { dg-error \"\" } "}, {"sha": "51bfaf48775628c498bd00dc159befce7ee3447b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify4.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n-template <class T> void f (T);\n+template <class T> void f (T);\t// { dg-message \"candidate\" }\n \n void g ();\n void g (int);"}, {"sha": "18a0553133dc0f671b9acfad59e7682970bcbc90", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify6.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -19,7 +19,7 @@ template<> void fn<int &>() {} // ok, specialize A\n template<> void fn<void ()>() {} // ok, specialize A\n \n // now make sure we moan when we really should\n-template<class T> void foo(T const *){}\n+template<class T> void foo(T const *){} // { dg-message \"candidate\" }\n \n void f()\n {"}, {"sha": "a0cb738956d5a66e7f17aced002efb24ca08eb29", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -8,9 +8,9 @@\n // overload resolution.\n \n \n-template <typename T> void Foo (T const **);\n+template <typename T> void Foo (T const **); // { dg-message \"candidate\" }\n template <typename T> void Bar (T const * const *);\n-void Foo (int);       // { dg-message \"candidate\" } \n+void Foo (int);       // { dg-message \"note\" }\n void Foo (float);     // { dg-message \"note\" } candidate\n \n void baz (int **p1)"}, {"sha": "bb8892c7f610eb830e95b1a11dcd557dbaa15f5f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb119.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb119.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb119.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb119.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n template<bool B>\n-void f()\n+void f()\t\t\t// { dg-message \"candidate\" }\n {\n }\n "}, {"sha": "1c1ad3e306779b6be639c2512973e595dbc0a3cb", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb79.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,4 +1,5 @@\n // { dg-do assemble  }\n+// { dg-prune-output \"note\" }\n // Makes bogus x86 assembly code.\n #include <iostream>\n "}, {"sha": "5fb4861a3a4851009b59c9727f0e30fa814a8609", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb98.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb98.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb98.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb98.C?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -5,7 +5,7 @@\n     template<class T, unsigned int Length>\n     inline\n     unsigned int\n-    extent(T (&x)[Length])\n+    extent(T (&x)[Length])\t// { dg-message \"candidate\" }\n     {\n             return Length;\n     }"}, {"sha": "ae20b119cf43f1f3343aa01b538616ae6307a611", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -1,3 +1,10 @@\n+2010-05-12  Jason Merrill  <jason@redhat.com>\n+\n+\t* testsuite/20_util/auto_ptr/assign_neg.cc: Expect template\n+\tcandidate messages.\n+\t* testsuite/20_util/unique_ptr/assign/assign_neg.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/comparison/cmp_neg.cc: Likewise.\n+\n 2010-05-11  Silvius Rus  <silvius.rus@gmail.com>\n \n \tPR libstdc++/43259"}, {"sha": "1f6e67394e90004e63bd0b90e5258986b67657df", "filename": "libstdc++-v3/testsuite/20_util/auto_ptr/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fauto_ptr%2Fassign_neg.cc?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -47,4 +47,5 @@ main()\n   return 0;\n }\n // { dg-error \"candidates\" \"\" { target *-*-* } 134 } \n+// { dg-error \"note\" \"\" { target *-*-* } 152 }\n // { dg-error \"::auto_ptr\" \"\" { target *-*-* } 262 } "}, {"sha": "4aa93b91d9135e3278064f54f06e91b5a4c8d8bb", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -52,7 +52,8 @@ test03()\n // { dg-error \"deleted function\" \"\" { target *-*-* } 357 }\n // { dg-error \"used here\" \"\" { target *-*-* } 42 }\n // { dg-error \"no matching\" \"\" { target *-*-* } 48 }\n-// { dg-warning \"candidates are\" \"\" { target *-*-* } 130 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 130 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 134 }\n // { dg-warning \"note\" \"\" { target *-*-* } 123 }\n // { dg-warning \"note\" \"\" { target *-*-* } 118 }\n // { dg-warning \"note\" \"\" { target *-*-* } 113 }"}, {"sha": "6165db09df7ea3d8eb9af016cbc858b60518889c", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/comparison/cmp_neg.cc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3784b33cd1260c128a7a9a5975bb13d7905369b8/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc?ref=3784b33cd1260c128a7a9a5975bb13d7905369b8", "patch": "@@ -40,3 +40,12 @@ main()\n   test01();\n   return 0;\n }\n+\n+// { dg-warning \"note\" \"\" { target *-*-* } 281 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 407 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 831 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 511 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 1005 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 340 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 290 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 190 }"}]}