{"sha": "a6fe949d570f1957aa1caba572e20f2c0760f89a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmZTk0OWQ1NzBmMTk1N2FhMWNhYmE1NzJlMjBmMmMwNzYwZjg5YQ==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2021-08-30T19:31:40Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2021-08-30T19:31:40Z"}, "message": "Fix libgfortran build on hppa*-hp-hpux[01]*\n\nAdd include hack to define PRIdPTR, PRIiPTR, PRIoPTR, PRIuPTR, PRIxPTR\nand PRIXPTR in inttypes.h.\n\n2021-08-30  John David Anglin  <danglin@gcc.gnu.org>\n\nfixincludes/ChangeLog:\n\t* inclhack.def (hpux_c99_inttypes5): New hack to define PRIdPTR, etc.\n\t* fixincl.x: Regenerate.\n\t* tests/base/inttypes.h: Update.", "tree": {"sha": "17fe814f66ff848c53c44300c469cf4f06bb5d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17fe814f66ff848c53c44300c469cf4f06bb5d46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6fe949d570f1957aa1caba572e20f2c0760f89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fe949d570f1957aa1caba572e20f2c0760f89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fe949d570f1957aa1caba572e20f2c0760f89a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fe949d570f1957aa1caba572e20f2c0760f89a/comments", "author": null, "committer": null, "parents": [{"sha": "42ade7bdc16274e8825052b9df6076cc25a5b02f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42ade7bdc16274e8825052b9df6076cc25a5b02f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42ade7bdc16274e8825052b9df6076cc25a5b02f"}], "stats": {"total": 118, "additions": 113, "deletions": 5}, "files": [{"sha": "bc2fcd224824ba9a09d67c508f137e32f24c4e74", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 63, "deletions": 5, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe949d570f1957aa1caba572e20f2c0760f89a/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe949d570f1957aa1caba572e20f2c0760f89a/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=a6fe949d570f1957aa1caba572e20f2c0760f89a", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  July  1, 2021 at 03:44:46 PM by AutoGen 5.18.7\n+ * It has been AutoGen-ed  August 30, 2021 at 07:31:11 PM by AutoGen 5.18.16\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Thu Jul  1 15:44:46 CEST 2021\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Aug 30 19:31:11 UTC 2021\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 260 fixup descriptions.\n+ * This file contains 261 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -5311,6 +5311,58 @@ static const char* apzHpux_C99_Inttypes4Patch[] = { sed_cmd_z,\n #define SCNuMAX \\t SCNu32\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hpux_C99_Inttypes5 fix\n+ */\n+tSCC zHpux_C99_Inttypes5Name[] =\n+     \"hpux_c99_inttypes5\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHpux_C99_Inttypes5List[] =\n+  \"inttypes.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzHpux_C99_Inttypes5Machs[] = {\n+        \"hppa*-hp-hpux11.[01]*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHpux_C99_Inttypes5Select0[] =\n+       \"#ifndef[ \\t]_KERNEL[ \\t]*\\n\";\n+\n+#define    HPUX_C99_INTTYPES5_TEST_CT  1\n+static tTestDesc aHpux_C99_Inttypes5Tests[] = {\n+  { TT_EGREP,    zHpux_C99_Inttypes5Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hpux_C99_Inttypes5\n+ */\n+static const char* apzHpux_C99_Inttypes5Patch[] = {\n+    \"format\",\n+    \"#ifndef __LP64__\\n\\\n+#define PRIdPTR\\t\\tPRId32\\n\\\n+#define PRIiPTR\\t\\tPRIi32\\n\\\n+#define PRIoPTR\\t\\tPRIo32\\n\\\n+#define PRIuPTR\\t\\tPRIu32\\n\\\n+#define PRIxPTR\\t\\tPRIx32\\n\\\n+#define PRIXPTR\\t\\tPRIX32\\n\\\n+#else\\n\\\n+#define PRIdPTR\\t\\tPRId64\\n\\\n+#define PRIiPTR\\t\\tPRIi64\\n\\\n+#define PRIoPTR\\t\\tPRIo64\\n\\\n+#define PRIuPTR\\t\\tPRIu64\\n\\\n+#define PRIxPTR\\t\\tPRIx64\\n\\\n+#define PRIXPTR\\t\\tPRIX64\\n\\\n+#endif\\n\\n\\\n+#ifndef _KERNEL\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux_Ctype_Macros fix\n@@ -10560,9 +10612,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          298\n+#define REGEX_COUNT          299\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            260\n+#define FIX_COUNT            261\n \n /*\n  *  Enumerate the fixes\n@@ -10695,6 +10747,7 @@ typedef enum {\n     HPUX_C99_INTTYPES2_FIXIDX,\n     HPUX_C99_INTTYPES3_FIXIDX,\n     HPUX_C99_INTTYPES4_FIXIDX,\n+    HPUX_C99_INTTYPES5_FIXIDX,\n     HPUX_CTYPE_MACROS_FIXIDX,\n     HPUX_EXTERN_ERRNO_FIXIDX,\n     HPUX_HTONL_FIXIDX,\n@@ -11466,6 +11519,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX_C99_INTTYPES4_TEST_CT, FD_MACH_ONLY,\n      aHpux_C99_Inttypes4Tests,   apzHpux_C99_Inttypes4Patch, 0 },\n \n+  {  zHpux_C99_Inttypes5Name,    zHpux_C99_Inttypes5List,\n+     apzHpux_C99_Inttypes5Machs,\n+     HPUX_C99_INTTYPES5_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHpux_C99_Inttypes5Tests,   apzHpux_C99_Inttypes5Patch, 0 },\n+\n   {  zHpux_Ctype_MacrosName,    zHpux_Ctype_MacrosList,\n      apzHpux_Ctype_MacrosMachs,\n      HPUX_CTYPE_MACROS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "46e3b8c993a3e214056aee8bdbd3ab28eeec6d46", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe949d570f1957aa1caba572e20f2c0760f89a/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe949d570f1957aa1caba572e20f2c0760f89a/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=a6fe949d570f1957aa1caba572e20f2c0760f89a", "patch": "@@ -2668,6 +2668,34 @@ fix = {\n \t\t\"#define SCNxMAX SCNx32\\n\";\n };\n \n+/*\n+ * Fix missing PRIdPTR defines in inttypes.h\n+ */\n+fix = {\n+    hackname  = hpux_c99_inttypes5;\n+    mach      = \"hppa*-hp-hpux11.[01]*\";\n+    files     = inttypes.h;\n+    select    = \"#ifndef[ \\t]_KERNEL[ \\t]*\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef __LP64__\\n\"\n+\t\t\"#define PRIdPTR\\t\\tPRId32\\n\"\n+\t\t\"#define PRIiPTR\\t\\tPRIi32\\n\"\n+\t\t\"#define PRIoPTR\\t\\tPRIo32\\n\"\n+\t\t\"#define PRIuPTR\\t\\tPRIu32\\n\"\n+\t\t\"#define PRIxPTR\\t\\tPRIx32\\n\"\n+\t\t\"#define PRIXPTR\\t\\tPRIX32\\n\"\n+\t\t\"#else\\n\"\n+\t\t\"#define PRIdPTR\\t\\tPRId64\\n\"\n+\t\t\"#define PRIiPTR\\t\\tPRIi64\\n\"\n+\t\t\"#define PRIoPTR\\t\\tPRIo64\\n\"\n+\t\t\"#define PRIuPTR\\t\\tPRIu64\\n\"\n+\t\t\"#define PRIxPTR\\t\\tPRIx64\\n\"\n+\t\t\"#define PRIXPTR\\t\\tPRIX64\\n\"\n+\t\t\"#endif\\n\\n\"\n+\t\t\"#ifndef _KERNEL\\n\";\n+    test_text = \"#ifndef _KERNEL\\n\";\n+};\n+\n /*\n  *  Fix hpux broken ctype macros\n  */"}, {"sha": "9c1f93eb736e88ccf6f60638170d972d1a81060a", "filename": "fixincludes/tests/base/inttypes.h", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fe949d570f1957aa1caba572e20f2c0760f89a/fixincludes%2Ftests%2Fbase%2Finttypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fe949d570f1957aa1caba572e20f2c0760f89a/fixincludes%2Ftests%2Fbase%2Finttypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Finttypes.h?ref=a6fe949d570f1957aa1caba572e20f2c0760f89a", "patch": "@@ -42,3 +42,25 @@\n #define SCNuMAX \t SCNu32\n \n #endif  /* HPUX_C99_INTTYPES4_CHECK */\n+\n+\n+#if defined( HPUX_C99_INTTYPES5_CHECK )\n+#ifndef __LP64__\n+#define PRIdPTR\t\tPRId32\n+#define PRIiPTR\t\tPRIi32\n+#define PRIoPTR\t\tPRIo32\n+#define PRIuPTR\t\tPRIu32\n+#define PRIxPTR\t\tPRIx32\n+#define PRIXPTR\t\tPRIX32\n+#else\n+#define PRIdPTR\t\tPRId64\n+#define PRIiPTR\t\tPRIi64\n+#define PRIoPTR\t\tPRIo64\n+#define PRIuPTR\t\tPRIu64\n+#define PRIxPTR\t\tPRIx64\n+#define PRIXPTR\t\tPRIX64\n+#endif\n+\n+#ifndef _KERNEL\n+\n+#endif  /* HPUX_C99_INTTYPES5_CHECK */"}]}