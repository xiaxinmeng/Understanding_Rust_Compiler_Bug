{"sha": "6851dda2e7969c4ce06d49db97486213aba046e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1MWRkYTJlNzk2OWM0Y2UwNmQ0OWRiOTc0ODYyMTNhYmEwNDZlNg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-13T00:16:36Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-01-13T00:16:36Z"}, "message": "Daily bump.", "tree": {"sha": "213fe37a7299434cd8547b761c2ed47e15835855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/213fe37a7299434cd8547b761c2ed47e15835855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6851dda2e7969c4ce06d49db97486213aba046e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6851dda2e7969c4ce06d49db97486213aba046e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6851dda2e7969c4ce06d49db97486213aba046e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6851dda2e7969c4ce06d49db97486213aba046e6/comments", "author": null, "committer": null, "parents": [{"sha": "cfaaa6a1ca744c1a93fa08a3e7ab2a821383cac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfaaa6a1ca744c1a93fa08a3e7ab2a821383cac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfaaa6a1ca744c1a93fa08a3e7ab2a821383cac1"}], "stats": {"total": 212, "additions": 211, "deletions": 1}, "files": [{"sha": "d5b708f93102440d6e191c74eca05c82f22cbdd5", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,11 @@\n+2021-01-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* MAINTAINERS: Fix spacing.\n+\n+2021-01-12  Qian Jianhua  <qianjh@cn.fujitsu.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself\n+\n 2021-01-06  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* Makefile.def: Sync with binutils-gdb:"}, {"sha": "303f40f3b0c1bdb1f5ca626b65766020f3ac91c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,111 @@\n+2021-01-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcov.c (source_info::debug): Fix printf format for 32-bit hosts.\n+\n+2021-01-12  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* function-abi.h: Fix typo.\n+\n+2021-01-12  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/97875\n+\tPR target/97875\n+\t* config/arm/arm.h (ARM_HAVE_NEON_V8QI_LDST): New macro.\n+\t(ARM_HAVE_NEON_V16QI_LDST, ARM_HAVE_NEON_V4HI_LDST): Likewise.\n+\t(ARM_HAVE_NEON_V8HI_LDST, ARM_HAVE_NEON_V2SI_LDST): Likewise.\n+\t(ARM_HAVE_NEON_V4SI_LDST, ARM_HAVE_NEON_V4HF_LDST): Likewise.\n+\t(ARM_HAVE_NEON_V8HF_LDST, ARM_HAVE_NEON_V4BF_LDST): Likewise.\n+\t(ARM_HAVE_NEON_V8BF_LDST, ARM_HAVE_NEON_V2SF_LDST): Likewise.\n+\t(ARM_HAVE_NEON_V4SF_LDST, ARM_HAVE_NEON_DI_LDST): Likewise.\n+\t(ARM_HAVE_NEON_V2DI_LDST): Likewise.\n+\t(ARM_HAVE_V8QI_LDST, ARM_HAVE_V16QI_LDST): Likewise.\n+\t(ARM_HAVE_V4HI_LDST, ARM_HAVE_V8HI_LDST): Likewise.\n+\t(ARM_HAVE_V2SI_LDST, ARM_HAVE_V4SI_LDST, ARM_HAVE_V4HF_LDST): Likewise.\n+\t(ARM_HAVE_V8HF_LDST, ARM_HAVE_V4BF_LDST, ARM_HAVE_V8BF_LDST): Likewise.\n+\t(ARM_HAVE_V2SF_LDST, ARM_HAVE_V4SF_LDST, ARM_HAVE_DI_LDST): Likewise.\n+\t(ARM_HAVE_V2DI_LDST): Likewise.\n+\t* config/arm/mve.md (*movmisalign<mode>_mve_store): New pattern.\n+\t(*movmisalign<mode>_mve_load): New pattern.\n+\t* config/arm/neon.md (movmisalign<mode>): Move to ...\n+\t* config/arm/vec-common.md: ... here.\n+\n+2021-01-12  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/97969\n+\t* lra-eliminations.c (eliminate_regs_in_insn): Add transformation\n+\tof pattern 'plus (plus (hard reg, const), pseudo)'.\n+\n+2021-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98550\n+\t* tree-vect-slp.c (vect_record_max_nunits): Check whether\n+\tthe group size is a multiple of the vector element count.\n+\t(vect_build_slp_tree_1): When we need to fail because\n+\tthe vector type choosen causes unrolling do so lazily\n+\twithout affecting matches only at the end to guide group splitting.\n+\n+2021-01-12  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/97284\n+\t* optc-save-gen.awk: Compare also n_target_save vars with\n+\tstrcmp.\n+\n+2021-01-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcov.c (source_info::debug): New.\n+\t(print_usage): Add --debug (-D) option.\n+\t(process_args): Likewise.\n+\t(generate_results): Call src->debug after\n+\taccumulate_line_counts.\n+\t(read_graph_file): Properly assign id for EXIT_BLOCK.\n+\t* profile.c (branch_prob): Dump function body before it is\n+\tinstrumented.\n+\n+2021-01-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98629\n+\t* tree-ssa-math-opts.c (arith_overflow_check_p): Don't update use_stmt\n+\tunless returning non-zero.\n+\n+2021-01-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/95731\n+\t* tree-ssa-reassoc.c (optimize_range_tests_cmp_bitwise): Also optimize\n+\tx < 0 && y < 0 && z < 0 into (x | y | z) < 0 for signed x, y, z.\n+\t(optimize_range_tests): Call optimize_range_tests_cmp_bitwise\n+\tonly after optimize_range_tests_var_bound.\n+\n+2021-01-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac: Ensure c/Make-lang.in comes first in @all_lang_makefrags@.\n+\t* configure: Regenerated.\n+\n+2021-01-12  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/98612\n+\t* config/i386/i386-builtins.h (BUILTIN_DESC_SWAP_OPERANDS):\n+\tDeleted.\n+\t* config/i386/i386-expand.c (ix86_expand_sse_comi): Delete\n+\tdead code.\n+\n+2021-01-12  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* ssa-iterators.h (end_imm_use_stmt_traverse): Forward\n+\tdeclare.\n+\t(auto_end_imm_use_stmt_traverse): New struct.\n+\t(FOR_EACH_IMM_USE_STMT): Use it.\n+\t(BREAK_FROM_IMM_USE_STMT, RETURN_FROM_IMM_USE_STMT): Remove,\n+\talong with uses...\n+\t* gimple-ssa-strength-reduction.c: ... here, ...\n+\t* graphite-scop-detection.c: ... here, ...\n+\t* ipa-modref.c, ipa-pure-const.c, ipa-sra.c: ... here, ...\n+\t* tree-predcom.c, tree-ssa-ccp.c: ... here, ...\n+\t* tree-ssa-dce.c, tree-ssa-dse.c: ... here, ...\n+\t* tree-ssa-loop-ivopts.c, tree-ssa-math-opts.c: ... here, ...\n+\t* tree-ssa-phiprop.c, tree-ssa.c: ... here, ...\n+\t* tree-vect-slp.c: ... and here, ...\n+\t* doc/tree-ssa.texi: ... and the example here.\n+\n 2021-01-11  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-sve.md (sdiv_pow2<mode>3): Extend from"}, {"sha": "f3ca7fcdfefe4baf00d071e489a657c4b92c44ce", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1 +1 @@\n-20210112\n+20210113"}, {"sha": "1db8b7ca6fa394ef1e855f30df7cde023a8c7246", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,9 @@\n+2021-01-12  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/98628\n+\t* store.cc (binding_cluster::make_unknown_relative_to): Don't mark\n+\tdereferenced unknown pointers as having escaped.\n+\n 2021-01-07  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/98580"}, {"sha": "b323a0376a04e9e4a11aec97615e5ecf42130b33", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,11 @@\n+2021-01-12  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/98597\n+\tPR c/98592\n+\t* c-pretty-print.c (print_mem_ref): Avoid assuming MEM_REF operand\n+\thas pointer type.  Remove redundant code.  Avoid calling\n+\tgimple_canonical_types_compatible_p.\n+\n 2021-01-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/98578"}, {"sha": "3968511751a043e1383f5bec40bdc105b292542c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,15 @@\n+2021-01-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/98611\n+\t* tree.c (cp_walk_subtrees) <case TEMPLATE_TYPE_PARM>: Visit\n+\tthe template of a CTAD placeholder.\n+\n+2021-01-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98620\n+\t* typeck2.c (process_init_constructor_record): Don't emit\n+\t-Wmissing-field-initializers warnings in unevaluated contexts.\n+\n 2021-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/98481"}, {"sha": "9356cd4c1879a9129ee18a85354a1365d57c82cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,54 @@\n+2021-01-12  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/98597\n+\tPR c/98592\n+\t* g++.dg/warn/Wuninitialized-13.C: New test.\n+\t gcc.dg/uninit-39.c: New test.\n+\t#\n+\t* gcc.dg/uninit-39.c: New file.\n+\n+2021-01-12  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/97875\n+\t* gcc.target/arm/simd/mve-vneg.c: Update test.\n+\n+2021-01-12  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/97969\n+\t* gcc.target/arm/pr97969.c: New.\n+\n+2021-01-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/98611\n+\t* g++.dg/cpp2a/concepts-ctad1.C: New test.\n+\t* g++.dg/cpp2a/concepts-ctad2.C: New test.\n+\n+2021-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98550\n+\t* g++.dg/opt/pr98550.C: New testcase.\n+\n+2021-01-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/98629\n+\t* gcc.c-torture/compile/pr98629.c: New test.\n+\n+2021-01-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/95731\n+\t* gcc.dg/tree-ssa/pr95731.c: New test.\n+\t* gcc.c-torture/execute/pr95731.c: New test.\n+\n+2021-01-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/98620\n+\t* g++.dg/warn/Wmissing-field-initializers-2.C: New test.\n+\n+2021-01-12  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/98628\n+\t* gcc.dg/analyzer/pr98628.c: New test.\n+\n 2021-01-11  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/asrdiv_4.c: New test."}, {"sha": "aa0a1864f8c6d753d044225bae76310bc41090bc", "filename": "libcody/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6851dda2e7969c4ce06d49db97486213aba046e6/libcody%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6851dda2e7969c4ce06d49db97486213aba046e6/libcody%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcody%2FChangeLog?ref=6851dda2e7969c4ce06d49db97486213aba046e6", "patch": "@@ -1,3 +1,20 @@\n+2021-01-12  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* Makefile.in: Remove auto parallelize, swallow Makesub.in. Don't\n+\tcheck compiler name here.\n+\t* Makesub.in: Delete.\n+\t* build-aux/config.guess: Delete.\n+\t* build-aux/config.sub: Delete.\n+\t* build-aux/install-sh: Delete.\n+\t* dox.cfg.in: Delete.\n+\t* gdbinit.in: Delete.\n+\t* internal.hh (BuildNote): Delete.\n+\t* fatal.cc (BuildNote): Delete.\n+\t* config.m4: Remove unneeded fns.\n+\t* configure.ac: Remove unneccessary checks and configures.\n+\t* configure: Rebuilt.\n+\t* config.h.in: Rebuilt.\n+\n 2021-01-06  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR bootstrap/98506"}]}