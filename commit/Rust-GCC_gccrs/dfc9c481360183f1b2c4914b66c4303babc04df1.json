{"sha": "dfc9c481360183f1b2c4914b66c4303babc04df1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZjOWM0ODEzNjAxODNmMWIyYzQ5MTRiNjZjNDMwM2JhYmMwNGRmMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-12-22T21:46:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-12-22T21:46:44Z"}, "message": "re PR c++/67257 (Internal compiler error in retrieve_specialization)\n\n\tPR c++/67257\n\t* parser.c (cp_parser_single_declaration): Reject a class template\n\tthat also declares a variable.\n\nFrom-SVN: r231913", "tree": {"sha": "fc21bcd36ff3e3b7caed810c74be397df05a2788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc21bcd36ff3e3b7caed810c74be397df05a2788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfc9c481360183f1b2c4914b66c4303babc04df1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc9c481360183f1b2c4914b66c4303babc04df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfc9c481360183f1b2c4914b66c4303babc04df1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc9c481360183f1b2c4914b66c4303babc04df1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2889b14274f623af7022b060cd49b08ada66038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2889b14274f623af7022b060cd49b08ada66038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2889b14274f623af7022b060cd49b08ada66038"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "c081160f31656a705dfdb0a0a48f844e75b586a1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dfc9c481360183f1b2c4914b66c4303babc04df1", "patch": "@@ -1,5 +1,9 @@\n 2015-12-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67257\n+\t* parser.c (cp_parser_single_declaration): Reject a class template\n+\tthat also declares a variable.\n+\n \tPR c++/67339\n \t* parser.c (cp_parser_elaborated_type_specifier): Use CLASS_TYPE_P\n \trather than check for RECORD_TYPE."}, {"sha": "842dded1fcab6c305433b1a972a239ce34c3bcec", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=dfc9c481360183f1b2c4914b66c4303babc04df1", "patch": "@@ -25642,7 +25642,8 @@ cp_parser_single_declaration (cp_parser* parser,\n   /* Check for the declaration of a template class.  */\n   if (declares_class_or_enum)\n     {\n-      if (cp_parser_declares_only_class_p (parser))\n+      if (cp_parser_declares_only_class_p (parser)\n+\t  || (declares_class_or_enum & 2))\n \t{\n \t  // If this is a declaration, but not a definition, associate\n \t  // any constraints with the type declaration. Constraints\n@@ -25673,6 +25674,19 @@ cp_parser_single_declaration (cp_parser* parser,\n \n \t  /* Perform access checks for template parameters.  */\n \t  cp_parser_perform_template_parameter_access_checks (checks);\n+\n+\t  /* Give a helpful diagnostic for\n+\t       template <class T> struct A { } a;\n+\t     if we aren't already recovering from an error.  */\n+\t  if (!cp_parser_declares_only_class_p (parser)\n+\t      && !seen_error ())\n+\t    {\n+\t      error_at (cp_lexer_peek_token (parser->lexer)->location,\n+\t\t\t\"a class template declaration must not declare \"\n+\t\t\t\"anything else\");\n+\t      cp_parser_skip_to_end_of_block_or_statement (parser);\n+\t      goto out;\n+\t    }\n \t}\n     }\n "}, {"sha": "89200ee3d27760740729890d0dd16b463a5c985f", "filename": "gcc/testsuite/g++.dg/cpp0x/pr51226.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51226.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51226.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr51226.C?ref=dfc9c481360183f1b2c4914b66c4303babc04df1", "patch": "@@ -6,4 +6,7 @@ template<int> struct A           // { dg-message \"provided\" }\n   enum E : int;\n };\n \n-template<> enum A<>::E : int {}  // { dg-error \"wrong number|expected\" }\n+template<> enum A<>::E : int {}  // { dg-error \"wrong number\" }\n+\n+// { dg-prune-output \"expected\" }\n+// { dg-prune-output \"specialization\" }"}, {"sha": "fb3659bff8cd6520305fe529212dd6cdd16754f2", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn28.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc9c481360183f1b2c4914b66c4303babc04df1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn28.C?ref=dfc9c481360183f1b2c4914b66c4303babc04df1", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/67257\n+// { dg-do compile { target c++14 } }\n+\n+template <typename> struct plus;\n+template <typename> struct A {\n+  template <typename T> auto operator()(T);\n+} foldl;\t\t\t// { dg-error \"\" }\n+void foo() { foldl<plus<int>>(0); }\n+\n+// { dg-prune-output \"not declared\" }\n+// { dg-prune-output \"expected\" }"}]}