{"sha": "1be9633f758e6174e0ff31c609713a4783f2f865", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlOTYzM2Y3NThlNjE3NGUwZmYzMWM2MDk3MTNhNDc4M2YyZjg2NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-20T13:48:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-20T13:48:01Z"}, "message": "[multiple changes]\n\n2009-07-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_prag.adb (Expand_Pragma_Import_Export_Exception): When compiling\n\tfor VMS, only rewrite the first component of the associated exception's\n\taggregate init (as 'V'), and eliminate the bogus rewrites of the second\n\tand third components  that were being replaced with 'M' and 'S'.\n\n2009-07-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Gnat1drv): Suppress access checks in CodePeer mode.\n\tAlso do not generate error when parsing a spec in CodePeer mode.\n\n2009-07-20  Javier Miranda  <miranda@adacore.com>\n\n\t* checks.adb (Apply_Access_Check): Avoid checks on availability of\n\truntime function Offset_To_Top_Ptr when compiling with no tagged\n\ttypes expansion.\n\t* exp_ch3.adb (Build_Init_Procedure): Leave open the possibility of\n\tadding code to the init proc when compiling for VM backends.\n\n2009-07-20  Vincent Celier  <celier@adacore.com>\n\n\t* switch-m.adb (Normalize_Compiler_Switches): Take into account\n\tswitches -gnatw.?\n\n2009-07-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_dist.adb, exp_dist.adb: Minor reformatting\n\n\t* Make-generated.in: New file.\n\n\t* gcc-interface/Make-lang.in: Use Make-generated.in fragment.\n\nFrom-SVN: r149819", "tree": {"sha": "a5c0986274b127523543650173708766c06a3b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c0986274b127523543650173708766c06a3b4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1be9633f758e6174e0ff31c609713a4783f2f865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be9633f758e6174e0ff31c609713a4783f2f865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1be9633f758e6174e0ff31c609713a4783f2f865", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be9633f758e6174e0ff31c609713a4783f2f865/comments", "author": null, "committer": null, "parents": [{"sha": "4755cce9e215a2b6298563bc74c024406aa47df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4755cce9e215a2b6298563bc74c024406aa47df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4755cce9e215a2b6298563bc74c024406aa47df0"}], "stats": {"total": 358, "additions": 205, "deletions": 153}, "files": [{"sha": "33d78b8dd51b3f418da3812d60a492653b8f4140", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -1,3 +1,36 @@\n+2009-07-20  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Pragma_Import_Export_Exception): When compiling\n+\tfor VMS, only rewrite the first component of the associated exception's\n+\taggregate init (as 'V'), and eliminate the bogus rewrites of the second\n+\tand third components  that were being replaced with 'M' and 'S'.\n+\n+2009-07-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1drv): Suppress access checks in CodePeer mode.\n+\tAlso do not generate error when parsing a spec in CodePeer mode.\n+\n+2009-07-20  Javier Miranda  <miranda@adacore.com>\n+\n+\t* checks.adb (Apply_Access_Check): Avoid checks on availability of\n+\truntime function Offset_To_Top_Ptr when compiling with no tagged\n+\ttypes expansion.\n+\t* exp_ch3.adb (Build_Init_Procedure): Leave open the possibility of\n+\tadding code to the init proc when compiling for VM backends.\n+\n+2009-07-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch-m.adb (Normalize_Compiler_Switches): Take into account\n+\tswitches -gnatw.?\n+\n+2009-07-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_dist.adb, exp_dist.adb: Minor reformatting\n+\n+\t* Make-generated.in: New file.\n+\n+\t* gcc-interface/Make-lang.in: Use Make-generated.in fragment.\n+\n 2009-07-20  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_util.ads, sem_util.adb (Check_Dynamically_Tagged_Expression): New"}, {"sha": "06cb4a214688bf993634ed2eb37f684b22a40b24", "filename": "gcc/ada/Make-generated.in", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -0,0 +1,126 @@\n+# Dependencies for compiler sources that are generated at build time\n+\n+# Note: can't use ?= here, not supported by older versions of GNU Make\n+\n+ifeq ($(origin ADA_GEN_SUBDIR), undefined)\n+ADA_GEN_SUBDIR=ada\n+endif\n+\n+ifeq ($(origin CP), undefined)\n+CP=cp\n+endif\n+\n+ifeq ($(origin MKDIR), undefined)\n+MKDIR=mkdir -p\n+endif\n+\n+ifeq ($(origin MOVE_IF_CHANGE), undefined)\n+MOVE_IF_CHANGE=mv -f\n+endif\n+\n+ada_extra_files : $(ADA_GEN_SUBDIR)/treeprs.ads $(ADA_GEN_SUBDIR)/einfo.h $(ADA_GEN_SUBDIR)/sinfo.h $(ADA_GEN_SUBDIR)/nmake.adb \\\n+\t$(ADA_GEN_SUBDIR)/nmake.ads $(ADA_GEN_SUBDIR)/snames.ads $(ADA_GEN_SUBDIR)/snames.adb $(ADA_GEN_SUBDIR)/snames.h\n+\n+# We delete the files before copying, below, in case they are read-only.\n+\n+$(ADA_GEN_SUBDIR)/treeprs.ads : $(ADA_GEN_SUBDIR)/treeprs.adt $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/xtreeprs.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/treeprs\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/treeprs/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/treeprs\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/treeprs; gnatmake -q xtreeprs ; ./xtreeprs ../../treeprs.ads )\n+\n+$(ADA_GEN_SUBDIR)/einfo.h : $(ADA_GEN_SUBDIR)/einfo.ads $(ADA_GEN_SUBDIR)/einfo.adb $(ADA_GEN_SUBDIR)/xeinfo.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/einfo\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/einfo/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/einfo\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/einfo; gnatmake -q xeinfo ; ./xeinfo ../../einfo.h )\n+\n+$(ADA_GEN_SUBDIR)/sinfo.h : $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/xsinfo.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/sinfo\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/sinfo/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/sinfo\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/sinfo; gnatmake -q xsinfo ; ./xsinfo ../../sinfo.h )\n+\n+$(ADA_GEN_SUBDIR)/snames.h $(ADA_GEN_SUBDIR)/snames.ads $(ADA_GEN_SUBDIR)/snames.adb : $(ADA_GEN_SUBDIR)/stamp-snames ; @true\n+$(ADA_GEN_SUBDIR)/stamp-snames : $(ADA_GEN_SUBDIR)/snames.ads-tmpl $(ADA_GEN_SUBDIR)/snames.adb-tmpl $(ADA_GEN_SUBDIR)/snames.h-tmpl $(ADA_GEN_SUBDIR)/xsnamest.adb $(ADA_GEN_SUBDIR)/xutil.ads $(ADA_GEN_SUBDIR)/xutil.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/snamest\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/snamest/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/snamest\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/snamest; gnatmake -q xsnamest ; ./xsnamest )\n+\t$(MOVE_IF_CHANGE) $(ADA_GEN_SUBDIR)/bldtools/snamest/snames.ns $(ADA_GEN_SUBDIR)/snames.ads\n+\t$(MOVE_IF_CHANGE) $(ADA_GEN_SUBDIR)/bldtools/snamest/snames.nb $(ADA_GEN_SUBDIR)/snames.adb\n+\t$(MOVE_IF_CHANGE) $(ADA_GEN_SUBDIR)/bldtools/snamest/snames.nh $(ADA_GEN_SUBDIR)/snames.h\n+\ttouch $(ADA_GEN_SUBDIR)/stamp-snames\n+\n+$(ADA_GEN_SUBDIR)/nmake.adb : $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/nmake.adt $(ADA_GEN_SUBDIR)/xnmake.adb $(ADA_GEN_SUBDIR)/xutil.ads $(ADA_GEN_SUBDIR)/xutil.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/nmake_b\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/nmake_b/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/nmake_b\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/nmake_b; gnatmake -q xnmake ; ./xnmake -b ../../nmake.adb )\n+\n+$(ADA_GEN_SUBDIR)/nmake.ads :  $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/nmake.adt $(ADA_GEN_SUBDIR)/xnmake.adb $(ADA_GEN_SUBDIR)/nmake.adb $(ADA_GEN_SUBDIR)/xutil.ads $(ADA_GEN_SUBDIR)/xutil.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/nmake_s\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/nmake_s/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/nmake_s\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/nmake_s; gnatmake -q xnmake ; ./xnmake -s ../../nmake.ads )\n+\n+ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(subst -, ,$(host)))),)\n+OSCONS_CPP=../../../$(DECC) -E /comment=as_is -DNATIVE \\\n+             -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c\n+\n+OSCONS_EXTRACT=../../../$(DECC) -DNATIVE \\\n+                 -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c ; \\\n+  ld -o s-oscons-tmplt.exe s-oscons-tmplt.obj; \\\n+  ./s-oscons-tmplt.exe > s-oscons-tmplt.s\n+\n+else\n+# GCC_FOR_TARGET has paths relative to the gcc directory, so we need to ajust\n+# for running it from $(ADA_GEN_SUBDIR)/bldtools/oscons\n+OSCONS_CC=`echo \"$(GCC_FOR_TARGET)\" \\\n+  | sed -e 's^\\./xgcc^../../../xgcc^' -e 's^-B./^-B../../../^'`\n+OSCONS_CPP=$(OSCONS_CC) $(GNATLIBCFLAGS) -E -C \\\n+  -DTARGET=\\\"$(target)\\\" s-oscons-tmplt.c > s-oscons-tmplt.i\n+OSCONS_EXTRACT=$(OSCONS_CC) -S s-oscons-tmplt.i\n+endif\n+\n+$(ADA_GEN_SUBDIR)/s-oscons.ads : $(ADA_GEN_SUBDIR)/s-oscons-tmplt.c $(ADA_GEN_SUBDIR)/gsocket.h $(ADA_GEN_SUBDIR)/xoscons.adb $(ADA_GEN_SUBDIR)/xutil.ads $(ADA_GEN_SUBDIR)/xutil.adb\n+\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/oscons\n+\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/oscons/,$(notdir $^))\n+\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/oscons\n+\t(cd $(ADA_GEN_SUBDIR)/bldtools/oscons ; gnatmake -q xoscons ; \\\n+\t\t$(RM) s-oscons-tmplt.i s-oscons-tmplt.s ; \\\n+\t\t$(OSCONS_CPP) ; \\\n+\t\t$(OSCONS_EXTRACT) ; \\\n+\t\t./xoscons ; \\\n+\t\t$(RM) ../../s-oscons.ads ; \\\n+\t\t$(CP) s-oscons.ads s-oscons.h ../../)\n+\n+$(ADA_GEN_SUBDIR)/sdefault.adb: $(ADA_GEN_SUBDIR)/stamp-sdefault ; @true\n+$(ADA_GEN_SUBDIR)/stamp-sdefault : $(srcdir)/version.c Makefile\n+\t$(ECHO) \"pragma Style_Checks (Off);\" >tmp-sdefault.adb\n+\t$(ECHO) \"with Osint; use Osint;\" >>tmp-sdefault.adb\n+\t$(ECHO) \"package body Sdefault is\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   S0 : constant String := \\\"$(prefix)/\\\";\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   S1 : constant String := \\\"$(ADA_INCLUDE_DIR)/\\\";\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   S2 : constant String := \\\"$(ADA_RTL_OBJ_DIR)/\\\";\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   S3 : constant String := \\\"$(target)/\\\";\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   S4 : constant String := \\\"$(libsubdir)/\\\";\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   function Include_Dir_Default_Name return String_Ptr is\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n+\t$(ECHO) \"      return Relocate_Path (S0, S1);\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   end Include_Dir_Default_Name;\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   function Object_Dir_Default_Name return String_Ptr is\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n+\t$(ECHO) \"      return Relocate_Path (S0, S2);\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   end Object_Dir_Default_Name;\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   function Target_Name return String_Ptr is\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n+\t$(ECHO) \"      return new String'(S3);\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   end Target_Name;\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   function Search_Dir_Prefix return String_Ptr is\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n+\t$(ECHO) \"      return Relocate_Path (S0, S4);\" >>tmp-sdefault.adb\n+\t$(ECHO) \"   end Search_Dir_Prefix;\" >>tmp-sdefault.adb\n+\t$(ECHO) \"end Sdefault;\" >> tmp-sdefault.adb\n+\t$(MOVE_IF_CHANGE) tmp-sdefault.adb $(ADA_GEN_SUBDIR)/sdefault.adb\n+\ttouch $(ADA_GEN_SUBDIR)/stamp-sdefault"}, {"sha": "e3bf4b32287ad2377020ef70dfb267e857a0d850", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -454,7 +454,8 @@ package body Checks is\n       --  No check if accessing the Offset_To_Top component of a dispatch\n       --  table. They are safe by construction.\n \n-      if Present (Etype (P))\n+      if Tagged_Type_Expansion\n+        and then Present (Etype (P))\n         and then RTU_Loaded (Ada_Tags)\n         and then RTE_Available (RE_Offset_To_Top_Ptr)\n         and then Etype (P) = RTE (RE_Offset_To_Top_Ptr)"}, {"sha": "3cdf30b81a875c93071ed929aff6f9653504a1b1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -2482,11 +2482,10 @@ package body Exp_Ch3 is\n \n          if List_Length (Body_Stmts) = 1\n            and then Nkind (First (Body_Stmts)) = N_Null_Statement\n-           and then VM_Target /= CLI_Target\n+           and then VM_Target = No_VM\n          then\n             --  Even though the init proc may be null at this time it might get\n-            --  some stuff added to it later by the CIL backend, so always keep\n-            --  it when VM_Target = CLI_Target.\n+            --  some stuff added to it later by the VM backend.\n \n             Set_Is_Null_Init_Proc (Proc_Id);\n          end if;"}, {"sha": "04982a30d13d00666ae691449cf4e4dc3d3720ed", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -6817,11 +6817,6 @@ package body Exp_Dist is\n          --      and put the result as well as the exception occurrence in the\n          --      output stream;\n \n-         --    - a dummy package with an empty spec and a body made of an\n-         --      elaboration part, whose job is to register the receiving\n-         --      part of this RCI package on the name server. This is done\n-         --      by calling System.Partition_Interface.Register_Receiving_Stub.\n-\n          Build_RPC_Receiver_Body (\n            RPC_Receiver => Pkg_RPC_Receiver,\n            Request      => Request,\n@@ -7139,7 +7134,7 @@ package body Exp_Dist is\n          Append_To (Register_Pkg_Actuals,\n            New_Occurrence_Of (All_Calls_Remote_E, Loc));\n \n-         --  ???\n+         --  Finally call Register_Pkg_Receiving_Stub with the above parameters\n \n          Append_To (Stmts,\n            Make_Procedure_Call_Statement (Loc,"}, {"sha": "6bddf9670b9176290c5500cf8127e1f63f85a3c5", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 13, "deletions": 28, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -539,15 +539,14 @@ package body Exp_Prag is\n                Excep_Internal : constant Node_Id :=\n                                  Make_Defining_Identifier\n                                   (Loc, New_Internal_Name ('V'));\n-               Export_Pragma  : Node_Id;\n-               Excep_Alias    : Node_Id;\n-               Excep_Object   : Node_Id;\n-               Excep_Image : String_Id;\n-               Exdata      : List_Id;\n-               Lang1       : Node_Id;\n-               Lang2       : Node_Id;\n-               Lang3       : Node_Id;\n-               Code        : Node_Id;\n+\n+               Export_Pragma : Node_Id;\n+               Excep_Alias   : Node_Id;\n+               Excep_Object  : Node_Id;\n+               Excep_Image   : String_Id;\n+               Exdata        : List_Id;\n+               Lang_Char     : Node_Id;\n+               Code          : Node_Id;\n \n             begin\n                if Present (Interface_Name (Id)) then\n@@ -561,30 +560,16 @@ package body Exp_Prag is\n                Exdata := Component_Associations (Expression (Parent (Id)));\n \n                if Is_VMS_Exception (Id) then\n-                  Lang1 := Next (First (Exdata));\n-                  Lang2 := Next (Lang1);\n-                  Lang3 := Next (Lang2);\n+                  Lang_Char := Next (First (Exdata));\n+\n+                  --  Change the one-character language designator to 'V'\n \n-                  Rewrite (Expression (Lang1),\n+                  Rewrite (Expression (Lang_Char),\n                     Make_Character_Literal (Loc,\n                       Chars => Name_uV,\n                       Char_Literal_Value =>\n                         UI_From_Int (Character'Pos ('V'))));\n-                  Analyze (Expression (Lang1));\n-\n-                  Rewrite (Expression (Lang2),\n-                    Make_Character_Literal (Loc,\n-                      Chars => Name_uM,\n-                      Char_Literal_Value =>\n-                        UI_From_Int (Character'Pos ('M'))));\n-                  Analyze (Expression (Lang2));\n-\n-                  Rewrite (Expression (Lang3),\n-                    Make_Character_Literal (Loc,\n-                      Chars => Name_uS,\n-                      Char_Literal_Value =>\n-                        UI_From_Int (Character'Pos ('S'))));\n-                  Analyze (Expression (Lang3));\n+                  Analyze (Expression (Lang_Char));\n \n                   if Exception_Code (Id) /= No_Uint then\n                      Code :="}, {"sha": "5ccf6a0077efa8fcaaaf10a15dcab2a4b25c91be", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 103, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -924,9 +924,6 @@ gnatstage2: force\n \n # Ada language specific files.\n \n-ada_extra_files : ada/treeprs.ads ada/einfo.h ada/sinfo.h ada/nmake.adb \\\n-\tada/nmake.ads ada/snames.ads ada/snames.adb ada/snames.h\n-\n ada/b_gnat1.c : $(GNAT1_ADA_OBJS)\n \t$(GNATBIND) -C $(ADA_INCLUDES) -o ada/b_gnat1.c -n ada/gnat1drv.ali\n ada/b_gnat1.o : ada/b_gnat1.c\n@@ -935,112 +932,13 @@ ada/b_gnatb.c : $(GNATBIND_OBJS) ada/gnatbind.o ada/interfac.o\n \t$(GNATBIND) -C $(ADA_INCLUDES) -o ada/b_gnatb.c ada/gnatbind.ali\n ada/b_gnatb.o : ada/b_gnatb.c\n \n-# We delete the files before copying, below, in case they are read-only.\n-ada/treeprs.ads : ada/treeprs.adt ada/sinfo.ads ada/xtreeprs.adb\n-\t-$(MKDIR) ada/bldtools/treeprs\n-\t$(RM) $(addprefix ada/bldtools/treeprs/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/treeprs\n-\t(cd ada/bldtools/treeprs && $(GNATMAKE) -q xtreeprs && ./xtreeprs ../../treeprs.ads )\n-\n-ada/einfo.h : ada/einfo.ads ada/einfo.adb ada/xeinfo.adb\n-\t-$(MKDIR) ada/bldtools/einfo\n-\t$(RM) $(addprefix ada/bldtools/einfo/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/einfo\n-\t(cd ada/bldtools/einfo && $(GNATMAKE) -q xeinfo && ./xeinfo ../../einfo.h )\n-\n-ada/sinfo.h : ada/sinfo.ads ada/xsinfo.adb\n-\t-$(MKDIR) ada/bldtools/sinfo\n-\t$(RM) $(addprefix ada/bldtools/sinfo/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/sinfo\n-\t(cd ada/bldtools/sinfo && $(GNATMAKE) -q xsinfo && ./xsinfo ../../sinfo.h )\n-\n-ada/snames.h ada/snames.ads ada/snames.adb : ada/stamp-snames ; @true\n-ada/stamp-snames : ada/snames.ads-tmpl ada/snames.adb-tmpl ada/snames.h-tmpl ada/xsnamest.adb ada/xutil.ads ada/xutil.adb\n-\t-$(MKDIR) ada/bldtools/snamest\n-\t$(RM) $(addprefix ada/bldtools/snamest/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/snamest\n-\t(cd ada/bldtools/snamest; gnatmake -q xsnamest ; ./xsnamest )\n-\t$(srcdir)/../move-if-change ada/bldtools/snamest/snames.ns ada/snames.ads\n-\t$(srcdir)/../move-if-change ada/bldtools/snamest/snames.nb ada/snames.adb\n-\t$(srcdir)/../move-if-change ada/bldtools/snamest/snames.nh ada/snames.h\n-\ttouch ada/stamp-snames\n-\n-ada/nmake.adb : ada/sinfo.ads ada/nmake.adt ada/xnmake.adb ada/xutil.ads ada/xutil.adb\n-\t-$(MKDIR) ada/bldtools/nmake_b\n-\t$(RM) $(addprefix ada/bldtools/nmake_b/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/nmake_b\n-\t(cd ada/bldtools/nmake_b && $(GNATMAKE) -q xnmake && ./xnmake -b ../../nmake.adb )\n-\n-ada/nmake.ads :  ada/sinfo.ads ada/nmake.adt ada/xnmake.adb ada/nmake.adb ada/xutil.ads ada/xutil.adb\n-\t-$(MKDIR) ada/bldtools/nmake_s\n-\t$(RM) $(addprefix ada/bldtools/nmake_s/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/nmake_s\n-\t(cd ada/bldtools/nmake_s && $(GNATMAKE) -q xnmake && ./xnmake -s ../../nmake.ads )\n-\n-ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(subst -, ,$(host)))),)\n-OSCONS_CPP=../../../$(DECC) -E /comment=as_is -DNATIVE \\\n-             -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c\n-\n-OSCONS_EXTRACT=../../../$(DECC) -DNATIVE \\\n-                 -DTARGET='\"\"$(target)\"\"' s-oscons-tmplt.c ; \\\n-  ld -o s-oscons-tmplt.exe s-oscons-tmplt.obj; \\\n-  ./s-oscons-tmplt.exe > s-oscons-tmplt.s\n-\n-else\n-OSCONS_CC=`echo \"$(GCC_FOR_TARGET)\" \\\n-  | sed -e 's^\\./xgcc^../../../xgcc^' -e 's^-B./^-B../../../^'`\n-OSCONS_CPP=$(OSCONS_CC) $(CFLAGS_FOR_TARGET) -E -C \\\n-  -DTARGET=\\\"$(target)\\\" s-oscons-tmplt.c > s-oscons-tmplt.i\n-OSCONS_EXTRACT=$(OSCONS_CC) $(CFLAGS_FOR_TARGET) -S s-oscons-tmplt.i\n-endif\n-\n-ada/s-oscons.ads : ada/s-oscons-tmplt.c ada/gsocket.h ada/xoscons.adb ada/xutil.ads ada/xutil.adb\n-\t-$(MKDIR) ada/bldtools/oscons\n-\t$(RM) $(addprefix ada/bldtools/oscons/,$(notdir $^))\n-\t$(CP) $^ ada/bldtools/oscons\n-\t(cd ada/bldtools/oscons ; gnatmake -q xoscons ; \\\n-\t\t$(RM) s-oscons-tmplt.i s-oscons-tmplt.s ; \\\n-\t\t$(OSCONS_CPP) ; \\\n-\t\t$(OSCONS_EXTRACT) ; \\\n-\t\t./xoscons ; \\\n-\t\t$(RM) ../../s-oscons.ads ; \\\n-\t\t$(CP) s-oscons.ads s-oscons.h ../../)\n+include $(srcdir)/ada/Make-generated.in\n \n update-sources : ada/treeprs.ads ada/einfo.h ada/sinfo.h ada/nmake.adb \\\n \tada/nmake.ads\n \t$(RM) $(addprefix $(srcdir)/ada/,$(notdir $^))\n \t$(CP) $^ $(srcdir)/ada\n \n-ada/sdefault.adb: ada/stamp-sdefault ; @true\n-ada/stamp-sdefault : $(srcdir)/version.c Makefile\n-\t$(ECHO) \"pragma Style_Checks (Off);\" >tmp-sdefault.adb\n-\t$(ECHO) \"with Osint; use Osint;\" >>tmp-sdefault.adb\n-\t$(ECHO) \"package body Sdefault is\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   S0 : constant String := \\\"$(prefix)/\\\";\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   S1 : constant String := \\\"$(ADA_INCLUDE_DIR)/\\\";\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   S2 : constant String := \\\"$(ADA_RTL_OBJ_DIR)/\\\";\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   S3 : constant String := \\\"$(target)/\\\";\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   S4 : constant String := \\\"$(libsubdir)/\\\";\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   function Include_Dir_Default_Name return String_Ptr is\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n-\t$(ECHO) \"      return Relocate_Path (S0, S1);\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   end Include_Dir_Default_Name;\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   function Object_Dir_Default_Name return String_Ptr is\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n-\t$(ECHO) \"      return Relocate_Path (S0, S2);\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   end Object_Dir_Default_Name;\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   function Target_Name return String_Ptr is\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n-\t$(ECHO) \"      return new String'(S3);\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   end Target_Name;\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   function Search_Dir_Prefix return String_Ptr is\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   begin\" >>tmp-sdefault.adb\n-\t$(ECHO) \"      return Relocate_Path (S0, S4);\" >>tmp-sdefault.adb\n-\t$(ECHO) \"   end Search_Dir_Prefix;\" >>tmp-sdefault.adb\n-\t$(ECHO) \"end Sdefault;\" >> tmp-sdefault.adb\n-\t$(srcdir)/../move-if-change tmp-sdefault.adb ada/sdefault.adb\n-\ttouch ada/stamp-sdefault\n-\n ada/sdefault.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/hostparm.ads ada/namet.ads \\\n    ada/opt.ads ada/osint.ads ada/output.ads ada/sdefault.ads ada/sdefault.adb \\"}, {"sha": "3117f9961649447e8413933511660f003c444c27", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -164,10 +164,13 @@ procedure Gnat1drv is\n \n          Dynamic_Elaboration_Checks := False;\n \n-         --  Suppress overflow checks since this is handled implicitely by\n-         --  CodePeer. Enable all other language checks.\n+         --  Suppress overflow checks and access checks since they are handled\n+         --  implicitely by CodePeer. Enable all other language checks.\n \n-         Suppress_Options       := (Overflow_Check => True, others => False);\n+         Suppress_Options :=\n+           (Overflow_Check => True,\n+            Access_Check   => True,\n+            others         => False);\n          Enable_Overflow_Checks := False;\n \n          --  Kill debug of generated code, since it messes up sloc values\n@@ -749,6 +752,11 @@ begin\n       elsif Main_Kind in N_Generic_Renaming_Declaration then\n          Back_End_Mode := Generate_Object;\n \n+      --  It's not an error to generate SCIL for e.g. a spec which has a body\n+\n+      elsif CodePeer_Mode then\n+         Back_End_Mode := Generate_Object;\n+\n       --  In all other cases (specs which have bodies, generics, and bodies\n       --  where subunits are missing), we cannot generate code and we generate\n       --  a warning message. Note that generic instantiations are gone at this"}, {"sha": "111a9d2d0d6737baa5869a2713fe09b27fa17ae2", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -350,9 +350,7 @@ package body Sem_Dist is\n \n       --  Build the function call which will replace the attribute\n \n-      if Is_Remote_Call_Interface (Ety)\n-        or else Is_Shared_Passive (Ety)\n-      then\n+      if Is_Remote_Call_Interface (Ety) or else Is_Shared_Passive (Ety) then\n          Get_Pt_Id_Call :=\n            Make_Function_Call (Loc,\n              Name => Get_Pt_Id,"}, {"sha": "8456ea32b5890a988a5316aec26ad07b51e903d1", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be9633f758e6174e0ff31c609713a4783f2f865/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=1be9633f758e6174e0ff31c609713a4783f2f865", "patch": "@@ -84,7 +84,7 @@ package body Switch.M is\n          if Switches = null then\n             Switches := new Argument_List (1 .. Initial_Number_Of_Switches);\n \n-         --  otherwise, if Switches is full, extend it\n+         --  Otherwise, if Switches is full, extend it\n \n          elsif Last = Switches'Last then\n             declare\n@@ -407,6 +407,8 @@ package body Switch.M is\n                         end if;\n                      end if;\n \n+                     --  Loop through remaining switch characters in string\n+\n                      while Ptr <= Max loop\n                         C := Switch_Chars (Ptr);\n                         Ptr := Ptr + 1;\n@@ -436,7 +438,16 @@ package body Switch.M is\n                                 (Storing (Storing'First .. Last_Stored));\n                            end if;\n \n-                           --  All other switches are -gnatxx\n+                        --  --gnatx.x\n+\n+                        elsif C = '.' and then Ptr <= Max then\n+                           Storing (First_Stored + 1) := '.';\n+                           Storing (First_Stored + 2) := Switch_Chars (Ptr);\n+                           Ptr := Ptr + 1;\n+                           Add_Switch_Component\n+                             (Storing (Storing'First .. First_Stored + 2));\n+\n+                        --  All other switches are -gnatxx\n \n                         else\n                            Storing (First_Stored + 1) := C;\n@@ -502,8 +513,7 @@ package body Switch.M is\n    end Normalize_Compiler_Switches;\n \n    function Normalize_Compiler_Switches\n-     (Switch_Chars : String)\n-      return         Argument_List\n+     (Switch_Chars : String) return Argument_List\n    is\n       Last : Natural;\n \n@@ -515,7 +525,6 @@ package body Switch.M is\n       else\n          return Global_Switches (Global_Switches'First .. Last);\n       end if;\n-\n    end Normalize_Compiler_Switches;\n \n    ------------------------"}]}