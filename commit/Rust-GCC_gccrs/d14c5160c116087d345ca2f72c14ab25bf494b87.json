{"sha": "d14c5160c116087d345ca2f72c14ab25bf494b87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE0YzUxNjBjMTE2MDg3ZDM0NWNhMmY3MmMxNGFiMjViZjQ5NGI4Nw==", "commit": {"author": {"name": "Sebastian Pop", "email": "pop@cri.ensmp.fr", "date": "2005-12-14T14:20:55Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2005-12-14T14:20:55Z"}, "message": "tree-ssa-operands.c (build_ssa_operands): Update leading comment.\n\n\t* tree-ssa-operands.c (build_ssa_operands): Update leading comment.\n\nFrom-SVN: r108512", "tree": {"sha": "aeb13b19e993b288e4c1d019d6c3728e0ffa5ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb13b19e993b288e4c1d019d6c3728e0ffa5ef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d14c5160c116087d345ca2f72c14ab25bf494b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14c5160c116087d345ca2f72c14ab25bf494b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14c5160c116087d345ca2f72c14ab25bf494b87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14c5160c116087d345ca2f72c14ab25bf494b87/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5216df748ac5f68468f06e4cfded3c42d6c3b7c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5216df748ac5f68468f06e4cfded3c42d6c3b7c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5216df748ac5f68468f06e4cfded3c42d6c3b7c9"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "e49e19f75853403c70cb96eac8de8c43c7f1e71b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14c5160c116087d345ca2f72c14ab25bf494b87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14c5160c116087d345ca2f72c14ab25bf494b87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d14c5160c116087d345ca2f72c14ab25bf494b87", "patch": "@@ -1,3 +1,7 @@\n+2005-12-14  Sebastian Pop  <pop@cri.ensmp.fr>\n+\n+\t* tree-ssa-operands.c (build_ssa_operands): Update leading comment.\n+\n 2005-12-14  J\"orn Rennecke <joern.rennecke@st.com>\n \n \t* struct-equiv.c (rtx_equiv_p): Allow arbitrary RVALUE values for"}, {"sha": "c75f30c605aee226187ce3f037cc9ce098829791", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14c5160c116087d345ca2f72c14ab25bf494b87/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14c5160c116087d345ca2f72c14ab25bf494b87/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=d14c5160c116087d345ca2f72c14ab25bf494b87", "patch": "@@ -791,27 +791,7 @@ parse_ssa_operands (tree stmt)\n     }\n }\n \n-/* Create an operands cache for STMT, returning it in NEW_OPS. OLD_OPS are the\n-   original operands, and if ANN is non-null, appropriate stmt flags are set\n-   in the stmt's annotation.  If ANN is NULL, this is not considered a \"real\"\n-   stmt, and none of the operands will be entered into their respective\n-   immediate uses tables.  This is to allow stmts to be processed when they\n-   are not actually in the CFG.\n-\n-   Note that some fields in old_ops may change to NULL, although none of the\n-   memory they originally pointed to will be destroyed.  It is appropriate\n-   to call free_stmt_operands() on the value returned in old_ops.\n-\n-   The rationale for this: Certain optimizations wish to examine the difference\n-   between new_ops and old_ops after processing.  If a set of operands don't\n-   change, new_ops will simply assume the pointer in old_ops, and the old_ops\n-   pointer will be set to NULL, indicating no memory needs to be cleared.  \n-   Usage might appear something like:\n-\n-       old_ops_copy = old_ops = stmt_ann(stmt)->operands;\n-       build_ssa_operands (stmt, NULL, &old_ops, &new_ops);\n-          <* compare old_ops_copy and new_ops *>\n-       free_ssa_operands (old_ops);\t\t\t\t\t*/\n+/* Create an operands cache for STMT.  */\n \n static void\n build_ssa_operands (tree stmt)"}]}