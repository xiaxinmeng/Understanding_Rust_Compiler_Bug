{"sha": "4be9717cf879d45534da0044401885e508c5d562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJlOTcxN2NmODc5ZDQ1NTM0ZGEwMDQ0NDAxODg1ZTUwOGM1ZDU2Mg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-03-02T01:39:30Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-03-02T01:39:30Z"}, "message": "re PR middle-end/70025 (Miscompilation of gc-7.4.2 on s390x starting with r227382)\n\n2016-03-01  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR middle-end/70025\n\t* lra-constraints.c (regno_val_use_in): New.\n\t(match_reload): Use it instead of regno_use_in.\n\nFrom-SVN: r233876", "tree": {"sha": "1bfe3919ebcf6dca20f7fe1153f345284921853c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bfe3919ebcf6dca20f7fe1153f345284921853c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4be9717cf879d45534da0044401885e508c5d562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be9717cf879d45534da0044401885e508c5d562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4be9717cf879d45534da0044401885e508c5d562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4be9717cf879d45534da0044401885e508c5d562/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af5108bcdeba11d751e7482b578545f6a6156e9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af5108bcdeba11d751e7482b578545f6a6156e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af5108bcdeba11d751e7482b578545f6a6156e9a"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "e55c99559b04eb71c73f8de01c9bb45ff3f123ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be9717cf879d45534da0044401885e508c5d562/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be9717cf879d45534da0044401885e508c5d562/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4be9717cf879d45534da0044401885e508c5d562", "patch": "@@ -1,3 +1,9 @@\n+2016-03-01  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/70025\n+\t* lra-constraints.c (regno_val_use_in): New.\n+\t(match_reload): Use it instead of regno_use_in.\n+\n 2016-03-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/70007"}, {"sha": "ef18100125df83a8740ac154078f66d3d75bdf08", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4be9717cf879d45534da0044401885e508c5d562/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4be9717cf879d45534da0044401885e508c5d562/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=4be9717cf879d45534da0044401885e508c5d562", "patch": "@@ -840,6 +840,36 @@ narrow_reload_pseudo_class (rtx reg, enum reg_class cl)\n     lra_change_class (REGNO (reg), rclass, \"      Change to\", true);\n }\n \n+/* Searches X for any reference to a reg with the same value as REGNO,\n+   returning the rtx of the reference found if any.  Otherwise,\n+   returns NULL_RTX.  */\n+static rtx\n+regno_val_use_in (unsigned int regno, rtx x)\n+{\n+  const char *fmt;\n+  int i, j;\n+  rtx tem;\n+\n+  if (REG_P (x) && lra_reg_info[REGNO (x)].val == lra_reg_info[regno].val)\n+    return x;\n+\n+  fmt = GET_RTX_FORMAT (GET_CODE (x));\n+  for (i = GET_RTX_LENGTH (GET_CODE (x)) - 1; i >= 0; i--)\n+    {\n+      if (fmt[i] == 'e')\n+\t{\n+\t  if ((tem = regno_val_use_in (regno, XEXP (x, i))))\n+\t    return tem;\n+\t}\n+      else if (fmt[i] == 'E')\n+\tfor (j = XVECLEN (x, i) - 1; j >= 0; j--)\n+\t  if ((tem = regno_val_use_in (regno , XVECEXP (x, i, j))))\n+\t    return tem;\n+    }\n+\n+  return NULL_RTX;\n+}\n+\n /* Generate reloads for matching OUT and INS (array of input operand\n    numbers with end marker -1) with reg class GOAL_CLASS.  Add input\n    and output reloads correspondingly to the lists *BEFORE and *AFTER.\n@@ -942,7 +972,8 @@ match_reload (signed char out, signed char *ins, enum reg_class goal_class,\n \t= (! early_clobber_p && ins[1] < 0 && REG_P (in_rtx)\n \t   && (int) REGNO (in_rtx) < lra_new_regno_start\n \t   && find_regno_note (curr_insn, REG_DEAD, REGNO (in_rtx))\n-\t   && (out < 0 || regno_use_in (REGNO (in_rtx), out_rtx) == NULL_RTX)\n+\t   && (out < 0\n+\t       || regno_val_use_in (REGNO (in_rtx), out_rtx) == NULL_RTX)\n \t   ? lra_create_new_reg (inmode, in_rtx, goal_class, \"\")\n \t   : lra_create_new_reg_with_unique_value (outmode, out_rtx,\n \t\t\t\t\t\t   goal_class, \"\"));"}]}