{"sha": "c225ba7b5689276a207812b5e9512dc34c80522e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyNWJhN2I1Njg5Mjc2YTIwNzgxMmI1ZTk1MTJkYzM0YzgwNTIyZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-01T11:41:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-01T11:41:08Z"}, "message": "(ffs): Delete pattern containing nonexistant instruction.\n\nFrom-SVN: r4620", "tree": {"sha": "d8ddeea2ecebf4732f1db2f7c90cb069528b6c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8ddeea2ecebf4732f1db2f7c90cb069528b6c2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c225ba7b5689276a207812b5e9512dc34c80522e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c225ba7b5689276a207812b5e9512dc34c80522e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c225ba7b5689276a207812b5e9512dc34c80522e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c225ba7b5689276a207812b5e9512dc34c80522e/comments", "author": null, "committer": null, "parents": [{"sha": "591d2ce85de124b6b5fab0ef0b64f0e69dc09384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591d2ce85de124b6b5fab0ef0b64f0e69dc09384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/591d2ce85de124b6b5fab0ef0b64f0e69dc09384"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "4327d0cf5e3e86222d7e4397326f14f589f6f844", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c225ba7b5689276a207812b5e9512dc34c80522e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c225ba7b5689276a207812b5e9512dc34c80522e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=c225ba7b5689276a207812b5e9512dc34c80522e", "patch": "@@ -435,20 +435,6 @@\n   \"\"\n   \"neg %0,%1\\;and %0,%0,%1\\;cntlz %0,%0\\;sfi %0,%0,32\")\n \n-;; There is no need for (set (condition) (compare (ffs) 0)) because that\n-;; can be simplified to an ordinary comparison.  A parallel set and compare\n-;; might be used, so include it.\n-\n-(define_insn \"\"\n-  [(set (match_operand:CC 2 \"cc_reg_operand\" \"=x\")\n-\t(compare:CC (ffs:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\" \"=&r\")\n-\t(ffs:SI (match_dup 1)))]\n-  \"\"\n-  \"neg %0,%1\\;and %0,%0,%1\\;cntlz %0,%0\\;sfi. %0,%0,32\"\n-  [(set_attr \"type\" \"compare\")])\n-\n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n@@ -4650,7 +4636,18 @@\n   \"\"\n   \"cror 0,0,0\")\n \f\n-;; Define the subtract-one-and-jump insns. \n+;; Define the subtract-one-and-jump insns, starting with the template \n+;; so loop.c knows what to generate.\n+\n+(define_expand \"decrement_and_branchsi\"\n+  [(parallel [(set (pc) (if_then_else (ne (match_operand:SI 0 \"register_operand\" \"c\")\n+\t\t\t\t\t  (const_int 1))\n+\t\t\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t\t\t      (pc)))\n+\t      (set (match_dup 0) (plus:SI (match_dup 0) (const_int -1)))])]\n+  \"\"\n+  \"\")\n+\n ;; We need to be able to do this for any operand, including MEM, or we\n ;; will cause reload to blow up since we don't allow output reloads on\n ;; JUMP_INSNs. \n@@ -4670,7 +4667,7 @@\n    #\n    #\")\n \t\t\t       \n-;; Similar, but we can use GE since we have a REG_NOTES.\n+;; Similar, but we can use GE since we have a REG_NONNEG.\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else (ge (match_operand:SI 1 \"register_operand\" \"0,*r,*r\")"}]}