{"sha": "766053b33a997fb268791967df46c5c3f9f94a64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY2MDUzYjMzYTk5N2ZiMjY4NzkxOTY3ZGY0NmM1YzNmOWY5NGE2NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-21T03:25:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-21T03:25:29Z"}, "message": "name-lookup.c (get_anonymous_namespace_name): Never use get_file_function_name.\n\n\t* name-lookup.c (get_anonymous_namespace_name): Never use\n\tget_file_function_name.\n\nFrom-SVN: r196851", "tree": {"sha": "573c20c17470b7ae5a40b32220bb10965aa2f9a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/573c20c17470b7ae5a40b32220bb10965aa2f9a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/766053b33a997fb268791967df46c5c3f9f94a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766053b33a997fb268791967df46c5c3f9f94a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766053b33a997fb268791967df46c5c3f9f94a64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766053b33a997fb268791967df46c5c3f9f94a64/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c77f56bb5149721d410b2ff4e065bd3fc6c53cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c77f56bb5149721d410b2ff4e065bd3fc6c53cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c77f56bb5149721d410b2ff4e065bd3fc6c53cc7"}], "stats": {"total": 77, "additions": 69, "deletions": 8}, "files": [{"sha": "719f70c693ac7be42befa723068518b9f8ae9b7e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=766053b33a997fb268791967df46c5c3f9f94a64", "patch": "@@ -1,5 +1,8 @@\n 2013-03-20  Jason Merrill  <jason@redhat.com>\n \n+\t* name-lookup.c (get_anonymous_namespace_name): Never use\n+\tget_file_function_name.\n+\n \t* pt.c (retrieve_specialization): Handle null tmpl argument.\n \n \tPR c++/17232"}, {"sha": "7084a535ce141d13c96b405cdb4b7da67bafac09", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=766053b33a997fb268791967df46c5c3f9f94a64", "patch": "@@ -69,14 +69,12 @@ get_anonymous_namespace_name (void)\n {\n   if (!anonymous_namespace_name)\n     {\n-      /* The anonymous namespace has to have a unique name\n-\t if typeinfo objects are being compared by name.  */\n-      if (! flag_weak || ! SUPPORTS_ONE_ONLY)\n-       anonymous_namespace_name = get_file_function_name (\"N\");\n-      else\n-       /* The demangler expects anonymous namespaces to be called\n-          something starting with '_GLOBAL__N_'.  */\n-       anonymous_namespace_name = get_identifier (\"_GLOBAL__N_1\");\n+      /* We used to use get_file_function_name here, but that isn't\n+\t necessary now that anonymous namespace typeinfos\n+\t are !TREE_PUBLIC, and thus compared by address.  */\n+      /* The demangler expects anonymous namespaces to be called\n+\t something starting with '_GLOBAL__N_'.  */\n+      anonymous_namespace_name = get_identifier (\"_GLOBAL__N_1\");\n     }\n   return anonymous_namespace_name;\n }"}, {"sha": "2a5ef4bc5e37d43fcf2ff09d3b7531a81ae1e1a0", "filename": "gcc/testsuite/g++.dg/eh/anon1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon1.C?ref=766053b33a997fb268791967df46c5c3f9f94a64", "patch": "@@ -0,0 +1,26 @@\n+// Test that the anonymous namespace isn't mangled with random characters,\n+// but also doesn't get mixed up with an anonymous namespace in another\n+// translation unit.\n+\n+// { dg-do run }\n+// { dg-additional-sources \"anon1a.cc\" }\n+\n+namespace {\n+  struct A\n+  {\n+    virtual void f();\n+  };\n+\n+  void A::f() { }\n+}\n+\n+extern void g();\n+\n+int main()\n+{\n+  try {\n+    try {\n+      g();\n+    } catch (A) { __builtin_abort(); }\n+  } catch (...) { }\n+}"}, {"sha": "ba161ac2b01e716e3027fe3203aaae6fb8a43180", "filename": "gcc/testsuite/g++.dg/eh/anon1a.cc", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon1a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon1a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon1a.cc?ref=766053b33a997fb268791967df46c5c3f9f94a64", "patch": "@@ -0,0 +1,10 @@\n+namespace {\n+  struct A\n+  {\n+    virtual void f();\n+  };\n+\n+  void A::f() { }\n+}\n+\n+void g() { throw A(); }"}, {"sha": "9ff9ee3ab7f97a5258811852273c79eec08eeabe", "filename": "gcc/testsuite/g++.dg/eh/anon2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766053b33a997fb268791967df46c5c3f9f94a64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fanon2.C?ref=766053b33a997fb268791967df46c5c3f9f94a64", "patch": "@@ -0,0 +1,24 @@\n+// Test that the anonymous namespace isn't mangled with random characters,\n+// but also doesn't get mixed up with an anonymous namespace in another\n+// translation unit.\n+// { dg-final { scan-assembler \"\\\\*N12_GLOBAL__N_11AE\" } }\n+\n+namespace {\n+  struct A\n+  {\n+    virtual void f();\n+  };\n+\n+  void A::f() { }\n+}\n+\n+extern void g();\n+\n+int main()\n+{\n+  try {\n+    try {\n+      g();\n+    } catch (A) { __builtin_abort(); }\n+  } catch (...) { }\n+}"}]}