{"sha": "543758c6c44ec668ca58a34016ef8905854fec72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQzNzU4YzZjNDRlYzY2OGNhNThhMzQwMTZlZjg5MDU4NTRmZWM3Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-13T00:25:05Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-13T00:25:05Z"}, "message": "(REAL_VALUE_FROM_TARGET_SINGLE): New macro.\n\n(REAL_VALUE_FROM_TARGET_DOUBLE): Likewise.\n\nFrom-SVN: r4671", "tree": {"sha": "07598d2a46805be7b1540ee8c59348d91cc112f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07598d2a46805be7b1540ee8c59348d91cc112f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/543758c6c44ec668ca58a34016ef8905854fec72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543758c6c44ec668ca58a34016ef8905854fec72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/543758c6c44ec668ca58a34016ef8905854fec72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/543758c6c44ec668ca58a34016ef8905854fec72/comments", "author": null, "committer": null, "parents": [{"sha": "b31c244f31774551be1156bce8bdf5641ad35f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31c244f31774551be1156bce8bdf5641ad35f55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b31c244f31774551be1156bce8bdf5641ad35f55"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "4ac1822899e87b2f3a654aaafbf01d48d6ec25c2", "filename": "gcc/real.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/543758c6c44ec668ca58a34016ef8905854fec72/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/543758c6c44ec668ca58a34016ef8905854fec72/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=543758c6c44ec668ca58a34016ef8905854fec72", "patch": "@@ -95,6 +95,7 @@ int ereal_cmp (), eroundi (), ereal_isneg ();\n unsigned int eroundui ();\n REAL_VALUE_TYPE etrunci (), etruncui (), ereal_ldexp (), ereal_atof ();\n REAL_VALUE_TYPE ereal_negate (), ereal_truncate ();\n+REAL_VALUE_TYPE ereal_from_float (), ereal_from_double ();\n \n #define REAL_VALUES_EQUAL(x, y) (ereal_cmp ((x), (y)) == 0)\n /* true if x < y : */\n@@ -124,9 +125,12 @@ extern REAL_VALUE_TYPE real_value_truncate ();\n /* IN is a REAL_VALUE_TYPE.  OUT is an array of longs. */\n #define REAL_VALUE_TO_TARGET_LONG_DOUBLE(IN, OUT) (etarldouble ((IN), (OUT)))\n #define REAL_VALUE_TO_TARGET_DOUBLE(IN, OUT) (etardouble ((IN), (OUT)))\n-\n+/* d is an array of longs. */\n+#define REAL_VALUE_FROM_TARGET_DOUBLE(d)  (ereal_from_double (d))\n /* IN is a REAL_VALUE_TYPE.  OUT is a long. */\n #define REAL_VALUE_TO_TARGET_SINGLE(IN, OUT) ((OUT) = etarsingle ((IN)))\n+/* f is a long. */\n+#define REAL_VALUE_FROM_TARGET_SINGLE(f)  (ereal_from_float (f))\n \n /* Conversions to decimal ASCII string.  */\n #define REAL_VALUE_TO_DECIMAL(r, fmt, s) (ereal_to_decimal (r, s))"}]}