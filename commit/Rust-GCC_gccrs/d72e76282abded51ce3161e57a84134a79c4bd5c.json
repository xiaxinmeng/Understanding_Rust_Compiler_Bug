{"sha": "d72e76282abded51ce3161e57a84134a79c4bd5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcyZTc2MjgyYWJkZWQ1MWNlMzE2MWU1N2E4NDEzNGE3OWM0YmQ1Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T13:11:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-05T13:11:29Z"}, "message": "[multiple changes]\n\n2011-09-05  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch7.adb, exp_ch6.adb: Minor reformatting.\n\n2011-09-05  Johannes Kanig  <kanig@adacore.com>\n\n\t* lib-xref-alfa.adb: Update comments.\n\n2011-09-05  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_res.adb: Minor reformatting\n\nFrom-SVN: r178535", "tree": {"sha": "eff707ccdc5388530cc893afc435a33b8134964f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eff707ccdc5388530cc893afc435a33b8134964f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d72e76282abded51ce3161e57a84134a79c4bd5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72e76282abded51ce3161e57a84134a79c4bd5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72e76282abded51ce3161e57a84134a79c4bd5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72e76282abded51ce3161e57a84134a79c4bd5c/comments", "author": null, "committer": null, "parents": [{"sha": "0d566e0157b969d5868a157e73a75b6b5bff4bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d566e0157b969d5868a157e73a75b6b5bff4bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d566e0157b969d5868a157e73a75b6b5bff4bb8"}], "stats": {"total": 38, "additions": 25, "deletions": 13}, "files": [{"sha": "26c5256fcc14f17284dcb3a28a47d0769be704ca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d72e76282abded51ce3161e57a84134a79c4bd5c", "patch": "@@ -1,3 +1,15 @@\n+2011-09-05  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch7.adb, exp_ch6.adb: Minor reformatting.\n+\n+2011-09-05  Johannes Kanig  <kanig@adacore.com>\n+\n+\t* lib-xref-alfa.adb: Update comments.\n+\n+2011-09-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_res.adb: Minor reformatting\n+\n 2011-09-05  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Build_In_Place_Formal): If extra formals are not"}, {"sha": "fd794e4305aabbcff96933a2d9f0d29743e1aaf4", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d72e76282abded51ce3161e57a84134a79c4bd5c", "patch": "@@ -7236,7 +7236,7 @@ package body Exp_Ch6 is\n          Add_Finalization_Master_Actual_To_Build_In_Place_Call\n            (Func_Call, Function_Id, Acc_Type);\n \n-         --  Is access type has a master entity, pass a reference to it.\n+         --  If access type has a master entity, pass a reference to it\n \n          if Present (Master_Id (Acc_Type)) then\n             Add_Task_Actuals_To_Build_In_Place_Call"}, {"sha": "f36e29e294edabd8c12c8d637e5b960940327a43", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=d72e76282abded51ce3161e57a84134a79c4bd5c", "patch": "@@ -3042,7 +3042,7 @@ package body Exp_Ch7 is\n               Parameter_Associations =>\n                 New_List (New_Reference_To (Data.E_Id, Data.Loc)));\n \n-      --  Restricted runtime: exception messages are not supported and hence\n+      --  Restricted run-time: exception messages are not supported and hence\n       --  Raise_From_Controlled_Operation is not supported. Raise Program_Error\n       --  instead.\n \n@@ -3890,10 +3890,10 @@ package body Exp_Ch7 is\n          No_Body := True;\n       end if;\n \n-      --  For a nested instance, delay processing until freeze point.\n+      --  For a nested instance, delay processing until freeze point\n \n       if Has_Delayed_Freeze (Id)\n-       and then Nkind (Parent (N)) /= N_Compilation_Unit\n+        and then Nkind (Parent (N)) /= N_Compilation_Unit\n       then\n          return;\n       end if;\n@@ -7284,7 +7284,7 @@ package body Exp_Ch7 is\n       --  Procedure call or raise statement\n \n    begin\n-      --  Standard runtime, .NET/JVM targets: add choice parameter E and pass\n+      --  Standard run-time, .NET/JVM targets: add choice parameter E and pass\n       --  it to Raise_From_Controlled_Operation so that the original exception\n       --  name and message can be recorded in the exception message for\n       --  Program_Error.\n@@ -7299,7 +7299,7 @@ package body Exp_Ch7 is\n              Parameter_Associations => New_List (\n                New_Reference_To (E_Occ, Loc)));\n \n-      --  Restricted runtime: exception messages are not supported\n+      --  Restricted run-time: exception messages are not supported\n \n       else\n          E_Occ := Empty;\n@@ -7538,7 +7538,7 @@ package body Exp_Ch7 is\n               Attribute_Name => Name_Unrestricted_Access)));\n \n       --  In the case of build-in-place functions, protect the call to ensure\n-      --  we have a master at runtime. Generate:\n+      --  we have a master at run time. Generate:\n \n       --    if <Ptr_Typ>FM /= null then\n       --       <Call>;"}, {"sha": "2036dd83d737dad43fafbc3b980e10b936b5d62c", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=d72e76282abded51ce3161e57a84134a79c4bd5c", "patch": "@@ -612,11 +612,11 @@ package body Alfa is\n                when Overloadable_Kind =>\n                   return Typ = 's';\n \n-               --  References to IN parameters are not considered in Alfa\n-               --  section, as these will be translated as constants in the\n-               --  intermediate language for formal verification.\n-\n-               --  Above comment is incomplete??? what about E_Constant case\n+               --  References to IN parameters and constants are not\n+               --  considered in Alfa section, as these will be translated\n+               --  as constants in the intermediate language for formal\n+               --  verification, and should therefore never appear in frame\n+               --  conditions.\n \n                when E_In_Parameter | E_Constant =>\n                   return False;"}, {"sha": "068e3fc88afaebbb49d1e3a73c21d6dd7b4a118a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d72e76282abded51ce3161e57a84134a79c4bd5c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d72e76282abded51ce3161e57a84134a79c4bd5c", "patch": "@@ -7145,7 +7145,7 @@ package body Sem_Res is\n          return Res;\n       end Convert_Operand;\n \n-      --  Start of processing for Resolve_Intrinsic_Operator\n+   --  Start of processing for Resolve_Intrinsic_Operator\n \n    begin\n       --  We must preserve the original entity in a generic setting, so that"}]}