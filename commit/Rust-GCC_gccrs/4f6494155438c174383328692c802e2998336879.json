{"sha": "4f6494155438c174383328692c802e2998336879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY2NDk0MTU1NDM4YzE3NDM4MzMyODY5MmM4MDJlMjk5ODMzNjg3OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-03-08T09:53:41Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-03-08T09:53:41Z"}, "message": "Initialize args\n\nFrom-SVN: r63981", "tree": {"sha": "c476e2f01366588cd13f45d8e7c0c8b7e3078a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c476e2f01366588cd13f45d8e7c0c8b7e3078a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f6494155438c174383328692c802e2998336879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f6494155438c174383328692c802e2998336879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f6494155438c174383328692c802e2998336879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f6494155438c174383328692c802e2998336879/comments", "author": null, "committer": null, "parents": [{"sha": "72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b8d451f1b0c3bef4b3afc688ada5d5175d97d0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e7cba7adcf6fe5d8ab11c2381d4ae41a2bd1ea7b", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f6494155438c174383328692c802e2998336879/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f6494155438c174383328692c802e2998336879/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=4f6494155438c174383328692c802e2998336879", "patch": "@@ -2175,7 +2175,7 @@ build_new_1 (exp)\n   /* True if the function we are calling is a placement allocation\n      function.  */\n   bool placement_allocation_fn_p;\n-  tree args;\n+  tree args = NULL_TREE;\n \n   placement = TREE_OPERAND (exp, 0);\n   type = TREE_OPERAND (exp, 1);"}]}