{"sha": "dc6f415864bad4172aa2b396007cbb4ed2acf949", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2ZjQxNTg2NGJhZDQxNzJhYTJiMzk2MDA3Y2JiNGVkMmFjZjk0OQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-12-14T21:06:35Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-12-14T21:06:35Z"}, "message": "builtins.def: Rename BUILT_IN_FSQRT to BUILT_IN_SQRT and __builtin_fsqrt to __builtin_sqrt.\n\n2001-12-14  Roger Sayle <roger@eyesopen.com>\n\n\t* builtins.def: Rename BUILT_IN_FSQRT to BUILT_IN_SQRT and\n\t__builtin_fsqrt to __builtin_sqrt.\n\t* builtins.c (expand_builtin_mathfn,expand_builtin): Same.\n\t* doc/extend.texi: Simplify documentation to match patch.\nf:\n\t* com-rt.def: Use __builtin_sqrt instead of __builtin_fsqrt.\n\t* com.c (ffecom_init_0): Same, and fixed enumeration usage.\nlibstdc++-v3:\n\t* acconfig.h: Test for __builtin_sqrt instead of\n\t__builtin_fsqrt.\n\t* acinclude.m4: Same.\n\t* include/c_shadow/bits/std_cmath.h: Same.\n\t* aclocal.m4: Regenerated.\n\t* config.h.in: Regenerated.\n\t* configure: Regenerated.\n\nFrom-SVN: r48008", "tree": {"sha": "b25e70ca2c4733ffdbd56a16ffcfba6bbccfccb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b25e70ca2c4733ffdbd56a16ffcfba6bbccfccb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc6f415864bad4172aa2b396007cbb4ed2acf949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6f415864bad4172aa2b396007cbb4ed2acf949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6f415864bad4172aa2b396007cbb4ed2acf949", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6f415864bad4172aa2b396007cbb4ed2acf949/comments", "author": null, "committer": null, "parents": [{"sha": "e10e23ee51716833df9ee4642a72f91eff4ff90a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e10e23ee51716833df9ee4642a72f91eff4ff90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e10e23ee51716833df9ee4642a72f91eff4ff90a"}], "stats": {"total": 489, "additions": 255, "deletions": 234}, "files": [{"sha": "09f322a28d6120bebcc64c7d5c6f56aeb5fb3741", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -1,3 +1,11 @@\n+2001-12-14  Roger Sayle <roger@eyesopen.com>\n+\n+\t* builtins.def: Rename BUILT_IN_FSQRT to BUILT_IN_SQRT and\n+\t__builtin_fsqrt to __builtin_sqrt.\n+\n+\t* builtins.c (expand_builtin_mathfn,expand_builtin): Same.\n+\t* doc/extend.texi: Simplify documentation to match patch.\n+\n Fri Dec 14 21:23:54 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* config.gcc: Revamp target_cpu_default2 to strings;\n@@ -137,7 +145,7 @@ Thu Dec 13 20:30:08 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* collect2.c (COLLECT_SHARED_INIT_FUNC)\n \t(COLLECT_SHARD_FINI_FUNC): Define default values.\n-\t(write_c_file_stat): Use them to call construtor and destructor \n+\t(write_c_file_stat): Use them to call construtor and destructor\n \tfunctions in shared libraries.\n \t* doc/tm.texi (COLLECT_SHARED_INIT_FUNC)\n \t(COLLECT_SHARD_FINI_FUNC): Document them."}, {"sha": "d006b97546b513aae212fe9783d3522608478d63", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -1506,7 +1506,7 @@ expand_builtin_mathfn (exp, target, subtarget)\n     case BUILT_IN_COSF:\n     case BUILT_IN_COSL:\n       builtin_optab = cos_optab; break;\n-    case BUILT_IN_FSQRT:\n+    case BUILT_IN_SQRT:\n     case BUILT_IN_SQRTF:\n     case BUILT_IN_SQRTL:\n       builtin_optab = sqrt_optab; break;\n@@ -3550,7 +3550,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n       {\n       case BUILT_IN_SIN:\n       case BUILT_IN_COS:\n-      case BUILT_IN_FSQRT:\n+      case BUILT_IN_SQRT:\n       case BUILT_IN_SQRTF:\n       case BUILT_IN_SQRTL:\n       case BUILT_IN_MEMSET:\n@@ -3621,7 +3621,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t because of possible accuracy problems.  */\n       if (! flag_unsafe_math_optimizations)\n \tbreak;\n-    case BUILT_IN_FSQRT:\n+    case BUILT_IN_SQRT:\n     case BUILT_IN_SQRTF:\n     case BUILT_IN_SQRTL:\n       target = expand_builtin_mathfn (exp, target, subtarget);"}, {"sha": "58d949325047230a3aa8fdb195af86b29be8e8de", "filename": "gcc/builtins.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -263,8 +263,8 @@ DEF_LIB_BUILTIN(BUILT_IN_STRRCHR,\n \t\t\"__builtin_strrchr\",\n \t\tBT_FN_STRING_CONST_STRING_INT)\n \n-DEF_LIB_BUILTIN(BUILT_IN_FSQRT,\n-\t\t\"__builtin_fsqrt\",\n+DEF_LIB_BUILTIN(BUILT_IN_SQRT,\n+\t\t\"__builtin_sqrt\",\n \t\tBT_FN_DOUBLE_DOUBLE)\n DEF_LIB_BUILTIN(BUILT_IN_SIN,\n \t\t\"__builtin_sin\","}, {"sha": "6413759b3840bcddd083b9ca2d8ffa1d39d7fb5c", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -4400,10 +4400,8 @@ The ISO C89 functions @code{abs}, @code{cos}, @code{fabs},\n @code{strpbrk}, @code{strrchr}, @code{strspn}, and @code{strstr} are all\n recognized as built-in functions unless @option{-fno-builtin} is\n specified (or @option{-fno-builtin-@var{function}} is specified for an\n-individual function).  All of these functions have\n-corresponding versions prefixed\n-with @code{__builtin_}, except that the version for @code{sqrt} is\n-called @code{__builtin_fsqrt}.\n+individual function).  All of these functions have corresponding\n+versions prefixed with @code{__builtin_}.\n \n GCC provides built-in versions of the ISO C99 floating point comparison\n macros that avoid raising exceptions for unordered operands.  They have"}, {"sha": "1e6193af51cc2487f461c3fcc67ba38f822a5371", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -1,3 +1,8 @@\n+2001-12-14  Roger Sayle <roger@eyesopen.com>\n+\n+\t* com-rt.def: Use __builtin_sqrt instead of __builtin_fsqrt.\n+\t* com.c (ffecom_init_0): Same, and fixed enumeration usage.\n+\n 2001-12-10  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* g77.texi: Don't condition menus on @ifinfo.\n@@ -953,7 +958,7 @@ Sun Jun 11 00:03:00 2000  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n Wed May 17 17:27:44 2000  Andrew Cagney  <cagney@b1.cygnus.com>\n \n \t* top.c (ffe_decode_option): Update -Wall unused flags by calling\n- \tset_Wunused.\n+\tset_Wunused.\n \n 2000-05-09  Zack Weinberg  <zack@wolery.cumb.org>\n \n@@ -1270,7 +1275,7 @@ Sun Sep 12 23:29:47 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(g77_newargv): Constify.\n \t(lookup_option, append_arg, lang_specific_driver): Constify a char*.\n \t(lang_specific_driver): All calls to the function pointer\n- \tparameter now explicitly call `fatal'.\n+\tparameter now explicitly call `fatal'.\n \n Fri Sep 10 10:32:32 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n "}, {"sha": "43344d938c42eb9077e7a0e2ebe0b532dc298d48", "filename": "gcc/f/com-rt.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Ff%2Fcom-rt.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Ff%2Fcom-rt.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom-rt.def?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -273,7 +273,7 @@ DEFGFRT (FFECOM_gfrtL_LOG10, \"log10\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, T\n DEFGFRT (FFECOM_gfrtL_POW, \"pow\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n DEFGFRT (FFECOM_gfrtL_SIN, \"__builtin_sin\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n DEFGFRT (FFECOM_gfrtL_SINH, \"sinh\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n-DEFGFRT (FFECOM_gfrtL_SQRT, \"__builtin_fsqrt\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n+DEFGFRT (FFECOM_gfrtL_SQRT, \"__builtin_sqrt\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n DEFGFRT (FFECOM_gfrtL_TAN, \"tan\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n DEFGFRT (FFECOM_gfrtL_TANH, \"tanh\", FFECOM_rttypeDOUBLE_, \"d\", FALSE, FALSE, TRUE)\n "}, {"sha": "982b3f8bcce16030e111bdc2f83e752ba98bb3b4", "filename": "gcc/f/com.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -11713,23 +11713,23 @@ ffecom_init_0 ()\n     = build_function_type (void_type_node, NULL_TREE);\n \n   builtin_function (\"__builtin_sqrtf\", float_ftype_float,\n-\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrtf\");\n-  builtin_function (\"__builtin_fsqrt\", double_ftype_double,\n-\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrt\");\n+\t\t    BUILT_IN_SQRTF, BUILT_IN_NORMAL, \"sqrtf\");\n+  builtin_function (\"__builtin_sqrt\", double_ftype_double,\n+\t\t    BUILT_IN_SQRT, BUILT_IN_NORMAL, \"sqrt\");\n   builtin_function (\"__builtin_sqrtl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_FSQRT, BUILT_IN_NORMAL, \"sqrtl\");\n+\t\t    BUILT_IN_SQRTL, BUILT_IN_NORMAL, \"sqrtl\");\n   builtin_function (\"__builtin_sinf\", float_ftype_float,\n-\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sinf\");\n+\t\t    BUILT_IN_SINF, BUILT_IN_NORMAL, \"sinf\");\n   builtin_function (\"__builtin_sin\", double_ftype_double,\n \t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sin\");\n   builtin_function (\"__builtin_sinl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_SIN, BUILT_IN_NORMAL, \"sinl\");\n+\t\t    BUILT_IN_SINL, BUILT_IN_NORMAL, \"sinl\");\n   builtin_function (\"__builtin_cosf\", float_ftype_float,\n-\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cosf\");\n+\t\t    BUILT_IN_COSF, BUILT_IN_NORMAL, \"cosf\");\n   builtin_function (\"__builtin_cos\", double_ftype_double,\n \t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cos\");\n   builtin_function (\"__builtin_cosl\", ldouble_ftype_ldouble,\n-\t\t    BUILT_IN_COS, BUILT_IN_NORMAL, \"cosl\");\n+\t\t    BUILT_IN_COSL, BUILT_IN_NORMAL, \"cosl\");\n \n   pedantic_lvalues = FALSE;\n "}, {"sha": "a8612bdbef00303292b12dee9121cbacdbac2673", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 192, "deletions": 182, "changes": 374, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -1,3 +1,13 @@\n+2001-12-13  Roger Sayle <roger@eyesopen.com>\n+\n+\t* acconfig.h: Test for __builtin_sqrt instead of\n+\t__builtin_fsqrt.\n+\t* acinclude.m4: Same.\n+\t* include/c_shadow/bits/std_cmath.h: Same.\n+\t* aclocal.m4: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2001-12-13  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/ext/howto.html:  Fix typos.\n@@ -8,7 +18,7 @@\n \t* src/locale.cc (locale::locale(const char*)): Deal with locales\n \tnamed \"\".\n \t* testsuite/22_locale/ctor_copy_dtor.cc (test01): Modify.\n-\t\n+\n 2001-12-12  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/ext/ropeimpl.h (rope::_S_leaf_concat_char_iter,\n@@ -105,15 +115,15 @@\n \n 2001-12-09  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Philip Martin <pmartin@uklinux.net>\n-\t\n+\n \t* include/bits/locale_facets.h (__num_base::_S_scale_hex): Add.\n \t(__num_base::_S_scale_oct): Add.\n \t* include/bits/locale_facets.tcc (_M_extract_int): Use them.\n \t* src/locale.cc: Add definitions.\n \t* testsuite/27_io/istream_extractor_arith.cc (main): Call test13.\n \n \t* testsuite/testsuite_hooks.h: Remove duplicate VERIFY define.\n-\t\n+\n 2001-12-07  Nathan Myers  <ncm@cantrip.org>\n \t    Loren Rittle <ljrittle@acm.org>\n \n@@ -130,7 +140,7 @@\n \t* src/globals.cc:  Remove __GTHREADS guard.\n \n 2001-12-07  Paolo Carlini  <pcarlini@unitus.it>\n-        \n+\n \t* include/bits/locale_facets.tcc (num_put::_M_convert_float):\n \tExtend comment, reduce __cs_size for non-fixed outputs.\n \n@@ -151,7 +161,7 @@\n \n \tlibstdc++/3720\n \t* include/bits/locale_facets.tcc (num_put): Clean.\n-\t(num_get::_M_extract_float): Change argument to string. \n+\t(num_get::_M_extract_float): Change argument to string.\n \t(num_get::do_get(float)): Fixup.\n \t(num_get::do_get(double)): Same.\n \t(num_get::do_get(long double)): Same.\n@@ -161,7 +171,7 @@\n \tdeclaration here.\n \t* src/locale.cc (__num_base::_S_atoms): Remove x, X.\n \t* testsuite/27_io/istream_extractor_arith.cc (test13): Add.\n-\t\n+\n 2001-12-06  Philip Martin  <pmartin@uklinux.net>\n \n \t* testsuite/27_io/istream_extractor_arith.cc (test12): Add\n@@ -207,7 +217,7 @@\n \t* include/bits/locale_facets.tcc (num_put::_M_widen_float): Add\n \tgrouping to floating point types.\n \t* testsuite/27_io/ostream_inserter_arith.cc (test02): Add test.\n-\t\n+\n 2001-12-04  Paolo Carlini <pcarlini@unitus.it>\n \n         libstdc++/4402\n@@ -304,7 +314,7 @@\n \t* libsupc++/eh_exception.cc (bad_exception::~bad_exception()): Same.\n \n \t* include/bits/std_iomanip.h: Tweak.\n-\t\n+\n 2001-11-29  Paolo Carlini  <pcarlini@unitus.it>\n \n \tlibstdc++/3655\n@@ -373,15 +383,15 @@\n \t+ and - signs.\n \t(__num_base::_M_zero): Add\n \t(__num_base::_M_e): Add.\n-\t(__num_base::_M_E): Add.\t\n+\t(__num_base::_M_E): Add.\n \t* include/bits/locale_facets.tcc (num_get::_M_extract): Remove.\n \t(num_get::_M_extract_float): New.\n \t(num_get::_M_extract_int): New.\n \t* src/locale.cc (num_get::_M_extract): Remove.\n-\t\n+\n \t* include/bits/locale_facets.tcc (num_put::_M_insert_float):\n \tSimplify, use _M_insert.\n-\t(num_put::do_put(bool)): Simplify, remove __pad. \n+\t(num_put::do_put(bool)): Simplify, remove __pad.\n \t(__pad): Remove.\n \t(__pad_output): Change to __pad.\n \t* include/bits/ostream.tcc: And here.\n@@ -401,7 +411,7 @@\n \t(__add_grouping): This.\n \t* src/locale-inst.cc: And here. Tweak instantiations.\n \t* src/misc-inst.cc: Remove instantiations.\n-\t\n+\n \t* include/bits/ostream.tcc (__pad_char): Rename, adjust inserters\n \tfor new calling conventions, move to...\n \t* include/bits/locale_facets.tcc (__pad_output): Here. Adjust\n@@ -411,11 +421,11 @@\n \t* src/locale-inst.cc: Same.\n \n \t* include/bits/locale_facets.h (_Numeric_get): Remove.\n- \t(_Numeric_put): Remove.\n+\t(_Numeric_put): Remove.\n \t(num_get::get(short)): Remove.\n-\t(num_get::get(int)): Remove.\t\n+\t(num_get::get(int)): Remove.\n \t(num_get::do_get(short)): Remove.\n-\t(num_get::do_get(int)): Remove.\t\n+\t(num_get::do_get(int)): Remove.\n \t* include/bits/istream.tcc (istream::operator>>(short)): Fix as\n \tper DR 118.\n \t(istream::operator>>(int)): Same.\n@@ -436,7 +446,7 @@\n \t* testsuite/22_locale/num_put_members_wchar_t.cc: New file.\n \t* testsuite/27_io/ostream_inserter_arith.cc: Fix.\n \t* testsuite/27_io/istream_extractor_arith.cc: Fix.\n-\t\n+\n 2001-11-27  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/explanations.html:  New section, empty for now.\n@@ -713,11 +723,11 @@\n \n 2001-11-01  Paolo Carlini  <pcarlini@unitus.it>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* testsuite/27_io/ios_manip_fmtflags.cc: Fix for non-interactive\n \toutput.\n \t* include/bits/locale_facets.tcc (num_put::do_put(bool)): Fix.\n-\t\n+\n 2001-11-01  Egor Duda  <deo@logos-m.ru>\n \n \t* config/os/newlib/bits/ctype_noninline.h\n@@ -774,7 +784,7 @@\n \t* src/codecvt.cc: Tweaks.\n \t* testsuite/22_locale/codecvt.cc: Test compilation only,\n \tnon-required facets not required to have linkage.\n-\t\n+\n 2001-10-31  Edward E. Meyer  <edward.e.meyer@boeing.com>\n \n \tlibstdc++/4622\n@@ -790,7 +800,7 @@\n \t* src/string-inst.cc: Tweaks, add instantiation.\n \t* testsuite/21_strings/replace.cc (test02): Add test.\n \t* testsuite/21_strings/assign.cc (test01): New file.\n-\t\n+\n 2001-10-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* include/bits/stl_deque.h (_M_new_elements_at_front): Use\n@@ -810,7 +820,7 @@\n \t* config/locale/codecvt_specializations_ieee_1003.1-200x.h\n \t(__enc_traits::~__enc_traits): Fix.\n \t(__enc_traits::_M_init): Add error checking.\n-\t\n+\n 2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/4542\n@@ -824,22 +834,22 @@\n \t* include/bits/istream.tcc (istream::operator>>(streambuf*): Make\n \tconsistent, where possible.\n \t* include/bits/streambuf.tcc: Tweak.\n-\t\n+\n 2001-10-25  Brendan Kehoe  <brendan@zen.org>\n \n \tlibstdc++/4536\n \t* bits/ostream.tcc (seekp): Scope use as ios_base::failbit.\n- \t* bits/istream.tcc (seekg): Likewise.\n+\t* bits/istream.tcc (seekg): Likewise.\n \n 2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>\n \t    Ulrich Weigand <Ulrich.Weigand@de.ibm.com>\n-\t\n+\n \t* config/os/gnu-linux/bits/os_defines.h: Set to 64 bit longs with\n \t__s390x__ only.\n \t* include/bits/std_limits.h: Fix wchar_t issues.\n \t* config/os/aix/bits/os_defines.h: Fix.\n-\t\n+\n 2001-10-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.tcc (collate::do_transform): Fix.\n@@ -890,8 +900,8 @@\n \t* config/cpu/i386/bits/limits.h: Move to...\n \t* config/cpu/i386/bits/cpu_limits.h: ...here.\n \t* config/cpu/cris/bits/cpu_limits.h: Same.\n-\t* config/cpu/powerpc/bits/cpu_limits.h: Same.\t\n-\t* config/cpu/x86-64/bits/cpu_limits.h: Same.\t\t\n+\t* config/cpu/powerpc/bits/cpu_limits.h: Same.\n+\t* config/cpu/x86-64/bits/cpu_limits.h: Same.\n \t* config/cpu/alpha/bits/cpu_limits.h: New.\n \t* config/cpu/m68k/bits/cpu_limits.h: New.\n \t* config/cpu/s390/bits/cpu_limits.h: New.\n@@ -908,16 +918,16 @@\n \t* config/os/solaris/solaris2.5/bits/os_defines.h: Same.\n \t* config/os/solaris/solaris2.6/bits/os_defines.h: Same.\n \t* config/os/solaris/solaris2.7/bits/os_defines.h: Same.\n-\t\n-\t* include/bits/c++config: Remove include.\t\n+\n+\t* include/bits/c++config: Remove include.\n \t* include/bits/limits_generic.h: Remove.\n \t* include/bits/std_limits.h: Include cpu_limits.h.\n \t* include/Makefile.am: Fixup.\n \t* src/limits.cc: Tweak.\n \t* src/limits_generic.cc: Remove.\n \t* src/gen-num-limits.cc: Remove.\n \t* mknumeric_limits: Remove.\n-\t\n+\n 2001-10-20  Brendan Kehoe  <brendan@zen.org>\n \n \t* bits/type_traits.h (_Bool): Removed this type.\n@@ -933,7 +943,7 @@\n \tDisable E_TIME due to formatting issues.\n \n \t* README: Update.\n-\t\n+\n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n \n         * include/bits/std_complex.h: Default initialize second argument\n@@ -962,7 +972,7 @@\n         member from _M_current, and change all uses; thus sayeth $24.4.1.1.\n \n 2001-10-19  Brendan Kehoe  <brendan@zen.org>\n- \n+\n         * include/bits/stl_algo.h (partial_sort): Add missing `>' on the\n         template parameter _ValueType.\n \n@@ -1136,22 +1146,22 @@\n 2001-10-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/locale/time_members_gnu.h: Remove.\n-\t* config/locale/time_members_generic.h: Remove.\t\n+\t* config/locale/time_members_generic.h: Remove.\n \t* config/locale/time_members_gnu.cc (__timepunct::_M_put_helper): Add.\n \t* config/locale/time_members_generic.cc: Same.\n \t* include/bits/locale_facets.h: Add data members.\n \t(__timepunct::_M_put_helper): Change signature.\n \t(__timepunct::_M_date_formats): Same.\n-\t(__timepunct::_M_time_formats): Same.\t\n+\t(__timepunct::_M_time_formats): Same.\n \t(__timepunct::_M_ampm): Add.\n \t(__timepunct::_M_date_time_formats): Add.\n \t(time_get::_M_extract_via_format): Add.\n \t(time_get::_M_extract_time): Change to...\n \t(time_get::_M_extract_num): ... this, modify signature.\n \t* include/bits/locale_facets.tcc (time_get::do_get_year): Fix.\n \t(time_get::do_get_time): Fix.\n-\t(time_get::do_get_date): Fix.\t\n-\t\n+\t(time_get::do_get_date): Fix.\n+\n \t* acinclude.m4: Remove CTIME_H.\n \t* aclocal.m4: Regenerate.\n \t* include/Makefile.am: Same.\n@@ -1160,8 +1170,8 @@\n \n \t* testsuite/22_locale/time_get_members_char.cc: Fix.\n \t* testsuite/22_locale/time_get_members_wchar_t.cc: Add.\n-\t* testsuite/22_locale/time_put_members_wchar_t.cc: Add.\t\n-\t\n+\t* testsuite/22_locale/time_put_members_wchar_t.cc: Add.\n+\n 2001-10-01  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cpu/cris/bits/atomicity.h: Correct file header.\n@@ -1185,7 +1195,7 @@\n \t(__timepunct::_M_months): Add.\n \t(__timepunct::_M_months_abbreviated): Add.\n \t(__timepunct::_M_initialize_timepunct): Add.\n-\t* include/bits/locale_facets.tcc: Same. \n+\t* include/bits/locale_facets.tcc: Same.\n \t* src/locale-inst.cc: Remove instantiations for __match_parallel.\n \t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Add CTIME_CC.\n \t* aclocal.m4: Regenerate.\n@@ -1234,7 +1244,7 @@\n \t* docs/html/ext/sgiexts.html: Ditto.\n \t* docs/html/faq/index.html: Ditto.\n \t* docs/html/faq/index.txt: Ditto.\n-\t\n+\n 2001-09-25  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* testsuite/21_strings/c_strings.cc (test01, test02):  Increase\n@@ -1280,12 +1290,12 @@\n 2001-09-20  Scott Johnston <scott@accom.com>\n \t    Peter Schmid <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-\t* include/backward/alloc.h: Conditionally define malloc_alloc \n+\t* include/backward/alloc.h: Conditionally define malloc_alloc\n \t* testsuite/backward/header_deque_h.cc: New file.\n \n 2001-09-20  Sylvain Pion <Sylvain.Pion@sophia.inria.fr>\n \n-\t* libstdc++-v3/include/bits/locale_facets.tcc (money_put::do_put): \n+\t* libstdc++-v3/include/bits/locale_facets.tcc (money_put::do_put):\n \tchange variable name so that it works with -fno-for-scope.\n \n 2001-09-20  Benjamin Kosnik  <bkoz@redhat.com>\n@@ -1395,7 +1405,7 @@\n \t(money_get): Use it.\n \t* src/locale.cc (num_get::_M_extract): Use it.\n \t* src/locale-inst.cc: Add instantiation.\n-\t\n+\n 2001-09-12  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* include/bits/std_limits.h (numeric_limits<float>::radix,\n@@ -1409,7 +1419,7 @@\n \t* configure: Regenerate.\n \t* acconfig.h: Add macros.\n \t* config.h.in: Regenerate.\n-\t\n+\n 2001-09-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/locale/moneypunct_members_generic.cc\n@@ -1419,7 +1429,7 @@\n \n \t* include/Makefile.am (stamp-target): Remove link to self.\n \t* inclulde/Makefile.in: Regenerate.\n-\t\n+\n 2001-09-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tImplement std::money_put.\n@@ -1428,12 +1438,12 @@\n \tto account for _Intl.  More grody hacking to get around the\n \till-considered use of const bool as a template parameter.\n \t* config/locale/moneypunct_members_gnu.cc: And here.\n-\t* config/locale/moneypunct_members_generic.cc: And here.\t\n+\t* config/locale/moneypunct_members_generic.cc: And here.\n \t* testsuite/22_locale/moneypunct_members_char.cc: Add tests.\n \t* testsuite/22_locale/moneypunct.cc: Add tests.\n \t* testsuite/22_locale/money_put_members_wchar_t.cc: New file.\n \t* testsuite/22_locale/moneypunct_members_wchar_t.cc: New file.\n-\t\n+\n \t* src/locale.cc (money_base::_S_construct_pattern): Move into\n \tgnu-specific file.\n \t* config/locale/moneypunct_members_gnu.cc: Add here.\n@@ -1448,7 +1458,7 @@\n \t* src/locale.cc (money_base::_S_construct_pattern): Handle case\n \twhere __posn == 0.\n \t* testsuite/22_locale/money_put_members_char.cc: Add tests.\n-\t\n+\n 2001-09-05  Phil Edwards  <pme@sources.redhat.com>\n \n \t* testsuite_flags.in:  No longer need to search testsuite builddir.\n@@ -1467,10 +1477,10 @@\n \t    Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* include/backward/iterator.h: Include <bits/std_iterator.h>,\n-\tremove reverse_bidirectional_iterator. \n+\tremove reverse_bidirectional_iterator.\n \t* testsuite/backward: New directory.\n \t* testsuite/backward/header_iterator_h.cc: New file.\n-\t\n+\n 2001-09-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_c*.h: Don't use include_next.\n@@ -1496,21 +1506,21 @@\n \t* config/locale/c_locale_gnu.cc: Move facet info to separate files...\n \t* config/locale/c_locale_generic.cc: Same.\n \t* config/locale/moneypunct_members_gnu.cc: New file.\n-\t* config/locale/moneypunct_members_generic.cc: New file.\t\n+\t* config/locale/moneypunct_members_generic.cc: New file.\n \t* config/locale/numpunct_members_gnu.cc: New file.\n-\t* config/locale/numpunct_members_generic.cc: New file.\t\n+\t* config/locale/numpunct_members_generic.cc: New file.\n \t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Add moneypunct, numpunct\n \toptions.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* src/Makefile.am (sources): And here.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \tRename for consistency with rest of testsuite.\n \t* testsuite/22_locale/codecvt.cc: New file.\n \t* testsuite/22_locale/money_put.cc: New file.\n \t* testsuite/22_locale/money_put_members_char.cc: New file.\n-\t\n+\n 2001-08-27  Phil Edwards  <pme@sources.redhat.com>\n \n \tPR libstdc++/4143\n@@ -1555,7 +1565,7 @@\n \t* include/bits/locale_facets.h: Same.\n \t* testsuite/22_locale/moneypunct.cc: New file.\n \t* testsuite/22_locale/moneypunct_byname.cc: New file.\n-\t* testsuite/22_locale/moneypunct_char_members.cc: New file.\t\n+\t* testsuite/22_locale/moneypunct_char_members.cc: New file.\n \n 2001-08-23  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -1582,10 +1592,10 @@\n 2001-08-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/operators.cc: Add test.\n-\t\n+\n 2001-08-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tImplement std::collate.\t\n+\tImplement std::collate.\n \t* config/locale/collate_specializations_gnu.cc: Add here, implement in\n \tMT-safe way.\n \t* config/locale/collate_specializations_generic.cc: Add here, but\n@@ -1596,18 +1606,18 @@\n \t(collate::_M_transform_helper): New.\n \t* src/locale.cc: Remove unnecessary specializations.\n \t* src/string-inst.cc: Tweak instantiation of ctors.\n-\t\n+\n \t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Do configury for collate.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n \t* src/Makefile.am (sources): Add collate.cc.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n \t* testsuite/22_locale/collate_byname.cc: New.\n \t* testsuite/22_locale/collate.cc: New file.\n \t* testsuite/22_locale/collate_char_members.cc: New file.\n-\t* testsuite/22_locale/collate_wchar_t_members.cc: New file.\t\n-\t\n+\t* testsuite/22_locale/collate_wchar_t_members.cc: New file.\n+\n 2001-08-16  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n \t* configure.target: Set LIMITSH for powerpc-*-*.\n@@ -1640,13 +1650,13 @@\n \n \t* testsuite/18_support/numeric_limits.cc: Add more tests.\n \t* include/bits/std_limits.h (numeric_limits<char>::max): Fix\n-\ttypo. \n+\ttypo.\n \n 2001-08-14  Ulrich Weigand  <uweigand@de.ibm.com>\n- \n+\n \t* configure.target (cpu_include_dir): Set to `config/cpu/s390'\n \tfor s390 and s390x.\n- \n+\n \t* config/cpu/s390/bits/atomicity.h: New.\n \n 2001-08-14  Gabriel Dos Reis  <gdr@codesourcery.com>\n@@ -1658,7 +1668,7 @@\n \t* include/Makefile.am: Consolidate target rules. Don't clean stamp\n \tfiles. Tweak target build directory stamp.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2001-08-14  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* libstdc++-v3/libmath/stubs.c: Fix PR/3988, replace\n@@ -1667,9 +1677,9 @@\n 2001-08-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.in (libtool_VERSION): Add.\n-\t(VERSION): Change to \n+\t(VERSION): Change to\n \t(release_VERSION): This.\n-\t* configure: Regenerate.\t\n+\t* configure: Regenerate.\n \t* src/Makefile.am (libstdc___la_LDFLAGS): Use -version-info with\n \tlibtool_VERSION.\n \t* src/Makefile.in: Regenerate.\n@@ -1682,18 +1692,18 @@\n \t(MSGFMT): Add.\n \t* po/string_literals.cc: Add.\n \t* po/POTFILES.in: Fix path.\n-\t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Don't call AM_GNU_GETTEXT. \n+\t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Don't call AM_GNU_GETTEXT.\n \t* aclocal.m4: Regenerate.\n \t* configure.in: Remove AC_OUTPUT of intl/Makefile.\n-\t\n+\n \t* include/backward/backward_warning.h: Clarify message.\n \n \t* testsuite_flags.in (--cxxflags): Use same debug flags for\n \tlibrary and testsuite.\n \n \t* include/Makefile.am (c_compatibility): Remove.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2001-08-13  Mark Mitchell  <mark@codesourcery.com>\n \n \t* configure.in (LIMITS_INC_SRCDIR): New variable.\n@@ -1721,8 +1731,8 @@\n \t__CHAR_UNSIGNED__.\n \n \t* config/os/gnu-linux/bits/os_defines.h(__glibcpp_char_is_signed):\n-\tLikewise. \n-\t* config/os/aix/bits/os_defines.h(__glibcpp_plain_char_is_signed): \n+\tLikewise.\n+\t* config/os/aix/bits/os_defines.h(__glibcpp_plain_char_is_signed):\n \tRemove.\n \n 2001-08-10  Loren J. Rittle  <ljrittle@acm.org>\n@@ -1738,7 +1748,7 @@\n 2001-08-10  Gunter Winkler  <gunter.winkler@mathematik.tu-chemnitz.de>\n \n \t* include/bits/std_complex.h (complex<long double>::operator*=,\n- \tcomplex<long double>::operator/=): Fix thinko.\n+\tcomplex<long double>::operator/=): Fix thinko.\n \n 2001-08-10  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n@@ -1761,7 +1771,7 @@\n \t* po/Makefile.am (check-no): Add.\n \t(check-yes): Same.\n \t* po/Makefile.in: Regenerate.\n-\t\n+\n 2001-08-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acconfig.h (_GLIBCPP_MEM_LIMITS): Define.\n@@ -1775,7 +1785,7 @@\n \t* configure: Regenerate.\n \t* testsuite_hooks.h.in: Move to...\n \t* testsuite_hooks.h: Here, include c++config.h. Use it.\n-\t\n+\n \t* Makefile.am (SUBDIRS): Move testsuite to last directory.\n \t* Makefile.in: Regenerate.\n \t* po/Makefile.am (stamp-po): Add.\n@@ -1794,7 +1804,7 @@\n \t* src/Makefile.am (libstdc___la_LDFLAGS): Use -release instead of\n \t-version-info, use substituted VERSION info.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2001-08-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tImplement std::messages.\n@@ -1807,32 +1817,32 @@\n \t* config/c_locale_ieee_1003.1-200x.cc: Same.\n \t* config/c_locale_ieee_1003.1-200x_.h: Same.\n \t* config/codecvt_specializations_generic.h: Same.\n-\t* config/codecvt_specializations_ieee_1003.1-200x.h: Same.\t\n+\t* config/codecvt_specializations_ieee_1003.1-200x.h: Same.\n \t* config/messages_members_gnu.h: Same.\n \t* config/messaages_members_gnu.cc: Same.\n \t* config/messages_members_generic.h: Same.\n \t* config/messaages_members_generic.cc: Same.\n \t* config/messages_members_ieee_1003.1-200x.h: Same.\n \t* config/messaages_members_ieee_1003.1-200x.cc: Same.\n \t* config/io: New directory.\n-\t* config/basic_file_libio.h: Move into io subdirectory.\t\n+\t* config/basic_file_libio.h: Move into io subdirectory.\n \t* config/basic_file_libio.cc: Same.\n \t* config/c_io_libio.h: Same.\n-\t* config/c_io_libio_codecvt.c: Same.\t\n+\t* config/c_io_libio_codecvt.c: Same.\n \t* config/basic_file_stdio.h: Same.\n \t* config/basic_file_stdio.cc: Same.\n \t* config/c_io_stdio.h: Same.\n-\t\n+\n \t* po: New directory.\n \t* po/POTFILES.in: New file.\n \t* po/Makefile.am: New file.\n-\t* po/Makefile.in: New file.\t\n+\t* po/Makefile.in: New file.\n \t* po/libstdc++.pot: Generic translation file.\n \t* po/fr.po: Preliminary French translation.\n \t* po/de.po: Preliminary German translation.\n \t* intl: New directory.\n \t* intl/Makefile.am: New file.\n-\t* intl/Makefile.in: New file.\t\n+\t* intl/Makefile.in: New file.\n \t* intl/string_literals.cc: New file.\n \t* acinclude.m4 (GLIBCPP_CONFIGURE): Bump VERSION to 3.1.0. Add\n \trequisite setup for gettext. Re-arrange.\n@@ -1846,10 +1856,10 @@\n \t* config.h.in: Regenerate.\n \n \t* acinclude.m4 (AC_REPLACE_STRINGFUNCS): Remove.\n-\t\n+\n \t* include/Makefile.am (install-data-local): Don't install Makefile.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n \t* include/bits/locale_facet.h (locale::facet::_S_clone_c_locale):\n \tAdd member.\n \t* config/locale/c_locale_gnu.cc (_S_clone_c_locale): Add definition.\n@@ -1859,9 +1869,9 @@\n \t* include/bits/codecvt.h: Excise non-standard, non-required\n \tbits. This includes __enc_traits, and partial specializations of\n \tcodecvt for __enc_traits.\n-\t* src/codecvt.cc (__enc_traits::_S_max_size): Guard \n-\t* config/codecvt_partials_ieee_1003.1-200x.h: New file.\t\n-\t* config/codecvt_partials_generic.h: New file.\t\t\n+\t* src/codecvt.cc (__enc_traits::_S_max_size): Guard\n+\t* config/codecvt_partials_ieee_1003.1-200x.h: New file.\n+\t* config/codecvt_partials_generic.h: New file.\n \t* include/Makefile.am (allstamps): Add stamp-codecvt_model.\n \t(stamp-codecvt_model): Add.\n \t* include/Makefile.in: Regenerate.\n@@ -1871,7 +1881,7 @@\n \t* testsuite/22_locale/codecvt_unicode_wchar_t.cc: Use macro guard.\n \t* testsuite/22_locale/codecvt_unicode_char.cc: Same.\n \t* testsuite/22_locale/ctor_copy_dtor.cc: And here.\n-\t\n+\n \t* include/bits/localefwd.h (class locale::facet): Add __enc_traits\n \tas a friend for _S_*_c_locale functions.\n \t* include/bits/codecvt.h (__enc_traits::__enc_traits): Add locale\n@@ -1882,14 +1892,14 @@\n \t* src/locale.cc (messages_byname<char>): Remove specialization.\n \t(messages_byname<wchar_t>): Same.\n \t* config/locale/c_locale_ieee_1003.1-200x.cc: New file.\n-\t* config/locale/c_locale_ieee_1003.1-200x.h: New file.\t\n+\t* config/locale/c_locale_ieee_1003.1-200x.h: New file.\n \t* config/locale/messages_members_ieee_1003.1-200x.cc: New file.\n-\t* config/locale/messages_members_ieee_1003.1-200x.h: New file.\t\n+\t* config/locale/messages_members_ieee_1003.1-200x.h: New file.\n \t* config/locale/messages_members_gnu.cc: New file.\n-\t* config/locale/messages_members_gnu.h: New file.\t\n+\t* config/locale/messages_members_gnu.h: New file.\n \t* config/locale/messages_members_generic.cc: New file.\n-\t* config/locale/messages_members_generic.h: New file.\t\n-\t\n+\t* config/locale/messages_members_generic.h: New file.\n+\n \t* docs/html/configopts.html: Add documentation for new locale\n \tmodel, ieee_1003.1. Adjust other flags for current defaults.\n \t* docs/html/22_locale/locale.html: Update.\n@@ -1907,7 +1917,7 @@\n \n \t* testsuite_flags.in (--cxxflags): Add LOCALEDIR.\n \t* testsuite/lib/libstdc++-v3-dg.exp: Remove broken LD_LIBRARY_PATH\n-\tbits for Irix. \n+\tbits for Irix.\n \t* acinclude (GLIBCPP_ENABLE_CLOCALE): Set glibcpp_localedir to the\n \tbuild directories message catalog base directory, and export.\n \tEventually this should probably be made to deal with build and\n@@ -2049,7 +2059,7 @@\n \t* configure.target: Remove mips from cpu table.\n \t* config/cpu/mips/bits/atomicity.h: Remove generic\n \tversions. Comment sgidefs include.\n-\t\n+\n 2001-07-25  H.J. Lu <hjl@gnu.org>\n \n \t* configure.target (cpu_include_dir): Set to `config/cpu/mips'\n@@ -2083,7 +2093,7 @@\n \n \t* include/bits/stl_algo.h : Fix typos.\n \t* testsuite/25_algorithms/unique.cc: New file.\n-\t\n+\n 2001-07-19  Phil Edwards  <pme@sources.redhat.com>\n             Mark Mitchell <mark@codesourcery.com>\n \n@@ -2322,7 +2332,7 @@\n \n 2001-07-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* include/bits/localefwd.h: Format.\t\n+\t* include/bits/localefwd.h: Format.\n \t* include/bits/locale_facts.tcc (locale::combine): Adjust.\n \t* src/locale.cc (locale::locale::(_Impl)): Don't call\n \t_M_add_reference.\n@@ -2339,7 +2349,7 @@\n \t* configure: Regenerate.\n \n 2001-07-02  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* src/locale.cc (locale::locale(const char*)): Make sure global\n \tlocales are initialized.\n \t* include/bits/locale_facets.tcc (locale::combine): Refcout should\n@@ -2357,7 +2367,7 @@\n \t* acinclude.m4 (GLIBCPP_ENABLE_THREADS): Portability enhancement.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2001-07-02  Loren J. Rittle  <ljrittle@acm.org>\n \n \tlibstdc++/3243\n@@ -2370,7 +2380,7 @@\n \n \tlibstdc++/2211\n \t* src/ios.cc (ios_base::Init::_S_ios_create): Rename __bufsize to\n-\t__out_bufsize.  Add __in_bufsize, document it and use it.  \n+\t__out_bufsize.  Add __in_bufsize, document it and use it.\n \n 2001-07-01  Stephen M. Webb <stephen@bregmasoft.com>\n \n@@ -2490,21 +2500,21 @@\n \t* include/bits/streambuf.tcc (__copy_streambufs): Don't set eofbit.\n \t* testsuite/27_io/ostream_inserter_other.cc (test04): Add test.\n \t* testsuite/27_io/istream_extractor_other.cc: Fix.\n-\t\n+\n 2001-06-26  Zoltan Hidvegi  <hzoli@austin.ibm.com>\n \n \t* acinclude.m4 (glibcpp_toolexeclibdir): Make multilib safe.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2001-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stream_iterator.h (istream_iterator): Add copy ctor.\n \t(ostream_iterator): Same.\n \t* include/bits/stl_iterator.h (front_insert_iterator::operator=):\n \tChange argument to const_reference.\n \t(back_insert_iterator): Same.\n-\t\n+\n 2001-06-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/sbuf_iter.h: Change to..\n@@ -2517,8 +2527,8 @@\n \t* include/bits/std_string.h: Adjust includes.\n \t* include/bits/basic_ios.h: Same.\n \t* include/bits/locale_facets.tcc: Same.\n-\t* include/bits/std_iosfwd.h: Same.\t\n-\t\n+\t* include/bits/std_iosfwd.h: Same.\n+\n \t* include/bits/std_iterator.h: Add istream, ostream includes.\n \t* include/bits/stl_iterator.h: Tweak.\n \t* testsuite/24_iterators/ostream_iterator.cc: Add test.\n@@ -2556,11 +2566,11 @@\n \t(ostream_iterator): Same.\n \t* testsuite/24_iterators/istream_iterator.cc: New file.\n \t* testsuite/24_iterators/ostream_iterator.cc: New file.\n-\t\n+\n \t* include/bits/sbuf_iter.h: Remove self typedef.\n \t* testsuite/24_iterators/ostreambuf_iterator.cc: Add test.\n \t* testsuite/24_iterators/istreambuf_iterator.cc: Add test.\n-\t\n+\n \t* include/bits/stl_iterator.h (reverse_iterator): Remove\n \textraneous typedefs. Add typename.\n \t(__normal_iterator): Remove typedefs referring to self. Add typename.\n@@ -2599,7 +2609,7 @@\n \n \t* include/bits/stl_iterator.h (reverse_iterator): Inherit from\n \titerator.\n-\t(back_insert_iterator): Same.\t\n+\t(back_insert_iterator): Same.\n \t(front_insert_iterator): Same.\n \t(insert_iterator): Same.\n \n@@ -2731,14 +2741,14 @@\n \n \t* include/bits/stl_raw_storage_iter.h: Format. Correct derivation.\n \t* testsuite/20_util/raw_storage_iterator.cc: Same.\n-\t\n+\n \t* include/bits/stl_alloc.h (_S_chunk_alloc): Change malloc to\n \toperator new.\n \t(__mem_interface): New typedef for switching between malloc and new.\n-\t* testsuite/20_util/allocator_members.cc: New file.\t\n+\t* testsuite/20_util/allocator_members.cc: New file.\n \n \t* testsuite/20_util/comparisons.cc: New file.\n-\t* testsuite/20_util/pairs.cc: New file.\t\n+\t* testsuite/20_util/pairs.cc: New file.\n \n 2001-06-15  Phil Edwards  <pme@sources.redhat.com>\n \n@@ -2791,7 +2801,7 @@\n \treturn original, non-modified version.\n \t(fpos::operator+): Same.\n \t* testsuite/27_io/fpos.cc: Add test.\n-\t\n+\n 2001-06-12  Loren J. Rittle  <ljrittle@acm.org>\n \n \tlibstdc++/2071\n@@ -2833,7 +2843,7 @@\n \tbootstraps or cross compiles with an older compile still work.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2001-06-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/3142\n@@ -2860,7 +2870,7 @@\n \t* testsuite/27_io/istream_seeks.cc (test03): Add regression.\n \t(test02): Add regression.\n \t* testsuite/27_io/istream_seeks-3.tst: New file.\n-\t\n+\n 2001-06-11  Phil Edwards  <pme@sources.redhat.com>\n \n \t* README:  Update to reflect reality.\n@@ -2876,13 +2886,13 @@\n \tper DR 129.\n \t* include/bits/istream.tcc (istream::seekg): Same.\n \t* testsuite/27_io/istream_seeks.cc: Fix.\n-\t\n+\n \tlibstdc++/3113\n \t* include/bits/stl_function.h (binder2nd): Fix as per DR 109.\n \t(binder1st): Same.\n \t* include/bits/std_queue.h: Add c++config.h.\n \t* testsuite/20_util/binders.cc: New test.\n-\t\n+\n 2001-06-11  Matthias Klose  <doko@debian.org>\n             Phil Edwards  <pme@sources.redhat.com>\n \n@@ -2898,14 +2908,14 @@\n \t* aclocal.m4: Regenerate.\n \t* configure.in: Regenerate.\n \t* config.h.in: Regenerate.\n-\t\n+\n 2001-06-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_C99): Add stdio.h checking.\n \tAdd checking for strtof, _Exit in stdlib.h\n \t* aclocal.m4: Regenerate.\n \t* configure.in: Regenerate.\n-\t* include/c_std/bits/std_cstdio.h: Alphabetize lists. \n+\t* include/c_std/bits/std_cstdio.h: Alphabetize lists.\n \t(snprintf): Put C99 functions into __gnu_cxx namespace.\n \t(vfscanf): Same.\n \t(vscanf): Same.\n@@ -2921,12 +2931,12 @@\n \tC99 guard.\n \t* include/c_std/bits/cmath.tcc: Formatting tweak.\n \t* include/c_std/bits/std_cmath.h: Same.\n-\t\n+\n 2001-06-10  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_cstdio.h: Include cstddef for size_t.\n \n-2001-06-09  Alexandre Oliva  <aoliva@redhat.com> \n+2001-06-09  Alexandre Oliva  <aoliva@redhat.com>\n \t    Stephen L Moshier  <moshier@mediaone.net>\n \n \t* acinclude.m4 (AC_EXEEXT): Work around in case it expands to\n@@ -2940,7 +2950,7 @@\n \t* include/c_std/bits/std_ctime.h: Same.\n \t* include/c_std/bits/std_cstring.h: Same.\n \t* include/c_std/bits/std_cstdlib.h: Same.\n-\t\n+\n \t* include/c_std/bits/std_cstdio.h: Remove vsnprintf, snprintf.\n \t* include/c_std/bits/std_cctype.h: Remove isblank.\n \n@@ -2962,7 +2972,7 @@\n \t* libsupc++/eh_terminate.cc: Qualify abort.\n \t(__terminate): And here.\n \t* libsupc++/eh_catch.cc (__cxa_end_catch): Qualify abort.\n-\t\n+\n 2001-06-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/c_std/bits/std_cstdlib.h: Remove _Exit, strtof injections.\n@@ -3052,16 +3062,16 @@\n \t(buf_cout, buf_cin, buf_cerr): Like so.\n \t(buf_wcout, buf_wcin, buf_wcerr): And so.\n \t* testsuite/27_io/ios_init.cc: Add.\n-\t\n+\n 2001-06-04  Brendan Kehoe  <brendan@zen.org>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \tlibstdc++/3017\n \t* include/bits/locale_facets.h (ctype<_CharT>): Add definitions\n \tfor generic ctype virtuals.\n \t* src/locale.cc: Minor tweaks, naming consistency.\n \t* testsuite/22_locale/ctype.cc: Add test.\n-\t\n+\n 2001-06-04  Kenny Simpson <theonetruekenny@yahoo.com>\n             Phil Edwards  <pme@sources.redhat.com>\n \n@@ -3207,18 +3217,18 @@\n \n \t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Use\n \tget_multilibs to find gcc.\n-\t\n+\n 2001-05-30  Phil Edwards  <pme@sources.redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_C99):  Reorder output messages.\n \t* aclocal.m4:  Regenerate.\n \t* configure:  Regenerate.\n \n 2001-05-29  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n- \n-\t* include/c_std/bits/std_cstdlib.h:: Move C99 thingies to __gnu_cxx::. \n+\n+\t* include/c_std/bits/std_cstdlib.h:: Move C99 thingies to __gnu_cxx::.\n \t* include/c_std/bits/std_cwchar.h (__gnu_cxx): Likewise.\n- \n+\n 2001-05-27  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n \n \t* include/c_std/bits/std_cmath.h: Move C99 functions in __gnu_cxx::.\n@@ -3233,7 +3243,7 @@\n 2001-05-26  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* include/c_std/bits/std_cmath.h (sqrt): #undef.\n-\t\n+\n 2001-05-23  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* mknumeric_limits: Stop if gen-num-limits dies.\n@@ -3244,7 +3254,7 @@\n \t* acinclude.m4 (GLIBCPP_ENABLE_C99): Use AC_TRY_COMPILE.\n \t* aclocal.m4: Regenerate.\n \t* configure: Same.\n-\t\n+\n 2001-05-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n             Phil Edwards  <pme@sources.redhat.com>\n             Alexandre Oliva  <aoliva@redhat.com>\n@@ -3256,15 +3266,15 @@\n \n \t* include/c_std/bits/std_cmath.h: Tweak.  #define away abs, cos,\n \tfabs, sin, sqrt.  They are now implemented in terms of __builtin_\n-\tvariants. \n+\tvariants.\n \n 2001-05-24  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/2830\n \t* testsuite/21_strings/inserters_extractors.cc (test09): New test.\n \t* include/bits/ostream.tcc: Format to match istream.tcc.\n \t(operator<<(basic_ostream __out, const basic_string __s)): Fix.\n-\t\n+\n 2001-05-24  Phil Edwards  <pme@sources.redhat.com>\n \n \t* libsupc++/eh_alloc.cc (__cxa_allocate_exception):  Qualify\n@@ -3281,7 +3291,7 @@\n \tnot plain `strcmp'.\n \t* testsuite/21_strings/c_strings.cc: Use `std::strcpy' instead of\n \tplain `strcpy'.\n-\t\n+\n 2001-05-24  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/2832\n@@ -3292,8 +3302,8 @@\n \t(fstream): Same.\n \t* include/bits/std_sstream.h: Same, but for stringstream classes.\n \t* testsuite/27_io/ostringstream_members.cc: New.\n-\t* testsuite/27_io/stringstream_members.cc: New.\t\n-\t* testsuite/27_io/fstream_members.cc: New.\t\t\n+\t* testsuite/27_io/stringstream_members.cc: New.\n+\t* testsuite/27_io/fstream_members.cc: New.\n \t* testsuite/27_io/ifstream_members.cc: Add test.\n \t* testsuite/27_io/istringstream_members.cc: Add test.\n \t* testsuite/27_io/ofstream_members.cc: Add test.\n@@ -3312,7 +3322,7 @@\n \n \tlibstdc++/2841\n \t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Set\n-\tld_library_path.  \n+\tld_library_path.\n \t(libstdc++-v3_set_ld_library_path): New, copied from g++.exp.\n \t(libstdc++-v3-finish): Remove.\n \t(libstdc++-v3_exit): Remove.\n@@ -3330,7 +3340,7 @@\n \t* include/bits/fstream.tcc (filebuf::_M_allocate_buffers): Only\n \ttry allocations if allocated size is greater than zero.\n \t(filebuf::_M_filebuf_init): Change to\n-\t(filebuf::_M_allocate_file): Which is what it does now. \n+\t(filebuf::_M_allocate_file): Which is what it does now.\n \t(filebuf::_M_allocate_bufers): Change to\n \t(filebuf::_M_allocate_internal_buffer): This, and create\n \t(filebuf::_M_allocate_pback_buffer): New.\n@@ -3347,7 +3357,7 @@\n \t(strchr): Same, but to __glibcpp_strchr.\n \t(strpbrk): Same.\n \t(strrchr): Same.\n-\t(strstr): Same.  \n+\t(strstr): Same.\n \t* include/c_std/bits/std_cwchar.h (wcschr): Same.\n \t(wcsbrk): Same.\n \t(wcsrchr): Same.\n@@ -3393,7 +3403,7 @@\n 2001-05-18  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* include/bits/std_valarray.h (valarray<>::operator[] const):\n-\tReturn a const reference. \n+\tReturn a const reference.\n \t* testsuite/26_numerics/valarray_const_bracket.cc: New test.\n \n 2001-05-18  Alexandre Oliva  <aoliva@redhat.com>\n@@ -3430,19 +3440,19 @@\n \t* porting.texi: Correct documentation about handling\n \t_LARRGEFILE_SOURCE and its ilk.\n \t* config/os/solaris/solaris2.5/bits/os_defines.h: Remove\n-\tdefinitions of _XOPEN_SOURCE, _LARGEFILE64_SOURCE, and \n+\tdefinitions of _XOPEN_SOURCE, _LARGEFILE64_SOURCE, and\n \t__EXTENSIONS__.\n \t* config/os/solaris/solaris2.6/bits/os_defines.h: Likewise.\n \t* config/os/solaris/solaris2.7/bits/os_defines.h: Likewise.\n \n 2001-05-15  Zack Weinberg  <zackw@stanford.edu>\n-\t\n+\n \t* testsuite/21_strings/inserters_extractors.cc,\n \ttestsuite/27_io/istream_unformatted.cc,\n \ttestsuite/27_io/stringstream.cc:\n \tReplace multi-line string constants with C89-style\n \tconcatenated string constants.\n-\t\n+\n 2001-05-14  Richard Henderson  <rth@redhat.com>\n \n \t* mknumeric_limits: Build with -fno-exceptions.\n@@ -3459,16 +3469,16 @@\n \tRemove glibcpp_expect, glibcpp_runtestflags.\n \t* Makefile.am (RUNTESTFLAGS): Pass this down to subdirs.\n \t* mkcheck.in: Port to new interface.\n-\t\n+\n \t* aclocal.m4: Regerate.\n \t* configure: Regnerate.\n \t* Makefile.in: Regnerate.\n \t* */Makefile.in: Regenerate.\n-\t\n+\n \t* tests_flags.in: Remove.\n \t* testsuite/lib/libstdc++.exp: Remove.\n \t* testsuite/libstdc++.tests/tests.exp: Remove.\n-\t\n+\n 2001-05-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure.target: Remove detection of AIX pthread multilib, now\n@@ -3484,13 +3494,13 @@\n \t* testsuite_flags.in: New, simplified interface.\n \t* testsuite/lib/libstdc++-v3-dg.exp: New test harness.\n \t* testsuite/libstdc++-v3.dg: Add.\n-\t* testsuite/libstdc++-v3.dg/dg.exp: Add.\t\n+\t* testsuite/libstdc++-v3.dg/dg.exp: Add.\n \n 2001-05-11   Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/*/*.cc: Remove spaces, make sure testcases return zero.\n \t* testsuite/config/default.exp: Update bugs email address.\n-\t\n+\n 2001-05-11  Richard Henderson  <rth@redhat.com>\n \n \t* libsupc++/eh_personality.cc: Include unwind-pe.h.  Remove\n@@ -3510,7 +3520,7 @@\n \tChange LDFLAGS to LIBS.\n \tConsistently name procedures libstdc++-XXX.\n \t* testsuite/libstdc++.tests/tests.exp: Use new procedure names.\n-\t\n+\n 2001-05-08  Benjamin Kosnik  <bkoz@fillmore.constant.com>\n \n \t* include/c_std/bits/std_cstring.h (memchr): Correct definitions.\n@@ -3524,7 +3534,7 @@\n \t(wcsstr): Same.\n \t(wmemchr): Same.\n \t* testsuite/21_strings/c_strings.cc: Add tests.\n-\t\n+\n 2001-05-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/2523\n@@ -3543,7 +3553,7 @@\n \t* testsuite/27_io/narrow_stream_objects.cc: Add tests.\n \t* testsuite/27_io/filebuf.cc: Tweaks.\n \t* testsuite/27_io/filebuf_members.cc: Tweaks.\n-\t\n+\n 2001-05-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/os/solaris/solaris2.7/bits/os_defines.h\n@@ -3566,7 +3576,7 @@\n \t* include/bits/std_sstream.h (stringbuf): Leak\n \tcopied string.\n \t* testsuite/24_iterators/ostreambuf_iterator.cc: Correct.\n-\t\n+\n 2001-05-01  Tom Browder  <tbrowder@home.com>\n \n \t* docs/html/ext/howto.html:  Fix typo.\n@@ -3585,7 +3595,7 @@\n \n 2001-04-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tlibstdc++/2627 \n+\tlibstdc++/2627\n \t* testsuite/24_iterators/ostreambuf_iterator.cc: New file.\n \t* include/bits/sbuf_iter.h (ostreambuf_iterator): Remove bogus\n \tspecializations.\n@@ -3626,14 +3636,14 @@\n \t* include/c_std/bits/std_cwchar.h (std): Same.\n \t* acconfig.h (std): Remove c99 injection into std.\n \t* config.h.in: Regenerate.\n-\t\n+\n \t* testsuite/README: Fix typo.\n \n \t* include/bits/codecvt.h: Remove warnings.\n-\t\n+\n 2001-04-24  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n-\t* include/ext/slist: Include required header files. \n+\t* include/ext/slist: Include required header files.\n \n 2001-04-23  Loren J. Rittle  <ljrittle@acm.org>\n \n@@ -3657,13 +3667,13 @@\n \tsupport is enabled correctly before long long is activated.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n \t* include/backward/backward_warning.h: Format correctly.\n \n \t* testsuite/26_numerics/c99_classification_macros_c.cc: Add.\n \t* testsuite/26_numerics/c99_classification_macros_c++.cc: Add.\n \t* testsuite/26_numerics/c99_macros.cc: Remove.\n-\t\n+\n 2001-04-20  Phil Edwards  <pme@sources.redhat.com>\n \n \t* include/bits/stl_bvector.h:  Replace __ITERATOR_CATEGORY with\n@@ -3697,7 +3707,7 @@\n \t* acinclude.m4 (GLIBCPP_CHECK_STDLIB_SUPPORT): Add check for drand48.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n-\t\n+\n 2001-04-19  Phil Edwards  <pme@sources.redhat.com>\n \n \t* Makefile.am (doxygen):  Assume script is missing execute perms.\n@@ -3718,9 +3728,9 @@\n \t(__GLIBCPP__): Bump from value of last release.\n \t* include/bits/concept_check.h: Default to off, edit comments.\n \t* src/stl-inst.cc: Use _GLIBCPP_CONCEPT_CHECKS.\n-\t* src/Makefile.am (AM_CXXFLAGS): Remove _GLIBCPP_NO_CONCEPT_CHECKS. \n+\t* src/Makefile.am (AM_CXXFLAGS): Remove _GLIBCPP_NO_CONCEPT_CHECKS.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2001-04-14  Martin Reinecke <martin@MPA-Garching.MPG.DE>\n \n \t* include/bits/boost_concept_check.h(_Mutable_ContainerConcept):\n@@ -3757,7 +3767,7 @@\n 2001-04-13  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* testsuite/23_containers/set_operators.cc: Just try to compile.\n-\tMark as XFAIL.   \n+\tMark as XFAIL.\n \t* testsuite/23_containers/map_operators.cc: Same.\n \n 2001-04-12  Jason Merrill  <jason_merrill@redhat.com>\n@@ -3776,7 +3786,7 @@\n \t* testsuite/README: Add DejaGnu specific documentation.\n \n 2001-04-11  Benjamin Kosnik  <bkoz@redhat.com>\n-\t\n+\n \t* acinclude.m4: AC_CHECK_TOOL for expect.\n \t* aclocal.m4: Regenerate.\n \t* configure: Regenerate.\n@@ -3787,18 +3797,18 @@\n \t* tests_flags.in (CROSS_LIB_PATH): Remove.\n \t(xcompiling): Remove.\n \t(CXX): Use substituted CXX.\n-\t\n+\n 2001-04-11  Richard Henderson  <rth@redhat.com>\n \n \t* testsuite/lib/libstdc++.exp: Specify path for output_file.\n \n 2001-04-08  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* include/bits/std_valarray.h(valarray<>::operator[]): Make\n-\tinline. \n+\tinline.\n \n 2001-04-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n-  \n+\n \t* testsuite/25_algorithms/equal.cc: New test.\n \n 2001-04-06  Joe Buck  <jbuck@welsh-buck.org>\n@@ -3812,7 +3822,7 @@\n \n 2001-04-06  Benjamin Kosnik  <bkoz@redhat.com>\n             Alexandre Oliva  <aoliva@redhat.com>\n-\t\n+\n \t* tests_flags.in (CROSS_LIB_PATH): Add as -B flag.\n \n 2001-04-06  Gabriel Dos Reis  <gdr@codesourcery.com>\n@@ -3834,7 +3844,7 @@\n 2001-04-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tWarn when using backward headers.\n-\t* include/backward/algo.h: Include warning file.\t\n+\t* include/backward/algo.h: Include warning file.\n \t* include/backward/vector.h: Same.\n \t* include/backward/tree.h: Same.\n \t* include/backward/tempbuf.h: Same.\n@@ -3844,7 +3854,7 @@\n \t* include/backward/stack.h: Same.\n \t* include/backward/slist.h: Same.\n \t* include/backward/set.h: Same.\n-\t* include/backward/rope.h: \n+\t* include/backward/rope.h:\n \t* include/backward/queue.h: Same.\n \t* include/backward/pair.h: Same.\n \t* include/backward/ostream.h: Same.\n@@ -3855,19 +3865,19 @@\n \t* include/backward/list.h: Same.\n \t* include/backward/iterator.h: Same.\n \t* include/backward/istream.h: Same.\n-\t* include/backward/iostream.h: \n-\t* include/backward/iomanip.h: \n+\t* include/backward/iostream.h:\n+\t* include/backward/iomanip.h:\n \t* include/backward/heap.h: Same.\n-\t* include/backward/hashtable.h: \n-\t* include/backward/hash_set.h: \n-\t* include/backward/hash_map.h: \n-\t* include/backward/function.h: \n-\t* include/backward/fstream.h: \n-\t* include/backward/deque.h: \n+\t* include/backward/hashtable.h:\n+\t* include/backward/hash_set.h:\n+\t* include/backward/hash_map.h:\n+\t* include/backward/function.h:\n+\t* include/backward/fstream.h:\n+\t* include/backward/deque.h:\n \t* include/backward/defalloc.h: Same.\n \t* include/backward/complex.h: Same.\n-\t* include/backward/bvector.h: \n-\t* include/backward/alloc.h: \n+\t* include/backward/bvector.h:\n+\t* include/backward/alloc.h:\n \t* include/backward/algobase.h: Same.\n \n \t* include/backward/backward_warning.h: New file.\n@@ -3880,7 +3890,7 @@\n \tcreated.\n \t(myinstallheaders): Install backward headers in backward directory.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2001-04-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPrepare for libstdc++-2.92.\n@@ -3908,7 +3918,7 @@\n \t* include/bits/ios_base.h(ios_base::Init): Remove _M_cout, _M_cin,\n \t_M_cerr, _M_wcout, _M_wcin, _M_wcerr.\n \t(ios_base::Init::_S_ios_create): New.\n-\t(ios_base::Init::_S_ios_destroy): New.\t\n+\t(ios_base::Init::_S_ios_destroy): New.\n \t* include/bits/std_fstream.h: Change ctor args.\n \t* src/ios.cc (ios_base::Init::Init): Use _S_ios_create.\n \t(ios_base::Init::~Init): Use _S_ios_destroy.\n@@ -3920,7 +3930,7 @@\n \n \t* include/backward/fstream.h:  Expose streampos to global\n \tnamespace.\n-\t\n+\n 2001-04-03  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* include/bits/stl_iterator_base_types.h: Fix typo"}, {"sha": "aa0dd99cfa9e25b4efc2a5051b68064f215f067b", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -100,8 +100,8 @@\n // Define if the compiler/host combination has __builtin_sinl\n #undef HAVE___BUILTIN_SINL\n \n-// Define if the compiler/host combination has __builtin_fsqrt\n-#undef HAVE___BUILTIN_FSQRT\n+// Define if the compiler/host combination has __builtin_sqrt\n+#undef HAVE___BUILTIN_SQRT\n \n // Define if the compiler/host combination has __builtin_sqrtf\n #undef HAVE___BUILTIN_SQRTF"}, {"sha": "17126070665723332a3336e234dcca0d8b4b81ab", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -587,7 +587,7 @@ dnl check for __builtin_fabl\n dnl check for __builtin_labs\n dnl check for __builtin_sqrtf\n dnl check for __builtin_sqrtl\n-dnl check for __builtin_fsqrt\n+dnl check for __builtin_sqrt\n dnl check for __builtin_sinf\n dnl check for __builtin_sin\n dnl check for __builtin_sinl\n@@ -606,7 +606,7 @@ AC_DEFUN(GLIBCPP_CHECK_BUILTIN_MATH_SUPPORT, [\n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_labs)\n \n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrtf)\n-  GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_fsqrt)\n+  GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrt)\n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrtl)\n \n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sinf)\n@@ -636,7 +636,7 @@ AC_DEFUN(GLIBCPP_CHECK_BUILTIN_MATH_SUPPORT, [\n     AC_DEFINE(HAVE___BUILTIN_SIN)\n     AC_DEFINE(HAVE___BUILTIN_SINF)\n     AC_DEFINE(HAVE___BUILTIN_SINL)\n-    AC_DEFINE(HAVE___BUILTIN_FSQRT)\n+    AC_DEFINE(HAVE___BUILTIN_SQRT)\n     AC_DEFINE(HAVE___BUILTIN_SQRTF)\n     AC_DEFINE(HAVE___BUILTIN_SQRTL)\n   fi"}, {"sha": "edb8d0a74e4a5e04c3d9d1cfc216c0f6c4c69118", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -599,7 +599,7 @@ dnl check for __builtin_fabl\n dnl check for __builtin_labs\n dnl check for __builtin_sqrtf\n dnl check for __builtin_sqrtl\n-dnl check for __builtin_fsqrt\n+dnl check for __builtin_sqrt\n dnl check for __builtin_sinf\n dnl check for __builtin_sin\n dnl check for __builtin_sinl\n@@ -618,7 +618,7 @@ AC_DEFUN(GLIBCPP_CHECK_BUILTIN_MATH_SUPPORT, [\n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_labs)\n \n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrtf)\n-  GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_fsqrt)\n+  GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrt)\n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sqrtl)\n \n   GLIBCPP_CHECK_BUILTIN_MATH_DECL_AND_LINKAGE_1(__builtin_sinf)\n@@ -648,7 +648,7 @@ AC_DEFUN(GLIBCPP_CHECK_BUILTIN_MATH_SUPPORT, [\n     AC_DEFINE(HAVE___BUILTIN_SIN)\n     AC_DEFINE(HAVE___BUILTIN_SINF)\n     AC_DEFINE(HAVE___BUILTIN_SINL)\n-    AC_DEFINE(HAVE___BUILTIN_FSQRT)\n+    AC_DEFINE(HAVE___BUILTIN_SQRT)\n     AC_DEFINE(HAVE___BUILTIN_SQRTF)\n     AC_DEFINE(HAVE___BUILTIN_SQRTL)\n   fi"}, {"sha": "e2d1d6addc79a830f55af378e826b80d675ec02c", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -81,8 +81,8 @@\n // Define if the compiler/host combination has __builtin_sinl\n #undef HAVE___BUILTIN_SINL\n \n-// Define if the compiler/host combination has __builtin_fsqrt\n-#undef HAVE___BUILTIN_FSQRT\n+// Define if the compiler/host combination has __builtin_sqrt\n+#undef HAVE___BUILTIN_SQRT\n \n // Define if the compiler/host combination has __builtin_sqrtf\n #undef HAVE___BUILTIN_SQRTF"}, {"sha": "ddbf6847d77eab5bc27ca5124956181e107c83f5", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -6502,10 +6502,10 @@ EOF\n   fi\n \n   \n-  echo $ac_n \"checking for __builtin_fsqrt declaration\"\"... $ac_c\" 1>&6\n-echo \"configure:6507: checking for __builtin_fsqrt declaration\" >&5\n-  if test x${glibcpp_cv_func___builtin_fsqrt_use+set} != xset; then\n-    if eval \"test \\\"`echo '$''{'glibcpp_cv_func___builtin_fsqrt_use'+set}'`\\\" = set\"; then\n+  echo $ac_n \"checking for __builtin_sqrt declaration\"\"... $ac_c\" 1>&6\n+echo \"configure:6507: checking for __builtin_sqrt declaration\" >&5\n+  if test x${glibcpp_cv_func___builtin_sqrt_use+set} != xset; then\n+    if eval \"test \\\"`echo '$''{'glibcpp_cv_func___builtin_sqrt_use'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n@@ -6522,17 +6522,17 @@ cross_compiling=$ac_cv_prog_cxx_cross\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n- __builtin_fsqrt(0);\n+ __builtin_sqrt(0);\n ; return 0; }\n EOF\n if { (eval echo configure:6529: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  glibcpp_cv_func___builtin_fsqrt_use=yes\n+  glibcpp_cv_func___builtin_sqrt_use=yes\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  glibcpp_cv_func___builtin_fsqrt_use=no\n+  glibcpp_cv_func___builtin_sqrt_use=no\n fi\n rm -f conftest*\n       ac_ext=c\n@@ -6546,12 +6546,12 @@ cross_compiling=$ac_cv_prog_cc_cross\n fi\n \n   fi\n-  echo \"$ac_t\"\"$glibcpp_cv_func___builtin_fsqrt_use\" 1>&6\n-  if test x$glibcpp_cv_func___builtin_fsqrt_use = x\"yes\"; then\n-    echo $ac_n \"checking for __builtin_fsqrt linkage\"\"... $ac_c\" 1>&6\n-echo \"configure:6553: checking for __builtin_fsqrt linkage\" >&5\n-    if test x${glibcpp_cv_func___builtin_fsqrt_link+set} != xset; then\n-      if eval \"test \\\"`echo '$''{'glibcpp_cv_func___builtin_fsqrt_link'+set}'`\\\" = set\"; then\n+  echo \"$ac_t\"\"$glibcpp_cv_func___builtin_sqrt_use\" 1>&6\n+  if test x$glibcpp_cv_func___builtin_sqrt_use = x\"yes\"; then\n+    echo $ac_n \"checking for __builtin_sqrt linkage\"\"... $ac_c\" 1>&6\n+echo \"configure:6553: checking for __builtin_sqrt linkage\" >&5\n+    if test x${glibcpp_cv_func___builtin_sqrt_link+set} != xset; then\n+      if eval \"test \\\"`echo '$''{'glibcpp_cv_func___builtin_sqrt_link'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n@@ -6560,26 +6560,26 @@ else\n #include \"confdefs.h\"\n #include <math.h>\n int main() {\n- __builtin_fsqrt(0);\n+ __builtin_sqrt(0);\n ; return 0; }\n EOF\n if { (eval echo configure:6567: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n-  glibcpp_cv_func___builtin_fsqrt_link=yes\n+  glibcpp_cv_func___builtin_sqrt_link=yes\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n   rm -rf conftest*\n-  glibcpp_cv_func___builtin_fsqrt_link=no\n+  glibcpp_cv_func___builtin_sqrt_link=no\n fi\n rm -f conftest*\n       \n fi\n \n     fi\n-    echo \"$ac_t\"\"$glibcpp_cv_func___builtin_fsqrt_link\" 1>&6\n-    if test x$glibcpp_cv_func___builtin_fsqrt_link = x\"yes\"; then\n-      ac_tr_func=HAVE_`echo __builtin_fsqrt | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n+    echo \"$ac_t\"\"$glibcpp_cv_func___builtin_sqrt_link\" 1>&6\n+    if test x$glibcpp_cv_func___builtin_sqrt_link = x\"yes\"; then\n+      ac_tr_func=HAVE_`echo __builtin_sqrt | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n       cat >> confdefs.h <<EOF\n #define ${ac_tr_func} 1\n EOF\n@@ -7239,7 +7239,7 @@ EOF\n EOF\n \n     cat >> confdefs.h <<\\EOF\n-#define HAVE___BUILTIN_FSQRT 1\n+#define HAVE___BUILTIN_SQRT 1\n EOF\n \n     cat >> confdefs.h <<\\EOF"}, {"sha": "77f79bcb6525f6e2282874d54765000c67dc4c31", "filename": "libstdc++-v3/include/c_shadow/bits/std_cmath.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc6f415864bad4172aa2b396007cbb4ed2acf949/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cmath.h?ref=dc6f415864bad4172aa2b396007cbb4ed2acf949", "patch": "@@ -318,7 +318,7 @@ namespace _C_legacy {\n \n #if _GLIBCPP_HAVE___BUILTIN_SQRT\n   inline double \n-  _CPP_sqrt_capture(double __x) { return __builtin_fsqrt(__x); }\n+  _CPP_sqrt_capture(double __x) { return __builtin_sqrt(__x); }\n #else\n   inline double \n   _CPP_sqrt_capture(double __x) { return sqrt(__x); }"}]}