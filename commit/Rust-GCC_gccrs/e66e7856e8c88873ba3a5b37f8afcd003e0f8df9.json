{"sha": "e66e7856e8c88873ba3a5b37f8afcd003e0f8df9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY2ZTc4NTZlOGM4ODg3M2JhM2E1YjM3ZjhhZmNkMDAzZTBmOGRmOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-09T23:52:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-09T23:52:13Z"}, "message": "re PR middle-end/15228 (useless copies of floating point operands)\n\n        PR middle-end/15228\n        * function.c (assign_parms): Always set_mem_align with the computed\n        FUNCTION_ARG_BOUNDARY.  Don't clear stack_parm if !STRICT_ALIGNMENT.\n\nFrom-SVN: r82867", "tree": {"sha": "8987faad155164050ad8ce5a6a5e6bc61805800a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8987faad155164050ad8ce5a6a5e6bc61805800a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9/comments", "author": null, "committer": null, "parents": [{"sha": "4b5b961390cde313cc983f4cbffb954eeaf078e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b5b961390cde313cc983f4cbffb954eeaf078e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b5b961390cde313cc983f4cbffb954eeaf078e3"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "526a2b0dc2ad07ce57bb861d10f6cd78673c6b38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e66e7856e8c88873ba3a5b37f8afcd003e0f8df9", "patch": "@@ -1,3 +1,9 @@\n+2004-06-09  Richard Henderson  <rth@redhat.com>\n+ \n+        PR middle-end/15228\n+        * function.c (assign_parms): Always set_mem_align with the computed\n+        FUNCTION_ARG_BOUNDARY.  Don't clear stack_parm if !STRICT_ALIGNMENT.\n+\n 2004-06-09  Richard Henderson  <rth@redhat.com>\n \n \tPR opt/15108"}, {"sha": "00c56e322af369f773a701c0f374c1382d25ff8e", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e66e7856e8c88873ba3a5b37f8afcd003e0f8df9/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e66e7856e8c88873ba3a5b37f8afcd003e0f8df9", "patch": "@@ -4621,10 +4621,8 @@ assign_parms (tree fndecl)\n \t\t\t\t\t\t  offset_rtx));\n \n \tset_mem_attributes (stack_parm, parm, 1);\n-\tif (entry_parm && MEM_ATTRS (stack_parm)->align < PARM_BOUNDARY)\n-\t  set_mem_align (stack_parm, PARM_BOUNDARY);\n-\n-\t/* Set also REG_ATTRS if parameter was passed in a register.  */\n+\tset_mem_align (stack_parm, \n+\t\t       FUNCTION_ARG_BOUNDARY (promoted_mode, passed_type));\n \tif (entry_parm)\n \t  set_reg_attrs_for_parm (entry_parm, stack_parm);\n       }\n@@ -4692,13 +4690,9 @@ assign_parms (tree fndecl)\n       /* If we can't trust the parm stack slot to be aligned enough\n \t for its ultimate type, don't use that slot after entry.\n \t We'll make another stack slot, if we need one.  */\n-      {\n-\tunsigned int thisparm_boundary\n-\t  = FUNCTION_ARG_BOUNDARY (promoted_mode, passed_type);\n-\n-\tif (GET_MODE_ALIGNMENT (nominal_mode) > thisparm_boundary)\n-\t  stack_parm = 0;\n-      }\n+      if (STRICT_ALIGNMENT && stack_parm\n+\t  && GET_MODE_ALIGNMENT (nominal_mode) > MEM_ALIGN (stack_parm))\n+\tstack_parm = 0;\n \n       /* If parm was passed in memory, and we need to convert it on entry,\n \t don't store it back in that same slot.  */"}]}