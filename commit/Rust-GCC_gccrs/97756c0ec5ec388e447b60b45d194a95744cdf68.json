{"sha": "97756c0ec5ec388e447b60b45d194a95744cdf68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc3NTZjMGVjNWVjMzg4ZTQ0N2I2MGI0NWQxOTRhOTU3NDRjZGY2OA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-06-11T12:50:13Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-06-11T12:50:13Z"}, "message": "ipa-cp.c (ipa_get_indirect_edge_target_1): Check that param_index is within bounds at the beginning of the function.\n\n2013-06-11  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-cp.c (ipa_get_indirect_edge_target_1): Check that param_index is\n\twithin bounds at the beginning of the function.\n\nFrom-SVN: r199953", "tree": {"sha": "aad10bc95ebcb3eb5f7f5cf86de1579552485496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aad10bc95ebcb3eb5f7f5cf86de1579552485496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97756c0ec5ec388e447b60b45d194a95744cdf68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97756c0ec5ec388e447b60b45d194a95744cdf68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97756c0ec5ec388e447b60b45d194a95744cdf68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97756c0ec5ec388e447b60b45d194a95744cdf68/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c7b8bf6d3e875772946d9c4dd10ecb6a8a8b883"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f02e6b2a6e94ac65833a8a8a52f612379cba8623", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97756c0ec5ec388e447b60b45d194a95744cdf68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97756c0ec5ec388e447b60b45d194a95744cdf68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97756c0ec5ec388e447b60b45d194a95744cdf68", "patch": "@@ -1,3 +1,8 @@\n+2013-06-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-cp.c (ipa_get_indirect_edge_target_1): Check that param_index is\n+\twithin bounds at the beginning of the function.\n+\n 2013-06-11  Alan Modra  <amodra@gmail.com>\n \n \t* varasm.c (get_section): Don't die on !DECL_P decl.  Tidy error"}, {"sha": "9c29d1dbc91c26d3d53e5f5351b5961a2210642c", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97756c0ec5ec388e447b60b45d194a95744cdf68/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97756c0ec5ec388e447b60b45d194a95744cdf68/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=97756c0ec5ec388e447b60b45d194a95744cdf68", "patch": "@@ -1481,7 +1481,8 @@ ipa_get_indirect_edge_target_1 (struct cgraph_edge *ie,\n   tree otr_type;\n   tree t;\n \n-  if (param_index == -1)\n+  if (param_index == -1\n+      || known_vals.length () <= (unsigned int) param_index)\n     return NULL_TREE;\n \n   if (!ie->indirect_info->polymorphic)\n@@ -1516,8 +1517,7 @@ ipa_get_indirect_edge_target_1 (struct cgraph_edge *ie,\n \t    t = NULL;\n \t}\n       else\n-\tt = (known_vals.length () > (unsigned int) param_index\n-\t     ? known_vals[param_index] : NULL);\n+\tt = known_vals[param_index];\n \n       if (t &&\n \t  TREE_CODE (t) == ADDR_EXPR"}]}