{"sha": "225ce44b67d26d7687454003691268f34d804e39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1Y2U0NGI2N2QyNmQ3Njg3NDU0MDAzNjkxMjY4ZjM0ZDgwNGUzOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-25T12:36:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-25T12:36:12Z"}, "message": "tree-vect-stmts.c (vectorizable_conversion): Do not set STMT_VINFO_VEC_STMT for SLP.\n\n2015-06-25  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-stmts.c (vectorizable_conversion): Do not set\n\tSTMT_VINFO_VEC_STMT for SLP.\n\t(vectorizable_store): Likewise.\n\t(vectorizable_load): Likewise.\n\t(vect_transform_stmt): Catch SLP vectorization clobbering\n\tSTMT_VINFO_VEC_STMT.\n\nFrom-SVN: r224939", "tree": {"sha": "007f1bd28a44ac02e8024dbed838a260d98271ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/007f1bd28a44ac02e8024dbed838a260d98271ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/225ce44b67d26d7687454003691268f34d804e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225ce44b67d26d7687454003691268f34d804e39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/225ce44b67d26d7687454003691268f34d804e39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/225ce44b67d26d7687454003691268f34d804e39/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "502f0263635b6a9fbb8feeb50b9b80947cc2a410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502f0263635b6a9fbb8feeb50b9b80947cc2a410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502f0263635b6a9fbb8feeb50b9b80947cc2a410"}], "stats": {"total": 54, "additions": 42, "deletions": 12}, "files": [{"sha": "86a3b36152616e39d0174efb8b1711546b738914", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225ce44b67d26d7687454003691268f34d804e39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225ce44b67d26d7687454003691268f34d804e39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=225ce44b67d26d7687454003691268f34d804e39", "patch": "@@ -1,3 +1,12 @@\n+2015-06-25  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-stmts.c (vectorizable_conversion): Do not set\n+\tSTMT_VINFO_VEC_STMT for SLP.\n+\t(vectorizable_store): Likewise.\n+\t(vectorizable_load): Likewise.\n+\t(vect_transform_stmt): Catch SLP vectorization clobbering\n+\tSTMT_VINFO_VEC_STMT.\n+\n 2015-06-25  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-slp.c (vect_detect_hybrid_slp_stmts): Improve debug"}, {"sha": "dbcd4879f8058400a2d90b27525c55c41077bc05", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 33, "deletions": 12, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/225ce44b67d26d7687454003691268f34d804e39/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/225ce44b67d26d7687454003691268f34d804e39/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=225ce44b67d26d7687454003691268f34d804e39", "patch": "@@ -3841,13 +3841,15 @@ vectorizable_conversion (gimple stmt, gimple_stmt_iterator *gsi,\n \t      vect_finish_stmt_generation (stmt, new_stmt, gsi);\n \t      if (slp_node)\n \t\tSLP_TREE_VEC_STMTS (slp_node).quick_push (new_stmt);\n+\t      else\n+\t\t{\n+\t\t  if (!prev_stmt_info)\n+\t\t    STMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = new_stmt;\n+\t\t  else\n+\t\t    STMT_VINFO_RELATED_STMT (prev_stmt_info) = new_stmt;\n+\t\t  prev_stmt_info = vinfo_for_stmt (new_stmt);\n+\t\t}\n \t    }\n-\n-\t  if (j == 0)\n-\t    STMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = new_stmt;\n-\t  else\n-\t    STMT_VINFO_RELATED_STMT (prev_stmt_info) = new_stmt;\n-\t  prev_stmt_info = vinfo_for_stmt (new_stmt);\n \t}\n       break;\n \n@@ -5400,10 +5402,12 @@ vectorizable_store (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t\t  vect_finish_stmt_generation (stmt, incr, gsi);\n \n \t\t  running_off = newoff;\n-\t\t  if (g == group_size - 1)\n+\t\t  if (g == group_size - 1\n+\t\t      && !slp)\n \t\t    {\n \t\t      if (j == 0 && i == 0)\n-\t\t\tSTMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = assign;\n+\t\t\tSTMT_VINFO_VEC_STMT (stmt_info)\n+\t\t\t    = *vec_stmt = assign;\n \t\t      else\n \t\t\tSTMT_VINFO_RELATED_STMT (prev_stmt_info) = assign;\n \t\t      prev_stmt_info = vinfo_for_stmt (assign);\n@@ -6409,11 +6413,14 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      if (slp_perm)\n \t\tdr_chain.quick_push (gimple_assign_lhs (new_stmt));\n \t    }\n-\t  if (j == 0)\n-\t    STMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = new_stmt;\n \t  else\n-\t    STMT_VINFO_RELATED_STMT (prev_stmt_info) = new_stmt;\n-\t  prev_stmt_info = vinfo_for_stmt (new_stmt);\n+\t    {\n+\t      if (j == 0)\n+\t\tSTMT_VINFO_VEC_STMT (stmt_info) = *vec_stmt = new_stmt;\n+\t      else\n+\t\tSTMT_VINFO_RELATED_STMT (prev_stmt_info) = new_stmt;\n+\t      prev_stmt_info = vinfo_for_stmt (new_stmt);\n+\t    }\n \t}\n       if (slp_perm)\n \tvect_transform_slp_perm_load (slp_node, dr_chain, gsi, vf,\n@@ -7523,6 +7530,8 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n   stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n   bool done;\n \n+  gimple old_vec_stmt = STMT_VINFO_VEC_STMT (stmt_info);\n+\n   switch (STMT_VINFO_TYPE (stmt_info))\n     {\n     case type_demotion_vec_info_type:\n@@ -7610,6 +7619,18 @@ vect_transform_stmt (gimple stmt, gimple_stmt_iterator *gsi,\n \t}\n     }\n \n+  /* Verify SLP vectorization doesn't mess with STMT_VINFO_VEC_STMT.\n+     This would break hybrid SLP vectorization.  */\n+  if (slp_node)\n+    {\n+      if (PURE_SLP_STMT (stmt_info))\n+\tgcc_assert (!old_vec_stmt && !vec_stmt\n+\t\t    && !STMT_VINFO_VEC_STMT (stmt_info));\n+      else if (HYBRID_SLP_STMT (stmt_info))\n+\tgcc_assert (!vec_stmt\n+\t\t    && STMT_VINFO_VEC_STMT (stmt_info) == old_vec_stmt);\n+    }\n+\n   /* Handle inner-loop stmts whose DEF is used in the loop-nest that\n      is being vectorized, but outside the immediately enclosing loop.  */\n   if (vec_stmt"}]}