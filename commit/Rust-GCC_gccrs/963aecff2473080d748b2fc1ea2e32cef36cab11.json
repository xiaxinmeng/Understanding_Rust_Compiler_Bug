{"sha": "963aecff2473080d748b2fc1ea2e32cef36cab11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYzYWVjZmYyNDczMDgwZDc0OGIyZmMxZWEyZTMyY2VmMzZjYWIxMQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-02-17T22:50:52Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-02-17T22:50:52Z"}, "message": "testsuite: add regression test for PR analyzer/94596\n\nThis use-after-free false positive affected GCC 10, but seems to be\nfixed in trunk for GCC 11; adding a reduced version as a regression\ntest.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/94596\n\t* gcc.dg/analyzer/pr94596.c: New test.", "tree": {"sha": "da6a9a3a63cb8c361dae5369b57be7536529bbe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da6a9a3a63cb8c361dae5369b57be7536529bbe5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/963aecff2473080d748b2fc1ea2e32cef36cab11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963aecff2473080d748b2fc1ea2e32cef36cab11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963aecff2473080d748b2fc1ea2e32cef36cab11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963aecff2473080d748b2fc1ea2e32cef36cab11/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8889c99aab4b599aa7ceb7079e69a9766171336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8889c99aab4b599aa7ceb7079e69a9766171336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8889c99aab4b599aa7ceb7079e69a9766171336"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "055d20980647a9afd3cde08a3c532fbe9a7d7b97", "filename": "gcc/testsuite/gcc.dg/analyzer/pr94596.c", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/963aecff2473080d748b2fc1ea2e32cef36cab11/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94596.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/963aecff2473080d748b2fc1ea2e32cef36cab11/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94596.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr94596.c?ref=963aecff2473080d748b2fc1ea2e32cef36cab11", "patch": "@@ -0,0 +1,97 @@\n+/* Minimized/hacked up from openvswitch lib/conntrack.c, which had this license\n+   header:  */\n+/*\n+ * Copyright (c) 2015-2019 Nicira, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at:\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+typedef __SIZE_TYPE__ size_t;\n+#define NULL ((void *)0)\n+#define false 0\n+\n+#define OBJECT_OFFSETOF(OBJECT, MEMBER)\\\n+    __builtin_offsetof(typeof(*(OBJECT)), MEMBER)\n+\n+#define OBJECT_CONTAINING(POINTER, OBJECT, MEMBER)                      \\\n+    ((typeof(OBJECT)) (void *)                                      \\\n+     ((char *) (POINTER) - OBJECT_OFFSETOF(OBJECT, MEMBER)))\n+\n+#define ASSIGN_CONTAINER(OBJECT, POINTER, MEMBER)\t\t\t\\\n+    ((OBJECT) = OBJECT_CONTAINING(POINTER, OBJECT, MEMBER), (void) 0)\n+\n+#define INIT_CONTAINER(OBJECT, POINTER, MEMBER)\t\t\t\t\\\n+    ((OBJECT) = NULL, ASSIGN_CONTAINER(OBJECT, POINTER, MEMBER))\n+\n+#define HMAP_FOR_EACH_POP(NODE, MEMBER, HMAP)\t\t\t\t\\\n+    for (size_t bucket__ = 0;                                               \\\n+         INIT_CONTAINER(NODE, hmap_pop_helper__(HMAP, &bucket__), MEMBER),  \\\n+         (NODE != OBJECT_CONTAINING(NULL, NODE, MEMBER))                    \\\n+         || ((NODE = NULL), false);)\n+\n+struct hmap {\n+    struct hmap_node **buckets;\n+    struct hmap_node *one;\n+    size_t mask;\n+    size_t n;\n+};\n+\n+struct hmap_node {\n+    size_t hash;\n+    struct hmap_node *next;\n+};\n+\n+static inline void hmap_remove(struct hmap *, struct hmap_node *);\n+\n+struct hmap_node *\n+hmap_pop_helper__(struct hmap *hmap, size_t *bucket) {\n+\n+    for (; *bucket <= hmap->mask; (*bucket)++) {\n+        struct hmap_node *node = hmap->buckets[*bucket];\n+\n+        if (node) {\n+            hmap_remove(hmap, node);\n+            return node;\n+        }\n+    }\n+\n+    return NULL;\n+}\n+\n+static inline void\n+hmap_remove(struct hmap *hmap, struct hmap_node *node)\n+{\n+    struct hmap_node **bucket = &hmap->buckets[node->hash & hmap->mask];\n+    while (*bucket != node) {\n+        bucket = &(*bucket)->next;\n+    }\n+    *bucket = node->next;\n+    hmap->n--;\n+}\n+\n+struct conntrack {\n+    struct hmap zone_limits;\n+};\n+\n+struct zone_limit {\n+    struct hmap_node node;\n+};\n+\n+void\n+conntrack_destroy(struct conntrack *ct)\n+{\n+    struct zone_limit *zl;\n+    HMAP_FOR_EACH_POP (zl, node, &ct->zone_limits) {\n+      __builtin_free(zl);\n+    }\n+}"}]}