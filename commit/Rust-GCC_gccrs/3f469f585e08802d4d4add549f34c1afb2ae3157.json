{"sha": "3f469f585e08802d4d4add549f34c1afb2ae3157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y0NjlmNTg1ZTA4ODAyZDRkNGFkZDU0OWYzNGMxYWZiMmFlMzE1Nw==", "commit": {"author": {"name": "eric fang", "email": "eric.fang@arm.com", "date": "2020-02-21T09:01:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-02-28T20:24:21Z"}, "message": "runtime: handle linux/arm64 signal register\n\nSet sigpc and implement dumpregs for linux/arm64.\nWithout this change, cmd/vet tool test will fail randomly.\n\nUpdates golang/go#20931\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/220543", "tree": {"sha": "83335f91895786a27494abd16a0dd21955d7bcae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83335f91895786a27494abd16a0dd21955d7bcae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f469f585e08802d4d4add549f34c1afb2ae3157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f469f585e08802d4d4add549f34c1afb2ae3157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f469f585e08802d4d4add549f34c1afb2ae3157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f469f585e08802d4d4add549f34c1afb2ae3157/comments", "author": {"login": "erifan", "id": 31343225, "node_id": "MDQ6VXNlcjMxMzQzMjI1", "avatar_url": "https://avatars.githubusercontent.com/u/31343225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erifan", "html_url": "https://github.com/erifan", "followers_url": "https://api.github.com/users/erifan/followers", "following_url": "https://api.github.com/users/erifan/following{/other_user}", "gists_url": "https://api.github.com/users/erifan/gists{/gist_id}", "starred_url": "https://api.github.com/users/erifan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erifan/subscriptions", "organizations_url": "https://api.github.com/users/erifan/orgs", "repos_url": "https://api.github.com/users/erifan/repos", "events_url": "https://api.github.com/users/erifan/events{/privacy}", "received_events_url": "https://api.github.com/users/erifan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "799270b430542572ddc859331e9e15311ce7ee2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/799270b430542572ddc859331e9e15311ce7ee2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/799270b430542572ddc859331e9e15311ce7ee2c"}], "stats": {"total": 65, "additions": 24, "deletions": 41}, "files": [{"sha": "6b4c21fabf5ad172557a0deee2472a0baa983e0f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f469f585e08802d4d4add549f34c1afb2ae3157/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f469f585e08802d4d4add549f34c1afb2ae3157/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=3f469f585e08802d4d4add549f34c1afb2ae3157", "patch": "@@ -1,4 +1,4 @@\n-5fc21bb0d91d916940c21e6d4a3e10ad3f45343d\n+7a62a49e62c090118fa003d9265c5f5e2090c4f9\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a07fdeafeb435a85b2a608e35ad26194ba77c6b3", "filename": "libgo/runtime/go-signal.c", "status": "modified", "additions": 23, "deletions": 40, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f469f585e08802d4d4add549f34c1afb2ae3157/libgo%2Fruntime%2Fgo-signal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f469f585e08802d4d4add549f34c1afb2ae3157/libgo%2Fruntime%2Fgo-signal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-signal.c?ref=3f469f585e08802d4d4add549f34c1afb2ae3157", "patch": "@@ -205,28 +205,18 @@ getSiginfo(siginfo_t *info, void *context __attribute__((unused)))\n \t// Use unportable code to pull it from context, and if that fails\n \t// try a stack backtrace across the signal handler.\n \n-#ifdef __x86_64__\n- #ifdef __linux__\n+#if defined(__x86_64__) && defined(__linux__)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.gregs[REG_RIP];\n- #endif\n-#endif\n-#ifdef __i386__\n-  #ifdef __linux__\n+#elif defined(__i386__) && defined(__linux__)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.gregs[REG_EIP];\n-  #endif\n-#endif\n-#ifdef __alpha__\n-  #ifdef __linux__\n+#elif defined(__alpha__) && defined(__linux__)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.sc_pc;\n-  #endif\n-#endif\n-#ifdef __PPC__\n-  #ifdef __linux__\n+#elif defined(__PPC__) && defined(__linux__)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.regs->nip;\n-  #endif\n-  #ifdef _AIX\n+#elif defined(__PPC__) && defined(_AIX)\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.jmp_context.iar;\n-  #endif\n+#elif defined(__aarch64__) && defined(__linux__)\n+\tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.pc;\n #endif\n \n \tif (ret.sigpc == 0) {\n@@ -250,8 +240,7 @@ void dumpregs(siginfo_t *, void *)\n void\n dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((unused)))\n {\n-#ifdef __x86_64__\n- #ifdef __linux__\n+#if defined(__x86_64__) && defined(__linux__)\n \t{\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \n@@ -277,11 +266,7 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t\truntime_printf(\"fs     %X\\n\", (m->gregs[REG_CSGSFS] >> 16) & 0xffff);\n \t\truntime_printf(\"gs     %X\\n\", (m->gregs[REG_CSGSFS] >> 32) & 0xffff);\n \t  }\n- #endif\n-#endif\n-\n-#ifdef __i386__\n- #ifdef __linux__\n+#elif defined(__i386__) && defined(__linux__)\n \t{\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \n@@ -299,11 +284,7 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t\truntime_printf(\"fs     %x\\n\", m->gregs[REG_FS]);\n \t\truntime_printf(\"gs     %x\\n\", m->gregs[REG_GS]);\n \t  }\n- #endif\n-#endif\n-\n-#ifdef __alpha__\n-  #ifdef __linux__\n+#elif defined(__alpha__) && defined(__linux__)\n \t{\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \n@@ -340,11 +321,7 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t\truntime_printf(\"sp  %X\\n\", m->sc_regs[30]);\n \t\truntime_printf(\"pc  %X\\n\", m->sc_pc);\n \t  }\n-  #endif\n-#endif\n-\n-#if defined(__PPC__) && defined(__LITTLE_ENDIAN__)\n-  #ifdef __linux__\n+#elif defined(__PPC__) && defined(__LITTLE_ENDIAN__) && defined(__linux__)\n \t  {\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \t\tint i;\n@@ -358,11 +335,7 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t\truntime_printf(\"ctr %X\\n\", m->regs->ctr);\n \t\truntime_printf(\"xer %X\\n\", m->regs->xer);\n \t  }\n-  #endif\n-#endif\n-\n-#ifdef __PPC__\n-  #ifdef _AIX\n+#elif defined(__PPC__) && defined(_AIX)\n \t  {\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \t\tint i;\n@@ -376,6 +349,16 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t\truntime_printf(\"ctr %p\\n\", m->jmp_context.ctr);\n \t\truntime_printf(\"xer %x\\n\", m->jmp_context.xer);\n \t  }\n-  #endif\n+#elif defined(__aarch64__) && defined(__linux__)\n+\t  {\n+\t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n+\t\tint i;\n+\n+\t\tfor (i = 0; i < 31; i++)\n+\t\t\truntime_printf(\"x%d    %X\\n\", i, m->regs[i]);\n+\t\truntime_printf(\"sp     %X\\n\", m->sp);\n+\t\truntime_printf(\"pc     %X\\n\", m->pc);\n+\t\truntime_printf(\"pstate %X\\n\", m->pstate);\n+\t  }\n #endif\n }"}]}