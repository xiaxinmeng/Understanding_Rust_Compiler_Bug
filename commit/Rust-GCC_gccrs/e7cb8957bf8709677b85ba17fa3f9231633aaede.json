{"sha": "e7cb8957bf8709677b85ba17fa3f9231633aaede", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjYjg5NTdiZjg3MDk2NzdiODViYTE3ZmEzZjkyMzE2MzNhYWVkZQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-05-28T18:42:06Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-05-28T18:42:06Z"}, "message": "Don't generate COND_EXPRs for degenerate_phi_result.\n\n2010-05-28  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-if-conv.c (replace_phi_with_cond_gimple_assign_stmt): Don't\n\tgenerate COND_EXPRs for degenerate_phi_result.\n\nFrom-SVN: r159991", "tree": {"sha": "3b1fbeff58aa9dc84de7ae1c85b61eeaba0cb86d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b1fbeff58aa9dc84de7ae1c85b61eeaba0cb86d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7cb8957bf8709677b85ba17fa3f9231633aaede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cb8957bf8709677b85ba17fa3f9231633aaede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7cb8957bf8709677b85ba17fa3f9231633aaede", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7cb8957bf8709677b85ba17fa3f9231633aaede/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d10e857ebb356b77527167cc55dac1cea5e37be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10e857ebb356b77527167cc55dac1cea5e37be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10e857ebb356b77527167cc55dac1cea5e37be0"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "d2d4f2db3bbca363bec735cd0b780ca5e8637a69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7cb8957bf8709677b85ba17fa3f9231633aaede/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7cb8957bf8709677b85ba17fa3f9231633aaede/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7cb8957bf8709677b85ba17fa3f9231633aaede", "patch": "@@ -1,3 +1,8 @@\n+2010-05-28  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-if-conv.c (replace_phi_with_cond_gimple_assign_stmt): Don't\n+\tgenerate COND_EXPRs for degenerate_phi_result.\n+\n 2010-05-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/44293"}, {"sha": "2729bf3cf159d3a7b0dadb5986027f4b4d976e0c", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7cb8957bf8709677b85ba17fa3f9231633aaede/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7cb8957bf8709677b85ba17fa3f9231633aaede/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=e7cb8957bf8709677b85ba17fa3f9231633aaede", "patch": "@@ -864,31 +864,37 @@ replace_phi_with_cond_gimple_assign_stmt (gimple phi, tree cond,\n   gimple new_stmt;\n   basic_block bb;\n   tree rhs;\n-  tree arg_0, arg_1;\n+  tree arg;\n \n   gcc_assert (gimple_code (phi) == GIMPLE_PHI\n \t      && gimple_phi_num_args (phi) == 2);\n \n   bb = gimple_bb (phi);\n \n-  /* Use condition that is not TRUTH_NOT_EXPR in conditional modify expr.  */\n-  if (EDGE_PRED (bb, 1)->src == true_bb)\n-    {\n-      arg_0 = gimple_phi_arg_def (phi, 1);\n-      arg_1 = gimple_phi_arg_def (phi, 0);\n-    }\n+  arg = degenerate_phi_result (phi);\n+  if (arg)\n+    rhs = arg;\n   else\n     {\n-      arg_0 = gimple_phi_arg_def (phi, 0);\n-      arg_1 = gimple_phi_arg_def (phi, 1);\n-    }\n+      tree arg_0, arg_1;\n+      /* Use condition that is not TRUTH_NOT_EXPR in conditional modify expr.  */\n+      if (EDGE_PRED (bb, 1)->src == true_bb)\n+\t{\n+\t  arg_0 = gimple_phi_arg_def (phi, 1);\n+\t  arg_1 = gimple_phi_arg_def (phi, 0);\n+\t}\n+      else\n+\t{\n+\t  arg_0 = gimple_phi_arg_def (phi, 0);\n+\t  arg_1 = gimple_phi_arg_def (phi, 1);\n+\t}\n \n-  /* Build new RHS using selected condition and arguments.  */\n-  rhs = build3 (COND_EXPR, TREE_TYPE (PHI_RESULT (phi)),\n-\t        unshare_expr (cond), unshare_expr (arg_0),\n-\t        unshare_expr (arg_1));\n+      /* Build new RHS using selected condition and arguments.  */\n+      rhs = build3 (COND_EXPR, TREE_TYPE (PHI_RESULT (phi)),\n+\t\t    unshare_expr (cond), arg_0, arg_1);\n+    }\n \n-  new_stmt = gimple_build_assign (unshare_expr (PHI_RESULT (phi)), rhs);\n+  new_stmt = gimple_build_assign (PHI_RESULT (phi), rhs);\n   SSA_NAME_DEF_STMT (gimple_phi_result (phi)) = new_stmt;\n   gsi_insert_before (gsi, new_stmt, GSI_SAME_STMT);\n   update_stmt (new_stmt);"}]}