{"sha": "d74d98784a9d0101aad8095d692193a74a2f62f6", "node_id": "C_kwDOANBUbNoAKGQ3NGQ5ODc4NGE5ZDAxMDFhYWQ4MDk1ZDY5MjE5M2E3NGEyZjYyZjY", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-01T13:32:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-04T07:09:45Z"}, "message": "tree-optimization/106055 - issue with autopar\n\nWhen autopar uses graphites canonicalize_loop_closed_ssa it fails to\ncheck whether propagation is allowed and thus it ends up messing up\nabnormal constraints.\n\n2022-07-01  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/106055\n\t* graphite.cc (canonicalize_loop_closed_ssa): Check whether\n\twe can propagate.\n\n\t* gcc.dg/graphite/pr106055.c: New testcase.", "tree": {"sha": "4ebaef48701a23174797f9e3e573445dc7d70903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ebaef48701a23174797f9e3e573445dc7d70903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d74d98784a9d0101aad8095d692193a74a2f62f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74d98784a9d0101aad8095d692193a74a2f62f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74d98784a9d0101aad8095d692193a74a2f62f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74d98784a9d0101aad8095d692193a74a2f62f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73f942c08deef3cce312263b3347f7a44dd44150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f942c08deef3cce312263b3347f7a44dd44150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f942c08deef3cce312263b3347f7a44dd44150"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "fd4f7a126e17f119e50fadb5c96d649aefbdcfdc", "filename": "gcc/graphite.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74d98784a9d0101aad8095d692193a74a2f62f6/gcc%2Fgraphite.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74d98784a9d0101aad8095d692193a74a2f62f6/gcc%2Fgraphite.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.cc?ref=d74d98784a9d0101aad8095d692193a74a2f62f6", "patch": "@@ -57,6 +57,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa.h\"\n #include \"tree-into-ssa.h\"\n+#include \"tree-ssa-propagate.h\"\n #include \"graphite.h\"\n \n /* Print global statistics to FILE.  */\n@@ -337,7 +338,9 @@ canonicalize_loop_closed_ssa (loop_p loop, edge e)\n       /* Iterate over the next phis and remove duplicates.  */\n       gsi_next (&gsi);\n       while (!gsi_end_p (gsi))\n-\tif (gimple_phi_arg_def (phi, 0) == gimple_phi_arg_def (gsi.phi (), 0))\n+\tif (gimple_phi_arg_def (phi, 0) == gimple_phi_arg_def (gsi.phi (), 0)\n+\t    && may_propagate_copy (gimple_phi_result (gsi.phi ()),\n+\t\t\t\t   gimple_phi_result (phi)))\n \t  {\n \t    replace_uses_by (gimple_phi_result (gsi.phi ()),\n \t\t\t     gimple_phi_result (phi));"}, {"sha": "22be62b360740647e4bd87a0b5430ddd2bcd90d9", "filename": "gcc/testsuite/gcc.dg/graphite/pr106055.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74d98784a9d0101aad8095d692193a74a2f62f6/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr106055.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74d98784a9d0101aad8095d692193a74a2f62f6/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr106055.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr106055.c?ref=d74d98784a9d0101aad8095d692193a74a2f62f6", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -floop-parallelize-all -fno-tree-dce\" } */\n+\n+__attribute__ ((returns_twice)) int\n+bar (void);\n+\n+void\n+quux (void);\n+\n+void\n+empty (void)\n+{\n+}\n+\n+unsigned int\n+choose (unsigned int x, unsigned int y)\n+{\n+  return y ? x : 0;\n+}\n+\n+int\n+foo (int *p, unsigned int x, int y)\n+{\n+  unsigned int acc = 0;\n+\n+  empty ();\n+\n+  while (x)\n+    {\n+      bar ();\n+      ++x;\n+    }\n+\n+  while (y)\n+    acc += y;\n+\n+  *p = choose (acc, 1);\n+  quux ();\n+\n+  return x;\n+}"}]}