{"sha": "2e8a660011cccec83ef9b443f9585226a7cc2989", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU4YTY2MDAxMWNjY2VjODNlZjliNDQzZjk1ODUyMjZhN2NjMjk4OQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-03-14T05:04:13Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1992-03-14T05:04:13Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r470", "tree": {"sha": "60282c80a1bfbe592b566db23bd0c96ac65a2291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60282c80a1bfbe592b566db23bd0c96ac65a2291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e8a660011cccec83ef9b443f9585226a7cc2989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8a660011cccec83ef9b443f9585226a7cc2989", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8a660011cccec83ef9b443f9585226a7cc2989", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8a660011cccec83ef9b443f9585226a7cc2989/comments", "author": null, "committer": null, "parents": [{"sha": "bf55c04f34813ae1195e20906b456253f90e749a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf55c04f34813ae1195e20906b456253f90e749a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf55c04f34813ae1195e20906b456253f90e749a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ae4447b36ea4a88a0ab09dbc1d94ae0b81ee9365", "filename": "gcc/longlong.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8a660011cccec83ef9b443f9585226a7cc2989/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8a660011cccec83ef9b443f9585226a7cc2989/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=2e8a660011cccec83ef9b443f9585226a7cc2989", "patch": "@@ -24,7 +24,7 @@\n #define __ll_lowpart(t) ((unsigned long int) (t) % __ll_B)\n #define __ll_highpart(t) ((unsigned long int) (t) / __ll_B)\n \n-/* Define auxilliary asm macros.\n+/* Define auxiliary asm macros.\n \n    1) umul_ppmm(high_prod, low_prod, multipler, multiplicand)\n    multiplies two unsigned long integers MULTIPLER and MULTIPLICAND,\n@@ -250,6 +250,7 @@\n \t     + (((signed long int) __m1 >> 31) & __m0));\t\t\\\n   } while (0)\n #define UMUL_TIME 8\n+#if 0 /* Overflow for nh>=FFFFFFFE, d==FFFFFFFF.  Find a good fix later.  */\n #define udiv_qrnnd(q, r, nh, nl, d) \\\n   do { /* Use the signed \"div\" insn, and adjust the result. */\t\t\\\n     unsigned long int __q, __r, __nh, __nl, __d, __xh, __xl;\t\t\\\n@@ -298,6 +299,7 @@\n   } while (0)\n #define UDIV_TIME 40\n #define UDIV_NEEDS_NORMALIZATION 1\n+#endif\n #define count_leading_zeros(count, x) \\\n   __asm__ (\"cntlz %0,%1\"\t\t\t\t\t\t\\\n \t: \"=r\" ((unsigned long int)(count)) : \"r\" ((unsigned long int)(x)))"}]}