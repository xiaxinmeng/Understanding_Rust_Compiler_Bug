{"sha": "742377ed0f09313503a1c5393c4f742d69249521", "node_id": "C_kwDOANBUbNoAKDc0MjM3N2VkMGYwOTMxMzUwM2ExYzUzOTNjNGY3NDJkNjkyNDk1MjE", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-07-21T01:34:17Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-07-21T01:34:17Z"}, "message": "analyzer: bulletproof taint warnings against NULL m_arg\n\ngcc/analyzer/ChangeLog:\n\t* sm-taint.cc (tainted_array_index::emit): Bulletproof against\n\tNULL m_arg.\n\t(tainted_array_index::describe_final_event): Likewise.\n\t(tainted_size::emit): Likewise.\n\t(tainted_size::describe_final_event): Likewise.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "94d83c15308fa9131d986baf58b5fb3757c19c8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94d83c15308fa9131d986baf58b5fb3757c19c8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/742377ed0f09313503a1c5393c4f742d69249521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742377ed0f09313503a1c5393c4f742d69249521", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742377ed0f09313503a1c5393c4f742d69249521", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742377ed0f09313503a1c5393c4f742d69249521/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c192e80a87efbe6c0641f25a963c7bee9990fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c192e80a87efbe6c0641f25a963c7bee9990fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c192e80a87efbe6c0641f25a963c7bee9990fb"}], "stats": {"total": 247, "additions": 164, "deletions": 83}, "files": [{"sha": "51bfe06835dec3a2f8e65ee76069a7522237847e", "filename": "gcc/analyzer/sm-taint.cc", "status": "modified", "additions": 164, "deletions": 83, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742377ed0f09313503a1c5393c4f742d69249521/gcc%2Fanalyzer%2Fsm-taint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742377ed0f09313503a1c5393c4f742d69249521/gcc%2Fanalyzer%2Fsm-taint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-taint.cc?ref=742377ed0f09313503a1c5393c4f742d69249521", "patch": "@@ -212,53 +212,96 @@ class tainted_array_index : public taint_diagnostic\n     diagnostic_metadata m;\n     /* CWE-129: \"Improper Validation of Array Index\".  */\n     m.add_cwe (129);\n-    switch (m_has_bounds)\n-      {\n-      default:\n-\tgcc_unreachable ();\n-      case BOUNDS_NONE:\n-\treturn warning_meta (rich_loc, m, get_controlling_option (),\n-\t\t\t     \"use of attacker-controlled value %qE\"\n-\t\t\t     \" in array lookup without bounds checking\",\n-\t\t\t     m_arg);\n-\tbreak;\n-      case BOUNDS_UPPER:\n-\treturn warning_meta (rich_loc, m, get_controlling_option (),\n-\t\t\t     \"use of attacker-controlled value %qE\"\n-\t\t\t     \" in array lookup without checking for negative\",\n-\t\t\t     m_arg);\n-\tbreak;\n-      case BOUNDS_LOWER:\n-\treturn warning_meta (rich_loc, m, get_controlling_option (),\n-\t\t\t     \"use of attacker-controlled value %qE\"\n-\t\t\t     \" in array lookup without upper-bounds checking\",\n-\t\t\t     m_arg);\n-\tbreak;\n-      }\n+    if (m_arg)\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value %qE\"\n+\t\t\t       \" in array lookup without bounds checking\",\n+\t\t\t       m_arg);\n+\t  break;\n+\tcase BOUNDS_UPPER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value %qE\"\n+\t\t\t       \" in array lookup without checking for negative\",\n+\t\t\t       m_arg);\n+\t  break;\n+\tcase BOUNDS_LOWER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value %qE\"\n+\t\t\t       \" in array lookup without upper-bounds checking\",\n+\t\t\t       m_arg);\n+\t  break;\n+\t}\n+    else\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value\"\n+\t\t\t       \" in array lookup without bounds checking\");\n+\t  break;\n+\tcase BOUNDS_UPPER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value\"\n+\t\t\t       \" in array lookup without checking for\"\n+\t\t\t       \" negative\");\n+\t  break;\n+\tcase BOUNDS_LOWER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value\"\n+\t\t\t       \" in array lookup without upper-bounds\"\n+\t\t\t       \" checking\");\n+\t  break;\n+\t}\n   }\n \n   label_text describe_final_event (const evdesc::final_event &ev) final override\n   {\n-    switch (m_has_bounds)\n-      {\n-      default:\n-\tgcc_unreachable ();\n-      case BOUNDS_NONE:\n-\treturn ev.formatted_print\n-\t  (\"use of attacker-controlled value %qE in array lookup\"\n-\t   \" without bounds checking\",\n-\t   m_arg);\n-      case BOUNDS_UPPER:\n-\treturn ev.formatted_print\n-\t  (\"use of attacker-controlled value %qE\"\n-\t   \" in array lookup without checking for negative\",\n-\t   m_arg);\n-      case BOUNDS_LOWER:\n-\treturn ev.formatted_print\n-\t  (\"use of attacker-controlled value %qE\"\n-\t   \" in array lookup without upper-bounds checking\",\n-\t   m_arg);\n-      }\n+    if (m_arg)\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return ev.formatted_print\n+\t    (\"use of attacker-controlled value %qE in array lookup\"\n+\t     \" without bounds checking\",\n+\t     m_arg);\n+\tcase BOUNDS_UPPER:\n+\t  return ev.formatted_print\n+\t    (\"use of attacker-controlled value %qE\"\n+\t     \" in array lookup without checking for negative\",\n+\t     m_arg);\n+\tcase BOUNDS_LOWER:\n+\t  return ev.formatted_print\n+\t    (\"use of attacker-controlled value %qE\"\n+\t     \" in array lookup without upper-bounds checking\",\n+\t     m_arg);\n+\t}\n+    else\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return ev.formatted_print\n+\t    (\"use of attacker-controlled value in array lookup\"\n+\t     \" without bounds checking\");\n+\tcase BOUNDS_UPPER:\n+\t  return ev.formatted_print\n+\t    (\"use of attacker-controlled value\"\n+\t     \" in array lookup without checking for negative\");\n+\tcase BOUNDS_LOWER:\n+\t  return ev.formatted_print\n+\t    (\"use of attacker-controlled value\"\n+\t     \" in array lookup without upper-bounds checking\");\n+\t}\n   }\n };\n \n@@ -394,50 +437,88 @@ class tainted_size : public taint_diagnostic\n   {\n     diagnostic_metadata m;\n     m.add_cwe (129);\n-    switch (m_has_bounds)\n-      {\n-      default:\n-\tgcc_unreachable ();\n-      case BOUNDS_NONE:\n-\treturn warning_meta (rich_loc, m, get_controlling_option (),\n-\t\t\t     \"use of attacker-controlled value %qE as size\"\n-\t\t\t     \" without bounds checking\",\n-\t\t\t     m_arg);\n-\tbreak;\n-      case BOUNDS_UPPER:\n-\treturn warning_meta (rich_loc, m, get_controlling_option (),\n-\t\t\t     \"use of attacker-controlled value %qE as size\"\n-\t\t\t     \" without lower-bounds checking\",\n-\t\t\t     m_arg);\n-\tbreak;\n-      case BOUNDS_LOWER:\n-\treturn warning_meta (rich_loc, m, get_controlling_option (),\n-\t\t\t     \"use of attacker-controlled value %qE as size\"\n-\t\t\t     \" without upper-bounds checking\",\n-\t\t\t     m_arg);\n-\tbreak;\n-      }\n+    if (m_arg)\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value %qE as size\"\n+\t\t\t       \" without bounds checking\",\n+\t\t\t       m_arg);\n+\t  break;\n+\tcase BOUNDS_UPPER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value %qE as size\"\n+\t\t\t       \" without lower-bounds checking\",\n+\t\t\t       m_arg);\n+\t  break;\n+\tcase BOUNDS_LOWER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value %qE as size\"\n+\t\t\t       \" without upper-bounds checking\",\n+\t\t\t       m_arg);\n+\t  break;\n+\t}\n+    else\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value as size\"\n+\t\t\t       \" without bounds checking\");\n+\t  break;\n+\tcase BOUNDS_UPPER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value as size\"\n+\t\t\t       \" without lower-bounds checking\");\n+\t  break;\n+\tcase BOUNDS_LOWER:\n+\t  return warning_meta (rich_loc, m, get_controlling_option (),\n+\t\t\t       \"use of attacker-controlled value as size\"\n+\t\t\t       \" without upper-bounds checking\");\n+\t  break;\n+\t}\n   }\n \n   label_text describe_final_event (const evdesc::final_event &ev) final override\n   {\n-    switch (m_has_bounds)\n-      {\n-      default:\n-\tgcc_unreachable ();\n-      case BOUNDS_NONE:\n-\treturn ev.formatted_print (\"use of attacker-controlled value %qE\"\n-\t\t\t\t   \" as size without bounds checking\",\n-\t\t\t\t   m_arg);\n-      case BOUNDS_UPPER:\n-\treturn ev.formatted_print (\"use of attacker-controlled value %qE\"\n-\t\t\t\t   \" as size without lower-bounds checking\",\n-\t\t\t\t   m_arg);\n-      case BOUNDS_LOWER:\n-\treturn ev.formatted_print (\"use of attacker-controlled value %qE\"\n-\t\t\t\t   \" as size without upper-bounds checking\",\n-\t\t\t\t   m_arg);\n-      }\n+    if (m_arg)\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return ev.formatted_print (\"use of attacker-controlled value %qE\"\n+\t\t\t\t     \" as size without bounds checking\",\n+\t\t\t\t     m_arg);\n+\tcase BOUNDS_UPPER:\n+\t  return ev.formatted_print (\"use of attacker-controlled value %qE\"\n+\t\t\t\t     \" as size without lower-bounds checking\",\n+\t\t\t\t     m_arg);\n+\tcase BOUNDS_LOWER:\n+\t  return ev.formatted_print (\"use of attacker-controlled value %qE\"\n+\t\t\t\t     \" as size without upper-bounds checking\",\n+\t\t\t\t     m_arg);\n+\t}\n+    else\n+      switch (m_has_bounds)\n+\t{\n+\tdefault:\n+\t  gcc_unreachable ();\n+\tcase BOUNDS_NONE:\n+\t  return ev.formatted_print (\"use of attacker-controlled value\"\n+\t\t\t\t     \" as size without bounds checking\");\n+\tcase BOUNDS_UPPER:\n+\t  return ev.formatted_print (\"use of attacker-controlled value\"\n+\t\t\t\t     \" as size without lower-bounds checking\");\n+\tcase BOUNDS_LOWER:\n+\t  return ev.formatted_print (\"use of attacker-controlled value\"\n+\t\t\t\t     \" as size without upper-bounds checking\");\n+\t}\n   }\n };\n "}]}