{"sha": "3043b30ec807350898618ba9ea7d7fe1787f866f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0M2IzMGVjODA3MzUwODk4NjE4YmE5ZWE3ZDdmZTE3ODdmODY2Zg==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1999-12-07T22:00:33Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1999-12-07T22:00:33Z"}, "message": "invoke.texi (C Dialect Options): Remove -flang-c9x, add -std documentation.\n\n\t* invoke.texi (C Dialect Options): Remove -flang-c9x, add -std\n\tdocumentation.\n\nFrom-SVN: r30819", "tree": {"sha": "1037fbaab00fb364cff2bb25336375c3452483cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1037fbaab00fb364cff2bb25336375c3452483cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3043b30ec807350898618ba9ea7d7fe1787f866f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3043b30ec807350898618ba9ea7d7fe1787f866f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3043b30ec807350898618ba9ea7d7fe1787f866f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3043b30ec807350898618ba9ea7d7fe1787f866f/comments", "author": null, "committer": null, "parents": [{"sha": "0adea6647751bbe4bb4d17cb41c4e64e25f86eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adea6647751bbe4bb4d17cb41c4e64e25f86eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0adea6647751bbe4bb4d17cb41c4e64e25f86eb2"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "14ce3bbe27040edfd841e9640032e7a46e9ad5a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043b30ec807350898618ba9ea7d7fe1787f866f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043b30ec807350898618ba9ea7d7fe1787f866f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3043b30ec807350898618ba9ea7d7fe1787f866f", "patch": "@@ -1,3 +1,8 @@\n+1999-12-07  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* invoke.texi (C Dialect Options): Remove -flang-c9x, add -std\n+\tdocumentation.\n+\t\n 1999-12-06  David S. Miller  <davem@redhat.com>\n \n \t* combine.c (check_promoted_subreg): Do not conditionalize this\tupon"}, {"sha": "474f550f82bbd42f577672c0406865d2f2cd5a8c", "filename": "gcc/invoke.texi", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043b30ec807350898618ba9ea7d7fe1787f866f/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043b30ec807350898618ba9ea7d7fe1787f866f/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=3043b30ec807350898618ba9ea7d7fe1787f866f", "patch": "@@ -94,7 +94,7 @@ in the following sections.\n @item C Language Options\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n @smallexample\n--ansi -flang-isoc9x -fallow-single-precision  -fcond-mismatch  -fno-asm\n+-ansi -fstd  -fallow-single-precision  -fcond-mismatch  -fno-asm\n -fno-builtin  -ffreestanding  -fhosted  -fsigned-bitfields  -fsigned-char\n -funsigned-bitfields  -funsigned-char  -fwritable-strings\n -traditional  -traditional-cpp  -trigraphs\n@@ -693,14 +693,37 @@ programs that might use these names for other things.\n The functions @code{alloca}, @code{abort}, @code{exit}, and\n @code{_exit} are not builtin functions when @samp{-ansi} is used.\n \n-@item -flang-isoc9x\n-Enable support for features found in the C9X standard.  In particular,\n-enable support for the C9X @code{restrict} keyword.  \n+@item -fstd=\n+Determine the language standard.  A value for this option must be provided;\n+possible values are \n \n-Even when this option is not specified, you can still use some C9X\n-features in so far as they do not conflict with previous C standards.\n-For example, you may use @code{__restrict__} even when -flang-isoc9x\n-is not specified. \n+@itemize @minus\n+@item iso9899:1990\n+Same as -ansi\n+\n+@item iso9899:199409\n+ISO C as modified in amend. 1\n+\n+@item iso9899:199x\n+ISO C 9x\n+\n+@item c89\n+same as -std=iso9899:1990\n+\n+@item c9x\n+same as -std=iso9899:199x\n+\n+@item gnu89\n+default, iso9899:1990 + gnu extensions\n+\n+@item gnu9x\n+iso9899:199x + gnu extensions\n+@end itemize\n+\n+Even when this option is not specified, you can still use some of the\n+features of newer standards in so far as they do not conflict with\n+previous C standards.  For example, you may use @code{__restrict__} even\n+when -fstd=c9x is not specified.\n \n @item -fno-asm\n Do not recognize @code{asm}, @code{inline} or @code{typeof} as a"}]}