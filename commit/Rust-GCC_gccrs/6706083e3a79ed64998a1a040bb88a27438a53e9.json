{"sha": "6706083e3a79ed64998a1a040bb88a27438a53e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcwNjA4M2UzYTc5ZWQ2NDk5OGExYTA0MGJiODhhMjc0MzhhNTNlOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-08-07T19:50:59Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-08-07T19:50:59Z"}, "message": "c-decl.c (init_decl_processing): Make long long available to | use for SIZE_TYPE and PTRDIFF_TYPE.\n\n    * c-decl.c (init_decl_processing): Make long long available to\n|       use for SIZE_TYPE and PTRDIFF_TYPE.\n\nFrom-SVN: r5101", "tree": {"sha": "2b72ee757b345f5d0dacd597d451330abdfb84d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b72ee757b345f5d0dacd597d451330abdfb84d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6706083e3a79ed64998a1a040bb88a27438a53e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6706083e3a79ed64998a1a040bb88a27438a53e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6706083e3a79ed64998a1a040bb88a27438a53e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6706083e3a79ed64998a1a040bb88a27438a53e9/comments", "author": null, "committer": null, "parents": [{"sha": "09acc9edc7ec7fec2fa4c845f9297d34259cd04d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09acc9edc7ec7fec2fa4c845f9297d34259cd04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09acc9edc7ec7fec2fa4c845f9297d34259cd04d"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "55983f2f7cf93e5c12a07b37f8a419a4bf4c98b1", "filename": "gcc/c-decl.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6706083e3a79ed64998a1a040bb88a27438a53e9/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6706083e3a79ed64998a1a040bb88a27438a53e9/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=6706083e3a79ed64998a1a040bb88a27438a53e9", "patch": "@@ -2623,6 +2623,14 @@ init_decl_processing ()\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"long unsigned int\"),\n \t\t\tlong_unsigned_type_node));\n \n+  long_long_integer_type_node = make_signed_type (LONG_LONG_TYPE_SIZE);\n+  pushdecl (build_decl (TYPE_DECL, get_identifier (\"long long int\"),\n+\t\t\tlong_long_integer_type_node));\n+\n+  long_long_unsigned_type_node = make_unsigned_type (LONG_LONG_TYPE_SIZE);\n+  pushdecl (build_decl (TYPE_DECL, get_identifier (\"long long unsigned int\"),\n+\t\t\tlong_long_unsigned_type_node));\n+\n   /* `unsigned long' is the standard type for sizeof.\n      Traditionally, use a signed type.\n      Note that stddef.h uses `unsigned long',\n@@ -2640,6 +2648,8 @@ init_decl_processing ()\n   TREE_TYPE (TYPE_SIZE (unsigned_type_node)) = sizetype;\n   TREE_TYPE (TYPE_SIZE (long_unsigned_type_node)) = sizetype;\n   TREE_TYPE (TYPE_SIZE (long_integer_type_node)) = sizetype;\n+  TREE_TYPE (TYPE_SIZE (long_long_integer_type_node)) = sizetype;\n+  TREE_TYPE (TYPE_SIZE (long_long_unsigned_type_node)) = sizetype;\n \n   error_mark_node = make_node (ERROR_MARK);\n   TREE_TYPE (error_mark_node) = error_mark_node;\n@@ -2648,18 +2658,10 @@ init_decl_processing ()\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"short int\"),\n \t\t\tshort_integer_type_node));\n \n-  long_long_integer_type_node = make_signed_type (LONG_LONG_TYPE_SIZE);\n-  pushdecl (build_decl (TYPE_DECL, get_identifier (\"long long int\"),\n-\t\t\tlong_long_integer_type_node));\n-\n   short_unsigned_type_node = make_unsigned_type (SHORT_TYPE_SIZE);\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"short unsigned int\"),\n \t\t\tshort_unsigned_type_node));\n \n-  long_long_unsigned_type_node = make_unsigned_type (LONG_LONG_TYPE_SIZE);\n-  pushdecl (build_decl (TYPE_DECL, get_identifier (\"long long unsigned int\"),\n-\t\t\tlong_long_unsigned_type_node));\n-\n   /* Define both `signed char' and `unsigned char'.  */\n   signed_char_type_node = make_signed_type (CHAR_TYPE_SIZE);\n   pushdecl (build_decl (TYPE_DECL, get_identifier (\"signed char\"),"}]}