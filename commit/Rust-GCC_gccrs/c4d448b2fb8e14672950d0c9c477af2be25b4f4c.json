{"sha": "c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRkNDQ4YjJmYjhlMTQ2NzI5NTBkMGM5YzQ3N2FmMmJlMjViNGY0Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-03-13T18:23:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-03-13T18:23:26Z"}, "message": "postypes.h (fpos<>::operator==, operator!=): Remove, exploit conversion to streamoff.\n\n2006-03-13  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/postypes.h (fpos<>::operator==, operator!=): Remove,\n\texploit conversion to streamoff.\n\t* testsuite/27_io/fpos/mbstate_t/5.cc: New.\n\nFrom-SVN: r112018", "tree": {"sha": "7ce39280a1a6f4efa731fb30648c6bfdc251d739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ce39280a1a6f4efa731fb30648c6bfdc251d739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/comments", "author": null, "committer": null, "parents": [{"sha": "792e526bbd6cb9bfa3b7031ca885eeccb27a2a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/792e526bbd6cb9bfa3b7031ca885eeccb27a2a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/792e526bbd6cb9bfa3b7031ca885eeccb27a2a11"}], "stats": {"total": 74, "additions": 59, "deletions": 15}, "files": [{"sha": "d3ad981c639bc1798578df22038f6196196568af", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "patch": "@@ -1,3 +1,9 @@\n+006-03-13  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/postypes.h (fpos<>::operator==, operator!=): Remove,\n+\texploit conversion to streamoff.\n+\t* testsuite/27_io/fpos/mbstate_t/5.cc: New.\n+\n 2006-03-12  Howard Hinnant  <hhinnant@apple.com>\n \n \t* testsuite/27_io/basic_filebuf/underflow/char/10097.cc:"}, {"sha": "f1e75ac1d521b4494f361d5c7223be78eb256f9b", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "patch": "@@ -1,6 +1,6 @@\n // Position types -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -119,6 +119,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       /// Convert to streamoff.\n       operator streamoff() const { return _M_off; }\n \n+      // NB: Via conversion to streamoff, two fpos objects can be compared.\n+      // The standard only requires that operator== must be an equivalence\n+      // relation.  In this implementation two fpos objects belong to the\n+      // same equivalence class if the contained offsets compare equal.\n+\n       /// Remember the value of @a st.\n       void\n       state(_StateT __st)\n@@ -129,20 +134,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       state() const\n       { return _M_state; }\n \n-      // The standard only requires that operator== must be an\n-      // equivalence relation. In this implementation two fpos<StateT>\n-      // objects belong to the same equivalence class if the contained\n-      // offsets compare equal.\n-      /// Test if equivalent to another position.\n-      bool\n-      operator==(const fpos& __other) const\n-      { return _M_off == __other._M_off; }\n-\n-      /// Test if not equivalent to another position.\n-      bool\n-      operator!=(const fpos& __other) const\n-      { return _M_off != __other._M_off; }\n-\n       // The standard requires that this operator must be defined, but\n       // gives no semantics. In this implemenation it just adds it's\n       // argument to the stored offset and returns *this."}, {"sha": "c85b84236335e66133600ae8c1980c07f241e4e0", "filename": "libstdc++-v3/testsuite/27_io/fpos/mbstate_t/5.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4d448b2fb8e14672950d0c9c477af2be25b4f4c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F5.cc?ref=c4d448b2fb8e14672950d0c9c477af2be25b4f4c", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2006-03-13  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.4.3 template class fpos\n+\n+#include <ios>\n+\n+void test01()\n+{\n+  bool test01, test02;\n+\n+  std::streampos pos01(-1), pos02(0);\n+\n+  test01 = pos01 == -1;\n+  test01 = -1 == pos01;  \n+\n+  test02 = pos02 != -1;\n+  test02 = -1 != pos02;\n+}"}]}