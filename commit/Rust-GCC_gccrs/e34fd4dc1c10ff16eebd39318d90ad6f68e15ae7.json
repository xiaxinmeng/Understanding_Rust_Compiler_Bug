{"sha": "e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0ZmQ0ZGMxYzEwZmYxNmVlYmQzOTMxOGQ5MGFkNmY2OGUxNWFlNw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2017-06-01T13:50:03Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2017-06-01T13:50:03Z"}, "message": "Fix cross compilation to Solaris\n\n\t(GLIBCXX_CROSSCONFIG): Handle *-solaris* like *-linux* etc.\n\tRemove *-solaris* section.\n\t* configure: Regenerate.\n\nFrom-SVN: r248791", "tree": {"sha": "2d4cbe5f93ceb501427ce19db376303bd40b5387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4cbe5f93ceb501427ce19db376303bd40b5387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8638450abe8a406813652eae4f9e7b3cb3bece4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8638450abe8a406813652eae4f9e7b3cb3bece4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8638450abe8a406813652eae4f9e7b3cb3bece4"}], "stats": {"total": 190, "additions": 8, "deletions": 182}, "files": [{"sha": "dbbba5a17cb09784afeaa8360f2cdf004f328a1c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "patch": "@@ -1,3 +1,9 @@\n+2017-06-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t(GLIBCXX_CROSSCONFIG): Handle *-solaris* like *-linux* etc.\n+\tRemove *-solaris* section.\n+\t* configure: Regenerate.\n+\n 2017-05-31  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/80893"}, {"sha": "596869f4245218d9fc43e70b078510e3b608df87", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 165, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "patch": "@@ -53748,7 +53748,7 @@ $as_echo \"#define HAVE_TLS 1\" >>confdefs.h\n \t;;\n     esac\n     ;;\n-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin*)\n+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris*)\n \n   # All these tests are for C++; save the language and the compiler flags.\n   # The CXXFLAGS thing is suspicious, but based on similar bits previously\n@@ -72388,170 +72388,6 @@ done\n \n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n \n-    ;;\n-  *-solaris*)\n-\n-  # If we're not using GNU ld, then there's no point in even trying these\n-  # tests.  Check for that first.  We should have already tested for gld\n-  # by now (in libtool), but require it now just to be safe...\n-  test -z \"$SECTION_LDFLAGS\" && SECTION_LDFLAGS=''\n-  test -z \"$OPT_LDFLAGS\" && OPT_LDFLAGS=''\n-\n-\n-\n-  # The name set by libtool depends on the version of libtool.  Shame on us\n-  # for depending on an impl detail, but c'est la vie.  Older versions used\n-  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n-  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n-  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n-  # set (hence we're using an older libtool), then set it.\n-  if test x${with_gnu_ld+set} != xset; then\n-    if test x${ac_cv_prog_gnu_ld+set} != xset; then\n-      # We got through \"ac_require(ac_prog_ld)\" and still not set?  Huh?\n-      with_gnu_ld=no\n-    else\n-      with_gnu_ld=$ac_cv_prog_gnu_ld\n-    fi\n-  fi\n-\n-  # Start by getting the version number.  I think the libtool test already\n-  # does some of this, but throws away the result.\n-  glibcxx_ld_is_gold=no\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld version\" >&5\n-$as_echo_n \"checking for ld version... \" >&6; }\n-\n-    if $LD --version 2>/dev/null | grep 'GNU gold' >/dev/null 2>&1; then\n-      glibcxx_ld_is_gold=yes\n-    fi\n-    ldver=`$LD --version 2>/dev/null |\n-\t   sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n-\n-    glibcxx_gnu_ld_version=`echo $ldver | \\\n-\t   $AWK -F. '{ if (NF<3) $3=0; print ($1*100+$2)*100+$3 }'`\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_gnu_ld_version\" >&5\n-$as_echo \"$glibcxx_gnu_ld_version\" >&6; }\n-  fi\n-\n-  # Set --gc-sections.\n-  glibcxx_have_gc_sections=no\n-  if test \"$glibcxx_ld_is_gold\" = \"yes\"; then\n-    if $LD --help 2>/dev/null | grep gc-sections >/dev/null 2>&1; then\n-      glibcxx_have_gc_sections=yes\n-    fi\n-  else\n-    glibcxx_gcsections_min_ld=21602\n-    if test x\"$with_gnu_ld\" = x\"yes\" &&\n-\ttest $glibcxx_gnu_ld_version -gt $glibcxx_gcsections_min_ld ; then\n-      glibcxx_have_gc_sections=yes\n-    fi\n-  fi\n-  if test \"$glibcxx_have_gc_sections\" = \"yes\"; then\n-    # Sufficiently young GNU ld it is!  Joy and bunny rabbits!\n-    # NB: This flag only works reliably after 2.16.1. Configure tests\n-    # for this are difficult, so hard wire a value that should work.\n-\n-    ac_test_CFLAGS=\"${CFLAGS+set}\"\n-    ac_save_CFLAGS=\"$CFLAGS\"\n-    CFLAGS='-Wl,--gc-sections'\n-\n-    # Check for -Wl,--gc-sections\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,--gc-sections\" >&5\n-$as_echo_n \"checking for ld that supports -Wl,--gc-sections... \" >&6; }\n-    if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n- int one(void) { return 1; }\n-     int two(void) { return 2; }\n-\n-int\n-main ()\n-{\n- two();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_gcsections=yes\n-else\n-  ac_gcsections=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-    if test \"$ac_gcsections\" = \"yes\"; then\n-      rm -f conftest.c\n-      touch conftest.c\n-      if $CC -c conftest.c; then\n-\tif $LD --gc-sections -o conftest conftest.o 2>&1 | \\\n-\t   grep \"Warning: gc-sections option ignored\" > /dev/null; then\n-\t  ac_gcsections=no\n-\tfi\n-      fi\n-      rm -f conftest.c conftest.o conftest\n-    fi\n-    if test \"$ac_gcsections\" = \"yes\"; then\n-      SECTION_LDFLAGS=\"-Wl,--gc-sections $SECTION_LDFLAGS\"\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_gcsections\" >&5\n-$as_echo \"$ac_gcsections\" >&6; }\n-\n-    if test \"$ac_test_CFLAGS\" = set; then\n-      CFLAGS=\"$ac_save_CFLAGS\"\n-    else\n-      # this is the suspicious part\n-      CFLAGS=''\n-    fi\n-  fi\n-\n-  # Set -z,relro.\n-  # Note this is only for shared objects.\n-  ac_ld_relro=no\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-z,relro\" >&5\n-$as_echo_n \"checking for ld that supports -Wl,-z,relro... \" >&6; }\n-    cxx_z_relo=`$LD -v --help 2>/dev/null | grep \"z relro\"`\n-    if test -n \"$cxx_z_relo\"; then\n-      OPT_LDFLAGS=\"-Wl,-z,relro\"\n-      ac_ld_relro=yes\n-    fi\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ld_relro\" >&5\n-$as_echo \"$ac_ld_relro\" >&6; }\n-  fi\n-\n-  # Set linker optimization flags.\n-  if test x\"$with_gnu_ld\" = x\"yes\"; then\n-    OPT_LDFLAGS=\"-Wl,-O1 $OPT_LDFLAGS\"\n-  fi\n-\n-\n-\n-\n-    $as_echo \"#define HAVE_MBSTATE_T 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_FINITE 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_FPCLASS 1\" >>confdefs.h\n-\n-    # All of the dependencies for wide character support are here, so\n-    # turn it on.\n-    $as_echo \"#define _GLIBCXX_USE_WCHAR_T 1\" >>confdefs.h\n-\n-    # These two C99 functions are present only in Solaris >= 10\n-    $as_echo \"#define HAVE_STRTOF 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_STRTOLD 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_ISNAN 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_ISNANF 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_MODFF 1\" >>confdefs.h\n-\n-    $as_echo \"#define HAVE_HYPOT 1\" >>confdefs.h\n-\n     ;;\n   *-tpf)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'"}, {"sha": "a8b1da9a6071c2f305c77cabca075fc4434f132d", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=e34fd4dc1c10ff16eebd39318d90ad6f68e15ae7", "patch": "@@ -182,7 +182,7 @@ case \"${host}\" in\n \t;;\n     esac\n     ;;\n-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin*)\n+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris*)\n     GLIBCXX_CHECK_COMPILER_FEATURES\n     GLIBCXX_CHECK_LINKER_FEATURES\n     GLIBCXX_CHECK_MATH_SUPPORT\n@@ -239,22 +239,6 @@ case \"${host}\" in\n     GLIBCXX_CHECK_MATH_SUPPORT\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n     ;;\n-  *-solaris*)\n-    GLIBCXX_CHECK_LINKER_FEATURES\n-    AC_DEFINE(HAVE_MBSTATE_T)\n-    AC_DEFINE(HAVE_FINITE)\n-    AC_DEFINE(HAVE_FPCLASS)\n-    # All of the dependencies for wide character support are here, so\n-    # turn it on. \n-    AC_DEFINE(_GLIBCXX_USE_WCHAR_T) \n-    # These two C99 functions are present only in Solaris >= 10\n-    AC_DEFINE(HAVE_STRTOF)\n-    AC_DEFINE(HAVE_STRTOLD)\n-    AC_DEFINE(HAVE_ISNAN)\n-    AC_DEFINE(HAVE_ISNANF)\n-    AC_DEFINE(HAVE_MODFF)\n-    AC_DEFINE(HAVE_HYPOT)\n-    ;;\n   *-tpf)\n     SECTION_FLAGS='-ffunction-sections -fdata-sections'\n     SECTION_LDFLAGS='-Wl,--gc-sections $SECTION_LDFLAGS'"}]}