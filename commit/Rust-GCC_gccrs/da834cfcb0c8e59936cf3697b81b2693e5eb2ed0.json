{"sha": "da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE4MzRjZmNiMGM4ZTU5OTM2Y2YzNjk3YjgxYjI2OTNlNWViMmVkMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-23T03:47:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-23T03:47:35Z"}, "message": "re PR c++/56930 (pointless -Wconversion warning with sizeof)\n\n\tPR c++/56930\n\t* call.c (convert_like_real): Use cp_convert_and_check.\n\t* cvt.c (cp_convert_and_check): Use maybe_constant_value.\n\t* semantics.c (cxx_eval_constant_expression): Handle LTGT_EXPR.\n\t(potential_constant_expression_1): Handle OMP_ATOMIC*.\n\nFrom-SVN: r199232", "tree": {"sha": "f559f205ee21dd8d310cbaaaf0b783b7b4d16527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f559f205ee21dd8d310cbaaaf0b783b7b4d16527"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2701664a0266af935d5fea7c5586a5686fe32365", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2701664a0266af935d5fea7c5586a5686fe32365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2701664a0266af935d5fea7c5586a5686fe32365"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "7025f34102466132bcdf906e530cba2c73e78b38", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "patch": "@@ -1,5 +1,11 @@\n 2013-05-22  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56930\n+\t* call.c (convert_like_real): Use cp_convert_and_check.\n+\t* cvt.c (cp_convert_and_check): Use maybe_constant_value.\n+\t* semantics.c (cxx_eval_constant_expression): Handle LTGT_EXPR.\n+\t(potential_constant_expression_1): Handle OMP_ATOMIC*.\n+\n \tPR c++/56915\n \t* semantics.c (maybe_add_lambda_conv_op): Give up if the call op\n \tisn't defined."}, {"sha": "0b6a83f344549468468bf7e0ced6006b5205adc6", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "patch": "@@ -6199,10 +6199,10 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n   if (convs->check_narrowing)\n     check_narrowing (totype, expr);\n \n-  if (issue_conversion_warnings && (complain & tf_warning))\n-    expr = convert_and_check (totype, expr);\n+  if (issue_conversion_warnings)\n+    expr = cp_convert_and_check (totype, expr, complain);\n   else\n-    expr = convert (totype, expr);\n+    expr = cp_convert (totype, expr, complain);\n \n   return expr;\n }"}, {"sha": "d9e905e35040784b2019ebee09e9f3b65f9e8b5f", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "patch": "@@ -624,10 +624,20 @@ cp_convert_and_check (tree type, tree expr, tsubst_flags_t complain)\n   result = cp_convert (type, expr, complain);\n \n   if ((complain & tf_warning)\n-      && c_inhibit_evaluation_warnings == 0\n-      && !TREE_OVERFLOW_P (expr)\n-      && result != error_mark_node)\n-    warnings_for_convert_and_check (type, expr, result);\n+      && c_inhibit_evaluation_warnings == 0)\n+    {\n+      tree folded = maybe_constant_value (expr);\n+      tree stripped = folded;\n+      tree folded_result = cp_convert (type, folded, complain);\n+\n+      /* maybe_constant_value wraps an INTEGER_CST with TREE_OVERFLOW in a\n+\t NOP_EXPR so that it isn't TREE_CONSTANT anymore.  */\n+      STRIP_NOPS (stripped);\n+\n+      if (!TREE_OVERFLOW_P (stripped)\n+\t  && folded_result != error_mark_node)\n+\twarnings_for_convert_and_check (type, folded, folded_result);\n+    }\n \n   return result;\n }"}, {"sha": "c115d23bcd9ef1aac87067f3caa5740401944341", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "patch": "@@ -8045,6 +8045,7 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n     case UNGT_EXPR:\n     case UNGE_EXPR:\n     case UNEQ_EXPR:\n+    case LTGT_EXPR:\n     case RANGE_EXPR:\n     case COMPLEX_EXPR:\n       r = cxx_eval_binary_expression (call, t, allow_non_constant, addr,\n@@ -8620,6 +8621,10 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n     case THROW_EXPR:\n     case MODIFY_EXPR:\n     case MODOP_EXPR:\n+    case OMP_ATOMIC:\n+    case OMP_ATOMIC_READ:\n+    case OMP_ATOMIC_CAPTURE_OLD:\n+    case OMP_ATOMIC_CAPTURE_NEW:\n       /* GCC internal stuff.  */\n     case VA_ARG_EXPR:\n     case OBJ_TYPE_REF:"}, {"sha": "1d143906db56fb06003a2d4f7e900990dd29a902", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist71.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da834cfcb0c8e59936cf3697b81b2693e5eb2ed0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist71.C?ref=da834cfcb0c8e59936cf3697b81b2693e5eb2ed0", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/56930\n+// { dg-require-effective-target c++11 }\n+// { dg-options -Wconversion }\n+\n+int main()\n+{\n+  int x = sizeof(int);\n+  int y { sizeof(int) };\n+}\n+"}]}