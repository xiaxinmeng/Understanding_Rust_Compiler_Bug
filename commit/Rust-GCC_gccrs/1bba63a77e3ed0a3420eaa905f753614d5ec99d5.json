{"sha": "1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiYTYzYTc3ZTNlZDBhMzQyMGVhYTkwNWY3NTM2MTRkNWVjOTlkNQ==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2016-05-30T18:13:12Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2016-05-30T18:13:12Z"}, "message": "Don't cause ICEs when auto profile file is not found with checking\n\nCurrently, on a checking enabled compiler when -fauto-profile does\nnot find the profile feedback file it errors out with assertation\nfailures. Add proper errors for this case.\n\ngcc/:\n\n2016-05-30  Andi Kleen  <ak@linux.intel.com>\n\n\t* auto-profile.c (read_profile): Replace asserts with errors\n\twhen file does not exist.\n\t* gcov-io.c (gcov_read_words): Dito.\n\nFrom-SVN: r236894", "tree": {"sha": "1985bc8a06c27e925e000ac5e9c9b1bc6053499a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1985bc8a06c27e925e000ac5e9c9b1bc6053499a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/comments", "author": null, "committer": null, "parents": [{"sha": "53803093d096611166267de1390d0318592944e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53803093d096611166267de1390d0318592944e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53803093d096611166267de1390d0318592944e2"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "c6a32261af83ba8cd026606b7f8d37e79dc46ac1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "patch": "@@ -1,3 +1,9 @@\n+2016-05-30  Andi Kleen  <ak@linux.intel.com>\n+\n+\t* auto-profile.c (read_profile): Replace asserts with errors\n+\twhen file does not exist.\n+\t* gcov-io.c (gcov_read_words): Dito.\n+\n 2016-05-30  Jan Hubicka  <hubicka@ucw.cz>\n \t\n \t* tree-cfg.c (print_loop): Print likely upper bounds."}, {"sha": "00b3687e9968920b15575f44081be10290c97b08", "filename": "gcc/auto-profile.c", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/gcc%2Fauto-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/gcc%2Fauto-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.c?ref=1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "patch": "@@ -884,36 +884,54 @@ static void\n read_profile (void)\n {\n   if (gcov_open (auto_profile_file, 1) == 0)\n-    error (\"Cannot open profile file %s.\", auto_profile_file);\n+    {\n+      error (\"Cannot open profile file %s.\", auto_profile_file);\n+      return;\n+    }\n \n   if (gcov_read_unsigned () != GCOV_DATA_MAGIC)\n-    error (\"AutoFDO profile magic number does not mathch.\");\n+    {\n+      error (\"AutoFDO profile magic number does not match.\");\n+      return;\n+    }\n \n   /* Skip the version number.  */\n   unsigned version = gcov_read_unsigned ();\n   if (version != AUTO_PROFILE_VERSION)\n-    error (\"AutoFDO profile version %u does match %u.\",\n-           version, AUTO_PROFILE_VERSION);\n+    {\n+      error (\"AutoFDO profile version %u does match %u.\",\n+\t     version, AUTO_PROFILE_VERSION);\n+      return;\n+    }\n \n   /* Skip the empty integer.  */\n   gcov_read_unsigned ();\n \n   /* string_table.  */\n   afdo_string_table = new string_table ();\n   if (!afdo_string_table->read())\n-    error (\"Cannot read string table from %s.\", auto_profile_file);\n+    {\n+      error (\"Cannot read string table from %s.\", auto_profile_file);\n+      return;\n+    }\n \n   /* autofdo_source_profile.  */\n   afdo_source_profile = autofdo_source_profile::create ();\n   if (afdo_source_profile == NULL)\n-    error (\"Cannot read function profile from %s.\", auto_profile_file);\n+    {\n+      error (\"Cannot read function profile from %s.\", auto_profile_file);\n+      return;\n+    }\n \n   /* autofdo_module_profile.  */\n   fake_read_autofdo_module_profile ();\n \n   /* Read in the working set.  */\n   if (gcov_read_unsigned () != GCOV_TAG_AFDO_WORKING_SET)\n-    error (\"Cannot read working set from %s.\", auto_profile_file);\n+    {\n+      error (\"Cannot read working set from %s.\", auto_profile_file);\n+      return;\n+    }\n \n   /* Skip the length of the section.  */\n   gcov_read_unsigned ();"}, {"sha": "95ead227825a8c4edac53c67e33bc01c6cd4df30", "filename": "gcc/gcov-io.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/gcc%2Fgcov-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bba63a77e3ed0a3420eaa905f753614d5ec99d5/gcc%2Fgcov-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.c?ref=1bba63a77e3ed0a3420eaa905f753614d5ec99d5", "patch": "@@ -493,7 +493,9 @@ gcov_read_words (unsigned words)\n   const gcov_unsigned_t *result;\n   unsigned excess = gcov_var.length - gcov_var.offset;\n \n-  gcov_nonruntime_assert (gcov_var.mode > 0);\n+  if (gcov_var.mode <= 0)\n+    return NULL;\n+\n   if (excess < words)\n     {\n       gcov_var.start += gcov_var.offset;"}]}