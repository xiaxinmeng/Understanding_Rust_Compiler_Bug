{"sha": "b4838d2947d68ae454f83df6ec71e1e03fbb8408", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4MzhkMjk0N2Q2OGFlNDU0ZjgzZGY2ZWM3MWUxZTAzZmJiODQwOA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-05-17T20:05:07Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-05-17T20:05:07Z"}, "message": "trans-types.c (gfc_array_range_type): New variable.\n\n\t* trans-types.c (gfc_array_range_type): New variable.\n\t(gfc_init_types): Initialize gfc_array_range_type.\n\t(gfc_get_array_type_bounds): Use gfc_array_range_type.\n\nFrom-SVN: r99854", "tree": {"sha": "1617c4b6661e4fbf4472e78eac60fa8dafd855f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1617c4b6661e4fbf4472e78eac60fa8dafd855f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4838d2947d68ae454f83df6ec71e1e03fbb8408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4838d2947d68ae454f83df6ec71e1e03fbb8408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4838d2947d68ae454f83df6ec71e1e03fbb8408", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4838d2947d68ae454f83df6ec71e1e03fbb8408/comments", "author": null, "committer": null, "parents": [{"sha": "d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "6e0a73b5d5954b7048b17550e93ebb501cdebbdc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4838d2947d68ae454f83df6ec71e1e03fbb8408/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4838d2947d68ae454f83df6ec71e1e03fbb8408/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b4838d2947d68ae454f83df6ec71e1e03fbb8408", "patch": "@@ -1,3 +1,9 @@\n+2005-05-17  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* trans-types.c (gfc_array_range_type): New variable.\n+\t(gfc_init_types): Initialize gfc_array_range_type.\n+\t(gfc_get_array_type_bounds): Use gfc_array_range_type.\n+\n 2005-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/15080"}, {"sha": "a70784cbf3c4fc6cf30563ac683b993be9464fd3", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4838d2947d68ae454f83df6ec71e1e03fbb8408/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4838d2947d68ae454f83df6ec71e1e03fbb8408/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=b4838d2947d68ae454f83df6ec71e1e03fbb8408", "patch": "@@ -50,6 +50,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n static tree gfc_get_derived_type (gfc_symbol * derived);\n \n tree gfc_array_index_type;\n+tree gfc_array_range_type;\n tree pvoid_type_node;\n tree ppvoid_type_node;\n tree pchar_type_node;\n@@ -528,6 +529,12 @@ gfc_init_types (void)\n   pchar_type_node = build_pointer_type (gfc_character1_type_node);\n \n   gfc_array_index_type = gfc_get_int_type (gfc_index_integer_kind);\n+  /* We cannot use gfc_index_zero_node in definition of gfc_array_range_type,\n+     since this function is called before gfc_init_constants.  */\n+  gfc_array_range_type\n+\t  = build_range_type (gfc_array_index_type,\n+\t\t\t      build_int_cst (gfc_array_index_type, 0),\n+\t\t\t      NULL_TREE);\n \n   /* The maximum array element size that can be handled is determined\n      by the number of bits available to store this field in the array\n@@ -1182,9 +1189,7 @@ gfc_get_array_type_bounds (tree etype, int dimen, tree * lbound,\n   /* We define data as an unknown size array. Much better than doing\n      pointer arithmetic.  */\n   arraytype =\n-    build_array_type (etype,\n-\t\t      build_range_type (gfc_array_index_type,\n-\t\t\t\t\tgfc_index_zero_node, NULL_TREE));\n+    build_array_type (etype, gfc_array_range_type);\n   arraytype = build_pointer_type (arraytype);\n   GFC_TYPE_ARRAY_DATAPTR_TYPE (fat_type) = arraytype;\n "}]}