{"sha": "7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NjYjFhMTFlNWE4ZGViZTU2ODlkNmQxNDlhOTQxNzVjN2ZlOWFlMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-03-10T06:38:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-03-10T06:38:57Z"}, "message": "re PR c/65120 (Wlogical-not-parentheses should not warn about double exclamation !!)\n\n\tPR c/65120\n\t* c-common.c (warn_logical_not_parentheses): Don't warn for\n\t!x == 0 or !x != 0.\n\n\t* c-typeck.c (parser_build_binary_op): Check for tcc_comparison\n\tbefore preparing arguments to warn_logical_not_parentheses.\n\n\t* parser.c (cp_parser_binary_expression): Check for tcc_comparison\n\tbefore preparing arguments to warn_logical_not_parentheses.\n\tUse maybe_constant_value on rhs.\n\n\t* c-c++-common/pr49706.c (fn2): Don't expect warning if enumerator\n\ton rhs is 0.\n\t(fn4): New test.\n\t* c-c++-common/pr65120.c: New test.\n\nFrom-SVN: r221299", "tree": {"sha": "af3e28b78c0d8a3c890506ce8948602e57219233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af3e28b78c0d8a3c890506ce8948602e57219233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26d83bccd1ed42a08b5940ba73742537b81efa2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d83bccd1ed42a08b5940ba73742537b81efa2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d83bccd1ed42a08b5940ba73742537b81efa2b"}], "stats": {"total": 96, "additions": 93, "deletions": 3}, "files": [{"sha": "3420c96aff12e566831a085118bb1152be70bb5b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -1,3 +1,9 @@\n+2015-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/65120\n+\t* c-common.c (warn_logical_not_parentheses): Don't warn for\n+\t!x == 0 or !x != 0.\n+\n 2015-03-07  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/65280"}, {"sha": "7e84eb194b21607154c7c6deb69a69fd07a741b6", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -1800,6 +1800,12 @@ warn_logical_not_parentheses (location_t location, enum tree_code code,\n       || TREE_CODE (TREE_TYPE (rhs)) == BOOLEAN_TYPE)\n     return;\n \n+  /* Don't warn for !x == 0 or !y != 0, those are equivalent to\n+     !(x == 0) or !(y != 0).  */\n+  if ((code == EQ_EXPR || code == NE_EXPR)\n+      && integer_zerop (rhs))\n+    return;\n+\n   warning_at (location, OPT_Wlogical_not_parentheses,\n \t      \"logical not is only applied to the left hand side of \"\n \t      \"comparison\");"}, {"sha": "c15b86f5540b2990416340aa03d2fdd0beb49d50", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -1,3 +1,9 @@\n+2015-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/65120\n+\t* c-typeck.c (parser_build_binary_op): Check for tcc_comparison\n+\tbefore preparing arguments to warn_logical_not_parentheses.\n+\n 2015-03-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/65120"}, {"sha": "ebe4c7358917c5843b77fca4d69576281e29c5be", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -3459,6 +3459,7 @@ parser_build_binary_op (location_t location, enum tree_code code,\n \t\t\t   code1, arg1.value, code2, arg2.value);\n \n   if (warn_logical_not_paren\n+      && TREE_CODE_CLASS (code) == tcc_comparison\n       && code1 == TRUTH_NOT_EXPR\n       && code2 != TRUTH_NOT_EXPR\n       /* Avoid warning for !!x == y.  */"}, {"sha": "d354e07d2792d802b579d9c80350484db2e6611d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -1,3 +1,10 @@\n+2015-03-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/65120\n+\t* parser.c (cp_parser_binary_expression): Check for tcc_comparison\n+\tbefore preparing arguments to warn_logical_not_parentheses.\n+\tUse maybe_constant_value on rhs.\n+\n 2015-03-09  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/65339"}, {"sha": "ad132b1850f2a10509661e3c61a5dbb6e9fb1265", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -8270,6 +8270,7 @@ cp_parser_binary_expression (cp_parser* parser, bool cast_p,\n \tc_inhibit_evaluation_warnings -= current.lhs == truthvalue_true_node;\n \n       if (warn_logical_not_paren\n+\t  && TREE_CODE_CLASS (current.tree_type) == tcc_comparison\n \t  && current.lhs_type == TRUTH_NOT_EXPR\n \t  /* Avoid warning for !!x == y.  */\n \t  && (TREE_CODE (current.lhs) != NE_EXPR\n@@ -8284,7 +8285,8 @@ cp_parser_binary_expression (cp_parser* parser, bool cast_p,\n \t  && (!DECL_P (current.lhs)\n \t      || TREE_TYPE (current.lhs) == NULL_TREE\n \t      || TREE_CODE (TREE_TYPE (current.lhs)) != BOOLEAN_TYPE))\n-\twarn_logical_not_parentheses (current.loc, current.tree_type, rhs);\n+\twarn_logical_not_parentheses (current.loc, current.tree_type,\n+\t\t\t\t      maybe_constant_value (rhs));\n \n       overload = NULL;\n       /* ??? Currently we pass lhs_type == ERROR_MARK and rhs_type =="}, {"sha": "8c087eda1f62c77bee991788fc3ae6a18611ca66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -1,5 +1,11 @@\n 2015-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/65120\n+\t* c-c++-common/pr49706.c (fn2): Don't expect warning if enumerator\n+\ton rhs is 0.\n+\t(fn4): New test.\n+\t* c-c++-common/pr65120.c: New test.\n+\n \tPR rtl-optimization/65321\n \t* gcc.dg/pr65321.c: New test.\n "}, {"sha": "56272add7da3472ba044941a6badbca423ee3904", "filename": "gcc/testsuite/c-c++-common/pr49706.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr49706.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr49706.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr49706.c?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -107,9 +107,9 @@ fn2 (enum E e)\n   b = foo_e () == A;\n   b = foo_e () == foo_e ();\n \n-  b = !e == A; /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  b = !e == A;\n   b = !e == foo_e (); /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n-  b = !foo_e () == A; /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  b = !foo_e () == A;\n   b = !foo_e () == foo_e (); /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n \n   b = !(e == A);\n@@ -163,3 +163,27 @@ fn3 (int i1, float f2)\n   b = !!i1 <= f2; /* { dg-bogus \"logical not is only applied to the left hand side of comparison\" } */\n   b = !!i1 >= f2; /* { dg-bogus \"logical not is only applied to the left hand side of comparison\" } */\n }\n+\n+void\n+fn4 (enum E e)\n+{\n+  b = e == A;\n+  b = e == foo_e ();\n+  b = foo_e () == B;\n+  b = foo_e () == foo_e ();\n+\n+  b = !e == B; /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  b = !e == foo_e (); /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  b = !foo_e () == B; /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  b = !foo_e () == foo_e (); /* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+\n+  b = !(e == B);\n+  b = !(e == foo_e ());\n+  b = !(foo_e () == B);\n+  b = !(foo_e () == foo_e ());\n+\n+  b = (!e) == B;\n+  b = (!e) == foo_e ();\n+  b = (!foo_e ()) == B;\n+  b = (!foo_e ()) == foo_e ();\n+}"}, {"sha": "c9c1f5f7e659a4dfeebc2c3878cabd96da0107d5", "filename": "gcc/testsuite/c-c++-common/pr65120.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr65120.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr65120.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr65120.c?ref=7ccb1a11e5a8debe5689d6d149a94175c7fe9ae2", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wlogical-not-parentheses\" } */\n+\n+/* Test that we don't warn if rhs is 0 and comparison is == or !=.  */\n+\n+#ifndef __cplusplus\n+#define bool _Bool\n+#endif\n+\n+bool r;\n+\n+int\n+f1 (int a)\n+{\n+  r = !a == 0;\n+  r = !a != 0;\n+  r = !a == 1;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a != 1;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+}\n+\n+int\n+f2 (int a)\n+{\n+  r = !a > 0;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a >= 0;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a < 0;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a <= 0;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a > 1;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a >= 1;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a < 1;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+  r = !a <= 1;\t/* { dg-warning \"logical not is only applied to the left hand side of comparison\" } */\n+}"}]}