{"sha": "006946e43ead0b242131cdcf2f5dc844d0be2f78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA2OTQ2ZTQzZWFkMGIyNDIxMzFjZGNmMmY1ZGM4NDRkMGJlMmY3OA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2002-01-15T20:20:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-01-15T20:20:24Z"}, "message": "system.h (ASM_IDENTIFY_GCC, [...]): Poison.\n\n\t* system.h (ASM_IDENTIFY_GCC, STDC_VALUE, TRAMPOLINE_ALIGN,\n\tASM_IDENTIFY_GCC_AFTER_SOURCE): Poison.\n\t* config/pdp11/pdp11.h (TRAMPOLINE_ALIGN): Rename to\n\tTRAMPOLINE_ALIGNMENT.\n\t* config/arm/arm.h, config/mcore/mcore.h: Likewise.  Change value\n\tto be in bits.\n\t* config/i386/cygwin.h (PCC_BITFIELDS_TYPE_MATTERS): Rename to\n\tPCC_BITFIELD_TYPE_MATTERS.\n\t* config/interix.h (STDC_VALUE): Remove.  Use\n\tSTDC_0_IN_SYSTEM_HEADERS.\n\t* config/darwin.h (ASM_IDENTIFY_GCC), config/dsp16xx/dsp16xx.h\n\t(ASM_IDENTIFY_GCC), config/stormy16/stormy16.h (ASM_IDENTIFY_GCC,\n\tASM_IDENTIFY_GCC_AFTER_SOURCE): Remove.\n\nFrom-SVN: r48877", "tree": {"sha": "171b09c4e573a924fe8b17654d694df550567f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171b09c4e573a924fe8b17654d694df550567f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/006946e43ead0b242131cdcf2f5dc844d0be2f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006946e43ead0b242131cdcf2f5dc844d0be2f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/006946e43ead0b242131cdcf2f5dc844d0be2f78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/006946e43ead0b242131cdcf2f5dc844d0be2f78/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "441f52642d3247e9ee95f2608f94b4533bcde168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441f52642d3247e9ee95f2608f94b4533bcde168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441f52642d3247e9ee95f2608f94b4533bcde168"}], "stats": {"total": 75, "additions": 31, "deletions": 44}, "files": [{"sha": "37befc6e27313b3d8501d9b4d2621ae17d5d7d0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -1,3 +1,19 @@\n+2002-01-15  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* system.h (ASM_IDENTIFY_GCC, STDC_VALUE, TRAMPOLINE_ALIGN,\n+\tASM_IDENTIFY_GCC_AFTER_SOURCE): Poison.\n+\t* config/pdp11/pdp11.h (TRAMPOLINE_ALIGN): Rename to\n+\tTRAMPOLINE_ALIGNMENT.\n+\t* config/arm/arm.h, config/mcore/mcore.h: Likewise.  Change value\n+\tto be in bits.\n+\t* config/i386/cygwin.h (PCC_BITFIELDS_TYPE_MATTERS): Rename to\n+\tPCC_BITFIELD_TYPE_MATTERS.\n+\t* config/interix.h (STDC_VALUE): Remove.  Use\n+\tSTDC_0_IN_SYSTEM_HEADERS.\n+\t* config/darwin.h (ASM_IDENTIFY_GCC), config/dsp16xx/dsp16xx.h\n+\t(ASM_IDENTIFY_GCC), config/stormy16/stormy16.h (ASM_IDENTIFY_GCC,\n+\tASM_IDENTIFY_GCC_AFTER_SOURCE): Remove.\n+\n 2002-01-15  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n \n \t* doc/install.texi (hppa*-hp-hpux11): --enable-threads does"}, {"sha": "ef07ceae8ab5ab4341afcbee902a73cb35af6bfc", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -1769,8 +1769,8 @@ typedef struct\n /* Length in units of the trampoline for entering a nested function.  */\n #define TRAMPOLINE_SIZE  (TARGET_ARM ? 16 : 24)\n \n-/* Alignment required for a trampoline in units.  */\n-#define TRAMPOLINE_ALIGN  4\n+/* Alignment required for a trampoline in bits.  */\n+#define TRAMPOLINE_ALIGNMENT  32\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code."}, {"sha": "05ca85bdb8c96f77b0e4f5784e751fa0e7a14f2d", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for Darwin (Mac OS X) systems.\n-   Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001\n+   Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n@@ -150,12 +150,6 @@ do { text_section ();\t\t\t\t\t\t\t\\\n \n #define NO_PROFILE_COUNTERS\n \n-/* Don't use .gcc_compiled symbols to communicate with GDB;\n-   They interfere with numerically sorted symbol lists. */\n-\n-#undef\tASM_IDENTIFY_GCC\n-#define ASM_IDENTIFY_GCC(asm_out_file)\n-\n #undef\tINIT_SECTION_ASM_OP\n #define INIT_SECTION_ASM_OP\n "}, {"sha": "a2370cfb4ab54f1293429f0a818038bfe7c5a89e", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -1620,9 +1620,6 @@ const_section ()                                                   \\\n /* Output at beginning of assembler file.  */\n #define ASM_FILE_START(FILE) coff_dsp16xx_file_start (FILE) \n \n-/* Prevent output of .gcc_compiled */\n-#define ASM_IDENTIFY_GCC(FILE)   \n-\n /* A C string constant describing how to begin a comment in the target\n    assembler language.  */\n #define ASM_COMMENT_START \"\""}, {"sha": "2a812a5ff4dfce7943b69902fcc3eb7af6123f0b", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC for\n    hosting on Windows32, using a Unix style C library and tools.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n    Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -458,8 +458,8 @@ extern int i386_pe_dllimport_name_p PARAMS ((const char *));\n #define BIGGEST_FIELD_ALIGNMENT 64\n \n /* A bitfield declared as `int' forces `int' alignment for the struct.  */\n-#undef PCC_BITFIELDS_TYPE_MATTERS\n-#define PCC_BITFIELDS_TYPE_MATTERS 1\n+#undef PCC_BITFIELD_TYPE_MATTERS\n+#define PCC_BITFIELD_TYPE_MATTERS 1\n #define GROUP_BITFIELDS_BY_ALIGN TYPE_NATIVE(rec)\n \n "}, {"sha": "778c9ae74733e2c4503621e7c31a6179577ec8d5", "filename": "gcc/config/interix.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Finterix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Finterix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finterix.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -83,8 +83,7 @@ for windows/multi thread */\n \n #endif /* 0 */\n \n-#undef STDC_VALUE\n-#define STDC_VALUE 0\n+#define STDC_0_IN_SYSTEM_HEADERS 1\n \n #define HANDLE_SYSV_PRAGMA\n #undef HANDLE_PRAGMA_WEAK  /* until the link format can handle it */"}, {"sha": "9ab8551e004cf8340c771f390a54a19fd444cf91", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -826,8 +826,8 @@ extern const enum reg_class reg_class_from_letter[];\n /* Length in units of the trampoline for entering a nested function.  */\n #define TRAMPOLINE_SIZE  12\n \n-/* Alignment required for a trampoline in units.  */\n-#define TRAMPOLINE_ALIGN  4\n+/* Alignment required for a trampoline in bits.  */\n+#define TRAMPOLINE_ALIGNMENT  32\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code."}, {"sha": "30bb630c2cb09860d00557fc927c518d50e4a90e", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -1200,7 +1200,7 @@ JMP\tFUNCTION\t0x0058  0x0000 <- FUNCTION\n }\n \n #define TRAMPOLINE_SIZE 8\n-#define TRAMPOLINE_ALIGN 16\n+#define TRAMPOLINE_ALIGNMENT 16\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code."}, {"sha": "4b125a751b70cd69f91c7a5539481c308043e61c", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -3444,28 +3444,6 @@ do {\t\t\t\t\t\t\t\\\n    Defined in svr4.h.  */\n /* #define ASM_FILE_END(STREAM) */\n \n-/* A C statement to output assembler commands which will identify the object\n-   file as having been compiled with GNU CC (or another GNU compiler).\n-\n-   If you don't define this macro, the string `gcc_compiled.:' is output.  This\n-   string is calculated to define a symbol which, on BSD systems, will never be\n-   defined for any other reason.  GDB checks for the presence of this symbol\n-   when reading the symbol table of an executable.\n-\n-   On non-BSD systems, you must arrange communication with GDB in some other\n-   fashion.  If GDB is not used on your system, you can define this macro with\n-   an empty body.\n-\n-   Defined in svr4.h.  */\n-/* #define ASM_IDENTIFY_GCC(FILE) */\n-\n-/* Like ASM_IDENTIFY_GCC, but used when dbx debugging is selected to emit\n-   a stab the debugger uses to identify gcc as the compiler that is emitted\n-   after the stabs for the filename, which makes it easier for GDB to parse.\n-\n-   Defined in svr4.h.  */\n-/* #define ASM_IDENTIFY_GCC_AFTER_SOURCE(FILE) */\n-\n /* A C string constant describing how to begin a comment in the target\n    assembler language.  The compiler assumes that the comment will end at the\n    end of the line.  */"}, {"sha": "1cbfe33bf1eafb8cd880c0f6276becc7d79117c5", "filename": "gcc/system.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/006946e43ead0b242131cdcf2f5dc844d0be2f78/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=006946e43ead0b242131cdcf2f5dc844d0be2f78", "patch": "@@ -596,12 +596,15 @@ typedef char _Bool;\n \tMD_INIT_BUILTINS MD_EXPAND_BUILTIN ASM_OUTPUT_CONSTRUCTOR\t\\\n \tASM_OUTPUT_DESTRUCTOR\n \n-/* And other obsolete target macros.  */\n+/* And other obsolete target macros, or macros that used to be in target\n+   headers and were not used, and may be obsolete or may never have\n+   been used.  */\n  #pragma GCC poison INT_ASM_OP ASM_OUTPUT_EH_REGION_BEG\t\t\t   \\\n \tASM_OUTPUT_EH_REGION_END ASM_OUTPUT_LABELREF_AS_INT\t\t   \\\n \tDOESNT_NEED_UNWINDER EH_TABLE_LOOKUP OBJC_SELECTORS_WITHOUT_LABELS \\\n \tOMIT_EH_TABLE EASY_DIV_EXPR IMPLICIT_FIX_EXPR\t\t\t   \\\n-\tLONGJMP_RESTORE_FROM_STACK MAX_INT_TYPE_SIZE\n+\tLONGJMP_RESTORE_FROM_STACK MAX_INT_TYPE_SIZE ASM_IDENTIFY_GCC\t   \\\n+\tSTDC_VALUE TRAMPOLINE_ALIGN ASM_IDENTIFY_GCC_AFTER_SOURCE\n \n #endif /* IN_GCC */\n "}]}