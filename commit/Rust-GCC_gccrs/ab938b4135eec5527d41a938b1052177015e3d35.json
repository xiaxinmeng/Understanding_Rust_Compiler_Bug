{"sha": "ab938b4135eec5527d41a938b1052177015e3d35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5MzhiNDEzNWVlYzU1MjdkNDFhOTM4YjEwNTIxNzcwMTVlM2QzNQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2014-06-14T14:31:55Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2014-06-14T14:31:55Z"}, "message": "re PR ada/61505 (bootstrap broken by ada/gnat_rm.texi after r211448)\n\n2014-06-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR ada/61505\n        * gnat_rm.texi: Fix errors with makeinfo 5.1.\n\nFrom-SVN: r211667", "tree": {"sha": "60f35432fb5f8915984b8195b6275bf72c5db180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60f35432fb5f8915984b8195b6275bf72c5db180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab938b4135eec5527d41a938b1052177015e3d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab938b4135eec5527d41a938b1052177015e3d35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab938b4135eec5527d41a938b1052177015e3d35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab938b4135eec5527d41a938b1052177015e3d35/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e6120abeb04e6f1ee9bb3d01364e093d338aed41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6120abeb04e6f1ee9bb3d01364e093d338aed41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6120abeb04e6f1ee9bb3d01364e093d338aed41"}], "stats": {"total": 300, "additions": 154, "deletions": 146}, "files": [{"sha": "e83b056ecf04fcef61a41e20130a69b8eb4a7b06", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab938b4135eec5527d41a938b1052177015e3d35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab938b4135eec5527d41a938b1052177015e3d35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ab938b4135eec5527d41a938b1052177015e3d35", "patch": "@@ -1,3 +1,8 @@\n+2014-06-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR ada/61505\n+\t* gnat_rm.texi: Fix errors with makeinfo 5.1.\n+\n 2014-06-14  Arnaud Charlet  <charlet@adacore.com>\n \n \tPR ada/61505"}, {"sha": "bbe5676ca2137ef0fbbbd3863a06dd241103b233", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 149, "deletions": 146, "changes": 295, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab938b4135eec5527d41a938b1052177015e3d35/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab938b4135eec5527d41a938b1052177015e3d35/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ab938b4135eec5527d41a938b1052177015e3d35", "patch": "@@ -12049,9 +12049,9 @@ Reference Manual.\n \n @itemize @bullet\n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Whether or not each recommendation given in Implementation\n Advice is followed.  See 1.1.2(37).\n @end cartouche\n@@ -12060,9 +12060,9 @@ Advice is followed.  See 1.1.2(37).\n \n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Capacity limitations of the implementation.  See 1.1.3(3).\n @end cartouche\n @noindent\n@@ -12072,9 +12072,9 @@ generated object files.\n \n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Variations from the standard that are impractical to avoid\n given the implementation's execution environment.  See 1.1.3(6).\n @end cartouche\n@@ -12083,19 +12083,19 @@ There are no variations from the standard.\n \n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Which @code{code_statement}s cause external\n interactions.  See 1.1.3(10).\n @end cartouche\n @noindent\n Any @code{code_statement} can potentially cause external interactions.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The coded representation for the text of an Ada\n program.  See 2.1(4).\n @end cartouche\n@@ -12104,27 +12104,27 @@ See separate section on source representation.\n \n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The control functions allowed in comments.  See 2.1(14).\n @end cartouche\n @noindent\n See separate section on source representation.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The representation for an end of line.  See 2.2(2).\n @end cartouche\n @noindent\n See separate section on source representation.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Maximum supported line length and lexical element\n length.  See 2.2(15).\n @end cartouche\n@@ -12137,19 +12137,19 @@ line length to be specified to be any value up to 32767. The maximum\n length of a lexical element is the same as the maximum line length.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation defined pragmas.  See 2.8(14).\n @end cartouche\n @noindent\n \n @xref{Implementation Defined Pragmas}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Effect of pragma @code{Optimize}.  See 2.8(27).\n @end cartouche\n @noindent\n@@ -12158,9 +12158,9 @@ parameter, checks that the optimization flag is set, and aborts if it is\n not.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The sequence of characters of the value returned by\n @code{@var{S}'Image} when some of the graphic characters of\n @code{@var{S}'Wide_Image} are not defined in @code{Character}.  See\n@@ -12172,9 +12172,9 @@ method used for the source.  See section on source representation for\n further details.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The predefined integer types declared in\n @code{Standard}.  See 3.5.4(25).\n @end cartouche\n@@ -12194,39 +12194,39 @@ The predefined integer types declared in\n @end table\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any nonstandard integer types and the operators defined\n for them.  See 3.5.4(26).\n @end cartouche\n @noindent\n There are no nonstandard integer types.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any nonstandard real types and the operators defined for\n them.  See 3.5.6(8).\n @end cartouche\n @noindent\n There are no nonstandard real types.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n What combinations of requested decimal precision and range\n are supported for floating point types.  See 3.5.7(7).\n @end cartouche\n @noindent\n The precision and range is as defined by the IEEE standard.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The predefined floating point types declared in\n @code{Standard}.  See 3.5.7(16).\n @end cartouche\n@@ -12243,18 +12243,18 @@ The predefined floating point types declared in\n @end table\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The small of an ordinary fixed point type.  See 3.5.9(8).\n @end cartouche\n @noindent\n @code{Fine_Delta} is 2**(@minus{}63)\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n What combinations of small, range, and digits are\n supported for fixed point types.  See 3.5.9(10).\n @end cartouche\n@@ -12267,9 +12267,9 @@ Text_IO is accurate to only 53 bits, rather than the full mantissa.  This\n is because floating-point conversions are used to convert fixed point.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of @code{Tags.Expanded_Name} for types declared\n within an unnamed @code{block_statement}.  See 3.9(10).\n @end cartouche\n@@ -12278,37 +12278,37 @@ Block numbers of the form @code{B@var{nnn}}, where @var{nnn} is a\n decimal integer are allocated.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined attributes.  See 4.1.4(12).\n @end cartouche\n @noindent\n @xref{Implementation Defined Attributes}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any implementation-defined time types.  See 9.6(6).\n @end cartouche\n @noindent\n There are no implementation-defined time types.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The time base associated with relative delays.\n @end cartouche\n @noindent\n See 9.6(20).  The time base used is that provided by the C library\n function @code{gettimeofday}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The time base of the type @code{Calendar.Time}.  See\n 9.6(23).\n @end cartouche\n@@ -12317,9 +12317,9 @@ The time base used is that provided by the C library function\n @code{gettimeofday}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The time zone used for package @code{Calendar}\n operations.  See 9.6(24).\n @end cartouche\n@@ -12329,19 +12329,19 @@ setting for local time, as accessed by the C library function\n @code{localtime}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any limit on @code{delay_until_statements} of\n @code{select_statements}.  See 9.6(29).\n @end cartouche\n @noindent\n There are no such limits.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Whether or not two non-overlapping parts of a composite\n object are independently addressable, in the case where packing, record\n layout, or @code{Component_Size} is specified for the object.  See\n@@ -12352,19 +12352,19 @@ Separate components are independently addressable if they do not share\n overlapping storage units.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The representation for a compilation.  See 10.1(2).\n @end cartouche\n @noindent\n A compilation is represented by a sequence of files presented to the\n compiler in a single invocation of the @command{gcc} command.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any restrictions on compilations that contain multiple\n compilation_units.  See 10.1(4).\n @end cartouche\n@@ -12374,19 +12374,19 @@ sequence of files can be presented to the compiler as a single\n compilation.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The mechanisms for creating an environment and for adding\n and replacing compilation units.  See 10.1.4(3).\n @end cartouche\n @noindent\n See separate section on compilation model.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The manner of explicitly assigning library units to a\n partition.  See 10.2(2).\n @end cartouche\n@@ -12411,9 +12411,9 @@ options, refer to @ref{The GNAT Make Program gnatmake,,, gnat_ugn,\n @value{EDITION} User's Guide}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The implementation-defined means, if any, of specifying\n which compilation units are needed by a given compilation unit.  See\n 10.2(2).\n@@ -12425,9 +12425,9 @@ implementation-defined pragmas or other implementation-defined\n means for specifying needed units.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The manner of designating the main subprogram of a\n partition.  See 10.2(7).\n @end cartouche\n@@ -12436,9 +12436,9 @@ The main program is designated by providing the name of the\n corresponding @file{ALI} file as the input parameter to the binder.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The order of elaboration of @code{library_items}.  See\n 10.2(18).\n @end cartouche\n@@ -12453,9 +12453,9 @@ third by elaborating in alphabetical order of unit names\n where a choice still remains.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Parameter passing and function return for the main\n subprogram.  See 10.2(21).\n @end cartouche\n@@ -12466,9 +12466,9 @@ value is the return code of the program (overriding any value that\n may have been set by a call to @code{Ada.Command_Line.Set_Exit_Status}).\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The mechanisms for building and running partitions.  See\n 10.2(24).\n @end cartouche\n@@ -12480,19 +12480,19 @@ programs consisting of multiple partitions.  See the separate GLADE manual\n for details.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The details of program execution, including program\n termination.  See 10.2(25).\n @end cartouche\n @noindent\n See separate section on compilation model.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The semantics of any non-active partitions supported by the\n implementation.  See 10.2(28).\n @end cartouche\n@@ -12502,9 +12502,9 @@ provided by the operating system.  See the GLADE reference manual for\n further details.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The information returned by @code{Exception_Message}.  See\n 11.4.1(10).\n @end cartouche\n@@ -12513,9 +12513,9 @@ Exception message returns the null string unless a specific message has\n been passed by the program.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of @code{Exceptions.Exception_Name} for types\n declared within an unnamed @code{block_statement}.  See 11.4.1(12).\n @end cartouche\n@@ -12524,9 +12524,9 @@ Blocks have implementation defined names of the form @code{B@var{nnn}}\n where @var{nnn} is an integer.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The information returned by\n @code{Exception_Information}.  See 11.4.1(13).\n @end cartouche\n@@ -12572,9 +12572,9 @@ The line terminator sequence at the end of each line, including\n the last line is a single @code{LF} character (@code{16#0A#}).\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined check names.  See 11.5(27).\n @end cartouche\n @noindent\n@@ -12592,29 +12592,29 @@ In addition, a user program can add implementation-defined check names\n by means of the pragma Check_Name.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The interpretation of each aspect of representation.  See\n 13.1(20).\n @end cartouche\n @noindent\n See separate section on data representations.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any restrictions placed upon representation items.  See\n 13.1(20).\n @end cartouche\n @noindent\n See separate section on data representations.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The meaning of @code{Size} for indefinite subtypes.  See\n 13.3(48).\n @end cartouche\n@@ -12624,9 +12624,9 @@ for the case of a subprogram parameter, the size of the parameter object\n is the actual size.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The default external representation for a type tag.  See\n 13.3(75).\n @end cartouche\n@@ -12635,9 +12635,9 @@ The default external representation for a type tag is the fully expanded\n name of the type in upper case letters.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n What determines whether a compilation unit is the same in\n two different partitions.  See 13.3(76).\n @end cartouche\n@@ -12646,19 +12646,19 @@ A compilation unit is the same in two different partitions if and only\n if it derives from the same source file.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined components.  See 13.5.1(15).\n @end cartouche\n @noindent\n The only implementation defined component is the tag for a tagged type,\n which contains a pointer to the dispatching table.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n If @code{Word_Size} = @code{Storage_Unit}, the default bit\n ordering.  See 13.5.3(5).\n @end cartouche\n@@ -12668,9 +12668,9 @@ implementation, so no non-default bit ordering is supported.  The default\n bit ordering corresponds to the natural endianness of the target architecture.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The contents of the visible part of package @code{System}\n and its language-defined children.  See 13.7(2).\n @end cartouche\n@@ -12679,9 +12679,9 @@ See the definition of these packages in files @file{system.ads} and\n @file{s-stoele.ads}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The contents of the visible part of package\n @code{System.Machine_Code}, and the meaning of\n @code{code_statements}.  See 13.8(7).\n@@ -12690,9 +12690,9 @@ The contents of the visible part of package\n See the definition and documentation in file @file{s-maccod.ads}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The effect of unchecked conversion.  See 13.9(11).\n @end cartouche\n @noindent\n@@ -12711,9 +12711,10 @@ greater than the source alignment, then a copy of the result is\n made with appropriate alignment\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@strong{53}. The semantics of operations on invalid representations.\n+The semantics of operations on invalid representations.\n See 13.9.2(10-11).\n @end cartouche\n @noindent\n@@ -12740,9 +12741,9 @@ As indicated, an exception is raised on the array assignment, but not\n on the simple assignment of the invalid negative value from Y to Z.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The manner of choosing a storage pool for an access type\n when @code{Storage_Pool} is not specified for the type.  See 13.11(17).\n @end cartouche\n@@ -12757,22 +12758,22 @@ library units @code{System.Pool_Global}, @code{System.Pool_Size} and\n default pools used.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Whether or not the implementation provides user-accessible\n names for the standard pool type(s).  See 13.11(17).\n @end cartouche\n @noindent\n \n-See documentation in the sources of the run time mentioned in paragraph\n-@strong{53} .  All these pools are accessible by means of @code{with}'ing\n+See documentation in the sources of the run time mentioned in the previous\n+paragraph.  All these pools are accessible by means of @code{with}'ing\n these units.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The meaning of @code{Storage_Size}.  See 13.11(18).\n @end cartouche\n @noindent\n@@ -12781,30 +12782,31 @@ total space available for an access type collection, or to the primary\n stack space for a task.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of storage pools.  See\n 13.11(22).\n @end cartouche\n @noindent\n-See documentation in the sources of the run time mentioned in paragraph\n-@strong{53} for details on GNAT-defined aspects of storage pools.\n+See documentation in the sources of the run time mentioned in the\n+paragraph about standard storage pools above\n+for details on GNAT-defined aspects of storage pools.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The set of restrictions allowed in a pragma\n @code{Restrictions}.  See 13.12(7).\n @end cartouche\n @noindent\n @xref{Standard and Implementation Defined Restrictions}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The consequences of violating limitations on\n @code{Restrictions} pragmas.  See 13.12(9).\n @end cartouche\n@@ -12814,9 +12816,9 @@ if violated.  Currently there are no other consequences of violating\n restrictions.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The representation used by the @code{Read} and\n @code{Write} attributes of elementary types in terms of stream\n elements.  See 13.13.2(9).\n@@ -12827,19 +12829,20 @@ the type, using the number of bits corresponding to the\n @code{@var{type}'Size} value, and the natural ordering of the machine.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The names and characteristics of the numeric subtypes\n declared in the visible part of package @code{Standard}.  See A.1(3).\n @end cartouche\n @noindent\n See items describing the integer and floating-point types supported.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@strong{61}. The string returned by @code{Character_Set_Version}.\n+The string returned by @code{Character_Set_Version}.\n See A.3.5(3).\n @end cartouche\n @noindent\n@@ -12848,9 +12851,9 @@ the string \"Unicode 4.0\", referring to version 4.0 of the\n Unicode specification.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The accuracy actually achieved by the elementary\n functions.  See A.5.1(1).\n @end cartouche\n@@ -12859,9 +12862,9 @@ The elementary functions correspond to the functions available in the C\n library.  Only fast math mode is implemented.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The sign of a zero result from some of the operators or\n functions in @code{Numerics.Generic_Elementary_Functions}, when\n @code{Float_Type'Signed_Zeros} is @code{True}.  See A.5.1(46).\n@@ -12871,29 +12874,29 @@ The sign of zeroes follows the requirements of the IEEE 754 standard on\n floating-point.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of\n @code{Numerics.Float_Random.Max_Image_Width}.  See A.5.2(27).\n @end cartouche\n @noindent\n Maximum image width is 6864, see library file @file{s-rannum.ads}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of\n @code{Numerics.Discrete_Random.Max_Image_Width}.  See A.5.2(27).\n @end cartouche\n @noindent\n Maximum image width is 6864, see library file @file{s-rannum.ads}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The algorithms for random number generation.  See\n A.5.2(32).\n @end cartouche\n@@ -12903,9 +12906,9 @@ The algorithm is the Mersenne Twister, as documented in the source file\n 2**19937-1.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The string representation of a random number generator's\n state.  See A.5.2(38).\n @end cartouche\n@@ -12915,9 +12918,9 @@ the fixed-width decimal representations of the 624 32-bit integers\n of the state vector.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The minimum time interval between calls to the\n time-dependent Reset procedure that are guaranteed to initiate different\n random number sequences.  See A.5.2(45).\n@@ -12927,9 +12930,9 @@ The minimum period between reset calls to guarantee distinct series of\n random numbers is one microsecond.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The values of the @code{Model_Mantissa},\n @code{Model_Emin}, @code{Model_Epsilon}, @code{Model},\n @code{Safe_First}, and @code{Safe_Last} attributes, if the Numerics\n@@ -12940,9 +12943,9 @@ Run the compiler with @option{-gnatS} to produce a listing of package\n @code{Standard}, has the values of all numeric attributes.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any implementation-defined characteristics of the\n input-output packages.  See A.7(14).\n @end cartouche\n@@ -12951,9 +12954,9 @@ There are no special implementation defined characteristics for these\n packages.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of @code{Buffer_Size} in @code{Storage_IO}.  See\n A.9(10).\n @end cartouche\n@@ -12963,9 +12966,9 @@ the value of @code{@var{type}'Size} rounded up to the next storage unit\n boundary.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n External files for standard input, standard output, and\n standard error See A.10(5).\n @end cartouche\n@@ -12974,9 +12977,9 @@ These files are mapped onto the files provided by the C streams\n libraries.  See source file @file{i-cstrea.ads} for further details.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The accuracy of the value produced by @code{Put}.  See\n A.10.9(36).\n @end cartouche\n@@ -12986,9 +12989,9 @@ precision of the value, zeroes are output in the corresponding least\n significant digit positions.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The meaning of @code{Argument_Count}, @code{Argument}, and\n @code{Command_Name}.  See A.15(1).\n @end cartouche\n@@ -12997,29 +13000,29 @@ These are mapped onto the @code{argv} and @code{argc} parameters of the\n main program in the natural manner.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The interpretation of the @code{Form} parameter in procedure\n @code{Create_Directory}.  See A.16(56).\n @end cartouche\n @noindent\n The @code{Form} parameter is not used.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The interpretation of the @code{Form} parameter in procedure\n @code{Create_Path}.  See A.16(60).\n @end cartouche\n @noindent\n The @code{Form} parameter is not used.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The interpretation of the @code{Form} parameter in procedure\n @code{Copy_File}.  See A.16(68).\n @end cartouche\n@@ -13097,9 +13100,9 @@ Form => \"mode=internal, preserve=timestamps\"\n @end smallexample\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The interpretation of the @code{Pattern} parameter, when not the null string,\n in the @code{Start_Search} and @code{Search} procedures.\n See A.16(104) and A.16(112).\n@@ -13111,9 +13114,9 @@ according to the syntax of regular expressions as defined in the\n @xref{GNAT.Regexp (g-regexp.ads)}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined convention names.  See B.1(11).\n @end cartouche\n @noindent\n@@ -13179,18 +13182,18 @@ except for VMS, use of such other names results in a warning.  In VMS\n implementations, these names are accepted silently.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The meaning of link names.  See B.1(36).\n @end cartouche\n @noindent\n Link names are the actual names used by the linker.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The manner of choosing link names when neither the link\n name nor the address of an imported or exported entity is specified.  See\n B.1(36).\n@@ -13201,9 +13204,9 @@ external language, interpreting the Ada name as being in all lower case\n letters.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The effect of pragma @code{Linker_Options}.  See B.1(37).\n @end cartouche\n @noindent\n@@ -13223,19 +13226,19 @@ order. For example, linker options for a body always appear before the options\n from the corresponding package spec.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The contents of the visible part of package\n @code{Interfaces} and its language-defined descendants.  See B.2(1).\n @end cartouche\n @noindent\n See files with prefix @file{i-} in the distributed library.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined children of package\n @code{Interfaces}.  The contents of the visible part of package\n @code{Interfaces}.  See B.2(11).\n@@ -13244,9 +13247,9 @@ Implementation-defined children of package\n See files with prefix @file{i-} in the distributed library.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The types @code{Floating}, @code{Long_Floating},\n @code{Binary}, @code{Long_Binary}, @code{Decimal_ Element}, and\n @code{COBOL_Character}; and the initialization of the variables\n@@ -13273,28 +13276,28 @@ Character\n For initialization, see the file @file{i-cobol.ads} in the distributed library.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Support for access to machine instructions.  See C.1(1).\n @end cartouche\n @noindent\n See documentation in file @file{s-maccod.ads} in the distributed library.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of access to machine\n operations.  See C.1(9).\n @end cartouche\n @noindent\n See documentation in file @file{s-maccod.ads} in the distributed library.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of interrupts.  See C.3(2).\n @end cartouche\n @noindent\n@@ -13304,9 +13307,9 @@ definition of unit\n on the interrupts supported on a particular target.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of pre-elaboration.  See\n C.4(13).\n @end cartouche\n@@ -13315,9 +13318,9 @@ GNAT does not permit a partition to be restarted without reloading,\n except under control of the debugger.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The semantics of pragma @code{Discard_Names}.  See C.5(7).\n @end cartouche\n @noindent\n@@ -13327,9 +13330,9 @@ provides the image of the Pos of the literal, and Value accepts\n Pos values.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of the @code{Task_Identification.Image}\n attribute.  See C.7.1(7).\n @end cartouche\n@@ -13358,9 +13361,9 @@ No_Implicit_Heap_Allocation is in effect,  the image reduces to\n the numeric suffix, that is to say the hexadecimal representation of the\n virtual address of the control block of the task.\n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of @code{Current_Task} when in a protected entry\n or interrupt handler.  See C.7.1(17).\n @end cartouche\n@@ -13369,9 +13372,9 @@ Protected entries or interrupt handlers can be executed by any\n convenient thread, so the value of @code{Current_Task} is undefined.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The effect of calling @code{Current_Task} from an entry\n body or interrupt handler.  See C.7.1(19).\n @end cartouche\n@@ -13381,19 +13384,19 @@ interrupt handler is to return the identification of the task currently\n executing the code.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of\n @code{Task_Attributes}.  See C.7.2(19).\n @end cartouche\n @noindent\n There are no implementation-defined aspects of @code{Task_Attributes}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Values of all @code{Metrics}.  See D(2).\n @end cartouche\n @noindent\n@@ -13407,28 +13410,28 @@ on the exact target in use, this information can be used to determine\n the required metrics.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The declarations of @code{Any_Priority} and\n @code{Priority}.  See D.1(11).\n @end cartouche\n @noindent\n See declarations in file @file{system.ads}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined execution resources.  See D.1(15).\n @end cartouche\n @noindent\n There are no implementation-defined execution resources.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Whether, on a multiprocessor, a task that is waiting for\n access to a protected object keeps its processor busy.  See D.2.1(3).\n @end cartouche\n@@ -13437,9 +13440,9 @@ On a multi-processor, a task that is waiting for access to a protected\n object does not keep its processor busy.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The affect of implementation defined execution resources\n on task dispatching.  See D.2.1(9).\n @end cartouche\n@@ -13449,9 +13452,9 @@ and appropriate, these threads correspond to native threads of the\n underlying operating system.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined @code{policy_identifiers} allowed\n in a pragma @code{Task_Dispatching_Policy}.  See D.2.2(3).\n @end cartouche\n@@ -13460,9 +13463,9 @@ There are no implementation-defined policy-identifiers allowed in this\n pragma.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of priority inversion.  See\n D.2.2(16).\n @end cartouche\n@@ -13471,18 +13474,18 @@ Execution of a task cannot be preempted by the implementation processing\n of delay expirations for lower priority tasks.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined task dispatching.  See D.2.2(18).\n @end cartouche\n @noindent\n The policy is the same as that of the underlying threads implementation.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined @code{policy_identifiers} allowed\n in a pragma @code{Locking_Policy}.  See D.3(4).\n @end cartouche\n@@ -13498,9 +13501,9 @@ read/write lock allowing multiple propected object functions to enter\n concurrently.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Default ceiling priorities.  See D.3(10).\n @end cartouche\n @noindent\n@@ -13509,9 +13512,9 @@ The ceiling priority of protected objects of the type\n Reference Manual D.3(10),\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The ceiling of any protected object used internally by\n the implementation.  See D.3(16).\n @end cartouche\n@@ -13520,18 +13523,18 @@ The ceiling priority of internal protected objects is\n @code{System.Priority'Last}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined queuing policies.  See D.4(1).\n @end cartouche\n @noindent\n There are no implementation-defined queuing policies.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n On a multiprocessor, any conditions that cause the\n completion of an aborted construct to be delayed later than what is\n specified for a single processor.  See D.6(3).\n@@ -13541,9 +13544,9 @@ The semantics for abort on a multi-processor is the same as on a single\n processor, there are no further delays.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any operations that implicitly require heap storage\n allocation.  See D.7(8).\n @end cartouche\n@@ -13552,29 +13555,29 @@ The only operation that implicitly requires heap storage allocation is\n task creation.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of pragma\n @code{Restrictions}.  See D.7(20).\n @end cartouche\n @noindent\n There are no such implementation-defined aspects.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of package\n @code{Real_Time}.  See D.8(17).\n @end cartouche\n @noindent\n There are no implementation defined aspects of package @code{Real_Time}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of\n @code{delay_statements}.  See D.9(8).\n @end cartouche\n@@ -13583,9 +13586,9 @@ Any difference greater than one microsecond will cause the task to be\n delayed (see D.9(7)).\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The upper bound on the duration of interrupt blocking\n caused by the implementation.  See D.12(5).\n @end cartouche\n@@ -13594,9 +13597,9 @@ The upper bound is determined by the underlying operating system.  In\n no cases is it more than 10 milliseconds.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The means for creating and executing distributed\n programs.  See E(5).\n @end cartouche\n@@ -13605,19 +13608,19 @@ The GLADE package provides a utility GNATDIST for creating and executing\n distributed programs.  See the GLADE reference manual for further details.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any events that can result in a partition becoming\n inaccessible.  See E.1(7).\n @end cartouche\n @noindent\n See the GLADE reference manual for full details on such events.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The scheduling policies, treatment of priorities, and\n management of shared resources between partitions in certain cases.  See\n E.1(11).\n@@ -13627,9 +13630,9 @@ See the GLADE reference manual for full details on these aspects of\n multi-partition execution.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Events that cause the version of a compilation unit to\n change.  See E.3(5).\n @end cartouche\n@@ -13641,9 +13644,9 @@ are significant except those which affect only layout, capitalization or\n comments.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Whether the execution of the remote subprogram is\n immediately aborted as a result of cancellation.  See E.4(13).\n @end cartouche\n@@ -13652,19 +13655,19 @@ See the GLADE reference manual for details on the effect of abort in\n a distributed application.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of the PCS@.  See E.5(25).\n @end cartouche\n @noindent\n See the GLADE reference manual for a full description of all implementation\n defined aspects of the PCS@.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined interfaces in the PCS@.  See\n E.5(26).\n @end cartouche\n@@ -13673,9 +13676,9 @@ See the GLADE reference manual for a full description of all\n implementation defined interfaces.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The values of named numbers in the package\n @code{Decimal}.  See F.2(7).\n @end cartouche\n@@ -13694,29 +13697,29 @@ The values of named numbers in the package\n @end table\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of @code{Max_Picture_Length} in the package\n @code{Text_IO.Editing}.  See F.3.3(16).\n @end cartouche\n @noindent\n 64\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of @code{Max_Picture_Length} in the package\n @code{Wide_Text_IO.Editing}.  See F.3.4(5).\n @end cartouche\n @noindent\n 64\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The accuracy actually achieved by the complex elementary\n functions and by other complex arithmetic operations.  See G.1(1).\n @end cartouche\n@@ -13725,9 +13728,9 @@ Standard library functions are used for the complex arithmetic\n operations.  Only fast math mode is currently supported.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The sign of a zero result (or a component thereof) from\n any operator or function in @code{Numerics.Generic_Complex_Types}, when\n @code{Real'Signed_Zeros} is True.  See G.1.1(53).\n@@ -13737,9 +13740,9 @@ The signs of zero values are as recommended by the relevant\n implementation advice.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The sign of a zero result (or a component thereof) from\n any operator or function in\n @code{Numerics.Generic_Complex_Elementary_Functions}, when\n@@ -13750,9 +13753,9 @@ The signs of zero values are as recommended by the relevant\n implementation advice.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Whether the strict mode or the relaxed mode is the\n default.  See G.2(2).\n @end cartouche\n@@ -13761,9 +13764,9 @@ The strict mode is the default.  There is no separate relaxed mode.  GNAT\n provides a highly efficient implementation of strict mode.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result interval in certain cases of fixed-to-float\n conversion.  See G.2.1(10).\n @end cartouche\n@@ -13773,9 +13776,9 @@ accuracy is that provided by performing all operations in 64-bit IEEE\n floating-point format.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of a floating point arithmetic operation in\n overflow situations, when the @code{Machine_Overflows} attribute of the\n result type is @code{False}.  See G.2.1(13).\n@@ -13791,9 +13794,9 @@ of a significant performance penalty), so infinite and NaN values are\n properly generated.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result interval for division (or exponentiation by a\n negative exponent), when the floating point hardware implements division\n as multiplication by a reciprocal.  See G.2.1(16).\n@@ -13802,9 +13805,9 @@ as multiplication by a reciprocal.  See G.2.1(16).\n Not relevant, division is IEEE exact.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The definition of close result set, which determines the\n accuracy of certain fixed point multiplications and divisions.  See\n G.2.3(5).\n@@ -13816,9 +13819,9 @@ floating-point, the operation is done in floating-point, and the result\n is converted to the target type.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Conditions on a @code{universal_real} operand of a fixed\n point multiplication or division for which the result shall be in the\n perfect result set.  See G.2.3(22).\n@@ -13829,9 +13832,9 @@ can be computed by a single scaling operation involving a scale factor\n representable in 64-bits.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of a fixed point arithmetic operation in\n overflow situations, when the @code{Machine_Overflows} attribute of the\n result type is @code{False}.  See G.2.3(27).\n@@ -13841,9 +13844,9 @@ Not relevant, @code{Machine_Overflows} is @code{True} for fixed-point\n types.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of an elementary function reference in\n overflow situations, when the @code{Machine_Overflows} attribute of the\n result type is @code{False}.  See G.2.4(4).\n@@ -13852,9 +13855,9 @@ result type is @code{False}.  See G.2.4(4).\n IEEE infinite and Nan values are produced as appropriate.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The value of the angle threshold, within which certain\n elementary functions, complex arithmetic operations, and complex\n elementary functions yield results conforming to a maximum relative\n@@ -13864,19 +13867,19 @@ error bound.  See G.2.4(10).\n Information on this subject is not yet available.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The accuracy of certain elementary functions for\n parameters beyond the angle threshold.  See G.2.4(10).\n @end cartouche\n @noindent\n Information on this subject is not yet available.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The result of a complex arithmetic operation or complex\n elementary function reference in overflow situations, when the\n @code{Machine_Overflows} attribute of the corresponding real type is\n@@ -13886,9 +13889,9 @@ elementary function reference in overflow situations, when the\n IEEE infinite and Nan values are produced as appropriate.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n The accuracy of certain complex arithmetic operations and\n certain complex elementary functions for parameters (or components\n thereof) beyond the angle threshold.  See G.2.6(8).\n@@ -13897,19 +13900,19 @@ thereof) beyond the angle threshold.  See G.2.6(8).\n Information on those subjects is not yet available.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Information regarding bounded errors and erroneous\n execution.  See H.2(1).\n @end cartouche\n @noindent\n Information on this subject is not yet available.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of pragma\n @code{Inspection_Point}.  See H.3.2(8).\n @end cartouche\n@@ -13918,9 +13921,9 @@ Pragma @code{Inspection_Point} ensures that the variable is live and can\n be examined by the debugger at the inspection point.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Implementation-defined aspects of pragma\n @code{Restrictions}.  See H.4(25).\n @end cartouche\n@@ -13930,9 +13933,9 @@ use of pragma @code{Restrictions [No_Exceptions]} has no effect on the\n generated code.  Checks must suppressed by use of pragma @code{Suppress}.\n \n @sp 1\n+@item\n @cartouche\n @noindent\n-@item\n Any restrictions on pragma @code{Restrictions}.  See\n H.4(27).\n @end cartouche\n@@ -18268,7 +18271,6 @@ of GNAT, and will generate a warning message.\n * System.Restrictions (s-restri.ads)::\n * System.Rident (s-rident.ads)::\n * System.Strings.Stream_Ops (s-ststop.ads)::\n-* System.Task_Info (s-tasinf.ads)::\n * System.Unsigned_Types (s-unstyp.ads)::\n * System.Wch_Cnv (s-wchcnv.ads)::\n * System.Wch_Con (s-wchcon.ads)::\n@@ -22400,6 +22402,7 @@ compatibility purposes.\n * pragma Ravenscar::\n * pragma Restricted_Run_Time::\n * pragma Task_Info::\n+* System.Task_Info (s-tasinf.ads)::\n @end menu\n \n @node pragma No_Run_Time"}]}