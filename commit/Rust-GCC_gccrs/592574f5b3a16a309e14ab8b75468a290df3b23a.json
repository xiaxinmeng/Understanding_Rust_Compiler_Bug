{"sha": "592574f5b3a16a309e14ab8b75468a290df3b23a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkyNTc0ZjViM2ExNmEzMDllMTRhYjhiNzU0NjhhMjkwZGYzYjIzYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-25T15:20:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-25T15:20:43Z"}, "message": "[multiple changes]\n\n2014-02-25  Arnaud Charlet  <charlet@adacore.com>\n\n\t* usage.adb (Usage): Add help on -gnateC.\n\t* switch-c.adb (Scan_Front_End_Switches): Add handling of -gnateC.\n\t* opt.ads (Generate_CodePeer_Messages): New flag.\n\t* gnat_ugn.texi: Document new switch -gnateC.\n\n2014-02-25  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_rm.texi: Corrected minor typos in Implementation Defined\n\tAspects.\n\t* opt.ads: Minor reformatting.\n\nFrom-SVN: r208140", "tree": {"sha": "61c7ab59b7a64f9b268e3a6eebc9c9d04172a114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61c7ab59b7a64f9b268e3a6eebc9c9d04172a114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/592574f5b3a16a309e14ab8b75468a290df3b23a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592574f5b3a16a309e14ab8b75468a290df3b23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/592574f5b3a16a309e14ab8b75468a290df3b23a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/592574f5b3a16a309e14ab8b75468a290df3b23a/comments", "author": null, "committer": null, "parents": [{"sha": "fe2194dfff5f72512520193c39566b875f0a3ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2194dfff5f72512520193c39566b875f0a3ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe2194dfff5f72512520193c39566b875f0a3ae7"}], "stats": {"total": 68, "additions": 47, "deletions": 21}, "files": [{"sha": "55d96b791850ec33237fa29455cf9644ddcb4bbc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=592574f5b3a16a309e14ab8b75468a290df3b23a", "patch": "@@ -1,3 +1,16 @@\n+2014-02-25  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* usage.adb (Usage): Add help on -gnateC.\n+\t* switch-c.adb (Scan_Front_End_Switches): Add handling of -gnateC.\n+\t* opt.ads (Generate_CodePeer_Messages): New flag.\n+\t* gnat_ugn.texi: Document new switch -gnateC.\n+\n+2014-02-25  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_rm.texi: Corrected minor typos in Implementation Defined\n+\tAspects.\n+\t* opt.ads: Minor reformatting.\n+\n 2014-02-25  Robert Dewar  <dewar@adacore.com>\n \n \t* binde.adb: Change messages to mention -gnatel instead of -gnatwl."}, {"sha": "84da3ec87482f325412dddd8601de7219a8c1b39", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=592574f5b3a16a309e14ab8b75468a290df3b23a", "patch": "@@ -7644,15 +7644,15 @@ or subunits.\n @node Implementation Defined Aspects\n @chapter Implementation Defined Aspects\n Ada defines (throughout the Ada 2012 reference manual, summarized\n-in annex K) a set of aspects that can be specified for certain entities.\n+in Annex K) a set of aspects that can be specified for certain entities.\n These language defined aspects are implemented in GNAT in Ada 2012 mode\n and work as described in the Ada 2012 Reference Manual.\n \n In addition, Ada 2012 allows implementations to define additional aspects\n whose meaning is defined by the implementation.  GNAT provides\n-a number of these implementation-dependent aspects which can be used\n+a number of these implementation-defined aspects which can be used\n to extend and enhance the functionality of the compiler.  This section of\n-the GNAT reference manual describes these additional attributes.\n+the GNAT reference manual describes these additional aspects.\n \n Note that any program using these aspects may not be portable to\n other compilers (although GNAT implements this set of aspects on all\n@@ -7693,7 +7693,7 @@ pragma Shared (R);\n @end smallexample\n \n @noindent\n-In the documentation sections that follow, such cases are simply marked\n+In the documentation below, such cases are simply marked\n as being equivalent to the corresponding pragma or attribute definition\n clause.\n \n@@ -7756,8 +7756,6 @@ aggregate.\n @noindent\n This aspect is equivalent to pragma @code{Depends}.\n \n-* Dimension::\n-\n @node Aspect Dimension\n @unnumberedsec Aspect Dimension\n @findex Dimension\n@@ -7817,11 +7815,12 @@ will represent values within the dimension system. Each @code{DIMENSION}\n corresponds to one particular dimension. A maximum of 7 dimensions may\n be specified. @code{Unit_Name} is the name of the dimension (for example\n @code{Meter}). @code{Unit_Symbol} is the shorthand used for quantities\n-of this dimension (for example 'm' for Meter). @code{Dim_Symbol} gives\n+of this dimension (for example @code{m} for @code{Meter}).\n+@code{Dim_Symbol} gives\n the identification within the dimension system (typically this is a\n-single letter, e.g. 'L' standing for length for unit name Meter). The\n-Unit_Smbol is used in formatted output of dimensioned quantities. The\n-Dim_Symbol is used in error messages when numeric operations have\n+single letter, e.g. @code{L} standing for length for unit name @code{Meter}).\n+The @code{Unit_Symbol} is used in formatted output of dimensioned quantities.\n+The @code{Dim_Symbol} is used in error messages when numeric operations have\n inconsistent dimensions.\n \n GNAT provides the standard definition of the International MKS system in\n@@ -7844,7 +7843,7 @@ following aspect:\n @end smallexample\n \n @noindent\n-See section \"Performing Dimensionality Analysis in GNAT\" in the GNAT Users\n+See section ``Performing Dimensionality Analysis in GNAT'' in the GNAT Users\n Guide for detailed examples of use of the dimension system.\n \n @node Aspect Favor_Top_Level\n@@ -8049,6 +8048,7 @@ This aspect is equivalent to the two argument form of pragma @code{Warnings},\n where the first argument is @code{ON} or @code{OFF} and the second argument\n is the entity.\n \n+\n @node Implementation Defined Attributes\n @chapter Implementation Defined Attributes\n Ada defines (throughout the Ada reference manual,"}, {"sha": "8ce48bd8aa657e7db45c32904ef74abf50d8d540", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=592574f5b3a16a309e14ab8b75468a290df3b23a", "patch": "@@ -3738,7 +3738,7 @@ be called to complete determination of representation information.\n \n @item -gnatC\n @cindex @option{-gnatC} (@command{gcc})\n-Generate CodePeer information (no code generation attempted).\n+Generate CodePeer intermediate format (no code generation attempted).\n This switch will generate an intermediate representation suitable for\n use by CodePeer (@file{.scil} files). This switch is not compatible with\n code generation (it will, among other things, disable some switches such\n@@ -3778,6 +3778,12 @@ Specify a configuration pragma file\n @end ifclear\n (@pxref{The Configuration Pragmas Files}).\n \n+@item -gnateC\n+@cindex @option{-gnateC} (@command{gcc})\n+Generate CodePeer messages in a compiler-like format. This switch is only\n+effective if @option{-gnatcC} is also specified and requires an installation\n+of CodePeer.\n+\n @item ^-gnated^/DISABLE_ATOMIC_SYNCHRONIZATION^\n @cindex @option{-gnated} (@command{gcc})\n Disable atomic synchronization"}, {"sha": "2f8174a6f3620df4dd8ccfde3b310e6a034c4f79", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=592574f5b3a16a309e14ab8b75468a290df3b23a", "patch": "@@ -356,7 +356,7 @@ package Opt is\n    CodePeer_Mode : Boolean := False;\n    --  GNAT, GNATBIND, GPRBUILD\n    --  Enable full CodePeer mode (SCIL generation, disable switches that\n-   --  interact badly with it, etc...).\n+   --  interact badly with it, etc...). This is turned on by -gnatC.\n \n    Commands_To_Stdout : Boolean := False;\n    --  GNATMAKE\n@@ -667,6 +667,11 @@ package Opt is\n    --  the name is of the form .xxx, then to name.xxx where name is the source\n    --  file name with extension stripped.\n \n+   Generate_CodePeer_Messages : Boolean := False;\n+   --  GNAT\n+   --  Generate CodePeer messages. Ignored if CodePeer_Mode is false.\n+   --  This is turned on by -gnateC.\n+\n    Generate_Processed_File : Boolean := False;\n    --  GNAT\n    --  True when switch -gnateG is used. When True, create in a file"}, {"sha": "e7e32eb265332f251e20b70ec555f782365d663b", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=592574f5b3a16a309e14ab8b75468a290df3b23a", "patch": "@@ -517,14 +517,11 @@ package body Switch.C is\n \n                      return;\n \n-                  --  -gnateC switch (CodePeer SCIL generation)\n+                  --  -gnateC switch (generate CodePeer messages)\n \n-                  --  Not enabled for now, keep it for later???\n-                  --  use -gnatd.I only for now\n-\n-                  --  when 'C' =>\n-                  --     Ptr := Ptr + 1;\n-                  --     Generate_SCIL := True;\n+                  when 'C' =>\n+                     Ptr := Ptr + 1;\n+                     Generate_CodePeer_Messages := True;\n \n                   --  -gnated switch (disable atomic synchronization)\n "}, {"sha": "99fb652024e09cb2b45b61543b83324520a76756", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/592574f5b3a16a309e14ab8b75468a290df3b23a/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=592574f5b3a16a309e14ab8b75468a290df3b23a", "patch": "@@ -152,7 +152,7 @@ begin\n    --  Line for -gnatC switch\n \n    Write_Switch_Char (\"C\");\n-   Write_Line (\"Generate CodePeer information (no code generation)\");\n+   Write_Line (\"Generate CodePeer intermediate format (no code generation)\");\n \n    --  Line for -gnatd switch\n \n@@ -178,6 +178,11 @@ begin\n    Write_Switch_Char (\"ec=?\");\n    Write_Line (\"Specify configuration pragmas file, e.g. -gnatec=/x/f.adc\");\n \n+   --  Line for -gnateC switch\n+\n+   Write_Switch_Char (\"eC\");\n+   Write_Line (\"Generate CodePeer messages (ignored without -gnatcC)\");\n+\n    --  Line for -gnated switch\n \n    Write_Switch_Char (\"ed\");"}]}