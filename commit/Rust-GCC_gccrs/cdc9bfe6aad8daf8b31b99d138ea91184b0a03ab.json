{"sha": "cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RjOWJmZTZhYWQ4ZGFmOGIzMWI5OWQxMzhlYTkxMTg0YjBhMDNhYg==", "commit": {"author": {"name": "Kazuhiro Inaoka", "email": "inaoka.kazuhiro@renesas.com", "date": "2005-07-05T14:16:06Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-07-05T14:16:06Z"}, "message": "m32r-protos.h: Remove m32r_finalize_pic.\n\n\t* config/m32r/m32r-protos.h: Remove m32r_finalize_pic.\n\t* config/m32r/m32r.c (m32r_compute_frame_size,\n\tm32r_expand_prologue): Take current_function_profile into\n\taccount whenever we reference\n\tcurrent_function_uses_pic_offset_table.\n\t(m32r_finalize_pic): Remove.\n\t* config/m32r/m32r.h (FINALIZE_PIC): Likewise.\n\nFrom-SVN: r101624", "tree": {"sha": "c86d6bc7f7f499c4ab08f79f41cfef9c08fd99ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c86d6bc7f7f499c4ab08f79f41cfef9c08fd99ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/comments", "author": null, "committer": null, "parents": [{"sha": "064be44503f57889da7d102b3e0eac9ebb3d8058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/064be44503f57889da7d102b3e0eac9ebb3d8058", "html_url": "https://github.com/Rust-GCC/gccrs/commit/064be44503f57889da7d102b3e0eac9ebb3d8058"}], "stats": {"total": 41, "additions": 14, "deletions": 27}, "files": [{"sha": "87268cdb6fa54e73dcdcf7d805a256c2bfbfce51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "patch": "@@ -1,3 +1,13 @@\n+2005-07-05  Kazuhiro Inaoka  <inaoka.kazuhiro@renesas.com>\n+\n+\t* config/m32r/m32r-protos.h: Remove m32r_finalize_pic.\n+\t* config/m32r/m32r.c (m32r_compute_frame_size,\n+\tm32r_expand_prologue): Take current_function_profile into\n+\taccount whenever we reference\n+\tcurrent_function_uses_pic_offset_table.\n+\t(m32r_finalize_pic): Remove.\n+\t* config/m32r/m32r.h (FINALIZE_PIC): Likewise.\n+\n 2005-07-05  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* Makefile.in (stamp-as): Use $(ORIGINAL_AS_FOR_TARGET)"}, {"sha": "a8479302540f983f1bdceb22a24a45aec04feee0", "filename": "gcc/config/m32r/m32r-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2Fconfig%2Fm32r%2Fm32r-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2Fconfig%2Fm32r%2Fm32r-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r-protos.h?ref=cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "patch": "@@ -29,7 +29,6 @@ extern void   m32r_init (void);\n extern void   m32r_init_expanders (void);\n extern unsigned m32r_compute_frame_size (int);\n extern void   m32r_expand_prologue (void);\n-extern void   m32r_finalize_pic (void);\n extern int    direct_return (void);\n extern void   m32r_load_pic_register (void);\n "}, {"sha": "d772db08993107caa0ffe357f4b0576d300e112d", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "patch": "@@ -1276,7 +1276,8 @@ m32r_compute_frame_size (int size)\t/* # of var. bytes allocated.  */\n   unsigned int gmask;\n   enum m32r_function_type fn_type;\n   int interrupt_p;\n-  int pic_reg_used = flag_pic && (current_function_uses_pic_offset_table);\n+  int pic_reg_used = flag_pic && (current_function_uses_pic_offset_table\n+                                  | current_function_profile);\n \n   var_size\t= M32R_STACK_ALIGN (size);\n   args_size\t= M32R_STACK_ALIGN (current_function_outgoing_args_size);\n@@ -1375,7 +1376,8 @@ m32r_expand_prologue (void)\n   int regno;\n   int frame_size;\n   unsigned int gmask;\n-  int pic_reg_used = flag_pic && (current_function_uses_pic_offset_table);\n+  int pic_reg_used = flag_pic && (current_function_uses_pic_offset_table\n+                                  | current_function_profile);\n \n   if (! current_frame_info.initialized)\n     m32r_compute_frame_size (get_frame_size ());\n@@ -1709,14 +1711,6 @@ m32r_legitimize_pic_address (rtx orig, rtx reg)\n \n   return orig;\n }\n-\n-/* Emit special PIC prologues and epilogues.  */\n-\n-void\n-m32r_finalize_pic (void)\n-{\n-  current_function_uses_pic_offset_table |= current_function_profile;\n-}\n \f\n /* Nested function support.  */\n "}, {"sha": "ca6e86f53a7a66a4f3690f4440bcdbaab337a980", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=cdc9bfe6aad8daf8b31b99d138ea91184b0a03ab", "patch": "@@ -1344,22 +1344,6 @@ L2:     .word STATIC\n /* This register is call-saved on the M32R.  */\n /*#define PIC_OFFSET_TABLE_REG_CALL_CLOBBERED*/\n \n-/* By generating position-independent code, when two different programs (A\n-   and B) share a common library (libC.a), the text of the library can be\n-   shared whether or not the library is linked at the same address for both\n-   programs.  In some of these environments, position-independent code\n-   requires not only the use of different addressing modes, but also\n-   special code to enable the use of these addressing modes.\n-\n-   The FINALIZE_PIC macro serves as a hook to emit these special\n-   codes once the function is being compiled into assembly code, but not\n-   before.  (It is not done before, because in the case of compiling an\n-   inline function, it would lead to multiple PIC prologues being\n-   included in functions which used inline functions and were compiled to\n-   assembly language.)  */\n-\n-#define FINALIZE_PIC m32r_finalize_pic ()\n-\n /* A C expression that is nonzero if X is a legitimate immediate\n    operand on the target machine when generating position independent code.\n    You can assume that X satisfies CONSTANT_P, so you need not"}]}