{"sha": "27c2cfa6992fb85f5705f918424b16cf1089a4b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdjMmNmYTY5OTJmYjg1ZjU3MDVmOTE4NDI0YjE2Y2YxMDg5YTRiOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-04T13:12:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-04T13:12:02Z"}, "message": "re PR tree-optimization/43879 (-fipa-pta causes various miscompilations)\n\n2010-05-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43879\n\t* tree-ssa-structalias.c (alias_get_name): Use\n\tDECL_ASSEMBLER_NAME if available.\n\t(create_function_info_for): Return the varinfo node.\n\t(ipa_pta_execute): Associate same-body aliases and extra names\n\twith their origin nodes varinfo.  Dump DECL_ASSEMBLER_NAME.\n\n\t* g++.dg/torture/pr43879-1_0.C: New testcase.\n\t* g++.dg/torture/pr43879-1_1.C: Likewise.\n\nFrom-SVN: r159026", "tree": {"sha": "6e4188a7f3108777ae02378556abaec21d9a9f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e4188a7f3108777ae02378556abaec21d9a9f03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27c2cfa6992fb85f5705f918424b16cf1089a4b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c2cfa6992fb85f5705f918424b16cf1089a4b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c2cfa6992fb85f5705f918424b16cf1089a4b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c2cfa6992fb85f5705f918424b16cf1089a4b8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c265c4d12bbf2dae3f42d63313db971993f1237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c265c4d12bbf2dae3f42d63313db971993f1237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c265c4d12bbf2dae3f42d63313db971993f1237"}], "stats": {"total": 117, "additions": 108, "deletions": 9}, "files": [{"sha": "c7d862004cb6d2f6ea22e71410e388d4da4215d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27c2cfa6992fb85f5705f918424b16cf1089a4b8", "patch": "@@ -1,3 +1,12 @@\n+2010-05-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43879\n+\t* tree-ssa-structalias.c (alias_get_name): Use\n+\tDECL_ASSEMBLER_NAME if available.\n+\t(create_function_info_for): Return the varinfo node.\n+\t(ipa_pta_execute): Associate same-body aliases and extra names\n+\twith their origin nodes varinfo.  Dump DECL_ASSEMBLER_NAME.\n+\n 2010-05-04  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (sh_small_register_classes_for_mode_p): Remove"}, {"sha": "60ec841568b6f46b759b7fccb65ec5d06f1596b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27c2cfa6992fb85f5705f918424b16cf1089a4b8", "patch": "@@ -1,3 +1,9 @@\n+2010-05-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43879\n+\t* g++.dg/torture/pr43879-1_0.C: New testcase.\n+\t* g++.dg/torture/pr43879-1_1.C: Likewise.\n+\n 2010-05-03  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/43953"}, {"sha": "710f6adfed9feb9765cd7ccc7061726509f317ba", "filename": "gcc/testsuite/g++.dg/torture/pr43879-1_0.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43879-1_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43879-1_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43879-1_0.C?ref=27c2cfa6992fb85f5705f918424b16cf1089a4b8", "patch": "@@ -0,0 +1,11 @@\n+struct A {\n+    int *i;\n+    A();\n+    ~A();\n+};\n+\n+static int x = 0;\n+\n+A::A() : i(&x) {}\n+A::~A() {}\n+"}, {"sha": "0c943381fa325a6add73f90df2310aa362d342e8", "filename": "gcc/testsuite/g++.dg/torture/pr43879-1_1.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43879-1_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43879-1_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr43879-1_1.C?ref=27c2cfa6992fb85f5705f918424b16cf1089a4b8", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fipa-pta\" } */\n+/* { dg-additional-sources \"pr43879-1_0.C\" } */\n+\n+struct A {\n+    int *i;\n+    A();\n+    ~A();\n+};\n+\n+static inline int\n+aa(int *a, int *b)\n+{\n+  (void)b;\n+  return *a;\n+}\n+\n+struct B {\n+    B() : i(0) {}\n+    int i;\n+    B(const A &a) : i(0)\n+    {\n+      f(*a.i);\n+    }\n+    void __attribute__((noinline, noclone))\n+\tf(int j)\n+\t  {\n+\t    aa(&i, &j);\n+\t    i = 1;\n+\t  }\n+};\n+\n+int\n+test()\n+{\n+  B b1;\n+  B b2 = B(A());\n+  b1 = B(A());\n+  if (b1.i != b2.i) __builtin_abort();\n+  return 0;\n+}\n+\n+int\n+main()\n+{\n+  return test();\n+}\n+"}, {"sha": "f688d9bcae50e956539ec93aa1aeaf4e6d145f41", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c2cfa6992fb85f5705f918424b16cf1089a4b8/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=27c2cfa6992fb85f5705f918424b16cf1089a4b8", "patch": "@@ -2759,10 +2759,14 @@ lookup_vi_for_tree (tree t)\n static const char *\n alias_get_name (tree decl)\n {\n-  const char *res = get_name (decl);\n+  const char *res;\n   char *temp;\n   int num_printed = 0;\n \n+  if (DECL_ASSEMBLER_NAME_SET_P (decl))\n+    res = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+  else\n+    res= get_name (decl);\n   if (res != NULL)\n     return res;\n \n@@ -4956,7 +4960,7 @@ count_num_arguments (tree decl, bool *is_varargs)\n /* Creation function node for DECL, using NAME, and return the index\n    of the variable we've created for the function.  */\n \n-static unsigned int\n+static varinfo_t\n create_function_info_for (tree decl, const char *name)\n {\n   struct function *fn = DECL_STRUCT_FUNCTION (decl);\n@@ -5129,7 +5133,7 @@ create_function_info_for (tree decl, const char *name)\n       prev_vi = argvi;\n     }\n \n-  return vi->id;\n+  return vi;\n }\n \n \n@@ -6565,20 +6569,36 @@ ipa_pta_execute (void)\n   /* Build the constraints.  */\n   for (node = cgraph_nodes; node; node = node->next)\n     {\n+      struct cgraph_node *alias;\n+      varinfo_t vi;\n+\n       /* Nodes without a body are not interesting.  Especially do not\n          visit clones at this point for now - we get duplicate decls\n \t there for inline clones at least.  */\n       if (!gimple_has_body_p (node->decl)\n \t  || node->clone_of)\n \tcontinue;\n \n-      create_function_info_for (node->decl,\n-\t\t\t\tcgraph_node_name (node));\n+      vi = create_function_info_for (node->decl,\n+\t\t\t\t     alias_get_name (node->decl));\n+\n+      /* Associate the varinfo node with all aliases.  */\n+      for (alias = node->same_body; alias; alias = alias->next)\n+\tinsert_vi_for_tree (alias->decl, vi);\n     }\n \n   /* Create constraints for global variables and their initializers.  */\n   for (var = varpool_nodes; var; var = var->next)\n-    get_vi_for_tree (var->decl);\n+    {\n+      struct varpool_node *alias;\n+      varinfo_t vi;\n+\n+      vi = get_vi_for_tree (var->decl);\n+\n+      /* Associate the varinfo node with all aliases.  */\n+      for (alias = var->extra_name; alias; alias = alias->next)\n+\tinsert_vi_for_tree (alias->decl, vi);\n+    }\n \n   if (dump_file)\n     {\n@@ -6601,9 +6621,14 @@ ipa_pta_execute (void)\n \tcontinue;\n \n       if (dump_file)\n-\tfprintf (dump_file,\n-\t\t \"Generating constraints for %s\\n\",\n-\t\t cgraph_node_name (node));\n+\t{\n+\t  fprintf (dump_file,\n+\t\t   \"Generating constraints for %s\", cgraph_node_name (node));\n+\t  if (DECL_ASSEMBLER_NAME_SET_P (node->decl))\n+\t    fprintf (dump_file, \" (%s)\",\n+\t\t     IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (node->decl)));\n+\t  fprintf (dump_file, \"\\n\");\n+\t}\n \n       func = DECL_STRUCT_FUNCTION (node->decl);\n       old_func_decl = current_function_decl;"}]}