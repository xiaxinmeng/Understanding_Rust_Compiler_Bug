{"sha": "3a15f566e953c9811f85641c627fdfcc91bacf0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExNWY1NjZlOTUzYzk4MTFmODU2NDFjNjI3ZmRmY2M5MWJhY2YwYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-07-30T10:34:12Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-07-30T10:34:12Z"}, "message": "g++.exp (g++_link_flags): Check whether LD_LIBRARY_PATH already contains $ld_library_path.\n\n\t* lib/g++.exp (g++_link_flags): Check whether LD_LIBRARY_PATH already\n\tcontains $ld_library_path.\n\t* lib/gfortran.exp (gfortran_link_flags): Likewise.\n\nFrom-SVN: r85329", "tree": {"sha": "976c205cc864cd6050b8ae212857b22ad0c9cedd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/976c205cc864cd6050b8ae212857b22ad0c9cedd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a15f566e953c9811f85641c627fdfcc91bacf0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a15f566e953c9811f85641c627fdfcc91bacf0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a15f566e953c9811f85641c627fdfcc91bacf0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a15f566e953c9811f85641c627fdfcc91bacf0b/comments", "author": null, "committer": null, "parents": [{"sha": "e109f49acc2604fdf521e142629378eae5151d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e109f49acc2604fdf521e142629378eae5151d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e109f49acc2604fdf521e142629378eae5151d29"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "1db479c6b211791ab925433e8a335c1b27704b03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a15f566e953c9811f85641c627fdfcc91bacf0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a15f566e953c9811f85641c627fdfcc91bacf0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a15f566e953c9811f85641c627fdfcc91bacf0b", "patch": "@@ -1,3 +1,9 @@\n+2004-07-30  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* lib/g++.exp (g++_link_flags): Check whether LD_LIBRARY_PATH already\n+\tcontains $ld_library_path.\n+\t* lib/gfortran.exp (gfortran_link_flags): Likewise.\n+\n 2004-07-29  Richard Henderson  <rth@redhat.com>\n \n \t* g++.dg/template/sizeof8.C: Don't assume 32bit pointers."}, {"sha": "df8e0a4b8f15c95b5e6adbd019eee56684e614c6", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a15f566e953c9811f85641c627fdfcc91bacf0b/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a15f566e953c9811f85641c627fdfcc91bacf0b/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=3a15f566e953c9811f85641c627fdfcc91bacf0b", "patch": "@@ -177,9 +177,16 @@ proc g++_link_flags { paths } {\n     # Doing this does cause trouble when testing cross-compilers.\n     if {![is_remote target]} {\n \tglobal env;\n-\tif { [info exists env(LD_LIBRARY_PATH)] \n-\t     && $env(LD_LIBRARY_PATH) != \"\" } {\n-\t\tappend ld_library_path \":$env(LD_LIBRARY_PATH)\";\n+\tif [info exists env(LD_LIBRARY_PATH)] {\n+\t    # If we've already added these directories once, keep the\n+\t    # existing path.\n+\t    if {$ld_library_path == $env(LD_LIBRARY_PATH)\n+\t\t|| [string first $ld_library_path: \\\n+\t\t\t\t $env(LD_LIBRARY_PATH)] == 0} {\n+\t\tset ld_library_path $env(LD_LIBRARY_PATH)\n+\t    } elseif { $env(LD_LIBRARY_PATH) != \"\" } {\n+\t\tappend ld_library_path \":$env(LD_LIBRARY_PATH)\"\n+\t    }\n \t}\n \tsetenv  LD_LIBRARY_PATH     $ld_library_path\n \tsetenv  SHLIB_PATH          $ld_library_path"}, {"sha": "4303871e3f92c7dbb313d7081876447527e789fd", "filename": "gcc/testsuite/lib/gfortran.exp", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a15f566e953c9811f85641c627fdfcc91bacf0b/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a15f566e953c9811f85641c627fdfcc91bacf0b/gcc%2Ftestsuite%2Flib%2Fgfortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran.exp?ref=3a15f566e953c9811f85641c627fdfcc91bacf0b", "patch": "@@ -121,10 +121,17 @@ proc gfortran_link_flags { paths } {\n     # Doing this does cause trouble when testing cross-compilers.\n     if {![is_remote target]} {\n         global env;\n-        if { [info exists env(LD_LIBRARY_PATH)]\n-             && $env(LD_LIBRARY_PATH) != \"\" } {\n-                append ld_library_path \":$env(LD_LIBRARY_PATH)\";\n-        }\n+\tif [info exists env(LD_LIBRARY_PATH)] {\n+\t    # If we've already added these directories once, keep the\n+\t    # existing path.\n+\t    if {$ld_library_path == $env(LD_LIBRARY_PATH)\n+\t\t|| [string first $ld_library_path: \\\n+\t\t\t\t $env(LD_LIBRARY_PATH)] == 0} {\n+\t\tset ld_library_path $env(LD_LIBRARY_PATH)\n+\t    } elseif { $env(LD_LIBRARY_PATH) != \"\" } {\n+\t\tappend ld_library_path \":$env(LD_LIBRARY_PATH)\"\n+\t    }\n+\t}\n         setenv  LD_LIBRARY_PATH     $ld_library_path\n         setenv  SHLIB_PATH          $ld_library_path\n         setenv  LD_LIBRARYN32_PATH  $ld_library_path"}]}