{"sha": "3336093d34d876ed7d9a04aa598842405d1c8563", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMzNjA5M2QzNGQ4NzZlZDdkOWEwNGFhNTk4ODQyNDA1ZDFjODU2Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-20T10:55:11Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-20T10:55:11Z"}, "message": "emmintrin.h: Use __vector_size__ instead of vector_size.\n\n        * config/i386/emmintrin.h: Use __vector_size__ instead of vector_size.\n        * config/i386/mmintrin.h, config/i386/xmmintrin.h: Likewise.\n\nFrom-SVN: r92412", "tree": {"sha": "c0e4aab53040140b1a249ab2454aeb25b5cc1ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0e4aab53040140b1a249ab2454aeb25b5cc1ee1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3336093d34d876ed7d9a04aa598842405d1c8563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3336093d34d876ed7d9a04aa598842405d1c8563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3336093d34d876ed7d9a04aa598842405d1c8563", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3336093d34d876ed7d9a04aa598842405d1c8563/comments", "author": null, "committer": null, "parents": [{"sha": "f45592874280feb8515bfdc75e532ed94e5faf5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f45592874280feb8515bfdc75e532ed94e5faf5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f45592874280feb8515bfdc75e532ed94e5faf5e"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "d746ebfa07fe6b6cb964f67810c8557bd2ddc384", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3336093d34d876ed7d9a04aa598842405d1c8563", "patch": "@@ -1,3 +1,8 @@\n+2004-12-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/emmintrin.h: Use __vector_size__ instead of vector_size.\n+\t* config/i386/mmintrin.h, config/i386/xmmintrin.h: Likewise.\n+\n 2004-12-20  Ben Elliston  <bje@au.ibm.com>\n \n \t* doc/md.texi (Expander Definitions): Use @emph instead of @strong"}, {"sha": "67450e44e28e0d34dbee2b8064dadfe047f6e70a", "filename": "gcc/config/i386/emmintrin.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2Fconfig%2Fi386%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2Fconfig%2Fi386%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Femmintrin.h?ref=3336093d34d876ed7d9a04aa598842405d1c8563", "patch": "@@ -34,11 +34,11 @@\n #include <xmmintrin.h>\n \n /* SSE2 */\n-typedef double __v2df __attribute__ ((vector_size (16)));\n-typedef long long __v2di __attribute__ ((vector_size (16)));\n-typedef int __v4si __attribute__ ((vector_size (16)));\n-typedef short __v8hi __attribute__ ((vector_size (16)));\n-typedef char __v16qi __attribute__ ((vector_size (16)));\n+typedef double __v2df __attribute__ ((__vector_size__ (16)));\n+typedef long long __v2di __attribute__ ((__vector_size__ (16)));\n+typedef int __v4si __attribute__ ((__vector_size__ (16)));\n+typedef short __v8hi __attribute__ ((__vector_size__ (16)));\n+typedef char __v16qi __attribute__ ((__vector_size__ (16)));\n \n /* Create a selector for use with the SHUFPD instruction.  */\n #define _MM_SHUFFLE2(fp1,fp0) \\"}, {"sha": "e0be004dc24967d5129d54624c1dc33f88bc48e7", "filename": "gcc/config/i386/mmintrin.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmintrin.h?ref=3336093d34d876ed7d9a04aa598842405d1c8563", "patch": "@@ -34,12 +34,12 @@\n # error \"MMX instruction set not enabled\"\n #else\n /* The data type intended for user use.  */\n-typedef int __m64 __attribute__ ((vector_size (8)));\n+typedef int __m64 __attribute__ ((__vector_size__ (8)));\n \n /* Internal data types for implementing the intrinsics.  */\n-typedef int __v2si __attribute__ ((vector_size (8)));\n-typedef short __v4hi __attribute__ ((vector_size (8)));\n-typedef char __v8qi __attribute__ ((vector_size (8)));\n+typedef int __v2si __attribute__ ((__vector_size__ (8)));\n+typedef short __v4hi __attribute__ ((__vector_size__ (8)));\n+typedef char __v8qi __attribute__ ((__vector_size__ (8)));\n \n /* Empty the multimedia state.  */\n static __inline void"}, {"sha": "6ef302e82595171ae5b35c43a213add680f2a43b", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3336093d34d876ed7d9a04aa598842405d1c8563/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=3336093d34d876ed7d9a04aa598842405d1c8563", "patch": "@@ -41,10 +41,10 @@\n #include <mm_malloc.h>\n \n /* The data type intended for user use.  */\n-typedef float __m128 __attribute__ ((vector_size (16)));\n+typedef float __m128 __attribute__ ((__vector_size__ (16)));\n \n /* Internal data types for implementing the intrinsics.  */\n-typedef float __v4sf __attribute__ ((vector_size (16)));\n+typedef float __v4sf __attribute__ ((__vector_size__ (16)));\n \n /* Create a selector for use with the SHUFPS instruction.  */\n #define _MM_SHUFFLE(fp3,fp2,fp1,fp0) \\"}]}