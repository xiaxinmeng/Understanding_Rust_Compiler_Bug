{"sha": "fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ5OTEwMzkyYmMyODU0ZWNjNWM5MWZkNmYwODlmYTRlNjZlZGI0NA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-05-08T17:56:13Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-05-08T17:56:13Z"}, "message": "re PR libfortran/80602 (Reduce stack usage for blocked matmul)\n\n2017-05-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/80602\n\t* m4/matmul_internal.m4:  'matmul_name`:  Change\n\tt1 to a VLA of the required size.\n        * generated/matmul_c10.c: Regenerated.\n        * generated/matmul_c16.c: Regenerated.\n        * generated/matmul_c4.c: Regenerated.\n        * generated/matmul_c8.c: Regenerated.\n        * generated/matmul_i1.c: Regenerated.\n        * generated/matmul_i16.c: Regenerated.\n        * generated/matmul_i2.c: Regenerated.\n        * generated/matmul_i4.c: Regenerated.\n        * generated/matmul_i8.c: Regenerated.\n        * generated/matmul_r10.c: Regenerated.\n        * generated/matmul_r16.c: Regenerated.\n        * generated/matmul_r4.c: Regenerated.\n        * generated/matmul_r8.c: Regenerated.\n\n2017-05-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/80602\n\t* gfortran.dg/matmul_15.f90:  New test case.\n\nFrom-SVN: r247753", "tree": {"sha": "644a36f58118c3fd22c9a3fc368ec218e1e7d524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644a36f58118c3fd22c9a3fc368ec218e1e7d524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/comments", "author": null, "committer": null, "parents": [{"sha": "d16d5eac2a0132adcd9e88ae288bedd03abfc513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16d5eac2a0132adcd9e88ae288bedd03abfc513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16d5eac2a0132adcd9e88ae288bedd03abfc513"}], "stats": {"total": 987, "additions": 853, "deletions": 134}, "files": [{"sha": "6e2e5993c3b5e571071b0f005e93368382c7bddf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -1,3 +1,8 @@\n+2017-05-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/80602\n+\t* gfortran.dg/matmul_15.f90:  New test case.\n+\n 2017-05-08  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* testsuite/gcc.dg/vect/vect-44.c: Add -fno-vect-cost-model."}, {"sha": "9e731ed57be3d8f77012de9c790b791bcc83640b", "filename": "gcc/testsuite/gfortran.dg/matmul_15.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_15.f90?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do  run }\n+! { dg-options \"-finline-matmul-limit=0\" }\n+! Stress-test the matmul blocking code with sizes close to or\n+! equal to powers ot two.\n+\n+program main\n+  implicit none\n+  integer, dimension(*), parameter :: nn = &\n+       & [2,3,4,5, 7,8,9, 15,16,17, 31,32,33, 63,64,65, &\n+       127 ,228,129,  255,256,257];\n+  integer, parameter :: s = size(nn)\n+  real, dimension(:,:),allocatable :: a, b, c\n+  integer :: i1, i2, i3\n+  integer :: nx, ny, count\n+  real :: sm\n+\n+  sm = 0.0\n+  do i1=1, s\n+     nx = nn(i1)\n+     do i2=1,s\n+        ny = nn(i2)\n+        do i3=1,s\n+           count = nn(i3)\n+           allocate (a(nx,ny), b(ny,count), c(nx,count))\n+           call random_number(a)\n+           call random_number(b)\n+           c = matmul(a,b)\n+           sm = sm + sum(c)\n+           deallocate(a,b,c)\n+        end do\n+     end do\n+  end do\n+\n+end program main"}, {"sha": "e29301a5d0ffe96bfa5e11c5806dc84fa1789112", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -1,3 +1,22 @@\n+2017-05-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/80602\n+\t* m4/matmul_internal.m4:  'matmul_name`:  Change\n+\tt1 to a VLA of the required size.\n+        * generated/matmul_c10.c: Regenerated.\n+        * generated/matmul_c16.c: Regenerated.\n+        * generated/matmul_c4.c: Regenerated.\n+        * generated/matmul_c8.c: Regenerated.\n+        * generated/matmul_i1.c: Regenerated.\n+        * generated/matmul_i16.c: Regenerated.\n+        * generated/matmul_i2.c: Regenerated.\n+        * generated/matmul_i4.c: Regenerated.\n+        * generated/matmul_i8.c: Regenerated.\n+        * generated/matmul_r10.c: Regenerated.\n+        * generated/matmul_r16.c: Regenerated.\n+        * generated/matmul_r4.c: Regenerated.\n+        * generated/matmul_r8.c: Regenerated.\n+\n 2017-04-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* close.c: Fix white space in pointer declarations and comment"}, {"sha": "4914a6f323f284b0c3fdedf22025f31f7ea48169", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -137,8 +137,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/no-executables.m4 \\\n-\t$(top_srcdir)/../config/math.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/math.m4 \\\n+\t$(top_srcdir)/../config/ax_check_define.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\"}, {"sha": "55f8fe9ab5578527afe814f7222b17bed5a6d7df", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_c10_avx (gfc_array_c10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_c10_avx (gfc_array_c10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_c10_avx2 (gfc_array_c10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_c10_avx2 (gfc_array_c10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_c10_avx512f (gfc_array_c10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_c10_avx512f (gfc_array_c10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_c10_vanilla (gfc_array_c10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_c10_vanilla (gfc_array_c10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "bc90296f5e7c46c295be40c0c40fca2720eace13", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_c16_avx (gfc_array_c16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_c16_avx (gfc_array_c16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_c16_avx2 (gfc_array_c16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_c16_avx2 (gfc_array_c16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_c16_avx512f (gfc_array_c16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_c16_avx512f (gfc_array_c16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_c16_vanilla (gfc_array_c16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_c16_vanilla (gfc_array_c16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "12418009c2e2b4268cc183d0a86f98d4b1df5148", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_c4_avx (gfc_array_c4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_c4_avx (gfc_array_c4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_c4_avx2 (gfc_array_c4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_c4_avx2 (gfc_array_c4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_c4_avx512f (gfc_array_c4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_c4_avx512f (gfc_array_c4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_c4_vanilla (gfc_array_c4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_c4_vanilla (gfc_array_c4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "aafa3be182124ce444e6195367de57b880e4ca09", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_c8_avx (gfc_array_c8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_c8_avx (gfc_array_c8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_c8_avx2 (gfc_array_c8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_c8_avx2 (gfc_array_c8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_c8_avx512f (gfc_array_c8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_c8_avx512f (gfc_array_c8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_c8_vanilla (gfc_array_c8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_c8_vanilla (gfc_array_c8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_COMPLEX_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_COMPLEX_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_COMPLEX_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "bbf84a9c7dc837b88a79b18808d6a3adce4de760", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_i1_avx (gfc_array_i1 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_1 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_1 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_i1_avx (gfc_array_i1 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_1 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_i1_avx2 (gfc_array_i1 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_1 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_1 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_i1_avx2 (gfc_array_i1 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_1 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_i1_avx512f (gfc_array_i1 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_1 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_1 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_i1_avx512f (gfc_array_i1 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_1 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_i1_vanilla (gfc_array_i1 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_1 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_1 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_i1_vanilla (gfc_array_i1 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_1 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_1 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_1 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_1 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "1394aba0aa72799bb2e5f481c3bb27582edcacef", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_i16_avx (gfc_array_i16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_i16_avx (gfc_array_i16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_i16_avx2 (gfc_array_i16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_i16_avx2 (gfc_array_i16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_i16_avx512f (gfc_array_i16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_i16_avx512f (gfc_array_i16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_i16_vanilla (gfc_array_i16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_i16_vanilla (gfc_array_i16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "9ffe75bdff819f643029cfc6f340a1eb1cddbc31", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_i2_avx (gfc_array_i2 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_2 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_2 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_i2_avx (gfc_array_i2 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_2 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_i2_avx2 (gfc_array_i2 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_2 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_2 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_i2_avx2 (gfc_array_i2 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_2 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_i2_avx512f (gfc_array_i2 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_2 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_2 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_i2_avx512f (gfc_array_i2 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_2 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_i2_vanilla (gfc_array_i2 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_2 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_2 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_i2_vanilla (gfc_array_i2 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_2 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_2 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_2 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_2 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "eab6c773d99a698f8bb84079398157841372fbe7", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_i4_avx (gfc_array_i4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_i4_avx (gfc_array_i4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_i4_avx2 (gfc_array_i4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_i4_avx2 (gfc_array_i4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_i4_avx512f (gfc_array_i4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_i4_avx512f (gfc_array_i4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_i4_vanilla (gfc_array_i4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_i4_vanilla (gfc_array_i4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "4dee0abbd7e716ae6bbd8a199489928a776c6bd6", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_i8_avx (gfc_array_i8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_i8_avx (gfc_array_i8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_i8_avx2 (gfc_array_i8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_i8_avx2 (gfc_array_i8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_i8_avx512f (gfc_array_i8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_i8_avx512f (gfc_array_i8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_i8_vanilla (gfc_array_i8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_i8_vanilla (gfc_array_i8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_INTEGER_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_INTEGER_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_INTEGER_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "4b66a8494b36d97b538e27bdadc86883a03d0688", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_r10_avx (gfc_array_r10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_r10_avx (gfc_array_r10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_r10_avx2 (gfc_array_r10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_r10_avx2 (gfc_array_r10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_r10_avx512f (gfc_array_r10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_r10_avx512f (gfc_array_r10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_r10_vanilla (gfc_array_r10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_r10_vanilla (gfc_array_r10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_10 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_10 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_10 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "fcef45b990530f522b1d108ac09716545b6da088", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_r16_avx (gfc_array_r16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_r16_avx (gfc_array_r16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_r16_avx2 (gfc_array_r16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_r16_avx2 (gfc_array_r16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_r16_avx512f (gfc_array_r16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_r16_avx512f (gfc_array_r16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_r16_vanilla (gfc_array_r16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_r16_vanilla (gfc_array_r16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_16 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_16 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_16 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "0996c69ad0479733512ba2b6038507a7abd21790", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_r4_avx (gfc_array_r4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_r4_avx (gfc_array_r4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_r4_avx2 (gfc_array_r4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_r4_avx2 (gfc_array_r4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_r4_avx512f (gfc_array_r4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_r4_avx512f (gfc_array_r4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_r4_vanilla (gfc_array_r4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_r4_vanilla (gfc_array_r4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_4 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_4 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_4 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "1d75e5c9560efaa43001ef851910ad7036f5a9d0", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -286,8 +286,7 @@ matmul_r8_avx (gfc_array_r8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -311,6 +310,17 @@ matmul_r8_avx (gfc_array_r8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -829,8 +839,7 @@ matmul_r8_avx2 (gfc_array_r8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -854,6 +863,17 @@ matmul_r8_avx2 (gfc_array_r8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1372,8 +1392,7 @@ matmul_r8_avx512f (gfc_array_r8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1397,6 +1416,17 @@ matmul_r8_avx512f (gfc_array_r8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -1911,8 +1941,7 @@ matmul_r8_vanilla (gfc_array_r8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -1936,6 +1965,17 @@ matmul_r8_vanilla (gfc_array_r8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)\n@@ -2508,8 +2548,7 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      GFC_REAL_8 t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      GFC_REAL_8 f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -2533,6 +2572,17 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      GFC_REAL_8 t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}, {"sha": "37839567168deab0f2f27a33dc1bf3e80ee22b76", "filename": "libgfortran/m4/matmul_internal.m4", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fm4%2Fmatmul_internal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd9910392bc2854ecc5c91fd6f089fa4e66edb44/libgfortran%2Fm4%2Fmatmul_internal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul_internal.m4?ref=fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "patch": "@@ -202,8 +202,7 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n \t\t i1, i2, i3, i4, i5, i6;\n \n       /* Local variables */\n-      'rtype_name` t1[65536], /* was [256][256] */\n-\t\t f11, f12, f21, f22, f31, f32, f41, f42,\n+      'rtype_name` f11, f12, f21, f22, f31, f32, f41, f42,\n \t\t f13, f14, f23, f24, f33, f34, f43, f44;\n       index_type i, j, l, ii, jj, ll;\n       index_type isec, jsec, lsec, uisec, ujsec, ulsec;\n@@ -227,6 +226,17 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n       if (m == 0 || n == 0 || k == 0)\n \treturn;\n \n+      /* Adjust size of t1 to what is needed.  */\n+      index_type t1_dim;\n+      t1_dim = (a_dim1-1) * 256 + b_dim1;\n+      if (t1_dim > 65536)\n+\tt1_dim = 65536;\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wvla\"\n+      'rtype_name` t1[t1_dim]; /* was [256][256] */\n+#pragma GCC diagnostic pop\n+\n       /* Empty c first.  */\n       for (j=1; j<=n; j++)\n \tfor (i=1; i<=m; i++)"}]}