{"sha": "1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkMTlkOThkZWYzNTE1ZTViMmZiOWU2OGJlMzRkYTRhNzhhN2ZkYg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-09-17T07:59:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-17T07:59:33Z"}, "message": "[Ada] Adding assertions on extra formals for BIP function calls\n\nThis patch adds assertions to ensure that the frontend passes to the\nbackend the right number of extra parameters required for build in place\nfunction calls. No functional change.\n\n2019-09-17  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch6.ads (Needs_BIP_Task_Actuals): New subprogram.\n\t* exp_ch6.adb (Add_Task_Actuals_To_Build_In_Place_Call): Code\n\tcleanup.\n\t(Check_Number_Of_Actuals): New subprogram.\n\t(Make_Build_In_Place_Call_In_Allocator): Adding assertion.\n\t(Make_Build_In_Place_Call_In_Anonymous_Context): Adding\n\tassertion.\n\t(Make_Build_In_Place_Call_In_Assignment): Adding assertion.\n\t(Make_Build_In_Place_Call_In_Object_Declaration): Code cleanup\n\tplus assertion addition.\n\t(Needs_BIP_Task_Actuals): New subprogram.\n\t* sem_ch6.adb (Create_Extra_Formals): Rely on\n\tNeeds_BIP_Task_Actuals() to check if the master of the tasks to\n\tbe created, and the caller's activation chain formals are\n\tneeded.\n\nFrom-SVN: r275772", "tree": {"sha": "a9c52d5ac642a04f1861425dbd304bc678b0247e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9c52d5ac642a04f1861425dbd304bc678b0247e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d319f3acef1e80d7bb288a6b5d1ae76f2968b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d319f3acef1e80d7bb288a6b5d1ae76f2968b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d319f3acef1e80d7bb288a6b5d1ae76f2968b45"}], "stats": {"total": 82, "additions": 76, "deletions": 6}, "files": [{"sha": "c44a16de2ab8fa3259519c167af1b17e9aa34d71", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "patch": "@@ -1,3 +1,21 @@\n+2019-09-17  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch6.ads (Needs_BIP_Task_Actuals): New subprogram.\n+\t* exp_ch6.adb (Add_Task_Actuals_To_Build_In_Place_Call): Code\n+\tcleanup.\n+\t(Check_Number_Of_Actuals): New subprogram.\n+\t(Make_Build_In_Place_Call_In_Allocator): Adding assertion.\n+\t(Make_Build_In_Place_Call_In_Anonymous_Context): Adding\n+\tassertion.\n+\t(Make_Build_In_Place_Call_In_Assignment): Adding assertion.\n+\t(Make_Build_In_Place_Call_In_Object_Declaration): Code cleanup\n+\tplus assertion addition.\n+\t(Needs_BIP_Task_Actuals): New subprogram.\n+\t* sem_ch6.adb (Create_Extra_Formals): Rely on\n+\tNeeds_BIP_Task_Actuals() to check if the master of the tasks to\n+\tbe created, and the caller's activation chain formals are\n+\tneeded.\n+\n 2019-09-17  Bob Duff  <duff@adacore.com>\n \n \t* libgnat/s-bituti.adb (Get_Val_2, Set_Val_2): Use new routines"}, {"sha": "3277b46b0ccbdc68a19d2345b2c6b1325c0f6251", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 54, "deletions": 4, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "patch": "@@ -146,6 +146,12 @@ package body Exp_Ch6 is\n    --  access discriminants do not require secondary stack use. Note we must\n    --  always use the secondary stack for dispatching-on-result calls.\n \n+   function Check_Number_Of_Actuals\n+     (Subp_Call : Node_Id;\n+      Subp_Id   : Entity_Id) return Boolean;\n+   --  Given a subprogram call to the given subprogram return True if the\n+   --  number of actual parameters (including extra actuals) is correct.\n+\n    procedure Check_Overriding_Operation (Subp : Entity_Id);\n    --  Subp is a dispatching operation. Check whether it may override an\n    --  inherited private operation, in which case its DT entry is that of\n@@ -543,8 +549,6 @@ package body Exp_Ch6 is\n       Chain         : Node_Id := Empty)\n    is\n       Loc           : constant Source_Ptr := Sloc (Function_Call);\n-      Result_Subt   : constant Entity_Id :=\n-                        Available_View (Etype (Function_Id));\n       Actual        : Node_Id;\n       Chain_Actual  : Node_Id;\n       Chain_Formal  : Node_Id;\n@@ -553,7 +557,7 @@ package body Exp_Ch6 is\n    begin\n       --  No such extra parameters are needed if there are no tasks\n \n-      if not Has_Task (Result_Subt) then\n+      if not Needs_BIP_Task_Actuals (Function_Id) then\n          return;\n       end if;\n \n@@ -869,6 +873,33 @@ package body Exp_Ch6 is\n         or else not Requires_Transient_Scope (Underlying_Type (Result_Subt));\n    end Caller_Known_Size;\n \n+   -----------------------------\n+   -- Check_Number_Of_Actuals --\n+   -----------------------------\n+\n+   function Check_Number_Of_Actuals\n+     (Subp_Call : Node_Id;\n+      Subp_Id   : Entity_Id) return Boolean\n+   is\n+      Formal : Entity_Id;\n+      Actual : Node_Id;\n+\n+   begin\n+      pragma Assert (Nkind_In (Subp_Call, N_Entry_Call_Statement,\n+                                          N_Function_Call,\n+                                          N_Procedure_Call_Statement));\n+\n+      Formal := First_Formal_With_Extras (Subp_Id);\n+      Actual := First_Actual (Subp_Call);\n+\n+      while Present (Formal) and then Present (Actual) loop\n+         Next_Formal_With_Extras (Formal);\n+         Next_Actual (Actual);\n+      end loop;\n+\n+      return No (Formal) and then No (Actual);\n+   end Check_Number_Of_Actuals;\n+\n    --------------------------------\n    -- Check_Overriding_Operation --\n    --------------------------------\n@@ -8335,6 +8366,7 @@ package body Exp_Ch6 is\n       Rewrite (Allocator, New_Occurrence_Of (Return_Obj_Access, Loc));\n \n       Analyze_And_Resolve (Allocator, Acc_Type);\n+      pragma Assert (Check_Number_Of_Actuals (Func_Call, Function_Id));\n    end Make_Build_In_Place_Call_In_Allocator;\n \n    ---------------------------------------------------\n@@ -8456,6 +8488,8 @@ package body Exp_Ch6 is\n          Add_Access_Actual_To_Build_In_Place_Call\n            (Func_Call, Function_Id, New_Occurrence_Of (Return_Obj_Id, Loc));\n \n+         pragma Assert (Check_Number_Of_Actuals (Func_Call, Function_Id));\n+\n       --  When the result subtype is unconstrained, the function must allocate\n       --  the return object in the secondary stack, so appropriate implicit\n       --  parameters are added to the call to indicate that. A transient\n@@ -8479,6 +8513,8 @@ package body Exp_Ch6 is\n \n          Add_Access_Actual_To_Build_In_Place_Call\n            (Func_Call, Function_Id, Empty);\n+\n+         pragma Assert (Check_Number_Of_Actuals (Func_Call, Function_Id));\n       end if;\n    end Make_Build_In_Place_Call_In_Anonymous_Context;\n \n@@ -8584,6 +8620,7 @@ package body Exp_Ch6 is\n       Insert_After_And_Analyze (Ptr_Typ_Decl, Obj_Decl);\n \n       Rewrite (Assign, Make_Null_Statement (Loc));\n+      pragma Assert (Check_Number_Of_Actuals (Func_Call, Func_Id));\n    end Make_Build_In_Place_Call_In_Assignment;\n \n    ----------------------------------------------------\n@@ -8908,7 +8945,7 @@ package body Exp_Ch6 is\n          Master_Exp => Fmaster_Actual);\n \n       if Nkind (Parent (Obj_Decl)) = N_Extended_Return_Statement\n-        and then Has_Task (Result_Subt)\n+        and then Needs_BIP_Task_Actuals (Function_Id)\n       then\n          --  Here we're passing along the master that was passed in to this\n          --  function.\n@@ -9025,6 +9062,8 @@ package body Exp_Ch6 is\n          Replace_Renaming_Declaration_Id\n            (Obj_Decl, Original_Node (Obj_Decl));\n       end if;\n+\n+      pragma Assert (Check_Number_Of_Actuals (Func_Call, Function_Id));\n    end Make_Build_In_Place_Call_In_Object_Declaration;\n \n    -------------------------------------------------\n@@ -9296,6 +9335,17 @@ package body Exp_Ch6 is\n       Analyze_And_Resolve (Allocator, Acc_Type);\n    end Make_CPP_Constructor_Call_In_Allocator;\n \n+   ----------------------------\n+   -- Needs_BIP_Task_Actuals --\n+   ----------------------------\n+\n+   function Needs_BIP_Task_Actuals (Func_Id : Entity_Id) return Boolean is\n+      pragma Assert (Is_Build_In_Place_Function (Func_Id));\n+      Func_Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n+   begin\n+      return Has_Task (Func_Typ);\n+   end Needs_BIP_Task_Actuals;\n+\n    -----------------------------------\n    -- Needs_BIP_Finalization_Master --\n    -----------------------------------"}, {"sha": "13ccb2a968de21444b17185bb58ea40db0147a45", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "patch": "@@ -244,6 +244,9 @@ package Exp_Ch6 is\n    --  functions with tagged result types, since they can be invoked via\n    --  dispatching calls, and descendant types may require finalization.\n \n+   function Needs_BIP_Task_Actuals (Func_Id : Entity_Id) return Boolean;\n+   --  Return True if the function returns an object of a type that has tasks.\n+\n    function Needs_Result_Accessibility_Level\n      (Func_Id : Entity_Id) return Boolean;\n    --  Ada 2012 (AI05-0234): Return True if the function needs an implicit"}, {"sha": "ddb12ec52f50eddfb17066a62e547075bb547b1f", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ed19d98def3515e5b2fb9e68be34da4a78a7fdb/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=1ed19d98def3515e5b2fb9e68be34da4a78a7fdb", "patch": "@@ -8080,7 +8080,6 @@ package body Sem_Ch6 is\n       if Is_Build_In_Place_Function (E) then\n          declare\n             Result_Subt : constant Entity_Id := Etype (E);\n-            Full_Subt   : constant Entity_Id := Available_View (Result_Subt);\n             Formal_Typ  : Entity_Id;\n             Subp_Decl   : Node_Id;\n             Discard     : Entity_Id;\n@@ -8130,7 +8129,7 @@ package body Sem_Ch6 is\n             --  master of the tasks to be created, and the caller's activation\n             --  chain.\n \n-            if Has_Task (Full_Subt) then\n+            if Needs_BIP_Task_Actuals (E) then\n                Discard :=\n                  Add_Extra_Formal\n                    (E, RTE (RE_Master_Id),"}]}