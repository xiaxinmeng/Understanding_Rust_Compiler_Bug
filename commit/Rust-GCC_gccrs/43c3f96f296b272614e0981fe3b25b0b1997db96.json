{"sha": "43c3f96f296b272614e0981fe3b25b0b1997db96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjM2Y5NmYyOTZiMjcyNjE0ZTA5ODFmZTNiMjViMGIxOTk3ZGI5Ng==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-24T22:09:20Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-25T01:23:43Z"}, "message": "c-family: add support for per-location warning groups.\n\ngcc/c-family/ChangeLog:\n\n\t* c-common.c (c_wrap_maybe_const): Remove TREE_NO_WARNING.\n\t(c_common_truthvalue_conversion): Replace direct uses of\n\tTREE_NO_WARNING with warning_suppressed_p, suppress_warning, and\n\tcopy_no_warning.\n\t(check_function_arguments_recurse): Same.\n\t* c-gimplify.c (c_gimplify_expr): Same.\n\t* c-warn.c (overflow_warning): Same.\n\t(warn_logical_operator): Same.\n\t(warn_if_unused_value): Same.\n\t(do_warn_unused_parameter): Same.", "tree": {"sha": "c64e5c221cd08e07a91a6b2429ae86ffb3f20d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64e5c221cd08e07a91a6b2429ae86ffb3f20d66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c3f96f296b272614e0981fe3b25b0b1997db96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c3f96f296b272614e0981fe3b25b0b1997db96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c3f96f296b272614e0981fe3b25b0b1997db96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c3f96f296b272614e0981fe3b25b0b1997db96/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ebd2b2c9407796cd526137038b9b885f68ffb4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebd2b2c9407796cd526137038b9b885f68ffb4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ebd2b2c9407796cd526137038b9b885f68ffb4d"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "681fcc972f4d2e364a69902f72da145bf27565ba", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c3f96f296b272614e0981fe3b25b0b1997db96/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c3f96f296b272614e0981fe3b25b0b1997db96/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=43c3f96f296b272614e0981fe3b25b0b1997db96", "patch": "@@ -3375,7 +3375,6 @@ pointer_int_sum (location_t loc, enum tree_code resultcode,\n tree\n c_wrap_maybe_const (tree expr, bool non_const)\n {\n-  bool nowarning = TREE_NO_WARNING (expr);\n   location_t loc = EXPR_LOCATION (expr);\n \n   /* This should never be called for C++.  */\n@@ -3386,8 +3385,6 @@ c_wrap_maybe_const (tree expr, bool non_const)\n   STRIP_TYPE_NOPS (expr);\n   expr = build2 (C_MAYBE_CONST_EXPR, TREE_TYPE (expr), NULL, expr);\n   C_MAYBE_CONST_EXPR_NON_CONST (expr) = non_const;\n-  if (nowarning)\n-    TREE_NO_WARNING (expr) = 1;\n   protected_set_expr_location (expr, loc);\n \n   return expr;\n@@ -3633,12 +3630,12 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n       break;\n \n     case MODIFY_EXPR:\n-      if (!TREE_NO_WARNING (expr)\n+      if (!warning_suppressed_p (expr, OPT_Wparentheses)\n \t  && warn_parentheses\n \t  && warning_at (location, OPT_Wparentheses,\n \t\t\t \"suggest parentheses around assignment used as \"\n \t\t\t \"truth value\"))\n-\tTREE_NO_WARNING (expr) = 1;\n+\tsuppress_warning (expr, OPT_Wparentheses);\n       break;\n \n     case CONST_DECL:\n@@ -6019,7 +6016,7 @@ check_function_arguments_recurse (void (*callback)\n \t\t\t\t  void *ctx, tree param,\n \t\t\t\t  unsigned HOST_WIDE_INT param_num)\n {\n-  if (TREE_NO_WARNING (param))\n+  if (warning_suppressed_p (param))\n     return;\n \n   if (CONVERT_EXPR_P (param)"}, {"sha": "0d38b706f4c2398cd32ed300aaeef60746f36d13", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c3f96f296b272614e0981fe3b25b0b1997db96/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c3f96f296b272614e0981fe3b25b0b1997db96/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=43c3f96f296b272614e0981fe3b25b0b1997db96", "patch": "@@ -713,7 +713,7 @@ c_gimplify_expr (tree *expr_p, gimple_seq *pre_p ATTRIBUTE_UNUSED,\n \t  && !TREE_STATIC (DECL_EXPR_DECL (*expr_p))\n \t  && (DECL_INITIAL (DECL_EXPR_DECL (*expr_p)) == DECL_EXPR_DECL (*expr_p))\n \t  && !warn_init_self)\n-\tTREE_NO_WARNING (DECL_EXPR_DECL (*expr_p)) = 1;\n+\tsuppress_warning (DECL_EXPR_DECL (*expr_p), OPT_Winit_self);\n       break;\n \n     case PREINCREMENT_EXPR:"}, {"sha": "34959590b37cdf13695d10ee7cd975da5006a210", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c3f96f296b272614e0981fe3b25b0b1997db96/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c3f96f296b272614e0981fe3b25b0b1997db96/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=43c3f96f296b272614e0981fe3b25b0b1997db96", "patch": "@@ -155,7 +155,7 @@ overflow_warning (location_t loc, tree value, tree expr)\n \t\t\t value);\n \n   if (warned)\n-    TREE_NO_WARNING (value) = 1;\n+    suppress_warning (value, OPT_Woverflow);\n }\n \n /* Helper function for walk_tree.  Unwrap C_MAYBE_CONST_EXPRs in an expression\n@@ -219,7 +219,7 @@ warn_logical_operator (location_t location, enum tree_code code, tree type,\n       && INTEGRAL_TYPE_P (TREE_TYPE (op_left))\n       && !CONSTANT_CLASS_P (stripped_op_left)\n       && TREE_CODE (stripped_op_left) != CONST_DECL\n-      && !TREE_NO_WARNING (op_left)\n+      && !warning_suppressed_p (op_left, OPT_Wlogical_op)\n       && TREE_CODE (op_right) == INTEGER_CST\n       && !integer_zerop (op_right)\n       && !integer_onep (op_right))\n@@ -234,7 +234,7 @@ warn_logical_operator (location_t location, enum tree_code code, tree type,\n \t  = warning_at (location, OPT_Wlogical_op,\n \t\t\t\"logical %<and%> applied to non-boolean constant\");\n       if (warned)\n-\tTREE_NO_WARNING (op_left) = true;\n+\tsuppress_warning (op_left, OPT_Wlogical_op);\n       return;\n     }\n \n@@ -588,7 +588,7 @@ bool\n warn_if_unused_value (const_tree exp, location_t locus, bool quiet)\n {\n  restart:\n-  if (TREE_USED (exp) || TREE_NO_WARNING (exp))\n+  if (TREE_USED (exp) || warning_suppressed_p (exp, OPT_Wunused_value))\n     return false;\n \n   /* Don't warn about void constructs.  This includes casting to void,\n@@ -2410,7 +2410,7 @@ do_warn_unused_parameter (tree fn)\n        decl; decl = DECL_CHAIN (decl))\n     if (!TREE_USED (decl) && TREE_CODE (decl) == PARM_DECL\n \t&& DECL_NAME (decl) && !DECL_ARTIFICIAL (decl)\n-\t&& !TREE_NO_WARNING (decl))\n+\t&& !warning_suppressed_p (decl, OPT_Wunused_parameter))\n       warning_at (DECL_SOURCE_LOCATION (decl), OPT_Wunused_parameter,\n \t\t  \"unused parameter %qD\", decl);\n }"}]}