{"sha": "17dd35f448a689e51e8cd17138c6e942a343f894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkZDM1ZjQ0OGE2ODllNTFlOGNkMTcxMzhjNmU5NDJhMzQzZjg5NA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-25T09:05:21Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:05:21Z"}, "message": "[Ada] Spurious error on fixed-point operation whose operands are expressions\n\nThis patch fixes a spurious error in a fixed-point operand of a multiplying\noperator M when the operand is an adding operation and the context imposes\na different fixed-point type to the result of M.\n\n2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Set_Mixed_Mode_Operand): If the operand is an expression\n\tof a fixed point type and the parent is a multiplying operation,\n\tresolve the operand with its own type because the context will impose a\n\tresulting type on the result of the multiplication by means of\n\tapproriate conversion.\n\ngcc/testsuite/\n\n\t* gnat.dg/fixedpnt4.adb: New testcase.\n\nFrom-SVN: r260741", "tree": {"sha": "64ae599cbb238ebc57934e818b72461bf4734d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64ae599cbb238ebc57934e818b72461bf4734d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17dd35f448a689e51e8cd17138c6e942a343f894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dd35f448a689e51e8cd17138c6e942a343f894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17dd35f448a689e51e8cd17138c6e942a343f894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dd35f448a689e51e8cd17138c6e942a343f894/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf5899e71ea7ca1cc3ae9007c2d5e06ee4108d2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5899e71ea7ca1cc3ae9007c2d5e06ee4108d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5899e71ea7ca1cc3ae9007c2d5e06ee4108d2a"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "66b84916ed97000f85f240b6bd79e8a8b6a2a69e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=17dd35f448a689e51e8cd17138c6e942a343f894", "patch": "@@ -1,3 +1,11 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Set_Mixed_Mode_Operand): If the operand is an expression\n+\tof a fixed point type and the parent is a multiplying operation,\n+\tresolve the operand with its own type because the context will impose a\n+\tresulting type on the result of the multiplication by means of\n+\tapproriate conversion.\n+\n 2018-05-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch3.adb (Default_Initialize_Object): Ensure that the analysis of"}, {"sha": "d11296c9e57fb2ce0d86442c89b95455cdc9fe51", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=17dd35f448a689e51e8cd17138c6e942a343f894", "patch": "@@ -5283,9 +5283,19 @@ package body Sem_Res is\n          elsif Etype (N) = T\n            and then B_Typ /= Universal_Fixed\n          then\n-            --  Not a mixed-mode operation, resolve with context\n \n-            Resolve (N, B_Typ);\n+            --  if the operand is part of a fixed multiplication operation,\n+            --  a conversion will be applied to each operand, so resolve it\n+            --  with its own type.\n+\n+            if Nkind_In (Parent (N), N_Op_Multiply, N_Op_Divide)  then\n+               Resolve (N);\n+\n+            else\n+               --  Not a mixed-mode operation, resolve with context\n+\n+               Resolve (N, B_Typ);\n+            end if;\n \n          elsif Etype (N) = Any_Fixed then\n "}, {"sha": "2b2695e8c75e429ad3db2e5db9619c5e3ca42961", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17dd35f448a689e51e8cd17138c6e942a343f894", "patch": "@@ -1,3 +1,7 @@\n+2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/fixedpnt4.adb: New testcase.\n+\n 2018-05-25  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/interface7.adb: New testcase."}, {"sha": "50252989f038b2a86829e369efd8114f9a8a23eb", "filename": "gcc/testsuite/gnat.dg/fixedpnt4.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dd35f448a689e51e8cd17138c6e942a343f894/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt4.adb?ref=17dd35f448a689e51e8cd17138c6e942a343f894", "patch": "@@ -0,0 +1,14 @@\n+--  { dg-do compile }\n+\n+procedure Fixedpnt4 is\n+   type T is delta 2.0/5.0 range -10.0 .. 10.0 with Small => 2.0/5.0;\n+   type T2 is delta 1.0/25.0 range -10.0 .. 10.0 with Small => 1.0/25.0;\n+\n+   X : T := 1.0;\n+   Y : T2;\n+begin\n+   Y := X / X;\n+   Y := X / (X + X);\n+   Y := X / (X + X + 1.0);\n+   Y := (X + X) * (X + X);\n+end;"}]}