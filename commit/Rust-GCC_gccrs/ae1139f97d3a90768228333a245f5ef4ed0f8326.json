{"sha": "ae1139f97d3a90768228333a245f5ef4ed0f8326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxMTM5Zjk3ZDNhOTA3NjgyMjgzMzNhMjQ1ZjVlZjRlZDBmODMyNg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2001-11-21T22:03:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-11-21T22:03:27Z"}, "message": "cppfiles.c (STAT_SIZE_TOO_BIG): Define.\n\n\t* cppfiles.c (STAT_SIZE_TOO_BIG): Define.\n\t(read_include_file): Use STAT_SIZE_TOO_BIG.\n\nFrom-SVN: r47245", "tree": {"sha": "bd4d818110af28233fe510b5b206e04287bd8f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd4d818110af28233fe510b5b206e04287bd8f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1139f97d3a90768228333a245f5ef4ed0f8326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1139f97d3a90768228333a245f5ef4ed0f8326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1139f97d3a90768228333a245f5ef4ed0f8326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1139f97d3a90768228333a245f5ef4ed0f8326/comments", "author": null, "committer": null, "parents": [{"sha": "ca47c89e553c8f1824eefce0273917bd85e04c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca47c89e553c8f1824eefce0273917bd85e04c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca47c89e553c8f1824eefce0273917bd85e04c52"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "3e0ad011f51e64e382880d252ef86fc6435e024f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1139f97d3a90768228333a245f5ef4ed0f8326/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1139f97d3a90768228333a245f5ef4ed0f8326/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae1139f97d3a90768228333a245f5ef4ed0f8326", "patch": "@@ -1,5 +1,8 @@\n Wed Nov 21 16:44:01 2001  Douglas B. Rupp  <rupp@gnat.com>\n \n+\t* cppfiles.c (STAT_SIZE_TOO_BIG): Define.\n+\t(read_include_file): Use STAT_SIZE_TOO_BIG.\n+\n \t* cppinit.c (INO_T_COPY): Define.\n \t(INO_T_EQ): Uppercase parameters.\n \t(append_include_chain): Use INO_T_COPY."}, {"sha": "32994f7256eab4d026064e5819cedeee9463847a", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1139f97d3a90768228333a245f5ef4ed0f8326/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1139f97d3a90768228333a245f5ef4ed0f8326/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=ae1139f97d3a90768228333a245f5ef4ed0f8326", "patch": "@@ -73,6 +73,15 @@ struct include_file\n   unsigned char mapped;\t\t/* file buffer is mmapped */\n };\n \n+/* Variable length record files on VMS will have a stat size that includes\n+   record control characters that won't be included in the read size. */\n+#ifdef VMS\n+# define FAB_C_VAR 2 /* variable length records (see Starlet fabdef.h) */\n+# define STAT_SIZE_TOO_BIG(ST) ((ST).st_fab_rfm == FAB_C_VAR)\n+#else\n+# define STAT_SIZE_TOO_BIG(ST) 0\n+#endif\n+\n /* The cmacro works like this: If it's NULL, the file is to be\n    included again.  If it's NEVER_REREAD, the file is never to be\n    included again.  Otherwise it is a macro hashnode, and the file is\n@@ -392,7 +401,11 @@ read_include_file (pfile, inc)\n \t\tgoto perror_fail;\n \t      if (count == 0)\n \t\t{\n-\t\t  cpp_warning (pfile, \"%s is shorter than expected\", inc->name);\n+\t\t  if (!STAT_SIZE_TOO_BIG (inc->st))\n+\t\t    cpp_warning\n+\t\t      (pfile, \"%s is shorter than expected\", inc->name);\n+\t\t  buf = xrealloc (buf, offset);\n+\t\t  inc->st.st_size = offset;\n \t\t  break;\n \t\t}\n \t      offset += count;"}]}