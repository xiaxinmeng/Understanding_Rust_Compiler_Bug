{"sha": "5cafc6586e84b2d84e09a299aa342415d7b25bc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNhZmM2NTg2ZTg0YjJkODRlMDlhMjk5YWEzNDI0MTVkN2IyNWJjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-24T14:34:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-24T14:34:11Z"}, "message": "(a29k_set_memflags, a29k_set_memflags_1): New functions.\n\nFrom-SVN: r2589", "tree": {"sha": "ebd7e7df83bff59936b63cadb1c560b68f3f9823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebd7e7df83bff59936b63cadb1c560b68f3f9823"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cafc6586e84b2d84e09a299aa342415d7b25bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cafc6586e84b2d84e09a299aa342415d7b25bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cafc6586e84b2d84e09a299aa342415d7b25bc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cafc6586e84b2d84e09a299aa342415d7b25bc5/comments", "author": null, "committer": null, "parents": [{"sha": "36f8f642c6e3aeb92c148db5496360330191be9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f8f642c6e3aeb92c148db5496360330191be9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f8f642c6e3aeb92c148db5496360330191be9d"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "68983a63eef7723d4d4d656ac2063d4f6845a605", "filename": "gcc/config/a29k/a29k.c", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cafc6586e84b2d84e09a299aa342415d7b25bc5/gcc%2Fconfig%2Fa29k%2Fa29k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cafc6586e84b2d84e09a299aa342415d7b25bc5/gcc%2Fconfig%2Fa29k%2Fa29k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.c?ref=5cafc6586e84b2d84e09a299aa342415d7b25bc5", "patch": "@@ -451,7 +451,69 @@ a29k_get_reloaded_address (op)\n \n   return find_replacement (&XEXP (op, 0));\n }\n+\f\n+/* Subfunction of the following function.  Update the flags of any MEM\n+   found in part of X.  */\n+\n+static void\n+a29k_set_memflags_1 (x, in_struct_p, volatile_p, unchanging_p)\n+     rtx x;\n+     int in_struct_p, volatile_p, unchanging_p;\n+{\n+  int i;\n+\n+  switch (GET_CODE (x))\n+    {\n+    case SEQUENCE:\n+    case PARALLEL:\n+      for (i = XVECLEN (x, 0) - 1; i >= 0; i--)\n+\ta29k_set_memflags_1 (XVECEXP (x, 0, i), in_struct_p, volatile_p,\n+\t\t\t     unchanging_p);\n+      break;\n+\n+    case INSN:\n+      a29k_set_memflags_1 (PATTERN (x), in_struct_p, volatile_p,\n+\t\t\t   unchanging_p);\n+      break;\n+\n+    case SET:\n+      a29k_set_memflags_1 (SET_DEST (x), in_struct_p, volatile_p,\n+\t\t\t   unchanging_p);\n+      a29k_set_memflags_1 (SET_SRC (x), in_struct_p, volatile_p, unchanging_p);\n+      break;\n+\n+    case MEM:\n+      MEM_IN_STRUCT_P (x) = in_struct_p;\n+      MEM_VOLATILE_P (x) = volatile_p;\n+      RTX_UNCHANGING_P (x) = unchanging_p;\n+      break;\n+    }\n+}\n+\n+/* Given INSN, which is either an INSN or a SEQUENCE generated to\n+   perform a memory operation, look for any MEMs in either a SET_DEST or\n+   a SET_SRC and copy the in-struct, unchanging, and volatile flags from\n+   REF into each of the MEMs found.  If REF is not a MEM, don't do\n+   anything.  */\n \n+void\n+a29k_set_memflags (insn, ref)\n+     rtx insn;\n+     rtx ref;\n+{\n+  /* Note that it is always safe to get these flags, though they won't\n+     be what we think if REF is not a MEM.  */\n+  int in_struct_p = MEM_IN_STRUCT_P (ref);\n+  int volatile_p = MEM_VOLATILE_P (ref);\n+  int unchanging_p = RTX_UNCHANGING_P (ref);\n+\n+  if (GET_CODE (ref) != MEM\n+      || (! in_struct_p && ! volatile_p && ! unchanging_p))\n+    return;\n+\n+  a29k_set_memflags_1 (insn, in_struct_p, volatile_p, unchanging_p);\n+}\n+\f\n /* Return 1 if OP is a comparison operator that we have in floating-point.  */\n \n int"}]}