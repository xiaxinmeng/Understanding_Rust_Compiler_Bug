{"sha": "d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxNzdhYjI1ZTljZmVmMTJhYTJiMGUyYTJmNjhkN2YzYzgxNzM1YQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-08-31T14:06:48Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-08-31T14:06:48Z"}, "message": "trans-decl.c, [...]: Replace all occurences of 'gfc_strlen_type_node' by 'gfc_charlen_type_node'.\n\nfortran/\n* trans-decl.c, trans-expr.c, trans-io.c, trans-types.c: Replace\nall occurences of 'gfc_strlen_type_node' by\n'gfc_charlen_type_node'.\n* trans-types.h: Same. Also update comment accordingly.\n\nlibgfortran/\n* libgfortran.h: Replace 'gfc_strlen_type' by\n'gfc_charlen_type'. Update comment accordingly.\n* intrinsics/args.c, intrinsics/env.c, io/io.h, io/transfer.c:\nReplace all occurences of 'gfc_strlen_type' by 'gfc_charlen_type'.\n\nFrom-SVN: r86828", "tree": {"sha": "03f0761ea8c07c55c2cd86b5b996c3027f155857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03f0761ea8c07c55c2cd86b5b996c3027f155857"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f36327db85b62d102049ee46db8ee4d39df045e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36327db85b62d102049ee46db8ee4d39df045e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36327db85b62d102049ee46db8ee4d39df045e2"}], "stats": {"total": 139, "additions": 76, "deletions": 63}, "files": [{"sha": "74ada4c8a35d2e06a9c90d6e071a51f6115eb6fa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -1,3 +1,10 @@\n+2004-08-31  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* trans-decl.c, trans-expr.c, trans-io.c, trans-types.c: Replace\n+\tall occurences of 'gfc_strlen_type_node' by\n+\t'gfc_charlen_type_node'.\n+\t* trans-types.h: Same. Also update comment accordingly.\n+\n 2004-08-31  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* primary.c: Update copyright boilerplate to say GCC."}, {"sha": "4ba5e8c4652419f5349d89d112e0a4fe200ffe5a", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -1072,7 +1072,7 @@ get_array_ctor_strlen (gfc_constructor * c, tree * len)\n \t{\n \tcase EXPR_CONSTANT:\n \t  if (!(*len && INTEGER_CST_P (*len)))\n-\t    *len = build_int_cstu (gfc_strlen_type_node,\n+\t    *len = build_int_cstu (gfc_charlen_type_node,\n \t\t\t\t   c->expr->value.character.length);\n \t  break;\n "}, {"sha": "670e2f5df9c42ad3061bde08526ace6f2d7b83ee", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -85,7 +85,7 @@ gfc_build_string_const (int length, const char *s)\n   len = build_int_cst (NULL_TREE, length);\n   TREE_TYPE (str) =\n     build_array_type (gfc_character1_type_node,\n-\t\t      build_range_type (gfc_strlen_type_node,\n+\t\t      build_range_type (gfc_charlen_type_node,\n \t\t\t\t\tinteger_one_node, len));\n   return str;\n }"}, {"sha": "730448a6595b7223489d57ccde718b222f15a8cd", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -670,7 +670,7 @@ gfc_create_string_length (gfc_symbol * sym)\n       strcpy (&name[1], sym->name);\n       name[0] = '.';\n       length = build_decl (VAR_DECL, get_identifier (name),\n-\t\t\t   gfc_strlen_type_node);\n+\t\t\t   gfc_charlen_type_node);\n       DECL_ARTIFICIAL (length) = 1;\n       TREE_USED (length) = 1;\n       gfc_defer_symbol_init (sym);\n@@ -781,7 +781,7 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n     {\n       gfc_allocate_lang_decl (decl);\n       GFC_DECL_ASSIGN (decl) = 1;\n-      length = gfc_create_var (gfc_strlen_type_node, sym->name);\n+      length = gfc_create_var (gfc_charlen_type_node, sym->name);\n       GFC_DECL_STRING_LEN (decl) = length;\n       GFC_DECL_ASSIGN_ADDR (decl) = gfc_create_var (pvoid_type_node, sym->name);\n       /* TODO: Need to check we don't change TREE_STATIC (decl) later.  */\n@@ -1130,7 +1130,7 @@ create_function_arglist (gfc_symbol * sym)\n \n \t  /* Length of character result.  */\n \t  type = TREE_VALUE (typelist);\n-\t  assert (type == gfc_strlen_type_node);\n+\t  assert (type == gfc_charlen_type_node);\n \n \t  length = build_decl (PARM_DECL,\n \t\t\t       get_identifier (\".__result\"),\n@@ -1192,7 +1192,7 @@ create_function_arglist (gfc_symbol * sym)\n \n       parm = f->sym->backend_decl;\n       type = TREE_VALUE (typelist);\n-      assert (type == gfc_strlen_type_node);\n+      assert (type == gfc_charlen_type_node);\n \n       strcpy (&name[1], f->sym->name);\n       name[0] = '_';\n@@ -1383,7 +1383,7 @@ build_entry_thunks (gfc_namespace * ns)\n \t      args = tree_cons (NULL_TREE, null_pointer_node, args);\n \t      if (formal->sym->ts.type == BT_CHARACTER)\n \t\t{\n-\t\t  tmp = convert (gfc_strlen_type_node, integer_zero_node);\n+\t\t  tmp = convert (gfc_charlen_type_node, integer_zero_node);\n \t\t  string_args = tree_cons (NULL_TREE, tmp, string_args);\n \t\t}\n \t    }\n@@ -1572,66 +1572,66 @@ gfc_build_intrinsic_function_decls (void)\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"copy_string\")),\n \t\t\t\t     void_type_node,\n \t\t\t\t     4,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node);\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node,\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node);\n \n   gfor_fndecl_compare_string =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"compare_string\")),\n \t\t\t\t     gfc_int4_type_node,\n \t\t\t\t     4,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node);\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node,\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node);\n \n   gfor_fndecl_concat_string =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"concat_string\")),\n \t\t\t\t     void_type_node,\n \t\t\t\t     6,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node);\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node,\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node,\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node);\n \n   gfor_fndecl_string_len_trim =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"string_len_trim\")),\n \t\t\t\t     gfc_int4_type_node,\n-\t\t\t\t     2, gfc_strlen_type_node,\n+\t\t\t\t     2, gfc_charlen_type_node,\n \t\t\t\t     pchar_type_node);\n \n   gfor_fndecl_string_index =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"string_index\")),\n \t\t\t\t     gfc_int4_type_node,\n-\t\t\t\t     5, gfc_strlen_type_node, pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node,\n+\t\t\t\t     5, gfc_charlen_type_node, pchar_type_node,\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node,\n                                      gfc_logical4_type_node);\n \n   gfor_fndecl_string_scan =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"string_scan\")),\n                                      gfc_int4_type_node,\n-                                     5, gfc_strlen_type_node, pchar_type_node,\n-                                     gfc_strlen_type_node, pchar_type_node,\n+                                     5, gfc_charlen_type_node, pchar_type_node,\n+                                     gfc_charlen_type_node, pchar_type_node,\n                                      gfc_logical4_type_node);\n \n   gfor_fndecl_string_verify =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"string_verify\")),\n                                      gfc_int4_type_node,\n-                                     5, gfc_strlen_type_node, pchar_type_node,\n-                                     gfc_strlen_type_node, pchar_type_node,\n+                                     5, gfc_charlen_type_node, pchar_type_node,\n+                                     gfc_charlen_type_node, pchar_type_node,\n                                      gfc_logical4_type_node);\n \n   gfor_fndecl_string_trim = \n     gfc_build_library_function_decl (get_identifier (PREFIX(\"string_trim\")),\n                                      void_type_node,\n                                      4,\n-                                     build_pointer_type (gfc_strlen_type_node),\n+                                     build_pointer_type (gfc_charlen_type_node),\n                                      ppvoid_type_node,\n-                                     gfc_strlen_type_node,\n+                                     gfc_charlen_type_node,\n                                      pchar_type_node);\n \n   gfor_fndecl_string_repeat =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"string_repeat\")),\n                                      void_type_node,\n                                      4,\n                                      pchar_type_node,\n-                                     gfc_strlen_type_node,\n+                                     gfc_charlen_type_node,\n                                      pchar_type_node,\n                                      gfc_int4_type_node);\n \n@@ -1640,14 +1640,14 @@ gfc_build_intrinsic_function_decls (void)\n \t\t\t\t     void_type_node,\n \t\t\t\t     3,\n \t\t\t\t     pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node);\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node);\n \n   gfor_fndecl_adjustr =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"adjustr\")),\n \t\t\t\t     void_type_node,\n \t\t\t\t     3,\n \t\t\t\t     pchar_type_node,\n-\t\t\t\t     gfc_strlen_type_node, pchar_type_node);\n+\t\t\t\t     gfc_charlen_type_node, pchar_type_node);\n \n   gfor_fndecl_si_kind =\n     gfc_build_library_function_decl (get_identifier (\"selected_int_kind\"),"}, {"sha": "94653c95a547306b2f0cc89a6e06908efab61ee3", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -151,7 +151,7 @@ gfc_trans_init_string_length (gfc_charlen * cl, stmtblock_t * pblock)\n   tree tmp;\n \n   gfc_init_se (&se, NULL);\n-  gfc_conv_expr_type (&se, cl->length, gfc_strlen_type_node);\n+  gfc_conv_expr_type (&se, cl->length, gfc_charlen_type_node);\n   gfc_add_block_to_block (pblock, &se.pre);\n \n   tmp = cl->backend_decl;\n@@ -173,7 +173,7 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind)\n \n   var = NULL_TREE;\n   gfc_init_se (&start, se);\n-  gfc_conv_expr_type (&start, ref->u.ss.start, gfc_strlen_type_node);\n+  gfc_conv_expr_type (&start, ref->u.ss.start, gfc_charlen_type_node);\n   gfc_add_block_to_block (&se->pre, &start.pre);\n \n   if (integer_onep (start.expr))\n@@ -195,14 +195,14 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind)\n     end.expr = se->string_length;\n   else\n     {\n-      gfc_conv_expr_type (&end, ref->u.ss.end, gfc_strlen_type_node);\n+      gfc_conv_expr_type (&end, ref->u.ss.end, gfc_charlen_type_node);\n       gfc_add_block_to_block (&se->pre, &end.pre);\n     }\n   tmp =\n-    build2 (MINUS_EXPR, gfc_strlen_type_node,\n-\t    fold_convert (gfc_strlen_type_node, integer_one_node),\n+    build2 (MINUS_EXPR, gfc_charlen_type_node,\n+\t    fold_convert (gfc_charlen_type_node, integer_one_node),\n \t    start.expr);\n-  tmp = build2 (PLUS_EXPR, gfc_strlen_type_node, end.expr, tmp);\n+  tmp = build2 (PLUS_EXPR, gfc_charlen_type_node, end.expr, tmp);\n   se->string_length = fold (tmp);\n }\n \n@@ -688,14 +688,14 @@ gfc_conv_string_tmp (gfc_se * se, tree type, tree len)\n   tree tmp;\n   tree args;\n \n-  if (TREE_TYPE (len) != gfc_strlen_type_node)\n+  if (TREE_TYPE (len) != gfc_charlen_type_node)\n     abort ();\n \n   if (gfc_can_put_var_on_stack (len))\n     {\n       /* Create a temporary variable to hold the result.  */\n-      tmp = fold (build2 (MINUS_EXPR, gfc_strlen_type_node, len,\n-\t\t\t  convert (gfc_strlen_type_node,\n+      tmp = fold (build2 (MINUS_EXPR, gfc_charlen_type_node, len,\n+\t\t\t  convert (gfc_charlen_type_node,\n \t\t\t\t   integer_one_node)));\n       tmp = build_range_type (gfc_array_index_type, gfc_index_zero_node, tmp);\n       tmp = build_array_type (gfc_character1_type_node, tmp);\n@@ -1067,8 +1067,8 @@ gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,\n \n \t  var = gfc_conv_string_tmp (se, type, len);\n \t  arglist = gfc_chainon_list (arglist, var);\n-\t  arglist = gfc_chainon_list (arglist, convert (gfc_strlen_type_node,\n-\t\t\t\t\t\t\tlen));\n+\t  arglist = gfc_chainon_list (arglist, \n+\t\t\t\t      convert (gfc_charlen_type_node, len));\n \t}\n       else      /* TODO: derived type function return values.  */\n \tabort ();\n@@ -1101,7 +1101,7 @@ gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,\n                 {\n                   stringargs =\n \t\t    gfc_chainon_list (stringargs,\n-\t\t\t\t      convert (gfc_strlen_type_node,\n+\t\t\t\t      convert (gfc_charlen_type_node,\n \t\t\t\t\t       integer_zero_node));\n                 }\n \t    }"}, {"sha": "d1bf736c0e74ea5738777a9e823e61524b3f7cf9", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -333,7 +333,7 @@ gfc_build_io_library_fndecls (void)\n                                      void_type_node, 5,\n                                      pvoid_type_node, pvoid_type_node,\n                                      gfc_int4_type_node, gfc_int4_type_node, \n-                                     gfc_strlen_type_node);\n+                                     gfc_charlen_type_node);\n   iocall_set_nml_val_complex =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"st_set_nml_var_complex\")),\n                                      void_type_node, 4,"}, {"sha": "f65a9d71c218c4d361cbb14a58db78e358504cc7", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -55,7 +55,7 @@ tree pvoid_type_node;\n tree ppvoid_type_node;\n tree pchar_type_node;\n tree gfc_character1_type_node;\n-tree gfc_strlen_type_node;\n+tree gfc_charlen_type_node;\n \n static GTY(()) tree gfc_desc_dim_type;\n static GTY(()) tree gfc_max_array_element_size;\n@@ -541,7 +541,7 @@ gfc_init_types (void)\n   boolean_false_node = build_int_cst (boolean_type_node, 0);\n \n   /* ??? Shouldn't this be based on gfc_index_integer_kind or so?  */\n-  gfc_strlen_type_node = gfc_get_int_type (4);\n+  gfc_charlen_type_node = gfc_get_int_type (4);\n }\n \n /* Get the type node for the given type and kind.  */\n@@ -1502,7 +1502,7 @@ gfc_get_function_type (gfc_symbol * sym)\n \n       typelist = gfc_chainon_list (typelist, type);\n       if (arg->ts.type == BT_CHARACTER)\n-\ttypelist = gfc_chainon_list (typelist, gfc_strlen_type_node);\n+\ttypelist = gfc_chainon_list (typelist, gfc_charlen_type_node);\n     }\n \n   /* Build the argument types for the function.  */\n@@ -1551,7 +1551,7 @@ gfc_get_function_type (gfc_symbol * sym)\n \n   /* Add hidden string length parameters.  */\n   while (nstr--)\n-    typelist = gfc_chainon_list (typelist, gfc_strlen_type_node);\n+    typelist = gfc_chainon_list (typelist, gfc_charlen_type_node);\n \n   typelist = gfc_chainon_list (typelist, void_type_node);\n "}, {"sha": "7a57961941d4b75bfa9fa63c7d24bc32b434990f", "filename": "gcc/fortran/trans-types.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/gcc%2Ffortran%2Ftrans-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.h?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -45,12 +45,11 @@ extern GTY(()) tree gfc_character1_type_node;\n extern GTY(()) tree ppvoid_type_node;\n extern GTY(()) tree pvoid_type_node;\n extern GTY(()) tree pchar_type_node;\n-/* This is the type used to hold string lengths.  It has nothing to do with\n-   the C strlen(3) function.  It must be the same as the corresponding\n-   definition in gfortran.h.  */\n+/* This is the type used to hold the lengths of character variables.\n+   It must be the same as the corresponding definition in gfortran.h.  */\n /* TODO: This is still hardcoded as kind=4 in some bits of the compiler\n    and runtime library.  */\n-extern GTY(()) tree gfc_strlen_type_node;\n+extern GTY(()) tree gfc_charlen_type_node;\n \n /* be-function.c */\n void gfc_convert_function_code (gfc_namespace *);"}, {"sha": "ecc104e5ffc9ca81f3c70f72d5ab9962426c58be", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -1,3 +1,10 @@\n+2004-08-31  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* libgfortran.h: Replace 'gfc_strlen_type' by\n+\t'gfc_charlen_type'. Update comment accordingly.\n+\t* intrinsics/args.c, intrinsics/env.c, io/io.h, io/transfer.c:\n+\tReplace all occurences of 'gfc_strlen_type' by 'gfc_charlen_type'.\n+\n 2004-08-31  Paul Brook  <paul@codesourcery.com>\n \n \t* libgfortran.h: Add comments."}, {"sha": "984fa91d3521f701dcaf3e765cb6ac57ae26fe14", "filename": "libgfortran/intrinsics/args.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fintrinsics%2Fargs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fintrinsics%2Fargs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fargs.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n /* Get a commandline argument.  */\n \n void \n-prefix(getarg_i4) (GFC_INTEGER_4 *pos, char  *val, gfc_strlen_type val_len)\n+prefix(getarg_i4) (GFC_INTEGER_4 *pos, char  *val, gfc_charlen_type val_len)\n {\n   int argc;\n   int arglen;\n@@ -55,7 +55,7 @@ prefix(getarg_i4) (GFC_INTEGER_4 *pos, char  *val, gfc_strlen_type val_len)\n /* INTEGER*8 wrapper of getarg.  */\n \n void \n-prefix(getarg_i8) (GFC_INTEGER_8 *pos, char  *val, gfc_strlen_type val_len)\n+prefix(getarg_i8) (GFC_INTEGER_8 *pos, char  *val, gfc_charlen_type val_len)\n {\n   GFC_INTEGER_4 pos4;\n \n@@ -103,7 +103,7 @@ prefix(get_command_argument_i4) (GFC_INTEGER_4 *number,\n \t\t\t\t char *value, \n \t\t\t\t GFC_INTEGER_4 *length, \n \t\t\t\t GFC_INTEGER_4 *status, \n-\t\t\t\t gfc_strlen_type value_len)\n+\t\t\t\t gfc_charlen_type value_len)\n {\n   int argc, arglen = 0, stat_flag = GFC_GC_SUCCESS;\n   char **argv;\n@@ -155,7 +155,7 @@ prefix(get_command_argument_i8) (GFC_INTEGER_8 *number,\n \t\t\t\t char *value, \n \t\t\t\t GFC_INTEGER_8 *length, \n \t\t\t\t GFC_INTEGER_8 *status, \n-\t\t\t\t gfc_strlen_type value_len)\n+\t\t\t\t gfc_charlen_type value_len)\n {\n   GFC_INTEGER_4 number4;\n   GFC_INTEGER_4 length4;\n@@ -177,7 +177,7 @@ void\n prefix(get_command_i4) (char *command, \n \t\t\tGFC_INTEGER_4 *length, \n \t\t\tGFC_INTEGER_4 *status,\n-\t\t\tgfc_strlen_type command_len)\n+\t\t\tgfc_charlen_type command_len)\n {\n   int i, argc, arglen, thisarg;\n   int stat_flag = GFC_GC_SUCCESS;\n@@ -237,7 +237,7 @@ void\n prefix(get_command_i8) (char *command, \n \t\t\tGFC_INTEGER_8 *length, \n \t\t\tGFC_INTEGER_8 *status,\n-\t\t\tgfc_strlen_type command_len)\n+\t\t\tgfc_charlen_type command_len)\n {\n   GFC_INTEGER_4 length4;\n   GFC_INTEGER_4 status4;"}, {"sha": "6695d5b9cf66f9f13265d205e90a450263dcf3e9", "filename": "libgfortran/intrinsics/env.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fintrinsics%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fintrinsics%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fenv.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -34,8 +34,8 @@ Boston, MA 02111-1307, USA.  */\n void \n prefix(getenv) (char * name, \n \t\tchar * value, \n-\t\tgfc_strlen_type name_len, \n-\t\tgfc_strlen_type value_len)\n+\t\tgfc_charlen_type name_len, \n+\t\tgfc_charlen_type value_len)\n {\n \n   /* Make a null-terminated copy of the name string so that c library\n@@ -99,8 +99,8 @@ prefix(get_environment_variable_i4)\n    GFC_INTEGER_4 *length,\n    GFC_INTEGER_4 *status,\n    GFC_LOGICAL_4 *trim_name,\n-   gfc_strlen_type name_len,\n-   gfc_strlen_type value_len)\n+   gfc_charlen_type name_len,\n+   gfc_charlen_type value_len)\n {\n   int stat = GFC_SUCCESS, res_len = 0;\n   char name_nt[name_len+1], *res;\n@@ -164,8 +164,8 @@ prefix(get_environment_variable_i8)\n    GFC_INTEGER_8 *length,\n    GFC_INTEGER_8 *status,\n    GFC_LOGICAL_8 *trim_name,\n-   gfc_strlen_type name_len,\n-   gfc_strlen_type value_len)\n+   gfc_charlen_type name_len,\n+   gfc_charlen_type value_len)\n {\n   GFC_INTEGER_4 length4, status4;\n   GFC_LOGICAL_4 trim_name4;"}, {"sha": "e910fa5878046478ca5958bf376c86fffc36702d", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -549,7 +549,7 @@ void st_set_nml_var_int (void * , char * , int , int );\n void st_set_nml_var_float (void * , char * , int , int );\n \n #define st_set_nml_var_char prefix(st_set_nml_var_char)\n-void st_set_nml_var_char (void * , char * , int , int, gfc_strlen_type);\n+void st_set_nml_var_char (void * , char * , int , int, gfc_charlen_type);\n \n #define st_set_nml_var_complex prefix(st_set_nml_var_complex)\n void st_set_nml_var_complex (void * , char * , int , int );"}, {"sha": "5d4dcd592a0e1f1afe1910b4b6fe94018ad8924f", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -1578,7 +1578,7 @@ st_set_nml_var_float (void * var_addr, char * var_name, int var_name_len,\n \n void\n st_set_nml_var_char (void * var_addr, char * var_name, int var_name_len,\n-\t\t     int kind, gfc_strlen_type string_length)\n+\t\t     int kind, gfc_charlen_type string_length)\n {\n \n   st_set_nml_var (var_addr, var_name, var_name_len, kind, BT_CHARACTER,"}, {"sha": "463cd60348f1841e673743d5e5bd5a8a7e6474d9", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=d7177ab25e9cfef12aa2b0e2a2f68d7f3c81735a", "patch": "@@ -91,8 +91,8 @@ typedef complex double GFC_COMPLEX_8;\n    by the compiler.  */\n /* The type used of array indices, amongst other things.  */\n typedef size_t index_type;\n-/* The type used for string lengths.  Nothing to do with strlen(3).  */\n-typedef GFC_INTEGER_4 gfc_strlen_type;\n+/* The type used for the lengths of character variables.  */\n+typedef GFC_INTEGER_4 gfc_charlen_type;\n \n /* This will be 0 on little-endian machines and one on big-endian machines.  */\n #define l8_to_l4_offset prefix(l8_to_l4_offset)"}]}