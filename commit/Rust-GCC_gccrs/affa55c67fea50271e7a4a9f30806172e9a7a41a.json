{"sha": "affa55c67fea50271e7a4a9f30806172e9a7a41a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmYTU1YzY3ZmVhNTAyNzFlN2E0YTlmMzA4MDYxNzJlOWE3YTQxYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-07-31T19:12:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-07-31T19:12:14Z"}, "message": "re PR preprocessor/36649 (-H option doesn't work as expected)\n\n\tPR preprocessor/36649\n\t* files.c (struct report_missing_guard_data): New type.\n\t(report_missing_guard): Put paths into an array instead of printing\n\tthem right away.  Return 1 rather than 0.\n\t(report_missing_guard_cmp): New function.\n\t(_cpp_report_missing_guards): Sort and print paths gathered by\n\treport_missing_guard callback.\n\n\t* gcc.dg/pch/cpp-3.hs: Add include guards.\n\t* gcc.dg/pch/cpp-3a.h: Likewise.\n\t* gcc.dg/pch/cpp-3b.h: Likewise.\n\t* gcc.dg/cpp/mi8.c: New test.\n\t* gcc.dg/cpp/mi8a.h: New file.\n\t* gcc.dg/cpp/mi8b.h: New file.\n\t* gcc.dg/cpp/mi8c.h: New file.\n\t* gcc.dg/cpp/mi8d.h: New file.\n\nFrom-SVN: r138432", "tree": {"sha": "b8d0f8b842935bf3445c936be9b262e9c8ec3c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8d0f8b842935bf3445c936be9b262e9c8ec3c96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/affa55c67fea50271e7a4a9f30806172e9a7a41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affa55c67fea50271e7a4a9f30806172e9a7a41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/affa55c67fea50271e7a4a9f30806172e9a7a41a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/affa55c67fea50271e7a4a9f30806172e9a7a41a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a23eb008dc764028d758ef589f67aa822a2a81e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23eb008dc764028d758ef589f67aa822a2a81e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23eb008dc764028d758ef589f67aa822a2a81e1"}], "stats": {"total": 102, "additions": 91, "deletions": 11}, "files": [{"sha": "f68def01b5370155aa7e882e1aa54fbc7a86adcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -1,5 +1,15 @@\n 2008-07-31  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR preprocessor/36649\n+\t* gcc.dg/pch/cpp-3.hs: Add include guards.\n+\t* gcc.dg/pch/cpp-3a.h: Likewise.\n+\t* gcc.dg/pch/cpp-3b.h: Likewise.\n+\t* gcc.dg/cpp/mi8.c: New test.\n+\t* gcc.dg/cpp/mi8a.h: New file.\n+\t* gcc.dg/cpp/mi8b.h: New file.\n+\t* gcc.dg/cpp/mi8c.h: New file.\n+\t* gcc.dg/cpp/mi8d.h: New file.\n+\n \tPR rtl-optimization/36419\n \t* g++.dg/eh/async-unwind2.C: New test.\n "}, {"sha": "1999918dea4977c8ed1032d1eea2144ac0ea7936", "filename": "gcc/testsuite/gcc.dg/cpp/mi8.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8.c?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -0,0 +1,8 @@\n+/* Test multiple include guards suggestions.  */\n+\n+/* { dg-do preprocess }\n+   { dg-options \"-H\" }\n+   { dg-message \"mi8a\\.h\\n\\[^\\n\\]*mi8c\\.h\\n\\[^\\n\\]*mi8b\\.h\\n\\[^\\n\\]*mi8d\\.h\\nMultiple include guards may be useful for:\\n\\[^\\n\\]*mi8a\\.h\\n\\[^\\n\\]*mi8d\\.h\\n\" \"\" { target *-*-* } 0 } */\n+\n+#include \"mi8a.h\"\n+#include \"mi8b.h\""}, {"sha": "893d9ff13b46139ef304d3a4ee00b919645175f6", "filename": "gcc/testsuite/gcc.dg/cpp/mi8a.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8a.h?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -0,0 +1 @@\n+#include \"mi8c.h\""}, {"sha": "8e3482ce74b183925c2bfcb590e181a42a424a2e", "filename": "gcc/testsuite/gcc.dg/cpp/mi8b.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8b.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8b.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8b.h?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -0,0 +1,4 @@\n+#ifndef GUARDB\n+#define GUARDB\n+#include \"mi8d.h\"\n+#endif"}, {"sha": "08c5cab94ed9f8eb438b35f9688db2f5be94156a", "filename": "gcc/testsuite/gcc.dg/cpp/mi8c.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8c.h?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -0,0 +1,4 @@\n+#ifndef GUARDC\n+#define GUARDC\n+/* Empty */\n+#endif"}, {"sha": "710cecca972dab601b2292e563ddec01fc9960c8", "filename": "gcc/testsuite/gcc.dg/cpp/mi8d.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8d.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8d.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi8d.h?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -0,0 +1 @@\n+/* Empty */"}, {"sha": "728b1afc7fb127863e636dc0f5eb1a219b8679e7", "filename": "gcc/testsuite/gcc.dg/pch/cpp-3.hs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3.hs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3.hs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3.hs?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -1 +1,4 @@\n+#ifndef CPP_3_H\n+#define CPP_3_H\n /* empty */\n+#endif"}, {"sha": "3788d11791c2a060c3aa5cd4cb27d2ee781138fe", "filename": "gcc/testsuite/gcc.dg/pch/cpp-3a.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3a.h?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -1 +1,4 @@\n+#ifndef CPP_3A_H\n+#define CPP_3A_H\n #include \"cpp-3b.h\"\n+#endif"}, {"sha": "5cb0e81048833901a319af1559a896a21beab7a0", "filename": "gcc/testsuite/gcc.dg/pch/cpp-3b.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3b.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3b.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Fcpp-3b.h?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -1 +1,4 @@\n+#ifndef CPP_3B_H\n+#define CPP_3B_H\n /* empty */\n+#endif"}, {"sha": "49efadc94c6b72a23ac0132485f87d49a2aa6248", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -1,3 +1,13 @@\n+2008-07-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/36649\n+\t* files.c (struct report_missing_guard_data): New type.\n+\t(report_missing_guard): Put paths into an array instead of printing\n+\tthem right away.  Return 1 rather than 0.\n+\t(report_missing_guard_cmp): New function.\n+\t(_cpp_report_missing_guards): Sort and print paths gathered by\n+\treport_missing_guard callback.\n+\n 2008-07-22  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR 28079"}, {"sha": "007fce77d53f183d1d212057ddc0918e25f88df3", "filename": "libcpp/files.c", "status": "modified", "additions": 44, "deletions": 11, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/affa55c67fea50271e7a4a9f30806172e9a7a41a/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/affa55c67fea50271e7a4a9f30806172e9a7a41a/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=affa55c67fea50271e7a4a9f30806172e9a7a41a", "patch": "@@ -1221,12 +1221,19 @@ cpp_change_file (cpp_reader *pfile, enum lc_reason reason,\n   _cpp_do_file_change (pfile, reason, new_name, 1, 0);\n }\n \n+struct report_missing_guard_data\n+{\n+  const char **paths;\n+  size_t count;\n+};\n+\n /* Callback function for htab_traverse.  */\n static int\n-report_missing_guard (void **slot, void *b)\n+report_missing_guard (void **slot, void *d)\n {\n   struct file_hash_entry *entry = (struct file_hash_entry *) *slot;\n-  int *bannerp = (int *) b;\n+  struct report_missing_guard_data *data\n+    = (struct report_missing_guard_data *) d;\n \n   /* Skip directories.  */\n   if (entry->start_dir != NULL)\n@@ -1236,29 +1243,55 @@ report_missing_guard (void **slot, void *b)\n       /* We don't want MI guard advice for the main file.  */\n       if (file->cmacro == NULL && file->stack_count == 1 && !file->main_file)\n \t{\n-\t  if (*bannerp == 0)\n+\t  if (data->paths == NULL)\n \t    {\n-\t      fputs (_(\"Multiple include guards may be useful for:\\n\"),\n-\t\t     stderr);\n-\t      *bannerp = 1;\n+\t      data->paths = XCNEWVEC (const char *, data->count);\n+\t      data->count = 0;\n \t    }\n \n-\t  fputs (entry->u.file->path, stderr);\n-\t  putc ('\\n', stderr);\n+\t  data->paths[data->count++] = file->path;\n \t}\n     }\n \n-  return 0;\n+  /* Keep traversing the hash table.  */\n+  return 1;\n+}\n+\n+/* Comparison function for qsort.  */\n+static int\n+report_missing_guard_cmp (const void *p1, const void *p2)\n+{\n+  return strcmp (*(const char *const *) p1, *(const char *const *) p2);\n }\n \n /* Report on all files that might benefit from a multiple include guard.\n    Triggered by -H.  */\n void\n _cpp_report_missing_guards (cpp_reader *pfile)\n {\n-  int banner = 0;\n+  struct report_missing_guard_data data;\n+\n+  data.paths = NULL;\n+  data.count = htab_elements (pfile->file_hash);\n+  htab_traverse (pfile->file_hash, report_missing_guard, &data);\n \n-  htab_traverse (pfile->file_hash, report_missing_guard, &banner);\n+  if (data.paths != NULL)\n+    {\n+      size_t i;\n+\n+      /* Sort the paths to avoid outputting them in hash table\n+\t order.  */\n+      qsort (data.paths, data.count, sizeof (const char *),\n+\t     report_missing_guard_cmp);\n+      fputs (_(\"Multiple include guards may be useful for:\\n\"),\n+\t     stderr);\n+      for (i = 0; i < data.count; i++)\n+\t{\n+\t  fputs (data.paths[i], stderr);\n+\t  putc ('\\n', stderr);\n+\t}\n+      free (data.paths);\n+    }\n }\n \n /* Locate HEADER, and determine whether it is newer than the current"}]}