{"sha": "363ee90e135b1fde1ac4b16ff3248db0604c45bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYzZWU5MGUxMzViMWZkZTFhYzRiMTZmZjMyNDhkYjA2MDRjNDViZg==", "commit": {"author": {"name": "Wei Guozhi", "email": "carrot@google.com", "date": "2011-04-19T08:46:54Z"}, "committer": {"name": "Wei Guozhi", "email": "carrot@gcc.gnu.org", "date": "2011-04-19T08:46:54Z"}, "message": "arm-protos.h (thumb1_legitimate_address_p): New prototype.\n\n\t* config/arm/arm-protos.h (thumb1_legitimate_address_p): New prototype.\n\t* config/arm/arm.c (thumb1_legitimate_address_p): Remove the static\n\tlinkage.\n\t* config/arm/constraints.md (Uu): New constraint.\n\t* config/arm/arm.md (*arm_movqi_insn): Compute attr \"length\".\n\nFrom-SVN: r172697", "tree": {"sha": "d7db7c5af0995b2b6dcae19e4f08c3f66341fbf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7db7c5af0995b2b6dcae19e4f08c3f66341fbf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/363ee90e135b1fde1ac4b16ff3248db0604c45bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363ee90e135b1fde1ac4b16ff3248db0604c45bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363ee90e135b1fde1ac4b16ff3248db0604c45bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363ee90e135b1fde1ac4b16ff3248db0604c45bf/comments", "author": {"login": "weiguozhi", "id": 57237827, "node_id": "MDQ6VXNlcjU3MjM3ODI3", "avatar_url": "https://avatars.githubusercontent.com/u/57237827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiguozhi", "html_url": "https://github.com/weiguozhi", "followers_url": "https://api.github.com/users/weiguozhi/followers", "following_url": "https://api.github.com/users/weiguozhi/following{/other_user}", "gists_url": "https://api.github.com/users/weiguozhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiguozhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiguozhi/subscriptions", "organizations_url": "https://api.github.com/users/weiguozhi/orgs", "repos_url": "https://api.github.com/users/weiguozhi/repos", "events_url": "https://api.github.com/users/weiguozhi/events{/privacy}", "received_events_url": "https://api.github.com/users/weiguozhi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18a24fed724c9922c919563aa2bc7c94fd0a12ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a24fed724c9922c919563aa2bc7c94fd0a12ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a24fed724c9922c919563aa2bc7c94fd0a12ad"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "2ce7bb77e0b644c6fd6d6b185e7e723e5ddb5352", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=363ee90e135b1fde1ac4b16ff3248db0604c45bf", "patch": "@@ -1,3 +1,12 @@\n+2011-04-19  Wei Guozhi  <carrot@google.com>\n+\n+\tPR target/47855\n+\t* config/arm/arm-protos.h (thumb1_legitimate_address_p): New prototype.\n+\t* config/arm/arm.c (thumb1_legitimate_address_p): Remove the static\n+\tlinkage.\n+\t* config/arm/constraints.md (Uu): New constraint.\n+\t* config/arm/arm.md (*arm_movqi_insn): Compute attr \"length\".\n+\n 2011-04-19  Tristan Gingold  <gingold@adacore.com>\n \n \t* config.gcc (-*-*-*vms): Added."}, {"sha": "190fec0ecef73a62cc77089492345d78738c63bb", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=363ee90e135b1fde1ac4b16ff3248db0604c45bf", "patch": "@@ -58,6 +58,7 @@ extern bool arm_legitimize_reload_address (rtx *, enum machine_mode, int, int,\n \t\t\t\t\t   int);\n extern rtx thumb_legitimize_reload_address (rtx *, enum machine_mode, int, int,\n \t\t\t\t\t    int);\n+extern int thumb1_legitimate_address_p (enum machine_mode, rtx, int);\n extern int arm_const_double_rtx (rtx);\n extern int neg_const_double_rtx_ok_for_fpa (rtx);\n extern int vfp3_const_double_rtx (rtx);"}, {"sha": "5f964d6d425b5f1565b2d95bf83b2e433db55b6b", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=363ee90e135b1fde1ac4b16ff3248db0604c45bf", "patch": "@@ -5775,7 +5775,7 @@ thumb1_index_register_rtx_p (rtx x, int strict_p)\n    addresses based on the frame pointer or arg pointer until the\n    reload pass starts.  This is so that eliminating such addresses\n    into stack based ones won't produce impossible code.  */\n-static int\n+int\n thumb1_legitimate_address_p (enum machine_mode mode, rtx x, int strict_p)\n {\n   /* ??? Not clear if this is right.  Experiment.  */"}, {"sha": "9e23d9bd1752ceff333ccf42331a7ecf2b0c124f", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=363ee90e135b1fde1ac4b16ff3248db0604c45bf", "patch": "@@ -5946,19 +5946,23 @@\n \n \n (define_insn \"*arm_movqi_insn\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,m\")\n-\t(match_operand:QI 1 \"general_operand\" \"rI,K,m,r\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,l,Uu,r,m\")\n+\t(match_operand:QI 1 \"general_operand\" \"rI,K,Uu,l,m,r\"))]\n   \"TARGET_32BIT\n    && (   register_operand (operands[0], QImode)\n        || register_operand (operands[1], QImode))\"\n   \"@\n    mov%?\\\\t%0, %1\n    mvn%?\\\\t%0, #%B1\n    ldr%(b%)\\\\t%0, %1\n+   str%(b%)\\\\t%1, %0\n+   ldr%(b%)\\\\t%0, %1\n    str%(b%)\\\\t%1, %0\"\n-  [(set_attr \"type\" \"*,*,load1,store1\")\n-   (set_attr \"insn\" \"mov,mvn,*,*\")\n-   (set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"type\" \"*,*,load1,store1,load1,store1\")\n+   (set_attr \"insn\" \"mov,mvn,*,*,*,*\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"arch\" \"any,any,t2,t2,any,any\")\n+   (set_attr \"length\" \"4,4,2,2,4,4\")]\n )\n \n (define_insn \"*thumb1_movqi_insn\""}, {"sha": "f5b8521dd8308edc875611fa517753450a6b5bf0", "filename": "gcc/config/arm/constraints.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ee90e135b1fde1ac4b16ff3248db0604c45bf/gcc%2Fconfig%2Farm%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fconstraints.md?ref=363ee90e135b1fde1ac4b16ff3248db0604c45bf", "patch": "@@ -36,6 +36,7 @@\n ;; The following memory constraints have been used:\n ;; in ARM/Thumb-2 state: Q, Ut, Uv, Uy, Un, Um, Us\n ;; in ARM state: Uq\n+;; in Thumb state: Uu\n \n \n (define_register_constraint \"f\" \"TARGET_ARM ? FPA_REGS : NO_REGS\"\n@@ -332,6 +333,14 @@\n  (and (match_code \"mem\")\n       (match_test \"REG_P (XEXP (op, 0))\")))\n \n+(define_memory_constraint \"Uu\"\n+ \"@internal\n+  In Thumb state an address that is valid in 16bit encoding.\"\n+ (and (match_code \"mem\")\n+      (match_test \"TARGET_THUMB\n+\t\t   && thumb1_legitimate_address_p (GET_MODE (op), XEXP (op, 0),\n+\t\t\t\t\t\t   0)\")))\n+\n ;; We used to have constraint letters for S and R in ARM state, but\n ;; all uses of these now appear to have been removed.\n "}]}