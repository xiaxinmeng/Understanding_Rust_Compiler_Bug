{"sha": "b7b1f65711bdea483481c475fa31634ee091068f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdiMWY2NTcxMWJkZWE0ODM0ODFjNDc1ZmEzMTYzNGVlMDkxMDY4Zg==", "commit": {"author": {"name": "Jose E. Marchesi", "email": "jose.marchesi@oracle.com", "date": "2019-09-09T09:14:32Z"}, "committer": {"name": "Jose E. Marchesi", "email": "jemarch@gcc.gnu.org", "date": "2019-09-09T09:14:32Z"}, "message": "Update config.sub and config.guess.\n\n    \n    * config.sub: Import upstream version 2019-06-30.\n    * config.guess: Import upstream version 2019-07-24.\n\nFrom-SVN: r275502", "tree": {"sha": "a826233a0eec74419af1e22932457a51dda9fe10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a826233a0eec74419af1e22932457a51dda9fe10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7b1f65711bdea483481c475fa31634ee091068f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b1f65711bdea483481c475fa31634ee091068f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7b1f65711bdea483481c475fa31634ee091068f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b1f65711bdea483481c475fa31634ee091068f/comments", "author": {"login": "jemarch", "id": 7061875, "node_id": "MDQ6VXNlcjcwNjE4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemarch", "html_url": "https://github.com/jemarch", "followers_url": "https://api.github.com/users/jemarch/followers", "following_url": "https://api.github.com/users/jemarch/following{/other_user}", "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions", "organizations_url": "https://api.github.com/users/jemarch/orgs", "repos_url": "https://api.github.com/users/jemarch/repos", "events_url": "https://api.github.com/users/jemarch/events{/privacy}", "received_events_url": "https://api.github.com/users/jemarch/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "108d64adcad2e199da2d29cbfb35d617c9196f7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/108d64adcad2e199da2d29cbfb35d617c9196f7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/108d64adcad2e199da2d29cbfb35d617c9196f7c"}], "stats": {"total": 319, "additions": 240, "deletions": 79}, "files": [{"sha": "f7913105e5ce1a7c0b5c966afb9625c101a5eb09", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b1f65711bdea483481c475fa31634ee091068f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b1f65711bdea483481c475fa31634ee091068f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b7b1f65711bdea483481c475fa31634ee091068f", "patch": "@@ -1,3 +1,8 @@\n+2019-09-09  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* config.sub: Import upstream version 2019-06-30.\n+\t* config.guess: Import upstream version 2019-07-24.\n+\n 2019-09-03  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* MAINTAINERS: Remove spu port maintainers."}, {"sha": "97ad0733304d51c825cb2abbc5db47d31d32c0ef", "filename": "config.guess", "status": "modified", "additions": 210, "deletions": 54, "changes": 264, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b1f65711bdea483481c475fa31634ee091068f/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b1f65711bdea483481c475fa31634ee091068f/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=b7b1f65711bdea483481c475fa31634ee091068f", "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2019-01-03'\n+timestamp='2019-07-24'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -262,6 +262,9 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n     *:SolidBSD:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n \texit ;;\n+    *:OS108:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-os108_\"$UNAME_RELEASE\"\n+\texit ;;\n     macppc:MirBSD:*:*)\n \techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n \texit ;;\n@@ -275,8 +278,8 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo \"$UNAME_MACHINE\"-unknown-redox\n \texit ;;\n     mips:OSF1:*.*)\n-        echo mips-dec-osf1\n-        exit ;;\n+\techo mips-dec-osf1\n+\texit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -385,20 +388,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n-\tset_cc_for_build\n-\tSUN_ARCH=sparc\n-\t# If there is a compiler, see if it is configured for 64-bit objects.\n-\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n-\t# This test works for both compilers.\n-\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n-\t    if (echo '#ifdef __sparcv9'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\tgrep IS_64BIT_ARCH >/dev/null\n-\t    then\n-\t\tSUN_ARCH=sparcv9\n-\t    fi\n-\tfi\n-\techo \"$SUN_ARCH\"-sun-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n+\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n \texit ;;\n     i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n \techo i386-pc-auroraux\"$UNAME_RELEASE\"\n@@ -998,22 +988,50 @@ EOF\n \texit ;;\n     mips:Linux:*:* | mips64:Linux:*:*)\n \tset_cc_for_build\n+\tIS_GLIBC=0\n+\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#undef CPU\n-\t#undef ${UNAME_MACHINE}\n-\t#undef ${UNAME_MACHINE}el\n+\t#undef mips\n+\t#undef mipsel\n+\t#undef mips64\n+\t#undef mips64el\n+\t#if ${IS_GLIBC} && defined(_ABI64)\n+\tLIBCABI=gnuabi64\n+\t#else\n+\t#if ${IS_GLIBC} && defined(_ABIN32)\n+\tLIBCABI=gnuabin32\n+\t#else\n+\tLIBCABI=${LIBC}\n+\t#endif\n+\t#endif\n+\n+\t#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n+\tCPU=mipsisa64r6\n+\t#else\n+\t#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n+\tCPU=mipsisa32r6\n+\t#else\n+\t#if defined(__mips64)\n+\tCPU=mips64\n+\t#else\n+\tCPU=mips\n+\t#endif\n+\t#endif\n+\t#endif\n+\n \t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n-\tCPU=${UNAME_MACHINE}el\n+\tMIPS_ENDIAN=el\n \t#else\n \t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n-\tCPU=${UNAME_MACHINE}\n+\tMIPS_ENDIAN=\n \t#else\n-\tCPU=\n+\tMIPS_ENDIAN=\n \t#endif\n \t#endif\n EOF\n-\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU'`\"\n-\ttest \"x$CPU\" != x && { echo \"$CPU-unknown-linux-$LIBC\"; exit; }\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\"\n+\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n \t;;\n     mips64el:Linux:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n@@ -1126,7 +1144,7 @@ EOF\n \t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n \t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n \tesac\n-\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}{$UNAME_VERSION}\"\n+\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\"\n \texit ;;\n     i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n@@ -1310,38 +1328,39 @@ EOF\n \techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n \texit ;;\n     *:Darwin:*:*)\n-\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n-\tset_cc_for_build\n-\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n-\t    UNAME_PROCESSOR=powerpc\n+\tUNAME_PROCESSOR=`uname -p`\n+\tcase $UNAME_PROCESSOR in\n+\t    unknown) UNAME_PROCESSOR=powerpc ;;\n+\tesac\n+\tif command -v xcode-select > /dev/null 2> /dev/null && \\\n+\t\t! xcode-select --print-path > /dev/null 2> /dev/null ; then\n+\t    # Avoid executing cc if there is no toolchain installed as\n+\t    # cc will be a stub that puts up a graphical alert\n+\t    # prompting the user to install developer tools.\n+\t    CC_FOR_BUILD=no_compiler_found\n+\telse\n+\t    set_cc_for_build\n \tfi\n-\tif test \"`echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'`\" -le 10 ; then\n-\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n-\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t       grep IS_64BIT_ARCH >/dev/null\n-\t\tthen\n-\t\t    case $UNAME_PROCESSOR in\n-\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n-\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n-\t\t    esac\n-\t\tfi\n-\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n-\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n-\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t       grep IS_PPC >/dev/null\n-\t\tthen\n-\t\t    UNAME_PROCESSOR=powerpc\n-\t\tfi\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t   grep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tcase $UNAME_PROCESSOR in\n+\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\tesac\n+\t    fi\n+\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n+\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n+\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t   grep IS_PPC >/dev/null\n+\t    then\n+\t\tUNAME_PROCESSOR=powerpc\n \t    fi\n \telif test \"$UNAME_PROCESSOR\" = i386 ; then\n-\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n-\t    # that puts up a graphical alert prompting to install\n-\t    # developer tools.  Any system running Mac OS X 10.7 or\n-\t    # later (Darwin 11 and later) is required to have a 64-bit\n-\t    # processor. This is not true of the ARM version of Darwin\n-\t    # that Apple uses in portable devices.\n-\t    UNAME_PROCESSOR=x86_64\n+\t    # uname -m returns i386 or x86_64\n+\t    UNAME_PROCESSOR=$UNAME_MACHINE\n \tfi\n \techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n \texit ;;\n@@ -1446,6 +1465,143 @@ EOF\n \texit ;;\n esac\n \n+# No uname command or uname output not recognized.\n+set_cc_for_build\n+cat > \"$dummy.c\" <<EOF\n+#ifdef _SEQUENT_\n+#include <sys/types.h>\n+#include <sys/utsname.h>\n+#endif\n+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n+#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n+#include <signal.h>\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+#include <sys/utsname.h>\n+#endif\n+#endif\n+#endif\n+main ()\n+{\n+#if defined (sony)\n+#if defined (MIPSEB)\n+  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n+     I don't know....  */\n+  printf (\"mips-sony-bsd\\n\"); exit (0);\n+#else\n+#include <sys/param.h>\n+  printf (\"m68k-sony-newsos%s\\n\",\n+#ifdef NEWSOS4\n+  \"4\"\n+#else\n+  \"\"\n+#endif\n+  ); exit (0);\n+#endif\n+#endif\n+\n+#if defined (NeXT)\n+#if !defined (__ARCHITECTURE__)\n+#define __ARCHITECTURE__ \"m68k\"\n+#endif\n+  int version;\n+  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n+  if (version < 4)\n+    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n+  else\n+    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n+  exit (0);\n+#endif\n+\n+#if defined (MULTIMAX) || defined (n16)\n+#if defined (UMAXV)\n+  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n+#else\n+#if defined (CMU)\n+  printf (\"ns32k-encore-mach\\n\"); exit (0);\n+#else\n+  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (__386BSD__)\n+  printf (\"i386-pc-bsd\\n\"); exit (0);\n+#endif\n+\n+#if defined (sequent)\n+#if defined (i386)\n+  printf (\"i386-sequent-dynix\\n\"); exit (0);\n+#endif\n+#if defined (ns32000)\n+  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n+#endif\n+#endif\n+\n+#if defined (_SEQUENT_)\n+  struct utsname un;\n+\n+  uname(&un);\n+  if (strncmp(un.version, \"V2\", 2) == 0) {\n+    printf (\"i386-sequent-ptx2\\n\"); exit (0);\n+  }\n+  if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n+    printf (\"i386-sequent-ptx1\\n\"); exit (0);\n+  }\n+  printf (\"i386-sequent-ptx\\n\"); exit (0);\n+#endif\n+\n+#if defined (vax)\n+#if !defined (ultrix)\n+#include <sys/param.h>\n+#if defined (BSD)\n+#if BSD == 43\n+  printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n+#else\n+#if BSD == 199006\n+  printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n+#else\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#endif\n+#endif\n+#else\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n+#endif\n+#else\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+  struct utsname un;\n+  uname (&un);\n+  printf (\"vax-dec-ultrix%s\\n\", un.release); exit (0);\n+#else\n+  printf (\"vax-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n+#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n+#if defined(_SIZE_T_) || defined(SIGLOST)\n+  struct utsname *un;\n+  uname (&un);\n+  printf (\"mips-dec-ultrix%s\\n\", un.release); exit (0);\n+#else\n+  printf (\"mips-dec-ultrix\\n\"); exit (0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined (alliant) && defined (i860)\n+  printf (\"i860-alliant-bsd\\n\"); exit (0);\n+#endif\n+\n+  exit (1);\n+}\n+EOF\n+\n+$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n+\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\n+# Apollos put the system type in the environment.\n+test -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n+\n echo \"$0: unable to guess system type\" >&2\n \n case \"$UNAME_MACHINE:$UNAME_SYSTEM\" in"}, {"sha": "a318a46868500fbeea993e693e32701041ffad1b", "filename": "config.sub", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b1f65711bdea483481c475fa31634ee091068f/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b1f65711bdea483481c475fa31634ee091068f/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=b7b1f65711bdea483481c475fa31634ee091068f", "patch": "@@ -2,7 +2,7 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2019-01-01'\n+timestamp='2019-06-30'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -337,17 +337,14 @@ case $1 in\n \t\t\t\tbasic_machine=m88k-harris\n \t\t\t\tos=sysv3\n \t\t\t\t;;\n-\t\t\thp300)\n+\t\t\thp300 | hp300hpux)\n \t\t\t\tbasic_machine=m68k-hp\n+\t\t\t\tos=hpux\n \t\t\t\t;;\n \t\t\thp300bsd)\n \t\t\t\tbasic_machine=m68k-hp\n \t\t\t\tos=bsd\n \t\t\t\t;;\n-\t\t\thp300hpux)\n-\t\t\t\tbasic_machine=m68k-hp\n-\t\t\t\tos=hpux\n-\t\t\t\t;;\n \t\t\thppaosf)\n \t\t\t\tbasic_machine=hppa1.1-hp\n \t\t\t\tos=osf\n@@ -360,10 +357,6 @@ case $1 in\n \t\t\t\tbasic_machine=i386-mach\n \t\t\t\tos=mach\n \t\t\t\t;;\n-\t\t\tvsta)\n-\t\t\t\tbasic_machine=i386-pc\n-\t\t\t\tos=vsta\n-\t\t\t\t;;\n \t\t\tisi68 | isi)\n \t\t\t\tbasic_machine=m68k-isi\n \t\t\t\tos=sysv\n@@ -612,6 +605,10 @@ case $1 in\n \t\t\t\tbasic_machine=vax-dec\n \t\t\t\tos=vms\n \t\t\t\t;;\n+\t\t\tvsta)\n+\t\t\t\tbasic_machine=i386-pc\n+\t\t\t\tos=vsta\n+\t\t\t\t;;\n \t\t\tvxworks960)\n \t\t\t\tbasic_machine=i960-wrs\n \t\t\t\tos=vxworks\n@@ -822,7 +819,9 @@ case $basic_machine in\n \t\tcpu=m68k\n \t\tvendor=next\n \t\tcase $os in\n-\t\t    nextstep* )\n+\t\t    openstep*)\n+\t\t        ;;\n+\t\t    nextstep*)\n \t\t\t;;\n \t\t    ns2*)\n \t\t      os=nextstep2\n@@ -919,7 +918,7 @@ case $basic_machine in\n \t\t;;\n \n \t*-*)\n-\t    \t# shellcheck disable=SC2162\n+\t\t# shellcheck disable=SC2162\n \t\tIFS=\"-\" read cpu vendor <<EOF\n $basic_machine\n EOF\n@@ -1170,7 +1169,7 @@ case $cpu-$vendor in\n \t\t\t| asmjs \\\n \t\t\t| ba \\\n \t\t\t| be32 | be64 \\\n-\t\t\t| bfin | bs2000 \\\n+\t\t\t| bfin | bpf | bs2000 \\\n \t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n \t\t\t| c8051 | clipper | craynv | csky | cydra \\\n \t\t\t| d10v | d30v | dlx | dsp16xx \\\n@@ -1185,13 +1184,13 @@ case $cpu-$vendor in\n \t\t\t| le32 | le64 \\\n \t\t\t| lm32 \\\n \t\t\t| m32c | m32r | m32rle \\\n-\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k | v70 | w65 \\\n-\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip \\\n+\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n+\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n \t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n \t\t\t| microblaze | microblazeel \\\n \t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n \t\t\t| mips16 \\\n-\t\t\t| mips64 | mips64el \\\n+\t\t\t| mips64 | mips64eb | mips64el \\\n \t\t\t| mips64octeon | mips64octeonel \\\n \t\t\t| mips64orion | mips64orionel \\\n \t\t\t| mips64r5900 | mips64r5900el \\\n@@ -1218,19 +1217,21 @@ case $cpu-$vendor in\n \t\t\t| nds32 | nds32le | nds32be \\\n \t\t\t| nfp \\\n \t\t\t| nios | nios2 | nios2eb | nios2el \\\n-\t\t\t| none | np1 | ns16k | ns32k \\\n+\t\t\t| none | np1 | ns16k | ns32k | nvptx \\\n \t\t\t| open8 \\\n \t\t\t| or1k* \\\n \t\t\t| or32 \\\n \t\t\t| orion \\\n+\t\t\t| picochip \\\n \t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n \t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n \t\t\t| pru \\\n \t\t\t| pyramid \\\n \t\t\t| riscv | riscv32 | riscv64 \\\n \t\t\t| rl78 | romp | rs6000 | rx \\\n \t\t\t| score \\\n-\t\t\t| sh | sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n+\t\t\t| sh | shl \\\n+\t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n \t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n \t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n \t\t\t| sparclite \\\n@@ -1240,10 +1241,11 @@ case $cpu-$vendor in\n \t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n \t\t\t| tron \\\n \t\t\t| ubicom32 \\\n-\t\t\t| v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n+\t\t\t| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n \t\t\t| vax \\\n \t\t\t| visium \\\n-\t\t\t| wasm32 \\\n+\t\t\t| w65 \\\n+\t\t\t| wasm32 | wasm64 \\\n \t\t\t| we32k \\\n \t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n \t\t\t| xstormy16 | xtensa* \\\n@@ -1345,7 +1347,7 @@ case $os in\n \t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n \t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n \t     | knetbsd* | mirbsd* | netbsd* \\\n-\t     | bitrig* | openbsd* | solidbsd* | libertybsd* \\\n+\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n \t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n \t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n \t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n@@ -1363,7 +1365,8 @@ case $os in\n \t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n \t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n \t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n-\t     | midnightbsd* | amdhsa* | unleashed* | emscripten*)\n+\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n+\t     | nsk* | powerunix)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \tqnx*)\n@@ -1447,9 +1450,6 @@ case $os in\n \tns2)\n \t\tos=nextstep2\n \t\t;;\n-\tnsk*)\n-\t\tos=nsk\n-\t\t;;\n \t# Preserve the version number of sinix5.\n \tsinix5.*)\n \t\tos=`echo $os | sed -e 's|sinix|sysv|'`"}]}