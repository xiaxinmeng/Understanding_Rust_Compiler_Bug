{"sha": "17dfb726db940e4405e5f15eea6e2483875f78eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdkZmI3MjZkYjk0MGU0NDA1ZTVmMTVlZWE2ZTI0ODM4NzVmNzhlYg==", "commit": {"author": {"name": "Akiko Matsushita", "email": "matusita@sra.co.jp", "date": "2000-08-03T16:06:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-03T16:06:13Z"}, "message": "* gengenrtl.c, rtl.c: Avoid #elif.\n\nFrom-SVN: r35456", "tree": {"sha": "c81f3f5c85f03adc35d91079cbe850f5f470c2a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c81f3f5c85f03adc35d91079cbe850f5f470c2a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17dfb726db940e4405e5f15eea6e2483875f78eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dfb726db940e4405e5f15eea6e2483875f78eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17dfb726db940e4405e5f15eea6e2483875f78eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17dfb726db940e4405e5f15eea6e2483875f78eb/comments", "author": null, "committer": null, "parents": [{"sha": "e82059016e0a3eb2c69029cef46978a07635c3bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82059016e0a3eb2c69029cef46978a07635c3bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82059016e0a3eb2c69029cef46978a07635c3bd"}], "stats": {"total": 138, "additions": 90, "deletions": 48}, "files": [{"sha": "a77159a4a29284fe2b24c2a2f124f8bdfb2a0621", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dfb726db940e4405e5f15eea6e2483875f78eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dfb726db940e4405e5f15eea6e2483875f78eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17dfb726db940e4405e5f15eea6e2483875f78eb", "patch": "@@ -1,3 +1,7 @@\n+Thu Aug  3 10:05:53 2000  Akiko Matsushita <matusita@sra.co.jp>\n+\n+\t* gengenrtl.c, rtl.c: Avoid #elif.\n+\n 2000-08-03  Michael Poole  <poole@troilus.org>\n \n         * tm.texi (Register Classes): Clarify order of sub-initializers"}, {"sha": "535c839345fb318d8f536c6ed50524d89fc7449d", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 43, "deletions": 24, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dfb726db940e4405e5f15eea6e2483875f78eb/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dfb726db940e4405e5f15eea6e2483875f78eb/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=17dfb726db940e4405e5f15eea6e2483875f78eb", "patch": "@@ -40,37 +40,56 @@ Boston, MA 02111-1307, USA.  */\n    slots in a CONST_DOUBLE, so we provide them even if one would suffice.  */\n \n #ifdef REAL_ARITHMETIC\n-#if MAX_LONG_DOUBLE_TYPE_SIZE == 96\n-#define REAL_WIDTH\t(11*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n-#elif MAX_LONG_DOUBLE_TYPE_SIZE == 128\n-#define REAL_WIDTH\t(19*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n-#elif HOST_FLOAT_FORMAT != TARGET_FLOAT_FORMAT\n-#define REAL_WIDTH\t(7*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n-#endif\n+# if MAX_LONG_DOUBLE_TYPE_SIZE == 96\n+#  define REAL_WIDTH\t\\\n+     (11*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n+# else\n+#  if MAX_LONG_DOUBLE_TYPE_SIZE == 128\n+#   define REAL_WIDTH\t\\\n+      (19*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n+#  else\n+#   if HOST_FLOAT_FORMAT != TARGET_FLOAT_FORMAT\n+#    define REAL_WIDTH\t\\\n+      (7*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n+#   endif\n+#  endif\n+# endif\n #endif /* REAL_ARITHMETIC */\n \n #ifndef REAL_WIDTH\n-#if HOST_BITS_PER_WIDE_INT*2 >= MAX_LONG_DOUBLE_TYPE_SIZE\n-#define REAL_WIDTH\t2\n-#elif HOST_BITS_PER_WIDE_INT*3 >= MAX_LONG_DOUBLE_TYPE_SIZE\n-#define REAL_WIDTH\t3\n-#elif HOST_BITS_PER_WIDE_INT*4 >= MAX_LONG_DOUBLE_TYPE_SIZE\n-#define REAL_WIDTH\t4\n-#endif\n+# if HOST_BITS_PER_WIDE_INT*2 >= MAX_LONG_DOUBLE_TYPE_SIZE\n+#  define REAL_WIDTH\t2\n+# else\n+#  if HOST_BITS_PER_WIDE_INT*3 >= MAX_LONG_DOUBLE_TYPE_SIZE\n+#   define REAL_WIDTH\t3\n+#  else\n+#   if HOST_BITS_PER_WIDE_INT*4 >= MAX_LONG_DOUBLE_TYPE_SIZE\n+#    define REAL_WIDTH\t4\n+#   endif\n+#  endif\n+# endif\n #endif /* REAL_WIDTH */\n \n #if REAL_WIDTH == 1\n-#define CONST_DOUBLE_FORMAT\t\"e0ww\"\n-#elif REAL_WIDTH == 2\n-#define CONST_DOUBLE_FORMAT\t\"e0ww\"\n-#elif REAL_WIDTH == 3\n-#define CONST_DOUBLE_FORMAT\t\"e0www\"\n-#elif REAL_WIDTH == 4\n-#define CONST_DOUBLE_FORMAT\t\"e0wwww\"\n-#elif REAL_WIDTH == 5\n-#define CONST_DOUBLE_FORMAT\t\"e0wwwww\"\n+# define CONST_DOUBLE_FORMAT\t\"e0ww\"\n #else\n-#define CONST_DOUBLE_FORMAT\t/* nothing - will cause syntax error */\n+# if REAL_WIDTH == 2\n+#  define CONST_DOUBLE_FORMAT\t\"e0ww\"\n+# else\n+#  if REAL_WIDTH == 3\n+#   define CONST_DOUBLE_FORMAT\t\"e0www\"\n+#  else\n+#   if REAL_WIDTH == 4\n+#    define CONST_DOUBLE_FORMAT\t\"e0wwww\"\n+#   else\n+#    if REAL_WIDTH == 5\n+#     define CONST_DOUBLE_FORMAT\t\"e0wwwww\"\n+#    else\n+#     define CONST_DOUBLE_FORMAT /* nothing - will cause syntax error */\n+#    endif\n+#   endif\n+#  endif\n+# endif\n #endif\n \n "}, {"sha": "de28a603a9c0bceaebac8c2c5aabd37ad8d25f29", "filename": "gcc/rtl.c", "status": "modified", "additions": 43, "deletions": 24, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17dfb726db940e4405e5f15eea6e2483875f78eb/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17dfb726db940e4405e5f15eea6e2483875f78eb/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=17dfb726db940e4405e5f15eea6e2483875f78eb", "patch": "@@ -52,37 +52,56 @@ extern struct obstack *rtl_obstack;\n    slots in a CONST_DOUBLE, so we provide them even if one would suffice.  */\n \n #ifdef REAL_ARITHMETIC\n-#if MAX_LONG_DOUBLE_TYPE_SIZE == 96\n-#define REAL_WIDTH\t(11*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n-#elif MAX_LONG_DOUBLE_TYPE_SIZE == 128\n-#define REAL_WIDTH\t(19*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n-#elif HOST_FLOAT_FORMAT != TARGET_FLOAT_FORMAT\n-#define REAL_WIDTH\t(7*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n-#endif\n+# if MAX_LONG_DOUBLE_TYPE_SIZE == 96\n+#  define REAL_WIDTH\t\\\n+     (11*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n+# else\n+#  if MAX_LONG_DOUBLE_TYPE_SIZE == 128\n+#   define REAL_WIDTH\t\\\n+      (19*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n+#  else\n+#   if HOST_FLOAT_FORMAT != TARGET_FLOAT_FORMAT\n+#    define REAL_WIDTH\t\\\n+       (7*8 + HOST_BITS_PER_WIDE_INT)/HOST_BITS_PER_WIDE_INT\n+#   endif\n+#  endif\n+# endif\n #endif /* REAL_ARITHMETIC */\n \n #ifndef REAL_WIDTH\n-#if HOST_BITS_PER_WIDE_INT*2 >= MAX_LONG_DOUBLE_TYPE_SIZE\n-#define REAL_WIDTH\t2\n-#elif HOST_BITS_PER_WIDE_INT*3 >= MAX_LONG_DOUBLE_TYPE_SIZE\n-#define REAL_WIDTH\t3\n-#elif HOST_BITS_PER_WIDE_INT*4 >= MAX_LONG_DOUBLE_TYPE_SIZE\n-#define REAL_WIDTH\t4\n-#endif\n+# if HOST_BITS_PER_WIDE_INT*2 >= MAX_LONG_DOUBLE_TYPE_SIZE\n+#  define REAL_WIDTH\t2\n+# else\n+#  if HOST_BITS_PER_WIDE_INT*3 >= MAX_LONG_DOUBLE_TYPE_SIZE\n+#   define REAL_WIDTH\t3\n+#  else\n+#   if HOST_BITS_PER_WIDE_INT*4 >= MAX_LONG_DOUBLE_TYPE_SIZE\n+#    define REAL_WIDTH\t4\n+#   endif\n+#  endif\n+# endif\n #endif /* REAL_WIDTH */\n \n #if REAL_WIDTH == 1\n-#define CONST_DOUBLE_FORMAT\t\"e0ww\"\n-#elif REAL_WIDTH == 2\n-#define CONST_DOUBLE_FORMAT\t\"e0ww\"\n-#elif REAL_WIDTH == 3\n-#define CONST_DOUBLE_FORMAT\t\"e0www\"\n-#elif REAL_WIDTH == 4\n-#define CONST_DOUBLE_FORMAT\t\"e0wwww\"\n-#elif REAL_WIDTH == 5\n-#define CONST_DOUBLE_FORMAT\t\"e0wwwww\"\n+# define CONST_DOUBLE_FORMAT\t\"e0ww\"\n #else\n-#define CONST_DOUBLE_FORMAT\t/* nothing - will cause syntax error */\n+# if REAL_WIDTH == 2\n+#  define CONST_DOUBLE_FORMAT\t\"e0ww\"\n+# else\n+#  if REAL_WIDTH == 3\n+#   define CONST_DOUBLE_FORMAT\t\"e0www\"\n+#  else\n+#   if REAL_WIDTH == 4\n+#    define CONST_DOUBLE_FORMAT\t\"e0wwww\"\n+#   else\n+#    if REAL_WIDTH == 5\n+#     define CONST_DOUBLE_FORMAT\t\"e0wwwww\"\n+#    else\n+#     define CONST_DOUBLE_FORMAT\t/* nothing - will cause syntax error */\n+#    endif\n+#   endif\n+#  endif\n+# endif\n #endif\n \n /* Indexed by rtx code, gives number of operands for an rtx with that code."}]}