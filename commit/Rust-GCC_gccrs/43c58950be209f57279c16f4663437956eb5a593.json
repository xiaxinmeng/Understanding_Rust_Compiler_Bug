{"sha": "43c58950be209f57279c16f4663437956eb5a593", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjNTg5NTBiZTIwOWY1NzI3OWMxNmY0NjYzNDM3OTU2ZWI1YTU5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T09:20:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-17T09:20:50Z"}, "message": "[multiple changes]\n\n2014-10-17  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb (Expand_N_Task_Body): Add defense against\n\tprevious errors.\n\t* freeze.adb (Freeze_Entity): Add defense against checking null\n\tscope for generic.\n\t* restrict.adb (Tasking_Allowed): Add test for No_Run_Time mode.\n\t* sem_ch13.adb (Freeze_Entity_Checks): Add defense against\n\tprevious errors.\n\t* sem_ch9.adb (Analyze_Task_Type_Declaration): Give error if\n\tin No_Run_Time mode.\n\n2014-10-17  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-makr.adb: Minor reformatting.\n\n2014-10-17  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatcmd.adb, make.adb, prj-part.adb, gnatlink.adb, prj-nmsc.adb,\n\tprj-conf.adb, prj-env.adb: Use Is_Directory_Separator where possible.\n\n2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_prag.adb (Undo_Initialization): If Initialize_Scalars\n\tis enabled, code will be generated for some composite types\n\tto initialize an object after its declaration. If there is\n\ta subsequent Import pragma for the object, that code must be\n\tremoved as specified byw the semantics of the pragma, and to\n\tprevent out-of-order elaboration issues in the back-end.\n\n2014-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Op_Concat): Keep concatenation operator\n\twrapping mechanism under debug flag -gnatd.h.\n\t* debug.adb: Claim debug switch -gnatd.h.\n\nFrom-SVN: r216384", "tree": {"sha": "ac2ce43d8b87906a4f1c44c43fc8feeb03aaee9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac2ce43d8b87906a4f1c44c43fc8feeb03aaee9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c58950be209f57279c16f4663437956eb5a593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c58950be209f57279c16f4663437956eb5a593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c58950be209f57279c16f4663437956eb5a593", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c58950be209f57279c16f4663437956eb5a593/comments", "author": null, "committer": null, "parents": [{"sha": "fa2e6e2570459be86a7a47482ad7bd2a7115982a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2e6e2570459be86a7a47482ad7bd2a7115982a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa2e6e2570459be86a7a47482ad7bd2a7115982a"}], "stats": {"total": 231, "additions": 165, "deletions": 66}, "files": [{"sha": "70bad2fd58a917306e1ef688298cb29efea6b939", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -1,3 +1,39 @@\n+2014-10-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb (Expand_N_Task_Body): Add defense against\n+\tprevious errors.\n+\t* freeze.adb (Freeze_Entity): Add defense against checking null\n+\tscope for generic.\n+\t* restrict.adb (Tasking_Allowed): Add test for No_Run_Time mode.\n+\t* sem_ch13.adb (Freeze_Entity_Checks): Add defense against\n+\tprevious errors.\n+\t* sem_ch9.adb (Analyze_Task_Type_Declaration): Give error if\n+\tin No_Run_Time mode.\n+\n+2014-10-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-makr.adb: Minor reformatting.\n+\n+2014-10-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatcmd.adb, make.adb, prj-part.adb, gnatlink.adb, prj-nmsc.adb,\n+\tprj-conf.adb, prj-env.adb: Use Is_Directory_Separator where possible.\n+\n+2014-10-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_prag.adb (Undo_Initialization): If Initialize_Scalars\n+\tis enabled, code will be generated for some composite types\n+\tto initialize an object after its declaration. If there is\n+\ta subsequent Import pragma for the object, that code must be\n+\tremoved as specified byw the semantics of the pragma, and to\n+\tprevent out-of-order elaboration issues in the back-end.\n+\n+2014-10-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Op_Concat): Keep concatenation operator\n+\twrapping mechanism under debug flag -gnatd.h.\n+\t* debug.adb: Claim debug switch -gnatd.h.\n+\n 2014-10-17  Doug Rupp  <rupp@adacore.com>\n \n \t* gcc-interface/Makefile.in: Enable the socket runtime bits"}, {"sha": "2b249e926e002c5dda165ae033f8d8946c443ed1", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -98,7 +98,7 @@ package body Debug is\n    --  d.e  Enable atomic synchronization\n    --  d.f  Inhibit folding of static expressions\n    --  d.g  Enable conversion of raise into goto\n-   --  d.h\n+   --  d.h  Minimize the creation of public internal symbols for concatenation\n    --  d.i  Ignore Warnings pragmas\n    --  d.j  Generate listing of frontend inlined calls\n    --  d.k\n@@ -525,6 +525,11 @@ package body Debug is\n    --       this if this debug flag is set. Later we will enable this more\n    --       generally by default.\n \n+   --  d.h  Minimize the creation of public internal symbols for concatenation\n+   --       by enforcing a secondary stack-like handling of the final result.\n+   --       The target of the concatenation is thus constrained in place and\n+   --       initialized with the result instead of acting as its alias.\n+\n    --  d.i  Ignore all occurrences of pragma Warnings in the sources. This can\n    --       be used in particular to disable Warnings (Off) to check if any of\n    --       these statements are inappropriate."}, {"sha": "eeada2c8ff19e7ea03682c02b76ce53c5532fc95", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -6589,7 +6589,40 @@ package body Exp_Ch4 is\n             Append (Right_Opnd (Cnode), Opnds);\n          end loop Inner;\n \n-         Expand_Concatenate (Cnode, Opnds);\n+         --  Note: The following code is a temporary workaround for N731-034\n+         --  and N829-028 and will be kept until the general issue of internal\n+         --  symbol serialization is addressed. The workaround is kept under a\n+         --  debug switch to avoid permiating into the general case.\n+\n+         --  Wrap the node to concatenate into an expression actions node to\n+         --  keep it nicely packaged. This is useful in the case of an assert\n+         --  pragma with a concatenation where we want to be able to delete\n+         --  the concatenation and all its expansion stuff.\n+\n+         if Debug_Flag_Dot_H then\n+            declare\n+               Cnod : constant Node_Id   := Relocate_Node (Cnode);\n+               Typ  : constant Entity_Id := Base_Type (Etype (Cnode));\n+\n+            begin\n+               --  Note: use Rewrite rather than Replace here, so that for\n+               --  example Why_Not_Static can find the original concatenation\n+               --  node OK!\n+\n+               Rewrite (Cnode,\n+                 Make_Expression_With_Actions (Sloc (Cnode),\n+                   Actions    => New_List (Make_Null_Statement (Sloc (Cnode))),\n+                   Expression => Cnod));\n+\n+               Expand_Concatenate (Cnod, Opnds);\n+               Analyze_And_Resolve (Cnode, Typ);\n+            end;\n+\n+         --  Default case\n+\n+         else\n+            Expand_Concatenate (Cnode, Opnds);\n+         end if;\n \n          exit Outer when Cnode = N;\n          Cnode := Parent (Cnode);"}, {"sha": "9682859feea5854cd940f89904f9aa11f90e6e05", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -11449,6 +11449,13 @@ package body Exp_Ch9 is\n       --  Used to determine the proper location of wrapper body insertions\n \n    begin\n+      --  if no task body procedure, means we had an error in configurable\n+      --  run-time mode, and there is no point in proceeding further.\n+\n+      if No (Task_Body_Procedure (Ttyp)) then\n+         return;\n+      end if;\n+\n       --  Add renaming declarations for discriminals and a declaration for the\n       --  entry family index (if applicable).\n "}, {"sha": "6ceaf310b060263db0f8d1d6c21e1d96fa1b7f82", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -1863,6 +1863,27 @@ package body Exp_Prag is\n       if No (Init_Call) and then Present (Expression (Parent (Def_Id))) then\n          Set_Expression (Parent (Def_Id), Empty);\n       end if;\n+\n+      --  The object may not have any initialization, but in the presence of\n+      --  Initialize_Scalars code is inserted after then declaration, which\n+      --  must now be removed as well. The code carries the same source\n+      --  location as the declaration itself.\n+\n+      if Initialize_Scalars and then Is_Array_Type (Etype (Def_Id)) then\n+         declare\n+            Init : Node_Id;\n+            Nxt  : Node_Id;\n+         begin\n+            Init := Next (Parent (Def_Id));\n+            while not Comes_From_Source (Init)\n+              and then Sloc (Init) = Sloc (Def_Id)\n+            loop\n+               Nxt := Next (Init);\n+               Remove (Init);\n+               Init := Nxt;\n+            end loop;\n+         end;\n+      end if;\n    end Undo_Initialization;\n \n end Exp_Prag;"}, {"sha": "5b4bfd9b5d7e8185df2b997a7d9c469e9f07f6ab", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -5024,7 +5024,8 @@ package body Freeze is\n          --  that later when the full type is frozen).\n \n          elsif Ekind_In (E, E_Record_Type, E_Record_Subtype)\n-           and then not Is_Generic_Unit (Scope (E))\n+           and then not (Present (Scope (E))\n+                          and then Is_Generic_Unit (Scope (E)))\n          then\n             Freeze_Record_Type (E);\n "}, {"sha": "c7a1330a15179bc080475ad2908ddab49faeee03", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -883,10 +883,9 @@ procedure GNATCmd is\n       if not Is_Absolute_Path (Exec_File_Name) then\n          for Index in Exec_File_Name'Range loop\n             if Exec_File_Name (Index) = Directory_Separator then\n-               Fail (\"relative executable (\"\"\" &\n-                       Exec_File_Name &\n-                       \"\"\") with directory part not allowed \" &\n-                       \"when using project files\");\n+               Fail (\"relative executable (\"\"\" & Exec_File_Name\n+                     & \"\"\") with directory part not allowed \"\n+                     & \"when using project files\");\n             end if;\n          end loop;\n \n@@ -1398,9 +1397,7 @@ procedure GNATCmd is\n \n                   else\n                      for K in Switch'Range loop\n-                        if Switch (K) = '/'\n-                          or else Switch (K) = Directory_Separator\n-                        then\n+                        if Is_Directory_Separator (Switch (K)) then\n                            Test_Existence := True;\n                            exit;\n                         end if;"}, {"sha": "190aadfb20698c810014ce4d2a021b20b804be7a", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -1204,9 +1204,8 @@ procedure Gnatlink is\n                                        if GCC_Index = 0 then\n                                           GCC_Index :=\n                                             Index (Path (1 .. Path_Last),\n-                                                   Directory_Separator &\n-                                                   \"lib\" &\n-                                                   Directory_Separator);\n+                                                   Directory_Separator & \"lib\"\n+                                                   & Directory_Separator);\n                                        end if;\n \n                                        --  If we have found a \"lib\" subdir in"}, {"sha": "eb062e38ce9702c3fd9efb761c18f0d4668f4222", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -4057,8 +4057,7 @@ package body Make is\n    begin\n       First := Name'Last;\n       while First > Name'First\n-        and then Name (First - 1) /= Directory_Separator\n-        and then Name (First - 1) /= '/'\n+        and then not Is_Directory_Separator (Name (First - 1))\n       loop\n          First := First - 1;\n       end loop;\n@@ -6805,8 +6804,7 @@ package body Make is\n          begin\n             First := Name'Last;\n             while First > Name'First\n-              and then Name (First - 1) /= Directory_Separator\n-              and then Name (First - 1) /= '/'\n+              and then not Is_Directory_Separator (Name (First - 1))\n             loop\n                First := First - 1;\n             end loop;"}, {"sha": "6d5cdc7cc15e546bf7393a879fd6e5750d8af9da", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -26,6 +26,7 @@\n with Makeutl;  use Makeutl;\n with MLib.Tgt;\n with Opt;      use Opt;\n+with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Env;\n with Prj.Err;\n@@ -1526,11 +1527,12 @@ package body Prj.Conf is\n \n       function Is_Base_Name (Path : String) return Boolean is\n       begin\n-         for I in Path'Range loop\n-            if Path (I) = Directory_Separator or else Path (I) = '/' then\n+         for J in Path'Range loop\n+            if Is_Directory_Separator (Path (J)) then\n                return False;\n             end if;\n          end loop;\n+\n          return True;\n       end Is_Base_Name;\n "}, {"sha": "9dcd3249e1e841f3e61451668f1df625e5187d8d", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -1435,7 +1435,7 @@ package body Prj.Env is\n       function Is_Base_Name (Path : String) return Boolean is\n       begin\n          for J in Path'Range loop\n-            if Path (J) = Directory_Separator or else Path (J) = '/' then\n+            if Is_Directory_Separator (Path (J)) then\n                return False;\n             end if;\n          end loop;\n@@ -2131,14 +2131,14 @@ package body Prj.Env is\n                --  $prefix/share/gpr\n \n                Add_Str_To_Name_Buffer\n-                 (Path_Separator & Prefix.all &\n-                  \"share\" & Directory_Separator & \"gpr\");\n+                 (Path_Separator & Prefix.all & \"share\"\n+                  & Directory_Separator & \"gpr\");\n \n                --  $prefix/lib/gnat\n \n                Add_Str_To_Name_Buffer\n-                 (Path_Separator & Prefix.all &\n-                  \"lib\" & Directory_Separator & \"gnat\");\n+                 (Path_Separator & Prefix.all & \"lib\"\n+                  & Directory_Separator & \"gnat\");\n             end if;\n \n             Free (Prefix);\n@@ -2293,8 +2293,7 @@ package body Prj.Env is\n             exit Check_Dot;\n          end if;\n \n-         exit Check_Dot when File (K) = Directory_Separator\n-           or else File (K) = '/';\n+         exit Check_Dot when Is_Directory_Separator (File (K));\n       end loop Check_Dot;\n \n       if not Is_Absolute_Path (File) then"}, {"sha": "06cb64b32e89fcdc70b2752b05a0e6104a253398", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -1187,7 +1187,7 @@ package body Prj.Makr is\n                Canonical_Case_File_Name (Canon (1 .. Last));\n \n                if Is_Regular_File\n-                 (Dir_Name & Directory_Separator & Str (1 .. Last))\n+                    (Dir_Name & Directory_Separator & Str (1 .. Last))\n                then\n                   Matched := True;\n \n@@ -1277,10 +1277,9 @@ package body Prj.Makr is\n                              new String'(Get_Name_String (Tmp_File));\n                         end if;\n \n-                        Args (Args'Last) := new String'\n-                          (Dir_Name &\n-                           Directory_Separator &\n-                           Str (1 .. Last));\n+                        Args (Args'Last) :=\n+                          new String'\n+                            (Dir_Name & Directory_Separator & Str (1 .. Last));\n \n                         --  Save the standard output and error\n \n@@ -1477,7 +1476,7 @@ package body Prj.Makr is\n                --  Do not call itself for \".\" or \"..\"\n \n                if Is_Directory\n-                 (Dir_Name & Directory_Separator & Str (1 .. Last))\n+                    (Dir_Name & Directory_Separator & Str (1 .. Last))\n                  and then Str (1 .. Last) /= \".\"\n                  and then Str (1 .. Last) /= \"..\"\n                then"}, {"sha": "24007995df18ed996f53c41aa67a6da72adfdcde", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 17, "deletions": 29, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -5031,10 +5031,7 @@ package body Prj.Nmsc is\n \n                if OK then\n                   for J in 1 .. Name_Len loop\n-                     if Name_Buffer (J) = '/'\n-                          or else\n-                        Name_Buffer (J) = Directory_Separator\n-                     then\n+                     if Is_Directory_Separator (Name_Buffer (J)) then\n                         OK := False;\n                         exit;\n                      end if;\n@@ -5336,9 +5333,7 @@ package body Prj.Nmsc is\n    function Compute_Directory_Last (Dir : String) return Natural is\n    begin\n       if Dir'Length > 1\n-        and then (Dir (Dir'Last - 1) = Directory_Separator\n-                    or else\n-                  Dir (Dir'Last - 1) = '/')\n+        and then Is_Directory_Separator (Dir (Dir'Last - 1))\n       then\n          return Dir'Last - 1;\n       else\n@@ -5858,7 +5853,7 @@ package body Prj.Nmsc is\n                --  Check that there is no directory information\n \n                for J in 1 .. Last loop\n-                  if Line (J) = '/' or else Line (J) = Directory_Separator then\n+                  if Is_Directory_Separator (Line (J)) then\n                      Error_Msg_File_1 := Source_Name;\n                      Error_Msg\n                        (Data.Flags,\n@@ -6485,15 +6480,12 @@ package body Prj.Nmsc is\n                         --  Check that there is no directory information\n \n                         for J in 1 .. Last loop\n-                           if Line (J) = '/'\n-                                or else\n-                              Line (J) = Directory_Separator\n-                           then\n+                           if Is_Directory_Separator (Line (J)) then\n                               Error_Msg_File_1 := Name;\n                               Error_Msg\n                                 (Data.Flags,\n-                                 \"file name cannot include \" &\n-                                 \"directory information ({)\",\n+                                 \"file name cannot include \"\n+                                 & \"directory information ({)\",\n                                  Location, Project.Project);\n                               exit;\n                            end if;\n@@ -6600,10 +6592,7 @@ package body Prj.Nmsc is\n                --  Check that there is no directory information\n \n                for J in 1 .. Name_Len loop\n-                  if Name_Buffer (J) = '/'\n-                       or else\n-                     Name_Buffer (J) = Directory_Separator\n-                  then\n+                  if Is_Directory_Separator (Name_Buffer (J)) then\n                      Error_Msg_File_1 := Name;\n                      Error_Msg\n                        (Data.Flags,\n@@ -7394,11 +7383,11 @@ package body Prj.Nmsc is\n             if Name (1 .. Last) /= \".\" and then Name (1 .. Last) /= \"..\" then\n                declare\n                   Path_Name : constant String :=\n-                    Normalize_Pathname\n-                      (Name           => Name (1 .. Last),\n-                       Directory      => Path_Str,\n-                       Resolve_Links  => Resolve_Links)\n-                    & Directory_Separator;\n+                                Normalize_Pathname\n+                                  (Name           => Name (1 .. Last),\n+                                   Directory      => Path_Str,\n+                                   Resolve_Links  => Resolve_Links)\n+                                & Directory_Separator;\n \n                   Path2 : Path_Information;\n                   OK    : Boolean := True;\n@@ -7475,8 +7464,7 @@ package body Prj.Nmsc is\n \n          if Search_For = Search_Files then\n             while Pattern_End >= Pattern'First\n-              and then Pattern (Pattern_End) /= '/'\n-              and then Pattern (Pattern_End) /= Directory_Separator\n+              and then not Is_Directory_Separator (Pattern (Pattern_End))\n             loop\n                Pattern_End := Pattern_End - 1;\n             end loop;\n@@ -7512,9 +7500,9 @@ package body Prj.Nmsc is\n          Recursive :=\n            Pattern_End - 1 >= Pattern'First\n            and then Pattern (Pattern_End - 1 .. Pattern_End) = \"**\"\n-           and then (Pattern_End - 1 = Pattern'First\n-                      or else Pattern (Pattern_End - 2) = '/'\n-                      or else Pattern (Pattern_End - 2) = Directory_Separator);\n+           and then\n+             (Pattern_End - 1 = Pattern'First\n+               or else Is_Directory_Separator (Pattern (Pattern_End - 2)));\n \n          if Recursive then\n             Pattern_End := Pattern_End - 2;\n@@ -7631,7 +7619,7 @@ package body Prj.Nmsc is\n                declare\n                   Source_Directory : constant String :=\n                                        Get_Name_String (Element.Value)\n-                                         & Directory_Separator;\n+                                       & Directory_Separator;\n \n                   Dir_Last : constant Natural :=\n                                Compute_Directory_Last (Source_Directory);"}, {"sha": "5f04158bebfcc6a9e1cd85fe2ba45dda5eb48681", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -349,8 +349,7 @@ package body Prj.Part is\n       Get_Name_String (Path_Name_Of (Main_Project, In_Tree));\n \n       while Name_Len > 0\n-        and then Name_Buffer (Name_Len) /= Directory_Separator\n-        and then Name_Buffer (Name_Len) /= '/'\n+        and then not Is_Directory_Separator (Name_Buffer (Name_Len))\n       loop\n          Name_Len := Name_Len - 1;\n       end loop;"}, {"sha": "13732fb73a363ab211f515fa5866c519ac9b49a7", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -1533,7 +1533,8 @@ package body Restrict is\n    begin\n       return not Restrictions.Set (No_Tasking)\n         and then (not Restrictions.Set (Max_Tasks)\n-                    or else Restrictions.Value (Max_Tasks) > 0);\n+                   or else Restrictions.Value (Max_Tasks) > 0)\n+        and then not No_Run_Time_Mode;\n    end Tasking_Allowed;\n \n end Restrict;"}, {"sha": "c8cfd031b36e0b63d71f68be44efada0cf5a1099", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -10304,7 +10304,8 @@ package body Sem_Ch13 is\n \n       --  Check Ada derivation of CPP type\n \n-      if Expander_Active    -- why? losing errors in -gnatc mode???\n+      if Expander_Active              -- why? losing errors in -gnatc mode???\n+        and then Present (Etype (E))  -- defend against errors\n         and then Tagged_Type_Expansion\n         and then Ekind (E) = E_Record_Type\n         and then Etype (E) /= E"}, {"sha": "f48c7bd960bd1b4f2a9f99ff056d3635e0b5a316", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c58950be209f57279c16f4663437956eb5a593/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=43c58950be209f57279c16f4663437956eb5a593", "patch": "@@ -2894,7 +2894,20 @@ package body Sem_Ch9 is\n       T      : Entity_Id;\n \n    begin\n-      Check_Restriction (No_Tasking, N);\n+      --  Attempt to use tasking in no run time mode is not allowe. Issue hard\n+      --  error message to disable expansion which leads to crashes.\n+\n+      if Opt.No_Run_Time_Mode then\n+         Error_Msg_N (\"tasking not allowed in No_Run_Time mode\", N);\n+\n+      --  Otherwise soft check for no tasking restriction\n+\n+      else\n+         Check_Restriction (No_Tasking, N);\n+      end if;\n+\n+      --  Proceed ahead with analysis of task type declaration\n+\n       Tasking_Used := True;\n \n       --  The sequential partition elaboration policy is supported only in the"}]}