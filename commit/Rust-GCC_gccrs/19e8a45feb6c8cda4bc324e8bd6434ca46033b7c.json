{"sha": "19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTllOGE0NWZlYjZjOGNkYTRiYzMyNGU4YmQ2NDM0Y2E0NjAzM2I3Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-02-15T20:29:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-02-15T20:29:08Z"}, "message": "PR c++/79464 - ICE in IPA with omitted constructor parms\n\n\t* class.c (build_clone): Also omit parms from TYPE_ARG_TYPES.\n\t(adjust_clone_args): Adjust.\n\t(add_method): Remember omitted parms.\n\t* call.c (add_function_candidate): Likewise.\n\t* mangle.c (write_method_parms): Likewise.\n\t* method.c (ctor_omit_inherited_parms): Return false if there are no\n\tparms to omit.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r245495", "tree": {"sha": "753e105ddd16894c23f726f7d2c1b39362e4d4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/753e105ddd16894c23f726f7d2c1b39362e4d4df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "945c17d8c1fd5e2299fb17becac9b35ec45db3e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945c17d8c1fd5e2299fb17becac9b35ec45db3e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945c17d8c1fd5e2299fb17becac9b35ec45db3e6"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "d346d687d93a90076211d280e2870734faa3cc5f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "patch": "@@ -1,3 +1,15 @@\n+2017-02-15  Jason Merrill  <jason@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79464 - ICE in IPA with omitted constructor parms\n+\t* class.c (build_clone): Also omit parms from TYPE_ARG_TYPES.\n+\t(adjust_clone_args): Adjust.\n+\t(add_method): Remember omitted parms.\n+\t* call.c (add_function_candidate): Likewise.\n+\t* mangle.c (write_method_parms): Likewise.\n+\t* method.c (ctor_omit_inherited_parms): Return false if there are no\n+\tparms to omit.\n+\n 2017-02-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/79363"}, {"sha": "154509bec6f55c16b46889aee886a25184b2746c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "patch": "@@ -2005,7 +2005,11 @@ add_function_candidate (struct z_candidate **candidates,\n      considered in overload resolution.  */\n   if (DECL_CONSTRUCTOR_P (fn))\n     {\n-      parmlist = skip_artificial_parms_for (fn, parmlist);\n+      if (ctor_omit_inherited_parms (fn))\n+\t/* Bring back parameters omitted from an inherited ctor.  */\n+\tparmlist = FUNCTION_FIRST_USER_PARMTYPE (DECL_ORIGIN (fn));\n+      else\n+\tparmlist = skip_artificial_parms_for (fn, parmlist);\n       skip = num_artificial_parms_for (fn);\n       if (skip > 0 && first_arg != NULL_TREE)\n \t{"}, {"sha": "1442b55cfe9246c59fd9e50fc62d455f8b52065d", "filename": "gcc/cp/class.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "patch": "@@ -1149,6 +1149,12 @@ add_method (tree type, tree method, tree using_decl)\n       if (! DECL_STATIC_FUNCTION_P (method))\n \tparms2 = TREE_CHAIN (parms2);\n \n+      /* Bring back parameters omitted from an inherited ctor.  */\n+      if (ctor_omit_inherited_parms (fn))\n+\tparms1 = FUNCTION_FIRST_USER_PARMTYPE (DECL_ORIGIN (fn));\n+      if (ctor_omit_inherited_parms (method))\n+\tparms2 = FUNCTION_FIRST_USER_PARMTYPE (DECL_ORIGIN (method));\n+\n       if (compparms (parms1, parms2)\n \t  && (!DECL_CONV_FN_P (fn)\n \t      || same_type_p (TREE_TYPE (fn_type),\n@@ -4761,6 +4767,10 @@ build_clone (tree fn, tree name)\n \tDECL_VINDEX (clone) = NULL_TREE;\n     }\n \n+  bool ctor_omit_inherited_parms_p = ctor_omit_inherited_parms (clone);\n+  if (ctor_omit_inherited_parms_p)\n+    gcc_assert (DECL_HAS_IN_CHARGE_PARM_P (clone));\n+\n   /* If there was an in-charge parameter, drop it from the function\n      type.  */\n   if (DECL_HAS_IN_CHARGE_PARM_P (clone))\n@@ -4780,8 +4790,12 @@ build_clone (tree fn, tree name)\n       if (DECL_HAS_VTT_PARM_P (fn)\n \t  && ! DECL_NEEDS_VTT_PARM_P (clone))\n \tparmtypes = TREE_CHAIN (parmtypes);\n-       /* If this is subobject constructor or destructor, add the vtt\n-\t parameter.  */\n+      if (ctor_omit_inherited_parms_p)\n+\t{\n+\t  /* If we're omitting inherited parms, that just leaves the VTT.  */\n+\t  gcc_assert (DECL_NEEDS_VTT_PARM_P (clone));\n+\t  parmtypes = tree_cons (NULL_TREE, vtt_parm_type, void_list_node);\n+\t}\n       TREE_TYPE (clone)\n \t= build_method_type_directly (basetype,\n \t\t\t\t      TREE_TYPE (TREE_TYPE (clone)),\n@@ -4818,7 +4832,7 @@ build_clone (tree fn, tree name)\n \n   /* A base constructor inheriting from a virtual base doesn't get the\n      arguments.  */\n-  if (ctor_omit_inherited_parms (clone))\n+  if (ctor_omit_inherited_parms_p)\n     DECL_CHAIN (DECL_CHAIN (DECL_ARGUMENTS (clone))) = NULL_TREE;\n \n   for (parms = DECL_ARGUMENTS (clone); parms; parms = DECL_CHAIN (parms))\n@@ -4965,6 +4979,13 @@ adjust_clone_args (tree decl)\n \t   decl_parms = TREE_CHAIN (decl_parms),\n \t     clone_parms = TREE_CHAIN (clone_parms))\n \t{\n+\t  if (clone_parms == void_list_node)\n+\t    {\n+\t      gcc_assert (decl_parms == clone_parms\n+\t\t\t  || ctor_omit_inherited_parms (clone));\n+\t      break;\n+\t    }\n+\n \t  gcc_assert (same_type_p (TREE_TYPE (decl_parms),\n \t\t\t\t   TREE_TYPE (clone_parms)));\n \n@@ -4999,7 +5020,7 @@ adjust_clone_args (tree decl)\n \t      break;\n \t    }\n \t}\n-      gcc_assert (!clone_parms);\n+      gcc_assert (!clone_parms || clone_parms == void_list_node);\n     }\n }\n "}, {"sha": "8b30f42b2f983392982bc1e027777dec56ab69b6", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "patch": "@@ -2740,6 +2740,10 @@ write_method_parms (tree parm_types, const int method_p, const tree decl)\n \t  parm_types = TREE_CHAIN (parm_types);\n \t  parm_decl = DECL_CHAIN (parm_decl);\n \t}\n+\n+      if (decl && ctor_omit_inherited_parms (decl))\n+\t/* Bring back parameters omitted from an inherited ctor.  */\n+\tparm_types = FUNCTION_FIRST_USER_PARMTYPE (DECL_ORIGIN (decl));\n     }\n \n   for (first_parm_type = parm_types;"}, {"sha": "beb0a24a0b9c27f605074e02131fa7902dd82206", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "patch": "@@ -575,6 +575,9 @@ ctor_omit_inherited_parms (tree fn)\n   if (!DECL_BASE_CONSTRUCTOR_P (fn)\n       || !CLASSTYPE_VBASECLASSES (DECL_CONTEXT (fn)))\n     return false;\n+  if (FUNCTION_FIRST_USER_PARMTYPE (DECL_ORIGIN (fn)) == void_list_node)\n+    /* No user-declared parameters to omit.  */\n+    return false;\n   tree binfo = inherited_ctor_binfo (fn);\n   for (; binfo; binfo = BINFO_INHERITANCE_CHAIN (binfo))\n     if (BINFO_VIRTUAL_P (binfo))"}, {"sha": "fe2c2eb396e1ebb7088210562a50eabe1499e2de", "filename": "gcc/testsuite/g++.dg/cpp1z/inh-ctor23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19e8a45feb6c8cda4bc324e8bd6434ca46033b7c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor23.C?ref=19e8a45feb6c8cda4bc324e8bd6434ca46033b7c", "patch": "@@ -1,6 +1,6 @@\n // Testcase from P0136\n // { dg-do compile { target c++11 } }\n-// { dg-options \"-fnew-inheriting-ctors -fdump-tree-gimple\" }\n+// { dg-options \"-fnew-inheriting-ctors -fdump-tree-gimple -O2 -fno-inline\" }\n \n struct W { W(int); };\n struct V: W { using W::W; };"}]}