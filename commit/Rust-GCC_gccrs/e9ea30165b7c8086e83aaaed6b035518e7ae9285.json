{"sha": "e9ea30165b7c8086e83aaaed6b035518e7ae9285", "node_id": "C_kwDOANBUbNoAKGU5ZWEzMDE2NWI3YzgwODZlODNhYWFlZDZiMDM1NTE4ZTdhZTkyODU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-18T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-18T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "5375594f54843a0513d5b3b7f488f26fc7cd3840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5375594f54843a0513d5b3b7f488f26fc7cd3840"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9ea30165b7c8086e83aaaed6b035518e7ae9285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ea30165b7c8086e83aaaed6b035518e7ae9285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ea30165b7c8086e83aaaed6b035518e7ae9285", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ea30165b7c8086e83aaaed6b035518e7ae9285/comments", "author": null, "committer": null, "parents": [{"sha": "79e210f0c8e1fad875333e93b5ae2fe9b4879b7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79e210f0c8e1fad875333e93b5ae2fe9b4879b7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79e210f0c8e1fad875333e93b5ae2fe9b4879b7a"}], "stats": {"total": 132, "additions": 131, "deletions": 1}, "files": [{"sha": "b3387ad939666381e2655b4fe1dcc07dfe2bd75a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1,3 +1,35 @@\n+2022-03-17  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/86722\n+\tPR tree-optimization/90356\n+\t* config/i386/i386.md (*movtf_internal): Don't guard\n+\tstandard_sse_constant_p clause by optimize_function_for_size_p.\n+\t(*movdf_internal): Likewise.\n+\t(*movsf_internal): Likewise.\n+\n+2022-03-17  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/102943\n+\t* gimple-range-cache.cc (ranger_cache::range_from_dom): Find range via\n+\tdominators and apply intermediary outgoing edge ranges.\n+\n+2022-03-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104960\n+\t* passes.def: Add pass parameter to pass_sink_code, mark\n+\tlast one to unsplit edges.\n+\t* tree-ssa-sink.cc (pass_sink_code::set_pass_param): New.\n+\t(pass_sink_code::execute): Always execute TODO_cleanup_cfg\n+\twhen we need to unsplit edges.\n+\n+2022-03-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/103984\n+\t* gimplify.cc (gimplify_target_expr): Gimplify type sizes and\n+\tTARGET_EXPR_INITIAL into a temporary sequence, then push clobbers\n+\tand asan unpoisioning, then append the temporary sequence and\n+\tfinally the TARGET_EXPR_CLEANUP clobbers.\n+\n 2022-03-16  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* config/i386/sse.md: Delete corrupt character/typo."}, {"sha": "6a816b766ec162d91c6075bf70c9a69427df8114", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1 +1 @@\n-20220317\n+20220318"}, {"sha": "9f6b243b799155e1df3733808d7ea2904052d2d0", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1,3 +1,14 @@\n+2022-03-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* state-purge.cc (state_purge_annotator::add_node_annotations):\n+\tAvoid duplicate before-supernode annotations when returning from\n+\tan interprocedural call.  Show after-supernode annotations.\n+\n+2022-03-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* program-point.cc (program_point::get_next): Fix missing\n+\tincrement of index.\n+\n 2022-03-16  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104955"}, {"sha": "ee5f7bd11ea32736b7570105aa94adf3280cd242", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1,3 +1,36 @@\n+2022-03-17  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\tPR target/86722\n+\tPR tree-optimization/90356\n+\t* gcc.target/i386/pr86722.c: New test case.\n+\t* gcc.target/i386/pr90356.c: New test case.\n+\n+2022-03-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/104960\n+\t* gcc.dg/gimplefe-37.c: Adjust to allow either the true\n+\tor false edge to have a forwarder.\n+\n+2022-03-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/103984\n+\t* g++.dg/opt/pr103984.C: New test.\n+\n+2022-03-17  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc-gomp/nesting-1.c: Enhance.\n+\t* c-c++-common/goacc/kernels-loop-g.c: Likewise.\n+\t* c-c++-common/goacc/nesting-1.c: Likewise.\n+\t* gcc.dg/goacc/nested-function-1.c: Likewise.\n+\t* gfortran.dg/goacc/common-block-3.f90: Likewise.\n+\t* gfortran.dg/goacc/nested-function-1.f90: Likewise.\n+\n+2022-03-17  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/90115\n+\t* c-c++-common/goacc-gomp/nesting-1.c: Enhance.\n+\t* gfortran.dg/goacc/common-block-3.f90: Likewise.\n+\n 2022-03-16  Christophe Lyon  <christophe.lyon@arm.com>\n \t    Roger Sayle  <roger@nextmovesoftware.com>\n "}, {"sha": "645257a3f0ca4cbf252091e09222268ce842917f", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1,3 +1,27 @@\n+2022-03-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/104688\n+\t* Makefile.am (IFUNC_OPTIONS): Change on x86_64 to -mcx16 -mcx16.\n+\t(libatomic_la_LIBADD): Add $(addsuffix _16_2_.lo,$(SIZEOBJS)) for\n+\tx86_64.\n+\t* Makefile.in: Regenerated.\n+\t* config/x86/host-config.h (IFUNC_COND_1): For x86_64 define to\n+\tboth AVX and CMPXCHG16B bits.\n+\t(IFUNC_COND_2): Define.\n+\t(IFUNC_NCOND): For x86_64 define to 2 * (N == 16).\n+\t(MAYBE_HAVE_ATOMIC_CAS_16, MAYBE_HAVE_ATOMIC_EXCHANGE_16,\n+\tMAYBE_HAVE_ATOMIC_LDST_16): Define to IFUNC_COND_2 rather than\n+\tIFUNC_COND_1.\n+\t(HAVE_ATOMIC_CAS_16): Redefine to 1 whenever IFUNC_ALT != 0.\n+\t(HAVE_ATOMIC_LDST_16): Redefine to 1 whenever IFUNC_ALT == 1.\n+\t(atomic_compare_exchange_n): Define whenever IFUNC_ALT != 0\n+\ton x86_64 for N == 16.\n+\t(__atomic_load_n, __atomic_store_n): Redefine whenever IFUNC_ALT == 1\n+\ton x86_64 for N == 16.\n+\t(atomic_load_n, atomic_store_n): New functions.\n+\t* config/x86/init.c (__libat_feat1_init): On x86_64 clear bit_AVX\n+\tif CPU vendor is not Intel.\n+\n 2022-02-03  David Seifert  <soap@gentoo.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "550210343f59b0b3b5a15ece489c69f18e10225b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1,3 +1,16 @@\n+2022-03-17  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c:\n+\tEnhance.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.\n+\n+2022-03-17  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/90115\n+\t* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c: Enhance.\n+\t* testsuite/libgomp.oacc-fortran/if-1.f90: Likewise.\n+\n 2022-03-16  Marcel Vollweiler  <marcel@codesourcery.com>\n \n \t* fortran.c (omp_set_num_teams_8_): Call omp_set_num_teams instead of"}, {"sha": "a768a2e3dc2069575ad2c615a0047ea64ed37cc7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ea30165b7c8086e83aaaed6b035518e7ae9285/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ea30165b7c8086e83aaaed6b035518e7ae9285/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e9ea30165b7c8086e83aaaed6b035518e7ae9285", "patch": "@@ -1,3 +1,20 @@\n+2022-03-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/92546\n+\t* include/bits/fs_path.h (path::make_preferred): Use\n+\thandwritten loop instead of std::replace.\n+\n+2022-03-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR middle-end/104966\n+\t* include/bits/locale_facets_nonio.tcc\n+\t(__moneypunct_cache::_M_cache): Replace try-catch with RAII and\n+\tmake all string copies before any stores to *this.\n+\n+2022-03-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/util/testsuite_character.h: Fix comment.\n+\n 2022-03-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/103407"}]}