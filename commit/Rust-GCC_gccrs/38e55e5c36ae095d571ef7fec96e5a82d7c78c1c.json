{"sha": "38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhlNTVlNWMzNmFlMDk1ZDU3MWVmN2ZlYzk2ZTVhODJkN2M3OGMxYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-06-01T16:49:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-06-01T16:49:47Z"}, "message": "re PR middle-end/57366 (gcc.dg/lto/attr-weakref-1 FAILs)\n\n\tPR middle-end/57366\n\t* cgraphunit.c (compile): When weakref is not supported,\n\tset up transparent aliases before final output pass.\n\t* varasm.c (assemble_alias): Do not try to do it here.\n\nFrom-SVN: r199583", "tree": {"sha": "ac2dce5005e18ed4f36c52a77912850f89152318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac2dce5005e18ed4f36c52a77912850f89152318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/comments", "author": null, "committer": null, "parents": [{"sha": "eb51d2ff187957e2e72fab9729529142b5d87fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb51d2ff187957e2e72fab9729529142b5d87fc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb51d2ff187957e2e72fab9729529142b5d87fc3"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "3df45d8ad9204c839ddc6968321eac4fcc810f7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "patch": "@@ -1,3 +1,10 @@\n+2013-06-01  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/57366\n+\t* cgraphunit.c (compile): When weakref is not supported,\n+\tset up transparent aliases before final output pass.\n+\t* varasm.c (assemble_alias): Do not try to do it here.\n+\n 2013-06-01  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/57467"}, {"sha": "6143e8f3bbb5b7775ed449cda3b7f9f493fbdbaa", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "patch": "@@ -1996,6 +1996,32 @@ compile (void)\n   bitmap_obstack_release (NULL);\n   mark_functions_to_output ();\n \n+  /* When weakref support is missing, we autmatically translate all\n+     references to NODE to references to its ultimate alias target.\n+     The renaming mechanizm uses flag IDENTIFIER_TRANSPARENT_ALIAS and\n+     TREE_CHAIN.\n+\n+     Set up this mapping before we output any assembler but once we are sure\n+     that all symbol renaming is done.\n+\n+     FIXME: All this uglyness can go away if we just do renaming at gimple\n+     level by physically rewritting the IL.  At the moment we can only redirect\n+     calls, so we need infrastructure for renaming references as well.  */\n+#ifndef ASM_OUTPUT_WEAKREF\n+  symtab_node node;\n+\n+  FOR_EACH_SYMBOL (node)\n+    if (node->symbol.alias\n+\t&& lookup_attribute (\"weakref\", DECL_ATTRIBUTES (node->symbol.decl)))\n+      {\n+\tIDENTIFIER_TRANSPARENT_ALIAS\n+\t   (DECL_ASSEMBLER_NAME (node->symbol.decl)) = 1;\n+\tTREE_CHAIN (DECL_ASSEMBLER_NAME (node->symbol.decl))\n+\t   = (node->symbol.alias_target ? node->symbol.alias_target\n+\t      : DECL_ASSEMBLER_NAME (symtab_alias_target (node)->symbol.decl));\n+      }\n+#endif\n+\n   cgraph_state = CGRAPH_STATE_EXPANSION;\n   if (!flag_toplevel_reorder)\n     output_in_order ();"}, {"sha": "5486e1518b14b3cb09d26dd0cd1fd8487e80b879", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e55e5c36ae095d571ef7fec96e5a82d7c78c1c/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=38e55e5c36ae095d571ef7fec96e5a82d7c78c1c", "patch": "@@ -5560,13 +5560,6 @@ assemble_alias (tree decl, tree target)\n \n       if (alias == target)\n \terror (\"weakref %q+D ultimately targets itself\", decl);\n-      else\n-\t{\n-#ifndef ASM_OUTPUT_WEAKREF\n-\t  IDENTIFIER_TRANSPARENT_ALIAS (alias) = 1;\n-\t  TREE_CHAIN (alias) = target;\n-#endif\n-\t}\n       if (TREE_PUBLIC (decl))\n \terror (\"weakref %q+D must have static linkage\", decl);\n     }"}]}