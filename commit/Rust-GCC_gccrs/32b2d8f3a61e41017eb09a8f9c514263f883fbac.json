{"sha": "32b2d8f3a61e41017eb09a8f9c514263f883fbac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJiMmQ4ZjNhNjFlNDEwMTdlYjA5YThmOWM1MTQyNjNmODgzZmJhYw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2012-08-18T08:24:06Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2012-08-18T08:24:06Z"}, "message": "alloc-pool.c (pool_alloc): Add valgrind markers.\n\n2012-08-18  Andrew Pinski  <pinskia@gmail.com>\n\n\t* alloc-pool.c (pool_alloc): Add valgrind markers.\n\t(pool_free): Likewise.\n\nFrom-SVN: r190501", "tree": {"sha": "e04ad9162a9fa641ba99df05d021f7a580cdca1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e04ad9162a9fa641ba99df05d021f7a580cdca1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32b2d8f3a61e41017eb09a8f9c514263f883fbac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32b2d8f3a61e41017eb09a8f9c514263f883fbac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32b2d8f3a61e41017eb09a8f9c514263f883fbac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32b2d8f3a61e41017eb09a8f9c514263f883fbac/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5719a04fa5749343bde9718596e72b9dcb61aca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5719a04fa5749343bde9718596e72b9dcb61aca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5719a04fa5749343bde9718596e72b9dcb61aca"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "96003073cd7e6a669797f3b21e92e03794584764", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b2d8f3a61e41017eb09a8f9c514263f883fbac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b2d8f3a61e41017eb09a8f9c514263f883fbac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32b2d8f3a61e41017eb09a8f9c514263f883fbac", "patch": "@@ -1,3 +1,8 @@\n+2012-08-18  Andrew Pinski  <pinskia@gmail.com>\n+\n+\t* alloc-pool.c (pool_alloc): Add valgrind markers.\n+\t(pool_free): Likewise.\n+\n 2012-08-17  Walter Lee  <walt@tilera.com>\n \n \t* config/tilegx/feedback.h (FEEDBACK_ENTER_EXPLICIT): Define."}, {"sha": "9a588089e776bdd51415018cd966060d53d0f67b", "filename": "gcc/alloc-pool.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32b2d8f3a61e41017eb09a8f9c514263f883fbac/gcc%2Falloc-pool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32b2d8f3a61e41017eb09a8f9c514263f883fbac/gcc%2Falloc-pool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falloc-pool.c?ref=32b2d8f3a61e41017eb09a8f9c514263f883fbac", "patch": "@@ -247,6 +247,7 @@ void *\n pool_alloc (alloc_pool pool)\n {\n   alloc_pool_list header;\n+  VALGRIND_DISCARD (int size);\n \n   if (GATHER_STATISTICS)\n     {\n@@ -259,6 +260,7 @@ pool_alloc (alloc_pool pool)\n     }\n \n   gcc_checking_assert (pool);\n+  VALGRIND_DISCARD (size = pool->elt_size - offsetof (allocation_object, u.data));\n \n   /* If there are no more free elements, make some more!.  */\n   if (!pool->returned_free_list)\n@@ -298,6 +300,7 @@ pool_alloc (alloc_pool pool)\n       /* Mark the element to be free.  */\n       ((allocation_object *) block)->id = 0;\n #endif\n+      VALGRIND_DISCARD (VALGRIND_MAKE_MEM_NOACCESS (header,size));\n       pool->returned_free_list = header;\n       pool->virgin_free_list += pool->elt_size;\n       pool->virgin_elts_remaining--;\n@@ -306,13 +309,15 @@ pool_alloc (alloc_pool pool)\n \n   /* Pull the first free element from the free list, and return it.  */\n   header = pool->returned_free_list;\n+  VALGRIND_DISCARD (VALGRIND_MAKE_MEM_DEFINED (header, sizeof(*header)));\n   pool->returned_free_list = header->next;\n   pool->elts_free--;\n \n #ifdef ENABLE_CHECKING\n   /* Set the ID for element.  */\n   ALLOCATION_OBJECT_PTR_FROM_USER_PTR (header)->id = pool->id;\n #endif\n+  VALGRIND_DISCARD (VALGRIND_MAKE_MEM_UNDEFINED (header, size));\n \n   return ((void *) header);\n }\n@@ -322,6 +327,10 @@ void\n pool_free (alloc_pool pool, void *ptr)\n {\n   alloc_pool_list header;\n+#if defined(ENABLE_VALGRIND_CHECKING) || defined(ENABLE_CHECKING)\n+  int size;\n+  size = pool->elt_size - offsetof (allocation_object, u.data);\n+#endif\n \n #ifdef ENABLE_CHECKING\n   gcc_assert (ptr\n@@ -330,7 +339,7 @@ pool_free (alloc_pool pool, void *ptr)\n \t      /* Check whether the PTR was allocated from POOL.  */\n \t      && pool->id == ALLOCATION_OBJECT_PTR_FROM_USER_PTR (ptr)->id);\n \n-  memset (ptr, 0xaf, pool->elt_size - offsetof (allocation_object, u.data));\n+  memset (ptr, 0xaf, size);\n \n   /* Mark the element to be free.  */\n   ALLOCATION_OBJECT_PTR_FROM_USER_PTR (ptr)->id = 0;\n@@ -339,6 +348,7 @@ pool_free (alloc_pool pool, void *ptr)\n   header = (alloc_pool_list) ptr;\n   header->next = pool->returned_free_list;\n   pool->returned_free_list = header;\n+  VALGRIND_DISCARD (VALGRIND_MAKE_MEM_NOACCESS (ptr, size));\n   pool->elts_free++;\n \n   if (GATHER_STATISTICS)"}]}