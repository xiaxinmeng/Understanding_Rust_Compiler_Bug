{"sha": "c9df623a129fb2423546ec5ab3208b846be83d93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlkZjYyM2ExMjlmYjI0MjM1NDZlYzVhYjMyMDhiODQ2YmU4M2Q5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:59:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:59:41Z"}, "message": "[multiple changes]\n\n2009-11-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* osint.adb: Minor reformatting\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.ads, makeutl.adb (Base_Name_Index_For): New function to get\n\tthe base name of a main without the extension, with an eventual source\n\tindex.\n\t(Mains.Get_Index): New procedure to set the source index of a main\n\t(Mains.Get_Index): New function to get the source index of a main\n\t* prj-attr.adb: New attributes Config_Body_File_Name_Index,\n\tConfig_Spec_File_Name_Index, Multi_Unit_Object_Separator and\n\tMulti_Unit_Switches.\n\t* prj-nmsc.adb (Process_Compiler): Takle into account new attributes\n\tConfig_Body_File_Name_Index, Config_Spec_File_Name_Index,\n\tMulti_Unit_Object_Separator and Multi_Unit_Switches.\n\tAllow only one character for Multi_Unit_Object_Separator.\n\t* prj-proc.adb (Process_Declarative_Items): Take into account the\n\tsource indexes in indexes of associative array attribute declarations.\n\t* prj.adb (Object_Name): New function to get the object file name for\n\tunits in multi-unit sources.\n\t* prj.ads (Language_Config): New components Multi_Unit_Switches,\n\tMulti_Unit_Object_Separator Config_Body_Index and Config_Spec_Index.\n\t(Object_Name): New function to get the object file name for units in\n\tmulti-unit sources.\n\t* snames.ads-tmpl: New standard names Config_Body_File_Name_Index,\n\tConfig_Spec_File_Name_Index, Multi_Unit_Object_Separator and\n\tMulti_Unit_Switches.\n\nFrom-SVN: r154782", "tree": {"sha": "ae963440f1ba67f2811fa3dcc4a41d01b5bdf34e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae963440f1ba67f2811fa3dcc4a41d01b5bdf34e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9df623a129fb2423546ec5ab3208b846be83d93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9df623a129fb2423546ec5ab3208b846be83d93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9df623a129fb2423546ec5ab3208b846be83d93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9df623a129fb2423546ec5ab3208b846be83d93/comments", "author": null, "committer": null, "parents": [{"sha": "a8fc928da333e8deb08fe0b2f8396acc63040694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8fc928da333e8deb08fe0b2f8396acc63040694", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8fc928da333e8deb08fe0b2f8396acc63040694"}], "stats": {"total": 256, "additions": 239, "deletions": 17}, "files": [{"sha": "39eea9813ece3c814456fc4e85c0264f85192a58", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -1,3 +1,33 @@\n+2009-11-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* osint.adb: Minor reformatting\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.ads, makeutl.adb (Base_Name_Index_For): New function to get\n+\tthe base name of a main without the extension, with an eventual source\n+\tindex.\n+\t(Mains.Get_Index): New procedure to set the source index of a main\n+\t(Mains.Get_Index): New function to get the source index of a main\n+\t* prj-attr.adb: New attributes Config_Body_File_Name_Index,\n+\tConfig_Spec_File_Name_Index, Multi_Unit_Object_Separator and\n+\tMulti_Unit_Switches.\n+\t* prj-nmsc.adb (Process_Compiler): Takle into account new attributes\n+\tConfig_Body_File_Name_Index, Config_Spec_File_Name_Index,\n+\tMulti_Unit_Object_Separator and Multi_Unit_Switches.\n+\tAllow only one character for Multi_Unit_Object_Separator.\n+\t* prj-proc.adb (Process_Declarative_Items): Take into account the\n+\tsource indexes in indexes of associative array attribute declarations.\n+\t* prj.adb (Object_Name): New function to get the object file name for\n+\tunits in multi-unit sources.\n+\t* prj.ads (Language_Config): New components Multi_Unit_Switches,\n+\tMulti_Unit_Object_Separator Config_Body_Index and Config_Spec_Index.\n+\t(Object_Name): New function to get the object file name for units in\n+\tmulti-unit sources.\n+\t* snames.ads-tmpl: New standard names Config_Body_File_Name_Index,\n+\tConfig_Spec_File_Name_Index, Multi_Unit_Object_Separator and\n+\tMulti_Unit_Switches.\n+\n 2009-11-30  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-tassta.adb: Update comment."}, {"sha": "4b579f1e73be994af803fb1731b6763445d44287", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -157,6 +157,45 @@ package body Makeutl is\n       end if;\n    end Add_Linker_Option;\n \n+   -------------------------\n+   -- Base_Name_Index_For --\n+   -------------------------\n+\n+   function Base_Name_Index_For\n+     (Main            : String;\n+      Main_Index      : Int;\n+      Index_Separator : Character) return File_Name_Type\n+   is\n+      Result : File_Name_Type;\n+   begin\n+      Name_Len := 0;\n+      Add_Str_To_Name_Buffer (Base_Name (Main));\n+\n+      --  Remove the extension, if any, that is the last part of the base\n+      --  name starting with a dot and following some characters.\n+\n+      for J in reverse 2 .. Name_Len loop\n+         if Name_Buffer (J) = '.' then\n+            Name_Len := J - 1;\n+            exit;\n+         end if;\n+      end loop;\n+\n+      --  Add the index info, if index is different from 0\n+\n+      if Main_Index > 0 then\n+         Add_Char_To_Name_Buffer (Index_Separator);\n+\n+         declare\n+            Img : constant String := Main_Index'Img;\n+         begin\n+            Add_Str_To_Name_Buffer (Img (2 .. Img'Last));\n+         end;\n+      end if;\n+      Result := Name_Find;\n+      return Result;\n+   end Base_Name_Index_For;\n+\n    ------------------------------\n    -- Check_Source_Info_In_ALI --\n    ------------------------------\n@@ -599,6 +638,7 @@ package body Makeutl is\n \n       type File_And_Loc is record\n          File_Name : File_Name_Type;\n+         Index     : Int := 0;\n          Location  : Source_Ptr := No_Location;\n       end record;\n \n@@ -623,7 +663,7 @@ package body Makeutl is\n          Name_Len := 0;\n          Add_Str_To_Name_Buffer (Name);\n          Names.Increment_Last;\n-         Names.Table (Names.Last) := (Name_Find, No_Location);\n+         Names.Table (Names.Last) := (Name_Find, 0, No_Location);\n       end Add_Main;\n \n       ------------\n@@ -636,6 +676,19 @@ package body Makeutl is\n          Mains.Reset;\n       end Delete;\n \n+      ---------------\n+      -- Get_Index --\n+      ---------------\n+\n+      function Get_Index return Int is\n+      begin\n+         if Current in Names.First .. Names.Last then\n+            return Names.Table (Current).Index;\n+         else\n+            return 0;\n+         end if;\n+      end Get_Index;\n+\n       ------------------\n       -- Get_Location --\n       ------------------\n@@ -681,6 +734,17 @@ package body Makeutl is\n          Current := 0;\n       end Reset;\n \n+      ---------------\n+      -- Set_Index --\n+      ---------------\n+\n+      procedure Set_Index (Index : Int) is\n+      begin\n+         if Names.Last > 0 then\n+            Names.Table (Names.Last).Index := Index;\n+         end if;\n+      end Set_Index;\n+\n       ------------------\n       -- Set_Location --\n       ------------------"}, {"sha": "915c00afcf1619914b47ecb5142b195a9384e066", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -60,7 +60,14 @@ package Makeutl is\n    function Create_Name (Name : String) return File_Name_Type;\n    function Create_Name (Name : String) return Name_Id;\n    function Create_Name (Name : String) return Path_Name_Type;\n-   --  Get the Name_Id of a name\n+   --  Get an id for a name\n+\n+   function Base_Name_Index_For\n+     (Main            : String;\n+      Main_Index      : Int;\n+      Index_Separator : Character) return File_Name_Type;\n+   --  Returns the base name of Main, without the extension, plus the\n+   --  Index_Separator followed by the Main_Index, if Main_Index is not 0.\n \n    function Executable_Prefix_Path return String;\n    --  Return the absolute path parent directory of the directory where the\n@@ -143,6 +150,8 @@ package Makeutl is\n       procedure Add_Main (Name : String);\n       --  Add one main to the table\n \n+      procedure Set_Index (Index : Int);\n+\n       procedure Set_Location (Location : Source_Ptr);\n       --  Set the location of the last main added. By default, the location is\n       --  No_Location.\n@@ -157,6 +166,8 @@ package Makeutl is\n       --  Increase the index and return the next main. If table is exhausted,\n       --  return an empty string.\n \n+      function Get_Index return Int;\n+\n       function Get_Location return Source_Ptr;\n       --  Get the location of the current main\n "}, {"sha": "57df5ea59b0c8ef35504c270b1100fe2eef44ae8", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -138,7 +138,7 @@ package body Osint is\n       Path_Len  : Integer) return String_Access;\n    --  Converts a C String to an Ada String. Are we doing this to avoid withing\n    --  Interfaces.C.Strings ???\n-   --  Caller must free result\n+   --  Caller must free result.\n \n    function Include_Dir_Default_Prefix return String_Access;\n    --  Same as exported version, except returns a String_Access"}, {"sha": "ebb19503663c841618375cb80f936c51cb038669", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -179,6 +179,8 @@ package body Prj.Attr is\n    \"Sapath_syntax#\" &\n    \"Saobject_file_suffix#\" &\n    \"Laobject_file_switches#\" &\n+   \"Lamulti_unit_switches#\" &\n+   \"Samulti_unit_object_separator#\" &\n \n    --  Configuration - Mapping files\n \n@@ -190,8 +192,10 @@ package body Prj.Attr is\n \n    \"Laconfig_file_switches#\" &\n    \"Saconfig_body_file_name#\" &\n-   \"Saconfig_spec_file_name#\" &\n+   \"Saconfig_body_file_name_index#\" &\n    \"Saconfig_body_file_name_pattern#\" &\n+   \"Saconfig_spec_file_name#\" &\n+   \"Saconfig_spec_file_name_index#\" &\n    \"Saconfig_spec_file_name_pattern#\" &\n    \"Saconfig_file_unique#\" &\n "}, {"sha": "e3d84d3f522f040de214473cc8a49ee23c1581d2", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -1431,6 +1431,34 @@ package body Prj.Nmsc is\n                                 From_List => Element.Value.Values,\n                                 In_Tree   => Data.Tree);\n \n+                        when Name_Multi_Unit_Switches =>\n+                           Put (Into_List =>\n+                                  Lang_Index.Config.Multi_Unit_Switches,\n+                                From_List => Element.Value.Values,\n+                                In_Tree   => Data.Tree);\n+\n+                        when Name_Multi_Unit_Object_Separator =>\n+                           Get_Name_String (Element.Value.Value);\n+\n+                           if Name_Len /= 1 then\n+                              Error_Msg\n+                                (Data.Flags,\n+                                 \"multi-unit object separator must have \" &\n+                                 \"a single character\",\n+                                 Element.Value.Location, Project);\n+\n+                           elsif Name_Buffer (1) = ' ' then\n+                              Error_Msg\n+                                (Data.Flags,\n+                                 \"multi-unit object separator cannot be \" &\n+                                 \"a space\",\n+                                 Element.Value.Location, Project);\n+\n+                           else\n+                              Lang_Index.Config.Multi_Unit_Object_Separator :=\n+                                Name_Buffer (1);\n+                           end if;\n+\n                         when Name_Path_Syntax =>\n                            begin\n                               Lang_Index.Config.Path_Syntax :=\n@@ -1552,10 +1580,18 @@ package body Prj.Nmsc is\n                            Lang_Index.Config.Config_Body :=\n                              Element.Value.Value;\n \n+                        when Name_Config_Body_File_Name_Index =>\n+\n+                           --  Attribute Config_Body_File_Name_Index\n+                           --     ( < Language > )\n+\n+                           Lang_Index.Config.Config_Body_Index :=\n+                             Element.Value.Value;\n+\n                         when Name_Config_Body_File_Name_Pattern =>\n \n                            --  Attribute Config_Body_File_Name_Pattern\n-                           --  (<language>)\n+                           --    (<language>)\n \n                            Lang_Index.Config.Config_Body_Pattern :=\n                              Element.Value.Value;\n@@ -1567,10 +1603,18 @@ package body Prj.Nmsc is\n                            Lang_Index.Config.Config_Spec :=\n                              Element.Value.Value;\n \n+                        when Name_Config_Spec_File_Name_Index =>\n+\n+                           --  Attribute Config_Spec_File_Name_Index\n+                           --    ( < Language > )\n+\n+                           Lang_Index.Config.Config_Spec_Index :=\n+                             Element.Value.Value;\n+\n                         when Name_Config_Spec_File_Name_Pattern =>\n \n                            --  Attribute Config_Spec_File_Name_Pattern\n-                           --  (<language>)\n+                           --    (<language>)\n \n                            Lang_Index.Config.Config_Spec_Pattern :=\n                              Element.Value.Value;"}, {"sha": "9dde01b143789d4ffff7350340fb9e52b06c6e91", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -1871,6 +1871,9 @@ package body Prj.Proc is\n                            Index_Name : Name_Id :=\n                              Associative_Array_Index_Of\n                                (Current_Item, From_Project_Node_Tree);\n+                           Source_Index : constant Int :=\n+                             Source_Index_Of\n+                               (Current_Item, From_Project_Node_Tree);\n                            The_Array : Array_Id;\n                            The_Array_Element : Array_Element_Id :=\n                                                  No_Array_Element;\n@@ -1943,12 +1946,15 @@ package body Prj.Proc is\n                            end if;\n \n                            --  Look in the list, if any, to find an element\n-                           --  with the same index.\n+                           --  with the same index and same source index.\n \n                            while The_Array_Element /= No_Array_Element\n                              and then\n-                               In_Tree.Array_Elements.Table\n+                               (In_Tree.Array_Elements.Table\n                                  (The_Array_Element).Index /= Index_Name\n+                                or else\n+                                In_Tree.Array_Elements.Table\n+                                 (The_Array_Element).Src_Index /= Source_Index)\n                            loop\n                               The_Array_Element :=\n                                 In_Tree.Array_Elements.Table\n@@ -1968,9 +1974,7 @@ package body Prj.Proc is\n                               In_Tree.Array_Elements.Table\n                                 (The_Array_Element) :=\n                                   (Index  => Index_Name,\n-                                   Src_Index =>\n-                                     Source_Index_Of\n-                                       (Current_Item, From_Project_Node_Tree),\n+                                   Src_Index => Source_Index,\n                                    Index_Case_Sensitive =>\n                                      not Case_Insensitive\n                                        (Current_Item, From_Project_Node_Tree),"}, {"sha": "ff484f5eec2ac33fef2c22735a35590f4328bb5a", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -679,6 +679,39 @@ package body Prj is\n       end if;\n    end Object_Name;\n \n+   function Object_Name\n+     (Source_File_Name   : File_Name_Type;\n+      Source_Index       : Int;\n+      Index_Separator    : Character;\n+      Object_File_Suffix : Name_Id := No_Name) return File_Name_Type\n+   is\n+      Index_Img : constant String := Source_Index'Img;\n+      Last      : Natural;\n+   begin\n+      Get_Name_String (Source_File_Name);\n+      Last := Name_Len;\n+\n+      while Last > 1 and then Name_Buffer (Last) /= '.' loop\n+         Last := Last - 1;\n+      end loop;\n+\n+      if Last > 1 then\n+         Name_Len := Last - 1;\n+      end if;\n+\n+      Add_Char_To_Name_Buffer (Index_Separator);\n+      Add_Str_To_Name_Buffer (Index_Img (2 .. Index_Img'Last));\n+\n+      if Object_File_Suffix = No_Name then\n+         Add_Str_To_Name_Buffer (Object_Suffix);\n+\n+      else\n+         Add_Str_To_Name_Buffer (Get_Name_String (Object_File_Suffix));\n+      end if;\n+\n+      return Name_Find;\n+   end Object_Name;\n+\n    ----------------------\n    -- Record_Temp_File --\n    ----------------------"}, {"sha": "0a27372c5d8cbb1479ec07268178d7f87a484aa1", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -160,7 +160,7 @@ package Prj is\n       end case;\n    end record;\n    --  Values for variables and array elements. Default is True if the\n-   --  current value is the default one for the variable\n+   --  current value is the default one for the variable.\n \n    Nil_Variable_Value : constant Variable_Value;\n    --  Value of a non existing variable or array element\n@@ -278,8 +278,8 @@ package Prj is\n    function Hash (Name : Name_Id)        return Header_Num;\n    function Hash (Name : File_Name_Type) return Header_Num;\n    function Hash (Name : Path_Name_Type) return Header_Num;\n-   function Hash (Project : Project_Id) return Header_Num;\n-   --  Used for computing hash values for names put into above hash table\n+   function Hash (Project : Project_Id)  return Header_Num;\n+   --  Used for computing hash values for names put into hash tables\n \n    type Language_Kind is (File_Based, Unit_Based);\n    --  Type for the kind of language. All languages are file based, except Ada\n@@ -433,6 +433,14 @@ package Prj is\n       --  The list of final switches that are required as a minimum to invoke\n       --  the compiler driver.\n \n+      Multi_Unit_Switches                 : Name_List_Index := No_Name_List;\n+      --  The switch(es) to indicate the index of a unit in a multi-source\n+      --  file.\n+\n+      Multi_Unit_Object_Separator         : Character         := ' ';\n+      --  The string separating the base name of a source from the index of\n+      --  the unit in a multi-source file, in the object file name.\n+\n       Path_Syntax                  : Path_Syntax_Kind := Host;\n       --  Value may be Canonical (Unix style) or Host (host syntax, for example\n       --  on VMS for DEC C).\n@@ -515,14 +523,22 @@ package Prj is\n       --  The template for a pragma Source_File_Name(_Project) for a specific\n       --  file name of a body.\n \n-      Config_Spec           : Name_Id         := No_Name;\n+      Config_Body_Index          : Name_Id         := No_Name;\n       --  The template for a pragma Source_File_Name(_Project) for a specific\n-      --  file name of a spec.\n+      --  file name of a body in a multi-source file.\n \n       Config_Body_Pattern   : Name_Id         := No_Name;\n       --  The template for a pragma Source_File_Name(_Project) for a naming\n       --  body pattern.\n \n+      Config_Spec           : Name_Id         := No_Name;\n+      --  The template for a pragma Source_File_Name(_Project) for a specific\n+      --  file name of a spec.\n+\n+      Config_Spec_Index      : Name_Id         := No_Name;\n+      --  The template for a pragma Source_File_Name(_Project) for a specific\n+      --  file name of a spec in a multi-source file.\n+\n       Config_Spec_Pattern   : Name_Id         := No_Name;\n       --  The template for a pragma Source_File_Name(_Project) for a naming\n       --  spec pattern.\n@@ -561,6 +577,8 @@ package Prj is\n                            Compiler_Driver_Path         => null,\n                            Compiler_Leading_Required_Switches  => No_Name_List,\n                            Compiler_Trailing_Required_Switches => No_Name_List,\n+                           Multi_Unit_Switches          => No_Name_List,\n+                           Multi_Unit_Object_Separator  => ' ',\n                            Path_Syntax                  => Canonical,\n                            Object_File_Suffix           => No_Name,\n                            Object_File_Switches         => No_Name_List,\n@@ -582,8 +600,10 @@ package Prj is\n                            Objects_Path                 => No_Name,\n                            Objects_Path_File            => No_Name,\n                            Config_Body                  => No_Name,\n-                           Config_Spec                  => No_Name,\n+                           Config_Body_Index            => No_Name,\n                            Config_Body_Pattern          => No_Name,\n+                           Config_Spec                  => No_Name,\n+                           Config_Spec_Index            => No_Name,\n                            Config_Spec_Pattern          => No_Name,\n                            Config_File_Unique           => False,\n                            Binder_Driver                => No_File,\n@@ -1362,6 +1382,14 @@ package Prj is\n       Object_File_Suffix : Name_Id := No_Name) return File_Name_Type;\n    --  Returns the object file name corresponding to a source file name\n \n+   function Object_Name\n+     (Source_File_Name   : File_Name_Type;\n+      Source_Index       : Int;\n+      Index_Separator    : Character;\n+      Object_File_Suffix : Name_Id := No_Name) return File_Name_Type;\n+   --  Returns the object file name corresponding to a unit in a multi-source\n+   --  file.\n+\n    function Dependency_Name\n      (Source_File_Name : File_Name_Type;\n       Dependency       : Dependency_File_Kind) return File_Name_Type;"}, {"sha": "05c7e4224524ba4219b8e7e10182548d808bc24c", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9df623a129fb2423546ec5ab3208b846be83d93/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c9df623a129fb2423546ec5ab3208b846be83d93", "patch": "@@ -1033,10 +1033,12 @@ package Snames is\n    Name_Compiler                         : constant Name_Id := N + $;\n    Name_Compiler_Command                 : constant Name_Id := N + $; --  GPR\n    Name_Config_Body_File_Name            : constant Name_Id := N + $;\n+   Name_Config_Body_File_Name_Index      : constant Name_Id := N + $;\n    Name_Config_Body_File_Name_Pattern    : constant Name_Id := N + $;\n    Name_Config_File_Switches             : constant Name_Id := N + $;\n    Name_Config_File_Unique               : constant Name_Id := N + $;\n    Name_Config_Spec_File_Name            : constant Name_Id := N + $;\n+   Name_Config_Spec_File_Name_Index      : constant Name_Id := N + $;\n    Name_Config_Spec_File_Name_Pattern    : constant Name_Id := N + $;\n    Name_Configuration                    : constant Name_Id := N + $;\n    Name_Cross_Reference                  : constant Name_Id := N + $;\n@@ -1103,6 +1105,8 @@ package Snames is\n    Name_Mapping_Body_Suffix              : constant Name_Id := N + $;\n    Name_Max_Command_Line_Length          : constant Name_Id := N + $;\n    Name_Metrics                          : constant Name_Id := N + $;\n+   Name_Multi_Unit_Object_Separator      : constant Name_Id := N + $;\n+   Name_Multi_Unit_Switches              : constant Name_Id := N + $;\n    Name_Naming                           : constant Name_Id := N + $;\n    Name_None                             : constant Name_Id := N + $;\n    Name_Object_File_Suffix               : constant Name_Id := N + $;"}]}