{"sha": "651a79532c8e87ac096419d9852a295f9e284fe4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxYTc5NTMyYzhlODdhYzA5NjQxOWQ5ODUyYTI5NWY5ZTI4NGZlNA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2018-07-23T16:16:41Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2018-07-23T16:16:41Z"}, "message": "re PR target/86591 (gcc.target/powerpc/builtins-1.c fails starting with r261904)\n\ngcc/testsuite/ChangeLog:\n\n2018-07-23  Carl Love  <cel@us.ibm.com>\n\n\tPR 86591\n\t* gcc.target/powerpc/altivec-1-runnable.c: Move vector double tests to\n\tfile altivec-2-runnable.c.\n\t* gcc.target/powerpc/altivec-2-runnable.c: Add vector double tests.\n\t* gcc.target/powerpc/buitlins-1.c: Remove dg-final check for xxlor.\n\tUpdate dg-final test for __divdi3 and __udivdi3 instructions. Update\n\tcomments for instruction generated by vec_mergeh, vec_perm, vec_round,\n\tvec_cts, vec_ctu, vec_cpsgn tests.\n\nFrom-SVN: r262934", "tree": {"sha": "f92bdcf22dd8624d33ca0d1ae0be9ad32c186cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f92bdcf22dd8624d33ca0d1ae0be9ad32c186cd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/651a79532c8e87ac096419d9852a295f9e284fe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651a79532c8e87ac096419d9852a295f9e284fe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651a79532c8e87ac096419d9852a295f9e284fe4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651a79532c8e87ac096419d9852a295f9e284fe4/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1544db9a61b6a441be68c5a6ba2504a6ccc2b956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1544db9a61b6a441be68c5a6ba2504a6ccc2b956", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1544db9a61b6a441be68c5a6ba2504a6ccc2b956"}], "stats": {"total": 133, "additions": 70, "deletions": 63}, "files": [{"sha": "382574e8588c9ca78b99e5c5ebcdd6ff85301486", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=651a79532c8e87ac096419d9852a295f9e284fe4", "patch": "@@ -1,3 +1,14 @@\n+2018-07-23  Carl Love  <cel@us.ibm.com>\n+\n+\tPR 86591\n+\t* gcc.target/powerpc/altivec-1-runnable.c: Move vector double tests to\n+\tfile altivec-2-runnable.c.\n+\t* gcc.target/powerpc/altivec-2-runnable.c: Add vector double tests.\n+\t* gcc.target/powerpc/buitlins-1.c: Remove dg-final check for xxlor.\n+\tUpdate dg-final test for __divdi3 and __udivdi3 instructions. Update\n+\tcomments for instruction generated by vec_mergeh, vec_perm, vec_round,\n+\tvec_cts, vec_ctu, vec_cpsgn tests.\n+\n 2018-07-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c/86617"}, {"sha": "da8ebbc30bae4feef7c59ddcdb769df96859685f", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-1-runnable.c", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-1-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-1-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-1-runnable.c?ref=651a79532c8e87ac096419d9852a295f9e284fe4", "patch": "@@ -31,16 +31,9 @@ int main ()\n   vector signed int vec_si_result, vec_si_expected;\n   vector signed char vec_sc_arg;\n   vector signed char vec_sc_result, vec_sc_expected;\n-  vector float vec_float_arg;\n-  vector double vec_double_result, vec_double_expected;\n   vector pixel vec_pixel_arg;\n   vector unsigned int vec_ui_result, vec_ui_expected;\n \n-  union conv {\n-\t  double d;\n-\t  unsigned long long l;\n-  } conv_exp, conv_val;\n-\n   vec_bs_arg = (vector bool short){ 0, 101, 202, 303,\n \t\t\t\t    404, 505, 606, 707 };\n   vec_bi_expected = (vector bool int){ 0, 101, 202, 303 };\n@@ -209,49 +202,6 @@ int main ()\n        abort();\n #endif\n   }\n-  \n-\n-  vec_float_arg = (vector float){ 0.0, 1.5, 2.5, 3.5 };\n-\n-  vec_double_expected = (vector double){ 0.0, 1.5 };\n-\n-  vec_double_result = vec_unpackh (vec_float_arg);\n-\n-  for (i = 0; i < 2; i++) {\n-    if (vec_double_expected[i] != vec_double_result[i])\n-      {\n-#if DEBUG\n-\t printf(\"ERROR: vec_unpackh(), vec_double_expected[%d] = %f does not match vec_double_result[%d] = %f\\n\",\n-\t\ti, vec_double_expected[i], i, vec_double_result[i]);\n-\t conv_val.d = vec_double_result[i];\n-\t conv_exp.d = vec_double_expected[i];\n-\t printf(\"     vec_unpackh(), vec_double_expected[%d] = 0x%llx does not match vec_double_result[%d] = 0x%llx\\n\",\n-\t\ti, conv_exp.l, i,conv_val.l);\n-#else\n-\t abort();\n-#endif\n-    }\n-  }\n-\n-  vec_double_expected = (vector double){ 2.5, 3.5 };\n-\n-  vec_double_result = vec_unpackl (vec_float_arg);\n-\n-  for (i = 0; i < 2; i++) {\n-    if (vec_double_expected[i] != vec_double_result[i])\n-      {\n-#if DEBUG\n-         printf(\"ERROR: vec_unpackl() vec_double_expected[%d] = %f does not match vec_double_result[%d] = %f\\n\",\n-\t\ti, vec_double_expected[i], i, vec_double_result[i]);\n-\t conv_val.d = vec_double_result[i];\n-\t conv_exp.d = vec_double_expected[i];\n-\t printf(\"     vec_unpackh(), vec_double_expected[%d] = 0x%llx does not match vec_double_result[%d] = 0x%llx\\n\",\n-\t\ti, conv_exp.l, i,conv_val.l);\n-#else\n-         abort();\n-#endif\n-      }\n-  }\n \n   return 0;\n }"}, {"sha": "041edcb213db5c0f44d12bb0c6da7a474696211f", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-2-runnable.c", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-2-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-2-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-2-runnable.c?ref=651a79532c8e87ac096419d9852a295f9e284fe4", "patch": "@@ -23,8 +23,15 @@ int main ()\n \n   vector signed int vec_si_arg;\n   vector signed long long int vec_slli_result, vec_slli_expected;\n+  vector float vec_float_arg;\n+  vector double vec_double_result, vec_double_expected;\n \n-  /*  use of \u2018long long\u2019 in AltiVec types requires -mvsx */\n+  union conv {\n+\t  double d;\n+\t  unsigned long long l;\n+  } conv_exp, conv_val;\n+\n+  /* Use of 'double' and \u2018long long\u2019 in AltiVec types requires -mvsx */\n   /* __builtin_altivec_vupkhsw and __builtin_altivec_vupklsw\n      requires the -mpower8-vector option */\n \n@@ -88,7 +95,47 @@ int main ()\n #endif\n   }\n \n+  vec_float_arg = (vector float){ 0.0, 1.5, 2.5, 3.5 };\n+\n+  vec_double_expected = (vector double){ 0.0, 1.5 };\n+\n+  vec_double_result = vec_unpackh (vec_float_arg);\n+\n+  for (i = 0; i < 2; i++) {\n+    if (vec_double_expected[i] != vec_double_result[i])\n+      {\n+#if DEBUG\n+\t printf(\"ERROR: vec_unpackh(), vec_double_expected[%d] = %f does not match vec_double_result[%d] = %f\\n\",\n+\t\ti, vec_double_expected[i], i, vec_double_result[i]);\n+\t conv_val.d = vec_double_result[i];\n+\t conv_exp.d = vec_double_expected[i];\n+\t printf(\"     vec_unpackh(), vec_double_expected[%d] = 0x%llx does not match vec_double_result[%d] = 0x%llx\\n\",\n+\t\ti, conv_exp.l, i,conv_val.l);\n+#else\n+\t abort();\n+#endif\n+    }\n+  }\n+\n+  vec_double_expected = (vector double){ 2.5, 3.5 };\n \n+  vec_double_result = vec_unpackl (vec_float_arg);\n+\n+  for (i = 0; i < 2; i++) {\n+    if (vec_double_expected[i] != vec_double_result[i])\n+      {\n+#if DEBUG\n+         printf(\"ERROR: vec_unpackl() vec_double_expected[%d] = %f does not match vec_double_result[%d] = %f\\n\",\n+\t\ti, vec_double_expected[i], i, vec_double_result[i]);\n+\t conv_val.d = vec_double_result[i];\n+\t conv_exp.d = vec_double_expected[i];\n+\t printf(\"     vec_unpackh(), vec_double_expected[%d] = 0x%llx does not match vec_double_result[%d] = 0x%llx\\n\",\n+\t\ti, conv_exp.l, i,conv_val.l);\n+#else\n+         abort();\n+#endif\n+      }\n+  }\n \n   return 0;\n }"}, {"sha": "8b54666fe5ad1333f6d73796409ea5e14cd7a755", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-1.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651a79532c8e87ac096419d9852a295f9e284fe4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-1.c?ref=651a79532c8e87ac096419d9852a295f9e284fe4", "patch": "@@ -276,21 +276,20 @@ int main ()\n    vec_any_lt          vcmpgtud.\n    vec_any_le          vcmpgtud.\n    vec_and             xxland\n-   vec_andc            xxland\n+   vec_andc            xxlandc\n    vec_cntlz           vclzd, vclzb, vclzw, vclzh\n-   xvcpsgnsp           vec_cpsgn\n+   vec_cpsgn           xvcpsgnsp           \n    vec_ctf             xvmuldp \n-   vec_cts             xvcvdpsxds, vctsxs\n-   vec_ctu             xvcvdpuxds, vctuxs\n+   vec_cts             vctsxs\n+   vec_ctu             vctuxs\n    vec_div             divd, divdu | __divdi3(), __udivdi3()\n    vec_mergel          vmrghb, vmrghh, xxmrghw\n-   vec_mergeh          xxmrglw, vmrglh\n+   vec_mergeh          xxmrglw, vmrglh, vmrglb\n    vec_mul             mulld | mullw, mulhwu\n    vec_nor             xxlnor\n-   vec_or              xxlor\n    vec_packsu          vpkudus\n-   vec_                perm vperm\n-   vec_                round xvrdpi\n+   vec_perm            vperm\n+   vec_round           xvrdpi\n    vec_sel             xxsel\n    vec_xor             xxlxor \n    vec_rsqrt           xvrsqrtesp\n@@ -324,8 +323,6 @@ int main ()\n /* { dg-final { scan-assembler-times \"xxmrglw\" 8 } } */\n /* { dg-final { scan-assembler-times \"vmrglh\" 8 } } */\n /* { dg-final { scan-assembler-times \"xxlnor\" 6 } } */\n-/* { dg-final { scan-assembler-times \"xxlor\" 11 { target { ilp32 } } } } */\n-/* { dg-final { scan-assembler-times \"xxlor\" 7  { target { lp64 } } } } */\n /* { dg-final { scan-assembler-times {\\mvpkudus\\M} 1 } } */\n /* { dg-final { scan-assembler-times \"vperm\" 4 } } */\n /* { dg-final { scan-assembler-times \"xvrdpi\" 2 } } */\n@@ -334,8 +331,10 @@ int main ()\n /* { dg-final { scan-assembler-times \"divd\" 8  { target lp64 } } } */\n /* { dg-final { scan-assembler-times \"divdu\" 2  { target lp64 } } } */\n /* { dg-final { scan-assembler-times \"mulld\" 4  { target lp64 } } } */\n-/* { dg-final { scan-assembler-times {\\mbl __divdi3\\M} 2  { target { ilp32 } } } } */\n-/* { dg-final { scan-assembler-times {\\mbl __udivdi3\\M} 2  { target {ilp32 } } } } */\n+/* check for both .__divdi3 (AIX) and __divdi3 (Linux) */\n+/* { dg-final { scan-assembler-times {\\mbl \\.?__divdi3\\M} 2   { target { ilp32 } } } } */\n+/* check for both .__udivdi3 (AIX) and __udivdi3 (Linux) */\n+/* { dg-final { scan-assembler-times {\\mbl \\.?__udivdi3\\M} 2  { target { ilp32 } } } } */\n /* { dg-final { scan-assembler-times \"mullw\" 12  { target ilp32 } } } */\n /* { dg-final { scan-assembler-times \"mulhwu\" 4  { target ilp32 } } } */\n /* { dg-final { scan-assembler-times \"xxmrgld\" 0 } } */"}]}