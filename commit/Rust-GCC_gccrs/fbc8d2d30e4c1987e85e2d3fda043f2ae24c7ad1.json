{"sha": "fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJjOGQyZDMwZTRjMTk4N2U4NWUyZDNmZGEwNDNmMmFlMjRjN2FkMQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2007-01-02T17:49:07Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2007-01-02T17:49:07Z"}, "message": "c-common.c (c_common_truthvalue_conversion): When warning about using an assignment as a truth value, set TREE_NO_WARNING.\n\n./:\t* c-common.c (c_common_truthvalue_conversion): When warning about\n\tusing an assignment as a truth value, set TREE_NO_WARNING.\ncp/:\n\t* semantics.c (maybe_convert_cond): Optionally warn when using an\n\tassignment as a condition.\n\t* typeck.c (convert_for_assignment): Optionally warn about\n\tassigning the result of an assignment to a bool.\ntestsuite/:\n\t* g++.dg/warn/Wparentheses-22.C: New test.\n\t* g++.dg/warn/Wparentheses-23.C: New test.\n\nFrom-SVN: r120348", "tree": {"sha": "8c417c46fb300ca0e55218e9d49e86f6e77ea715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c417c46fb300ca0e55218e9d49e86f6e77ea715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/comments", "author": null, "committer": null, "parents": [{"sha": "b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ed4cb43c9b43a57b28d35c46062607af6e6a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ed4cb43c9b43a57b28d35c46062607af6e6a64"}], "stats": {"total": 287, "additions": 281, "deletions": 6}, "files": [{"sha": "30e9a20759a8cf08ba38bcc3f82336b8181ed5d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -1,3 +1,8 @@\n+2006-01-02  Ian Lance Taylor  <iant@google.com>\n+\n+\t* c-common.c (c_common_truthvalue_conversion): When warning about\n+\tusing an assignment as a truth value, set TREE_NO_WARNING.\n+\n 2007-01-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR middle-end/7651"}, {"sha": "cca1490a9d535990c4bd852ccfd3a269c13c83c6", "filename": "gcc/c-common.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines shared by all languages that are variants of C.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -2726,9 +2726,13 @@ c_common_truthvalue_conversion (tree expr)\n       break;\n \n     case MODIFY_EXPR:\n-      if (!TREE_NO_WARNING (expr))\n-\twarning (OPT_Wparentheses,\n-\t\t \"suggest parentheses around assignment used as truth value\");\n+      if (!TREE_NO_WARNING (expr)\n+\t  && warn_parentheses)\n+\t{\n+\t  warning (OPT_Wparentheses,\n+\t\t   \"suggest parentheses around assignment used as truth value\");\n+\t  TREE_NO_WARNING (expr) = 1;\n+\t}\n       break;\n \n     default:"}, {"sha": "abc7a71d7fcdc2662c3f118c5fe0e550ed0667f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -1,3 +1,10 @@\n+2006-01-02  Ian Lance Taylor  <iant@google.com>\n+\n+\t* semantics.c (maybe_convert_cond): Optionally warn when using an\n+\tassignment as a condition.\n+\t* typeck.c (convert_for_assignment): Optionally warn about\n+\tassigning the result of an assignment to a bool.\n+\n 2007-01-02  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* pt.c (canonical_template_parms): Correct typo in comment."}, {"sha": "5b8906eb020025cb19ef32a28fcc671eacce7b21", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -3,7 +3,7 @@\n    building RTL.  These routines are used both during actual parsing\n    and during the instantiation of template functions.\n \n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n    Written by Mark Mitchell (mmitchell@usa.net) based on code found\n    formerly in parse.y and pt.c.\n@@ -587,6 +587,16 @@ maybe_convert_cond (tree cond)\n \n   /* Do the conversion.  */\n   cond = convert_from_reference (cond);\n+\n+  if (TREE_CODE (cond) == MODIFY_EXPR\n+      && !TREE_NO_WARNING (cond)\n+      && warn_parentheses)\n+    {\n+      warning (OPT_Wparentheses,\n+\t       \"suggest parentheses around assignment used as truth value\");\n+      TREE_NO_WARNING (cond) = 1;\n+    }\n+\n   return condition_conversion (cond);\n }\n "}, {"sha": "6c05b9fe1f1651452b03d90f9309e312a8d95adb", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -1,6 +1,7 @@\n /* Build expressions with type checking for C++ compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GCC.\n@@ -6365,6 +6366,17 @@ convert_for_assignment (tree type, tree rhs,\n \t\t errtype);\n     }\n \n+  /* If -Wparentheses, warn about a = b = c when a has type bool.  */\n+  if (warn_parentheses\n+      && type == boolean_type_node\n+      && TREE_CODE (rhs) == MODIFY_EXPR\n+      && !TREE_NO_WARNING (rhs))\n+    {\n+      warning (OPT_Wparentheses,\n+\t       \"suggest parentheses around assignment used as truth value\");\n+      TREE_NO_WARNING (rhs) = 1;\n+    }\n+\n   return perform_implicit_conversion (strip_top_quals (type), rhs);\n }\n "}, {"sha": "5f17a946fe67c2b022a384351ef72c3dd97bd589", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -1,3 +1,8 @@\n+2006-01-02  Ian Lance Taylor  <iant@google.com>\n+\n+\t* g++.dg/warn/Wparentheses-22.C: New test.\n+\t* g++.dg/warn/Wparentheses-23.C: New test.\n+\n 2007-01-02  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR middle-end/7651"}, {"sha": "395953dd44611df0d9d2055017f6444ec93fa757", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-22.C", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-22.C?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -0,0 +1,111 @@\n+// { dg-do compile }\n+// { dg-options \"-Wparentheses\" }\n+\n+// Warnings for assignments used as truth-values when using classes.\n+// Like Wparentheses-1.C, but with a class.\n+\n+int foo (int);\n+\n+class C\n+{\n+ public:\n+  C()\n+    : b(0)\n+  { }\n+\n+  // Use default assignment constructor.\n+\n+  // Provide conversion to bool so that an instance of this class will\n+  // work as a condition.\n+  operator bool() const\n+  { return b != 0; }\n+\n+ private:\n+  int b;\n+};\n+\n+C a, b, c;\n+bool d;\n+\n+void\n+bar (void)\n+{\n+  if (a = b) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (0);\n+  if ((a = b))\n+    foo (1);\n+  if (a = a) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (2);\n+  if ((a = a))\n+    foo (3);\n+  if (b = c) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (4);\n+  else\n+    foo (5);\n+  if ((b = c))\n+    foo (6);\n+  else\n+    foo (7);\n+  if (b = b) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (8);\n+  else\n+    foo (9);\n+  if ((b = b))\n+    foo (10);\n+  else\n+    foo (11);\n+  while (c = b) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (12);\n+  while ((c = b))\n+    foo (13);\n+  while (c = c) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (14);\n+  while ((c = c))\n+    foo (15);\n+  do foo (16); while (a = b); // { dg-warning \"assignment\" \"correct warning\" }\n+  do foo (17); while ((a = b));\n+  do foo (18); while (a = a); // { dg-warning \"assignment\" \"correct warning\" }\n+  do foo (19); while ((a = a));\n+  for (;c = b;) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (20);\n+  for (;(c = b);)\n+    foo (21);\n+  for (;c = c;) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (22);\n+  for (;(c = c);)\n+    foo (23);\n+  d = a = b; // { dg-warning \"assignment\" \"correct warning\" }\n+  foo (24);\n+  d = (a = b);\n+  foo (25);\n+  d = a = a; // { dg-warning \"assignment\" \"correct warning\" }\n+  foo (26);\n+  d = (a = a);\n+  foo (27);\n+  if (C(a))\n+    foo (28);\n+}\n+\n+bool\n+bar1 (void)\n+{\n+  return a = b; // { dg-warning \"assignment\" \"correct warning\" }\n+}\n+\n+bool\n+bar2 (void)\n+{\n+  return (a = b);\n+}\n+\n+bool\n+bar3 (void)\n+{\n+  return a = a; // { dg-warning \"assignment\" \"correct warning\" }\n+}\n+\n+bool\n+bar4 (void)\n+{\n+  return (a = a);\n+}"}, {"sha": "755c574d0f23ddede5d2ac51825aa08620faa8b8", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-23.C", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-23.C?ref=fbc8d2d30e4c1987e85e2d3fda043f2ae24c7ad1", "patch": "@@ -0,0 +1,121 @@\n+// { dg-do compile }\n+// { dg-options \"-Wparentheses\" }\n+\n+// Template version of Wparentheses-22.C.\n+\n+int foo (int);\n+\n+class C\n+{\n+ public:\n+  C()\n+    : b(0)\n+  { }\n+\n+  // Use default assignment constructor.\n+\n+  // Provide conversion to bool so that an instance of this class will\n+  // work as a condition.\n+  operator bool() const\n+  { return b != 0; }\n+\n+ private:\n+  int b;\n+};\n+\n+C a, b, c;\n+bool d;\n+\n+template<class T>\n+void\n+bar (T)\n+{\n+  if (a = b) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (0);\n+  if ((a = b))\n+    foo (1);\n+  if (a = a) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (2);\n+  if ((a = a))\n+    foo (3);\n+  if (b = c) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (4);\n+  else\n+    foo (5);\n+  if ((b = c))\n+    foo (6);\n+  else\n+    foo (7);\n+  if (b = b) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (8);\n+  else\n+    foo (9);\n+  if ((b = b))\n+    foo (10);\n+  else\n+    foo (11);\n+  while (c = b) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (12);\n+  while ((c = b))\n+    foo (13);\n+  while (c = c) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (14);\n+  while ((c = c))\n+    foo (15);\n+  do foo (16); while (a = b); // { dg-warning \"assignment\" \"correct warning\" }\n+  do foo (17); while ((a = b));\n+  do foo (18); while (a = a); // { dg-warning \"assignment\" \"correct warning\" }\n+  do foo (19); while ((a = a));\n+  for (;c = b;) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (20);\n+  for (;(c = b);)\n+    foo (21);\n+  for (;c = c;) // { dg-warning \"assignment\" \"correct warning\" }\n+    foo (22);\n+  for (;(c = c);)\n+    foo (23);\n+  d = a = b; // { dg-warning \"assignment\" \"correct warning\" }\n+  foo (24);\n+  d = (a = b);\n+  foo (25);\n+  d = a = a; // { dg-warning \"assignment\" \"correct warning\" }\n+  foo (26);\n+  d = (a = a);\n+  foo (27);\n+  if (C(a))\n+    foo (28);\n+}\n+\n+template<class T>\n+bool\n+bar1 (T)\n+{\n+  return a = b; // { dg-warning \"assignment\" \"correct warning\" }\n+}\n+\n+template<class T>\n+bool\n+bar2 (T)\n+{\n+  return (a = b);\n+}\n+\n+template<class T>\n+bool\n+bar3 (T)\n+{\n+  return a = a; // { dg-warning \"assignment\" \"correct warning\" }\n+}\n+\n+template<class T>\n+bool\n+bar4 (T)\n+{\n+  return (a = a);\n+}\n+\n+template void bar<int> (int); // { dg-warning \"instantiated\" }\n+template bool bar1<int> (int); // { dg-warning \"instantiated\" }\n+template bool bar2<int> (int);\n+template bool bar3<int> (int); // { dg-warning \"instantiated\" }\n+template bool bar4<int> (int);"}]}