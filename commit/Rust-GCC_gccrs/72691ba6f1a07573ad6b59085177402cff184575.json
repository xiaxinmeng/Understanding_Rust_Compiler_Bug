{"sha": "72691ba6f1a07573ad6b59085177402cff184575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI2OTFiYTZmMWEwNzU3M2FkNmI1OTA4NTE3NzQwMmNmZjE4NDU3NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-04-01T13:43:39Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-04-01T13:43:39Z"}, "message": "configure.ac: Remove code setting CONFIG_SHELL, config_shell and moveifchange.\n\n\t* configure.ac: Remove code setting CONFIG_SHELL, config_shell and\n\tmoveifchange.\n\t* configure: Regenerate.\n\t* Makefile.tpl: Use @SHELL@ not @config_shell@.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r171830", "tree": {"sha": "752eb5465276f1f5d472fc56630b3d5d8131ebb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/752eb5465276f1f5d472fc56630b3d5d8131ebb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72691ba6f1a07573ad6b59085177402cff184575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72691ba6f1a07573ad6b59085177402cff184575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72691ba6f1a07573ad6b59085177402cff184575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72691ba6f1a07573ad6b59085177402cff184575/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6de6637049bd9be86c2da1838c6b6a349fc7ae6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6de6637049bd9be86c2da1838c6b6a349fc7ae6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6de6637049bd9be86c2da1838c6b6a349fc7ae6f"}], "stats": {"total": 87, "additions": 10, "deletions": 77}, "files": [{"sha": "2af6c0d8a938ba125d40e82da1a89db715c52b2c", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72691ba6f1a07573ad6b59085177402cff184575/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72691ba6f1a07573ad6b59085177402cff184575/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=72691ba6f1a07573ad6b59085177402cff184575", "patch": "@@ -1,3 +1,11 @@\n+2011-04-01  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac: Remove code setting CONFIG_SHELL, config_shell and\n+\tmoveifchange.\n+\t* configure: Regenerate.\n+\t* Makefile.tpl: Use @SHELL@ not @config_shell@.\n+\t* Makefile.in: Regenerate.\n+\n 2011-04-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* configure.ac (*-*-sysv4*): Don't enable libgomp."}, {"sha": "e64f0763025c21e2e93f4c5ce839611717ce536c", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72691ba6f1a07573ad6b59085177402cff184575/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72691ba6f1a07573ad6b59085177402cff184575/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=72691ba6f1a07573ad6b59085177402cff184575", "patch": "@@ -320,7 +320,7 @@ HOST_LIBELFINC = @libelfinc@\n # Programs producing files for the BUILD machine\n # ----------------------------------------------\n \n-SHELL = @config_shell@\n+SHELL = @SHELL@\n \n # pwd command to use.  Allow user to override default by setting PWDCMD in\n # the environment to account for automounters.  The make variable must not"}, {"sha": "f7312d9e8cef9bece30627f50a397ddd4a367d1d", "filename": "Makefile.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72691ba6f1a07573ad6b59085177402cff184575/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72691ba6f1a07573ad6b59085177402cff184575/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=72691ba6f1a07573ad6b59085177402cff184575", "patch": "@@ -323,7 +323,7 @@ HOST_LIBELFINC = @libelfinc@\n # Programs producing files for the BUILD machine\n # ----------------------------------------------\n \n-SHELL = @config_shell@\n+SHELL = @SHELL@\n \n # pwd command to use.  Allow user to override default by setting PWDCMD in\n # the environment to account for automounters.  The make variable must not"}, {"sha": "fea4aa70e09cbfe4c2017842a10f4d1dc4b4369a", "filename": "configure", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72691ba6f1a07573ad6b59085177402cff184575/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72691ba6f1a07573ad6b59085177402cff184575/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=72691ba6f1a07573ad6b59085177402cff184575", "patch": "@@ -604,7 +604,6 @@ LEX\n M4\n BISON\n YACC\n-config_shell\n WINDRES_FOR_BUILD\n WINDMC_FOR_BUILD\n RANLIB_FOR_BUILD\n@@ -2608,42 +2607,6 @@ fi\n done\n \n \n-### we might need to use some other shell than /bin/sh for running subshells\n-### If we are on Windows, search for the shell.  This will permit people\n-### to not have /bin/sh, but to be able to see /SOME/PATH/sh configure\n-### without also having to set CONFIG_SHELL.  This code will work when\n-### using bash, which sets OSTYPE.\n-case \"${OSTYPE}\" in\n-*win32*)\n-  if test x${CONFIG_SHELL} = x ; then\n-    if test ! -f /bin/sh ; then\n-      if test x${SHELL} != x && test -f ${SHELL} ; then\n-\tCONFIG_SHELL=${SHELL}\n-\texport CONFIG_SHELL\n-      else\n-\tfor prog in sh sh.exe bash bash.exe; do\n-\t  IFS=\"${IFS=\t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n-\t  for dir in $PATH; do\n-\t    test -z \"$dir\" && dir=.\n-\t    if test -f $dir/$prog; then\n-\t      CONFIG_SHELL=$dir/$prog\n-\t      export CONFIG_SHELL\n-\t      break\n-\t    fi\n-\t  done\n-\t  IFS=\"$save_ifs\"\n-\t  test -n \"${CONFIG_SHELL}\" && break\n-\tdone\n-      fi\n-    fi\n-  fi\n-  ;;\n-esac\n-\n-config_shell=${CONFIG_SHELL-/bin/sh}\n-\n-moveifchange=${srcdir}/move-if-change\n-\n srcpwd=`cd ${srcdir} ; ${PWDCMD-pwd}`\n \n # We pass INSTALL explicitly to sub-makes.  Make sure that it is not\n@@ -7507,7 +7470,6 @@ done\n \n \n \n-\n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these\n # programs in objdir."}, {"sha": "2564ce5ad34622e2a3f903d7bdbcdb6b57778990", "filename": "configure.ac", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72691ba6f1a07573ad6b59085177402cff184575/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72691ba6f1a07573ad6b59085177402cff184575/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=72691ba6f1a07573ad6b59085177402cff184575", "patch": "@@ -89,42 +89,6 @@ AC_PROG_LN_S\n AC_PROG_SED\n AC_PROG_AWK\n \n-### we might need to use some other shell than /bin/sh for running subshells\n-### If we are on Windows, search for the shell.  This will permit people\n-### to not have /bin/sh, but to be able to see /SOME/PATH/sh configure\n-### without also having to set CONFIG_SHELL.  This code will work when\n-### using bash, which sets OSTYPE.\n-case \"${OSTYPE}\" in\n-*win32*)\n-  if test x${CONFIG_SHELL} = x ; then\n-    if test ! -f /bin/sh ; then\n-      if test x${SHELL} != x && test -f ${SHELL} ; then\n-\tCONFIG_SHELL=${SHELL}\n-\texport CONFIG_SHELL\n-      else\n-\tfor prog in sh sh.exe bash bash.exe; do\n-\t  IFS=\"${IFS=\t}\"; save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n-\t  for dir in $PATH; do\n-\t    test -z \"$dir\" && dir=.\n-\t    if test -f $dir/$prog; then\n-\t      CONFIG_SHELL=$dir/$prog\n-\t      export CONFIG_SHELL\n-\t      break\n-\t    fi\n-\t  done\n-\t  IFS=\"$save_ifs\"\n-\t  test -n \"${CONFIG_SHELL}\" && break\n-\tdone\n-      fi\n-    fi\n-  fi\n-  ;;\n-esac\n-\n-config_shell=${CONFIG_SHELL-/bin/sh}\n-\n-moveifchange=${srcdir}/move-if-change\n-\n srcpwd=`cd ${srcdir} ; ${PWDCMD-pwd}`\n \n # We pass INSTALL explicitly to sub-makes.  Make sure that it is not\n@@ -2985,7 +2949,6 @@ AC_SUBST(NM_FOR_BUILD)\n AC_SUBST(RANLIB_FOR_BUILD)\n AC_SUBST(WINDMC_FOR_BUILD)\n AC_SUBST(WINDRES_FOR_BUILD)\n-AC_SUBST(config_shell)\n \n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these"}]}