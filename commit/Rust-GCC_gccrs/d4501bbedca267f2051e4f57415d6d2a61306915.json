{"sha": "d4501bbedca267f2051e4f57415d6d2a61306915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ1MDFiYmVkY2EyNjdmMjA1MWU0ZjU3NDE1ZDZkMmE2MTMwNjkxNQ==", "commit": {"author": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-06-29T06:42:56Z"}, "committer": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-06-29T06:42:57Z"}, "message": "testsuite: clarify scan-dump file globbing behavior\n\nThe test commands for scanning optimization dump files\nperform globbing on the argument that specifies the suffix\nof the dump files to be scanned.  This behavior is currently\nundocumented.  Furthermore, the current implementation of\n\"scan-dump\" and similar procedures yields an error whenever\nthe file name globbing matches more than one file (due to an\nattempt to call \"open\" on multiple files) while a failure to\nmatch any file results in an unresolved test.\n\nThis commit documents the globbing behavior.  The dump\nscanning procedures are changed to make the test unresolved\nif globbing matches more than one file.\n\ngcc/ChangeLog:\n\n2020-06-29  Frederik Harwath  <frederik@codesourcery.com>\n\n\t* doc/sourcebuild.texi: Describe globbing of the\n\tdump file scanning commands \"suffix\" argument.\n\ngcc/testsuite/ChangeLog:\n\n2020-06-29  Frederik Harwath  <frederik@codesourcery.com>\n\n\t* lib/scandump.exp (glob-dump-file): New proc.\n\t(scan-dump): Use glob-dump-file for file name expansion.\n\t(scan-dump-times): Likewise.\n\t(scan-dump-dem): Likewise.\n\t(scan-dump-dem-not): Likewise.\n\nReviewed-by: Thomas Schwinge <thomas@codesourcery.com>", "tree": {"sha": "1ad4085eff9f450c2917a2b940a42b5060eb76a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ad4085eff9f450c2917a2b940a42b5060eb76a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4501bbedca267f2051e4f57415d6d2a61306915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4501bbedca267f2051e4f57415d6d2a61306915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4501bbedca267f2051e4f57415d6d2a61306915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4501bbedca267f2051e4f57415d6d2a61306915/comments", "author": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69273534c658949129ac6c389ea25c9cddec3767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69273534c658949129ac6c389ea25c9cddec3767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69273534c658949129ac6c389ea25c9cddec3767"}], "stats": {"total": 67, "additions": 56, "deletions": 11}, "files": [{"sha": "5b5b845afe6e8c8836bad73872797a10b4921cea", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4501bbedca267f2051e4f57415d6d2a61306915/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4501bbedca267f2051e4f57415d6d2a61306915/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=d4501bbedca267f2051e4f57415d6d2a61306915", "patch": "@@ -2943,6 +2943,19 @@ Passes if @var{regex} does not match demangled text in the dump file with\n suffix @var{suffix}.\n @end table\n \n+The @var{suffix} argument which describes the dump file to be scanned\n+may contain a glob pattern that must expand to exactly one file\n+name. This is useful if, e.g., different pass instances are executed\n+depending on torture testing command-line flags, producing dump files\n+whose names differ only in their pass instance number suffix.  For\n+example, to scan instances 1, 2, 3 of a tree pass ``mypass'' for\n+occurrences of the string ``code has been optimized'', use:\n+@smallexample\n+/* @{ dg-options \"-fdump-tree-mypass\" @} */\n+/* @{ dg-final @{ scan-tree-dump \"code has been optimized\" \"mypass\\[1-3\\]\" @} @} */\n+@end smallexample\n+\n+\n @subsubsection Check for output files\n \n @table @code"}, {"sha": "6cb208f1cef707c09fb8752bcf926c279d415ac4", "filename": "gcc/testsuite/lib/scandump.exp", "status": "modified", "additions": 43, "deletions": 11, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4501bbedca267f2051e4f57415d6d2a61306915/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4501bbedca267f2051e4f57415d6d2a61306915/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscandump.exp?ref=d4501bbedca267f2051e4f57415d6d2a61306915", "patch": "@@ -42,6 +42,34 @@ proc dump-base { args } {\n     return $dumpbase\n }\n \n+# Expand dump file name pattern to exactly one file.\n+# Return a single dump file name or an empty string\n+# if the pattern matches no file or more than one file.\n+#\n+# Argument 0 is the testcase name\n+# Argument 1 is the dump file glob pattern\n+proc glob-dump-file { args } {\n+\n+    set pattern [lindex $args 1]\n+    set dump_file \"[glob -nocomplain $pattern]\"\n+    set num_files [llength $dump_file]\n+\n+    if { $num_files != 1 } {\n+\tset testcase [lindex $args 0]\n+\tif { $num_files == 0 } {\n+\t    verbose -log \"$testcase: dump file does not exist\"\n+\t}\n+\n+\tif { $num_files > 1 } {\n+\t    verbose -log \"$testcase: multiple dump files found\"\n+\t}\n+\n+\treturn\n+    }\n+\n+    return $dump_file\n+}\n+\n # Utility for scanning compiler result, invoked via dg-final.\n # Call pass if pattern is present, otherwise fail.\n #\n@@ -70,10 +98,10 @@ proc scan-dump { args } {\n     set testname \"$testcase scan-[lindex $args 0]-dump $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n     set dumpbase [dump-base $src [lindex $args 3]]\n-    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n+\n+    set pattern \"$dumpbase.[lindex $args 2]\"\n+    set output_file \"[glob-dump-file $testcase $pattern]\"\n     if { $output_file == \"\" } {\n-\tverbose -log \"$testcase: dump file does not exist\"\n-\tverbose -log \"dump file: $dumpbase.$suf\"\n \tunresolved \"$testname\"\n \treturn\n     }\n@@ -116,9 +144,10 @@ proc scan-dump-times { args } {\n     set testname \"$testcase scan-[lindex $args 0]-dump-times $suf \\\"$printable_pattern\\\" [lindex $args 2]\"\n     set src [file tail $filename]\n     set dumpbase [dump-base $src [lindex $args 4]]\n-    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 3]]\"\n+\n+    set pattern \"$dumpbase.[lindex $args 3]\"\n+    set output_file \"[glob-dump-file $testcase $pattern]\"\n     if { $output_file == \"\" } {\n-\tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n \treturn\n     }\n@@ -162,9 +191,10 @@ proc scan-dump-not { args } {\n     set testname \"$testcase scan-[lindex $args 0]-dump-not $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n     set dumpbase [dump-base $src [lindex $args 3]]\n-    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n+\n+    set pattern \"$dumpbase.[lindex $args 2]\"\n+    set output_file \"[glob-dump-file $testcase $pattern]\"\n     if { $output_file == \"\" } {\n-\tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n \treturn\n     }\n@@ -219,9 +249,10 @@ proc scan-dump-dem { args } {\n     set testname \"$testcase scan-[lindex $args 0]-dump-dem $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n     set dumpbase [dump-base $src [lindex $args 3]]\n-    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n+\n+    set pattern \"$dumpbase.[lindex $args 2]\"\n+    set output_file \"[glob-dump-file $testcase $pattern]\"\n     if { $output_file == \"\" } {\n-\tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n \treturn\n     }\n@@ -275,9 +306,10 @@ proc scan-dump-dem-not { args } {\n     set testname \"$testcase scan-[lindex $args 0]-dump-dem-not $suf \\\"$printable_pattern\\\"\"\n     set src [file tail $filename]\n     set dumpbase [dump-base $src [lindex $args 3]]\n-    set output_file \"[glob -nocomplain $dumpbase.[lindex $args 2]]\"\n+\n+    set pattern \"$dumpbase.[lindex $args 2]\"\n+    set output_file \"[glob-dump-file $testcase $pattern]\"\n     if { $output_file == \"\" } {\n-\tverbose -log \"$testcase: dump file does not exist\"\n \tunresolved \"$testname\"\n \treturn\n     }"}]}