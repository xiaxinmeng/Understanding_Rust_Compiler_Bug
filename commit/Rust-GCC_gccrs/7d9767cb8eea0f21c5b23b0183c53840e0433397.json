{"sha": "7d9767cb8eea0f21c5b23b0183c53840e0433397", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q5NzY3Y2I4ZWVhMGYyMWM1YjIzYjAxODNjNTM4NDBlMDQzMzM5Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-09T22:52:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-09T22:52:25Z"}, "message": "phiopt: Fix up two_value_replacement BOOLEAN_TYPE handling for Ada [PR98188]\n\nFor Ada with LTO, boolean_{false,true}_node can be 1-bit precision boolean,\nwhile TREE_TYPE (lhs) can be 8-bit precision boolean and thus we can end up\nwith wide_int mismatches.\n\nThis patch for non-VR_RANGE just use VARYING min/max manually.\nThe min + 1 != max check will then do the rest.\n\n2020-12-09  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR bootstrap/98188\n\t* tree-ssa-phiopt.c (two_value_replacement): Don't special case\n\tBOOLEAN_TYPEs for ranges, instead if get_range_info doesn't return\n\tVR_RANGE, set min/max to wi::min/max_value.", "tree": {"sha": "c114c4644ce9bacfe054ad40582ff51a98516420", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c114c4644ce9bacfe054ad40582ff51a98516420"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d9767cb8eea0f21c5b23b0183c53840e0433397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9767cb8eea0f21c5b23b0183c53840e0433397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d9767cb8eea0f21c5b23b0183c53840e0433397", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9767cb8eea0f21c5b23b0183c53840e0433397/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef33047a8b93d416f08f3f640dd65f3887fb05c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef33047a8b93d416f08f3f640dd65f3887fb05c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef33047a8b93d416f08f3f640dd65f3887fb05c1"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3d40f07d06f138f3e66983522e902de9dcd30ab7", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d9767cb8eea0f21c5b23b0183c53840e0433397/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d9767cb8eea0f21c5b23b0183c53840e0433397/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=7d9767cb8eea0f21c5b23b0183c53840e0433397", "patch": "@@ -658,13 +658,13 @@ two_value_replacement (basic_block cond_bb, basic_block middle_bb,\n     return false;\n \n   wide_int min, max;\n-  if (TREE_CODE (TREE_TYPE (lhs)) == BOOLEAN_TYPE)\n+  if (get_range_info (lhs, &min, &max) != VR_RANGE)\n     {\n-      min = wi::to_wide (boolean_false_node);\n-      max = wi::to_wide (boolean_true_node);\n+      int prec = TYPE_PRECISION (TREE_TYPE (lhs));\n+      signop sgn = TYPE_SIGN (TREE_TYPE (lhs));\n+      min = wi::min_value (prec, sgn);\n+      max = wi::max_value (prec, sgn);\n     }\n-  else if (get_range_info (lhs, &min, &max) != VR_RANGE)\n-    return false;\n   if (min + 1 != max\n       || (wi::to_wide (rhs) != min\n \t  && wi::to_wide (rhs) != max))"}]}