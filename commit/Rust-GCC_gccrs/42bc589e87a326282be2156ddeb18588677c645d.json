{"sha": "42bc589e87a326282be2156ddeb18588677c645d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJiYzU4OWU4N2EzMjYyODJiZTIxNTZkZGViMTg1ODg2NzdjNjQ1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-11T09:54:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-11T09:54:22Z"}, "message": "aarch64: Fix ICE in aarch64_add_offset_1 [PR94121]\n\nabs_hwi asserts that the argument is not HOST_WIDE_INT_MIN and as the\n(invalid) testcase shows, the function can be called with such an offset.\nThe following patch is IMHO minimal fix, absu_hwi unlike abs_hwi allows even\nthat value and will return (unsigned HOST_WIDE_INT) HOST_WIDE_INT_MIN\nin that case.  The function then uses moffset in two spots which wouldn't\ncare if the value is (unsigned HOST_WIDE_INT) HOST_WIDE_INT_MIN or\nHOST_WIDE_INT_MIN and wouldn't accept it (!moffset and\naarch64_uimm12_shift (moffset)), then in one spot where the signedness of\nmoffset does matter and using unsigned is the right thing -\nmoffset < 0x1000000 - and finally has code which will handle even this\nvalue right; the assembler doesn't really care for DImode immediates if\n        mov     x1, -9223372036854775808\nor\n        mov     x1, 9223372036854775808\nis used and similarly it doesn't matter if we add or sub it in DImode.\n\n2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/94121\n\t* config/aarch64/aarch64.c (aarch64_add_offset_1): Use absu_hwi\n\tinstead of abs_hwi, change moffset type to unsigned HOST_WIDE_INT.\n\n\t* gcc.dg/pr94121.c: New test.", "tree": {"sha": "f9c661c10acfe1576b68e097c17367e9b547523b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c661c10acfe1576b68e097c17367e9b547523b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42bc589e87a326282be2156ddeb18588677c645d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bc589e87a326282be2156ddeb18588677c645d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42bc589e87a326282be2156ddeb18588677c645d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42bc589e87a326282be2156ddeb18588677c645d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60342fdbfb0630243d2b85d2ca45204ded990b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60342fdbfb0630243d2b85d2ca45204ded990b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60342fdbfb0630243d2b85d2ca45204ded990b17"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "1fc6ff36c84ea5404a6286ad8441baaa561f26d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc589e87a326282be2156ddeb18588677c645d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc589e87a326282be2156ddeb18588677c645d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42bc589e87a326282be2156ddeb18588677c645d", "patch": "@@ -1,5 +1,9 @@\n 2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/94121\n+\t* config/aarch64/aarch64.c (aarch64_add_offset_1): Use absu_hwi\n+\tinstead of abs_hwi, change moffset type to unsigned HOST_WIDE_INT.\n+\n \tPR bootstrap/93962\n \t* value-prof.c (dump_histogram_value): Use abs_hwi instead of\n \tstd::abs."}, {"sha": "c320d5ba51d9bd9130e7f4a36cc27c9ba8d88c9c", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc589e87a326282be2156ddeb18588677c645d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc589e87a326282be2156ddeb18588677c645d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=42bc589e87a326282be2156ddeb18588677c645d", "patch": "@@ -3713,7 +3713,7 @@ aarch64_add_offset_1 (scalar_int_mode mode, rtx dest,\n   gcc_assert (emit_move_imm || temp1 != NULL_RTX);\n   gcc_assert (temp1 == NULL_RTX || !reg_overlap_mentioned_p (temp1, src));\n \n-  HOST_WIDE_INT moffset = abs_hwi (offset);\n+  unsigned HOST_WIDE_INT moffset = absu_hwi (offset);\n   rtx_insn *insn;\n \n   if (!moffset)"}, {"sha": "af94cb47ae642d3869ebdd101fd17e13a564282d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc589e87a326282be2156ddeb18588677c645d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc589e87a326282be2156ddeb18588677c645d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42bc589e87a326282be2156ddeb18588677c645d", "patch": "@@ -1,5 +1,8 @@\n 2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/94121\n+\t* gcc.dg/pr94121.c: New test.\n+\n \tPR middle-end/94111\n \t* gcc.dg/dfp/pr94111.c: New test.\n "}, {"sha": "2a4261ae02de30601b949e5c40db63317395a2c4", "filename": "gcc/testsuite/gcc.dg/pr94121.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42bc589e87a326282be2156ddeb18588677c645d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94121.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42bc589e87a326282be2156ddeb18588677c645d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94121.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr94121.c?ref=42bc589e87a326282be2156ddeb18588677c645d", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/94121 */\n+/* { dg-do compile { target pie } } */\n+/* { dg-options \"-O2 -fpie -w\" } */\n+\n+#define DIFF_MAX __PTRDIFF_MAX__\n+#define DIFF_MIN (-DIFF_MAX - 1)\n+\n+extern void foo (char *);\n+extern char v[];\n+\n+void\n+bar (void)\n+{\n+  char *p = v;\n+  foo (&p[DIFF_MIN]);\n+}"}]}