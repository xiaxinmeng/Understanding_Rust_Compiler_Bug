{"sha": "14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRjNTJlY2E3ODQxOTA0MWJmMTgzMzBmNWY2ZTFkYmNhNGVjOGIyZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-12-22T12:49:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-12-22T12:49:48Z"}, "message": "DR 541, [WP].\n\n2006-12-22  Paolo Carlini  <pcarlini@suse.de>\n\n        DR 541, [WP].\n \t* include/std/memory (auto_ptr<void>): Add specialization.\n\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/\n\tassign/dr541.cc: New.\n\t* testsuite/20_util/memory/auto_ptr/assign_neg.cc: Adjust\n\tdg-error markers.\n        * docs/html/ext/howto.html: Add an entry for DR 541.\n\nFrom-SVN: r120148", "tree": {"sha": "5d30499d499b8e196110b974f1f184304e0e1f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d30499d499b8e196110b974f1f184304e0e1f7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/comments", "author": null, "committer": null, "parents": [{"sha": "46fd10da92b527f323f89cc5e44966538b564553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46fd10da92b527f323f89cc5e44966538b564553", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46fd10da92b527f323f89cc5e44966538b564553"}], "stats": {"total": 66, "additions": 61, "deletions": 5}, "files": [{"sha": "4a251af437888cc7f825e9d4d5c2aebb080f48d0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "patch": "@@ -1,3 +1,13 @@\n+2006-12-22  Paolo Carlini  <pcarlini@suse.de>\n+\n+        DR 541, [WP].\n+\t* include/std/memory (auto_ptr<void>): Add specialization.\n+\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/\n+\tassign/dr541.cc: New.\n+\t* testsuite/20_util/memory/auto_ptr/assign_neg.cc: Adjust\n+\tdg-error markers.\n+\t* docs/html/ext/howto.html: Add an entry for DR 541.\n+\n 2006-12-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* docs/html/27_io/howto.html: Fix typos."}, {"sha": "951e108dacd1a26025d013e66c7ada8c1715f108", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "patch": "@@ -594,6 +594,12 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n         input_iterator' value_type.\n     </dd>\n \n+    <dt><a href=\"lwg-defects.html#541\">541</a>:\n+        <em>shared_ptr template assignment and void</em>\n+    </dt>\n+    <dd>Add an auto_ptr&lt;void&gt; specialization.\n+    </dd>\n+\n     <dt><a href=\"lwg-active.html#543\">543</a>:\n         <em>valarray slice default constructor</em>\n     </dt>"}, {"sha": "c47d49c034d2220afe788a5c8dbbc5c6fd69f965", "filename": "libstdc++-v3/include/std/memory", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmemory?ref=14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "patch": "@@ -1,6 +1,7 @@\n // <memory> -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2004, 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006\n+// Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -367,7 +368,16 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       template<typename _Tp1>\n         operator auto_ptr<_Tp1>() throw()\n         { return auto_ptr<_Tp1>(this->release()); }\n-  };\n+    };\n+\n+  // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+  // 541. shared_ptr template assignment and void\n+  template<>\n+    class auto_ptr<void>\n+    {\n+    public:\n+      typedef void element_type;\n+    };\n \n _GLIBCXX_END_NAMESPACE\n "}, {"sha": "4ae7acfd5c48b37803cf60975216479bde5b984d", "filename": "libstdc++-v3/testsuite/20_util/memory/auto_ptr/assign_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fauto_ptr%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fauto_ptr%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmemory%2Fauto_ptr%2Fassign_neg.cc?ref=14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2002, 2003, 2004 Free Software Foundation\n+// Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -46,5 +46,5 @@ main()\n   test01();\n   return 0;\n }\n-// { dg-error \"candidates\" \"\" { target *-*-* } 223 } \n-// { dg-error \"::auto_ptr\" \"\" { target *-*-* } 353 } \n+// { dg-error \"candidates\" \"\" { target *-*-* } 224 } \n+// { dg-error \"::auto_ptr\" \"\" { target *-*-* } 354 } "}, {"sha": "f9dc8393504c99eaa10510082fcf2e2e6a03c8d4", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/memory/shared_ptr/assign/dr541.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fassign%2Fdr541.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14c52eca78419041bf18330f5f6e1dbca4ec8b2f/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fassign%2Fdr541.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fassign%2Fdr541.cc?ref=14c52eca78419041bf18330f5f6e1dbca4ec8b2f", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2006 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// TR1 2.2.2 Template class shared_ptr [tr.util.smartptr.shared]\n+\n+#include <tr1/memory>\n+\n+// DR 541. shared_ptr template assignment and void\n+void test01()\n+{\n+  std::tr1::shared_ptr<void> p;\n+  p.operator=<void>(p);\n+}"}]}