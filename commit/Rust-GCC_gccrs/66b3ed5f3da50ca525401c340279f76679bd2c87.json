{"sha": "66b3ed5f3da50ca525401c340279f76679bd2c87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZiM2VkNWYzZGE1MGNhNTI1NDAxYzM0MDI3OWY3NjY3OWJkMmM4Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-04T09:36:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-04T09:36:18Z"}, "message": "re PR middle-end/59261 (FAIL: gcc.dg/vect/bb-slp-26.c -flto -ffat-lto-objects (internal compiler error))\n\n\tPR middle-end/59261\n\t* expmed.c (expand_mult): For MODE_VECTOR_INT multiplication\n\tif there is no vashl<mode>3 or ashl<mode>3 insn, skip_synth.\n\n\t* gcc.dg/pr59261.c: New test.\n\nFrom-SVN: r207456", "tree": {"sha": "2a95d5d3aa1b211a77a06fcecf189456d3381d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a95d5d3aa1b211a77a06fcecf189456d3381d9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66b3ed5f3da50ca525401c340279f76679bd2c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b3ed5f3da50ca525401c340279f76679bd2c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66b3ed5f3da50ca525401c340279f76679bd2c87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b3ed5f3da50ca525401c340279f76679bd2c87/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5961d779d0f20b61363091ac7849d457cc80275d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5961d779d0f20b61363091ac7849d457cc80275d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5961d779d0f20b61363091ac7849d457cc80275d"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "5487d5c3246cf607d19217c9dace8fe05e3b662d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66b3ed5f3da50ca525401c340279f76679bd2c87", "patch": "@@ -1,3 +1,9 @@\n+2014-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/59261\n+\t* expmed.c (expand_mult): For MODE_VECTOR_INT multiplication\n+\tif there is no vashl<mode>3 or ashl<mode>3 insn, skip_synth.\n+\n 2014-02-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60012"}, {"sha": "7c1c979f7741bf9a280855c1cc51796b805f11de", "filename": "gcc/expmed.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=66b3ed5f3da50ca525401c340279f76679bd2c87", "patch": "@@ -3136,6 +3136,14 @@ expand_mult (enum machine_mode mode, rtx op0, rtx op1, rtx target,\n       if (do_trapv)\n \tgoto skip_synth;\n \n+      /* If mode is integer vector mode, check if the backend supports\n+\t vector lshift (by scalar or vector) at all.  If not, we can't use\n+\t synthetized multiply.  */\n+      if (GET_MODE_CLASS (mode) == MODE_VECTOR_INT\n+\t  && optab_handler (vashl_optab, mode) == CODE_FOR_nothing\n+\t  && optab_handler (ashl_optab, mode) == CODE_FOR_nothing)\n+\tgoto skip_synth;\n+\n       /* These are the operations that are potentially turned into\n \t a sequence of shifts and additions.  */\n       mode_bitsize = GET_MODE_UNIT_BITSIZE (mode);"}, {"sha": "048a02909e3b70c116e8b8cf4711458c16857c2b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66b3ed5f3da50ca525401c340279f76679bd2c87", "patch": "@@ -1,3 +1,8 @@\n+2014-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/59261\n+\t* gcc.dg/pr59261.c: New test.\n+\n 2014-02-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60012"}, {"sha": "6b912deb09201825185abad018241312891c27fa", "filename": "gcc/testsuite/gcc.dg/pr59261.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59261.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b3ed5f3da50ca525401c340279f76679bd2c87/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59261.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59261.c?ref=66b3ed5f3da50ca525401c340279f76679bd2c87", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/59261 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef signed char V __attribute__((vector_size (8)));\n+\n+void\n+foo (V *a, V *b)\n+{\n+  *a = *b * 3;\n+}\n+\n+void\n+bar (V *a, V *b)\n+{\n+  *a = *b * 4;\n+}"}]}