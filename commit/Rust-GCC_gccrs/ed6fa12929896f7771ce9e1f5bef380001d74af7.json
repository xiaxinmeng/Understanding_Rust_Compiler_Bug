{"sha": "ed6fa12929896f7771ce9e1f5bef380001d74af7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2ZmExMjkyOTg5NmY3NzcxY2U5ZTFmNWJlZjM4MDAwMWQ3NGFmNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-08-14T11:57:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-08-14T11:57:18Z"}, "message": "re PR target/37101 (wrong code: tree vectorizer omits bogus movq/movlps construct)\n\n\tPR target/37101\n\t* config/i386/sse.md (vec_concatv2di): Remove movlps alternative.\n\t(*vec_concatv2di_rex64_sse4_1): Ditto.\n\t(*vec_concatv2di_rex64_sse): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/37101\n\t* gcc.target/i386/pr37101.c: New test.\n\nFrom-SVN: r139095", "tree": {"sha": "3d27b88ed6062de8afcf1279b7d00dee6e79ab2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d27b88ed6062de8afcf1279b7d00dee6e79ab2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed6fa12929896f7771ce9e1f5bef380001d74af7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6fa12929896f7771ce9e1f5bef380001d74af7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed6fa12929896f7771ce9e1f5bef380001d74af7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed6fa12929896f7771ce9e1f5bef380001d74af7/comments", "author": null, "committer": null, "parents": [{"sha": "2e1d24744be9f2f3a5d0d80c86c4405805daefb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1d24744be9f2f3a5d0d80c86c4405805daefb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1d24744be9f2f3a5d0d80c86c4405805daefb5"}], "stats": {"total": 129, "additions": 101, "deletions": 28}, "files": [{"sha": "50a535546b4f1d10970a48c1d5379312570b8cab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed6fa12929896f7771ce9e1f5bef380001d74af7", "patch": "@@ -1,3 +1,11 @@\n+2008-08-14  Christophe Saout  <christophe@saout.de>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/37101\n+\t* config/i386/sse.md (vec_concatv2di): Remove movlps alternative.\n+\t(*vec_concatv2di_rex64_sse4_1): Ditto.\n+\t(*vec_concatv2di_rex64_sse): Ditto.\n+\n 2008-08-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37103\n@@ -139,7 +147,6 @@\n 2008-08-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR libgomp/26165\n-\n \t* gcc.c (include_spec_function): Tweak call to find_a_file.\n \n 2008-08-12  Jakub Jelinek  <jakub@redhat.com>\n@@ -155,7 +162,7 @@\n \n 2008-08-12  Anatoly Sokolov  <aesok@post.ru>\n \n-        * final.c (final_scan_insn): Use app_enable/app_disable functions.\n+\t* final.c (final_scan_insn): Use app_enable/app_disable functions.\n \n 2008-08-12  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n@@ -685,8 +692,8 @@\n \n 2008-08-07  Bob Wilson  <bob.wilson@acm.org>\n \t\n-\t* config/xtensa/xtensa.c (xtensa_copy_incoming_a7): Copy incoming value\n-\tin a6 after the set_frame_ptr insn.\n+\t* config/xtensa/xtensa.c (xtensa_copy_incoming_a7): Copy incoming\n+\tvalue in a6 after the set_frame_ptr insn.\n \t\n 2008-08-07  Richard Henderson  <rth@redhat.com>\n \n@@ -774,7 +781,7 @@\n \t* matrix-reorg.c (compute_offset): Avoid C++ keywords.\n \n 2008-08-06  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n-       \n+\n \tPR 26785\n \t* diagnostic.c (permerror_at): New.\n \t* toplev.h (permerror_at): Declare."}, {"sha": "c8bf42d81932c706db9e4a0cb6f1ba3d7c25a79d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ed6fa12929896f7771ce9e1f5bef380001d74af7", "patch": "@@ -4952,26 +4952,25 @@\n    (set_attr \"mode\" \"TI,V4SF,V2SF\")])\n \n (define_insn \"vec_concatv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2 ,?Y2,Y2,x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2 ,?Y2,Y2,x,x\")\n \t(vec_concat:V2DI\n-\t  (match_operand:DI 1 \"nonimmediate_operand\" \" mY2,*y ,0 ,0,0,m\")\n-\t  (match_operand:DI 2 \"vector_move_operand\"  \" C  ,  C,Y2,x,m,0\")))]\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \" mY2,*y ,0 ,0,0\")\n+\t  (match_operand:DI 2 \"vector_move_operand\"  \" C  ,  C,Y2,x,m\")))]\n   \"!TARGET_64BIT && TARGET_SSE\"\n   \"@\n    movq\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}\n    movlhps\\t{%2, %0|%0, %2}\n-   movhps\\t{%2, %0|%0, %2}\n-   movlps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov,ssemov,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"TI,TI,TI,V4SF,V2SF,V2SF\")])\n+   movhps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"ssemov,ssemov,sselog,ssemov,ssemov\")\n+   (set_attr \"mode\" \"TI,TI,TI,V4SF,V2SF\")])\n \n (define_insn \"*vec_concatv2di_rex64_sse4_1\"\n-  [(set (match_operand:V2DI 0 \"register_operand\"     \"=x ,x ,Yi,!x,x,x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=x ,x ,Yi,!x,x,x,x\")\n \t(vec_concat:V2DI\n-\t  (match_operand:DI 1 \"nonimmediate_operand\" \" 0 ,mx,r ,*y,0,0,0,m\")\n-\t  (match_operand:DI 2 \"vector_move_operand\"  \" rm,C ,C ,C ,x,x,m,0\")))]\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \" 0 ,mx,r ,*y,0,0,0\")\n+\t  (match_operand:DI 2 \"vector_move_operand\"  \" rm,C ,C ,C ,x,x,m\")))]\n   \"TARGET_64BIT && TARGET_SSE4_1\"\n   \"@\n    pinsrq\\t{$0x1, %2, %0|%0, %2, 0x1}\n@@ -4980,28 +4979,26 @@\n    movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}\n    movlhps\\t{%2, %0|%0, %2}\n-   movhps\\t{%2, %0|%0, %2}\n-   movlps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"prefix_extra\" \"1,*,*,*,*,*,*,*\")\n-   (set_attr \"mode\" \"TI,TI,TI,TI,TI,V4SF,V2SF,V2SF\")])\n+   movhps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,sselog,ssemov,ssemov\")\n+   (set_attr \"prefix_extra\" \"1,*,*,*,*,*,*\")\n+   (set_attr \"mode\" \"TI,TI,TI,TI,TI,V4SF,V2SF\")])\n \n (define_insn \"*vec_concatv2di_rex64_sse\"\n-  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2 ,Yi,!Y2,Y2,x,x,x\")\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=Y2 ,Yi,!Y2,Y2,x,x\")\n \t(vec_concat:V2DI\n-\t  (match_operand:DI 1 \"nonimmediate_operand\" \" mY2,r ,*y ,0 ,0,0,m\")\n-\t  (match_operand:DI 2 \"vector_move_operand\"  \" C  ,C ,C  ,Y2,x,m,0\")))]\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \" mY2,r ,*y ,0 ,0,0\")\n+\t  (match_operand:DI 2 \"vector_move_operand\"  \" C  ,C ,C  ,Y2,x,m\")))]\n   \"TARGET_64BIT && TARGET_SSE\"\n   \"@\n    movq\\t{%1, %0|%0, %1}\n    movq\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}\n    movlhps\\t{%2, %0|%0, %2}\n-   movhps\\t{%2, %0|%0, %2}\n-   movlps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov,ssemov,ssemov,sselog,ssemov,ssemov,ssemov\")\n-   (set_attr \"mode\" \"TI,TI,TI,TI,V4SF,V2SF,V2SF\")])\n+   movhps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"ssemov,ssemov,ssemov,sselog,ssemov,ssemov\")\n+   (set_attr \"mode\" \"TI,TI,TI,TI,V4SF,V2SF\")])\n \n (define_expand \"vec_unpacku_hi_v16qi\"\n   [(match_operand:V8HI 0 \"register_operand\" \"\")"}, {"sha": "1430434422152a15417ac7be530f30371a4819af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed6fa12929896f7771ce9e1f5bef380001d74af7", "patch": "@@ -1,3 +1,8 @@\n+2008-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/37101\n+\t* gcc.target/i386/pr37101.c: New test.\n+\n 2008-08-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37103\n@@ -126,7 +131,7 @@\n \tloop.\n \tShould be vectorizable on targets that support vector unpack.\n \t* gcc.dg/vect/vect-widen-mult-u8.c,\n-\tgcc.dg/vect/wrapv-vect-reduc-dot-s8b.c,.\n+\tgcc.dg/vect/wrapv-vect-reduc-dot-s8b.c,\n \tgcc.dg/vect/wrapv-vect-reduc-dot-s8b.c: Likewise.\n \t* gcc.dg/vect/vect-35.c: Should be vectorizable on targets that\n \tsupport vector pack. Avoid vectorization of the init loop."}, {"sha": "8fd3bfc5f85e682498a1ef1e2f2a0e3caf02e5ec", "filename": "gcc/testsuite/gcc.target/i386/pr37101.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37101.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed6fa12929896f7771ce9e1f5bef380001d74af7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37101.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37101.c?ref=ed6fa12929896f7771ce9e1f5bef380001d74af7", "patch": "@@ -0,0 +1,64 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -ftree-vectorize -march=nocona\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern void *malloc (size_t);\n+extern void free (void *);\n+\n+typedef struct _Resource\n+{\n+  struct _Resource *next;\n+  unsigned int id;\n+} ResourceRec, *ResourcePtr;\n+\n+typedef struct _ClientResource\n+{\n+  ResourcePtr *resources;\n+  int elements;\n+  int buckets;\n+  int hashsize;\n+} ClientResourceRec;\n+\n+static ClientResourceRec clientTable[256];\n+\n+void\n+RebuildTable (int client)\n+{\n+  int j;\n+  ResourcePtr res, next;\n+  ResourcePtr **tails, *resources;\n+  ResourcePtr **tptr, *rptr;\n+\n+  j = 2 * clientTable[client].buckets;\n+\n+  tails =\n+    (ResourcePtr **) malloc ((unsigned long) (j * sizeof (ResourcePtr *)));\n+  resources =\n+    (ResourcePtr *) malloc ((unsigned long) (j * sizeof (ResourcePtr)));\n+\n+  for (rptr = resources, tptr = tails; --j >= 0; rptr++, tptr++)\n+    {\n+      *rptr = ((ResourcePtr) ((void *) 0));\n+      *tptr = rptr;\n+    }\n+\n+  clientTable[client].hashsize++;\n+  for (j = clientTable[client].buckets,\n+       rptr = clientTable[client].resources; --j >= 0; rptr++)\n+    {\n+      for (res = *rptr; res; res = next)\n+\t{\n+\t  next = res->next;\n+\t  res->next = ((ResourcePtr) ((void *) 0));\n+\t  tptr = &tails[Hash (client, res->id)];\n+\t  **tptr = res;\n+\t  *tptr = &res->next;\n+\t}\n+    }\n+  free ((void *) tails);\n+  clientTable[client].buckets *= 2;\n+  free ((void *) clientTable[client].resources);\n+  clientTable[client].resources = resources;\n+}\n+\n+/* { dg-final { scan-assembler-not \"movlps\" } } */"}]}