{"sha": "c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlMDc2NmI0MmVjNTkyZTVjYjBkZTAzYWYwMWViMjM3ZjI1YTFhYg==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2012-05-21T22:55:09Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2012-05-21T22:55:09Z"}, "message": "aix.h (FP_SAVE_INLINE, [...]): Delete.\n\n\t* aix.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete.\n\t* darwin.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete.\n\t* sysv4.h (FP_SAVE_INLINE, GP_SAVE_INLINE, V_SAVE_INLINE): Delete.\n\t* config/rs6000/rs6000.c (V_SAVE_INLINE): Delete.\n\t(rs6000_savres_strategy): Reimplement GP/FP/V_SAVE_INLINE logic.\n\tFor ELF targets, use out-of-line restores for -Os and any number\n\tof regs if the restore exits, and out-of-line gp save for two or\n\tmore regs.  Use save_reg_p to test for holes in reg restore set.\n\tReplace \"#if\" with \"if\".\n\nFrom-SVN: r187750", "tree": {"sha": "691c834a5842886078531dca76b8d38f452011bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/691c834a5842886078531dca76b8d38f452011bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbd72c2fe7aacbc3da1d9dcc6661a4e5bb523445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd72c2fe7aacbc3da1d9dcc6661a4e5bb523445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd72c2fe7aacbc3da1d9dcc6661a4e5bb523445"}], "stats": {"total": 145, "additions": 93, "deletions": 52}, "files": [{"sha": "82888a5b183b02b7fe064cce6a7b0a10e622d4ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "patch": "@@ -1,3 +1,15 @@\n+2012-05-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* aix.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete.\n+\t* darwin.h (FP_SAVE_INLINE, GP_SAVE_INLINE): Delete.\n+\t* sysv4.h (FP_SAVE_INLINE, GP_SAVE_INLINE, V_SAVE_INLINE): Delete.\n+\t* config/rs6000/rs6000.c (V_SAVE_INLINE): Delete.\n+\t(rs6000_savres_strategy): Reimplement GP/FP/V_SAVE_INLINE logic.\n+\tFor ELF targets, use out-of-line restores for -Os and any number\n+\tof regs if the restore exits, and out-of-line gp save for two or\n+\tmore regs.  Use save_reg_p to test for holes in reg restore set.\n+\tReplace \"#if\" with \"if\".\n+\n 2012-05-22  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (save_reg_p): New function."}, {"sha": "41421a0beca9b4d53e413927d9af888b34ba5f81", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler,\n    for IBM RS/6000 POWER running AIX.\n    Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010,\n-   2011 Free Software Foundation, Inc.\n+   2011, 2012 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -207,11 +207,6 @@\n   { \"link_syscalls\",            LINK_SYSCALLS_SPEC },\t\t\t\\\n   { \"link_libg\",                LINK_LIBG_SPEC }\n \n-/* Define cutoff for using external functions to save floating point.  */\n-#define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == 62 || (FIRST_REG) == 63)\n-/* And similarly for general purpose registers.  */\n-#define GP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) < 32)\n-\n #define PROFILE_HOOK(LABEL)   output_profile_hook (LABEL)\n \n /* No version of AIX fully supports AltiVec or 64-bit instructions in"}, {"sha": "3e311b40f54fd1b305ed51a6f44f392035c54ff8", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "patch": "@@ -1,6 +1,6 @@\n /* Target definitions for PowerPC running Darwin (Mac OS X).\n    Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2010,\n-   2011 Free Software Foundation, Inc.\n+   2011, 2012 Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n    This file is part of GCC.\n@@ -173,16 +173,6 @@ extern int darwin_emit_branch_islands;\n   (RS6000_ALIGN (crtl->outgoing_args_size, 16)\t\t\\\n    + (STACK_POINTER_OFFSET))\n \n-/* Define cutoff for using out-of-line functions to save registers.\n-   Currently on Darwin, we implement FP and GPR out-of-line-saves plus the\n-   special routine for 'save everything'.  */\n-\n-#undef FP_SAVE_INLINE\n-#define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) > 60 && (FIRST_REG) < 64)\n-\n-#undef GP_SAVE_INLINE\n-#define GP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) > 29 && (FIRST_REG) < 32)\n-\n /* Darwin uses a function call if everything needs to be saved/restored.  */\n \n #undef WORLD_SAVE_P"}, {"sha": "50aea638a73d32d197dcc58460b0efc344f54f41", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 78, "deletions": 21, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "patch": "@@ -17237,10 +17237,6 @@ enum {\n   REST_INLINE_VRS = 0x200\n };\n \n-#ifndef V_SAVE_INLINE\n-#define V_SAVE_INLINE(FIRST_REG) 1\n-#endif\n-\n static int\n rs6000_savres_strategy (rs6000_stack_t *info,\n \t\t\tbool using_static_chain_p)\n@@ -17262,34 +17258,87 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n \t\t | SAVE_INLINE_VRS | REST_INLINE_VRS);\n \n   if (info->first_fp_reg_save == 64\n-      || FP_SAVE_INLINE (info->first_fp_reg_save)\n       /* The out-of-line FP routines use double-precision stores;\n \t we can't use those routines if we don't have such stores.  */\n       || (TARGET_HARD_FLOAT && !TARGET_DOUBLE_FLOAT)\n       || global_regs_p (info->first_fp_reg_save, 64))\n     strategy |= SAVE_INLINE_FPRS | REST_INLINE_FPRS;\n \n   if (info->first_gp_reg_save == 32\n-      || GP_SAVE_INLINE (info->first_gp_reg_save)\n       || (!(strategy & SAVRES_MULTIPLE)\n \t  && global_regs_p (info->first_gp_reg_save, 32)))\n     strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n \n   if (info->first_altivec_reg_save == LAST_ALTIVEC_REGNO + 1\n-      || V_SAVE_INLINE (info->first_altivec_reg_save)\n       || global_regs_p (info->first_altivec_reg_save, LAST_ALTIVEC_REGNO + 1))\n     strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n \n+  /* Define cutoff for using out-of-line functions to save registers.  */\n+  if (DEFAULT_ABI == ABI_V4 || TARGET_ELF)\n+    {\n+      if (!optimize_size)\n+\t{\n+\t  strategy |= SAVE_INLINE_FPRS | REST_INLINE_FPRS;\n+\t  strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n+\t  strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n+\t}\n+      else\n+\t{\n+\t  /* Prefer out-of-line restore if it will exit.  */\n+\t  if (info->first_fp_reg_save > 61)\n+\t    strategy |= SAVE_INLINE_FPRS;\n+\t  if (info->first_gp_reg_save > 29)\n+\t    {\n+\t      if (info->first_fp_reg_save == 64)\n+\t\tstrategy |= SAVE_INLINE_GPRS;\n+\t      else\n+\t\tstrategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n+\t    }\n+\t  if (info->first_altivec_reg_save == LAST_ALTIVEC_REGNO)\n+\t    strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n+\t}\n+    }\n+  else if (DEFAULT_ABI == ABI_DARWIN)\n+    {\n+      if (info->first_fp_reg_save > 60)\n+\tstrategy |= SAVE_INLINE_FPRS | REST_INLINE_FPRS;\n+      if (info->first_gp_reg_save > 29)\n+\tstrategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n+      strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n+    }\n+  else\n+    {\n+      gcc_checking_assert (DEFAULT_ABI == ABI_AIX);\n+      if (info->first_fp_reg_save > 61)\n+\tstrategy |= SAVE_INLINE_FPRS | REST_INLINE_FPRS;\n+      strategy |= SAVE_INLINE_GPRS | REST_INLINE_GPRS;\n+      strategy |= SAVE_INLINE_VRS | REST_INLINE_VRS;\n+    }\n+\n   /* Don't bother to try to save things out-of-line if r11 is occupied\n      by the static chain.  It would require too much fiddling and the\n      static chain is rarely used anyway.  FPRs are saved w.r.t the stack\n      pointer on Darwin, and AIX uses r1 or r12.  */\n   if (using_static_chain_p && DEFAULT_ABI != ABI_AIX)\n-    strategy |= ((DEFAULT_ABI == ABI_DARWIN\n-\t\t  ? 0 : SAVE_INLINE_FPRS | REST_INLINE_FPRS)\n+    strategy |= ((DEFAULT_ABI == ABI_DARWIN ? 0 : SAVE_INLINE_FPRS)\n \t\t | SAVE_INLINE_GPRS\n \t\t | SAVE_INLINE_VRS | REST_INLINE_VRS);\n \n+  /* We can only use the out-of-line routines to restore if we've\n+     saved all the registers from first_fp_reg_save in the prologue.\n+     Otherwise, we risk loading garbage.  */\n+  if ((strategy & (SAVE_INLINE_FPRS | REST_INLINE_FPRS)) == SAVE_INLINE_FPRS)\n+    {\n+      int i;\n+\n+      for (i = info->first_fp_reg_save; i < 64; i++)\n+\tif (!save_reg_p (i))\n+\t  {\n+\t    strategy |= REST_INLINE_FPRS;\n+\t    break;\n+\t  }\n+    }\n+\n   /* If we are going to use store multiple, then don't even bother\n      with the out-of-line routines, since the store-multiple\n      instruction will always be smaller.  */\n@@ -17319,33 +17368,41 @@ rs6000_savres_strategy (rs6000_stack_t *info,\n \t  || info->first_fp_reg_save != 64))\n     strategy |= REST_INLINE_GPRS;\n \n-  /* We can only use load multiple or the out-of-line routines to\n-     restore if we've used store multiple or out-of-line routines\n-     in the prologue, i.e. if we've saved all the registers from\n-     first_gp_reg_save.  Otherwise, we risk loading garbage.  */\n-  if ((strategy & (SAVE_INLINE_GPRS | SAVRES_MULTIPLE)) == SAVE_INLINE_GPRS)\n-    strategy |= REST_INLINE_GPRS;\n-\n   /* Saving CR interferes with the exit routines used on the SPE, so\n      just punt here.  */\n   if (TARGET_SPE_ABI\n       && info->spe_64bit_regs_used\n       && info->cr_save_p)\n     strategy |= REST_INLINE_GPRS;\n \n-#if defined (POWERPC_LINUX) || defined (POWERPC_FREEBSD)\n-  if (TARGET_64BIT)\n+  /* We can only use load multiple or the out-of-line routines to\n+     restore if we've used store multiple or out-of-line routines\n+     in the prologue, i.e. if we've saved all the registers from\n+     first_gp_reg_save.  Otherwise, we risk loading garbage.  */\n+  if ((strategy & (SAVE_INLINE_GPRS | REST_INLINE_GPRS | SAVRES_MULTIPLE))\n+      == SAVE_INLINE_GPRS)\n+    {\n+      int i;\n+\n+      for (i = info->first_gp_reg_save; i < 32; i++)\n+\tif (!save_reg_p (i))\n+\t  {\n+\t    strategy |= REST_INLINE_GPRS;\n+\t    break;\n+\t  }\n+    }\n+\n+  if (TARGET_ELF && TARGET_64BIT)\n     {\n       if (!(strategy & SAVE_INLINE_FPRS))\n \tstrategy |= SAVE_NOINLINE_FPRS_SAVES_LR;\n       else if (!(strategy & SAVE_INLINE_GPRS)\n \t       && info->first_fp_reg_save == 64)\n \tstrategy |= SAVE_NOINLINE_GPRS_SAVES_LR;\n     }\n-#else\n-  if (TARGET_AIX && !(strategy & REST_INLINE_FPRS))\n+  else if (TARGET_AIX && !(strategy & REST_INLINE_FPRS))\n     strategy |= REST_NOINLINE_FPRS_DOESNT_RESTORE_LR;\n-#endif\n+\n   if (TARGET_MACHO && !(strategy & SAVE_INLINE_FPRS))\n     strategy |= SAVE_NOINLINE_FPRS_SAVES_LR;\n "}, {"sha": "204f394cb59b24dadb061b3582144f711f098d5a", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e0766b42ec592e5cb0de03af01eb237f25a1ab/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=c5e0766b42ec592e5cb0de03af01eb237f25a1ab", "patch": "@@ -1,6 +1,6 @@\n /* Target definitions for GNU compiler for PowerPC running System V.4\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n-   2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Cygnus Support.\n \n@@ -243,19 +243,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define\tBYTES_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n #define\tWORDS_BIG_ENDIAN (TARGET_BIG_ENDIAN)\n \n-/* Define cutoff for using external functions to save floating point.\n-   When optimizing for size, use external functions when profitable.  */\n-#define FP_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == 62\t\t\t\\\n-\t\t\t\t   || (FIRST_REG) == 63\t\t\t\\\n-\t\t\t\t   || !optimize_size)\n-\n-/* And similarly for general purpose registers.  */\n-#define GP_SAVE_INLINE(FIRST_REG) (!optimize_size)\n-\n-/* And vector registers.  */\n-#define V_SAVE_INLINE(FIRST_REG) ((FIRST_REG) == LAST_ALTIVEC_REGNO\t\\\n-\t\t\t\t  || !optimize_size)\n-\n /* Put jump tables in read-only memory, rather than in .text.  */\n #define JUMP_TABLES_IN_TEXT_SECTION 0\n "}]}