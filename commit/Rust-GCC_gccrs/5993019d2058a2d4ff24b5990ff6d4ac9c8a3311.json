{"sha": "5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5MzAxOWQyMDU4YTJkNGZmMjRiNTk5MGZmNmQ0YWM5YzhhMzMxMQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-08-21T21:17:48Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-08-21T21:17:48Z"}, "message": "cppfiles.c (stack_include_file): Don't handle -H here.\n\n\t* cppfiles.c (stack_include_file): Don't handle -H here.\n\t* cppinit.c (cpp_start_read): Set include tracing after\n\tcpp_post_options and after stacking the main file.\n\t* line-map.c (trace_include): New.\n\t(init_line_maps, add_line_map): Update.\n\t* line-map.h (struct line_maps): New member trace_includes.\n\nFrom-SVN: r45084", "tree": {"sha": "2dfd14ccaad28936c874d7de1b8e61b3d1be6abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dfd14ccaad28936c874d7de1b8e61b3d1be6abd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/comments", "author": null, "committer": null, "parents": [{"sha": "e5eba70ac7f7e76bbc784eee6191e7464694dba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5eba70ac7f7e76bbc784eee6191e7464694dba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5eba70ac7f7e76bbc784eee6191e7464694dba1"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "04b2d0c5850a7b9f2fb0e8b68fd3cc15cf9d4a88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "patch": "@@ -1,3 +1,12 @@\n+2001-08-21  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cppfiles.c (stack_include_file): Don't handle -H here.\n+\t* cppinit.c (cpp_start_read): Set include tracing after\n+\tcpp_post_options and after stacking the main file.\n+\t* line-map.c (trace_include): New.\n+\t(init_line_maps, add_line_map): Update.\n+\t* line-map.h (struct line_maps): New member trace_includes.\n+\n 2001-08-21  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cppfiles.c (stack_include_file): Harmonize system headerness tests."}, {"sha": "1d60d3672579f581398991210be54f121bb46259", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "patch": "@@ -313,18 +313,8 @@ stack_include_file (pfile, inc)\n     }\n \n   if (pfile->buffer)\n-    {\n-      /* We don't want MI guard advice for the main file.  */\n-      inc->include_count++;\n-\n-      /* Handle -H option.  */\n-      if (CPP_OPTION (pfile, print_include_names))\n-\t{\n-\t  for (fp = pfile->buffer; fp; fp = fp->prev)\n-\t    putc ('.', stderr);\n-\t  fprintf (stderr, \" %s\\n\", inc->name);\n-\t}\n-    }\n+    /* We don't want MI guard advice for the main file.  */\n+    inc->include_count++;\n \n   /* Push a buffer.  */\n   fp = cpp_push_buffer (pfile, inc->buffer, inc->st.st_size, BUF_FILE, 0);"}, {"sha": "b57910cb3e6df0d6cefa628ac256d5993a658141", "filename": "gcc/cppinit.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "patch": "@@ -939,6 +939,11 @@ cpp_start_read (pfile, fname)\n   if (!_cpp_read_file (pfile, fname))\n     return 0;\n \n+  /* Set this after cpp_post_options so the client can change the\n+     option if it wishes, and after stacking the main file so we don't\n+     trace the main file.  */\n+  pfile->line_maps.trace_includes = CPP_OPTION (pfile, print_include_names);\n+\n   /* Install builtins and process command line macros etc. in the order\n      they appeared, but only if not already preprocessed.  */\n   if (! CPP_OPTION (pfile, preprocessed))"}, {"sha": "b2809b1510c8ee4f861b481ad645c76476675d34", "filename": "gcc/line-map.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fline-map.c?ref=5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "patch": "@@ -25,6 +25,9 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #include \"line-map.h\"\n #include \"intl.h\"\n \n+static void trace_include\n+  PARAMS ((const struct line_maps *, const struct line_map *));\n+\n /* Initialize a line map set.  */\n \n void\n@@ -35,6 +38,7 @@ init_line_maps (set)\n   set->allocated = 0;\n   set->used = 0;\n   set->last_listed = -1;\n+  set->trace_includes = false;\n }\n \n /* Free a line map set.  */\n@@ -136,8 +140,11 @@ add_line_map (set, reason, sysp, from_line, to_file, to_line)\n     map->included_from = map[-1].included_from;\n   else if (reason == LC_LEAVE)\n     map->included_from = INCLUDED_FROM (set, map - 1)->included_from;\n-\n   set->used++;\n+\n+  if (reason == LC_ENTER && set->trace_includes)\n+    trace_include (set, map);\n+\n   return map;\n }\n \n@@ -207,3 +214,17 @@ print_containing_files (set, map)\n \n   fputs (\":\\n\", stderr);\n }\n+\n+/* Print an include trace, for e.g. the -H option of the preprocessor.  */\n+\n+static void\n+trace_include (set, map)\n+     const struct line_maps *set;\n+     const struct line_map *map;\n+{\n+  const struct line_map *m;\n+\n+  for (m = map; !MAIN_FILE_P (m); m = INCLUDED_FROM (set, m))\n+    putc ('.', stderr);\n+  fprintf (stderr, \" %s\\n\", map->to_file);\n+}"}, {"sha": "a226a1fdfc20501eb88ce7d00003097bcf3f87b7", "filename": "gcc/line-map.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5993019d2058a2d4ff24b5990ff6d4ac9c8a3311/gcc%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fline-map.h?ref=5993019d2058a2d4ff24b5990ff6d4ac9c8a3311", "patch": "@@ -59,6 +59,9 @@ struct line_maps\n      LAST_LISTED as the topmost including file.  -1 indicates nothing\n      has been listed yet.  */\n   int last_listed;\n+\n+  /* If true, prints an include trace a la -H.  */\n+  bool trace_includes;\n };\n \n /* Initialize a line map set.  */"}]}