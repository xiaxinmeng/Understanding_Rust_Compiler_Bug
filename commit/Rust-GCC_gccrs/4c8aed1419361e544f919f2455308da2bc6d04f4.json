{"sha": "4c8aed1419361e544f919f2455308da2bc6d04f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM4YWVkMTQxOTM2MWU1NDRmOTE5ZjI0NTUzMDhkYTJiYzZkMDRmNA==", "commit": {"author": {"name": "Stephane Carrez", "email": "stcarrez@nerim.fr", "date": "2002-07-05T21:59:17Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2002-07-05T21:59:17Z"}, "message": "m68hc11.md (\"*ashlsi3\"): Avoid saving y if we know it is dead.\n\n\t* config/m68hc11/m68hc11.md (\"*ashlsi3\"): Avoid saving y if we know\n\tit is dead.\n\t(\"*ashrsi3\"): Likewise.\n\t(\"*lshrsi3\"): Likewise.\n\nFrom-SVN: r55270", "tree": {"sha": "d162b2f3347296f8dac95d028bc71e6d4d09f9e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d162b2f3347296f8dac95d028bc71e6d4d09f9e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c8aed1419361e544f919f2455308da2bc6d04f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c8aed1419361e544f919f2455308da2bc6d04f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c8aed1419361e544f919f2455308da2bc6d04f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c8aed1419361e544f919f2455308da2bc6d04f4/comments", "author": null, "committer": null, "parents": [{"sha": "99ed68ea7fc100ae77cde16219bafc4c693a7d0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99ed68ea7fc100ae77cde16219bafc4c693a7d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99ed68ea7fc100ae77cde16219bafc4c693a7d0f"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "0034982ba400eec35cc530e7c55609e5254e27f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8aed1419361e544f919f2455308da2bc6d04f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8aed1419361e544f919f2455308da2bc6d04f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c8aed1419361e544f919f2455308da2bc6d04f4", "patch": "@@ -1,9 +1,16 @@\n+2002-07-05  Stephane Carrez  <stcarrez@nerim.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"*ashlsi3\"): Avoid saving y if we know\n+\tit is dead.\n+\t(\"*ashrsi3\"): Likewise.\n+\t(\"*lshrsi3\"): Likewise.\n+\n 2002-07-05  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* genautomata.c (output_max_insn_queue_index_def): Take latencies\n \tinto account.\n \n-2002-07-06  Stephane Carrez  <stcarrez@nerim.fr>\n+2002-07-05  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.md (peephole2): New peephole2 to optimize\n \taddress computation and memory moves."}, {"sha": "379bee58219f73b4fb31d2523b4534c78927f126", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c8aed1419361e544f919f2455308da2bc6d04f4/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c8aed1419361e544f919f2455308da2bc6d04f4/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=4c8aed1419361e544f919f2455308da2bc6d04f4", "patch": "@@ -4697,16 +4697,18 @@\n   if (!Y_REG_P (operands[2]))\n     {\n       rtx ops[1];\n+      int y_dead = dead_register_here (insn, iy_reg);\n \n       ops[0] = operands[1];\n-      output_asm_insn (\\\"pshy\\\", operands);\n-      if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+      if (y_dead == 0)\n \t{\n-\t  ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n+          output_asm_insn (\\\"pshy\\\", operands);\n+          if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+\t    ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n \t}\n       output_asm_insn (\\\"ldy\\\\t%0\\\", ops);\n       output_asm_insn (\\\"bsr\\\\t___ashlsi3\\\", operands);\n-      return \\\"puly\\\";\n+      return y_dead == 0 ? \\\"puly\\\" : \\\"\\\";\n     }\n   return \\\"bsr\\\\t___ashlsi3\\\";\n }\")\n@@ -5105,16 +5107,18 @@\n   if (!Y_REG_P (operands[2]))\n     {\n       rtx ops[1];\n+      int y_dead = dead_register_here (insn, iy_reg);\n \n       ops[0] = operands[1];\n-      output_asm_insn (\\\"pshy\\\", operands);\n-      if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+      if (y_dead == 0)\n \t{\n-\t  ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n+          output_asm_insn (\\\"pshy\\\", operands);\n+          if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+\t    ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n \t}\n       output_asm_insn (\\\"ldy\\\\t%0\\\", ops);\n       output_asm_insn (\\\"bsr\\\\t___ashrsi3\\\", operands);\n-      return \\\"puly\\\";\n+      return y_dead == 0 ? \\\"puly\\\" : \\\"\\\";\n     }\n   return \\\"bsr\\\\t___ashrsi3\\\";\n }\")\n@@ -5449,16 +5453,18 @@\n   if (!Y_REG_P (operands[2]))\n     {\n       rtx ops[1];\n+      int y_dead = dead_register_here (insn, iy_reg);\n \n       ops[0] = operands[1];\n-      output_asm_insn (\\\"pshy\\\", operands);\n-      if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+      if (y_dead == 0)\n \t{\n-\t  ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n+          output_asm_insn (\\\"pshy\\\", operands);\n+          if (reg_mentioned_p (stack_pointer_rtx, operands[1]))\n+\t    ops[0] = adjust_address (operands[1], GET_MODE (operands[1]), 2);\n \t}\n       output_asm_insn (\\\"ldy\\\\t%0\\\", ops);\n       output_asm_insn (\\\"bsr\\\\t___lshrsi3\\\", operands);\n-      return \\\"puly\\\";\n+      return y_dead == 0 ? \\\"puly\\\" : \\\"\\\";\n     }\n   return \\\"bsr\\\\t___lshrsi3\\\";\n }\")"}]}