{"sha": "ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEzMTI1ZDc4MDBiMWI3Zjk2OGViZGZhMjRlNGI4ZWMyNjJmNmIxYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-12-13T11:26:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-12-13T11:26:14Z"}, "message": "vect1.ad[sb]: Add more tests.\n\n\t* gnat.dg/vect1.ad[sb]: Add more tests.\n\t* gnat.dg/vect2.ad[sb]: Likewise.\n\t* gnat.dg/vect3.ad[sb]: Likewise.\n\t* gnat.dg/vect4.ad[sb]: Likewise.\n\t* gnat.dg/vect5.ad[sb]: Likewise.\n\t* gnat.dg/vect6.ad[sb]: Likewise.\n\nFrom-SVN: r182276", "tree": {"sha": "0919f2324f2824b0897fca150e9ba82d24fc6dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0919f2324f2824b0897fca150e9ba82d24fc6dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/comments", "author": null, "committer": null, "parents": [{"sha": "ddf2e1095337e78d686460b25239a02ac7ae13f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddf2e1095337e78d686460b25239a02ac7ae13f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddf2e1095337e78d686460b25239a02ac7ae13f7"}], "stats": {"total": 261, "additions": 255, "deletions": 6}, "files": [{"sha": "a87d4dc280b419a79de01fd9362a551f13c59b3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -1,3 +1,12 @@\n+2011-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/vect1.ad[sb]: Add more tests.\n+\t* gnat.dg/vect2.ad[sb]: Likewise.\n+\t* gnat.dg/vect3.ad[sb]: Likewise.\n+\t* gnat.dg/vect4.ad[sb]: Likewise.\n+\t* gnat.dg/vect5.ad[sb]: Likewise.\n+\t* gnat.dg/vect6.ad[sb]: Likewise.\n+\n 2011-12-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/51495"}, {"sha": "3e1cfeeeda81b6f553407cbb7bdb3a5bda1a25d8", "filename": "gcc/testsuite/gnat.dg/vect1.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect1.adb?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -12,6 +12,13 @@ package body Vect1 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Varray; R : out Varray) is\n+   begin\n+      for I in X'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Varray; R : not null access Varray) is\n    begin\n       for I in X'Range loop\n@@ -29,6 +36,13 @@ package body Vect1 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Sarray; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Sarray; R : not null access Sarray) is\n    begin\n       for I in Sarray'Range loop\n@@ -46,6 +60,13 @@ package body Vect1 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray1; R : out Darray1) is\n+   begin\n+      for I in Darray1'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray1; R : not null access Darray1) is\n    begin\n       for I in Darray1'Range loop\n@@ -63,6 +84,13 @@ package body Vect1 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray2; R : out Darray2) is\n+   begin\n+      for I in Darray2'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray2; R : not null access Darray2) is\n    begin\n       for I in Darray2'Range loop\n@@ -80,6 +108,13 @@ package body Vect1 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray3; R : out Darray3) is\n+   begin\n+      for I in Darray3'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray3; R : not null access Darray3) is\n    begin\n       for I in Darray3'Range loop\n@@ -89,5 +124,5 @@ package body Vect1 is\n \n end Vect1;\n \n--- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\"  } }\n+-- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 15 \"vect\"  } }\n -- { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "00e0f2de86cde96107ac6b445d82ac3e00133cdd", "filename": "gcc/testsuite/gnat.dg/vect1.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect1.ads?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -8,6 +8,7 @@ package Vect1 is\n    for Varray'Alignment use 16;\n \n    function \"+\" (X, Y : Varray) return Varray;\n+   procedure Add (X, Y : Varray; R : out Varray);\n    procedure Add (X, Y : not null access Varray; R : not null access Varray);\n \n \n@@ -16,27 +17,31 @@ package Vect1 is\n    for Sarray'Alignment use 16;\n \n    function \"+\" (X, Y : Sarray) return Sarray;\n+   procedure Add (X, Y : Sarray; R : out Sarray);\n    procedure Add (X, Y : not null access Sarray; R : not null access Sarray);\n \n \n    type Darray1 is array (1 .. Vect1_Pkg.N) of Long_Float;\n    for Darray1'Alignment use 16;\n \n    function \"+\" (X, Y : Darray1) return Darray1;\n+   procedure Add (X, Y : Darray1; R : out Darray1);\n    procedure Add (X, Y : not null access Darray1; R : not null access Darray1);\n \n \n    type Darray2 is array (Vect1_Pkg.K .. 4) of Long_Float;\n    for Darray2'Alignment use 16;\n \n    function \"+\" (X, Y : Darray2) return Darray2;\n+   procedure Add (X, Y : Darray2; R : out Darray2);\n    procedure Add (X, Y : not null access Darray2; R : not null access Darray2);\n \n \n    type Darray3 is array (Vect1_Pkg.K .. Vect1_Pkg.N) of Long_Float;\n    for Darray3'Alignment use 16;\n \n    function \"+\" (X, Y : Darray3) return Darray3;\n+   procedure Add (X, Y : Darray3; R : out Darray3);\n    procedure Add (X, Y : not null access Darray3; R : not null access Darray3);\n \n end Vect1;"}, {"sha": "c6524c8f776977366ce87cfda7385d95797d67a8", "filename": "gcc/testsuite/gnat.dg/vect2.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect2.adb?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -12,6 +12,13 @@ package body Vect2 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Varray; R : out Varray) is\n+   begin\n+      for I in X'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Varray; R : not null access Varray) is\n    begin\n       for I in X'Range loop\n@@ -29,6 +36,13 @@ package body Vect2 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Sarray; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Sarray; R : not null access Sarray) is\n    begin\n       for I in Sarray'Range loop\n@@ -46,6 +60,13 @@ package body Vect2 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray1; R : out Darray1) is\n+   begin\n+      for I in Darray1'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray1; R : not null access Darray1) is\n    begin\n       for I in Darray1'Range loop\n@@ -63,6 +84,13 @@ package body Vect2 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray2; R : out Darray2) is\n+   begin\n+      for I in Darray2'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray2; R : not null access Darray2) is\n    begin\n       for I in Darray2'Range loop\n@@ -80,6 +108,13 @@ package body Vect2 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray3; R : out Darray3) is\n+   begin\n+      for I in Darray3'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray3; R : not null access Darray3) is\n    begin\n       for I in Darray3'Range loop\n@@ -89,5 +124,5 @@ package body Vect2 is\n \n end Vect2;\n \n--- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\"  } }\n+-- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 15 \"vect\"  } }\n -- { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "bbd22dbc7c2b4b2115d9852fd06964acdcb1b2fc", "filename": "gcc/testsuite/gnat.dg/vect2.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect2.ads?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -8,6 +8,7 @@ package Vect2 is\n    for Varray'Alignment use 16;\n \n    function \"+\" (X, Y : Varray) return Varray;\n+   procedure Add (X, Y : Varray; R : out Varray);\n    procedure Add (X, Y : not null access Varray; R : not null access Varray);\n \n \n@@ -16,27 +17,31 @@ package Vect2 is\n    for Sarray'Alignment use 16;\n \n    function \"+\" (X, Y : Sarray) return Sarray;\n+   procedure Add (X, Y : Sarray; R : out Sarray);\n    procedure Add (X, Y : not null access Sarray; R : not null access Sarray);\n \n \n    type Darray1 is array (Positive(1) .. Vect2_Pkg.N) of Long_Float;\n    for Darray1'Alignment use 16;\n \n    function \"+\" (X, Y : Darray1) return Darray1;\n+   procedure Add (X, Y : Darray1; R : out Darray1);\n    procedure Add (X, Y : not null access Darray1; R : not null access Darray1);\n \n \n    type Darray2 is array (Vect2_Pkg.K .. Positive(4)) of Long_Float;\n    for Darray2'Alignment use 16;\n \n    function \"+\" (X, Y : Darray2) return Darray2;\n+   procedure Add (X, Y : Darray2; R : out Darray2);\n    procedure Add (X, Y : not null access Darray2; R : not null access Darray2);\n \n \n    type Darray3 is array (Vect2_Pkg.K .. Vect2_Pkg.N) of Long_Float;\n    for Darray3'Alignment use 16;\n \n    function \"+\" (X, Y : Darray3) return Darray3;\n+   procedure Add (X, Y : Darray3; R : out Darray3);\n    procedure Add (X, Y : not null access Darray3; R : not null access Darray3);\n \n end Vect2;"}, {"sha": "38d78af4b807980595378e44f9a478088bb5ac2c", "filename": "gcc/testsuite/gnat.dg/vect3.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect3.adb?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -12,6 +12,13 @@ package body Vect3 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Varray; R : out Varray) is\n+   begin\n+      for I in X'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Varray; R : not null access Varray) is\n    begin\n       for I in X'Range loop\n@@ -29,6 +36,13 @@ package body Vect3 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Sarray; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Sarray; R : not null access Sarray) is\n    begin\n       for I in Sarray'Range loop\n@@ -46,6 +60,13 @@ package body Vect3 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray1; R : out Darray1) is\n+   begin\n+      for I in Darray1'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray1; R : not null access Darray1) is\n    begin\n       for I in Darray1'Range loop\n@@ -63,6 +84,13 @@ package body Vect3 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray2; R : out Darray2) is\n+   begin\n+      for I in Darray2'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray2; R : not null access Darray2) is\n    begin\n       for I in Darray2'Range loop\n@@ -80,6 +108,13 @@ package body Vect3 is\n       return R;\n    end;\n \n+   procedure Add (X, Y : Darray3; R : out Darray3) is\n+   begin\n+      for I in Darray3'Range loop\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n    procedure Add (X, Y : not null access Darray3; R : not null access Darray3) is\n    begin\n       for I in Darray3'Range loop\n@@ -89,5 +124,5 @@ package body Vect3 is\n \n end Vect3;\n \n--- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\"  } }\n+-- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 15 \"vect\"  } }\n -- { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "871484dfaf769ce481eba056f8ffc2a2acaef31d", "filename": "gcc/testsuite/gnat.dg/vect3.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect3.ads?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -8,6 +8,7 @@ package Vect3 is\n    for Varray'Alignment use 16;\n \n    function \"+\" (X, Y : Varray) return Varray;\n+   procedure Add (X, Y : Varray; R : out Varray);\n    procedure Add (X, Y : not null access Varray; R : not null access Varray);\n \n \n@@ -17,27 +18,31 @@ package Vect3 is\n    for Sarray'Alignment use 16;\n \n    function \"+\" (X, Y : Sarray) return Sarray;\n+   procedure Add (X, Y : Sarray; R : out Sarray);\n    procedure Add (X, Y : not null access Sarray; R : not null access Sarray);\n \n \n    type Darray1 is array (Vect3_Pkg.Index_Type(1) .. Vect3_Pkg.N) of Long_Float;\n    for Darray1'Alignment use 16;\n \n    function \"+\" (X, Y : Darray1) return Darray1;\n+   procedure Add (X, Y : Darray1; R : out Darray1);\n    procedure Add (X, Y : not null access Darray1; R : not null access Darray1);\n \n \n    type Darray2 is array (Vect3_Pkg.K .. Vect3_Pkg.Index_Type(4)) of Long_Float;\n    for Darray2'Alignment use 16;\n \n    function \"+\" (X, Y : Darray2) return Darray2;\n+   procedure Add (X, Y : Darray2; R : out Darray2);\n    procedure Add (X, Y : not null access Darray2; R : not null access Darray2);\n \n \n    type Darray3 is array (Vect3_Pkg.K .. Vect3_Pkg.N) of Long_Float;\n    for Darray3'Alignment use 16;\n \n    function \"+\" (X, Y : Darray3) return Darray3;\n+   procedure Add (X, Y : Darray3; R : out Darray3);\n    procedure Add (X, Y : not null access Darray3; R : not null access Darray3);\n \n end Vect3;"}, {"sha": "d010049a893b4d2359bee221ffd69abb26bff5d9", "filename": "gcc/testsuite/gnat.dg/vect4.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect4.adb?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -12,6 +12,13 @@ package body Vect4 is\n       return R;\n    end;\n \n+   procedure Add (X : Varray; Y : Long_Float; R : out Varray) is\n+   begin\n+      for I in X'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Varray; Y : Long_Float; R : not null access Varray) is\n    begin\n       for I in X'Range loop\n@@ -29,6 +36,13 @@ package body Vect4 is\n       return R;\n    end;\n \n+   procedure Add (X : Sarray; Y : Long_Float; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Sarray; Y : Long_Float; R : not null access Sarray) is\n    begin\n       for I in Sarray'Range loop\n@@ -46,6 +60,13 @@ package body Vect4 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray1; Y : Long_Float; R : out Darray1) is\n+   begin\n+      for I in Darray1'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray1; Y : Long_Float; R : not null access Darray1) is\n    begin\n       for I in Darray1'Range loop\n@@ -63,6 +84,13 @@ package body Vect4 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray2; Y : Long_Float; R : out Darray2) is\n+   begin\n+      for I in Darray2'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray2; Y : Long_Float; R : not null access Darray2) is\n    begin\n       for I in Darray2'Range loop\n@@ -80,6 +108,13 @@ package body Vect4 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray3; Y : Long_Float; R : out Darray3) is\n+   begin\n+      for I in Darray3'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray3; Y : Long_Float; R : not null access Darray3) is\n    begin\n       for I in Darray3'Range loop\n@@ -89,5 +124,5 @@ package body Vect4 is\n \n end Vect4;\n \n--- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\"  } }\n+-- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 15 \"vect\"  } }\n -- { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "855a33480a6c5564671a82ec7d06d3256b809800", "filename": "gcc/testsuite/gnat.dg/vect4.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect4.ads?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -8,6 +8,7 @@ package Vect4 is\n    for Varray'Alignment use 16;\n \n    function \"+\" (X : Varray; Y : Long_Float) return Varray;\n+   procedure Add (X : Varray; Y : Long_Float; R : out Varray);\n    procedure Add (X : not null access Varray; Y : Long_Float; R : not null access Varray);\n \n \n@@ -16,27 +17,31 @@ package Vect4 is\n    for Sarray'Alignment use 16;\n \n    function \"+\" (X : Sarray; Y : Long_Float) return Sarray;\n+   procedure Add (X : Sarray; Y : Long_Float; R : out Sarray);\n    procedure Add (X : not null access Sarray; Y : Long_Float; R : not null access Sarray);\n \n \n    type Darray1 is array (1 .. Vect4_Pkg.N) of Long_Float;\n    for Darray1'Alignment use 16;\n \n    function \"+\" (X : Darray1; Y : Long_Float) return Darray1;\n+   procedure Add (X : Darray1; Y : Long_Float; R : out Darray1);\n    procedure Add (X : not null access Darray1; Y : Long_Float; R : not null access Darray1);\n \n \n    type Darray2 is array (Vect4_Pkg.K .. 4) of Long_Float;\n    for Darray2'Alignment use 16;\n \n    function \"+\" (X : Darray2; Y : Long_Float) return Darray2;\n+   procedure Add (X : Darray2; Y : Long_Float; R : out Darray2);\n    procedure Add (X : not null access Darray2; Y : Long_Float; R : not null access Darray2);\n \n \n    type Darray3 is array (Vect4_Pkg.K .. Vect4_Pkg.N) of Long_Float;\n    for Darray3'Alignment use 16;\n \n    function \"+\" (X : Darray3; Y : Long_Float) return Darray3;\n+   procedure Add (X : Darray3; Y : Long_Float; R : out Darray3);\n    procedure Add (X : not null access Darray3; Y : Long_Float; R : not null access Darray3);\n \n end Vect4;"}, {"sha": "596cb077a5bf093ebda92ecacc0676021c7c2aba", "filename": "gcc/testsuite/gnat.dg/vect5.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect5.adb?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -12,6 +12,13 @@ package body Vect5 is\n       return R;\n    end;\n \n+   procedure Add (X : Varray; Y : Long_Float; R : out Varray) is\n+   begin\n+      for I in X'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Varray; Y : Long_Float; R : not null access Varray) is\n    begin\n       for I in X'Range loop\n@@ -29,6 +36,13 @@ package body Vect5 is\n       return R;\n    end;\n \n+   procedure Add (X : Sarray; Y : Long_Float; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Sarray; Y : Long_Float; R : not null access Sarray) is\n    begin\n       for I in Sarray'Range loop\n@@ -46,6 +60,13 @@ package body Vect5 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray1; Y : Long_Float; R : out Darray1) is\n+   begin\n+      for I in Darray1'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray1; Y : Long_Float; R : not null access Darray1) is\n    begin\n       for I in Darray1'Range loop\n@@ -63,6 +84,13 @@ package body Vect5 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray2; Y : Long_Float; R : out Darray2) is\n+   begin\n+      for I in Darray2'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray2; Y : Long_Float; R : not null access Darray2) is\n    begin\n       for I in Darray2'Range loop\n@@ -80,6 +108,13 @@ package body Vect5 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray3; Y : Long_Float; R : out Darray3) is\n+   begin\n+      for I in Darray3'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray3; Y : Long_Float; R : not null access Darray3) is\n    begin\n       for I in Darray3'Range loop\n@@ -89,5 +124,5 @@ package body Vect5 is\n \n end Vect5;\n \n--- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\"  } }\n+-- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 15 \"vect\"  } }\n -- { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "54edd81c7258a5b080fa7f6b9cc7a7b7ddfc931d", "filename": "gcc/testsuite/gnat.dg/vect5.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect5.ads?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -8,6 +8,7 @@ package Vect5 is\n    for Varray'Alignment use 16;\n \n    function \"+\" (X : Varray; Y : Long_Float) return Varray;\n+   procedure Add (X : Varray; Y : Long_Float; R : out Varray);\n    procedure Add (X : not null access Varray; Y : Long_Float; R : not null access Varray);\n \n \n@@ -16,27 +17,31 @@ package Vect5 is\n    for Sarray'Alignment use 16;\n \n    function \"+\" (X : Sarray; Y : Long_Float) return Sarray;\n+   procedure Add (X : Sarray; Y : Long_Float; R : out Sarray);\n    procedure Add (X : not null access Sarray; Y : Long_Float; R : not null access Sarray);\n \n \n    type Darray1 is array (Positive(1) .. Vect5_Pkg.N) of Long_Float;\n    for Darray1'Alignment use 16;\n \n    function \"+\" (X : Darray1; Y : Long_Float) return Darray1;\n+   procedure Add (X : Darray1; Y : Long_Float; R : out Darray1);\n    procedure Add (X : not null access Darray1; Y : Long_Float; R : not null access Darray1);\n \n \n    type Darray2 is array (Vect5_Pkg.K .. Positive(4)) of Long_Float;\n    for Darray2'Alignment use 16;\n \n    function \"+\" (X : Darray2; Y : Long_Float) return Darray2;\n+   procedure Add (X : Darray2; Y : Long_Float; R : out Darray2);\n    procedure Add (X : not null access Darray2; Y : Long_Float; R : not null access Darray2);\n \n \n    type Darray3 is array (Vect5_Pkg.K .. Vect5_Pkg.N) of Long_Float;\n    for Darray3'Alignment use 16;\n \n    function \"+\" (X : Darray3; Y : Long_Float) return Darray3;\n+   procedure Add (X : Darray3; Y : Long_Float; R : out Darray3);\n    procedure Add (X : not null access Darray3; Y : Long_Float; R : not null access Darray3);\n \n end Vect5;"}, {"sha": "95f4c99c0b47668a46ff75de606743cdee2e9c11", "filename": "gcc/testsuite/gnat.dg/vect6.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect6.adb?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -12,6 +12,13 @@ package body Vect6 is\n       return R;\n    end;\n \n+   procedure Add (X : Varray; Y : Long_Float; R : out Varray) is\n+   begin\n+      for I in X'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Varray; Y : Long_Float; R : not null access Varray) is\n    begin\n       for I in X'Range loop\n@@ -29,6 +36,13 @@ package body Vect6 is\n       return R;\n    end;\n \n+   procedure Add (X : Sarray; Y : Long_Float; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Sarray; Y : Long_Float; R : not null access Sarray) is\n    begin\n       for I in Sarray'Range loop\n@@ -46,6 +60,13 @@ package body Vect6 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray1; Y : Long_Float; R : out Darray1) is\n+   begin\n+      for I in Darray1'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray1; Y : Long_Float; R : not null access Darray1) is\n    begin\n       for I in Darray1'Range loop\n@@ -63,6 +84,13 @@ package body Vect6 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray2; Y : Long_Float; R : out Darray2) is\n+   begin\n+      for I in Darray2'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray2; Y : Long_Float; R : not null access Darray2) is\n    begin\n       for I in Darray2'Range loop\n@@ -80,6 +108,13 @@ package body Vect6 is\n       return R;\n    end;\n \n+   procedure Add (X : Darray3; Y : Long_Float; R : out Darray3) is\n+   begin\n+      for I in Darray3'Range loop\n+         R(I) := X(I) + Y;\n+      end loop;\n+   end;\n+\n    procedure Add (X : not null access Darray3; Y : Long_Float; R : not null access Darray3) is\n    begin\n       for I in Darray3'Range loop\n@@ -89,5 +124,5 @@ package body Vect6 is\n \n end Vect6;\n \n--- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 10 \"vect\"  } }\n+-- { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 15 \"vect\"  } }\n -- { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "0046425805f70826787af7e110d632059ac25c21", "filename": "gcc/testsuite/gnat.dg/vect6.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c/gcc%2Ftestsuite%2Fgnat.dg%2Fvect6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fvect6.ads?ref=ba3125d7800b1b7f968ebdfa24e4b8ec262f6b1c", "patch": "@@ -8,6 +8,7 @@ package Vect6 is\n    for Varray'Alignment use 16;\n \n    function \"+\" (X : Varray; Y : Long_Float) return Varray;\n+   procedure Add (X : Varray; Y : Long_Float; R : out Varray);\n    procedure Add (X : not null access Varray; Y : Long_Float; R : not null access Varray);\n \n \n@@ -17,27 +18,31 @@ package Vect6 is\n    for Sarray'Alignment use 16;\n \n    function \"+\" (X : Sarray; Y : Long_Float) return Sarray;\n+   procedure Add (X : Sarray; Y : Long_Float; R : out Sarray);\n    procedure Add (X : not null access Sarray; Y : Long_Float; R : not null access Sarray);\n \n \n    type Darray1 is array (Vect6_Pkg.Index_Type(1) .. Vect6_Pkg.N) of Long_Float;\n    for Darray1'Alignment use 16;\n \n    function \"+\" (X : Darray1; Y : Long_Float) return Darray1;\n+   procedure Add (X : Darray1; Y : Long_Float; R : out Darray1);\n    procedure Add (X : not null access Darray1; Y : Long_Float; R : not null access Darray1);\n \n \n    type Darray2 is array (Vect6_Pkg.K .. Vect6_Pkg.Index_Type(4)) of Long_Float;\n    for Darray2'Alignment use 16;\n \n    function \"+\" (X : Darray2; Y : Long_Float) return Darray2;\n+   procedure Add (X : Darray2; Y : Long_Float; R : out Darray2);\n    procedure Add (X : not null access Darray2; Y : Long_Float; R : not null access Darray2);\n \n \n    type Darray3 is array (Vect6_Pkg.K .. Vect6_Pkg.N) of Long_Float;\n    for Darray3'Alignment use 16;\n \n    function \"+\" (X : Darray3; Y : Long_Float) return Darray3;\n+   procedure Add (X : Darray3; Y : Long_Float; R : out Darray3);\n    procedure Add (X : not null access Darray3; Y : Long_Float; R : not null access Darray3);\n \n end Vect6;"}]}