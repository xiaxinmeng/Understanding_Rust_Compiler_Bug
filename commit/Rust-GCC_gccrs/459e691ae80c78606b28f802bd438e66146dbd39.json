{"sha": "459e691ae80c78606b28f802bd438e66146dbd39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU5ZTY5MWFlODBjNzg2MDZiMjhmODAyYmQ0MzhlNjYxNDZkYmQzOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-06-08T09:06:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-06-08T09:06:46Z"}, "message": "re PR tree-optimization/32243 (ICE in vectorizable_type_promotion, at tree-vect-transform.c:2890)\n\n\tPR tree-optimization/32243\n\t* tree-vect-transform.c (vectorizable_type_promotion): Move check\n\tfor ncopies after ratio check between nunits_out and nunits_in.\n\t(vectorizable_type_demotion): Remove single-use variable \"scalar_type\".\n\ntestsuite/ChangeLog:\n\t\n\tPR tree-optimization/32243\n\t* gcc.dg/vect/vect.exp: Add support for -O3 tests.  Reset default\n\tflags for -Os tests.\n\t* gcc.dg/vect/03-vect-pr32243.c: New test.\n\nFrom-SVN: r125567", "tree": {"sha": "b476fa13619c40beae0788a7abcf4c0b6bfa9d7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b476fa13619c40beae0788a7abcf4c0b6bfa9d7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/459e691ae80c78606b28f802bd438e66146dbd39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459e691ae80c78606b28f802bd438e66146dbd39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/459e691ae80c78606b28f802bd438e66146dbd39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/459e691ae80c78606b28f802bd438e66146dbd39/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d2665809fd15fe7c5ee73a7adee1ae64a002ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d2665809fd15fe7c5ee73a7adee1ae64a002ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d2665809fd15fe7c5ee73a7adee1ae64a002ffd"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "0e9aefd80d4db39beb0bac9842f0ca70c88576a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=459e691ae80c78606b28f802bd438e66146dbd39", "patch": "@@ -1,3 +1,10 @@\n+2007-06-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR tree-optimization/32243\n+\t* tree-vect-transform.c (vectorizable_type_promotion): Move check\n+\tfor ncopies after ratio check between nunits_out and nunits_in.\n+\t(vectorizable_type_demotion): Remove single-use variable \"scalar_type\".\n+\n 2007-06-08  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/32224"}, {"sha": "55d0ee54dd2978b780e758d8c2f2dee944740044", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=459e691ae80c78606b28f802bd438e66146dbd39", "patch": "@@ -1,3 +1,10 @@\n+2007-06-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR tree-optimization/32243\n+\t* gcc.dg/vect/vect.exp: Add support for -O3 tests.  Reset default\n+\tflags for -Os tests.\n+\t* gcc.dg/vect/03-vect-pr32243.c: New test.\n+\n 2007-06-08  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/32224"}, {"sha": "0116c33fbb32c3901e19f920271241512256fe1b", "filename": "gcc/testsuite/gcc.dg/vect/O3-vect-pr32243.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-vect-pr32243.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-vect-pr32243.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2FO3-vect-pr32243.c?ref=459e691ae80c78606b28f802bd438e66146dbd39", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+\n+typedef struct __GLcontextRec GLcontext;\n+\n+struct gl_renderbuffer\n+{\n+  struct gl_renderbuffer *Wrapped;\n+  void (*PutValues) (GLcontext * ctx, struct gl_renderbuffer * rb,\n+\t\t     int count, const int x[], const int y[],\n+\t\t     const void *values, const char *mask);\n+};\n+\n+void\n+put_mono_values_s8 (GLcontext * ctx, struct gl_renderbuffer *s8rb,\n+\t\t    int count, const int x[], const int y[],\n+\t\t    const void *value, const char *mask)\n+{\n+  struct gl_renderbuffer *dsrb = s8rb->Wrapped;\n+  int temp[4096], i;\n+  const char val = *((char *) value);\n+  for (i = 0; i < count; i++)\n+    if (!mask || mask[i])\n+      temp[i] = (temp[i] & 0xffffff) | val;\n+  dsrb->PutValues (ctx, dsrb, count, x, y, temp, mask);\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6f3303a85e63a0aeef55cd973fe580d66c85d14d", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=459e691ae80c78606b28f802bd438e66146dbd39", "patch": "@@ -175,10 +175,17 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/no-tree-dom-*.\\[cS\\]]]  \\\n \t\"\" $DEFAULT_VECTCFLAGS\n \n # With -Os\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n lappend DEFAULT_VECTCFLAGS \"-Os\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/Os-vect-*.\\[cS\\]]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# With -O3\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-O3\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/O3-vect-*.\\[cS\\]]]  \\\n+        \"\" $DEFAULT_VECTCFLAGS\n+\n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}\n "}, {"sha": "e49fba116a89fdc86106a1051f97d64736581a8c", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/459e691ae80c78606b28f802bd438e66146dbd39/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=459e691ae80c78606b28f802bd438e66146dbd39", "patch": "@@ -2708,7 +2708,6 @@ vectorizable_type_demotion (tree stmt, block_stmt_iterator *bsi,\n   int j;\n   tree expr;\n   tree vectype_in;\n-  tree scalar_type;\n \n   if (!STMT_VINFO_RELEVANT_P (stmt_info))\n     return false;\n@@ -2741,8 +2740,7 @@ vectorizable_type_demotion (tree stmt, block_stmt_iterator *bsi,\n   nunits_in = TYPE_VECTOR_SUBPARTS (vectype_in);\n \n   scalar_dest = GIMPLE_STMT_OPERAND (stmt, 0);\n-  scalar_type = TREE_TYPE (scalar_dest);\n-  vectype_out = get_vectype_for_scalar_type (scalar_type);\n+  vectype_out = get_vectype_for_scalar_type (TREE_TYPE (scalar_dest));\n   nunits_out = TYPE_VECTOR_SUBPARTS (vectype_out);\n   if (nunits_in != nunits_out / 2) /* FORNOW */\n     return false;\n@@ -2887,15 +2885,16 @@ vectorizable_type_promotion (tree stmt, block_stmt_iterator *bsi,\n   op0 = TREE_OPERAND (operation, 0);\n   vectype_in = get_vectype_for_scalar_type (TREE_TYPE (op0));\n   nunits_in = TYPE_VECTOR_SUBPARTS (vectype_in);\n-  ncopies = LOOP_VINFO_VECT_FACTOR (loop_vinfo) / nunits_in;\n-  gcc_assert (ncopies >= 1);\n \n   scalar_dest = GIMPLE_STMT_OPERAND (stmt, 0);\n   vectype_out = get_vectype_for_scalar_type (TREE_TYPE (scalar_dest));\n   nunits_out = TYPE_VECTOR_SUBPARTS (vectype_out);\n   if (nunits_out != nunits_in / 2) /* FORNOW */\n     return false;\n \n+  ncopies = LOOP_VINFO_VECT_FACTOR (loop_vinfo) / nunits_in;\n+  gcc_assert (ncopies >= 1);\n+\n   if (! ((INTEGRAL_TYPE_P (TREE_TYPE (scalar_dest))\n \t  && INTEGRAL_TYPE_P (TREE_TYPE (op0)))\n \t || (SCALAR_FLOAT_TYPE_P (TREE_TYPE (scalar_dest))"}]}