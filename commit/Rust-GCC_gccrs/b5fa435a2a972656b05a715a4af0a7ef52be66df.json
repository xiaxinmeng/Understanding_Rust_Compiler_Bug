{"sha": "b5fa435a2a972656b05a715a4af0a7ef52be66df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmYTQzNWEyYTk3MjY1NmIwNWE3MTVhNGFmMGE3ZWY1MmJlNjZkZg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-01-27T20:22:37Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-01-27T20:22:37Z"}, "message": "Pr 47431 CTIME/FDATE thread-safety using ctime_r()\n\nFrom-SVN: r169338", "tree": {"sha": "42a335833e2d4efc567b9ade20864d521a8aed79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a335833e2d4efc567b9ade20864d521a8aed79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5fa435a2a972656b05a715a4af0a7ef52be66df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fa435a2a972656b05a715a4af0a7ef52be66df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5fa435a2a972656b05a715a4af0a7ef52be66df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5fa435a2a972656b05a715a4af0a7ef52be66df/comments", "author": null, "committer": null, "parents": [{"sha": "6a0f6e7799c988524d32767047ca64d05a93adaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0f6e7799c988524d32767047ca64d05a93adaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0f6e7799c988524d32767047ca64d05a93adaf"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "2515ca5e38a3cd36ba15b756626e3a315920050d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b5fa435a2a972656b05a715a4af0a7ef52be66df", "patch": "@@ -1,3 +1,15 @@\n+2011-01-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/47431\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* configure.ac: Add check for ctime_r().\n+\t* intrinsics/ctime.c (ctime_r): Fallback implementation.\n+\t(fdate): Use ctime_r() instead of ctime().\n+\t(fdate_sub): Likewise.\n+\t(ctime): Likewise.\n+\t(ctime_sub): Likewise.\n+\n 2011-01-27  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/47432"}, {"sha": "913628cf09b3871b9ea2ad7005cdfc2871e5203b", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=b5fa435a2a972656b05a715a4af0a7ef52be66df", "patch": "@@ -318,6 +318,9 @@\n /* Define to 1 if you have the `ctime' function. */\n #undef HAVE_CTIME\n \n+/* Define to 1 if you have the `ctime_r' function. */\n+#undef HAVE_CTIME_R\n+\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n "}, {"sha": "b87210675a4f61a59672b6e13f44a7e2e23c7e71", "filename": "libgfortran/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=b5fa435a2a972656b05a715a4af0a7ef52be66df", "patch": "@@ -16367,7 +16367,7 @@ _ACEOF\n fi\n done\n \n-for ac_func in localtime_r gmtime_r strerror_r getpwuid_r ttyname_r\n+for ac_func in localtime_r gmtime_r strerror_r getpwuid_r ttyname_r ctime_r\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""}, {"sha": "e8f842cf7f8c98f896c558227b0c75807868f212", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=b5fa435a2a972656b05a715a4af0a7ef52be66df", "patch": "@@ -251,7 +251,7 @@ AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n AC_CHECK_FUNCS(wait setmode execvp pipe dup2 close fdopen strcasestr getrlimit)\n AC_CHECK_FUNCS(gettimeofday stat fstat lstat getpwuid vsnprintf dup getcwd)\n-AC_CHECK_FUNCS(localtime_r gmtime_r strerror_r getpwuid_r ttyname_r)\n+AC_CHECK_FUNCS(localtime_r gmtime_r strerror_r getpwuid_r ttyname_r ctime_r)\n \n # Check for glibc backtrace functions\n AC_CHECK_FUNCS(backtrace backtrace_symbols)"}, {"sha": "2729616bff07cb3853e6978d11aaa30eca367235", "filename": "libgfortran/intrinsics/ctime.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fintrinsics%2Fctime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5fa435a2a972656b05a715a4af0a7ef52be66df/libgfortran%2Fintrinsics%2Fctime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fctime.c?ref=b5fa435a2a972656b05a715a4af0a7ef52be66df", "patch": "@@ -1,8 +1,8 @@\n /* Implementation of the CTIME and FDATE g77 intrinsics.\n-   Copyright (C) 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Fran\u00e7ois-Xavier Coudert <coudert@clipper.ens.fr>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -41,16 +41,32 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <string.h>\n \n \n+#ifndef HAVE_CTIME_R\n+static char *\n+ctime_r (const time_t * timep, char * buf __attribute__((unused)))\n+{\n+#ifdef HAVE_CTIME\n+  return ctime (timep);\n+#else\n+  return NULL;\n+#endif\n+}\n+#endif\n+\n+/* ctime_r() buffer size needs to be at least 26 bytes.  */\n+#define CSZ 26\n+\n extern void fdate (char **, gfc_charlen_type *);\n export_proto(fdate);\n \n void\n fdate (char ** date, gfc_charlen_type * date_len)\n {\n #if defined(HAVE_TIME) && defined(HAVE_CTIME)\n+  char cbuf[CSZ];\n   int i;\n   time_t now = time(NULL);\n-  *date = ctime (&now);\n+  *date = ctime_r (&now, cbuf);\n   if (*date != NULL)\n     {\n       *date = strdup (*date);\n@@ -79,14 +95,15 @@ void\n fdate_sub (char * date, gfc_charlen_type date_len)\n {\n #if defined(HAVE_TIME) && defined(HAVE_CTIME)\n+  char cbuf[CSZ];\n   int i;\n   char *d;\n   time_t now = time(NULL);\n #endif\n   \n   memset (date, ' ', date_len);\n #if defined(HAVE_TIME) && defined(HAVE_CTIME)\n-  d = ctime (&now);\n+  d = ctime_r (&now, cbuf);\n   if (d != NULL)\n     {\n       i = 0;\n@@ -105,9 +122,10 @@ void\n PREFIX(ctime) (char ** date, gfc_charlen_type * date_len, GFC_INTEGER_8 t)\n {\n #if defined(HAVE_CTIME)\n+  char cbuf[CSZ];\n   time_t now = t;\n   int i;\n-  *date = ctime (&now);\n+  *date = ctime_r (&now, cbuf);\n   if (*date != NULL)\n     {\n       *date = strdup (*date);\n@@ -136,14 +154,15 @@ void\n ctime_sub (GFC_INTEGER_8 * t, char * date, gfc_charlen_type date_len)\n {\n #if defined(HAVE_CTIME)\n+  char cbuf[CSZ];\n   int i;\n   char *d;\n   time_t now = *t;\n #endif\n   \n   memset (date, ' ', date_len);\n #if defined(HAVE_CTIME)\n-  d = ctime (&now);\n+  d = ctime_r (&now, cbuf);\n   if (d != NULL)\n     {\n       i = 0;"}]}