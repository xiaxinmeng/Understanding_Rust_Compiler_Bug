{"sha": "64309441e0685d95ea54f896d9eb91332afcac10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQzMDk0NDFlMDY4NWQ5NWVhNTRmODk2ZDllYjkxMzMyYWZjYWMxMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-17T19:29:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-17T19:29:11Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1001", "tree": {"sha": "9f5621ef1eeb9b9436687c99e97684ab589a5e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f5621ef1eeb9b9436687c99e97684ab589a5e6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64309441e0685d95ea54f896d9eb91332afcac10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64309441e0685d95ea54f896d9eb91332afcac10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64309441e0685d95ea54f896d9eb91332afcac10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64309441e0685d95ea54f896d9eb91332afcac10/comments", "author": null, "committer": null, "parents": [{"sha": "001910d1fb84ca9ea88ba7074d453cc4c5cd5924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001910d1fb84ca9ea88ba7074d453cc4c5cd5924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001910d1fb84ca9ea88ba7074d453cc4c5cd5924"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "f1bc32fef0f491f0ff3d5b1e4f9142422bfa8ab8", "filename": "gcc/c-decl.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64309441e0685d95ea54f896d9eb91332afcac10/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64309441e0685d95ea54f896d9eb91332afcac10/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=64309441e0685d95ea54f896d9eb91332afcac10", "patch": "@@ -377,6 +377,7 @@ static struct binding_level *label_level_chain;\n static tree grokparms (), grokdeclarator ();\n tree pushdecl ();\n tree builtin_function ();\n+static void declare_function_name ();\n \n static tree lookup_tag ();\n static tree lookup_tag_reverse ();\n@@ -2590,11 +2591,35 @@ init_decl_processing ()\n   builtin_function (\"__builtin_getman\", double_ftype_double, BUILT_IN_GETMAN, 0);\n #endif\n \n+  /* Create the global binding of __NAME__.  */\n+  declare_function_name (\"top level\");\n+\n   start_identifier_warnings ();\n \n   init_format_info_table ();\n }\n \n+/* Make a binding for __NAME__.  */\n+\n+static void\n+declare_function_name (name)\n+     char *name;\n+{\n+  tree decl, init;\n+\n+  push_obstacks_nochange ();\n+  decl = pushdecl (build_decl (VAR_DECL,\n+\t\t\t       get_identifier (\"__NAME__\"),\n+\t\t\t       char_array_type_node));\n+  TREE_STATIC (decl) = 1;\n+  TREE_READONLY (decl) = 1;\n+  DECL_IGNORED_P (decl) = 1;\n+  init = build_string (strlen (name) + 1, name);\n+  TREE_TYPE (init) = char_array_type_node;\n+  DECL_INITIAL (decl) = init;\n+  finish_decl (decl, init, NULL_TREE);\n+}\n+\n /* Return a definition for a builtin function named NAME and whose data type\n    is TYPE.  TYPE should be a function type with argument types.\n    FUNCTION_CODE tells later passes how to compile calls to this function.\n@@ -4210,7 +4235,7 @@ get_parm_info (void_at_end)\n \n       if (TREE_ASM_WRITTEN (decl))\n \t{\n-\t  error_with_decl (decl, \"no real declaration for parameter `%s'\");\n+\t  error_with_decl (decl, \"parameter `%s' has just a forward declaration\");\n \t  TREE_CHAIN (decl) = new_parms;\n \t  new_parms = decl;\n \t}\n@@ -5057,6 +5082,9 @@ start_function (declspecs, declarator, nested)\n   if (TREE_ADDRESSABLE (DECL_ASSEMBLER_NAME (current_function_decl)))\n     TREE_ADDRESSABLE (current_function_decl) = 1;\n \n+  /* Declare __NAME__ for this function.  */\n+  declare_function_name (IDENTIFIER_POINTER (DECL_NAME (current_function_decl)));\n+\n   return 1;\n }\n "}]}