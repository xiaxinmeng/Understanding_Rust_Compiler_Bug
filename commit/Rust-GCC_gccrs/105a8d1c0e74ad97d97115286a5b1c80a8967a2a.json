{"sha": "105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA1YThkMWMwZTc0YWQ5N2Q5NzExNTI4NmE1YjFjODBhODk2N2EyYQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-01-31T05:36:56Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-01-31T05:36:56Z"}, "message": "jcf-write.c (generate_bytecode_insns): Use TYPE_IS_WIDE to determine how many stack slots to pop.\n\n\t* jcf-write.c (generate_bytecode_insns): Use TYPE_IS_WIDE to\n        determine how many stack slots to pop.\n\nFrom-SVN: r31709", "tree": {"sha": "6e915735c06ed2206db6792d49715857d47f5e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e915735c06ed2206db6792d49715857d47f5e71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105a8d1c0e74ad97d97115286a5b1c80a8967a2a/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "946efde18162392b30967af66b61fb1e93eed09d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/946efde18162392b30967af66b61fb1e93eed09d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/946efde18162392b30967af66b61fb1e93eed09d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6bec15fbe7b8eb606a29792b936dc5f8a909aa60", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105a8d1c0e74ad97d97115286a5b1c80a8967a2a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105a8d1c0e74ad97d97115286a5b1c80a8967a2a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "patch": "@@ -1,3 +1,8 @@\n+2000-01-30  Anthony Green  <green@redhat.com>\n+\n+\t* jcf-write.c (generate_bytecode_insns): Use TYPE_IS_WIDE to\n+\tdetermine how many stack slots to pop.\n+\n 2000-01-29  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (formal_parameter:): Set `$$' to NULL_TREE for better"}, {"sha": "615697dc5356e81acbe835c26d540c60847c75a1", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105a8d1c0e74ad97d97115286a5b1c80a8967a2a/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105a8d1c0e74ad97d97115286a5b1c80a8967a2a/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "patch": "@@ -1625,7 +1625,7 @@ generate_bytecode_insns (exp, target, state)\n \n \t/* COND_EXPR can be used in a binop. The stack must be adjusted. */\n \tif (TREE_TYPE (exp) != void_type_node)\n-\t  NOTE_POP (TYPE_PRECISION (TREE_TYPE (exp)) > 32 ? 2 : 1);\n+\t  NOTE_POP (TYPE_IS_WIDE (TREE_TYPE (exp)) ? 2 : 1);\n       }\n       break;\n     case CASE_EXPR:"}]}