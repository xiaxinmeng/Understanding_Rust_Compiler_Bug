{"sha": "9fd377a747375a82912bd81c67b275301489785c", "node_id": "C_kwDOANBUbNoAKDlmZDM3N2E3NDczNzVhODI5MTJiZDgxYzY3YjI3NTMwMTQ4OTc4NWM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-06T15:53:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-06T15:53:41Z"}, "message": "c++: Fix up ICE when cplus_decl_attributes is called with error_mark_node attributes [PR104668]\n\ncplus_decl_attributes can be called with attributes equal to\nerror_mark_node, there are some spots in the function that test\nit or decl_attributes it calls starts with:\n  if (TREE_TYPE (*node) == error_mark_node || attributes == error_mark_node)\n    return NULL_TREE;\nBut the recent PR104245 change broke this when processing_template_decl\nis true.\n\nThe patch returns early for attributes error_mark_node from\ncplus_decl_attributes.\n\n2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/104668\n\t* decl2.cc (splice_template_attributes): Return NULL if *p is\n\terror_mark_node.\n\t(cplus_decl_attributes): Return early if attributes is\n\terror_mark_node.  Don't check that later.\n\n\t* g++.dg/cpp0x/pr104668.C: New test.", "tree": {"sha": "aab45ae8bb44b7ee3f02e9f5f61bc51825379af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aab45ae8bb44b7ee3f02e9f5f61bc51825379af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fd377a747375a82912bd81c67b275301489785c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd377a747375a82912bd81c67b275301489785c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd377a747375a82912bd81c67b275301489785c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd377a747375a82912bd81c67b275301489785c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e58484a019c57b1085bbbcc1654f1944feddfe73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e58484a019c57b1085bbbcc1654f1944feddfe73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e58484a019c57b1085bbbcc1654f1944feddfe73"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "dc2c924c4728b9ec91b0877270510550079f7663", "filename": "gcc/cp/decl2.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fd377a747375a82912bd81c67b275301489785c/gcc%2Fcp%2Fdecl2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fd377a747375a82912bd81c67b275301489785c/gcc%2Fcp%2Fdecl2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.cc?ref=9fd377a747375a82912bd81c67b275301489785c", "patch": "@@ -1336,7 +1336,7 @@ splice_template_attributes (tree *attr_p, tree decl)\n   tree late_attrs = NULL_TREE;\n   tree *q = &late_attrs;\n \n-  if (!p)\n+  if (!p || *p == error_mark_node)\n     return NULL_TREE;\n \n   for (; *p; )\n@@ -1631,7 +1631,7 @@ void\n cplus_decl_attributes (tree *decl, tree attributes, int flags)\n {\n   if (*decl == NULL_TREE || *decl == void_type_node\n-      || *decl == error_mark_node)\n+      || *decl == error_mark_node || attributes == error_mark_node)\n     return;\n \n   /* Add implicit \"omp declare target\" attribute if requested.  */\n@@ -1668,7 +1668,7 @@ cplus_decl_attributes (tree *decl, tree attributes, int flags)\n \n   cp_check_const_attributes (attributes);\n \n-  if ((flag_openmp || flag_openmp_simd) && attributes != error_mark_node)\n+  if (flag_openmp || flag_openmp_simd)\n     {\n       bool diagnosed = false;\n       for (tree *pa = &attributes; *pa; )"}, {"sha": "c3ad33dd40b1cf58659b14f2dd9804bb0be8d305", "filename": "gcc/testsuite/g++.dg/cpp0x/pr104668.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fd377a747375a82912bd81c67b275301489785c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr104668.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fd377a747375a82912bd81c67b275301489785c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr104668.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr104668.C?ref=9fd377a747375a82912bd81c67b275301489785c", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/104668\n+// { dg-do compile { target c++11 } }\n+// { dg-excess-errors \"\" }\n+\n+template <class... Ts>\n+void sink(Ts...);\n+template <class... Ts>\n+void f(Ts...) {\n+  sink([] { struct alignas:Ts) S {}; }...); }\n+}\n+int main() {\n+  f(0);\n+}"}]}