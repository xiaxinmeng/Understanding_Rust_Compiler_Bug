{"sha": "74719742273fc48198d4d1bbe6aec23413c5d58a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3MTk3NDIyNzNmYzQ4MTk4ZDRkMWJiZTZhZWMyMzQxM2M1ZDU4YQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2003-04-29T22:46:54Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2003-04-29T22:46:54Z"}, "message": "genautomata.c (add_vect): Check undefined value for range type too.\n\n2003-04-29  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* genautomata.c (add_vect): Check undefined value for range type\n\ttoo.\n\nFrom-SVN: r66266", "tree": {"sha": "b4d89e04d4670d1736b23b0b5d57a80b5b663b9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4d89e04d4670d1736b23b0b5d57a80b5b663b9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74719742273fc48198d4d1bbe6aec23413c5d58a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74719742273fc48198d4d1bbe6aec23413c5d58a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74719742273fc48198d4d1bbe6aec23413c5d58a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74719742273fc48198d4d1bbe6aec23413c5d58a/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baade80b780123865ad05f7cf85254e602c6da0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baade80b780123865ad05f7cf85254e602c6da0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baade80b780123865ad05f7cf85254e602c6da0d"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "46b4555e0fbb3ba5dce8589197d5d20245962cab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74719742273fc48198d4d1bbe6aec23413c5d58a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74719742273fc48198d4d1bbe6aec23413c5d58a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74719742273fc48198d4d1bbe6aec23413c5d58a", "patch": "@@ -1,3 +1,8 @@\n+2003-04-29  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* genautomata.c (add_vect): Check undefined value for range type\n+\ttoo.\n+\n 2003-04-29  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* configure.in:  More general test for cmp --ignore-initial."}, {"sha": "7b2f05b9e1f3bf08c04b0665d0c8445de16e906e", "filename": "gcc/genautomata.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74719742273fc48198d4d1bbe6aec23413c5d58a/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74719742273fc48198d4d1bbe6aec23413c5d58a/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=74719742273fc48198d4d1bbe6aec23413c5d58a", "patch": "@@ -7885,6 +7885,10 @@ add_vect (tab, vect_num, vect, vect_length)\n           tab->min_comb_vect_el_value = vect [vect_index];\n         check_vect_start [comb_vect_index + vect_index] = vect_num;\n       }\n+  if (tab->max_comb_vect_el_value < undefined_vect_el_value)\n+    tab->max_comb_vect_el_value = undefined_vect_el_value;\n+  if (tab->min_comb_vect_el_value > undefined_vect_el_value)\n+    tab->min_comb_vect_el_value = undefined_vect_el_value;\n   if (tab->max_base_vect_el_value < comb_vect_index)\n     tab->max_base_vect_el_value = comb_vect_index;\n   if (tab->min_base_vect_el_value > comb_vect_index)"}]}