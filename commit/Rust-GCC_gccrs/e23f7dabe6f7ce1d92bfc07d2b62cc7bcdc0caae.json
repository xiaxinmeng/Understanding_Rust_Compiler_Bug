{"sha": "e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "node_id": "C_kwDOANBUbNoAKGUyM2Y3ZGFiZTZmN2NlMWQ5MmJmYzA3ZDJiNjJjYzdiY2RjMGNhYWU", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T11:43:16Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T12:50:17Z"}, "message": "Add frange::maybe_isnan (bool sign).\n\nIt is useful to know if there's the possiblity of a NAN with a given\nsign.  This is to complement maybe_isnan(void) which returns TRUE for a\nNAN of any sign.\n\nA follow-up patch implementing ABS will make use of this.\n\ngcc/ChangeLog:\n\n\t* value-range.h (frange::maybe_isnan): New.", "tree": {"sha": "22f2eeb7803a86dd4845ca6d93b41f8120cc0177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22f2eeb7803a86dd4845ca6d93b41f8120cc0177"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69988cd58becc115b236f88627fe92436baaa674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69988cd58becc115b236f88627fe92436baaa674", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69988cd58becc115b236f88627fe92436baaa674"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "07a2067898c9efe6fe7ae8e163922556283bab10", "filename": "gcc/value-range.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "patch": "@@ -323,6 +323,7 @@ class frange : public vrange\n   bool known_isnan () const;\n   bool known_isinf () const;\n   bool maybe_isnan () const;\n+  bool maybe_isnan (bool sign) const;\n   bool maybe_isinf () const;\n   bool signbit_p (bool &signbit) const;\n private:\n@@ -1295,6 +1296,18 @@ frange::maybe_isnan () const\n   return m_pos_nan || m_neg_nan;\n }\n \n+// Return TRUE if range is possibly a NAN with SIGN.\n+\n+inline bool\n+frange::maybe_isnan (bool sign) const\n+{\n+  if (undefined_p ())\n+    return false;\n+  if (sign)\n+    return m_neg_nan;\n+  return m_pos_nan;\n+}\n+\n // Return TRUE if range is a +NAN or -NAN.\n \n inline bool"}]}