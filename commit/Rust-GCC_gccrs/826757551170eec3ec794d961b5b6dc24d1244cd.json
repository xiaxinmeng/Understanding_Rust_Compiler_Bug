{"sha": "826757551170eec3ec794d961b5b6dc24d1244cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI2NzU3NTUxMTcwZWVjM2VjNzk0ZDk2MWI1YjZkYzI0ZDEyNDRjZA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-09-05T07:50:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:50:26Z"}, "message": "g-soccon-vms.adb: Renamed to g-soccon-vms.ads\n\n2005-09-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-soccon-vms.adb: Renamed to g-soccon-vms.ads\n\n\t* g-soccon-vms.ads: Renamed from g-soccon-vms.adb\n\n\t* g-soccon.ads, g-soccon-tru64.ads, g-soccon-aix.ads,\n\tg-soccon-darwin.ads, g-soccon-irix.ads, g-soccon-hpux.ads,\n\tg-soccon-solaris.ads, g-soccon-mingw.ads, g-soccon-vxworks.ads,\n\tg-soccon-freebsd.ads: Add new constants:\n\t IP_MULTICAST_IF\n\t SO_RCVTIMEO/SO_SNDTIMEO\n\t IOV_MAX\n\n\t* gen-soccon.c:\n\tMove all target-specific file inclusions and macro definitions to\n\tgsocket.h, in order to ensure that any C code in socket.c will see a\n\tset of constants that is consistent with the contents of g-soccon.ads.\n\n\t* gsocket.h: Code imported from gen-soccon.c:\n\tMove all target-specific file inclusions and macro definitions to\n\tgsocket.h, in order to ensure that any C code in socket.c will see a set\n\tof constants that is consistent with the contents of g-soccon.ads.\n\tThis change also makes gen-soccon self-contained (removing dependencies\n\tupon GCC internal headers).\n\n\t* g-socket.adb (Send_Vector): Make calls to Writev at most IOV_MAX\n\tiovecs at a time.\n\t(To_Inet_Addr): Now a procedure instead of a function, more efficient.\n\n\t* socket.c: Minor reformatting.\n\nFrom-SVN: r103853", "tree": {"sha": "ae1698c6bf9c081f3fb4cdc10113b63b9801baf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae1698c6bf9c081f3fb4cdc10113b63b9801baf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/826757551170eec3ec794d961b5b6dc24d1244cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826757551170eec3ec794d961b5b6dc24d1244cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/826757551170eec3ec794d961b5b6dc24d1244cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/826757551170eec3ec794d961b5b6dc24d1244cd/comments", "author": null, "committer": null, "parents": [{"sha": "b9260c3d60418dd0e549bbdb69c8f696a76d5106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9260c3d60418dd0e549bbdb69c8f696a76d5106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9260c3d60418dd0e549bbdb69c8f696a76d5106"}], "stats": {"total": 1924, "additions": 1082, "deletions": 842}, "files": [{"sha": "3b361b51a1421f7ec6dd2bdabffbd05d82e776c6", "filename": "gcc/ada/g-soccon-aix.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-aix.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for AIX\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for powerpc-ibm-aix5.1.0.0\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           24; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          24; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           67; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           68; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           66; --  Addr family not supported\n-   EALREADY           : constant :=           56; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=           72; --  Connection aborted\n-   ECONNREFUSED       : constant :=           79; --  Connection refused\n-   ECONNRESET         : constant :=           73; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           58; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=           80; --  Host is down\n-   EHOSTUNREACH       : constant :=           81; --  No route to host\n-   EINPROGRESS        : constant :=           55; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=           75; --  Socket already connected\n-   ELOOP              : constant :=           85; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           59; --  Message too long\n-   ENAMETOOLONG       : constant :=           86; --  Name too long\n-   ENETDOWN           : constant :=           69; --  Network is down\n-   ENETRESET          : constant :=           71; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=           70; --  Network is unreachable\n-   ENOBUFS            : constant :=           74; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           61; --  Protocol not available\n-   ENOTCONN           : constant :=           76; --  Socket not connected\n-   ENOTSOCK           : constant :=           57; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           64; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           65; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           62; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           60; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=           77; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           63; --  Socket type not supported\n-   ETIMEDOUT          : constant :=           78; --  Connection timed out\n-   ETOOMANYREFS       : constant :=          115; --  Too many references\n-   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=          67; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          68; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          66; --  Addr family not supported\n+   EALREADY           : constant :=          56; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          72; --  Connection aborted\n+   ECONNREFUSED       : constant :=          79; --  Connection refused\n+   ECONNRESET         : constant :=          73; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          58; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=          80; --  Host is down\n+   EHOSTUNREACH       : constant :=          81; --  No route to host\n+   EINPROGRESS        : constant :=          55; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=          75; --  Socket already connected\n+   ELOOP              : constant :=          85; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          59; --  Message too long\n+   ENAMETOOLONG       : constant :=          86; --  Name too long\n+   ENETDOWN           : constant :=          69; --  Network is down\n+   ENETRESET          : constant :=          71; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          70; --  Network is unreachable\n+   ENOBUFS            : constant :=          74; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          61; --  Protocol not available\n+   ENOTCONN           : constant :=          76; --  Socket not connected\n+   ENOTSOCK           : constant :=          57; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          64; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          65; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          62; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          60; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          77; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          63; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          78; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         115; --  Too many references\n+   EWOULDBLOCK        : constant :=          11; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "3927b7897985ad3b432cab0aecf71fa9ce49e6ec", "filename": "gcc/ada/g-soccon-darwin.ads", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-darwin.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -148,16 +148,25 @@ package GNAT.Sockets.Constants is\n    --------------------\n \n    TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n    SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n    SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n    SO_LINGER          : constant :=         128; --  Defer close to flush data\n-   SO_ERROR           : constant :=        4103; --  Get/clear error status\n    SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n    IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n    IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=  2147483647; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "29319a2bc0b25f749ce22e6cac6423d74da49060", "filename": "gcc/ada/g-soccon-freebsd.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-freebsd.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for i386 FreeBSD\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for i386-unknown-freebsd5.2.1\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           28; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          28; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           48; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n-   EALREADY           : constant :=           37; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=           53; --  Connection aborted\n-   ECONNREFUSED       : constant :=           61; --  Connection refused\n-   ECONNRESET         : constant :=           54; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           39; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=           64; --  Host is down\n-   EHOSTUNREACH       : constant :=           65; --  No route to host\n-   EINPROGRESS        : constant :=           36; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=           56; --  Socket already connected\n-   ELOOP              : constant :=           62; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           40; --  Message too long\n-   ENAMETOOLONG       : constant :=           63; --  Name too long\n-   ENETDOWN           : constant :=           50; --  Network is down\n-   ENETRESET          : constant :=           52; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=           51; --  Network is unreachable\n-   ENOBUFS            : constant :=           55; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n-   ENOTCONN           : constant :=           57; --  Socket not connected\n-   ENOTSOCK           : constant :=           38; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n-   ETIMEDOUT          : constant :=           60; --  Connection timed out\n-   ETOOMANYREFS       : constant :=           59; --  Too many references\n-   EWOULDBLOCK        : constant :=           35; --  Operation would block\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=          48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          47; --  Addr family not supported\n+   EALREADY           : constant :=          37; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          53; --  Connection aborted\n+   ECONNREFUSED       : constant :=          61; --  Connection refused\n+   ECONNRESET         : constant :=          54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          39; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=          64; --  Host is down\n+   EHOSTUNREACH       : constant :=          65; --  No route to host\n+   EINPROGRESS        : constant :=          36; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=          56; --  Socket already connected\n+   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          40; --  Message too long\n+   ENAMETOOLONG       : constant :=          63; --  Name too long\n+   ENETDOWN           : constant :=          50; --  Network is down\n+   ENETRESET          : constant :=          52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          51; --  Network is unreachable\n+   ENOBUFS            : constant :=          55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          42; --  Protocol not available\n+   ENOTCONN           : constant :=          57; --  Socket not connected\n+   ENOTSOCK           : constant :=          38; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          59; --  Too many references\n+   EWOULDBLOCK        : constant :=          35; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "9145146da38f0aea3f5a6bdde25947d1c771e799", "filename": "gcc/ada/g-soccon-hpux.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for HP/UX\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for hppa1.1-hp-hpux11.00\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           26; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          -1; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=          226; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=          227; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=          225; --  Addr family not supported\n-   EALREADY           : constant :=          244; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=          231; --  Connection aborted\n-   ECONNREFUSED       : constant :=          239; --  Connection refused\n-   ECONNRESET         : constant :=          232; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=          217; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=          241; --  Host is down\n-   EHOSTUNREACH       : constant :=          242; --  No route to host\n-   EINPROGRESS        : constant :=          245; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=          234; --  Socket already connected\n-   ELOOP              : constant :=          249; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=          218; --  Message too long\n-   ENAMETOOLONG       : constant :=          248; --  Name too long\n-   ENETDOWN           : constant :=          228; --  Network is down\n-   ENETRESET          : constant :=          230; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=          229; --  Network is unreachable\n-   ENOBUFS            : constant :=          233; --  No buffer space available\n-   ENOPROTOOPT        : constant :=          220; --  Protocol not available\n-   ENOTCONN           : constant :=          235; --  Socket not connected\n-   ENOTSOCK           : constant :=          216; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=          223; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=          224; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=          221; --  Unknown protocol\n-   EPROTOTYPE         : constant :=          219; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=          236; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=          222; --  Socket type not supported\n-   ETIMEDOUT          : constant :=          238; --  Connection timed out\n-   ETOOMANYREFS       : constant :=          237; --  Too many references\n-   EWOULDBLOCK        : constant :=          246; --  Operation would block\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=         226; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         227; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         225; --  Addr family not supported\n+   EALREADY           : constant :=         244; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         231; --  Connection aborted\n+   ECONNREFUSED       : constant :=         239; --  Connection refused\n+   ECONNRESET         : constant :=         232; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=         217; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=         241; --  Host is down\n+   EHOSTUNREACH       : constant :=         242; --  No route to host\n+   EINPROGRESS        : constant :=         245; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=         234; --  Socket already connected\n+   ELOOP              : constant :=         249; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=         218; --  Message too long\n+   ENAMETOOLONG       : constant :=         248; --  Name too long\n+   ENETDOWN           : constant :=         228; --  Network is down\n+   ENETRESET          : constant :=         230; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         229; --  Network is unreachable\n+   ENOBUFS            : constant :=         233; --  No buffer space available\n+   ENOPROTOOPT        : constant :=         220; --  Protocol not available\n+   ENOTCONN           : constant :=         235; --  Socket not connected\n+   ENOTSOCK           : constant :=         216; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         223; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         224; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         221; --  Unknown protocol\n+   EPROTOTYPE         : constant :=         219; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         236; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         222; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         238; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         237; --  Too many references\n+   EWOULDBLOCK        : constant :=         246; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=            5; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=            6; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=            3; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=            4; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           2; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=           3; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           4; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           5; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           6; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "b07191f102c0c0e8c854e8424c0ec35adc6a1b1d", "filename": "gcc/ada/g-soccon-irix.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-irix.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for SGI\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for mips-sgi-irix6.5\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           24; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          24; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            2; --  Stream socket\n-   SOCK_DGRAM         : constant :=            1; --  Datagram socket\n+   SOCK_STREAM        : constant :=           2; --  Stream socket\n+   SOCK_DGRAM         : constant :=           1; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=          125; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=          126; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=          124; --  Addr family not supported\n-   EALREADY           : constant :=          149; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=          130; --  Connection aborted\n-   ECONNREFUSED       : constant :=          146; --  Connection refused\n-   ECONNRESET         : constant :=          131; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           96; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=          147; --  Host is down\n-   EHOSTUNREACH       : constant :=          148; --  No route to host\n-   EINPROGRESS        : constant :=          150; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=          133; --  Socket already connected\n-   ELOOP              : constant :=           90; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           97; --  Message too long\n-   ENAMETOOLONG       : constant :=           78; --  Name too long\n-   ENETDOWN           : constant :=          127; --  Network is down\n-   ENETRESET          : constant :=          129; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=          128; --  Network is unreachable\n-   ENOBUFS            : constant :=          132; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           99; --  Protocol not available\n-   ENOTCONN           : constant :=          134; --  Socket not connected\n-   ENOTSOCK           : constant :=           95; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=          122; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=          123; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=          120; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           98; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=          143; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=          121; --  Socket type not supported\n-   ETIMEDOUT          : constant :=          145; --  Connection timed out\n-   ETOOMANYREFS       : constant :=          144; --  Too many references\n-   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=         125; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         126; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         124; --  Addr family not supported\n+   EALREADY           : constant :=         149; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         130; --  Connection aborted\n+   ECONNREFUSED       : constant :=         146; --  Connection refused\n+   ECONNRESET         : constant :=         131; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          96; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=         147; --  Host is down\n+   EHOSTUNREACH       : constant :=         148; --  No route to host\n+   EINPROGRESS        : constant :=         150; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=         133; --  Socket already connected\n+   ELOOP              : constant :=          90; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          97; --  Message too long\n+   ENAMETOOLONG       : constant :=          78; --  Name too long\n+   ENETDOWN           : constant :=         127; --  Network is down\n+   ENETRESET          : constant :=         129; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         128; --  Network is unreachable\n+   ENOBUFS            : constant :=         132; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          99; --  Protocol not available\n+   ENOTCONN           : constant :=         134; --  Socket not connected\n+   ENOTSOCK           : constant :=          95; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         122; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         123; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         120; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          98; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         143; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         121; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         145; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         144; --  Too many references\n+   EWOULDBLOCK        : constant :=          11; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           23; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           24; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           21; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           22; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=          20; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          21; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          22; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          23; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          24; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=  2147483647; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "3577c17c596bc01e3b5cbc69b0de97ffc63b4473", "filename": "gcc/ada/g-soccon-mingw.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for MINGW32 NT\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for pentium-mingw32msv\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=            3; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          23; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=        10013; --  Permission denied\n-   EADDRINUSE         : constant :=        10048; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=        10049; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=        10047; --  Addr family not supported\n-   EALREADY           : constant :=        10037; --  Operation in progress\n-   EBADF              : constant :=        10009; --  Bad file descriptor\n-   ECONNABORTED       : constant :=        10053; --  Connection aborted\n-   ECONNREFUSED       : constant :=        10061; --  Connection refused\n-   ECONNRESET         : constant :=        10054; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=        10039; --  Destination addr required\n-   EFAULT             : constant :=        10014; --  Bad address\n-   EHOSTDOWN          : constant :=        10064; --  Host is down\n-   EHOSTUNREACH       : constant :=        10065; --  No route to host\n-   EINPROGRESS        : constant :=        10036; --  Operation now in progress\n-   EINTR              : constant :=        10004; --  Interrupted system call\n-   EINVAL             : constant :=        10022; --  Invalid argument\n-   EIO                : constant :=        10101; --  Input output error\n-   EISCONN            : constant :=        10056; --  Socket already connected\n-   ELOOP              : constant :=        10062; --  Too many symbolic lynks\n-   EMFILE             : constant :=        10024; --  Too many open files\n-   EMSGSIZE           : constant :=        10040; --  Message too long\n-   ENAMETOOLONG       : constant :=        10063; --  Name too long\n-   ENETDOWN           : constant :=        10050; --  Network is down\n-   ENETRESET          : constant :=        10052; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=        10051; --  Network is unreachable\n-   ENOBUFS            : constant :=        10055; --  No buffer space available\n-   ENOPROTOOPT        : constant :=        10042; --  Protocol not available\n-   ENOTCONN           : constant :=        10057; --  Socket not connected\n-   ENOTSOCK           : constant :=        10038; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=        10045; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=        10046; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=        10043; --  Unknown protocol\n-   EPROTOTYPE         : constant :=        10041; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=        10058; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=        10044; --  Socket type not supported\n-   ETIMEDOUT          : constant :=        10060; --  Connection timed out\n-   ETOOMANYREFS       : constant :=        10059; --  Too many references\n-   EWOULDBLOCK        : constant :=        10035; --  Operation would block\n+   EACCES             : constant :=       10013; --  Permission denied\n+   EADDRINUSE         : constant :=       10048; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=       10049; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=       10047; --  Addr family not supported\n+   EALREADY           : constant :=       10037; --  Operation in progress\n+   EBADF              : constant :=       10009; --  Bad file descriptor\n+   ECONNABORTED       : constant :=       10053; --  Connection aborted\n+   ECONNREFUSED       : constant :=       10061; --  Connection refused\n+   ECONNRESET         : constant :=       10054; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=       10039; --  Destination addr required\n+   EFAULT             : constant :=       10014; --  Bad address\n+   EHOSTDOWN          : constant :=       10064; --  Host is down\n+   EHOSTUNREACH       : constant :=       10065; --  No route to host\n+   EINPROGRESS        : constant :=       10036; --  Operation now in progress\n+   EINTR              : constant :=       10004; --  Interrupted system call\n+   EINVAL             : constant :=       10022; --  Invalid argument\n+   EIO                : constant :=       10101; --  Input output error\n+   EISCONN            : constant :=       10056; --  Socket already connected\n+   ELOOP              : constant :=       10062; --  Too many symbolic lynks\n+   EMFILE             : constant :=       10024; --  Too many open files\n+   EMSGSIZE           : constant :=       10040; --  Message too long\n+   ENAMETOOLONG       : constant :=       10063; --  Name too long\n+   ENETDOWN           : constant :=       10050; --  Network is down\n+   ENETRESET          : constant :=       10052; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=       10051; --  Network is unreachable\n+   ENOBUFS            : constant :=       10055; --  No buffer space available\n+   ENOPROTOOPT        : constant :=       10042; --  Protocol not available\n+   ENOTCONN           : constant :=       10057; --  Socket not connected\n+   ENOTSOCK           : constant :=       10038; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=       10045; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=       10046; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=       10043; --  Unknown protocol\n+   EPROTOTYPE         : constant :=       10041; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=       10058; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=       10044; --  Socket type not supported\n+   ETIMEDOUT          : constant :=       10060; --  Connection timed out\n+   ETOOMANYREFS       : constant :=       10059; --  Too many references\n+   EWOULDBLOCK        : constant :=       10035; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=        11001; --  Unknown host\n-   TRY_AGAIN          : constant :=        11002; --  Host name lookup failure\n-   NO_DATA            : constant :=        11004; --  No data record for name\n-   NO_RECOVERY        : constant :=        11003; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=       11001; --  Unknown host\n+   TRY_AGAIN          : constant :=       11002; --  Host name lookup failure\n+   NO_DATA            : constant :=       11004; --  No data record for name\n+   NO_RECOVERY        : constant :=       11003; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=           -1; --  Send end of record\n-   MSG_WAITALL        : constant :=           -1; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=          -1; --  Send end of record\n+   MSG_WAITALL        : constant :=          -1; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=            5; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=            6; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=            3; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=            4; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=  2147483647; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "07de5cdbc29df783787298de937882bea74f57d5", "filename": "gcc/ada/g-soccon-solaris.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for Solaris\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for sparc-sun-solaris2.8\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           26; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          26; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            2; --  Stream socket\n-   SOCK_DGRAM         : constant :=            1; --  Datagram socket\n+   SOCK_STREAM        : constant :=           2; --  Stream socket\n+   SOCK_DGRAM         : constant :=           1; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=          125; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=          126; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=          124; --  Addr family not supported\n-   EALREADY           : constant :=          149; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=          130; --  Connection aborted\n-   ECONNREFUSED       : constant :=          146; --  Connection refused\n-   ECONNRESET         : constant :=          131; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           96; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=          147; --  Host is down\n-   EHOSTUNREACH       : constant :=          148; --  No route to host\n-   EINPROGRESS        : constant :=          150; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=          133; --  Socket already connected\n-   ELOOP              : constant :=           90; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           97; --  Message too long\n-   ENAMETOOLONG       : constant :=           78; --  Name too long\n-   ENETDOWN           : constant :=          127; --  Network is down\n-   ENETRESET          : constant :=          129; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=          128; --  Network is unreachable\n-   ENOBUFS            : constant :=          132; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           99; --  Protocol not available\n-   ENOTCONN           : constant :=          134; --  Socket not connected\n-   ENOTSOCK           : constant :=           95; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=          122; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=          123; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=          120; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           98; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=          143; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=          121; --  Socket type not supported\n-   ETIMEDOUT          : constant :=          145; --  Connection timed out\n-   ETOOMANYREFS       : constant :=          144; --  Too many references\n-   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=         125; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         126; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         124; --  Addr family not supported\n+   EALREADY           : constant :=         149; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         130; --  Connection aborted\n+   ECONNREFUSED       : constant :=         146; --  Connection refused\n+   ECONNRESET         : constant :=         131; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          96; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=         147; --  Host is down\n+   EHOSTUNREACH       : constant :=         148; --  No route to host\n+   EINPROGRESS        : constant :=         150; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=         133; --  Socket already connected\n+   ELOOP              : constant :=          90; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          97; --  Message too long\n+   ENAMETOOLONG       : constant :=          78; --  Name too long\n+   ENETDOWN           : constant :=         127; --  Network is down\n+   ENETRESET          : constant :=         129; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         128; --  Network is unreachable\n+   ENOBUFS            : constant :=         132; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          99; --  Protocol not available\n+   ENOTCONN           : constant :=         134; --  Socket not connected\n+   ENOTSOCK           : constant :=          95; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         122; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         123; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         120; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          98; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         143; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         121; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         145; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         144; --  Too many references\n+   EWOULDBLOCK        : constant :=          11; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           19; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           20; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           17; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           18; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=          16; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          17; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          18; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          19; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          20; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "be7578f3521e61eca5b75aeabba0409f949ed2a3", "filename": "gcc/ada/g-soccon-tru64.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-tru64.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for OSF\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for alphaev56-dec-osf5.1\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           26; --  IPv6 address family\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          26; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           48; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n-   EALREADY           : constant :=           37; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=           53; --  Connection aborted\n-   ECONNREFUSED       : constant :=           61; --  Connection refused\n-   ECONNRESET         : constant :=           54; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           39; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=           64; --  Host is down\n-   EHOSTUNREACH       : constant :=           65; --  No route to host\n-   EINPROGRESS        : constant :=           36; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=           56; --  Socket already connected\n-   ELOOP              : constant :=           62; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           40; --  Message too long\n-   ENAMETOOLONG       : constant :=           63; --  Name too long\n-   ENETDOWN           : constant :=           50; --  Network is down\n-   ENETRESET          : constant :=           52; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=           51; --  Network is unreachable\n-   ENOBUFS            : constant :=           55; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n-   ENOTCONN           : constant :=           57; --  Socket not connected\n-   ENOTSOCK           : constant :=           38; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n-   ETIMEDOUT          : constant :=           60; --  Connection timed out\n-   ETOOMANYREFS       : constant :=           59; --  Too many references\n-   EWOULDBLOCK        : constant :=           35; --  Operation would block\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=          48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          47; --  Addr family not supported\n+   EALREADY           : constant :=          37; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          53; --  Connection aborted\n+   ECONNREFUSED       : constant :=          61; --  Connection refused\n+   ECONNRESET         : constant :=          54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          39; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=          64; --  Host is down\n+   EHOSTUNREACH       : constant :=          65; --  No route to host\n+   EINPROGRESS        : constant :=          36; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=          56; --  Socket already connected\n+   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          40; --  Message too long\n+   ENAMETOOLONG       : constant :=          63; --  Name too long\n+   ENETDOWN           : constant :=          50; --  Network is down\n+   ENETRESET          : constant :=          52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          51; --  Network is unreachable\n+   ENOBUFS            : constant :=          55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          42; --  Protocol not available\n+   ENOTCONN           : constant :=          57; --  Socket not connected\n+   ENOTSOCK           : constant :=          38; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          59; --  Too many references\n+   EWOULDBLOCK        : constant :=          35; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "6e35ebdee681d965faaf10f81cdb3d095b0bfba8", "filename": "gcc/ada/g-soccon-vms.adb", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9260c3d60418dd0e549bbdb69c8f696a76d5106/gcc%2Fada%2Fg-soccon-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9260c3d60418dd0e549bbdb69c8f696a76d5106/gcc%2Fada%2Fg-soccon-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.adb?ref=b9260c3d60418dd0e549bbdb69c8f696a76d5106", "patch": "@@ -1,160 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for Alpha/VMS\n-\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           26; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           48; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n-   EALREADY           : constant :=           37; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=           53; --  Connection aborted\n-   ECONNREFUSED       : constant :=           61; --  Connection refused\n-   ECONNRESET         : constant :=           54; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           39; --  Destination addr required\n-   EFAULT             : constant :=           45; --  Bad address\n-   EHOSTDOWN          : constant :=           64; --  Host is down\n-   EHOSTUNREACH       : constant :=           65; --  No route to host\n-   EINPROGRESS        : constant :=           36; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=           56; --  Socket already connected\n-   ELOOP              : constant :=           62; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           40; --  Message too long\n-   ENAMETOOLONG       : constant :=           63; --  Name too long\n-   ENETDOWN           : constant :=           50; --  Network is down\n-   ENETRESET          : constant :=           52; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=           51; --  Network is unreachable\n-   ENOBUFS            : constant :=           55; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n-   ENOTCONN           : constant :=           57; --  Socket not connected\n-   ENOTSOCK           : constant :=           38; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n-   ETIMEDOUT          : constant :=           60; --  Connection timed out\n-   ETOOMANYREFS       : constant :=           59; --  Too many references\n-   EWOULDBLOCK        : constant :=           35; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET         : constant :=     16#FFFF#; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=     16#1001#; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=     16#1002#; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=     16#0004#; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=     16#0008#; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=     16#0080#; --  Defer close to flush data\n-   SO_ERROR           : constant :=     16#1007#; --  Get/clear error status\n-   SO_BROADCAST       : constant :=     16#0020#; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "3b0f20fe61c9c5e97dd53baf74965ede3bae6248", "filename": "gcc/ada/g-soccon-vms.ads", "status": "added", "additions": 172, "deletions": 0, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -0,0 +1,172 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for OpenVMS\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          26; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=          48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=          49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=          47; --  Addr family not supported\n+   EALREADY           : constant :=          37; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          53; --  Connection aborted\n+   ECONNREFUSED       : constant :=          61; --  Connection refused\n+   ECONNRESET         : constant :=          54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          39; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=          64; --  Host is down\n+   EHOSTUNREACH       : constant :=          65; --  No route to host\n+   EINPROGRESS        : constant :=          36; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=          56; --  Socket already connected\n+   ELOOP              : constant :=          62; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          40; --  Message too long\n+   ENAMETOOLONG       : constant :=          63; --  Name too long\n+   ENETDOWN           : constant :=          50; --  Network is down\n+   ENETRESET          : constant :=          52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          51; --  Network is unreachable\n+   ENOBUFS            : constant :=          55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          42; --  Protocol not available\n+   ENOTCONN           : constant :=          57; --  Socket not connected\n+   ENOTSOCK           : constant :=          38; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=          45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=          46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=          43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=          44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          59; --  Too many references\n+   EWOULDBLOCK        : constant :=          35; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "d31337f675cb5d34871899002f0020de91864b29", "filename": "gcc/ada/g-soccon-vxworks.ads", "status": "modified", "additions": 87, "deletions": 76, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vxworks.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,127 +35,138 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for VxWorks\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for powerpc-wrs-vxworks\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n    --------------\n    -- Families --\n    --------------\n \n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           -1; --  IPv6 address family\n+   AF_INET            : constant :=          2; --  IPv4 address family\n+   AF_INET6           : constant :=         -1; --  IPv6 address family\n \n    -----------\n    -- Modes --\n    -----------\n \n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+   SOCK_STREAM        : constant :=          1; --  Stream socket\n+   SOCK_DGRAM         : constant :=          2; --  Datagram socket\n \n    -------------------\n    -- Socket errors --\n    -------------------\n \n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           48; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n-   EALREADY           : constant :=           69; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=           53; --  Connection aborted\n-   ECONNREFUSED       : constant :=           61; --  Connection refused\n-   ECONNRESET         : constant :=           54; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           40; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=           67; --  Host is down\n-   EHOSTUNREACH       : constant :=           65; --  No route to host\n-   EINPROGRESS        : constant :=           68; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=           56; --  Socket already connected\n-   ELOOP              : constant :=           64; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           36; --  Message too long\n-   ENAMETOOLONG       : constant :=           26; --  Name too long\n-   ENETDOWN           : constant :=           62; --  Network is down\n-   ENETRESET          : constant :=           52; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=           51; --  Network is unreachable\n-   ENOBUFS            : constant :=           55; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           42; --  Protocol not available\n-   ENOTCONN           : constant :=           57; --  Socket not connected\n-   ENOTSOCK           : constant :=           50; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           41; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n-   ETIMEDOUT          : constant :=           60; --  Connection timed out\n-   ETOOMANYREFS       : constant :=           59; --  Too many references\n-   EWOULDBLOCK        : constant :=           70; --  Operation would block\n+   EACCES             : constant :=         13; --  Permission denied\n+   EADDRINUSE         : constant :=         48; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         49; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         47; --  Addr family not supported\n+   EALREADY           : constant :=         69; --  Operation in progress\n+   EBADF              : constant :=          9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         53; --  Connection aborted\n+   ECONNREFUSED       : constant :=         61; --  Connection refused\n+   ECONNRESET         : constant :=         54; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=         40; --  Destination addr required\n+   EFAULT             : constant :=         14; --  Bad address\n+   EHOSTDOWN          : constant :=         67; --  Host is down\n+   EHOSTUNREACH       : constant :=         65; --  No route to host\n+   EINPROGRESS        : constant :=         68; --  Operation now in progress\n+   EINTR              : constant :=          4; --  Interrupted system call\n+   EINVAL             : constant :=         22; --  Invalid argument\n+   EIO                : constant :=          5; --  Input output error\n+   EISCONN            : constant :=         56; --  Socket already connected\n+   ELOOP              : constant :=         64; --  Too many symbolic lynks\n+   EMFILE             : constant :=         24; --  Too many open files\n+   EMSGSIZE           : constant :=         36; --  Message too long\n+   ENAMETOOLONG       : constant :=         26; --  Name too long\n+   ENETDOWN           : constant :=         62; --  Network is down\n+   ENETRESET          : constant :=         52; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         51; --  Network is unreachable\n+   ENOBUFS            : constant :=         55; --  No buffer space available\n+   ENOPROTOOPT        : constant :=         42; --  Protocol not available\n+   ENOTCONN           : constant :=         57; --  Socket not connected\n+   ENOTSOCK           : constant :=         50; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         45; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         46; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         43; --  Unknown protocol\n+   EPROTOTYPE         : constant :=         41; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         58; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         44; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         60; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         59; --  Too many references\n+   EWOULDBLOCK        : constant :=         70; --  Operation would block\n \n    -----------------\n    -- Host errors --\n    -----------------\n \n-   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n-   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n-   NO_DATA            : constant :=            4; --  No data record for name\n-   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+   HOST_NOT_FOUND     : constant :=          1; --  Unknown host\n+   TRY_AGAIN          : constant :=          2; --  Host name lookup failure\n+   NO_DATA            : constant :=          4; --  No data record for name\n+   NO_RECOVERY        : constant :=          3; --  Non recoverable errors\n \n    -------------------\n    -- Control flags --\n    -------------------\n \n-   FIONBIO            : constant :=           16; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=            1; --  How many bytes to read\n+   FIONBIO            : constant :=         16; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=          1; --  How many bytes to read\n \n    --------------------\n    -- Shutdown modes --\n    --------------------\n \n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+   SHUT_RD            : constant :=          0; --  No more recv\n+   SHUT_WR            : constant :=          1; --  No more send\n+   SHUT_RDWR          : constant :=          2; --  No more recv/send\n \n    ---------------------\n    -- Protocol levels --\n    ---------------------\n \n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n+   SOL_SOCKET         : constant :=      65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=          0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=         17; --  UDP\n+   IPPROTO_TCP        : constant :=          6; --  TCP\n \n    -------------------\n    -- Request flags --\n    -------------------\n \n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n+   MSG_OOB            : constant :=          1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=          2; --  Peek at incoming data\n+   MSG_EOR            : constant :=          8; --  Send end of record\n+   MSG_WAITALL        : constant :=         64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=         -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=          0;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           12; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           13; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=           10; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=           11; --  Set/get mcast loopback\n+   TCP_NODELAY        : constant :=          1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=          4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=          8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=        128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=         32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=       4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=       4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=       4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=       4102; --  Reception timeout\n+   SO_ERROR           : constant :=       4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=          9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=         10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=         11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=         12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=         13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant := 2147483647; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "202f442ec307c2749987119fb1271948e15fb7e1", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,8 +35,9 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for GNU/Linux\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n+--  This is the version for i686-pc-linux-gnu\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n \n package GNAT.Sockets.Constants is\n \n@@ -140,22 +141,32 @@ package GNAT.Sockets.Constants is\n    MSG_WAITALL        : constant :=          256; --  Wait for full reception\n    MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n    MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n+   --  Flags set on all send(2) calls\n \n    --------------------\n    -- Socket options --\n    --------------------\n \n    TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=            7; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=            8; --  Set/get recv buffer size\n    SO_REUSEADDR       : constant :=            2; --  Bind reuse local address\n    SO_KEEPALIVE       : constant :=            9; --  Enable keep-alive msgs\n    SO_LINGER          : constant :=           13; --  Defer close to flush data\n-   SO_ERROR           : constant :=            4; --  Get/clear error status\n    SO_BROADCAST       : constant :=            6; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+   SO_SNDBUF          : constant :=            7; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=            8; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=           21; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=           20; --  Reception timeout\n+   SO_ERROR           : constant :=            4; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           32; --  Set/get mcast interface\n    IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n    IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n \n end GNAT.Sockets.Constants;"}, {"sha": "a7af20b87d23a2a867f82123caeb6f8aa87a5648", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 47, "deletions": 27, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -149,7 +149,9 @@ package body GNAT.Sockets is\n    --  Return true when Name is an IP address in standard dot notation\n \n    function To_In_Addr (Addr : Inet_Addr_Type) return Thin.In_Addr;\n-   function To_Inet_Addr (Addr : In_Addr) return Inet_Addr_Type;\n+   procedure To_Inet_Addr\n+     (Addr   : In_Addr;\n+      Result : out Inet_Addr_Type);\n    --  Conversion functions\n \n    function To_Host_Entry (E : Hostent) return Host_Entry_Type;\n@@ -258,7 +260,7 @@ package body GNAT.Sockets is\n \n       Socket := Socket_Type (Res);\n \n-      Address.Addr := To_Inet_Addr (Sin.Sin_Addr);\n+      To_Inet_Addr (Sin.Sin_Addr, Address.Addr);\n       Address.Port := Port_Type (Network_To_Short (Sin.Sin_Port));\n    end Accept_Socket;\n \n@@ -911,7 +913,7 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Socket_Errno);\n       end if;\n \n-      Res.Addr := To_Inet_Addr (Sin.Sin_Addr);\n+      To_Inet_Addr (Sin.Sin_Addr, Res.Addr);\n       Res.Port := Port_Type (Network_To_Short (Sin.Sin_Port));\n \n       return Res;\n@@ -1004,7 +1006,7 @@ package body GNAT.Sockets is\n    begin\n       Res := C_Getsockname (C.int (Socket), Sin'Address, Len'Access);\n       if Res /= Failure then\n-         Addr.Addr := To_Inet_Addr (Sin.Sin_Addr);\n+         To_Inet_Addr (Sin.Sin_Addr, Addr.Addr);\n          Addr.Port := Port_Type (Network_To_Short (Sin.Sin_Port));\n       end if;\n \n@@ -1086,8 +1088,8 @@ package body GNAT.Sockets is\n \n          when Add_Membership  |\n               Drop_Membership =>\n-            Opt.Multicast_Address := To_Inet_Addr (To_In_Addr (V8 (V8'First)));\n-            Opt.Local_Interface   := To_Inet_Addr (To_In_Addr (V8 (V8'Last)));\n+            To_Inet_Addr (To_In_Addr (V8 (V8'First)), Opt.Multicast_Address);\n+            To_Inet_Addr (To_In_Addr (V8 (V8'Last)), Opt.Local_Interface);\n \n          when Multicast_TTL   =>\n             Opt.Time_To_Live := Integer (V1);\n@@ -1226,8 +1228,9 @@ package body GNAT.Sockets is\n    function Inet_Addr (Image : String) return Inet_Addr_Type is\n       use Interfaces.C.Strings;\n \n-      Img : chars_ptr;\n-      Res : C.int;\n+      Img    : chars_ptr;\n+      Res    : C.int;\n+      Result : Inet_Addr_Type;\n \n    begin\n       --  Special case for the all-ones broadcast address: this address\n@@ -1252,7 +1255,8 @@ package body GNAT.Sockets is\n          Raise_Socket_Error (Constants.EINVAL);\n       end if;\n \n-      return To_Inet_Addr (To_In_Addr (Res));\n+      To_Inet_Addr (To_In_Addr (Res), Result);\n+      return Result;\n    end Inet_Addr;\n \n    ----------------\n@@ -1551,7 +1555,7 @@ package body GNAT.Sockets is\n \n       Last := Item'First + Ada.Streams.Stream_Element_Offset (Res - 1);\n \n-      From.Addr := To_Inet_Addr (Sin.Sin_Addr);\n+      To_Inet_Addr (Sin.Sin_Addr, From.Addr);\n       From.Port := Port_Type (Network_To_Short (Sin.Sin_Port));\n    end Receive_Socket;\n \n@@ -1772,20 +1776,39 @@ package body GNAT.Sockets is\n       Vector : Vector_Type;\n       Count  : out Ada.Streams.Stream_Element_Count)\n    is\n-      Res : C.int;\n+      Res            : C.int;\n+      Iov_Count      : C.int;\n+      This_Iov_Count : C.int;\n \n    begin\n-      Res :=\n-        C_Writev\n-          (C.int (Socket),\n-           Vector (Vector'First)'Address,\n-           Vector'Length);\n+      Count := 0;\n+      Iov_Count := 0;\n+      while Iov_Count < Vector'Length loop\n \n-      if Res = Failure then\n-         Raise_Socket_Error (Socket_Errno);\n-      end if;\n+         pragma Warnings (Off);\n+         --  Following test may be compile time known on some targets\n \n-      Count := Ada.Streams.Stream_Element_Count (Res);\n+         if Vector'Length - Iov_Count > Constants.IOV_MAX then\n+            This_Iov_Count := Constants.IOV_MAX;\n+         else\n+            This_Iov_Count := Vector'Length - Iov_Count;\n+         end if;\n+\n+         pragma Warnings (On);\n+\n+         Res :=\n+           C_Writev\n+             (C.int (Socket),\n+              Vector (Vector'First + Integer (Iov_Count))'Address,\n+              This_Iov_Count);\n+\n+         if Res = Failure then\n+            Raise_Socket_Error (Socket_Errno);\n+         end if;\n+\n+         Count := Count + Ada.Streams.Stream_Element_Count (Res);\n+         Iov_Count := Iov_Count + This_Iov_Count;\n+      end loop;\n    end Send_Vector;\n \n    ---------\n@@ -2022,8 +2045,7 @@ package body GNAT.Sockets is\n       Source := Addresses'First;\n       Target := Result.Addresses'First;\n       while Target <= Result.Addresses_Length loop\n-         Result.Addresses (Target) :=\n-           To_Inet_Addr (Addresses (Source).all);\n+         To_Inet_Addr (Addresses (Source).all, Result.Addresses (Target));\n          Source := Source + 1;\n          Target := Target + 1;\n       end loop;\n@@ -2051,16 +2073,14 @@ package body GNAT.Sockets is\n    -- To_Inet_Addr --\n    ------------------\n \n-   function To_Inet_Addr\n-     (Addr : In_Addr) return Inet_Addr_Type\n-   is\n-      Result : Inet_Addr_Type;\n+   procedure To_Inet_Addr\n+     (Addr   : In_Addr;\n+      Result : out Inet_Addr_Type) is\n    begin\n       Result.Sin_V4 (1) := Inet_Addr_Comp_Type (Addr.S_B1);\n       Result.Sin_V4 (2) := Inet_Addr_Comp_Type (Addr.S_B2);\n       Result.Sin_V4 (3) := Inet_Addr_Comp_Type (Addr.S_B3);\n       Result.Sin_V4 (4) := Inet_Addr_Comp_Type (Addr.S_B4);\n-      return Result;\n    end To_Inet_Addr;\n \n    ------------"}, {"sha": "363416a674ffaa54aa51530f9d4b9880f5f609bf", "filename": "gcc/ada/gen-soccon.c", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -24,20 +24,22 @@\n \n /* This program generates g-soccon.ads */\n \n+/* To build using DEC C:\n+  CC/DEFINE=\"TARGET=OpenVMS\" gen-soccon\n+  LINK gen-soccon\n+  RUN gen-soccon\n+*/\n+\n+#ifndef TARGET\n+# error Please define TARGET\n+#endif\n+\n+#include <stdlib.h>\n #include <stdio.h>\n #include <string.h>\n \n #include \"gsocket.h\"\n \n-#ifdef __MINGW32__\n-#include <winsock2.h>\n-#else\n-#include <netinet/in.h>\n-#include <netinet/tcp.h>\n-#include <sys/ioctl.h>\n-#include <netdb.h>\n-#endif\n-\n struct line {\n   char *text;\n   char *value;\n@@ -65,6 +67,9 @@ struct line *first = NULL, *last = NULL;\n #define CN_(name,comment) add_line(#name, name, comment);\n /* Constant (generic) */\n \n+#define STR(p) STR1(p)\n+#define STR1(p) #p\n+\n void output (void);\n /* Generate output spec */\n \n@@ -113,7 +118,7 @@ TXT(\"--  This package provides target dependent definitions of constant for use\"\n TXT(\"--  by the GNAT.Sockets package (g-socket.ads). This package should not be\")\n TXT(\"--  directly with'ed by an applications program.\")\n _NL\n-TXT(\"--  This is the version for \" TARGET)\n+TXT(\"--  This is the version for \" STR (TARGET))\n TXT(\"--  This file is generated automatically, do not modify it by hand! Instead,\")\n TXT(\"--  make changes to gen-soccon.c and re-run it on each target.\")\n _NL\n@@ -377,12 +382,12 @@ _NL\n #ifndef FIONBIO\n #define FIONBIO -1\n #endif\n-CNX(FIONBIO, \"Set/clear non-blocking io\")\n+CND(FIONBIO, \"Set/clear non-blocking io\")\n \n #ifndef FIONREAD\n #define FIONREAD -1\n #endif\n-CNX(FIONREAD, \"How many bytes to read\")\n+CND(FIONREAD, \"How many bytes to read\")\n _NL\n TXT(\"   --------------------\")\n TXT(\"   -- Shutdown modes --\")\n@@ -548,6 +553,17 @@ CND(IP_ADD_MEMBERSHIP, \"Join a multicast group\")\n #endif\n CND(IP_DROP_MEMBERSHIP, \"Leave a multicast group\")\n \n+_NL\n+TXT(\"   -------------------\")\n+TXT(\"   -- System limits --\")\n+TXT(\"   -------------------\")\n+_NL\n+\n+#ifndef IOV_MAX\n+#define IOV_MAX INT_MAX\n+#endif\n+CND(IOV_MAX, \"Maximum writev iovcnt\")\n+\n _NL\n TXT(\"end GNAT.Sockets.Constants;\")\n \n@@ -587,9 +603,12 @@ output (void) {\n \n char *\n f_itoa (char *fmt, int n) {\n-  char buf[32];\n+  char buf[32], *ret;\n   sprintf (buf, fmt, n);\n-  return strdup (buf);\n+  ret = malloc (strlen (buf) + 1);\n+  if (ret != NULL)\n+    strcpy (ret, buf);\n+  return ret;\n }\n \n void"}, {"sha": "f593acfaed46e6e9d6a87768280992f33d4b6a29", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 96, "deletions": 19, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -2,7 +2,7 @@\n  *                                                                          *\n  *                         GNAT COMPILER COMPONENTS                         *\n  *                                                                          *\n- *                               S O C K E T                                *\n+ *                              G S O C K E T                               *\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n@@ -30,38 +30,115 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#ifdef __vxworks\n-#include \"vxWorks.h\"\n+#ifndef _XOPEN_SOURCE_EXTENDED\n+#define _XOPEN_SOURCE_EXTENDED 1\n+/* For HP-UX */\n #endif\n \n-#ifdef IN_RTS\n-#include \"tconfig.h\"\n-#include \"tsystem.h\"\n+#ifndef BSD_COMP\n+#define BSD_COMP 1\n+/* For Solaris */\n+#endif\n+\n+#ifndef _ALL_SOURCE\n+#define _ALL_SOURCE 1\n+/* For AIX */\n+#endif\n+\n+#ifndef _OSF_SOURCE\n+#define _OSF_SOURCE 1\n+/* For Tru64 */\n+#endif\n+\n+#include <limits.h>\n \n-#if defined (WINNT)\n+#if defined(__vxworks)\n+#include <vxWorks.h>\n+#include <ioLib.h>\n+#define SHUT_RD\t\t0\n+#define SHUT_WR\t\t1\n+#define SHUT_RDWR\t2\n+\n+#elif defined (WINNT)\n #define FD_SETSIZE 1024\n #include <windows.h>\n \n #ifdef __MINGW32__\n-#include \"mingw32.h\"\n-#if STD_MINGW\n-#include <winsock.h>\n-#else\n-#include <windows32/sockets.h>\n+#include <winsock2.h>\n+#include <ws2tcpip.h>\n+\n+#define EACCES\t\tWSAEACCES\n+#define EADDRINUSE\tWSAEADDRINUSE\n+#define EADDRNOTAVAIL\tWSAEADDRNOTAVAIL\n+#define EAFNOSUPPORT\tWSAEAFNOSUPPORT\n+#define EALREADY\tWSAEALREADY\n+#define EBADF\t\tWSAEBADF\n+#define ECONNABORTED\tWSAECONNABORTED\n+#define ECONNREFUSED\tWSAECONNREFUSED\n+#define ECONNRESET\tWSAECONNRESET\n+#define EDESTADDRREQ\tWSAEDESTADDRREQ\n+#define EFAULT\t\tWSAEFAULT\n+#define EHOSTDOWN\tWSAEHOSTDOWN\n+#define EHOSTUNREACH\tWSAEHOSTUNREACH\n+#define EINPROGRESS\tWSAEINPROGRESS\n+#define EINTR\t\tWSAEINTR\n+#define EINVAL\t\tWSAEINVAL\n+#define EIO\t\tWSAEDISCON\n+#define EISCONN\t\tWSAEISCONN\n+#define ELOOP\t\tWSAELOOP\n+#define EMFILE\t\tWSAEMFILE\n+#define EMSGSIZE\tWSAEMSGSIZE\n+#define ENAMETOOLONG\tWSAENAMETOOLONG\n+#define ENETDOWN\tWSAENETDOWN\n+#define ENETRESET\tWSAENETRESET\n+#define ENETUNREACH\tWSAENETUNREACH\n+#define ENOBUFS\t\tWSAENOBUFS\n+#define ENOPROTOOPT\tWSAENOPROTOOPT\n+#define ENOTCONN\tWSAENOTCONN\n+#define ENOTSOCK\tWSAENOTSOCK\n+#define EOPNOTSUPP\tWSAEOPNOTSUPP\n+#define EPFNOSUPPORT\tWSAEPFNOSUPPORT\n+#define EPROTONOSUPPORT\tWSAEPROTONOSUPPORT\n+#define ENOTSOCK\tWSAENOTSOCK\n+#define EOPNOTSUPP\tWSAEOPNOTSUPP\n+#define EPFNOSUPPORT\tWSAEPFNOSUPPORT\n+#define EPROTONOSUPPORT\tWSAEPROTONOSUPPORT\n+#define EPROTOTYPE\tWSAEPROTOTYPE\n+#define ESHUTDOWN\tWSAESHUTDOWN\n+#define ESOCKTNOSUPPORT\tWSAESOCKTNOSUPPORT\n+#define ETIMEDOUT\tWSAETIMEDOUT\n+#define ETOOMANYREFS\tWSAETOOMANYREFS\n+#define EWOULDBLOCK\tWSAEWOULDBLOCK\n+#define SHUT_RD\t\tSD_RECEIVE\n+#define SHUT_WR\t\tSD_SEND\n+#define SHUT_RDWR\tSD_BOTH\n+\n #endif\n+\n+#elif defined(VMS)\n+#define FD_SETSIZE 4096\n+#ifndef IN_RTS\n+/* These DEC C headers are not available when building with GCC */\n+#include <in.h>\n+#include <tcp.h>\n+#include <ioctl.h>\n+#include <netdb.h>\n #endif\n+\n #endif\n \n-#if defined (VMS)\n-#define FD_SETSIZE 4096\n-#include <sys/time.h>\n+#ifndef __MINGW32__\n+#include <errno.h>\n #endif\n \n-#else\n-#include \"config.h\"\n-#include \"system.h\"\n+#ifndef __vxworks\n+#include <sys/time.h>\n #endif\n \n #if !(defined (VMS) || defined (__MINGW32__) || defined(__rtems__))\n-# include <sys/socket.h>\n+#include <sys/socket.h>\n+#include <netinet/in.h>\n+#include <netinet/tcp.h>\n+#include <sys/ioctl.h>\n+#include <netdb.h>\n #endif"}, {"sha": "69317439a09e2ff67d438cfc177431678799cb1e", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/826757551170eec3ec794d961b5b6dc24d1244cd/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=826757551170eec3ec794d961b5b6dc24d1244cd", "patch": "@@ -33,7 +33,11 @@\n /*  This file provides a portable binding to the sockets API                */\n \n #include \"gsocket.h\"\n+/* Include all the necessary system-specific headers and define the\n+   necessary macros (shared with gen-soccon). */\n+\n #include \"raise.h\"\n+/* Required for __gnat_malloc() */\n \n extern void __gnat_disable_sigpipe (int fd);\n extern void __gnat_free_socket_set (fd_set *);"}]}