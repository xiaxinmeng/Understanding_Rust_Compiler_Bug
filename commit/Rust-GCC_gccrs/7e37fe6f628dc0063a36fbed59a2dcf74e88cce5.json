{"sha": "7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UzN2ZlNmY2MjhkYzAwNjNhMzZmYmVkNTlhMmRjZjc0ZTg4Y2NlNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-05-12T13:28:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-05-12T13:28:33Z"}, "message": "re PR tree-optimization/66101 (internal compiler error: in verify_loop_structure, at cfgloop.c:1662)\n\n2015-05-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66101\n\t* tree-ssa-dce.c (remove_dead_stmt): Properly mark loops for\n\tfixup if we turn a loop exit edge to a fallthru edge.\n\n\t* gcc.dg/torture/pr66101.c: New testcase.\n\nFrom-SVN: r223065", "tree": {"sha": "f486f78e5f57c2fb12fcb8b4580366a8208a78fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f486f78e5f57c2fb12fcb8b4580366a8208a78fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "caf07df9db933fc7c97c41060dfa940fa78bb345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf07df9db933fc7c97c41060dfa940fa78bb345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caf07df9db933fc7c97c41060dfa940fa78bb345"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "d3739c2d41db496acce6588add2576efc8916c11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "patch": "@@ -1,3 +1,9 @@\n+2015-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66101\n+\t* tree-ssa-dce.c (remove_dead_stmt): Properly mark loops for\n+\tfixup if we turn a loop exit edge to a fallthru edge.\n+\n 2015-05-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/37021"}, {"sha": "558a676e96f506c77901ac94bf3c41f576eb2835", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "patch": "@@ -1,3 +1,8 @@\n+2015-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66101\n+\t* gcc.dg/torture/pr66101.c: New testcase.\n+\n 2015-05-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/37021"}, {"sha": "f3ef5e55bfd9b8bd0306a563cd9c46045142f287", "filename": "gcc/testsuite/gcc.dg/torture/pr66101.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66101.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66101.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66101.c?ref=7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+\n+#include <setjmp.h>\n+\n+jmp_buf env;\n+\n+int a, c, d, e;\n+\n+int\n+bar ()\n+{\n+  int b = *(long *) 7 == 5 ? : 0;\n+  if (a || a > b)\n+    longjmp (env, 0);\n+  return 1;\n+}\n+\n+void\n+foo ()\n+{\n+  long f;\n+  setjmp (env);\n+  for (; d; c++)\n+    switch (c)\n+case 0:\n+      {\n+\tf = bar () >> 1;\n+\tif (e)\n+\t  goto L;\n+\tif (bar () >> 1)\n+\t  goto L;\n+      }\n+L:\n+    ;\n+}"}, {"sha": "df30614280478c4d3724fe1a04a4010f119706bf", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e37fe6f628dc0063a36fbed59a2dcf74e88cce5/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=7e37fe6f628dc0063a36fbed59a2dcf74e88cce5", "patch": "@@ -1149,7 +1149,12 @@ remove_dead_stmt (gimple_stmt_iterator *i, basic_block bb)\n \tif (e != e2)\n \t  {\n \t    cfg_altered = true;\n-            remove_edge (e2);\n+\t    /* If we made a BB unconditionally exit a loop then this\n+\t       transform alters the set of BBs in the loop.  Schedule\n+\t       a fixup.  */\n+\t    if (loop_exit_edge_p (bb->loop_father, e))\n+\t      loops_state_set (LOOPS_NEED_FIXUP);\n+\t    remove_edge (e2);\n \t  }\n \telse\n \t  ei_next (&ei);"}]}