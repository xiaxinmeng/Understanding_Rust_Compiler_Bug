{"sha": "34df756cd8f4c302aca408d5338d72940e552f0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRkZjc1NmNkOGY0YzMwMmFjYTQwOGQ1MzM4ZDcyOTQwZTU1MmYwZg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-02-09T07:04:08Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-02-09T07:04:08Z"}, "message": "Handle -fdiagnostics-color in lto\n\n2016-02-09  Tom de Vries  <tom@codesourcery.com>\n\n\tPR lto/69707\n\t* lto-wrapper.c (append_diag_options): New function.\n\t(compile_offload_image): Call append_diag_options.\n\n\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims-2.c: New test.\n\nFrom-SVN: r233237", "tree": {"sha": "0ab30fcfb32531563064a732e939e5005b6a3e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab30fcfb32531563064a732e939e5005b6a3e5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34df756cd8f4c302aca408d5338d72940e552f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34df756cd8f4c302aca408d5338d72940e552f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34df756cd8f4c302aca408d5338d72940e552f0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34df756cd8f4c302aca408d5338d72940e552f0f/comments", "author": null, "committer": null, "parents": [{"sha": "806a4ad8fef1c2a1b3a068ac64a0573a4467e87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/806a4ad8fef1c2a1b3a068ac64a0573a4467e87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/806a4ad8fef1c2a1b3a068ac64a0573a4467e87c"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "8006790a0f83754db59773c4a5cae50706d5c26a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34df756cd8f4c302aca408d5338d72940e552f0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34df756cd8f4c302aca408d5338d72940e552f0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34df756cd8f4c302aca408d5338d72940e552f0f", "patch": "@@ -1,3 +1,9 @@\n+2016-02-09  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR lto/69707\n+\t* lto-wrapper.c (append_diag_options): New function.\n+\t(compile_offload_image): Call append_diag_options.\n+\n 2016-02-08  Sandra Loosemore <sandra@codesourcery.com>\n \n \tPR other/69722"}, {"sha": "ed20b4ee95e78d99e4694744165e4a3e83dd11a4", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34df756cd8f4c302aca408d5338d72940e552f0f/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34df756cd8f4c302aca408d5338d72940e552f0f/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=34df756cd8f4c302aca408d5338d72940e552f0f", "patch": "@@ -540,6 +540,36 @@ append_compiler_options (obstack *argv_obstack, struct cl_decoded_option *opts,\n     }\n }\n \n+/* Append diag options in OPTS with length COUNT to ARGV_OBSTACK.  */\n+\n+static void\n+append_diag_options (obstack *argv_obstack, struct cl_decoded_option *opts,\n+\t\t     unsigned int count)\n+{\n+  /* Append compiler driver arguments as far as they were merged.  */\n+  for (unsigned int j = 1; j < count; ++j)\n+    {\n+      struct cl_decoded_option *option = &opts[j];\n+\n+      switch (option->opt_index)\n+\t{\n+\tcase OPT_fdiagnostics_color_:\n+\tcase OPT_fdiagnostics_show_caret:\n+\tcase OPT_fdiagnostics_show_option:\n+\tcase OPT_fdiagnostics_show_location_:\n+\tcase OPT_fshow_column:\n+\t  break;\n+\tdefault:\n+\t  continue;\n+\t}\n+\n+      /* Pass the option on.  */\n+      for (unsigned int i = 0; i < option->canonical_option_num_elements; ++i)\n+\tobstack_ptr_grow (argv_obstack, option->canonical_option[i]);\n+    }\n+}\n+\n+\n /* Append linker options OPTS to ARGV_OBSTACK.  */\n \n static void\n@@ -721,6 +751,7 @@ compile_offload_image (const char *target, const char *compiler_path,\n       /* Append options from offload_lto sections.  */\n       append_compiler_options (&argv_obstack, compiler_opts,\n \t\t\t       compiler_opt_count);\n+      append_diag_options (&argv_obstack, linker_opts, linker_opt_count);\n \n       /* Append options specified by -foffload last.  In case of conflicting\n \t options we expect offload compiler to choose the latest.  */"}, {"sha": "9de67f22b5c39144b635736d11f9ce3954bd7cd6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34df756cd8f4c302aca408d5338d72940e552f0f/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34df756cd8f4c302aca408d5338d72940e552f0f/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=34df756cd8f4c302aca408d5338d72940e552f0f", "patch": "@@ -1,3 +1,8 @@\n+2016-02-09  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR lto/69707\n+\t* testsuite/libgomp.oacc-c-c++-common/parallel-dims-2.c: New test.\n+\n 2016-02-02  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* testsuite/libgomp.c/target-31.c: Fix testcase."}, {"sha": "eea8c7e4fa2401dbbb907e094afa32155bc96689", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/parallel-dims-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34df756cd8f4c302aca408d5338d72940e552f0f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34df756cd8f4c302aca408d5338d72940e552f0f/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fparallel-dims-2.c?ref=34df756cd8f4c302aca408d5338d72940e552f0f", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run { target { openacc_nvidia_accel_selected && lto } } } */\n+/* { dg-additional-options \"-flto -fno-use-linker-plugin\" } */\n+\n+/* Worker and vector size checks.  Picked an outrageously large\n+   value.  */\n+\n+int main ()\n+{\n+#pragma acc parallel num_workers (2<<20) /* { dg-error \"using num_workers\" } */\n+  {\n+  }\n+\n+#pragma acc parallel vector_length (2<<20) /* { dg-error \"using vector_length\" } */\n+  {\n+  }\n+\n+  return 0;\n+}\n+"}]}