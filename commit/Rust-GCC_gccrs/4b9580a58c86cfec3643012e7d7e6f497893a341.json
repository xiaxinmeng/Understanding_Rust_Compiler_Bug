{"sha": "4b9580a58c86cfec3643012e7d7e6f497893a341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5NTgwYTU4Yzg2Y2ZlYzM2NDMwMTJlN2Q3ZTZmNDk3ODkzYTM0MQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.com", "date": "2000-10-31T15:34:27Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-10-31T15:34:27Z"}, "message": "sh-protos.h (reg_no_subreg_operand, [...]): Don't declare.\n\n\t* sh-protos.h (reg_no_subreg_operand, emit_fpscr_use): Don't declare.\n\t(fp_extended_operand, emit_fpscr_use): Likewise.\n\t* sh.c (reg_no_subreg_operand, fp_extended_operand): Delete functions.\n\t(fpul_operand): New function.\n\t* sh.h (PREDICATE_CODES): Remove reg_no_subreg_operand and\n\tfp_extended_operand.  Add fpul_operand.\n\t* sh.md (mulsf3, mulsf3_i4): Use fp_arith_reg_operand for \"f\" operands.\n\t(mulsf3_ie, macsf3, cmpgtsf_t, cmpeqsf_t, ieee_ccmpeqsf_t): Likewise.\n\t(cmpgtsf_t_i4, cmpeqsf_t_i4, ieee_ccmpeqsf_t_4, negsf2): Likewise.\n\t(negsf2_i, sqrtsf2, sqrtsf2_i, abssf2, abssf2_i, adddf3): Likewise.\n\t(adddf3_i, subdf3, subdf3_i, muldf3, muldf3_i, divdf3): Likewise.\n\t(divdf3_i): Likewise.\n\t(floatsisf2): Likewise.  Use fpul_operand for 'y' operand.\n\t(floatsisf2_i4, floatsisf2_ie, fix_truncsfsi2): Likewise.\n\t(fix_truncsfsi2_i4, fixsfsi, floatsidf2, floatsidf2_i): Likewise.\n\t(fix_truncdfsi2, fix_truncdfsi2_i, extendsfdf2): Likewise.\n\t(extendsfdf2_i4, truncdfsf2, truncdfsf2_i4): Likewise.\n\nFrom-SVN: r37158", "tree": {"sha": "f535c561d57f4bfb1ba2d22cd448fe8302816233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f535c561d57f4bfb1ba2d22cd448fe8302816233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b9580a58c86cfec3643012e7d7e6f497893a341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9580a58c86cfec3643012e7d7e6f497893a341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9580a58c86cfec3643012e7d7e6f497893a341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9580a58c86cfec3643012e7d7e6f497893a341/comments", "author": null, "committer": null, "parents": [{"sha": "89b781699385e3f537dde0360472805f42cef916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b781699385e3f537dde0360472805f42cef916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b781699385e3f537dde0360472805f42cef916"}], "stats": {"total": 258, "additions": 122, "deletions": 136}, "files": [{"sha": "f4a90da6f84f4720360cf38ba52d1b73d4c31250", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b9580a58c86cfec3643012e7d7e6f497893a341", "patch": "@@ -1,3 +1,23 @@\n+Tue Oct 31 15:33:27 2000  J\"orn Rennecke <amylaar@redhat.com>\n+\n+\t* sh-protos.h (reg_no_subreg_operand, emit_fpscr_use): Don't declare.\n+\t(fp_extended_operand, emit_fpscr_use): Likewise.\n+\t* sh.c (reg_no_subreg_operand, fp_extended_operand): Delete functions.\n+\t(fpul_operand): New function.\n+\t* sh.h (PREDICATE_CODES): Remove reg_no_subreg_operand and\n+\tfp_extended_operand.  Add fpul_operand.\n+\t* sh.md (mulsf3, mulsf3_i4): Use fp_arith_reg_operand for \"f\" operands.\n+\t(mulsf3_ie, macsf3, cmpgtsf_t, cmpeqsf_t, ieee_ccmpeqsf_t): Likewise.\n+\t(cmpgtsf_t_i4, cmpeqsf_t_i4, ieee_ccmpeqsf_t_4, negsf2): Likewise.\n+\t(negsf2_i, sqrtsf2, sqrtsf2_i, abssf2, abssf2_i, adddf3): Likewise.\n+\t(adddf3_i, subdf3, subdf3_i, muldf3, muldf3_i, divdf3): Likewise.\n+\t(divdf3_i): Likewise.\n+\t(floatsisf2): Likewise.  Use fpul_operand for 'y' operand.\n+\t(floatsisf2_i4, floatsisf2_ie, fix_truncsfsi2): Likewise.\n+\t(fix_truncsfsi2_i4, fixsfsi, floatsidf2, floatsidf2_i): Likewise.\n+\t(fix_truncdfsi2, fix_truncdfsi2_i, extendsfdf2): Likewise.\n+\t(extendsfdf2_i4, truncdfsf2, truncdfsf2_i4): Likewise.\n+\n 2000-10-31  Bernd Schmidt  <bernds@redhat.co.uk>\n \n         * config/i386/i386.c (ix86_init_builtins): Correct return type"}, {"sha": "21872ac7f80f6b97f1fb476344526352ec21a655", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=4b9580a58c86cfec3643012e7d7e6f497893a341", "patch": "@@ -81,9 +81,7 @@ extern int system_reg_operand PARAMS ((rtx, enum machine_mode));\n extern int general_movsrc_operand PARAMS ((rtx, enum machine_mode));\n extern int general_movdst_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_reg_operand PARAMS ((rtx, enum machine_mode));\n-extern int reg_no_subreg_operand PARAMS ((rtx, enum machine_mode));\n extern int fp_arith_reg_operand PARAMS ((rtx, enum machine_mode));\n-extern int fp_extended_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_operand PARAMS ((rtx, enum machine_mode));\n extern int arith_reg_or_0_operand PARAMS ((rtx, enum machine_mode));\n extern int logical_operand PARAMS ((rtx, enum machine_mode));\n@@ -120,7 +118,6 @@ extern void sh_expand_epilogue PARAMS ((void));\n extern int sh_need_epilogue PARAMS ((void));\n extern void function_epilogue PARAMS ((FILE *, int));\n extern int initial_elimination_offset PARAMS ((int, int));\n-extern void emit_fpscr_use PARAMS ((void));\n extern int fldi_ok PARAMS ((void));\n \n #ifdef HARD_CONST"}, {"sha": "74d365bf7085430571594327d8dc072ca8cd9444", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 9, "deletions": 41, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=4b9580a58c86cfec3643012e7d7e6f497893a341", "patch": "@@ -4659,20 +4659,6 @@ general_movdst_operand (op, mode)\n   return general_operand (op, mode);\n }\n \n-/* Accept a register, but not a subreg of any kind.  This allows us to\n-   avoid pathological cases in reload wrt data movement common in \n-   int->fp conversion.  */\n-\n-int\n-reg_no_subreg_operand (op, mode)\n-     register rtx op;\n-     enum machine_mode mode;\n-{\n-  if (GET_CODE (op) == SUBREG)\n-    return 0;\n-  return register_operand (op, mode);\n-}\n-\n /* Returns 1 if OP is a normal arithmetic register.  */\n \n int\n@@ -4720,33 +4706,6 @@ fp_arith_reg_operand (op, mode)\n   return 0;\n }\n \n-int\n-fp_extended_operand (op, mode)\n-     rtx op;\n-     enum machine_mode mode;\n-{\n-  if (GET_CODE (op) == FLOAT_EXTEND && GET_MODE (op) == mode)\n-    {\n-      op = XEXP (op, 0);\n-      mode = GET_MODE (op);\n-    }\n-  if (register_operand (op, mode))\n-    {\n-      int regno;\n-\n-      if (GET_CODE (op) == REG)\n-\tregno = REGNO (op);\n-      else if (GET_CODE (op) == SUBREG && GET_CODE (SUBREG_REG (op)) == REG)\n-\tregno = REGNO (SUBREG_REG (op));\n-      else\n-\treturn 1;\n-\n-      return (regno != T_REG && regno != PR_REG && regno > 15\n-\t      && regno != MACH_REG && regno != MACL_REG);\n-    }\n-  return 0;\n-}\n-\n /* Returns 1 if OP is a valid source operand for an arithmetic insn.  */\n \n int\n@@ -4856,6 +4815,15 @@ fpscr_operand (op, mode)\n \t  && GET_MODE (op) == PSImode);\n }\n \n+int\n+fpul_operand (op, mode)\n+     rtx op;\n+{\n+  return (GET_CODE (op) == REG\n+\t  && (REGNO (op) == FPUL_REG || REGNO (op) >= FIRST_PSEUDO_REGISTER)\n+\t  && GET_MODE (op) == mode);\n+}\n+\n int\n commutative_float_operator (op, mode)\n      rtx op;"}, {"sha": "d217f35476ac7307054306ec5b8d69c16409454c", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=4b9580a58c86cfec3643012e7d7e6f497893a341", "patch": "@@ -2231,13 +2231,12 @@ extern struct rtx_def *fpscr_rtx;\n #define PREDICATE_CODES \\\n   {\"arith_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\t\\\n   {\"arith_reg_operand\", {SUBREG, REG}},\t\t\t\t\t\\\n-  {\"reg_no_subreg_operand\", {REG}},\t\t\t\t\t\\\n   {\"arith_reg_or_0_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n   {\"binary_float_operator\", {PLUS, MULT}},\t\t\t\t\\\n   {\"commutative_float_operator\", {PLUS, MULT}},\t\t\t\t\\\n   {\"fp_arith_reg_operand\", {SUBREG, REG}},\t\t\t\t\\\n-  {\"fp_extended_operand\", {SUBREG, REG, FLOAT_EXTEND}},\t\t\t\\\n   {\"fpscr_operand\", {REG}},\t\t\t\t\t\t\\\n+  {\"fpul_operand\", {REG}},\t\t\t\t\t\t\\\n   {\"general_movsrc_operand\", {SUBREG, REG, CONST_INT, CONST_DOUBLE, MEM}}, \\\n   {\"general_movdst_operand\", {SUBREG, REG, MEM}},\t\t\t\\\n   {\"logical_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\"}, {"sha": "4021fb2c76ee39e192ae5632725eaf7482bf57dd", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 92, "deletions": 90, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9580a58c86cfec3643012e7d7e6f497893a341/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=4b9580a58c86cfec3643012e7d7e6f497893a341", "patch": "@@ -4163,9 +4163,9 @@\n ;; SH3E, we use a separate insn for SH3E mulsf3.\n \n (define_expand \"mulsf3\"\n-  [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 2 \"arith_reg_operand\" \"\")]\n+  [(match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 2 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH3E\"\n   \"\n {\n@@ -4177,27 +4177,27 @@\n }\")\n \n (define_insn \"mulsf3_i4\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"arith_reg_operand\" \"%0\")\n-\t\t (match_operand:SF 2 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%0\")\n+\t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fmul\t%2,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"mulsf3_ie\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"arith_reg_operand\" \"%0\")\n-\t\t (match_operand:SF 2 \"arith_reg_operand\" \"f\")))]\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%0\")\n+\t\t (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"fmul\t%2,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"*macsf3\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(plus:SF (mult:SF (match_operand:SF 1 \"arith_reg_operand\" \"%w\")\n-\t\t\t  (match_operand:SF 2 \"arith_reg_operand\" \"f\"))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(plus:SF (mult:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"%w\")\n+\t\t\t  (match_operand:SF 2 \"fp_arith_reg_operand\" \"f\"))\n \t\t (match_operand:SF 3 \"arith_reg_operand\" \"0\")))\n    (use (match_operand:PSI 4 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n@@ -4223,8 +4223,8 @@\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"floatsisf2\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"\")\n-\t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"\")))]\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n+\t(float:SF (match_operand:SI 1 \"fpul_operand\" \"\")))]\n   \"TARGET_SH3E\"\n   \"\n {\n@@ -4236,24 +4236,24 @@\n }\")\n \n (define_insn \"floatsisf2_i4\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(float:SF (match_operand:SI 1 \"fpul_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"float\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"*floatsisf2_ie\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:SF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))]\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(float:SF (match_operand:SI 1 \"fpul_operand\" \"y\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"float\t%1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_expand \"fix_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n-\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n+  [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n+\t(fix:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E\"\n   \"\n {\n@@ -4265,8 +4265,8 @@\n }\")\n \n (define_insn \"fix_truncsfsi2_i4\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n-\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n+\t(fix:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"ftrc\t%1,%0\"\n@@ -4296,59 +4296,61 @@\n ;;   (set (match_dup 0) (reg:SI 22))])\n \n (define_insn \"*fixsfsi\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n-\t(fix:SI (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n+  [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n+\t(fix:SI (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"ftrc\t%1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"cmpgtsf_t\"\n-  [(set (reg:SI 18) (gt:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n-\t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n+  [(set (reg:SI 18) (gt:SI (match_operand:SF 0 \"fp_arith_reg_operand\" \"f\")\n+\t\t\t   (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"fcmp/gt\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"cmpeqsf_t\"\n-  [(set (reg:SI 18) (eq:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n-\t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))]\n+  [(set (reg:SI 18) (eq:SI (match_operand:SF 0 \"fp_arith_reg_operand\" \"f\")\n+\t\t\t   (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))]\n   \"TARGET_SH3E && ! TARGET_SH4\"\n   \"fcmp/eq\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"ieee_ccmpeqsf_t\"\n-  [(set (reg:SI 18) (ior:SI (reg:SI 18)\n-\t\t\t    (eq:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n-\t\t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\"))))]\n+  [(set (reg:SI 18)\n+\t(ior:SI (reg:SI 18)\n+\t\t(eq:SI (match_operand:SF 0 \"fp_arith_reg_operand\" \"f\")\n+\t\t       (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\"))))]\n   \"TARGET_SH3E && TARGET_IEEE && ! TARGET_SH4\"\n   \"* return output_ieee_ccmpeq (insn, operands);\"\n   [(set_attr \"length\" \"4\")])\n \n \n (define_insn \"cmpgtsf_t_i4\"\n-  [(set (reg:SI 18) (gt:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n-\t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n+  [(set (reg:SI 18) (gt:SI (match_operand:SF 0 \"fp_arith_reg_operand\" \"f\")\n+\t\t\t   (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcmp/gt\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"cmpeqsf_t_i4\"\n-  [(set (reg:SI 18) (eq:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n-\t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\")))\n+  [(set (reg:SI 18) (eq:SI (match_operand:SF 0 \"fp_arith_reg_operand\" \"f\")\n+\t\t\t   (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcmp/eq\t%1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_insn \"*ieee_ccmpeqsf_t_4\"\n-  [(set (reg:SI 18) (ior:SI (reg:SI 18)\n-\t\t\t    (eq:SI (match_operand:SF 0 \"arith_reg_operand\" \"f\")\n-\t\t\t\t   (match_operand:SF 1 \"arith_reg_operand\" \"f\"))))\n+  [(set (reg:SI 18)\n+\t(ior:SI (reg:SI 18)\n+\t\t(eq:SI (match_operand:SF 0 \"fp_arith_reg_operand\" \"f\")\n+\t\t       (match_operand:SF 1 \"fp_arith_reg_operand\" \"f\"))))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_IEEE && TARGET_SH4\"\n   \"* return output_ieee_ccmpeq (insn, operands);\"\n@@ -4367,121 +4369,121 @@\n }\")\n \n (define_expand \"negsf2\"\n-  [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"arith_reg_operand\" \"\")]\n+  [(match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH3E\"\n   \"{ expand_sf_unop (&gen_negsf2_i, operands); DONE; }\")\n \n (define_insn \"negsf2_i\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(neg:SF (match_operand:SF 1 \"arith_reg_operand\" \"0\")))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(neg:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fneg\t%0\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"sqrtsf2\"\n-  [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"arith_reg_operand\" \"\")]\n+  [(match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH3E\"\n   \"{ expand_sf_unop (&gen_sqrtsf2_i, operands); DONE; }\")\n \n (define_insn \"sqrtsf2_i\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(sqrt:SF (match_operand:SF 1 \"arith_reg_operand\" \"0\")))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(sqrt:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fsqrt\t%0\"\n   [(set_attr \"type\" \"fdiv\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"abssf2\"\n-  [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"arith_reg_operand\" \"\")]\n+  [(match_operand:SF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 1 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH3E\"\n   \"{ expand_sf_unop (&gen_abssf2_i, operands); DONE; }\")\n \n (define_insn \"abssf2_i\"\n-  [(set (match_operand:SF 0 \"arith_reg_operand\" \"=f\")\n-\t(abs:SF (match_operand:SF 1 \"arith_reg_operand\" \"0\")))\n+  [(set (match_operand:SF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(abs:SF (match_operand:SF 1 \"fp_arith_reg_operand\" \"0\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH3E\"\n   \"fabs\t%0\"\n   [(set_attr \"type\" \"fmove\")\n    (set_attr \"fp_mode\" \"single\")])\n \n (define_expand \"adddf3\"\n-  [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 1 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 2 \"arith_reg_operand\" \"\")]\n+  [(match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 1 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 2 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"{ expand_df_binop (&gen_adddf3_i, operands); DONE; }\")\n \n (define_insn \"adddf3_i\"\n-  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"arith_reg_operand\" \"%0\")\n-\t\t (match_operand:DF 2 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(plus:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"%0\")\n+\t\t (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fadd\t%2,%0\"\n   [(set_attr \"type\" \"dfp_arith\")\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"subdf3\"\n-  [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 1 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 2 \"arith_reg_operand\" \"\")]\n+  [(match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 1 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 2 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"{ expand_df_binop (&gen_subdf3_i, operands); DONE; }\")\n \n (define_insn \"subdf3_i\"\n-  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"arith_reg_operand\" \"0\")\n-\t\t  (match_operand:DF 2 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(minus:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"0\")\n+\t\t  (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fsub\t%2,%0\"\n   [(set_attr \"type\" \"dfp_arith\")\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"muldf3\"\n-  [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 1 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 2 \"arith_reg_operand\" \"\")]\n+  [(match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 1 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 2 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"{ expand_df_binop (&gen_muldf3_i, operands); DONE; }\")\n \n (define_insn \"muldf3_i\"\n-  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"arith_reg_operand\" \"%0\")\n-\t\t (match_operand:DF 2 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(mult:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"%0\")\n+\t\t (match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fmul\t%2,%0\"\n   [(set_attr \"type\" \"dfp_arith\")\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"divdf3\"\n-  [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 1 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 2 \"arith_reg_operand\" \"\")]\n+  [(match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 1 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:DF 2 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"{ expand_df_binop (&gen_divdf3_i, operands); DONE; }\")\n \n (define_insn \"divdf3_i\"\n-  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(div:DF (match_operand:DF 1 \"arith_reg_operand\" \"0\")\n-\t\t(match_operand:DF 2 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(div:DF (match_operand:DF 1 \"fp_arith_reg_operand\" \"0\")\n+\t\t(match_operand:DF 2 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 3 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fdiv\t%2,%0\"\n   [(set_attr \"type\" \"dfdiv\")\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"floatsidf2\"\n-  [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SI 1 \"reg_no_subreg_operand\" \"\")]\n+  [(match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SI 1 \"fpul_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"\n {\n@@ -4490,17 +4492,17 @@\n }\")\n \n (define_insn \"floatsidf2_i\"\n-  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(float:DF (match_operand:SI 1 \"reg_no_subreg_operand\" \"y\")))\n+  [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(float:DF (match_operand:SI 1 \"fpul_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"float\t%1,%0\"\n   [(set_attr \"type\" \"dfp_conv\")\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"fix_truncdfsi2\"\n-  [(match_operand:SI 0 \"arith_reg_operand\" \"=r\")\n-   (match_operand:DF 1 \"arith_reg_operand\" \"f\")]\n+  [(match_operand:SI 0 \"fpul_operand\" \"\")\n+   (match_operand:DF 1 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"\n {\n@@ -4509,8 +4511,8 @@\n }\")\n \n (define_insn \"fix_truncdfsi2_i\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=y\")\n-\t(fix:SI (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:SI 0 \"fpul_operand\" \"=y\")\n+\t(fix:SI (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"ftrc\t%1,%0\"\n@@ -4624,8 +4626,8 @@\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"extendsfdf2\"\n-  [(match_operand:DF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:SF 1 \"reg_no_subreg_operand\" \"\")]\n+  [(match_operand:DF 0 \"fp_arith_reg_operand\" \"\")\n+   (match_operand:SF 1 \"fpul_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"\n {\n@@ -4634,17 +4636,17 @@\n }\")\n \n (define_insn \"extendsfdf2_i4\"\n-  [(set (match_operand:DF 0 \"arith_reg_operand\" \"=f\")\n-\t(float_extend:DF (match_operand:SF 1 \"reg_no_subreg_operand\" \"y\")))\n+  [(set (match_operand:DF 0 \"fp_arith_reg_operand\" \"=f\")\n+\t(float_extend:DF (match_operand:SF 1 \"fpul_operand\" \"y\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcnvsd  %1,%0\"\n   [(set_attr \"type\" \"fp\")\n    (set_attr \"fp_mode\" \"double\")])\n \n (define_expand \"truncdfsf2\"\n-  [(match_operand:SF 0 \"arith_reg_operand\" \"\")\n-   (match_operand:DF 1 \"arith_reg_operand\" \"\")]\n+  [(match_operand:SF 0 \"fpul_operand\" \"\")\n+   (match_operand:DF 1 \"fp_arith_reg_operand\" \"\")]\n   \"TARGET_SH4\"\n   \"\n {\n@@ -4653,8 +4655,8 @@\n }\")\n \n (define_insn \"truncdfsf2_i4\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=y\")\n-\t(float_truncate:SF (match_operand:DF 1 \"arith_reg_operand\" \"f\")))\n+  [(set (match_operand:SF 0 \"fpul_operand\" \"=y\")\n+\t(float_truncate:SF (match_operand:DF 1 \"fp_arith_reg_operand\" \"f\")))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"c\"))]\n   \"TARGET_SH4\"\n   \"fcnvds  %1,%0\""}]}