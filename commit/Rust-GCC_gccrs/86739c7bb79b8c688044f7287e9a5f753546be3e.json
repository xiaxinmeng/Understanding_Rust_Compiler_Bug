{"sha": "86739c7bb79b8c688044f7287e9a5f753546be3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY3MzljN2JiNzliOGM2ODgwNDRmNzI4N2U5YTVmNzUzNTQ2YmUzZQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-30T18:01:10Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-05-30T18:01:10Z"}, "message": "(print_deps_missing_files): New global.\n\n(main): New argument -MG.  Treat missing include files as\ngenerated files and output dependencies for them.\n\nFrom-SVN: r7393", "tree": {"sha": "d33947b7e1745dca714bf140be51ff26537cbdbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d33947b7e1745dca714bf140be51ff26537cbdbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86739c7bb79b8c688044f7287e9a5f753546be3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86739c7bb79b8c688044f7287e9a5f753546be3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86739c7bb79b8c688044f7287e9a5f753546be3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86739c7bb79b8c688044f7287e9a5f753546be3e/comments", "author": null, "committer": null, "parents": [{"sha": "256a105a3015c8687357ed2e685256cbb943fc9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/256a105a3015c8687357ed2e685256cbb943fc9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/256a105a3015c8687357ed2e685256cbb943fc9f"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "d61ba130d446982b833bb700b4e734877ce444f2", "filename": "gcc/cccp.c", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86739c7bb79b8c688044f7287e9a5f753546be3e/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86739c7bb79b8c688044f7287e9a5f753546be3e/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=86739c7bb79b8c688044f7287e9a5f753546be3e", "patch": "@@ -375,6 +375,11 @@ static int no_trigraphs = 0;\n \n static int print_deps = 0;\n \n+/* Nonzero if missing .h files in -M output are assumed to be generated\n+   files and not errors.  */\n+\n+static int print_deps_missing_files = 0;\n+\n /* Nonzero means print names of header files (-H).  */\n \n static int print_include_names = 0;\n@@ -1396,6 +1401,22 @@ main (argc, argv)\n \tbreak;\n \n       case 'M':\n+\t/* ??? The style of the choices here is a bit mixed.\n+\t   The chosen scheme is a hybrid of keeping all options in one string\n+\t   and specifying each option in a separate argument:\n+\t   -M|-MM|-MD file|-MMD file [-MG].  An alternative is:\n+\t   -M|-MM|-MD file|-MMD file|-MG|-MMG|-MGD file|-MMGD file; or more\n+\t   concisely: -M[M][G][D file].  This is awkward to handle in specs,\n+\t   and is not as extensible.  */\n+\t/* ??? -MG must be specified in addition to one of the other arguments.\n+\t   This can be relaxed in the future without breaking anything.\n+\t   The converse isn't true.  */\n+\n+\tif (!strcmp (argv[i], \"-MG\"))\n+\t  {\n+\t    print_deps_missing_files = 1;\n+\t    break;\n+\t  }\n \tif (!strcmp (argv[i], \"-M\"))\n \t  print_deps = 2;\n \telse if (!strcmp (argv[i], \"-MM\"))\n@@ -1873,6 +1894,11 @@ main (argc, argv)\n   } else if ((f = open (in_fname, O_RDONLY, 0666)) < 0)\n     goto perror;\n \n+  /* -MG doesn't select the form of output and must be specified with\n+     one of the other -M options.  */\n+  if (print_deps == 0 && print_deps_missing_files)\n+    fatal (\"-MG must be specified with one of -M, -MM, -MD, -MMD\");\n+\n   /* Either of two environment variables can specify output of deps.\n      Its value is either \"OUTPUT_FILE\" or \"OUTPUT_FILE DEPS_TARGET\",\n      where OUTPUT_FILE is the file to write deps info to\n@@ -4210,12 +4236,51 @@ do_include (buf, limit, op, keyword)\n \n     strncpy (fname, fbeg, flen);\n     fname[flen] = 0;\n+    /* If generating dependencies and -MG was specified, we assume missing\n+       files are leaf files, living in the same directory as the source file\n+       or other similar place; these missing files may be generated from\n+       other files and may not exist yet (eg: y.tab.h).  */\n+    if (print_deps_missing_files\n+\t&& print_deps > (angle_brackets || (system_include_depth > 0)))\n+      {\n+\t/* ??? Perhaps this warning shouldn't be printed at all.  */\n+\twarning (\"No include path in which to find %s\", fname);\n+\n+\t/* If it was requested as a system header file,\n+\t   then assume it belongs in the first place to look for such.  */\n+\tif (angle_brackets)\n+\t  {\n+\t    for (searchptr = search_start; searchptr; searchptr = searchptr->next)\n+\t      {\n+\t\tif (searchptr->fname)\n+\t\t  {\n+\t\t    char *p;\n+\n+\t\t    if (searchptr->fname[0] == 0)\n+\t\t      continue;\n+\t\t    p = xmalloc (strlen (searchptr->fname)\n+\t\t\t\t + strlen (fname) + 2);\n+\t\t    strcpy (p, searchptr->fname);\n+\t\t    strcat (p, \"/\");\n+\t\t    strcat (p, fname);\n+\t\t    deps_output (p, ' ');\n+\t\t    break;\n+\t\t  }\n+\t      }\n+\t  }\n+\telse\n+\t  {\n+\t    /* Otherwise, omit the directory, as if the file existed\n+\t       in the directory with the source.  */\n+\t    deps_output (fname, ' ');\n+\t  }\n+      }\n     /* If -M was specified, and this header file won't be added to the\n        dependency list, then don't count this as an error, because we can\n        still produce correct output.  Otherwise, we can't produce correct\n        output, because there may be dependencies we need inside the missing\n        file, and we don't know what directory this missing file exists in.  */\n-    if (print_deps\n+    else if (print_deps\n \t&& (print_deps <= (angle_brackets || (system_include_depth > 0))))\n       warning (\"No include path in which to find %s\", fname);\n     else if (search_start)"}]}