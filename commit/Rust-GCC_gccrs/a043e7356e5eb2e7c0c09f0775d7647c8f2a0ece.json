{"sha": "a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0M2U3MzU2ZTVlYjJlN2MwYzA5ZjA3NzVkNzY0N2M4ZjJhMGVjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:26:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-22T10:26:01Z"}, "message": "[multiple changes]\n\n2010-10-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb (Complete_Private_Subtype): The full view of the subtype\n\tmay already have a rep item chain inherited from the full view of the\n\tbase type, so do not overwrite it when propagating rep items from the\n\tpartial view of the subtype.\n\t* sem_ch3.adb: Minor code reorganization.  Minor reformatting.\n\n2010-10-22  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi (gnatmetric): Remove description of debug option.\n\n2010-10-22  Tristan Gingold  <gingold@adacore.com>\n\n\t* adaint.c (__gnat_number_of_cpus): Add implementation for VMS.\n\n2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch5.adb: Set properly starting sloc of loop parameter.\n\nFrom-SVN: r165818", "tree": {"sha": "3a1452e51a811170156c699e84b2cbe12f49dc63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a1452e51a811170156c699e84b2cbe12f49dc63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/comments", "author": null, "committer": null, "parents": [{"sha": "229db35122a3015db205e642f515593ed1841a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229db35122a3015db205e642f515593ed1841a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229db35122a3015db205e642f515593ed1841a00"}], "stats": {"total": 95, "additions": 82, "deletions": 13}, "files": [{"sha": "ca316fdb8ba310d4c57b485830572dce821081ef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "patch": "@@ -1,3 +1,23 @@\n+2010-10-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb (Complete_Private_Subtype): The full view of the subtype\n+\tmay already have a rep item chain inherited from the full view of the\n+\tbase type, so do not overwrite it when propagating rep items from the\n+\tpartial view of the subtype.\n+\t* sem_ch3.adb: Minor code reorganization.  Minor reformatting.\n+\n+2010-10-22  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi (gnatmetric): Remove description of debug option.\n+\n+2010-10-22  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* adaint.c (__gnat_number_of_cpus): Add implementation for VMS.\n+\n+2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch5.adb: Set properly starting sloc of loop parameter.\n+\n 2010-10-22  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.adb (May_Be_Lvalue): An actual in a function call can be an"}, {"sha": "b3e2e0ce648707f6e8d0f68907e3c0a8677d7d2a", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "patch": "@@ -188,6 +188,9 @@ struct vstring\n   char string[NAM$C_MAXRSS+1];\n };\n \n+#define SYI$_ACTIVECPU_CNT 0x111e\n+extern int LIB$GETSYI (int *, unsigned int *);\n+\n #else\n #include <utime.h>\n #endif\n@@ -2394,6 +2397,15 @@ __gnat_number_of_cpus (void)\n   SYSTEM_INFO sysinfo;\n   GetSystemInfo (&sysinfo);\n   cores = (int) sysinfo.dwNumberOfProcessors;\n+\n+#elif defined (VMS)\n+  int code = SYI$_ACTIVECPU_CNT;\n+  unsigned int res;\n+  int status;\n+\n+  status = LIB$GETSYI (&code, &res);\n+  if ((status & 1) != 0)\n+    cores = res;\n #endif\n \n   return cores;"}, {"sha": "bc688383ab1e9261f0e8ffa2ac2d53ded4af0716", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "patch": "@@ -14553,12 +14553,6 @@ Verbose mode;\n @command{gnatmetric} generates version information and then\n a trace of sources being processed.\n \n-@item ^-dv^/DEBUG_OUTPUT^\n-@cindex @option{^-dv^/DEBUG_OUTPUT^} (@code{gnatmetric})\n-Debug mode;\n-@command{gnatmetric} generates various messages useful to understand what\n-happens during the metrics computation\n-\n @item ^-q^/QUIET^\n @cindex @option{^-q^/QUIET^} (@code{gnatmetric})\n Quiet mode."}, {"sha": "489707ece970c140c7aed6494bb37886b07cdfdc", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "patch": "@@ -1711,11 +1711,19 @@ package body Ch5 is\n       --  during analysis of the loop parameter specification.\n \n       if Token = Tok_Of or else Token = Tok_Colon then\n+\n+         if Ada_Version < Ada_2012 then\n+            Error_Msg_SC (\"iterator is an Ada2012 feature\");\n+         end if;\n+\n          return P_Iterator_Specification (ID_Node);\n       end if;\n \n+      --  The span of the Loop_Parameter_Specification starts at the\n+      --  defining identifier.\n+\n       Loop_Param_Specification_Node :=\n-        New_Node (N_Loop_Parameter_Specification, Token_Ptr);\n+        New_Node (N_Loop_Parameter_Specification, Sloc (ID_Node));\n       Set_Defining_Identifier (Loop_Param_Specification_Node, ID_Node);\n \n       if Token = Tok_Left_Paren then\n@@ -1753,7 +1761,7 @@ package body Ch5 is\n       Node1 : Node_Id;\n \n    begin\n-      Node1 :=  New_Node (N_Iterator_Specification, Token_Ptr);\n+      Node1 :=  New_Node (N_Iterator_Specification, Sloc (Def_Id));\n       Set_Defining_Identifier (Node1, Def_Id);\n \n       if Token = Tok_Colon then"}, {"sha": "0c8201182e9ebb61c3530af066e0ae2826e71d49", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a043e7356e5eb2e7c0c09f0775d7647c8f2a0ece", "patch": "@@ -9914,12 +9914,47 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n-      --  Copy rep item chain, and also setting of Has_Predicates from\n-      --  private subtype to full subtype, since we will need these on the\n-      --  full subtype to create the predicate function.\n+      --  Link rep item chain, and also setting of Has_Predicates from private\n+      --  subtype to full subtype, since we will need these on the full subtype\n+      --  to create the predicate function. Note that the full subtype may\n+      --  already have rep items, inherited from the full view of the base\n+      --  type, so we must be sure not to overwrite these entries.\n \n-      Set_First_Rep_Item (Full, First_Rep_Item (Priv));\n-      Set_Has_Predicates (Full, Has_Predicates (Priv));\n+      declare\n+         Item      : Node_Id;\n+         Next_Item : Node_Id;\n+\n+      begin\n+         Item := First_Rep_Item (Full);\n+\n+         --  If no existing rep items on full type, we can just link directly\n+         --  to the list of items on the private type.\n+\n+         if No (Item) then\n+            Set_First_Rep_Item (Full, First_Rep_Item (Priv));\n+\n+         --  Else search to end of items currently linked to the full subtype\n+\n+         else\n+            loop\n+               Next_Item := Next_Rep_Item (Item);\n+               exit when No (Next_Item);\n+               Item := Next_Item;\n+            end loop;\n+\n+            --  And link the private type items at the end of the chain\n+\n+            Set_Next_Rep_Item (Item, First_Rep_Item (Priv));\n+         end if;\n+      end;\n+\n+      --  Make sure Has_Predicates is set on full type if it is set on the\n+      --  private type. Note that it may already be set on the full type and\n+      --  if so, we don't want to unset it.\n+\n+      if Has_Predicates (Priv) then\n+         Set_Has_Predicates (Full);\n+      end if;\n    end Complete_Private_Subtype;\n \n    ----------------------------"}]}