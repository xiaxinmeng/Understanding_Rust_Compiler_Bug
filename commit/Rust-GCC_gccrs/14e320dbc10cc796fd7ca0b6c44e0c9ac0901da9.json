{"sha": "14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRlMzIwZGJjMTBjYzc5NmZkN2NhMGI2YzQ0ZTBjOWFjMDkwMWRhOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-28T17:26:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-28T19:53:58Z"}, "message": "c++: Allow template rvalue-ref conv to bind to lvalue ref.\n\nWhen I implemented the [over.match.ref] rule that a reference conversion\nfunction needs to match l/rvalue of the target reference type it changed our\nhandling of this testcase.  It seems to me that our current behavior is what\nthe standard says, but it doesn't seem desirable, and all the other\ncompilers have our old behavior.  So let's limit the change to non-templates\nuntil there's some clarification from the committee.\n\n\tPR c++/90546\n\t* call.c (build_user_type_conversion_1): Allow a template conversion\n\treturning an rvalue reference to bind directly to an lvalue.", "tree": {"sha": "d16e2448338d74b0e357588567b6b586a86307e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d16e2448338d74b0e357588567b6b586a86307e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "845bb366adcf702331de3d8022fd0e1c1c918607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/845bb366adcf702331de3d8022fd0e1c1c918607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/845bb366adcf702331de3d8022fd0e1c1c918607"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "a110efe90c02e9a91740328d1a262287fddd854e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "patch": "@@ -1,5 +1,9 @@\n 2020-01-28  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/90546\n+\t* call.c (build_user_type_conversion_1): Allow a template conversion\n+\treturning an rvalue reference to bind directly to an lvalue.\n+\n \tPR c++/90731\n \t* decl.c (grokdeclarator): Propagate eh spec from typedef.\n "}, {"sha": "fde29f8f6318feb7f6e92b1d239d4188baa963e6", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "patch": "@@ -4115,6 +4115,8 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n \t\t\t\t\t\t       EXPR_LOCATION (expr));\n \t    }\n \t  else if (TYPE_REF_P (totype) && !ics->rvaluedness_matches_p\n+\t\t   /* Limit this to non-templates for now (PR90546).  */\n+\t\t   && !cand->template_decl\n \t\t   && TREE_CODE (TREE_TYPE (totype)) != FUNCTION_TYPE)\n \t    {\n \t      /* If we are called to convert to a reference type, we are trying"}, {"sha": "5f727fcc0d5e1527e29b535f947a1ad4ff00e5e1", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-conv3.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-conv3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-conv3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-conv3.C?ref=14e320dbc10cc796fd7ca0b6c44e0c9ac0901da9", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/90546\n+// { dg-do link { target c++11 } }\n+\n+struct Foo { };\n+void test(const Foo&) {}\n+Foo f;\n+struct Bar {\n+  template <class T> operator T&&();\n+};\n+template<> Bar::operator const Foo&&() {\n+    return static_cast<Foo&&>(f);\n+}\n+int main() {\n+  test(Bar{});\n+}"}]}