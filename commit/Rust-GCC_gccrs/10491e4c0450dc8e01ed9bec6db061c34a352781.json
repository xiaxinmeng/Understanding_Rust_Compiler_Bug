{"sha": "10491e4c0450dc8e01ed9bec6db061c34a352781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA0OTFlNGMwNDUwZGM4ZTAxZWQ5YmVjNmRiMDYxYzM0YTM1Mjc4MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-26T13:11:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-26T13:11:29Z"}, "message": "libstdc++/51960 move-construction for raw_storage_iterator\n\n\tPR libstdc++/51960\n\t* doc/xml/manual/intro.xml: Document DR 2127 change.\n\t* doc/html/*: Regenerate.\n\t* include/bits/stl_raw_storage_iter.h (operator=(_Tp&&)): Add.\n\t(operator++(), operator++(int)): Use injected class name.\n\t* testsuite/20_util/raw_storage_iterator/dr2127.cc: New test.\n\nFrom-SVN: r239781", "tree": {"sha": "0d56f2fce294bd6f53ae9e978d21f23ad2be598c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d56f2fce294bd6f53ae9e978d21f23ad2be598c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10491e4c0450dc8e01ed9bec6db061c34a352781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10491e4c0450dc8e01ed9bec6db061c34a352781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10491e4c0450dc8e01ed9bec6db061c34a352781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10491e4c0450dc8e01ed9bec6db061c34a352781/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdc30f8f2fb9cab2f709ede74ca550f544d9b7f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc30f8f2fb9cab2f709ede74ca550f544d9b7f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc30f8f2fb9cab2f709ede74ca550f544d9b7f3"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "6b21648fcbd28a259eca1ea829040a7859d76aa9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=10491e4c0450dc8e01ed9bec6db061c34a352781", "patch": "@@ -1,5 +1,12 @@\n 2016-08-26  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/51960\n+\t* doc/xml/manual/intro.xml: Document DR 2127 change.\n+\t* doc/html/*: Regenerate.\n+\t* include/bits/stl_raw_storage_iter.h (operator=(_Tp&&)): Add.\n+\t(operator++(), operator++(int)): Use injected class name.\n+\t* testsuite/20_util/raw_storage_iterator/dr2127.cc: New test.\n+\n \t* testsuite/*: Use { target c++11 } or { target c++14 } instead of\n \tusing -std in dg-options.\n "}, {"sha": "de2ad5f1182b41ef10a1ab756139b62c6c87db9c", "filename": "libstdc++-v3/doc/html/manual/bugs.html", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fbugs.html?ref=10491e4c0450dc8e01ed9bec6db061c34a352781", "patch": "@@ -390,6 +390,9 @@\n     </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"../ext/lwg-defects.html#2118\" target=\"_top\">2118</a>:\n \t<span class=\"emphasis\"><em><code class=\"code\">unique_ptr</code> for array does not support cv qualification conversion of actual argument</em></span>\n     </span></dt><dd><p>Adjust constraints to allow safe conversions.\n+    </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"../ext/lwg-defects.html#2127\" target=\"_top\">2127</a>:\n+\t<span class=\"emphasis\"><em>Move-construction with <code class=\"code\">raw_storage_iterator</code></em></span>\n+    </span></dt><dd><p>Add assignment operator taking an rvalue.\n     </p></dd><dt><span class=\"term\"><a class=\"link\" href=\"../ext/lwg-defects.html#2132\" target=\"_top\">2132</a>:\n \t<span class=\"emphasis\"><em><code class=\"code\">std::function</code> ambiguity</em></span>\n     </span></dt><dd><p>Constrain the constructor to only accept callable types."}, {"sha": "238ab241080ea756341b884f452d46da02969fef", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=10491e4c0450dc8e01ed9bec6db061c34a352781", "patch": "@@ -898,6 +898,12 @@ requirements of the license of GCC.\n     <listitem><para>Adjust constraints to allow safe conversions.\n     </para></listitem></varlistentry>\n \n+    <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2127\">2127</link>:\n+\t<emphasis>Move-construction with <code>raw_storage_iterator</code></emphasis>\n+    </term>\n+    <listitem><para>Add assignment operator taking an rvalue.\n+    </para></listitem></varlistentry>\n+\n     <varlistentry><term><link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"../ext/lwg-defects.html#2132\">2132</link>:\n \t<emphasis><code>std::function</code> ambiguity</emphasis>\n     </term>"}, {"sha": "2d29e7cf53345a98bdd61f6b93ae8252eb46e0d1", "filename": "libstdc++-v3/include/bits/stl_raw_storage_iter.h", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_raw_storage_iter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_raw_storage_iter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_raw_storage_iter.h?ref=10491e4c0450dc8e01ed9bec6db061c34a352781", "patch": "@@ -86,17 +86,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \treturn *this;\n       }\n \n-      raw_storage_iterator<_OutputIterator, _Tp>&\n+#if __cplusplus >= 201103L\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 2127. Move-construction with raw_storage_iterator\n+      raw_storage_iterator&\n+      operator=(_Tp&& __element)\n+      {\n+\tstd::_Construct(std::__addressof(*_M_iter), std::move(__element));\n+\treturn *this;\n+      }\n+#endif\n+\n+      raw_storage_iterator&\n       operator++()\n       {\n \t++_M_iter;\n \treturn *this;\n       }\n \n-      raw_storage_iterator<_OutputIterator, _Tp>\n+      raw_storage_iterator\n       operator++(int)\n       {\n-\traw_storage_iterator<_OutputIterator, _Tp> __tmp = *this;\n+\traw_storage_iterator __tmp = *this;\n \t++_M_iter;\n \treturn __tmp;\n       }"}, {"sha": "9a084f6c6b4c9e58ae68d7d9082118db772ed46a", "filename": "libstdc++-v3/testsuite/20_util/raw_storage_iterator/dr2127.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fraw_storage_iterator%2Fdr2127.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10491e4c0450dc8e01ed9bec6db061c34a352781/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fraw_storage_iterator%2Fdr2127.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fraw_storage_iterator%2Fdr2127.cc?ref=10491e4c0450dc8e01ed9bec6db061c34a352781", "patch": "@@ -0,0 +1,46 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+struct MoveOnly\n+{\n+  MoveOnly(int i) : i(i) { }\n+  MoveOnly(MoveOnly&&) = default;\n+  int i;\n+};\n+\n+void\n+test01()\n+{\n+  char buf[sizeof(MoveOnly)*2];\n+  MoveOnly* addr = (MoveOnly*)buf;\n+  std::raw_storage_iterator<MoveOnly*, MoveOnly> iter(addr);\n+  *iter++ = MoveOnly{1};\n+  *iter++ = MoveOnly{2};\n+  VERIFY( addr[0].i == 1 );\n+  VERIFY( addr[1].i == 2 );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}