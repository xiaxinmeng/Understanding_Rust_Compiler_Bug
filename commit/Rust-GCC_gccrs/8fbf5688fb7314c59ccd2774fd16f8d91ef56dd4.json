{"sha": "8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZiZjU2ODhmYjczMTRjNTljY2QyNzc0ZmQxNmY4ZDkxZWY1NmRkNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-02T20:16:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-02T20:16:56Z"}, "message": "parser.c (cp_parser_decl_specifier_seq): Change \"C++0x\" to \"C++11\" in warnings.\n\n\t* parser.c (cp_parser_decl_specifier_seq): Change \"C++0x\" to\n\t\"C++11\" in warnings.\n\t(cp_lexer_get_preprocessor_token): Likewise.\n\t(cp_parser_binary_expression): Likewise.\n\nFrom-SVN: r180795", "tree": {"sha": "23352eaed69de58c7389dcc51fb4fddc2ef89dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23352eaed69de58c7389dcc51fb4fddc2ef89dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25339f1097a119662a4989964f32143ad44edbd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25339f1097a119662a4989964f32143ad44edbd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25339f1097a119662a4989964f32143ad44edbd3"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "564203aae2155f01d461d772369edf2625804279", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "patch": "@@ -1,3 +1,10 @@\n+2011-11-02  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_decl_specifier_seq): Change \"C++0x\" to\n+\t\"C++11\" in warnings.\n+\t(cp_lexer_get_preprocessor_token): Likewise.\n+\t(cp_parser_binary_expression): Likewise.\n+\n 2011-11-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/50810"}, {"sha": "e543e870550c4bdde4b0071d3b6bc6eb51308a51", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "patch": "@@ -744,7 +744,7 @@ cp_lexer_get_preprocessor_token (cp_lexer *lexer, cp_token *token)\n               /* Warn about the C++0x keyword (but still treat it as\n                  an identifier).  */\n               warning (OPT_Wc__0x_compat, \n-                       \"identifier %qE will become a keyword in C++0x\",\n+                       \"identifier %qE is a keyword in C++11\",\n                        token->u.value);\n \n               /* Clear out the C_RID_CODE so we don't warn about this\n@@ -7198,8 +7198,8 @@ cp_parser_binary_expression (cp_parser* parser, bool cast_p,\n           && !parser->greater_than_is_operator_p)\n         {\n           if (warning_at (token->location, OPT_Wc__0x_compat, \n-\t\t\t  \"%<>>%> operator will be treated as\"\n-\t\t\t  \" two right angle brackets in C++0x\"))\n+\t\t\t  \"%<>>%> operator is treated as\"\n+\t\t\t  \" two right angle brackets in C++11\"))\n \t    inform (token->location,\n \t\t    \"suggest parentheses around %<>>%> expression\");\n         }\n@@ -10528,7 +10528,7 @@ cp_parser_decl_specifier_seq (cp_parser* parser,\n               /* Complain about `auto' as a storage specifier, if\n                  we're complaining about C++0x compatibility.  */\n               warning_at (token->location, OPT_Wc__0x_compat, \"%<auto%>\"\n-\t\t\t  \" will change meaning in C++0x; please remove it\");\n+\t\t\t  \" changes meaning in C++11; please remove it\");\n \n               /* Set the storage class anyway.  */\n               cp_parser_set_storage_class (parser, decl_specs, RID_AUTO,"}, {"sha": "f5c0ea6e4d3bd12703a5383bfe587bb9290d2fe1", "filename": "gcc/testsuite/g++.dg/cpp0x/auto1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto1.C?ref=8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "patch": "@@ -1,8 +1,8 @@\n-// { dg-options \"-std=c++98 -Wc++0x-compat\" }\n+// { dg-options \"-std=c++98 -Wc++11-compat\" }\n \n-// Test warning for use of auto in C++98 mode with C++0x\n+// Test warning for use of auto in C++98 mode with C++11\n // compatibility warnings\n void f()\n {\n-  auto int x = 5; // { dg-warning \"will change meaning\" }\n+  auto int x = 5; // { dg-warning \"changes meaning\" }\n }"}, {"sha": "f86aa041a2469a5a98310fc7b92fe5c34526cada", "filename": "gcc/testsuite/g++.dg/cpp0x/bracket3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fbracket3.C?ref=8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "patch": "@@ -1,10 +1,10 @@\n-// { dg-options \"-std=c++98 -Wc++0x-compat\" }\n+// { dg-options \"-std=c++98 -Wc++11-compat\" }\n \n template<int N> struct X {};\n \n-X<1 >> 2> x; // { dg-warning \"will be treated as|suggest parentheses\" }\n+X<1 >> 2> x; // { dg-warning \"is treated as|suggest parentheses\" }\n \n // From cp/parser.c\n typedef int Y;\n template <int V> struct Foo {};\n-Foo<Y () >> 5> r; // { dg-warning \"will be treated as|suggest parentheses\" }\n+Foo<Y () >> 5> r; // { dg-warning \"is treated as|suggest parentheses\" }"}, {"sha": "5c5eeffb350b029c3b1b336dcaa4f20ed373c0d6", "filename": "gcc/testsuite/g++.dg/cpp0x/warn_cxx0x.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x.C?ref=8fbf5688fb7314c59ccd2774fd16f8d91ef56dd4", "patch": "@@ -1,6 +1,6 @@\n-// { dg-options \"-std=gnu++98 -Wc++0x-compat\" }\n-int static_assert; // { dg-warning \"will become a keyword\" }\n-int nullptr; // { dg-warning \"will become a keyword\" }\n+// { dg-options \"-std=gnu++98 -Wc++11-compat\" }\n+int static_assert; // { dg-warning \"is a keyword\" }\n+int nullptr; // { dg-warning \"is a keyword\" }\n \n void foo()\n {"}]}