{"sha": "e20440c1dde9050535ad0b69fd616ca079bb5bd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwNDQwYzFkZGU5MDUwNTM1YWQwYjY5ZmQ2MTZjYTA3OWJiNWJkMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-01T12:04:11Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-01T12:04:11Z"}, "message": "i386.md (neg?f2_if): Split \"r\" and \"f\" to separate alternatives.\n\n\t* i386.md (neg?f2_if): Split \"r\" and \"f\" to separate alternatives.\n\t(abs?f2_if): Likewise.\n\nFrom-SVN: r30738", "tree": {"sha": "7881efcc57dab54478d61269c0ceec81d95096f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7881efcc57dab54478d61269c0ceec81d95096f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e20440c1dde9050535ad0b69fd616ca079bb5bd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20440c1dde9050535ad0b69fd616ca079bb5bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20440c1dde9050535ad0b69fd616ca079bb5bd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20440c1dde9050535ad0b69fd616ca079bb5bd0/comments", "author": null, "committer": null, "parents": [{"sha": "2c290989c7ad9d54d451f105a2fc95e38ae689f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c290989c7ad9d54d451f105a2fc95e38ae689f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c290989c7ad9d54d451f105a2fc95e38ae689f7"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "2b1cd260898de7163f8152c099574f99433ef87c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20440c1dde9050535ad0b69fd616ca079bb5bd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20440c1dde9050535ad0b69fd616ca079bb5bd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e20440c1dde9050535ad0b69fd616ca079bb5bd0", "patch": "@@ -1,3 +1,8 @@\n+Tue Nov 30 15:20:52 MET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n+\n+\t* i386.md (neg?f2_if): Split \"r\" and \"f\" to separate alternatives.\n+\t(abs?f2_if): Likewise.\n+\n 1999-11-30  Alex Samuel  <samuel@codesourcery.com>\n \n \t* ggc.h (ggc_test_and_set_mark): New macro."}, {"sha": "99ba4ada8034bb2c429159a26115d8d133040820", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20440c1dde9050535ad0b69fd616ca079bb5bd0/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20440c1dde9050535ad0b69fd616ca079bb5bd0/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e20440c1dde9050535ad0b69fd616ca079bb5bd0", "patch": "@@ -4968,9 +4968,12 @@\n   \"TARGET_80387\"\n   \"ix86_expand_unary_operator (NEG, SFmode, operands); DONE;\")\n \n+;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n+;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n+;; to itself.\n (define_insn \"*negsf2_if\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=frm\")\n-\t(neg:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0\")))\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f#r,rm#f\")\n+\t(neg:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0,0\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_80387 && ix86_unary_operator_ok (NEG, SFmode, operands)\"\n   \"#\")\n@@ -5020,9 +5023,12 @@\n   \"TARGET_80387\"\n   \"ix86_expand_unary_operator (NEG, DFmode, operands); DONE;\")\n \n+;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n+;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n+;; to itself.\n (define_insn \"*negdf2_if\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=frm\")\n-\t(neg:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0\")))\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f#r,rm#f\")\n+\t(neg:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,0\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_80387 && ix86_unary_operator_ok (NEG, DFmode, operands)\"\n   \"#\")\n@@ -5053,9 +5059,12 @@\n   \"TARGET_80387\"\n   \"ix86_expand_unary_operator (NEG, XFmode, operands); DONE;\")\n \n+;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n+;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n+;; to itself.\n (define_insn \"*negxf2_if\"\n-  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=frm\")\n-\t(neg:XF (match_operand:XF 1 \"nonimmediate_operand\" \"0\")))\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f#r,rm#f\")\n+\t(neg:XF (match_operand:XF 1 \"nonimmediate_operand\" \"0,0\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_80387 && ix86_unary_operator_ok (NEG, XFmode, operands)\"\n   \"#\")\n@@ -5142,9 +5151,12 @@\n   \"TARGET_80387\"\n   \"ix86_expand_unary_operator (ABS, SFmode, operands); DONE;\")\n \n+;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n+;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n+;; to itself.\n (define_insn \"*abssf2_if\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=frm\")\n-\t(abs:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0\")))\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f#r,rm#f\")\n+\t(abs:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0,0\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_80387 && ix86_unary_operator_ok (ABS, SFmode, operands)\"\n   \"#\")\n@@ -5194,9 +5206,12 @@\n   \"TARGET_80387\"\n   \"ix86_expand_unary_operator (ABS, DFmode, operands); DONE;\")\n \n+;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n+;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n+;; to itself.\n (define_insn \"*absdf2_if\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=frm\")\n-\t(abs:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0\")))\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f#r,rm#f\")\n+\t(abs:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0,0\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_80387 && ix86_unary_operator_ok (ABS, DFmode, operands)\"\n   \"#\")\n@@ -5227,9 +5242,12 @@\n   \"TARGET_80387\"\n   \"ix86_expand_unary_operator (ABS, XFmode, operands); DONE;\")\n \n+;; Keep 'f' and 'r' in separate alternatives to avoid reload problems\n+;; because of secondary memory needed to reload from class FLOAT_INT_REGS\n+;; to itself.\n (define_insn \"*absxf2_if\"\n-  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=frm\")\n-\t(abs:XF (match_operand:XF 1 \"nonimmediate_operand\" \"0\")))\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f#r,rm#f\")\n+\t(abs:XF (match_operand:XF 1 \"nonimmediate_operand\" \"0,0\")))\n    (clobber (reg:CC 17))]\n   \"TARGET_80387 && ix86_unary_operator_ok (ABS, XFmode, operands)\"\n   \"#\")"}]}