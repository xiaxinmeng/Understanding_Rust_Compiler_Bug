{"sha": "0567998287649833744ad728b1dfb785fe17c545", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU2Nzk5ODI4NzY0OTgzMzc0NGFkNzI4YjFkZmI3ODVmZTE3YzU0NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-08T17:05:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-08T17:05:08Z"}, "message": "c-family: Fix various comment typos in c-warn.c\n\nWhen looking into PR99420, I have noticed several comment typos.\n\n2021-04-08  Jakub Jelinek  <jakub@redhat.com>\n\n\t* c-warn.c (do_warn_double_promotion): Fix comment typo,\n\toccured -> occurred.\n\t(check_alignment_of_packed_member): Fix a comment typo,\n\tmemeber -> member.\n\t(warn_parm_ptrarray_mismatch): Fix comment typos, os -> of\n\tand onless -> unless.\n\t(warn_parm_array_mismatch): Fix comment typos, declaratation\n\t-> declaration and woud -> would.  Fix up comment indentation.", "tree": {"sha": "454ac8b0f5a1bc893ccdc6f12755a224dd0da44b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/454ac8b0f5a1bc893ccdc6f12755a224dd0da44b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0567998287649833744ad728b1dfb785fe17c545", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0567998287649833744ad728b1dfb785fe17c545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0567998287649833744ad728b1dfb785fe17c545", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0567998287649833744ad728b1dfb785fe17c545/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cbba49e3417d9b0661e70301d6fb7a7f52fd360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cbba49e3417d9b0661e70301d6fb7a7f52fd360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cbba49e3417d9b0661e70301d6fb7a7f52fd360"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c48dc2e6d245a4feb1827fe8d1c90f2881240bef", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0567998287649833744ad728b1dfb785fe17c545/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0567998287649833744ad728b1dfb785fe17c545/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=0567998287649833744ad728b1dfb785fe17c545", "patch": "@@ -2394,7 +2394,7 @@ do_warn_double_promotion (tree result_type, tree type1, tree type2,\n      warn about it.  */\n   if (c_inhibit_evaluation_warnings)\n     return;\n-  /* If an invalid conversion has occured, don't warn.  */\n+  /* If an invalid conversion has occurred, don't warn.  */\n   if (result_type == error_mark_node)\n     return;\n   if (TYPE_MAIN_VARIANT (result_type) != double_type_node\n@@ -2900,7 +2900,7 @@ warn_for_multistatement_macros (location_t body_loc, location_t next_loc,\n \t    \"this %qs clause\", guard_tinfo_to_string (keyword));\n }\n \n-/* Return struct or union type if the alignment of data memeber, FIELD,\n+/* Return struct or union type if the alignment of data member, FIELD,\n    is less than the alignment of TYPE.  Otherwise, return NULL_TREE.\n    If RVALUE is true, only arrays evaluate to pointers.  */\n \n@@ -3151,7 +3151,7 @@ vla_bound_parm_decl (tree expr)\n }\n \n /* Diagnose mismatches in VLA bounds between function parameters NEWPARMS\n-   of pointer types on a redeclaration os a function previously declared\n+   of pointer types on a redeclaration of a function previously declared\n    with CURPARMS at ORIGLOC.  */\n \n static void\n@@ -3220,7 +3220,7 @@ warn_parm_ptrarray_mismatch (location_t origloc, tree curparms, tree newparms)\n       if (origloc == UNKNOWN_LOCATION)\n \torigloc = newloc;\n \n-      /* Issue -Warray-parameter onless one or more mismatches involves\n+      /* Issue -Warray-parameter unless one or more mismatches involves\n \t a VLA bound; then issue -Wvla-parameter.  */\n       int opt = OPT_Warray_parameter_;\n       /* Traverse the two array types looking for variable bounds and\n@@ -3335,15 +3335,15 @@ expr_to_str (pretty_printer &pp, tree expr, const char *dflt)\n \n /* Detect and diagnose a mismatch between an attribute access specification\n    on the original declaration of FNDECL and that on the parameters NEWPARMS\n-   from its refeclaration.  ORIGLOC is the location of the first declaration\n+   from its redeclaration.  ORIGLOC is the location of the first declaration\n    (FNDECL's is set to the location of the redeclaration).  */\n \n void\n warn_parm_array_mismatch (location_t origloc, tree fndecl, tree newparms)\n {\n-    /* The original parameter list (copied from the original declaration\n-       into the current [re]declaration, FNDECL)).  The two are equal if\n-       and only if FNDECL is the first declaratation.  */\n+  /* The original parameter list (copied from the original declaration\n+     into the current [re]declaration, FNDECL)).  The two are equal if\n+     and only if FNDECL is the first declaration.  */\n   tree curparms = DECL_ARGUMENTS (fndecl);\n   if (!curparms || !newparms || curparms == newparms)\n     return;\n@@ -3375,7 +3375,7 @@ warn_parm_array_mismatch (location_t origloc, tree fndecl, tree newparms)\n       return;\n     }\n   /* ...otherwise, if at least one spec isn't empty there may be mismatches,\n-     such as  between f(T*) and f(T[1]), where the former mapping woud be\n+     such as between f(T*) and f(T[1]), where the former mapping would be\n      empty.  */\n \n   /* Create an empty access specification and use it for pointers with"}]}