{"sha": "82e5c2434e6709118bdf4499cdcbd5dc2c535368", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJlNWMyNDM0ZTY3MDkxMThiZGY0NDk5Y2RjYmQ1ZGMyYzUzNTM2OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T11:13:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T11:13:00Z"}, "message": "[multiple changes]\n\n2017-01-13  Gary Dismukes  <dismukes@adacore.com>\n\n\t* checks.adb: Minor typo fix and reformatting.\n\n2017-01-13  Javier Miranda  <miranda@adacore.com>\n\n\t* contracts.adb (Contract_Only_Subprograms): Remove formal.\n\t(Copy_Original_Specification): Removed.\n\t(Skip_Contract_Only_Subprogram): Move here checks previously\n\tlocated in the caller of this routine (to leave the code more clean).\n\t(Build_Contract_Only_Subprogram): Code cleanup.\n\t* scil_ll.ads, scil_ll.adb (Get_Contract_Only_Body_Name): Removed.\n\t(Get_Contract_Only_Missing_Body_Name): Removed.\n\nFrom-SVN: r244424", "tree": {"sha": "2030dec0cbddd3c69d278b9de8fe974ade1856d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2030dec0cbddd3c69d278b9de8fe974ade1856d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82e5c2434e6709118bdf4499cdcbd5dc2c535368", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e5c2434e6709118bdf4499cdcbd5dc2c535368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e5c2434e6709118bdf4499cdcbd5dc2c535368", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e5c2434e6709118bdf4499cdcbd5dc2c535368/comments", "author": null, "committer": null, "parents": [{"sha": "f8981f1984a0e66f165440ecbc72fd3a58075193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8981f1984a0e66f165440ecbc72fd3a58075193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8981f1984a0e66f165440ecbc72fd3a58075193"}], "stats": {"total": 3051, "additions": 1477, "deletions": 1574}, "files": [{"sha": "5aa38770395fef5af9c010475e3f0222453a0e80", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=82e5c2434e6709118bdf4499cdcbd5dc2c535368", "patch": "@@ -1,3 +1,17 @@\n+2017-01-13  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* checks.adb: Minor typo fix and reformatting.\n+\n+2017-01-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* contracts.adb (Contract_Only_Subprograms): Remove formal.\n+\t(Copy_Original_Specification): Removed.\n+\t(Skip_Contract_Only_Subprogram): Move here checks previously\n+\tlocated in the caller of this routine (to leave the code more clean).\n+\t(Build_Contract_Only_Subprogram): Code cleanup.\n+\t* scil_ll.ads, scil_ll.adb (Get_Contract_Only_Body_Name): Removed.\n+\t(Get_Contract_Only_Missing_Body_Name): Removed.\n+\n 2017-01-13  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch6.adb (Cloned_Expression): New subprogram."}, {"sha": "80b4b4b782f857c9ffec147bee6e05486b2d99c3", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=82e5c2434e6709118bdf4499cdcbd5dc2c535368", "patch": "@@ -3390,10 +3390,10 @@ package body Checks is\n                 In_Subrange_Of (Expr_Type, Target_Base, Fixed_Int => Conv_OK)\n               and then not Float_To_Int\n             then\n-               --  A small optimization : the attribute 'Pos applied to an\n+               --  A small optimization: the attribute 'Pos applied to an\n                --  enumeration type has a known range, even though its type\n-               --  is Universal_Integer. so in numeric conversions it is\n-               --  usually within range of of the target integer type. Use the\n+               --  is Universal_Integer. So in numeric conversions it is\n+               --  usually within range of the target integer type. Use the\n                --  static bounds of the base types to check.\n \n                if Nkind (Expr) = N_Attribute_Reference\n@@ -3402,15 +3402,15 @@ package body Checks is\n                  and then Is_Integer_Type (Target_Type)\n                then\n                   declare\n-                     Enum_T  : constant Entity_Id :=\n-                               Root_Type (Etype (Prefix (Expr)));\n-                     Int_T   : constant Entity_Id := Base_Type (Target_Type);\n-                     Last_I  : constant Uint :=\n-                        Intval (High_Bound (Scalar_Range (Int_T)));\n-                     Last_E  : Uint;\n+                     Enum_T : constant Entity_Id :=\n+                                Root_Type (Etype (Prefix (Expr)));\n+                     Int_T  : constant Entity_Id := Base_Type (Target_Type);\n+                     Last_I : constant Uint      :=\n+                                Intval (High_Bound (Scalar_Range (Int_T)));\n+                     Last_E : Uint;\n \n                   begin\n-                     --  Character types have no explicit literals, we use\n+                     --  Character types have no explicit literals, so we use\n                      --  the known number of characters in the type.\n \n                      if Root_Type (Enum_T) = Standard_Character then\n@@ -3422,7 +3422,8 @@ package body Checks is\n                         Last_E := UI_From_Int (65535);\n \n                      else\n-                        Last_E := Enumeration_Pos\n+                        Last_E :=\n+                          Enumeration_Pos\n                             (Entity (High_Bound (Scalar_Range (Enum_T))));\n                      end if;\n "}, {"sha": "eb73d0354720453f6f4d040ce363a7426f845279", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 1451, "deletions": 1528, "changes": 2979, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=82e5c2434e6709118bdf4499cdcbd5dc2c535368"}, {"sha": "bf9ded7d261450931de99faabffb03d24535bcb0", "filename": "gcc/ada/scil_ll.adb", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fscil_ll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fscil_ll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscil_ll.adb?ref=82e5c2434e6709118bdf4499cdcbd5dc2c535368", "patch": "@@ -35,13 +35,6 @@ with Sinfo;         use Sinfo;\n with System.HTable; use System.HTable;\n \n package body SCIL_LL is\n-   Contract_Only_Body_Suffix : constant String := \"__contract_only\";\n-   --  Suffix of Contract_Only_Body subprograms internally built only under\n-   --  CodePeer mode\n-\n-   Contract_Only_Missing_Body_Suffix : constant String := \"__missing_body\";\n-   --  Suffix of Contract_Only_Missing_Body subprograms internally built only\n-   --  under CodePeer mode\n \n    procedure Copy_SCIL_Node (Target : Node_Id; Source : Node_Id);\n    --  Copy the SCIL field from Source to Target (it is used as the argument\n@@ -108,27 +101,6 @@ package body SCIL_LL is\n       end if;\n    end Get_Contract_Only_Body;\n \n-   ---------------------------------\n-   -- Get_Contract_Only_Body_Name --\n-   ---------------------------------\n-\n-   function Get_Contract_Only_Body_Name (E : Entity_Id) return Name_Id is\n-   begin\n-      return Name_Find (Get_Name_String (Chars (E)) &\n-                          Contract_Only_Body_Suffix);\n-   end Get_Contract_Only_Body_Name;\n-\n-   -----------------------------------------\n-   -- Get_Contract_Only_Missing_Body_Name --\n-   -----------------------------------------\n-\n-   function Get_Contract_Only_Missing_Body_Name (E : Entity_Id)\n-      return Name_Id is\n-   begin\n-      return Name_Find (Get_Name_String (Chars (E)) &\n-                          Contract_Only_Missing_Body_Suffix);\n-   end Get_Contract_Only_Missing_Body_Name;\n-\n    -------------------\n    -- Get_SCIL_Node --\n    -------------------"}, {"sha": "bebe0e7ffa7dff6763ac66b5720236ab99d4126e", "filename": "gcc/ada/scil_ll.ads", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fscil_ll.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82e5c2434e6709118bdf4499cdcbd5dc2c535368/gcc%2Fada%2Fscil_ll.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscil_ll.ads?ref=82e5c2434e6709118bdf4499cdcbd5dc2c535368", "patch": "@@ -32,17 +32,10 @@\n --  This package extends the tree nodes with fields that are used to reference\n --  the SCIL node and the Contract_Only_Body of a subprogram with aspects.\n \n-with Namet; use Namet;\n with Types; use Types;\n \n package SCIL_LL is\n \n-   function Get_Contract_Only_Body_Name (E : Entity_Id) return Name_Id;\n-   --  Return the name of the Contract_Only_Body subprogram of E\n-\n-   function Get_Contract_Only_Missing_Body_Name (E : Entity_Id) return Name_Id;\n-   --  Return the name of the Contract_Only_Missing_Body subprogram of E\n-\n    function Get_Contract_Only_Body (N : Node_Id) return Node_Id;\n    --  Read the value of attribute Contract_Only_Body\n "}]}