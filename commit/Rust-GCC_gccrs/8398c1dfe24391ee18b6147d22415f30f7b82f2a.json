{"sha": "8398c1dfe24391ee18b6147d22415f30f7b82f2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5OGMxZGZlMjQzOTFlZTE4YjYxNDdkMjI0MTVmMzBmN2I4MmYyYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2017-10-03T02:27:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-10-03T02:27:33Z"}, "message": "ztest.c: #include <errno.h>.\n\n\t* ztest.c: #include <errno.h>.\n\t(TEST_TIMING): Don't define, don't test.\n\t(xclock_gettime, xclockid_t): Define if !HAVE_CLOCK_GETTIME.\n\t(clockid_t, clock_gettime, CLOCK_REALTIME): Likewise.\n\t(ZLIB_CLOCK_GETTIME_ARG): Define.\n\t* configure.ac: Change clock_gettime_link to CLOCK_GETTIME_LINK.\n\t* Makefile.am: Likewise.\n\t* configure, Makefile.in: Rebuild.\n\nFrom-SVN: r253377", "tree": {"sha": "bbc2c4e35dd9dd451be9a9530db6d5c480ffb5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbc2c4e35dd9dd451be9a9530db6d5c480ffb5c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8398c1dfe24391ee18b6147d22415f30f7b82f2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8398c1dfe24391ee18b6147d22415f30f7b82f2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8398c1dfe24391ee18b6147d22415f30f7b82f2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8398c1dfe24391ee18b6147d22415f30f7b82f2a/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0adaaf009b580258831b4392fd653b26c9258c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adaaf009b580258831b4392fd653b26c9258c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0adaaf009b580258831b4392fd653b26c9258c52"}], "stats": {"total": 70, "additions": 48, "deletions": 22}, "files": [{"sha": "27024b7ea40f98ea2550bebec3319e136b43f603", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=8398c1dfe24391ee18b6147d22415f30f7b82f2a", "patch": "@@ -1,3 +1,14 @@\n+2017-10-02  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* ztest.c: #include <errno.h>.\n+\t(TEST_TIMING): Don't define, don't test.\n+\t(xclock_gettime, xclockid_t): Define if !HAVE_CLOCK_GETTIME.\n+\t(clockid_t, clock_gettime, CLOCK_REALTIME): Likewise.\n+\t(ZLIB_CLOCK_GETTIME_ARG): Define.\n+\t* configure.ac: Change clock_gettime_link to CLOCK_GETTIME_LINK.\n+\t* Makefile.am: Likewise.\n+\t* configure, Makefile.in: Rebuild.\n+\n 2017-10-02  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR other/67165"}, {"sha": "7c0fab167b7d369c21260b7fb39dbbedf8b7ba3b", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=8398c1dfe24391ee18b6147d22415f30f7b82f2a", "patch": "@@ -108,7 +108,7 @@ ztest_LDADD = libbacktrace.la\n if HAVE_ZLIB\n ztest_LDADD += -lz\n endif\n-ztest_LDADD += $(clock_gettime_link)\n+ztest_LDADD += $(CLOCK_GETTIME_LINK)\n \n check_PROGRAMS += ztest\n "}, {"sha": "407098ab9e02d8a1d1ea494c3e759c3d445eca6f", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=8398c1dfe24391ee18b6147d22415f30f7b82f2a", "patch": "@@ -215,6 +215,7 @@ BACKTRACE_SUPPORTS_THREADS = @BACKTRACE_SUPPORTS_THREADS@\n BACKTRACE_USES_MALLOC = @BACKTRACE_USES_MALLOC@\n CC = @CC@\n CFLAGS = @CFLAGS@\n+CLOCK_GETTIME_LINK = @CLOCK_GETTIME_LINK@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n@@ -287,7 +288,6 @@ build_cpu = @build_cpu@\n build_os = @build_os@\n build_vendor = @build_vendor@\n builddir = @builddir@\n-clock_gettime_link = @clock_gettime_link@\n datadir = @datadir@\n datarootdir = @datarootdir@\n docdir = @docdir@\n@@ -385,7 +385,7 @@ TESTS = $(check_PROGRAMS) $(am__append_4)\n @NATIVE_TRUE@ztest_SOURCES = ztest.c testlib.c\n @NATIVE_TRUE@ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n @NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_2) \\\n-@NATIVE_TRUE@\t$(clock_gettime_link)\n+@NATIVE_TRUE@\t$(CLOCK_GETTIME_LINK)\n @NATIVE_TRUE@edtest_SOURCES = edtest.c edtest2_build.c testlib.c\n @NATIVE_TRUE@edtest_LDADD = libbacktrace.la\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@ttest_SOURCES = ttest.c testlib.c"}, {"sha": "7ed9509291c0fb5b11e48c3ca8bf18bf6e555af3", "filename": "libbacktrace/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=8398c1dfe24391ee18b6147d22415f30f7b82f2a", "patch": "@@ -614,7 +614,7 @@ HAVE_ZLIB_TRUE\n HAVE_PTHREAD_FALSE\n HAVE_PTHREAD_TRUE\n PTHREAD_CFLAGS\n-clock_gettime_link\n+CLOCK_GETTIME_LINK\n BACKTRACE_USES_MALLOC\n ALLOC_FILE\n VIEW_FILE\n@@ -12803,7 +12803,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime\" >&5\n $as_echo \"$ac_cv_lib_rt_clock_gettime\" >&6; }\n if test \"x$ac_cv_lib_rt_clock_gettime\" = x\"\"yes; then :\n-  clock_gettime_link=-lrt\n+  CLOCK_GETTIME_LINK=-lrt\n \n $as_echo \"#define HAVE_CLOCK_GETTIME 1\" >>confdefs.h\n "}, {"sha": "9bc1d0f84643a715766b67587ff757d7ffb052c4", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=8398c1dfe24391ee18b6147d22415f30f7b82f2a", "patch": "@@ -397,11 +397,11 @@ clock_gettime_link=\n # we're using this for test timing only.\n if test \"$ac_cv_func_clock_gettime\" = no; then\n   AC_CHECK_LIB(rt, clock_gettime,\n-    [clock_gettime_link=-lrt\n+    [CLOCK_GETTIME_LINK=-lrt\n      AC_DEFINE(HAVE_CLOCK_GETTIME, 1,\n \t       [Define to 1 if you have the `clock_gettime' function.])])\n fi\n-AC_SUBST(clock_gettime_link)\n+AC_SUBST(CLOCK_GETTIME_LINK)\n \n dnl Test whether the compiler supports the -pthread option.\n AC_CACHE_CHECK([whether -pthread is supported],"}, {"sha": "e2ab524825cab6f9c0c9787ba540c3047b839784", "filename": "libbacktrace/ztest.c", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2Fztest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8398c1dfe24391ee18b6147d22415f30f7b82f2a/libbacktrace%2Fztest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fztest.c?ref=8398c1dfe24391ee18b6147d22415f30f7b82f2a", "patch": "@@ -32,6 +32,7 @@ POSSIBILITY OF SUCH DAMAGE.  */\n \n #include \"config.h\"\n \n+#include <errno.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n@@ -43,16 +44,37 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include <zlib.h>\n #endif\n \n-#ifdef HAVE_CLOCK_GETTIME\n-# define TEST_TIMING\n-#endif\n-\n #include \"backtrace.h\"\n #include \"backtrace-supported.h\"\n \n #include \"internal.h\"\n #include \"testlib.h\"\n \n+#ifndef HAVE_CLOCK_GETTIME\n+\n+typedef int xclockid_t;\n+\n+static int\n+xclock_gettime (xclockid_t id ATTRIBUTE_UNUSED,\n+\t\tstruct timespec *ts ATTRIBUTE_UNUSED)\n+{\n+  errno = EINVAL;\n+  return -1;\n+}\n+\n+#define clockid_t xclockid_t\n+#define clock_gettime xclock_gettime\n+#undef CLOCK_REALTIME\n+#define CLOCK_REALTIME 0\n+\n+#endif /* !defined(HAVE_CLOCK_GETTIME) */\n+\n+#ifdef CLOCK_PROCESS_CPUTIME_ID\n+#define ZLIB_CLOCK_GETTIME_ARG CLOCK_PROCESS_CPUTIME_ID\n+#else\n+#define ZLIB_CLOCK_GETTIME_ARG CLOCK_REALTIME\n+#endif\n+\n /* Some tests for the local zlib inflation code.  */\n \n struct zlib_test\n@@ -161,7 +183,7 @@ test_samples (struct backtrace_state *state)\n     }\n }\n \n-#if defined HAVE_ZLIB && defined TEST_TIMING\n+#ifdef HAVE_ZLIB\n \n /* Given a set of TRIALS timings, discard the lowest and highest\n    values and return the mean average of the rest.  */\n@@ -220,7 +242,6 @@ test_large (struct backtrace_state *state)\n   unsigned char *uncompressed_buf;\n   size_t uncompressed_bufsize;\n   int r;\n-# ifdef TEST_TIMING\n   clockid_t cid;\n   struct timespec ts1;\n   struct timespec ts2;\n@@ -229,7 +250,6 @@ test_large (struct backtrace_state *state)\n   const size_t trials = 16;\n   size_t ctimes[16];\n   size_t ztimes[16];\n-# endif /* TEST_TIMING */\n   static const char * const names[] = {\n     \"Mark.Twain-Tom.Sawyer.txt\",\n     \"../libgo/go/compress/testdata/Mark.Twain-Tom.Sawyer.txt\"\n@@ -347,16 +367,13 @@ test_large (struct backtrace_state *state)\n \n   printf (\"PASS: inflate large\\n\");\n \n-# ifdef TEST_TIMING\n-\n   for (i = 0; i < trials; ++i)\n     {\n-      cid = CLOCK_REALTIME;\n-#ifdef CLOCK_PROCESS_CPUTIME_ID\n-      cid = CLOCK_PROCESS_CPUTIME_ID;\n-#endif\n+      cid = ZLIB_CLOCK_GETTIME_ARG;\n       if (clock_gettime (cid, &ts1) < 0)\n \t{\n+\t  if (errno == EINVAL)\n+\t    return;\n \t  perror (\"clock_gettime\");\n \t  return;\n \t}\n@@ -419,8 +436,6 @@ test_large (struct backtrace_state *state)\n   printf (\"zlib time:    : %zu ns\\n\", ztime);\n   printf (\"percentage    : %g\\n\", (double) ztime / (double) ctime);\n \n-# endif /* TEST_TIMING */\n-\n   return;\n \n  fail:"}]}