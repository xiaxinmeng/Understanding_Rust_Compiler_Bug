{"sha": "0069a009910c4d8d3d95db6a3760abd0580f4183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA2OWEwMDk5MTBjNGQ4ZDNkOTVkYjZhMzc2MGFiZDA1ODBmNDE4Mw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-06-10T06:59:26Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-06-10T06:59:26Z"}, "message": "Add effective target stack_size\n\n2017-06-10  Tom de Vries  <tom@codesourcery.com>\n\n\t* lib/target-supports.exp (check_effective_target_stack_size)\n\t(dg-effective-target-value): New proc.\n\t* lib/gcc.exp (gcc_target_compile): Remove adding of DSTACK_SIZE to\n\tadditional_flags.\n\t* lib/objc.exp (objc_target_compile): Same.\n\t* lib/profopt.exp (profopt-get-options): Allow dg-additional-options.\n\t* g++.old-deja/g++.eh/badalloc1.C: Add -DSTACK_SIZE=<value> using\n\tdg-additional-options.\n\t* gcc.c-torture/compile/20080806-1.c: Same.\n\t* gcc.c-torture/compile/920723-1.c: Same.\n\t* gcc.c-torture/compile/930621-1.c: Same.\n\t* gcc.c-torture/compile/991214-2.c: Same.\n\t* gcc.c-torture/compile/bcopy.c: Same.\n\t* gcc.c-torture/compile/memtst.c: Same.\n\t* gcc.c-torture/compile/msp.c: Same.\n\t* gcc.c-torture/compile/stuct.c: Same.\n\t* gcc.c-torture/execute/20011008-3.c: Same.\n\t* gcc.c-torture/execute/20030209-1.c: Same.\n\t* gcc.c-torture/execute/20031012-1.c: Same.\n\t* gcc.c-torture/execute/20040805-1.c: Same.\n\t* gcc.c-torture/execute/920410-1.c: Same.\n\t* gcc.c-torture/execute/920501-7.c: Same.\n\t* gcc.c-torture/execute/921113-1.c: Same.\n\t* gcc.c-torture/execute/921202-1.c: Same.\n\t* gcc.c-torture/execute/921208-2.c: Same.\n\t* gcc.c-torture/execute/930106-1.c: Same.\n\t* gcc.c-torture/execute/930406-1.c: Same.\n\t* gcc.c-torture/execute/950221-1.c: Same.\n\t* gcc.c-torture/execute/960521-1.c: Same.\n\t* gcc.c-torture/execute/980605-1.c: Same.\n\t* gcc.c-torture/execute/comp-goto-1.c: Same.\n\t* gcc.c-torture/execute/comp-goto-2.c: Same.\n\t* gcc.c-torture/execute/memcpy-1.c: Same.\n\t* gcc.c-torture/execute/multi-ix.c: Same.\n\t* gcc.c-torture/execute/nestfunc-4.c: Same.\n\t* gcc.c-torture/execute/pr20621-1.c: Same.\n\t* gcc.c-torture/execute/pr23135.c: Same.\n\t* gcc.c-torture/execute/pr28982b.c: Same.\n\t* gcc.dg/loop-3.c: Same.\n\t* gcc.dg/struct-ret-3.c: Same.\n\t* gcc.dg/torture/stackalign/comp-goto-1.c: Same.\n\t* gcc.dg/torture/stackalign/non-local-goto-4.c: Same.\n\t* gcc.dg/tree-prof/comp-goto-1.c: Same.\n\t* gcc.dg/tree-prof/pr44777.c: Same.\n\n\t* doc/sourcebuild.texi (Effective-Target Keywords, Other attributes):\n\tDocument effective target stack_size.\n\nFrom-SVN: r249090", "tree": {"sha": "9143dccb0a15f00edab2b041b9e77ebf6f1e5550", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9143dccb0a15f00edab2b041b9e77ebf6f1e5550"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0069a009910c4d8d3d95db6a3760abd0580f4183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0069a009910c4d8d3d95db6a3760abd0580f4183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0069a009910c4d8d3d95db6a3760abd0580f4183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0069a009910c4d8d3d95db6a3760abd0580f4183/comments", "author": null, "committer": null, "parents": [{"sha": "e6d7d61861c8fa7207570abb6fc23c5a2921e4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6d7d61861c8fa7207570abb6fc23c5a2921e4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6d7d61861c8fa7207570abb6fc23c5a2921e4da"}], "stats": {"total": 155, "additions": 147, "deletions": 8}, "files": [{"sha": "99c54d1299deef304f409b626a8c497bb0df73e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,8 @@\n+2017-06-10  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* doc/sourcebuild.texi (Effective-Target Keywords, Other attributes):\n+\tDocument effective target stack_size.\n+\n 2017-06-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic.c (diagnostic_report_diagnostic): Only add fixits"}, {"sha": "cdb3a2c883d5d6401377cba01909e052a044889a", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -2093,6 +2093,13 @@ Target supports section anchors.\n @item short_enums\n Target defaults to short enums.\n \n+@item stack_size\n+Target has limited stack size.  The stack size limit can be obtained using\n+@code{[dg-effective-target-value stack_size]}.  For example:\n+@smallexample\n+/* @{ dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" @{ target @{ stack_size @} @} @} */\n+@end smallexample\n+\n @item static\n Target supports @option{-static}.\n "}, {"sha": "7ffa0c0e634ef45881b83a976f8e712ddd26baee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,50 @@\n+2017-06-10  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_stack_size)\n+\t(dg-effective-target-value): New proc.\n+\t* lib/gcc.exp (gcc_target_compile): Remove adding of DSTACK_SIZE to\n+\tadditional_flags.\n+\t* lib/objc.exp (objc_target_compile): Same.\n+\t* lib/profopt.exp (profopt-get-options): Allow dg-additional-options.\n+\t* g++.old-deja/g++.eh/badalloc1.C: Add -DSTACK_SIZE=<value> using\n+\tdg-additional-options.\n+\t* gcc.c-torture/compile/20080806-1.c: Same.\n+\t* gcc.c-torture/compile/920723-1.c: Same.\n+\t* gcc.c-torture/compile/930621-1.c: Same.\n+\t* gcc.c-torture/compile/991214-2.c: Same.\n+\t* gcc.c-torture/compile/bcopy.c: Same.\n+\t* gcc.c-torture/compile/memtst.c: Same.\n+\t* gcc.c-torture/compile/msp.c: Same.\n+\t* gcc.c-torture/compile/stuct.c: Same.\n+\t* gcc.c-torture/execute/20011008-3.c: Same.\n+\t* gcc.c-torture/execute/20030209-1.c: Same.\n+\t* gcc.c-torture/execute/20031012-1.c: Same.\n+\t* gcc.c-torture/execute/20040805-1.c: Same.\n+\t* gcc.c-torture/execute/920410-1.c: Same.\n+\t* gcc.c-torture/execute/920501-7.c: Same.\n+\t* gcc.c-torture/execute/921113-1.c: Same.\n+\t* gcc.c-torture/execute/921202-1.c: Same.\n+\t* gcc.c-torture/execute/921208-2.c: Same.\n+\t* gcc.c-torture/execute/930106-1.c: Same.\n+\t* gcc.c-torture/execute/930406-1.c: Same.\n+\t* gcc.c-torture/execute/950221-1.c: Same.\n+\t* gcc.c-torture/execute/960521-1.c: Same.\n+\t* gcc.c-torture/execute/980605-1.c: Same.\n+\t* gcc.c-torture/execute/comp-goto-1.c: Same.\n+\t* gcc.c-torture/execute/comp-goto-2.c: Same.\n+\t* gcc.c-torture/execute/memcpy-1.c: Same.\n+\t* gcc.c-torture/execute/multi-ix.c: Same.\n+\t* gcc.c-torture/execute/nestfunc-4.c: Same.\n+\t* gcc.c-torture/execute/pr20621-1.c: Same.\n+\t* gcc.c-torture/execute/pr23135.c: Same.\n+\t* gcc.c-torture/execute/pr28982b.c: Same.\n+\t* gcc.dg/loop-3.c: Same.\n+\t* gcc.dg/struct-ret-3.c: Same.\n+\t* gcc.dg/torture/stackalign/comp-goto-1.c: Same.\n+\t* gcc.dg/torture/stackalign/non-local-goto-4.c: Same.\n+\t* gcc.dg/tree-prof/comp-goto-1.c: Same.\n+\t* gcc.dg/tree-prof/pr44777.c: Same.\n+\n 2017-06-09  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/plugin/diagnostic-test-show-locus-bw.c"}, {"sha": "f63d5c63e4adff3961df1ce414563583ab710077", "filename": "gcc/testsuite/g++.old-deja/g++.eh/badalloc1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -3,6 +3,7 @@\n // itself call malloc(), and will fail if there is no more\n // memory available.\n // { dg-do run { xfail { { xstormy16-*-* *-*-darwin[3-7]* } || vxworks_rtp } } }\n+// { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } }\n // Copyright (C) 2000, 2002, 2003, 2010, 2012, 2014 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 6 June 2000 <nathan@codesourcery.com>\n "}, {"sha": "d0ee9cc2e6c534b485e32a206e51a90cc9bfb04c", "filename": "gcc/testsuite/gcc.c-torture/compile/20080806-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080806-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080806-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080806-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* This used to ICE on s390x due to a reload bug.  */\n \n #if defined(STACK_SIZE) && (STACK_SIZE < 65536)"}, {"sha": "c6351c372619bb2714f35ef68c47e06c9f0003c0", "filename": "gcc/testsuite/gcc.c-torture/compile/920723-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920723-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n #if defined(STACK_SIZE) && STACK_SIZE < 65536\n # define GITT_SIZE 75"}, {"sha": "13e997a49ccdfc8fdc7de69bf6731fcdaed6b5b4", "filename": "gcc/testsuite/gcc.c-torture/compile/930621-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930621-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930621-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930621-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n # define BYTEMEM_SIZE 10000L\n #endif"}, {"sha": "32dad4ff864c8a2c6c6c2e7bdc2baa413a0e932b", "filename": "gcc/testsuite/gcc.c-torture/compile/991214-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991214-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991214-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F991214-2.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n # define HISTO_SIZE 9\n #else"}, {"sha": "cb7c05dda015f970137d816e26edcb8aff4f93d6", "filename": "gcc/testsuite/gcc.c-torture/compile/bcopy.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fbcopy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fbcopy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fbcopy.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n void\n bcopy1 (s, d, c)\n      long long *s;"}, {"sha": "e165a2297e8790adc42836135236605f9d9f49e7", "filename": "gcc/testsuite/gcc.c-torture/compile/memtst.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmemtst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmemtst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmemtst.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #ifdef STACK_SIZE\n #define SIZE STACK_SIZE / 8\n #else"}, {"sha": "594cecb6721f7fc200ba085165fb1fb2cc5a64cb", "filename": "gcc/testsuite/gcc.c-torture/compile/msp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmsp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmsp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fmsp.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #ifdef STACK_SIZE\n # define A_SIZE (STACK_SIZE/sizeof(int))\n #else"}, {"sha": "59acd571ba67597386ff13ddbde0945bccb9fe55", "filename": "gcc/testsuite/gcc.c-torture/compile/stuct.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstuct.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstuct.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fstuct.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #ifdef STACK_SIZE\n #define SIZE STACK_SIZE / 8\n #else"}, {"sha": "2fd6871e757b3ed862b7a8cf8c8d731cb567f2aa", "filename": "gcc/testsuite/gcc.c-torture/execute/20011008-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011008-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011008-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20011008-3.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n extern void exit (int);\n extern void abort (void);\n "}, {"sha": "72c1e55f88bc02065ebcdba96f7d20e7ae415fad", "filename": "gcc/testsuite/gcc.c-torture/execute/20030209-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030209-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #ifdef STACK_SIZE\n #if STACK_SIZE < 8*100*100\n #define SKIP"}, {"sha": "db7f3fa97adc6e0798a683befe47fe889dec61f4", "filename": "gcc/testsuite/gcc.c-torture/execute/20031012-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031012-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031012-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031012-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* PR optimization/8750\n    Used to fail under Cygwin with \n    -O2 -fomit-frame-pointer        "}, {"sha": "4e978f519bcee8d0e154c5ea1c56992d3ba01b0c", "filename": "gcc/testsuite/gcc.c-torture/execute/20040805-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040805-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040805-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20040805-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #if __INT_MAX__ < 32768 || (defined(STACK_SIZE) && STACK_SIZE < 0x12000)\n int main () { exit (0); }\n #else"}, {"sha": "50bc41770e8a3f42de5abf606eaf31eeea0d6160", "filename": "gcc/testsuite/gcc.c-torture/execute/920410-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920410-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920410-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920410-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #define STACK_REQUIREMENT (40000 * 4 + 256)\n #if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n main () { exit (0); }"}, {"sha": "5cced09dc04b5165ea689f7022b99485fe2b6aa0", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-7.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,5 +1,6 @@\n /* { dg-require-effective-target label_values } */\n /* { dg-require-effective-target trampolines } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n #ifdef STACK_SIZE\n #define DEPTH ((STACK_SIZE) / 512 + 1)"}, {"sha": "24c4952279a61343a4f901925a99f144477d2460", "filename": "gcc/testsuite/gcc.c-torture/execute/921113-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921113-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921113-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921113-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #define STACK_REQUIREMENT (128 * 128 * 4 + 1024)\n #if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n main () { exit (0); }"}, {"sha": "530fad006febc9952537a3e4d57d4452f3896213", "filename": "gcc/testsuite/gcc.c-torture/execute/921202-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921202-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #ifndef STACK_SIZE\n #define\tVLEN\t2055\n #else"}, {"sha": "f18f2c8faaae4072a8626b8972016437468dd165", "filename": "gcc/testsuite/gcc.c-torture/execute/921208-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target untyped_assembly } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #define STACK_REQUIREMENT (100000 * 4 + 1024)\n #if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n main () { exit (0); }"}, {"sha": "41add7dc25d8a9f6b4712cf968f4f7e35fba838b", "filename": "gcc/testsuite/gcc.c-torture/execute/930106-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930106-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930106-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930106-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #if defined (STACK_SIZE)\n #define DUMMY_SIZE 9\n #else"}, {"sha": "0d6b0fbc948cfd1e55aea4a31053a6ac2afef57b", "filename": "gcc/testsuite/gcc.c-torture/execute/930406-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930406-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930406-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F930406-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n f()\n {\n   int x = 1;"}, {"sha": "aa71024b2dbe948650b498b5e704c5856e8a86de", "filename": "gcc/testsuite/gcc.c-torture/execute/950221-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F950221-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F950221-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F950221-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n struct parsefile\n {\n   long fd;"}, {"sha": "fc69ff92414b598826fcd940f91174575f2d59b0", "filename": "gcc/testsuite/gcc.c-torture/execute/960521-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F960521-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F960521-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F960521-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #include <stdlib.h>\n \n int *a, *b;"}, {"sha": "9185f2b9a3c428d75297bdc2ea5589ded2ff87c9", "filename": "gcc/testsuite/gcc.c-torture/execute/980605-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980605-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980605-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F980605-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #include <stdio.h>\n \n #ifndef STACK_SIZE"}, {"sha": "3bc00ef9a9cfff59e67c68b7cd1e9bf6d68cf09d", "filename": "gcc/testsuite/gcc.c-torture/execute/comp-goto-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target label_values } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n #include <stdlib.h>\n "}, {"sha": "21a1e6f2ae23bf9d2ce06c16cea6ae41355cfad9", "filename": "gcc/testsuite/gcc.c-torture/execute/comp-goto-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomp-goto-2.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,5 +1,6 @@\n /* { dg-require-effective-target label_values } */\n /* { dg-require-effective-target trampolines } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n /* A slight variation of 920501-7.c.  */\n "}, {"sha": "e94ab8aad88c3ed7d2e52600ea2a30858ad951e3", "filename": "gcc/testsuite/gcc.c-torture/execute/memcpy-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmemcpy-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #include <string.h>\n \n #if defined (STACK_SIZE)"}, {"sha": "8ab041b4a534f5cf98e81c604a827ba404ad418a", "filename": "gcc/testsuite/gcc.c-torture/execute/multi-ix.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmulti-ix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmulti-ix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmulti-ix.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* Test for a reload bug:\n    if you have a memory reference using the indexed addressing\n    mode, and the base address is a pseudo containing an address in the frame"}, {"sha": "ee5b376f9b8f9c5d8dfccbf02a39ab3bd1188333", "filename": "gcc/testsuite/gcc.c-torture/execute/nestfunc-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fnestfunc-4.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* Origin: hp@bitrange.com\n    Test that return values come out right from a 1000-level call chain to\n    functions without parameters that each need at least one \"long\""}, {"sha": "4a55c970b8612556ced759eed1fbb1209959ae67", "filename": "gcc/testsuite/gcc.c-torture/execute/pr20621-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20621-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20621-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr20621-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* When generating o32 MIPS PIC, main's $gp save slot was out of range\n    of a single load instruction.  */\n struct big { int i[sizeof (int) >= 4 && sizeof (void *) >= 4 ? 0x4000 : 4]; };"}, {"sha": "31b4f8f9c1494c5ad9866127f85b8c676ff6ffd0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23135.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23135.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* Based on execute/simd-1.c, modified by joern.rennecke@st.com to\n    trigger a reload bug.  Verified for gcc mainline from 20050722 13:00 UTC\n    for sh-elf -m4 -O2.  */"}, {"sha": "90d4a931ab8194272cd45ed0815dfadf8b30a336", "filename": "gcc/testsuite/gcc.c-torture/execute/pr28982b.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr28982b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr28982b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr28982b.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* Like pr28982a.c, but with the spill slots outside the range of\n    a single sp-based load on ARM.  This test tests for cases where\n    the addresses in the base and index reloads require further reloads.  */"}, {"sha": "2c500d022177224a3412dbb98204d165eaec5631", "filename": "gcc/testsuite/gcc.dg/loop-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -4,6 +4,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n /* { dg-options \"-O3 -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n #if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n # define BYTEMEM_SIZE 10000L"}, {"sha": "c6f87acba9d5e361ef584e869c4e79643ab42974", "filename": "gcc/testsuite/gcc.dg/struct-ret-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-3.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -2,7 +2,8 @@\n /* Origin: Peeter Joot <peeterj@ca.ibm.com> */\n \n /* { dg-do run { target *-*-linux* *-*-gnu* } } */\n-\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+ \n #include <sys/mman.h>\n #include <string.h>\n #include <stdio.h>"}, {"sha": "726bb209a94d940f477a59f2f27f3aed7d35e611", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/comp-goto-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fcomp-goto-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target label_values } */\n /* { dg-require-effective-target trampolines } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n #ifdef STACK_SIZE\n #define DEPTH ((STACK_SIZE) / 512 + 1)"}, {"sha": "90ca71c9e2da919a4207a3acbe3354105bd58d2f", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/non-local-goto-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fnon-local-goto-4.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -2,6 +2,7 @@\n /* { dg-require-effective-target nonlocal_goto } */\n /* { dg-require-effective-target label_values } */\n /* { dg-require-effective-target trampolines } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "dd6774f2826355ff29b2e3007b74b2e5989f8bd0", "filename": "gcc/testsuite/gcc.dg/tree-prof/comp-goto-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fcomp-goto-1.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -1,6 +1,8 @@\n /* { dg-require-effective-target freorder } */\n /* { dg-require-effective-target label_values } */\n /* { dg-options \"-O2 -freorder-blocks-and-partition\" } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n #include <stdlib.h>\n \n #if (!defined(STACK_SIZE) || STACK_SIZE >= 4000) && __INT_MAX__ >= 2147483647"}, {"sha": "1249b5b251d95ceed9568b0c4b9e925124d32401", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr44777.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -2,6 +2,8 @@\n /* { dg-require-effective-target label_values } */\n /* { dg-require-effective-target trampolines } */\n /* { dg-options \"-O0\" } */\n+/* { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } } */\n+\n /* A variant of gcc.c-torture/execute/comp-goto-2.c.  */\n \n extern void abort (void);"}, {"sha": "e4ac239e418f3eeb8008933fd67195141b021d0c", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -141,9 +141,6 @@ proc gcc_target_compile { source dest type options } {\n \tlappend options \"ldflags=$TEST_EXTRA_LIBS\"\n     }\n \n-    if [target_info exists gcc,stack_size] {\n-\tlappend options \"additional_flags=-DSTACK_SIZE=[target_info gcc,stack_size]\"\n-    }\n     if [target_info exists gcc,signal_suppress] {\n \tlappend options \"additional_flags=-DSIGNAL_SUPPRESS\"\n     }"}, {"sha": "431754f65b3896c2db84f32448345699f04eccec", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -191,10 +191,6 @@ proc objc_target_compile { source dest type options } {\n \tlappend options \"ldflags=$wrap_flags\"\n     }\n \n-    if [target_info exists objc,stack_size] {\n-\tlappend options \"additional_flags=-DSTACK_SIZE=[target_info objc,stack_size]\"\n-    }\n-\n     # TEST_ALWAYS_FLAGS are flags that should be passed to every\n     # compilation.  They are passed first to allow individual\n     # tests to override them."}, {"sha": "6519c44ce333ab0ff2c4330403d3b86b2aac84ca", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -248,6 +248,7 @@ proc profopt-get-options { src } {\n     foreach op $tmp {\n \tset cmd [lindex $op 0]\n \tif { ![string compare \"dg-options\" $cmd] \\\n+\t     || ![string compare \"dg-additional-options\" $cmd] \\\n \t     || ![string compare \"dg-skip-if\" $cmd] \\\n \t     || ![string compare \"dg-final-generate\" $cmd] \\\n \t     || ![string compare \"dg-final-use\" $cmd] \\"}, {"sha": "d7efc19c0183be81a9ec4a79146679b27631b2a7", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069a009910c4d8d3d95db6a3760abd0580f4183/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0069a009910c4d8d3d95db6a3760abd0580f4183", "patch": "@@ -504,6 +504,27 @@ proc check_effective_target_trampolines { } {\n     return 1\n }\n \n+# Return 1 if target has limited stack size.\n+\n+proc check_effective_target_stack_size { } {\n+    if [target_info exists gcc,stack_size] {\n+\treturn 1\n+    }\n+    return 0\n+}\n+\n+# Return the value attribute of an effective target, otherwise return 0.\n+\n+proc dg-effective-target-value { effective_target } {\n+    if { \"$effective_target\" == \"stack_size\" } {\n+\tif [check_effective_target_stack_size] {\n+\t    return [target_info gcc,stack_size]\n+\t}\n+    }\n+\n+    return 0\n+}\n+\n # Return 1 if according to target_info struct and explicit target list\n # target disables -fdelete-null-pointer-checks.  Targets should return 0\n # if they simply default to -fno-delete-null-pointer-checks but obey"}]}