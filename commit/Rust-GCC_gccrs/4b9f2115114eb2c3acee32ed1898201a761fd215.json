{"sha": "4b9f2115114eb2c3acee32ed1898201a761fd215", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI5ZjIxMTUxMTRlYjJjM2FjZWUzMmVkMTg5ODIwMWE3NjFmZDIxNQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-01-20T17:53:44Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-01-20T17:53:44Z"}, "message": "PR c++/78495 - wrong code inherited ctor and invisi-ref parm\n\n\tPR c++/78495 - wrong code inherited ctor and invisi-ref parm\n\t* cp-gimplify.c (cp_generize_r): Don't skip thunks.\n\n\tPR c++/79495\n\t* g++.dg/cpp1z/inh-ctor38.C: New.\n\nFrom-SVN: r244728", "tree": {"sha": "7262c5cac6c88e5b1835b9d970045eb9e0c66ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7262c5cac6c88e5b1835b9d970045eb9e0c66ce7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b9f2115114eb2c3acee32ed1898201a761fd215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9f2115114eb2c3acee32ed1898201a761fd215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b9f2115114eb2c3acee32ed1898201a761fd215", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b9f2115114eb2c3acee32ed1898201a761fd215/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f14d2c52d4c815b89513abec58acc16f6e7dfb78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14d2c52d4c815b89513abec58acc16f6e7dfb78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14d2c52d4c815b89513abec58acc16f6e7dfb78"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "d1ad2eb5c72fa8a098fc21bda12d9c7b6ff67de9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b9f2115114eb2c3acee32ed1898201a761fd215", "patch": "@@ -1,3 +1,8 @@\n+2017-01-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/78495 - wrong code inherited ctor and invisi-ref parm\n+\t* cp-gimplify.c (cp_generize_r): Don't skip thunks.\n+\n 2017-01-20  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/77829"}, {"sha": "2c59c07627079f487a54da6083528d863fbaa7c1", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=4b9f2115114eb2c3acee32ed1898201a761fd215", "patch": "@@ -1103,15 +1103,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n       && omp_var_to_track (stmt))\n     omp_cxx_notice_variable (wtd->omp_ctx, stmt);\n \n-  /* Don't dereference parms in a thunk, pass the references through. */\n-  if ((TREE_CODE (stmt) == CALL_EXPR && CALL_FROM_THUNK_P (stmt))\n-      || (TREE_CODE (stmt) == AGGR_INIT_EXPR && AGGR_INIT_FROM_THUNK_P (stmt)))\n-    {\n-      *walk_subtrees = 0;\n-      return NULL;\n-    }\n-\n-  /* Otherwise, do dereference invisible reference parms.  */\n+  /* Dereference invisible reference parms.  */\n   if (wtd->handle_invisiref_parm_p && is_invisiref_parm (stmt))\n     {\n       *stmt_p = convert_from_reference (stmt);"}, {"sha": "dbbe3455c7934967c377ed11f720f4f12c527ce1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b9f2115114eb2c3acee32ed1898201a761fd215", "patch": "@@ -1,3 +1,8 @@\n+2017-01-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/79495\n+\t* g++.dg/cpp1z/inh-ctor38.C: New.\n+\n 2017-01-20  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/79152"}, {"sha": "fbee8ca5c9edd896262ee61cdd6c43c9643b03db", "filename": "gcc/testsuite/g++.dg/cpp1z/inh-ctor38.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b9f2115114eb2c3acee32ed1898201a761fd215/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Finh-ctor38.C?ref=4b9f2115114eb2c3acee32ed1898201a761fd215", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do run { target c++11 } }\n+// PR78495 failed to propagate pass-by-value struct to base ctor.\n+\n+struct Ptr {\n+  void *ptr = 0;\n+\n+  Ptr() {}\n+  Ptr(Ptr const&) = delete;\n+  Ptr(Ptr&& other) : ptr (other.ptr) {}\n+};\n+\n+struct Base {\n+  Ptr val;\n+  Base(Ptr val_) : val(static_cast<Ptr&&>(val_)) {}\n+};\n+\n+struct Derived: Base {\n+  using Base::Base;\n+};\n+\n+void *Foo () {\n+  Ptr ptr;\n+\n+  Derived d(static_cast<Ptr&&>(ptr));\n+\n+  return d.val.ptr;\n+}\n+\n+int main () {\n+  return Foo () != 0;\n+}"}]}