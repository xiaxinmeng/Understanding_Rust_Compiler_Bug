{"sha": "a8766179a75fd18a1636b80425f81c0cd54d6151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg3NjYxNzlhNzVmZDE4YTE2MzZiODA0MjVmODFjMGNkNTRkNjE1MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-01-11T09:02:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-01-11T09:02:43Z"}, "message": "decl.c (start_decl): Improve error location.\n\n/cp\n2019-01-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (start_decl): Improve error location.\n\t(grokdeclarator): Likewise, improve two locations.\n\n/testsuite\n2019-01-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/diagnostic/extern-initialized.C: New.\n\t* g++.dg/ext/dllimport-initialized.C: Likewise.\n\nFrom-SVN: r267830", "tree": {"sha": "5955fc153ea7ffedd82733d5ca159d2fcaa96dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5955fc153ea7ffedd82733d5ca159d2fcaa96dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8766179a75fd18a1636b80425f81c0cd54d6151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8766179a75fd18a1636b80425f81c0cd54d6151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8766179a75fd18a1636b80425f81c0cd54d6151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8766179a75fd18a1636b80425f81c0cd54d6151/comments", "author": null, "committer": null, "parents": [{"sha": "7dc3df082b9edc8d78e0cd3846027afc345aebc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc3df082b9edc8d78e0cd3846027afc345aebc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc3df082b9edc8d78e0cd3846027afc345aebc7"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "4b9fa821d74e22d90d63276555b68a172b07eaa5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a8766179a75fd18a1636b80425f81c0cd54d6151", "patch": "@@ -1,3 +1,8 @@\n+2019-01-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (start_decl): Improve error location.\n+\t(grokdeclarator): Likewise, improve two locations.\n+\n 2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR other/16615"}, {"sha": "fe5403d5ab5b390faa3318489b6dd4481d95652f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a8766179a75fd18a1636b80425f81c0cd54d6151", "patch": "@@ -5096,7 +5096,8 @@ start_decl (const cp_declarator *declarator,\n      a definition.  */\n   if (initialized && DECL_DLLIMPORT_P (decl))\n     {\n-      error (\"definition of %q#D is marked %<dllimport%>\", decl);\n+      error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\"definition of %q#D is marked %<dllimport%>\", decl);\n       DECL_DLLIMPORT_P (decl) = 0;\n     }\n \n@@ -12791,11 +12792,13 @@ grokdeclarator (const cp_declarator *declarator,\n \t    /* It's common practice (and completely valid) to have a const\n \t       be initialized and declared extern.  */\n \t    if (!(type_quals & TYPE_QUAL_CONST))\n-\t      warning (0, \"%qs initialized and declared %<extern%>\", name);\n+\t      warning_at (DECL_SOURCE_LOCATION (decl), 0,\n+\t\t\t  \"%qs initialized and declared %<extern%>\", name);\n \t  }\n \telse\n \t  {\n-\t    error (\"%qs has both %<extern%> and initializer\", name);\n+\t    error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t      \"%qs has both %<extern%> and initializer\", name);\n \t    return error_mark_node;\n \t  }\n       }"}, {"sha": "11eddf7409cecb90e7327f72948b01717df2a7b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8766179a75fd18a1636b80425f81c0cd54d6151", "patch": "@@ -1,3 +1,8 @@\n+2019-01-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/diagnostic/extern-initialized.C: New.\n+\t* g++.dg/ext/dllimport-initialized.C: Likewise.\n+\n 2019-01-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/59345"}, {"sha": "4138a37729677454e1026059a3265155e48f90f0", "filename": "gcc/testsuite/g++.dg/diagnostic/extern-initialized.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fextern-initialized.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fextern-initialized.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fextern-initialized.C?ref=a8766179a75fd18a1636b80425f81c0cd54d6151", "patch": "@@ -0,0 +1,6 @@\n+extern int i __attribute__((unused)) = 0;  // { dg-warning \"12:.i. initialized and declared .extern.\" }\n+\n+void foo()\n+{\n+  extern int i __attribute__((unused)) = 0;  // { dg-error \"14:.i. has both .extern. and initializer\" }\n+}"}, {"sha": "adc7e82dc1a8569f8af38d79de4393b31585fb04", "filename": "gcc/testsuite/g++.dg/ext/dllimport-initialized.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-initialized.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8766179a75fd18a1636b80425f81c0cd54d6151/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-initialized.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllimport-initialized.C?ref=a8766179a75fd18a1636b80425f81c0cd54d6151", "patch": "@@ -0,0 +1,3 @@\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw* } }\n+\n+__attribute__((dllimport)) int i __attribute__((unused)) = 0;  // { dg-error \"32:definition of .int i. is marked .dllimport.\" }"}]}