{"sha": "8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVkMWQyZmEyYmJkYTZkMTM2NWU1Y2JhOTBhYmI0MmVhYzg0YmMwNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-08-15T12:44:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-08-15T12:44:23Z"}, "message": "re PR target/91454 (ICE in get_attr_avx_partial_xmm_update, at config/i386/i386.md:1804 since r274481)\n\n2019-08-15  Richard Biener  <rguenther@suse.de>\n\n\tPR target/91454\n\t* config/i386/i386-features.c (gen_gpr_to_xmm_move_src): New\n\thelper.\n\t(general_scalar_chain::make_vector_copies): Use it.\n\nFrom-SVN: r274535", "tree": {"sha": "93c0fdf0d4b56377da4ad28cda0ad15a62c51c9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93c0fdf0d4b56377da4ad28cda0ad15a62c51c9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c735f8f1a0c5a5d1e114e45390b35882f539ff69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c735f8f1a0c5a5d1e114e45390b35882f539ff69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c735f8f1a0c5a5d1e114e45390b35882f539ff69"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "458caa5a89e3afb56d1c675005be7168abe4c614", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "patch": "@@ -1,3 +1,10 @@\n+2019-08-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR target/91454\n+\t* config/i386/i386-features.c (gen_gpr_to_xmm_move_src): New\n+\thelper.\n+\t(general_scalar_chain::make_vector_copies): Use it.\n+\n 2019-08-15  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* function.c (assign_parm_setup_reg): Handle misaligned stack arguments."}, {"sha": "cead2077e48286e804c9dbd9fce3c78ba69fd1a2", "filename": "gcc/config/i386/i386-features.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04/gcc%2Fconfig%2Fi386%2Fi386-features.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04/gcc%2Fconfig%2Fi386%2Fi386-features.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.c?ref=8ed1d2fa2bbda6d1365e5cba90abb42eac84bc04", "patch": "@@ -658,6 +658,25 @@ scalar_chain::emit_conversion_insns (rtx insns, rtx_insn *after)\n   emit_insn_after (insns, BB_HEAD (new_bb));\n }\n \n+/* Generate the canonical SET_SRC to move GPR to a VMODE vector register,\n+   zeroing the upper parts.  */\n+\n+static rtx\n+gen_gpr_to_xmm_move_src (enum machine_mode vmode, rtx gpr)\n+{\n+  switch (GET_MODE_NUNITS (vmode))\n+    {\n+    case 1:\n+      return gen_rtx_SUBREG (vmode, gpr, 0);\n+    case 2:\n+      return gen_rtx_VEC_CONCAT (vmode, gpr,\n+\t\t\t\t CONST0_RTX (GET_MODE_INNER (vmode)));\n+    default:\n+      return gen_rtx_VEC_MERGE (vmode, gen_rtx_VEC_DUPLICATE (vmode, gpr),\n+\t\t\t\tCONST0_RTX (vmode), GEN_INT (HOST_WIDE_INT_1U));\n+    }\n+}\n+\n /* Make vector copies for all register REGNO definitions\n    and replace its uses in a chain.  */\n \n@@ -684,13 +703,8 @@ general_scalar_chain::make_vector_copies (unsigned regno)\n \t      }\n \t    else\n \t      emit_move_insn (tmp, reg);\n-\t    emit_insn (gen_rtx_SET\n-\t\t        (gen_rtx_SUBREG (vmode, vreg, 0),\n-\t\t\t gen_rtx_VEC_MERGE (vmode,\n-\t\t\t\t\t    gen_rtx_VEC_DUPLICATE (vmode,\n-\t\t\t\t\t\t\t\t   tmp),\n-\t\t\t\t\t    CONST0_RTX (vmode),\n-\t\t\t\t\t    GEN_INT (HOST_WIDE_INT_1U))));\n+\t    emit_insn (gen_rtx_SET (gen_rtx_SUBREG (vmode, vreg, 0),\n+\t\t\t\t    gen_gpr_to_xmm_move_src (vmode, tmp)));\n \t  }\n \telse if (!TARGET_64BIT && smode == DImode)\n \t  {\n@@ -720,13 +734,8 @@ general_scalar_chain::make_vector_copies (unsigned regno)\n \t      }\n \t  }\n \telse\n-\t  emit_insn (gen_rtx_SET\n-\t\t       (gen_rtx_SUBREG (vmode, vreg, 0),\n-\t\t\tgen_rtx_VEC_MERGE (vmode,\n-\t\t\t\t\t   gen_rtx_VEC_DUPLICATE (vmode,\n-\t\t\t\t\t\t\t\t  reg),\n-\t\t\t\t\t   CONST0_RTX (vmode),\n-\t\t\t\t\t   GEN_INT (HOST_WIDE_INT_1U))));\n+\t  emit_insn (gen_rtx_SET (gen_rtx_SUBREG (vmode, vreg, 0),\n+\t\t\t\t  gen_gpr_to_xmm_move_src (vmode, reg)));\n \trtx_insn *seq = get_insns ();\n \tend_sequence ();\n \trtx_insn *insn = DF_REF_INSN (ref);"}]}