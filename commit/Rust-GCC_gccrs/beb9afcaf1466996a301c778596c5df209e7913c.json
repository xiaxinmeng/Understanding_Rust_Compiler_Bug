{"sha": "beb9afcaf1466996a301c778596c5df209e7913c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViOWFmY2FmMTQ2Njk5NmEzMDFjNzc4NTk2YzVkZjIwOWU3OTEzYw==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-11-26T17:26:43Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-11-26T17:26:43Z"}, "message": "libgfortran: Verify the presence of all functions for POSIX 2008 locale\n\nWhile we have `configure' checks for the individual POSIX 2008 extended\nlocale functions we refer to and use to guard the respective call sites,\nwe only verify the presence of `newlocale' for our global feature enable\ncheck.  Consequently compilation fails for targets like NetBSD that only\nhave partial support for POSIX 2008 locale features and in particular\nlack the `uselocale' function:\n\n.../libgfortran/io/transfer.c: In function 'data_transfer_init_worker':\n.../libgfortran/io/transfer.c:3416:30: error:\n'old_locale_lock' undeclared (first use in this function)\n 3416 |       __gthread_mutex_lock (&old_locale_lock);\n      |                              ^~~~~~~~~~~~~~~\n.../libgfortran/io/transfer.c:3416:30: note: each undeclared identifier is reported only once for each function it appears in\n.../libgfortran/io/transfer.c:3417:12: error:\n'old_locale_ctr' undeclared (first use in this function)\n 3417 |       if (!old_locale_ctr++)\n      |            ^~~~~~~~~~~~~~\n.../libgfortran/io/transfer.c:3419:11: error:\n'old_locale' undeclared (first use in this function); did you mean 'c_locale'?\n 3419 |           old_locale = setlocale (LC_NUMERIC, NULL);\n      |           ^~~~~~~~~~\n      |           c_locale\n.../libgfortran/io/transfer.c: In function 'finalize_transfer':\n.../libgfortran/io/transfer.c:4253:26: error:\n'old_locale_lock' undeclared (first use in this function)\n 4253 |   __gthread_mutex_lock (&old_locale_lock);\n      |                          ^~~~~~~~~~~~~~~\n.../libgfortran/io/transfer.c:4254:10: error:\n'old_locale_ctr' undeclared (first use in this function)\n 4254 |   if (!--old_locale_ctr)\n      |          ^~~~~~~~~~~~~~\n.../libgfortran/io/transfer.c:4256:30: error:\n'old_locale' undeclared (first use in this function); did you mean 'c_locale'?\n 4256 |       setlocale (LC_NUMERIC, old_locale);\n      |                              ^~~~~~~~~~\n      |                              c_locale\nmake[3]: *** [Makefile:6221: transfer.lo] Error 1\n\nOnly enable the use of POSIX 2008 extended locale features then when all\nthe three functions required are present, removing said build errors.\n\n\tlibgfortran/\n\t* io/io.h [HAVE_NEWLOCALE]: Also check for HAVE_FREELOCALE and\n\tHAVE_USELOCALE.\n\t[HAVE_FREELOCALE && HAVE_NEWLOCALE && HAVE_USELOCALE]\n\t(HAVE_POSIX_2008_LOCALE): New macro.\n\t(st_parameter_dt) [HAVE_NEWLOCALE]: Check for\n\tHAVE_POSIX_2008_LOCALE instead.\n\t* io/transfer.c (data_transfer_init_worker, finalize_transfer)\n\t[HAVE_USELOCALE]: Check for HAVE_POSIX_2008_LOCALE instead.\n\t* io/unit.c [HAVE_NEWLOCALE]: Likewise.\n\t(init_units) [HAVE_NEWLOCALE]: Likewise.\n\t(close_units) [HAVE_FREELOCALE]: Likewise.\n\t* runtime/error.c (gf_strerror) [HAVE_USELOCALE]: Likewise.", "tree": {"sha": "cb7e81bf247d50948a6c12748b9057e8f5a3f1d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb7e81bf247d50948a6c12748b9057e8f5a3f1d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beb9afcaf1466996a301c778596c5df209e7913c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb9afcaf1466996a301c778596c5df209e7913c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb9afcaf1466996a301c778596c5df209e7913c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb9afcaf1466996a301c778596c5df209e7913c/comments", "author": null, "committer": null, "parents": [{"sha": "c87cce5a339bae3b73f34dbc20409de07caf68da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87cce5a339bae3b73f34dbc20409de07caf68da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87cce5a339bae3b73f34dbc20409de07caf68da"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "b4a811384c93a6ed7bd5c09fc8042a24ffe7a1fa", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=beb9afcaf1466996a301c778596c5df209e7913c", "patch": "@@ -52,8 +52,12 @@ struct format_data;\n typedef struct fnode fnode;\n struct gfc_unit;\n \n-#ifdef HAVE_NEWLOCALE\n-/* We have POSIX 2008 extended locale stuff.  */\n+#if defined (HAVE_FREELOCALE) && defined (HAVE_NEWLOCALE) \\\n+  && defined (HAVE_USELOCALE)\n+/* We have POSIX 2008 extended locale stuff.  We only choose to use it\n+   if all the functions required are present as some systems, e.g. NetBSD\n+   do not have `uselocale'.  */\n+#define HAVE_POSIX_2008_LOCALE\n extern locale_t c_locale;\n internal_proto(c_locale);\n #else\n@@ -562,7 +566,7 @@ typedef struct st_parameter_dt\n \t  char *line_buffer;\n \t  struct format_data *fmt;\n \t  namelist_info *ionml;\n-#ifdef HAVE_NEWLOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n \t  locale_t old_locale;\n #endif\n \t  /* Current position within the look-ahead line buffer.  */"}, {"sha": "c36d8bca808f199319335fe95dcc44285bc9e26b", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=beb9afcaf1466996a301c778596c5df209e7913c", "patch": "@@ -3410,7 +3410,7 @@ data_transfer_init_worker (st_parameter_dt *dtp, int read_flag)\n \n   if (dtp->u.p.current_unit->flags.form == FORM_FORMATTED)\n     {\n-#ifdef HAVE_USELOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n       dtp->u.p.old_locale = uselocale (c_locale);\n #else\n       __gthread_mutex_lock (&old_locale_lock);\n@@ -4243,7 +4243,7 @@ finalize_transfer (st_parameter_dt *dtp)\n \t}\n     }\n \n-#ifdef HAVE_USELOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n   if (dtp->u.p.old_locale != (locale_t) 0)\n     {\n       uselocale (dtp->u.p.old_locale);"}, {"sha": "faf62997b5e74eafb98dc3ebd302af9bfdbdbbca", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=beb9afcaf1466996a301c778596c5df209e7913c", "patch": "@@ -114,7 +114,7 @@ static char stdout_name[] = \"stdout\";\n static char stderr_name[] = \"stderr\";\n \n \n-#ifdef HAVE_NEWLOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n locale_t c_locale;\n #else\n /* If we don't have POSIX 2008 per-thread locales, we need to use the\n@@ -586,7 +586,7 @@ init_units (void)\n {\n   gfc_unit *u;\n \n-#ifdef HAVE_NEWLOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n   c_locale = newlocale (0, \"C\", 0);\n #else\n #ifndef __GTHREAD_MUTEX_INIT\n@@ -803,7 +803,7 @@ close_units (void)\n \n   free (newunits);\n \n-#ifdef HAVE_FREELOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n   freelocale (c_locale);\n #endif\n }"}, {"sha": "a401dbad1644dd3e5ec200a85001f9d4963600fa", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb9afcaf1466996a301c778596c5df209e7913c/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=beb9afcaf1466996a301c778596c5df209e7913c", "patch": "@@ -272,7 +272,7 @@ gf_strerror (int errnum,\n     p = strerror (errnum);\n   return p;\n #elif defined(HAVE_STRERROR_R)\n-#ifdef HAVE_USELOCALE\n+#ifdef HAVE_POSIX_2008_LOCALE\n   /* Some targets (Darwin at least) have the POSIX 2008 extended\n      locale functions, but not strerror_l.  So reset the per-thread\n      locale here.  */"}]}