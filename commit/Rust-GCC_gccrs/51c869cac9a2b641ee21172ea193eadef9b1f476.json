{"sha": "51c869cac9a2b641ee21172ea193eadef9b1f476", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFjODY5Y2FjOWEyYjY0MWVlMjExNzJlYTE5M2VhZGVmOWIxZjQ3Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-10-22T17:40:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-10-22T17:40:29Z"}, "message": "tree.def (COMPLEX_TYPE): Constrain element type.\n\n2008-10-22  Richard Guenther  <rguenther@suse.de>\n\n\t* tree.def (COMPLEX_TYPE): Constrain element type.\n\t* tree.c (build_complex_type): Assert that.\n\t* tree-ssa-structalias.c (could_have_pointers): Complex types\n\tcannot have pointers.\n\nFrom-SVN: r141299", "tree": {"sha": "a8b70739be04da68b2f0658cded9a97e965873d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8b70739be04da68b2f0658cded9a97e965873d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51c869cac9a2b641ee21172ea193eadef9b1f476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c869cac9a2b641ee21172ea193eadef9b1f476", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c869cac9a2b641ee21172ea193eadef9b1f476", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c869cac9a2b641ee21172ea193eadef9b1f476/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7da8b427fa7de6a459a0a3b33eca9de953aea62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7da8b427fa7de6a459a0a3b33eca9de953aea62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7da8b427fa7de6a459a0a3b33eca9de953aea62"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "484e34014c9d3d369a369a59210e860d9b214da6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51c869cac9a2b641ee21172ea193eadef9b1f476", "patch": "@@ -1,3 +1,10 @@\n+2008-10-22  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree.def (COMPLEX_TYPE): Constrain element type.\n+\t* tree.c (build_complex_type): Assert that.\n+\t* tree-ssa-structalias.c (could_have_pointers): Complex types\n+\tcannot have pointers.\n+\n 2008-10-22  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/30949"}, {"sha": "11427ec69e201dc3a86f51e0065938498b738c62", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=51c869cac9a2b641ee21172ea193eadef9b1f476", "patch": "@@ -2765,8 +2765,7 @@ could_have_pointers (tree t)\n   tree type = TREE_TYPE (t);\n \n   if (POINTER_TYPE_P (type)\n-      || AGGREGATE_TYPE_P (type)\n-      || TREE_CODE (type) == COMPLEX_TYPE)\n+      || AGGREGATE_TYPE_P (type))\n     return true;\n \n   return false;"}, {"sha": "10b50d121dcde219096dadf5e0d30364c3286d60", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=51c869cac9a2b641ee21172ea193eadef9b1f476", "patch": "@@ -6168,6 +6168,10 @@ build_complex_type (tree component_type)\n   tree t;\n   hashval_t hashcode;\n \n+  gcc_assert (INTEGRAL_TYPE_P (component_type)\n+\t      || SCALAR_FLOAT_TYPE_P (component_type)\n+\t      || FIXED_POINT_TYPE_P (component_type));\n+\n   /* Make a node of the sort we want.  */\n   t = make_node (COMPLEX_TYPE);\n "}, {"sha": "3e077cc2cd7a7612e20aa70b1e30940422988687", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c869cac9a2b641ee21172ea193eadef9b1f476/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=51c869cac9a2b641ee21172ea193eadef9b1f476", "patch": "@@ -186,7 +186,8 @@ DEFTREECODE (REFERENCE_TYPE, \"reference_type\", tcc_type, 0)\n    compiler.  COMPLEX_TYPE, VECTOR_TYPE, ARRAY_TYPE.  */\n      \n /* Complex number types.  The TREE_TYPE field is the data type\n-   of the real and imaginary parts.  */\n+   of the real and imaginary parts.  It must be of scalar\n+   arithmetic type, not including pointer type.  */\n DEFTREECODE (COMPLEX_TYPE, \"complex_type\", tcc_type, 0)\n \n /* Vector types.  The TREE_TYPE field is the data type of the vector"}]}