{"sha": "4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2ZGNmZDU0MmFlZDJkMTRhMGJjZDJiZWUxMTZkMDc3OWNjMWQ0OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-02T13:13:22Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-02T14:05:38Z"}, "message": "gcc-changelog: support patterns\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Support foo/bar/*: patterns in\n\twildcard_prefixes locations.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Add 3 new patches.", "tree": {"sha": "8b5dc478a86ea87833879bc1cb0d3c2c6dc1892f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b5dc478a86ea87833879bc1cb0d3c2c6dc1892f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7WXLIACgkQTcGC3A+n\nN4VwDAf9EZaWsi0JF34+Zkao8x5hkTaETYOcKWggSW6/hY33tNHjRRO8mJPXMsQd\nSbCPU8Fnj7im7cE5y/K+3Uq/FXYIFiFMwKDBJXZGv4QUe0AsIOn3fe1MndHSitWD\nYQ/wkltz93OGxnQbB1y9Ogmt0eQdbAEB34oU3rC63MkknvTBbFTJ6OdPWDO/R9aa\nL1YZBSrZMc3y0bB7Ff5kjtdvF1NjWJQi6oDAQ2Ah6oMK+J/LJYH5ljIkDQ2Gim21\nyeVrFg1cJ0pUOE7veV1vqEx6O+2ib8gofTqVA7816di5cNnuhHdeLaeXwbe1L9rk\n7sqozOV2Rf+xhXbeF6C8qy+Fc0sGPg==\n=bTpk\n-----END PGP SIGNATURE-----", "payload": "tree 8b5dc478a86ea87833879bc1cb0d3c2c6dc1892f\nparent a04b7410d305800b747963ab940d2b1a602b5ddf\nauthor Martin Liska <mliska@suse.cz> 1591103602 +0200\ncommitter Martin Liska <mliska@suse.cz> 1591106738 +0200\n\ngcc-changelog: support patterns\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Support foo/bar/*: patterns in\n\twildcard_prefixes locations.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Add 3 new patches.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04b7410d305800b747963ab940d2b1a602b5ddf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04b7410d305800b747963ab940d2b1a602b5ddf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04b7410d305800b747963ab940d2b1a602b5ddf"}], "stats": {"total": 151, "additions": 143, "deletions": 8}, "files": [{"sha": "069900d7cbff6375a64de18885a66f03a3664b16", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 44, "deletions": 8, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "patch": "@@ -136,6 +136,11 @@\n     'libsanitizer/',\n     ]\n \n+wildcard_prefixes = [\n+    'gcc/testsuite/',\n+    'libstdc++-v3/doc/html/'\n+    ]\n+\n misc_files = [\n     'gcc/DATESTAMP',\n     'gcc/BASE-VER',\n@@ -182,11 +187,10 @@ def __init__(self, folder, authors, prs):\n         self.initial_prs = list(prs)\n         self.prs = list(prs)\n         self.lines = []\n+        self.files = []\n+        self.file_patterns = []\n \n-    @property\n-    def files(self):\n-        files = []\n-\n+    def parse_file_names(self):\n         # Whether the content currently processed is between a star prefix the\n         # end of the file list: a colon or an open paren.\n         in_location = False\n@@ -215,8 +219,10 @@ def files(self):\n                 for file in line.split(','):\n                     file = file.strip()\n                     if file:\n-                        files.append(file)\n-        return files\n+                        if file.endswith('*'):\n+                            self.file_patterns.append(file[:-1])\n+                        else:\n+                            self.files.append(file)\n \n     @property\n     def datetime(self):\n@@ -275,8 +281,10 @@ def __init__(self, hexsha, date, author, body, modified_files,\n         self.parse_lines(all_are_ignored)\n         if self.changes:\n             self.parse_changelog()\n+            self.parse_file_names()\n             self.check_for_empty_description()\n             self.deduce_changelog_locations()\n+            self.check_file_patterns()\n             if not self.errors:\n                 self.check_mentioned_files()\n                 self.check_for_correct_changelog()\n@@ -442,6 +450,18 @@ def parse_changelog(self):\n                         else:\n                             last_entry.lines.append(line)\n \n+    def parse_file_names(self):\n+        for entry in self.changelog_entries:\n+            entry.parse_file_names()\n+\n+    def check_file_patterns(self):\n+        for entry in self.changelog_entries:\n+            for pattern in entry.file_patterns:\n+                name = os.path.join(entry.folder, pattern)\n+                if name not in wildcard_prefixes:\n+                    msg = 'unsupported wildcard prefix'\n+                    self.errors.append(Error(msg, name))\n+\n     def check_for_empty_description(self):\n         for entry in self.changelog_entries:\n             for i, line in enumerate(entry.lines):\n@@ -502,6 +522,8 @@ def check_mentioned_files(self):\n         assert folder_count == len(self.changelog_entries)\n \n         mentioned_files = set()\n+        mentioned_patterns = []\n+        used_patterns = set()\n         for entry in self.changelog_entries:\n             if not entry.files:\n                 msg = 'ChangeLog must contain at least one file entry'\n@@ -510,6 +532,8 @@ def check_mentioned_files(self):\n             for file in entry.files:\n                 if not self.is_changelog_filename(file):\n                     mentioned_files.add(os.path.join(entry.folder, file))\n+            for pattern in entry.file_patterns:\n+                mentioned_patterns.append(os.path.join(entry.folder, pattern))\n \n         cand = [x[0] for x in self.modified_files\n                 if not self.is_changelog_filename(x[0])]\n@@ -543,9 +567,21 @@ def check_mentioned_files(self):\n                     assert file.startswith(entry.folder)\n                     file = file[len(entry.folder):].lstrip('/')\n                     entry.lines.append('\\t* %s: New file.' % file)\n+                    entry.files.append(file)\n                 else:\n-                    msg = 'changed file not mentioned in a ChangeLog'\n-                    self.errors.append(Error(msg, file))\n+                    used_pattern = [p for p in mentioned_patterns\n+                                    if file.startswith(p)]\n+                    used_pattern = used_pattern[0] if used_pattern else None\n+                    if used_pattern:\n+                        used_patterns.add(used_pattern)\n+                    else:\n+                        msg = 'changed file not mentioned in a ChangeLog'\n+                        self.errors.append(Error(msg, file))\n+\n+        for pattern in mentioned_patterns:\n+            if pattern not in used_patterns:\n+                error = 'pattern doesn''t match any changed files'\n+                self.errors.append(Error(error, pattern))\n \n     def check_for_correct_changelog(self):\n         for entry in self.changelog_entries:"}, {"sha": "7e8140c915f2961cb5e590e4f153ebfe7e4f39ab", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "patch": "@@ -318,3 +318,16 @@ def test_missing_change_description(self):\n         assert len(email.errors) == 2\n         assert email.errors[0].message == 'missing description of a change'\n         assert email.errors[1].message == 'missing description of a change'\n+\n+    def test_libstdcxx_html_regenerated(self):\n+        email = self.from_patch_glob('0001-Fix-text-of-hyperlink')\n+        assert not email.errors\n+        email = self.from_patch_glob('0002-libstdc-Fake-test-change-1.patch')\n+        assert len(email.errors) == 1\n+        msg = 'pattern doesn''t match any changed files'\n+        assert email.errors[0].message == msg\n+        assert email.errors[0].line == 'libstdc++-v3/doc/html/'\n+        email = self.from_patch_glob('0003-libstdc-Fake-test-change-2.patch')\n+        assert len(email.errors) == 1\n+        msg = 'changed file not mentioned in a ChangeLog'\n+        assert email.errors[0].message == msg"}, {"sha": "5d9b62d26373cd587e44e88476ab174c382f3081", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=4b6dcfd542aed2d14a0bcd2bee116d0779cc1d48", "patch": "@@ -2973,3 +2973,89 @@ index 1cd5872c03d..6f95aedb3d3 100644\n +\n -- \n 2.26.2\n+\n+=== 0001-Fix-text-of-hyperlink-in-manual.patch ===\n+From c7904d9e08a0ca3f733be3c2e8a3b912fa851fc5 Mon Sep 17 00:00:00 2001\n+From: Jonathan Wakely <jwakely@redhat.com>\n+Date: Fri, 8 Mar 2019 13:56:53 +0000\n+Subject: [PATCH] Fix text of hyperlink in manual\n+\n+\t* doc/xml/manual/using.xml: Use link element instead of xref.\n+\t* doc/html/*: Regenerate.\n+\n+---\n+ libstdc++-v3/ChangeLog                         | 3 +++\n+ libstdc++-v3/doc/html/manual/using_macros.html | 3 ++-\n+ libstdc++-v3/doc/xml/manual/using.xml          | 4 ++--\n+ 3 files changed, 7 insertions(+), 3 deletions(-)\n+\n+diff --git a/libstdc++-v3/doc/html/manual/using_macros.html b/libstdc++-v3/doc/html/manual/using_macros.html\n+index 7030bd2d0fd..dad6564a97d 100644\n+--- a/libstdc++-v3/doc/html/manual/using_macros.html\n++++ b/libstdc++-v3/doc/html/manual/using_macros.html\n+@@ -1 +1,2 @@\n+ \n++\n+diff --git a/libstdc++-v3/doc/xml/manual/using.xml b/libstdc++-v3/doc/xml/manual/using.xml\n+index 2d44a739406..7647e9b8dad 100644\n+--- a/libstdc++-v3/doc/xml/manual/using.xml\n++++ b/libstdc++-v3/doc/xml/manual/using.xml\n+@@ -1 +1,2 @@\n+ \n++\n+-- \n+2.25.4\n+\n+=== 0002-libstdc-Fake-test-change-1.patch ===\n+From fe4ade6778d1d97214db12bf2c40d0f40e7f953a Mon Sep 17 00:00:00 2001\n+From: Jonathan Wakely <jwakely@redhat.com>\n+Date: Tue, 2 Jun 2020 11:52:34 +0100\n+Subject: [PATCH] libstdc++: Fake change for testing git_commit.py\n+\n+libstdc++-v3/ChangeLog:\n+\n+\t* doc/xml/faq.xml: Fake change.\n+\t* doc/html/*: Regenerated.\n+---\n+ libstdc++-v3/doc/xml/faq.xml | 1 +\n+ 1 file changed, 1 insertion(+)\n+\n+diff --git a/libstdc++-v3/doc/xml/faq.xml b/libstdc++-v3/doc/xml/faq.xml\n+index e419d3c22a0..bcc14dd6d90 100644\n+--- a/libstdc++-v3/doc/xml/faq.xml\n++++ b/libstdc++-v3/doc/xml/faq.xml\n+@@ -1 +1,2 @@\n+ \n++\n+-- \n+2.25.4\n+\n+=== 0003-libstdc-Fake-test-change-2.patch ===\n+From e460effb3a42c1c046b682fe266da418f2693ef3 Mon Sep 17 00:00:00 2001\n+From: Jonathan Wakely <jwakely@redhat.com>\n+Date: Tue, 2 Jun 2020 11:52:34 +0100\n+Subject: [PATCH] libstdc++: Fake change for testing 2\n+\n+libstdc++-v3/ChangeLog:\n+\n+\t* doc/xml/faq.xml: Fake change.\n+---\n+ libstdc++-v3/doc/html/faq.html | 2 +-\n+ libstdc++-v3/doc/xml/faq.xml   | 1 +\n+ 2 files changed, 2 insertions(+), 1 deletion(-)\n+\n+diff --git a/libstdc++-v3/doc/html/faq.html b/libstdc++-v3/doc/html/faq.html\n+index 967e5f5f348..95d21b5bf9f 100644\n+--- a/libstdc++-v3/doc/html/faq.html\n++++ b/libstdc++-v3/doc/html/faq.html\n+@@ -1 +1,2 @@\n+ \n++\n+--- a/libstdc++-v3/doc/xml/faq.xml\n++++ b/libstdc++-v3/doc/xml/faq.xml\n+@@ -1 +1,2 @@\n+ \n++\n+-- \n+2.25.4\n+"}]}