{"sha": "1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY0Y2I5MmI0MmE1MWM3MTlmNjc4MDhmNmMyZWE5NzViOGUyNmE3Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-03-15T10:40:27Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-03-15T10:40:27Z"}, "message": "cp-tree.h (CPTI_REF_DESC_TYPE, [...]): Remove.\n\n\t* cp-tree.h (CPTI_REF_DESC_TYPE, ref_desc_type_node): Remove.\n\t* decl.c (ref_desc_type_node): Undocument.\n\t* rtti.c (ptr_ref_initializer): Rename to ...\n\t(ptr_initializer): ... here. Adjust comments.\n\t(ptmd_initializer): Fix comment thinko.\n\t(synthesize_tinfo_var): Remove REFERENCE_TYPE case.\n\t(create_tinfo_types): Remove ref_desc_type_node init.\n\t* tinfo2.cc (__reference_type_info): Remove.\n\nFrom-SVN: r32558", "tree": {"sha": "46d0cf1f92d537103d11fb0abe8f391478c63425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46d0cf1f92d537103d11fb0abe8f391478c63425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/comments", "author": null, "committer": null, "parents": [{"sha": "f78c7bc6280150d3631c99918540fd294b50f80a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78c7bc6280150d3631c99918540fd294b50f80a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78c7bc6280150d3631c99918540fd294b50f80a"}], "stats": {"total": 63, "additions": 19, "deletions": 44}, "files": [{"sha": "e24bd9ecab8409ec32d148f928624ea4d9a04f85", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "patch": "@@ -1,3 +1,14 @@\n+2000-03-15  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (CPTI_REF_DESC_TYPE, ref_desc_type_node): Remove.\n+\t* decl.c (ref_desc_type_node): Undocument.\n+\t* rtti.c (ptr_ref_initializer): Rename to ...\n+\t(ptr_initializer): ... here. Adjust comments.\n+\t(ptmd_initializer): Fix comment thinko.\n+\t(synthesize_tinfo_var): Remove REFERENCE_TYPE case.\n+\t(create_tinfo_types): Remove ref_desc_type_node init.\n+\t* tinfo2.cc (__reference_type_info): Remove.\n+\n 2000-03-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (cp_finish_decl): Remove obsolete comment."}, {"sha": "88e63032396c1998a41add685a9493dfa74cdbf1", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "patch": "@@ -520,7 +520,6 @@ enum cp_tree_index\n     CPTI_TI_DESC_TYPE,\n     CPTI_BLTN_DESC_TYPE,\n     CPTI_PTR_DESC_TYPE,\n-    CPTI_REF_DESC_TYPE,\n     CPTI_ARY_DESC_TYPE,\n     CPTI_FUNC_DESC_TYPE,\n     CPTI_ENUM_DESC_TYPE,\n@@ -606,7 +605,6 @@ extern tree cp_global_trees[CPTI_MAX];\n #define ti_desc_type_node\t\tcp_global_trees[CPTI_TI_DESC_TYPE]\n #define bltn_desc_type_node\t\tcp_global_trees[CPTI_BLTN_DESC_TYPE]\n #define ptr_desc_type_node\t\tcp_global_trees[CPTI_PTR_DESC_TYPE]\n-#define ref_desc_type_node\t\tcp_global_trees[CPTI_REF_DESC_TYPE]\n #define ary_desc_type_node\t\tcp_global_trees[CPTI_ARY_DESC_TYPE]\n #define func_desc_type_node\t\tcp_global_trees[CPTI_FUNC_DESC_TYPE]\n #define enum_desc_type_node\t\tcp_global_trees[CPTI_ENUM_DESC_TYPE]"}, {"sha": "e8150816026eaddda8eae9149a19c82e6845f440", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "patch": "@@ -211,7 +211,7 @@ tree error_mark_list;\n \ttree __tp_desc_type_node;\n #endif\n         tree ti_desc_type_node;\n-\ttree bltn_desc_type_node, ptr_desc_type_node, ref_desc_type_node;\n+\ttree bltn_desc_type_node, ptr_desc_type_node;\n \ttree ary_desc_type_node, func_desc_type_node, enum_desc_type_node;\n \ttree class_desc_type_node, si_class_desc_type_node, vmi_class_desc_type_node;\n \ttree ptmd_desc_type_node;"}, {"sha": "6774151d267fe661309dc4ad03a92f1edccdb144", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "patch": "@@ -64,7 +64,7 @@ static tree tinfo_from_decl PARAMS((tree));\n static int qualifier_flags PARAMS((tree));\n static tree tinfo_base_init PARAMS((tree, tree));\n static tree generic_initializer PARAMS((tree, tree));\n-static tree ptr_ref_initializer PARAMS((tree, tree));\n+static tree ptr_initializer PARAMS((tree, tree));\n static tree ptmd_initializer PARAMS((tree, tree));\n static int class_hint_flags PARAMS((tree));\n static tree class_initializer PARAMS((tree, tree, tree));\n@@ -1298,12 +1298,12 @@ generic_initializer (desc, target)\n   return init;\n }\n \n-/* Return the CONSTRUCTOR expr for a type_info of pointer or reference TYPE.\n+/* Return the CONSTRUCTOR expr for a type_info of pointer TYPE.\n    DESC provides information about the particular type_info derivation,\n    which adds target type and qualifier flags members to the type_info base.  */\n \n static tree\n-ptr_ref_initializer (desc, target)\n+ptr_initializer (desc, target)\n      tree desc;\n      tree target;\n {\n@@ -1322,7 +1322,7 @@ ptr_ref_initializer (desc, target)\n   return init;\n }\n \n-/* Return the CONSTRUCTOR expr for a type_info of pointer or reference TYPE.\n+/* Return the CONSTRUCTOR expr for a type_info of pointer to member data TYPE.\n    DESC provides information about the particular type_info derivation,\n    which adds target type and qualifier flags members to the type_info base.  */\n \n@@ -1427,13 +1427,9 @@ synthesize_tinfo_var (target_type, real_name)\n             /* These are in the runtime.  */\n             return NULL_TREE;\n           var_type = ptr_desc_type_node;\n-          var_init = ptr_ref_initializer (var_type, target_type);\n+          var_init = ptr_initializer (var_type, target_type);\n         }\n       break;\n-    case REFERENCE_TYPE:\n-      var_type = ref_desc_type_node;\n-      var_init = ptr_ref_initializer (var_type, target_type);\n-      break;\n     case ENUMERAL_TYPE:\n       var_type = enum_desc_type_node;\n       var_init = generic_initializer (var_type, target_type);\n@@ -1704,18 +1700,13 @@ create_tinfo_types ()\n       (\"__fundamental_type_info\", 0,\n        NULL);\n \n-  /* Pointer and reference type_info. These two fields, qualification mask\n-      and pointer to the pointed to (referenced) type.  */\n+  /* Pointer type_info. Adds two fields, qualification mask\n+     and pointer to the pointed to type.  */\n   ptr_desc_type_node = create_pseudo_type_info\n       (\"__pointer_type_info\", 0,\n        build_lang_decl (FIELD_DECL, NULL_TREE, integer_type_node),\n        build_lang_decl (FIELD_DECL, NULL_TREE, ptr_type_info),\n        NULL);\n-  ref_desc_type_node = create_pseudo_type_info\n-      (\"__reference_type_info\", 0,\n-       build_lang_decl (FIELD_DECL, NULL_TREE, integer_type_node),\n-       build_lang_decl (FIELD_DECL, NULL_TREE, ptr_type_info),\n-       NULL);\n \n   /* Array, function and enum type_info. No additional fields. */\n   ary_desc_type_node = create_pseudo_type_info"}, {"sha": "e0e29ae5bba81b86bc374bbdc863776b0888b414", "filename": "gcc/cp/tinfo2.cc", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Ftinfo2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4cb92b42a51c719f67808f6c2ea975b8e26a7f/gcc%2Fcp%2Ftinfo2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftinfo2.cc?ref=1f4cb92b42a51c719f67808f6c2ea975b8e26a7f", "patch": "@@ -130,27 +130,6 @@ class __pointer_type_info : public type_info {\n                          unsigned outer) const;\n };\n \n-// type information for reference to data\n-class __reference_type_info : public type_info {\n-public:\n-  virtual ~__reference_type_info ();\n-  int quals;                // qualification of the target object\n-  const type_info *target;  // type of object being referenced\n-\n-// internal parts\n-  enum quals_masks {\n-    const_mask = 0x1,\n-    volatile_mask = 0x2\n-  };\n-  \n-public:\n-  explicit __reference_type_info (const char *n,\n-                                  int quals_,\n-                                  const type_info *target_)\n-    : type_info (n), quals (quals_), target (target_)\n-    { }\n-};\n-\n // type information for array objects\n class __array_type_info : public type_info {\n public:\n@@ -229,10 +208,6 @@ __pointer_type_info::\n ~__pointer_type_info ()\n {}\n \n-__reference_type_info::\n-~__reference_type_info ()\n-{}\n-\n __array_type_info::\n ~__array_type_info ()\n {}"}]}