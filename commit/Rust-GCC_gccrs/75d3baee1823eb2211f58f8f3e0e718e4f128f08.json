{"sha": "75d3baee1823eb2211f58f8f3e0e718e4f128f08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVkM2JhZWUxODIzZWIyMjExZjU4ZjhmM2UwZTcxOGU0ZjEyOGYwOA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-12-01T23:29:59Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-12-01T23:29:59Z"}, "message": "re PR libobjc/11433 (Crash due to dereferencing null pointer when querying protocol)\n\n\tPR 11433\ngcc/testsuite:\n\t* objc.dg/proto-lossage-3.m: New test.\nlibobjc:\n\t* Protocol.m (descriptionForInstanceMethod): Don't dereference\n\tinstance_methods if it's NULL.\n\t(descriptionForClassMethod): Likewise for class_methods.\n\nFrom-SVN: r74137", "tree": {"sha": "13d311306a2e450cead72959b52908f3a1874875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13d311306a2e450cead72959b52908f3a1874875"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75d3baee1823eb2211f58f8f3e0e718e4f128f08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d3baee1823eb2211f58f8f3e0e718e4f128f08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d3baee1823eb2211f58f8f3e0e718e4f128f08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d3baee1823eb2211f58f8f3e0e718e4f128f08/comments", "author": null, "committer": null, "parents": [{"sha": "bb9cfd00626b99a5d7cd770c91093ea27a907f84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9cfd00626b99a5d7cd770c91093ea27a907f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb9cfd00626b99a5d7cd770c91093ea27a907f84"}], "stats": {"total": 79, "additions": 59, "deletions": 20}, "files": [{"sha": "a880222b188a29e9ad7e0044d5b44988e0badee1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d3baee1823eb2211f58f8f3e0e718e4f128f08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d3baee1823eb2211f58f8f3e0e718e4f128f08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75d3baee1823eb2211f58f8f3e0e718e4f128f08", "patch": "@@ -1,3 +1,8 @@\n+2003-12-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\tPR 11433\n+\t* objc.dg/proto-lossage-3.m: New test.\n+\n 2003-12-01  Roger Sayle  <roger@eyesopen.com>\n \n \tPR optimization/12628\n@@ -114,8 +119,8 @@\n \n 2003-11-14  Giovanni Bajo  <giovannibajo@libero.it>\n \n-        PR c++/2294\n-        * g++.dg/lookup/using9.c: New test.\n+\tPR c++/2294\n+\t* g++.dg/lookup/using9.c: New test.\n \n 2003-11-14  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -131,15 +136,15 @@\n \n 2003-11-14  Giovanni Bajo  <giovannibajo@libero.it>\n \n-        PR c++/2094\n-        * g++.dg/template/ptrmem7.C: New test.\n+\tPR c++/2094\n+\t* g++.dg/template/ptrmem7.C: New test.\n \n 2003-11-13  Andrew Pinski <apinski@apple.com>\n \n \t* gcc.c-torture/compile/20031113-1.c: New test.\n \n 2003-11-13  Mark Mitchell  <mark@codesourcery.com>\n-            Kean Johnston <jkj@sco.com>\n+\t    Kean Johnston <jkj@sco.com>\n \n \tPR c/13029\n \t* gcc.dg/unused-4.c: Update.\n@@ -650,7 +655,7 @@\n \n 2003-09-29  Richard Henderson  <rth@redhat.com>\n \n-        * g++.dg/init/array10.C: Add dg-options.\n+\t* g++.dg/init/array10.C: Add dg-options.\n \n 2003-09-29  Eric Botcazou  <ebotcazou@libertysurf.fr>\n "}, {"sha": "512a59ee6dc9a80283d8ed0c4abaa00d034d3585", "filename": "gcc/testsuite/objc.dg/proto-lossage-3.m", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d3baee1823eb2211f58f8f3e0e718e4f128f08/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d3baee1823eb2211f58f8f3e0e718e4f128f08/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-3.m?ref=75d3baee1823eb2211f58f8f3e0e718e4f128f08", "patch": "@@ -0,0 +1,25 @@\n+/* Crash due to descriptionFor(Instance|Class)Method applied to\n+   a protocol with no instance/class methods respectively.\n+   Problem report and original fix by richard@brainstorm.co.uk.  */\n+/* { dg-do run } */\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+#include <objc/Protocol.h>\n+\n+@protocol NoInstanceMethods\n++ testMethod;\n+@end\n+\n+@protocol NoClassMethods\n+- testMethod;\n+@end\n+\n+int\n+main()\n+{\n+[@protocol(NoInstanceMethods) descriptionForInstanceMethod: @selector(name)];\n+[@protocol(NoInstanceMethods) descriptionForClassMethod: @selector(name)];\n+[@protocol(NoClassMethods) descriptionForInstanceMethod: @selector(name)];\n+[@protocol(NoClassMethods) descriptionForClassMethod: @selector(name)];\n+return 0;\n+}"}, {"sha": "f900eafd57024584346314ed41b4a9e4a8da68ea", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d3baee1823eb2211f58f8f3e0e718e4f128f08/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d3baee1823eb2211f58f8f3e0e718e4f128f08/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=75d3baee1823eb2211f58f8f3e0e718e4f128f08", "patch": "@@ -1,3 +1,10 @@\n+2003-12-01  Zack Weinberg  <zack@codesourcery.com>\n+\n+\tPR 11433\n+\t* Protocol.m (descriptionForInstanceMethod): Don't dereference\n+\tinstance_methods if it's NULL.\n+\t(descriptionForClassMethod): Likewise for class_methods.\n+\n 2003-10-24  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* Makefile.in (runtime-info.h): Remove -Wp.\n@@ -36,14 +43,14 @@ Thu Jul 10 10:27:43 2003  Nicola Pero  <n.pero@mi.flashnet.it>\n \t(objc_msg_lookup): Similar fixes.\n \t(__objc_init_install_dtable): Lock the runtime before checking if the\n \ttable is installed.\n-\t\n+\n 2003-05-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* hash.c, init.c, libobjc.def, libobjc_entry.c, linking.m,\n \tmakefile.dos, misc.c, nil_method.c, objects.c, sarray.c,\n \tselector.c, sendmsg.c, thr-dce.c, thr-decosf1.c, thr-irix.c,\n \tthr-mach.c, thr-objc.c, thr-os2.c, thr-posix.c, thr-pthreads.c,\n-\tthr-rtems.c, thr-single.c, thr-solaris.c, thr-vxworks.c, \n+\tthr-rtems.c, thr-single.c, thr-solaris.c, thr-vxworks.c,\n \tthr-win32.c, thr.c: Replace \"GNU CC\" with \"GCC\".\n \t* Makefile.in, NXConstStr.m, Object.m, Protocol.m, archive.c,\n \tclass.c, encoding.c, gc.c, objc/NXConstStr.h, objc/Object.h,\n@@ -52,14 +59,14 @@ Thu Jul 10 10:27:43 2003  Nicola Pero  <n.pero@mi.flashnet.it>\n \tobjc/thr.h, objc/typedstream.h: Replace \"GNU CC\" with \"GCC\".\n \n Tue May 13 14:56:03 2003  Richard Frith-Macdonald <rfm@gnu.org>\n-\t                  Nicola Pero  <n.pero@mi.flashnet.it>\n+\t\t\t  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \tlibobjc/10742\n \t* init.c (class_superclass_of_class): New function.\n \t(create_tree_of_subclasses_inherited_from): Use it.\n \t(__objc_tree_insert_class): Likewise.\n \t(class_is_subclass_of_class): Likewise.\n-\t\n+\n 2003-04-11  David Chad  <davidc@freebsd.org>\n \t    Loren J. Rittle  <ljrittle@acm.org>\n "}, {"sha": "06a25acabbefdcc54f0658b772c49fdbac353677", "filename": "libobjc/Protocol.m", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d3baee1823eb2211f58f8f3e0e718e4f128f08/libobjc%2FProtocol.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d3baee1823eb2211f58f8f3e0e718e4f128f08/libobjc%2FProtocol.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FProtocol.m?ref=75d3baee1823eb2211f58f8f3e0e718e4f128f08", "patch": "@@ -80,11 +80,12 @@ - (struct objc_method_description *) descriptionForInstanceMethod:(SEL)aSel\n   const char* name = sel_get_name (aSel);\n   struct objc_method_description *result;\n \n-  for (i = 0; i < instance_methods->count; i++)\n-    {\n-      if (!strcmp ((char*)instance_methods->list[i].name, name))\n-\treturn &(instance_methods->list[i]);\n-    }\n+  if (instance_methods)\n+    for (i = 0; i < instance_methods->count; i++)\n+      {\n+\tif (!strcmp ((char*)instance_methods->list[i].name, name))\n+\t  return &(instance_methods->list[i]);\n+      }\n \n   for (proto_list = protocol_list; proto_list; proto_list = proto_list->next)\n     {\n@@ -107,11 +108,12 @@ - (struct objc_method_description *) descriptionForClassMethod:(SEL)aSel;\n   const char* name = sel_get_name (aSel);\n   struct objc_method_description *result;\n \n-  for (i = 0; i < class_methods->count; i++)\n-    {\n-      if (!strcmp ((char*)class_methods->list[i].name, name))\n-\treturn &(class_methods->list[i]);\n-    }\n+  if (class_methods)\n+    for (i = 0; i < class_methods->count; i++)\n+      {\n+\tif (!strcmp ((char*)class_methods->list[i].name, name))\n+\t  return &(class_methods->list[i]);\n+      }\n \n   for (proto_list = protocol_list; proto_list; proto_list = proto_list->next)\n     {"}]}