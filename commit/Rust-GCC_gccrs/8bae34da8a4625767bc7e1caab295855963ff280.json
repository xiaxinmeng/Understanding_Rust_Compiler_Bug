{"sha": "8bae34da8a4625767bc7e1caab295855963ff280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJhZTM0ZGE4YTQ2MjU3NjdiYzdlMWNhYWIyOTU4NTU5NjNmZjI4MA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-01-23T23:12:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-01-23T23:12:01Z"}, "message": "[multiple changes]\n\n2012-01-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/49829\n\tAdd libc++98convenience.la, libc++11convenience.la.\n\t* src/c++98: New directory.\n\t* src/c++11: New directory.\n\t* acinclude.m4: (GLIBCXX_CONFIGURE): Add src-c++98, src-c++11.\n\t* configure: Regenerated.\n\t* Makefile.am (hosted_source): Add src-c++98, src-c++11 to SUBDIRS.\n\t* Makefile.in: Regenerate.\n\t* libsupc++/Makefile.am (AM_CXXFLAGS): USe XTEMPLATE_FLAGS for\n\t-fno-implicit-templates.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* src/Makefile.am (inst_sources): Move... C++11 files into\n\tseparate directory for libstdc++11convenience.la. Files are:\n\tfstream-inst.cc, string-inst.cc, wlocale-inst.cc, wstring-inst.cc).\n\t(sources): Move C++11 files. Files are: compatibility-c++0x.cc,\n\tcompatibility-atomic-c++0x.cc, debug.cc, functexcept.cc,\n\tfunctional.cc, hash_c++0x.cc, hashtable_c++0x.cc, limits.cc,\n\tsystem_error.cc, placeholders.cc, regex.cc, shared_ptr.cc,\n\tmutex.cc, condition_variable.cc, chrono.cc, thread.cc, future.cc.\n\t(libstdc++convenience.la): Add new target.\n\t(SUBDIRS): Add c++11, c++98.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.am: New.\n\t* src/c++11/Makefile.in: Generate.\n\t* src/c++98/Makefile.am: New, C++98 files.\n\t* src/c++98/Makefile.in: Generate.\n\n2012-01-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/49829\n\tAdd libc++98convenience.la, libc++11convenience.la.\n\t* src/c++98: New directory.\n\t* src/c++11: New directory.\n\t* acinclude.m4: (GLIBCXX_CONFIGURE): Add src-c++98, src-c++11.\n\t* configure: Regenerated.\n\t* Makefile.am (hosted_source): Add src-c++98, src-c++11 to SUBDIRS.\n\t* Makefile.in: Regenerate.\n\t* libsupc++/Makefile.am (AM_CXXFLAGS): USe XTEMPLATE_FLAGS for\n\t-fno-implicit-templates.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* src/Makefile.am (inst_sources): Move... C++11 files into\n\tseparate directory for libstdc++11convenience.la. Files are:\n\tfstream-inst.cc, string-inst.cc, wlocale-inst.cc, wstring-inst.cc).\n\t(sources): Move C++11 files. Files are: compatibility-c++0x.cc,\n\tcompatibility-atomic-c++0x.cc, debug.cc, functexcept.cc,\n\tfunctional.cc, hash_c++0x.cc, hashtable_c++0x.cc, limits.cc,\n\tsystem_error.cc, placeholders.cc, regex.cc, shared_ptr.cc,\n\tmutex.cc, condition_variable.cc, chrono.cc, thread.cc, future.cc.\n\t(libstdc++convenience.la): Add new target.\n\t(SUBDIRS): Add c++11, c++98.\n\t* src/Makefile.in: Regenerate.\n\t* src/c++11/Makefile.am: New.\n\t* src/c++11/Makefile.in: Generate.\n\t* src/c++98/Makefile.am: New, C++98 files.\n\t* src/c++98/Makefile.in: Generate.\n\nFrom-SVN: r183457", "tree": {"sha": "200164266c0ab8f9433667f716a8c4d1276e8473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/200164266c0ab8f9433667f716a8c4d1276e8473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bae34da8a4625767bc7e1caab295855963ff280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bae34da8a4625767bc7e1caab295855963ff280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bae34da8a4625767bc7e1caab295855963ff280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bae34da8a4625767bc7e1caab295855963ff280/comments", "author": null, "committer": null, "parents": [{"sha": "22197246e3547e2838192d45b29b03761544588a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22197246e3547e2838192d45b29b03761544588a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22197246e3547e2838192d45b29b03761544588a"}], "stats": {"total": 2997, "additions": 2232, "deletions": 765}, "files": [{"sha": "8af54d8cc4ac1295c93a022150a4754203d4802c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -1,3 +1,32 @@\n+2012-01-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/49829\n+\tAdd libc++98convenience.la, libc++11convenience.la.\n+\t* src/c++98: New directory.\n+\t* src/c++11: New directory.\n+\t* acinclude.m4: (GLIBCXX_CONFIGURE): Add src-c++98, src-c++11.\n+\t* configure: Regenerated.\n+\t* Makefile.am (hosted_source): Add src-c++98, src-c++11 to SUBDIRS.\n+\t* Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.am (AM_CXXFLAGS): USe XTEMPLATE_FLAGS for\n+\t-fno-implicit-templates.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* src/Makefile.am (inst_sources): Move... C++11 files into\n+\tseparate directory for libstdc++11convenience.la. Files are:\n+\tfstream-inst.cc, string-inst.cc, wlocale-inst.cc, wstring-inst.cc).\n+\t(sources): Move C++11 files. Files are: compatibility-c++0x.cc,\n+\tcompatibility-atomic-c++0x.cc, debug.cc, functexcept.cc,\n+\tfunctional.cc, hash_c++0x.cc, hashtable_c++0x.cc, limits.cc,\n+\tsystem_error.cc, placeholders.cc, regex.cc, shared_ptr.cc,\n+\tmutex.cc, condition_variable.cc, chrono.cc, thread.cc, future.cc.\n+\t(libstdc++convenience.la): Add new target.\n+\t(SUBDIRS): Add c++11, c++98.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.am: New.\n+\t* src/c++11/Makefile.in: Generate.\n+\t* src/c++98/Makefile.am: New, C++98 files.\n+\t* src/c++98/Makefile.in: Generate.\n+\n 2012-01-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tlibstdc++-v3:"}, {"sha": "76ff04396eaee6db1c0db581a11ff70871b130fa", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -1,7 +1,7 @@\n ## Makefile for the toplevel directory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2009, 2010\n-## Free Software Foundation, Inc.\n+## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2009, 2010,\n+## 2012 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -24,7 +24,7 @@\n include $(top_srcdir)/fragment.am\n \n if GLIBCXX_HOSTED\n-  hosted_source = doc src po testsuite\n+  hosted_source = src doc po testsuite\n endif\n \n ## Keep this list sync'd with acinclude.m4:GLIBCXX_CONFIGURE."}, {"sha": "5657e38a511f70ea30ca57184a6fb32622439a29", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -91,7 +91,7 @@ AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n \t$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS\n ETAGS = etags\n CTAGS = ctags\n-DIST_SUBDIRS = include libsupc++ doc src po testsuite python\n+DIST_SUBDIRS = include libsupc++ src doc po testsuite python\n ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n@@ -160,7 +160,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -187,6 +186,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -299,7 +299,7 @@ WARN_CXXFLAGS = \\\n \n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n-@GLIBCXX_HOSTED_TRUE@hosted_source = doc src po testsuite\n+@GLIBCXX_HOSTED_TRUE@hosted_source = src doc po testsuite\n SUBDIRS = include libsupc++ $(hosted_source) python\n ACLOCAL_AMFLAGS = -I . -I .. -I ../config\n @BUILD_XML_FALSE@STAMP_XML = "}, {"sha": "529532e52601369e426735d1571f1c0bf6558bc6", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -49,7 +49,7 @@ AC_DEFUN([GLIBCXX_CONFIGURE], [\n   # Keep these sync'd with the list in Makefile.am.  The first provides an\n   # expandable list at autoconf time; the second provides an expandable list\n   # (i.e., shell variable) at configure time.\n-  m4_define([glibcxx_SUBDIRS],[include libsupc++ python src doc po testsuite])\n+  m4_define([glibcxx_SUBDIRS],[include libsupc++ python src src/c++98 src/c++11 doc po testsuite])\n   SUBDIRS='glibcxx_SUBDIRS'\n \n   # These need to be absolute paths, yet at the same time need to"}, {"sha": "51ecfd6536fa26c9efd20d56672108997483a3dd", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -561,7 +561,7 @@ PACKAGE_STRING='package-unused version-unused'\n PACKAGE_BUGREPORT=''\n PACKAGE_URL=''\n \n-ac_unique_file=\"src/ios.cc\"\n+ac_unique_file=\"src/shared/hashtable-aux.cc\"\n # Factoring default headers for most tests.\n ac_includes_default=\"\\\n #include <stdio.h>\n@@ -602,7 +602,7 @@ ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n-LIBSUPCXX_PICFLAGS\n+PIC_CXXFLAGS\n WARN_FLAGS\n OPTIMIZE_CXXFLAGS\n TOPLEVEL_INCLUDES\n@@ -4859,7 +4859,7 @@ $as_echo \"$ac_cv_path_EGREP\" >&6; }\n   # expandable list at autoconf time; the second provides an expandable list\n   # (i.e., shell variable) at configure time.\n \n-  SUBDIRS='include libsupc++ python src doc po testsuite'\n+  SUBDIRS='include libsupc++ python src src/c++98 src/c++11 doc po testsuite'\n \n   # These need to be absolute paths, yet at the same time need to\n   # canonicalize only relative paths, because then amd will not unmount\n@@ -66316,9 +66316,9 @@ $as_echo \"$gxx_include_dir\" >&6; }\n \n \n if test \"$enable_shared\" = yes; then\n-  LIBSUPCXX_PICFLAGS=\"-prefer-pic\"\n+  PIC_CXXFLAGS=\"-prefer-pic\"\n else\n-  LIBSUPCXX_PICFLAGS=\n+  PIC_CXXFLAGS=\n fi\n \n \n@@ -66337,7 +66337,7 @@ ac_config_files=\"$ac_config_files scripts/extract_symvers\"\n # append it here.  Only modify Makefiles that have just been created.\n #\n # Also, get rid of this simulated-VPATH thing that automake does.\n-ac_config_files=\"$ac_config_files include/Makefile libsupc++/Makefile python/Makefile src/Makefile doc/Makefile po/Makefile testsuite/Makefile\"\n+ac_config_files=\"$ac_config_files include/Makefile libsupc++/Makefile python/Makefile src/Makefile src/c++98/Makefile src/c++11/Makefile doc/Makefile po/Makefile testsuite/Makefile\"\n \n \n ac_config_commands=\"$ac_config_commands generate-headers\"\n@@ -67539,6 +67539,8 @@ do\n     \"libsupc++/Makefile\") CONFIG_FILES=\"$CONFIG_FILES libsupc++/Makefile\" ;;\n     \"python/Makefile\") CONFIG_FILES=\"$CONFIG_FILES python/Makefile\" ;;\n     \"src/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/Makefile\" ;;\n+    \"src/c++98/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/c++98/Makefile\" ;;\n+    \"src/c++11/Makefile\") CONFIG_FILES=\"$CONFIG_FILES src/c++11/Makefile\" ;;\n     \"doc/Makefile\") CONFIG_FILES=\"$CONFIG_FILES doc/Makefile\" ;;\n     \"po/Makefile\") CONFIG_FILES=\"$CONFIG_FILES po/Makefile\" ;;\n     \"testsuite/Makefile\") CONFIG_FILES=\"$CONFIG_FILES testsuite/Makefile\" ;;\n@@ -69354,6 +69356,28 @@ _EOF\n  ;;\n     \"src/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n+ ;;\n+    \"src/c++98/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n+ ;;\n+    \"src/c++11/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n    sed -f vpsed$$ $ac_file > tmp$$\n    mv tmp$$ $ac_file"}, {"sha": "c5f79011f1c54284051f992f080c30e379e4069a", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -2,7 +2,7 @@\n \n AC_PREREQ(2.64)\n AC_INIT(package-unused, version-unused,, libstdc++)\n-AC_CONFIG_SRCDIR(src/ios.cc)\n+AC_CONFIG_SRCDIR(src/shared/hashtable-aux.cc)\n AC_CONFIG_HEADER(config.h)\n \n # This works around the fact that libtool configuration may change LD\n@@ -419,11 +419,11 @@ GLIBCXX_EXPORT_INCLUDES\n GLIBCXX_EXPORT_FLAGS\n \n if test \"$enable_shared\" = yes; then\n-  LIBSUPCXX_PICFLAGS=\"-prefer-pic\"\n+  PIC_CXXFLAGS=\"-prefer-pic\"\n else\n-  LIBSUPCXX_PICFLAGS=\n+  PIC_CXXFLAGS=\n fi\n-AC_SUBST(LIBSUPCXX_PICFLAGS)\n+AC_SUBST(PIC_CXXFLAGS)\n \n dnl In autoconf 2.5x, AC_OUTPUT is replaced by four AC_CONFIG_* macros,\n dnl which can all be called multiple times as needed, plus one (different)"}, {"sha": "493cb3496d6102ea7757dae2c801f4312813fbdb", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -134,7 +134,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -161,6 +160,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@"}, {"sha": "c911bb1049ee737d2476bcb5ca441439a4ef5f51", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -134,7 +134,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -161,6 +160,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@"}, {"sha": "bee4353166757f57931b0bf9cbc89a6801581e3b", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -1,7 +1,7 @@\n ## Makefile for the GNU C++ Support library.\n ##\n ## Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,\n-## 2009, 2010, 2011\n+## 2009, 2010, 2011, 2012\n ## Free Software Foundation, Inc.\n ##\n ## Process this file with automake to produce Makefile.in.\n@@ -104,8 +104,8 @@ libsupc__convenience_la_SOURCES = $(sources) $(c_sources)\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it.\n AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_PICFLAGS) \\\n+\t$(PIC_CXXFLAGS) \\\n+\t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) \\\n \t$(OPTIMIZE_CXXFLAGS) \\\n \t$(CONFIG_CXXFLAGS)\n@@ -124,7 +124,7 @@ C_COMPILE = \\\n \n # LTCOMPILE is copied from LTCXXCOMPILE below.\n LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared $(LIBTOOLFLAGS) --mode=compile \\\n-\t    $(CC) $(DEFS) $(C_INCLUDES) $(LIBSUPCXX_PICFLAGS) \\\n+\t    $(CC) $(DEFS) $(C_INCLUDES) $(PIC_CXXFLAGS) \\\n             $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n \n cp-demangle.c:"}, {"sha": "0cb4846aaba4f9d28f6b3cd6f8a0ea0affd445b8", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -194,7 +194,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -221,6 +220,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -410,8 +410,8 @@ libsupc__convenience_la_SOURCES = $(sources) $(c_sources)\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it.\n AM_CXXFLAGS = \\\n-\t-fno-implicit-templates \\\n-\t$(LIBSUPCXX_PICFLAGS) \\\n+\t$(PIC_CXXFLAGS) \\\n+\t$(XTEMPLATE_FLAGS) \\\n \t$(WARN_CXXFLAGS) \\\n \t$(OPTIMIZE_CXXFLAGS) \\\n \t$(CONFIG_CXXFLAGS)\n@@ -431,7 +431,7 @@ C_COMPILE = \\\n \n # LTCOMPILE is copied from LTCXXCOMPILE below.\n LTCOMPILE = $(LIBTOOL) --tag CC --tag disable-shared $(LIBTOOLFLAGS) --mode=compile \\\n-\t    $(CC) $(DEFS) $(C_INCLUDES) $(LIBSUPCXX_PICFLAGS) \\\n+\t    $(CC) $(DEFS) $(C_INCLUDES) $(PIC_CXXFLAGS) \\\n             $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n \n "}, {"sha": "69528357cb5a61887ac6e73ba56dd40c2bf69641", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -134,7 +134,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -161,6 +160,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@"}, {"sha": "20d7417fee9e0be06d3c59e8c64d99cbf56e8279", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -158,7 +158,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -185,6 +184,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@"}, {"sha": "aa25a7e5ca8f83487e1a0d181177415b0fe1ad89", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 87, "deletions": 357, "changes": 444, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -1,7 +1,7 @@\n-## Makefile for the src subdirectory of the GNU C++ Standard library.\n+## Makefile for the C++11 sources of the GNU C++ Standard library.\n ##\n ## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-## 2006, 2007, 2008, 2009, 2010, 2011\n+## 2006, 2007, 2008, 2009, 2010, 2011, 2012\n ## Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n@@ -24,9 +24,80 @@\n \n include $(top_srcdir)/fragment.am\n \n+SUBDIRS = c++98 c++11\n+\n # Cross compiler support.\n toolexeclib_LTLIBRARIES = libstdc++.la\n \n+vpath % $(top_srcdir)/src\n+vpath % $(top_srcdir)\n+\n+libstdc___la_SOURCES =\n+\n+libstdc___la_LIBADD = \\\n+\t$(GLIBCXX_LIBS) \\\n+\t$(top_builddir)/libsupc++/libsupc++convenience.la \\\n+\t$(top_builddir)/src/c++98/libc++98convenience.la \\\n+\t$(top_builddir)/src/c++11/libc++11convenience.la\n+\n+libstdc___la_DEPENDENCIES = \\\n+\t${version_dep} \\\n+\t$(top_builddir)/libsupc++/libsupc++convenience.la \\\n+\t$(top_builddir)/src/c++98/libc++98convenience.la \\\n+\t$(top_builddir)/src/c++11/libc++11convenience.la\n+\n+libstdc___la_LDFLAGS = \\\n+\t-version-info $(libtool_VERSION) ${version_arg} -lm\n+\n+libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)\n+\n+\n+# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# modified in a per-library or per-sub-library way.  Need to manually\n+# set this option because CONFIG_CXXFLAGS has to be after\n+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n+# as the occasion calls for it.\n+AM_CXXFLAGS = \\\n+\t$(XTEMPLATE_FLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS)\n+\n+\n+# libstdc++ libtool notes\n+\n+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n+\n+# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# using the C++ compiler, because that will enable the settings\n+# detected when C++ support was being configured.  However, when no\n+# such flag is given in the command line, libtool attempts to figure\n+# it out by matching the compiler name in each configuration section\n+# against a prefix of the command line.  The problem is that, if the\n+# compiler name and its initial flags stored in the libtool\n+# configuration file don't match those in the command line, libtool\n+# can't decide which configuration to use, and it gives up.  The\n+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n+# attempt to infer which configuration to use\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX \\\n+\t       $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n+\t       $(CXX) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n+\t       $(AM_CXXFLAGS) $(CXXFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n+# 3) We'd have a problem when building the shared libstdc++ object if\n+# the rules automake generates would be used.  We cannot allow g++ to\n+# be used since this would add -lstdc++ to the link line which of\n+# course is problematic at this point.  So, we get the top-level\n+# directory to configure libstdc++-v3 to use gcc as the C++\n+# compilation driver.\n+CXXLINK = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n+\t  $(CXX) $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n+\n # Symbol versioning for shared libraries.\n if ENABLE_SYMVERS\n libstdc++-symbols.ver:  ${glibcxx_srcdir}/$(SYMVER_FILE) \\\n@@ -97,367 +168,26 @@ version_arg =\n version_dep =\n endif\n \n-\n-# Source files linked in via configuration/make substitution for a\n-# particular host.\n-host_sources = \\\n-\tatomicity.cc \\\n-\tcodecvt_members.cc \\\n-\tcollate_members.cc \\\n-\tctype_configure_char.cc \\\n-\tctype_members.cc \\\n-\tmessages_members.cc \\\n-\tmonetary_members.cc \\\n-\tnumeric_members.cc \\\n-\ttime_members.cc\n-\n-codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCODECVT_CC) . || true\n-\n-collate_members.cc: ${glibcxx_srcdir}/$(CCOLLATE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCOLLATE_CC) . || true\n-\n-ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n-\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n-\n-ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n-\n-messages_members.cc: ${glibcxx_srcdir}/$(CMESSAGES_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_CC) . || true\n-\n-monetary_members.cc: ${glibcxx_srcdir}/$(CMONEY_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CMONEY_CC) . || true\n-\n-numeric_members.cc: ${glibcxx_srcdir}/$(CNUMERIC_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CNUMERIC_CC) . || true\n-\n-time_members.cc: ${glibcxx_srcdir}/$(CTIME_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CTIME_CC) . || true\n-\n-atomicity_file = ${glibcxx_srcdir}/$(ATOMICITY_SRCDIR)/atomicity.h\n-atomicity.cc: ${atomicity_file}\n-\t$(LN_S) ${atomicity_file} ./atomicity.cc || true\n-\n-# Source files linked in via configuration/make substitution for a\n-# particular host, but with ad hoc naming rules.\n-host_sources_extra = \\\n-\tbasic_file.cc c++locale.cc \\\n-\t${inst_sources} ${ldbl_compat_sources} ${parallel_sources}\n-\n-c++locale.cc: ${glibcxx_srcdir}/$(CLOCALE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CLOCALE_CC) ./$@ || true\n-\n-basic_file.cc: ${glibcxx_srcdir}/$(BASIC_FILE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(BASIC_FILE_CC) ./$@ || true\n-\n-if ENABLE_PARALLEL\n-parallel_sources = parallel_settings.cc \\\n-\t\t   compatibility-parallel_list.cc \\\n-\t\t   compatibility-parallel_list-2.cc\n-else\n-parallel_sources =\n-endif\n-\n-if GLIBCXX_LDBL_COMPAT\n-ldbl_compat_sources = compatibility-ldbl.cc\n-else\n-ldbl_compat_sources =\n-endif\n-\n-if ENABLE_EXTERN_TEMPLATE\n-XTEMPLATE_FLAGS = -fno-implicit-templates\n-inst_sources = \\\n-\tallocator-inst.cc \\\n-\tconcept-inst.cc \\\n-\text-inst.cc \\\n-\tfstream-inst.cc \\\n-\tios-inst.cc \\\n-\tiostream-inst.cc \\\n-\tistream-inst.cc \\\n-\tlocale-inst.cc \\\n-\tmisc-inst.cc \\\n-\tostream-inst.cc \\\n-\tsstream-inst.cc \\\n-\tstreambuf-inst.cc \\\n-\tstring-inst.cc \\\n-\twlocale-inst.cc \\\n-\twstring-inst.cc\n-else\n-XTEMPLATE_FLAGS =\n-inst_sources =\n-endif\n-\n-# Sources present in the src directory, always present.\n-sources = \\\n-\tbitmap_allocator.cc \\\n-\tpool_allocator.cc \\\n-\tmt_allocator.cc \\\n-\tcodecvt.cc \\\n-\tcompatibility.cc \\\n-\tcompatibility-c++0x.cc \\\n-\tcompatibility-atomic-c++0x.cc \\\n-\tcompatibility-debug_list.cc \\\n-\tcompatibility-debug_list-2.cc \\\n-\tcompatibility-list.cc \\\n-\tcompatibility-list-2.cc \\\n-\tcomplex_io.cc \\\n-\tctype.cc \\\n-\tdebug.cc \\\n-\tfunctexcept.cc \\\n-\tfunctional.cc \\\n-\tglobals_io.cc \\\n-\thash_c++0x.cc \\\n-\thash_tr1.cc \\\n-\thashtable_c++0x.cc \\\n-\thashtable_tr1.cc \\\n-\tios.cc \\\n-\tios_failure.cc \\\n-\tios_init.cc \\\n-\tios_locale.cc \\\n-\tlimits.cc \\\n-\tlist.cc \\\n-\tlocale.cc \\\n-\tlocale_init.cc \\\n-\tlocale_facets.cc \\\n-\tlocalename.cc \\\n-\tmath_stubs_float.cc \\\n-\tmath_stubs_long_double.cc \\\n-\tstdexcept.cc \\\n-\tstrstream.cc \\\n-\tsystem_error.cc \\\n-\ttree.cc \\\n-\tistream.cc \\\n-\tplaceholders.cc \\\n-\tregex.cc \\\n-\tshared_ptr.cc \\\n-\tstreambuf.cc \\\n-\tmutex.cc \\\n-\tcondition_variable.cc \\\n-\tchrono.cc \\\n-\tthread.cc \\\n-\tfuture.cc \\\n-\tvalarray.cc \\\n-\t${host_sources} \\\n-\t${host_sources_extra}\n-\n-vpath % $(top_srcdir)/src\n-vpath % $(top_srcdir)\n-\n-libstdc___la_SOURCES = $(sources)\n-\n-libstdc___la_LIBADD = \\\n-\t$(GLIBCXX_LIBS) \\\n-\t$(top_builddir)/libsupc++/libsupc++convenience.la\n-\n-libstdc___la_DEPENDENCIES = \\\n-\t${version_dep} \\\n-\t$(top_builddir)/libsupc++/libsupc++convenience.la\n-\n-libstdc___la_LDFLAGS = \\\n-\t-version-info $(libtool_VERSION) ${version_arg} -lm\n-\n-libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)\n-\n-# Use special rules for the deprecated source files so that they find\n-# deprecated include files.\n-GLIBCXX_INCLUDE_DIR=$(glibcxx_builddir)/include\n-strstream.lo: strstream.cc\n-\t$(LTCXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n-strstream.o: strstream.cc\n-\t$(CXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n-\n-# Use special rules for the concept-checking instantiations so that all\n-# the generated template functions are also instantiated.  Force the checks\n-# to be on so that the instantiations are actually seen.\n-concept-inst.lo: concept-inst.cc\n-\t$(LTCXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n-concept-inst.o: concept-inst.cc\n-\t$(CXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n-\n-# Use special rules for parallel mode compilation.\n-PARALLEL_FLAGS = -fopenmp -D_GLIBCXX_PARALLEL -I$(glibcxx_builddir)/../libgomp\n-parallel_settings.lo: parallel_settings.cc\n-\t$(LTCXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n-parallel_settings.o: parallel_settings.cc\n-\t$(CXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n-\n-compatibility-parallel_list.lo: compatibility-parallel_list.cc\n-\t$(LTCXXCOMPILE) -c $<\n-compatibility-parallel_list.o: compatibility-parallel_list.cc\n-\t$(CXXCOMPILE) -c $<\n-\n-compatibility-parallel_list-2.lo: compatibility-parallel_list-2.cc\n-\t$(LTCXXCOMPILE) -c $<\n-compatibility-parallel_list-2.o: compatibility-parallel_list-2.cc\n-\t$(CXXCOMPILE) -c $<\n-\n-# Use special rules for the C++0x sources so that the proper flags are passed.\n-functexcept.lo: functexcept.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-functexcept.o: functexcept.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-shared_ptr.lo: shared_ptr.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-shared_ptr.o: shared_ptr.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-system_error.lo: system_error.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-system_error.o: system_error.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-mutex.lo: mutex.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-mutex.o: mutex.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-condition_variable.lo: condition_variable.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-condition_variable.o: condition_variable.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-compatibility-c++0x.lo: compatibility-c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-compatibility-c++0x.o: compatibility-c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-compatibility-atomic-c++0x.lo: compatibility-atomic-c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-compatibility-atomic-c++0x.o: compatibility-atomic-c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-functional.lo: functional.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-functional.o: functional.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-hash_c++0x.lo: hash_c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-hash_c++0x.o: hash_c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-hashtable_c++0x.lo: hashtable_c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-hashtable_c++0x.o: hashtable_c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-limits.lo: limits.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-limits.o: limits.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-fstream-inst.lo: fstream-inst.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-fstream-inst.o: fstream-inst.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-string-inst.lo: string-inst.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-string-inst.o: string-inst.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-wstring-inst.lo: wstring-inst.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-wstring-inst.o: wstring-inst.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-chrono.lo: chrono.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-chrono.o: chrono.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-thread.lo: thread.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-thread.o: thread.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-future.lo: future.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-future.o: future.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-regex.lo: regex.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-regex.o: regex.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-debug.lo: debug.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-debug.o: debug.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-placeholders.lo: placeholders.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-placeholders.o: placeholders.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-if GLIBCXX_LDBL_COMPAT\n-# Use special rules for compatibility-ldbl.cc compilation, as we need to\n-# pass -mlong-double-64.\n-compatibility-ldbl.lo: compatibility-ldbl.cc\n-\t$(LTCXXCOMPILE) -mlong-double-64 -c $<\n-compatibility-ldbl.o: compatibility-ldbl.cc\n-\t$(CXXCOMPILE) -mlong-double-64 -c $<\n-endif\n-\n-# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n-# modified in a per-library or per-sub-library way.  Need to manually\n-# set this option because CONFIG_CXXFLAGS has to be after\n-# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n-# as the occasion calls for it.\n-AM_CXXFLAGS = \\\n-\t$(XTEMPLATE_FLAGS) \\\n-\t$(WARN_CXXFLAGS) \\\n-\t$(OPTIMIZE_CXXFLAGS) \\\n-\t$(CONFIG_CXXFLAGS)\n-\n-\n-# libstdc++ libtool notes\n-\n-# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n-# last. (That way, things like -O2 passed down from the toplevel can\n-# be overridden by --enable-debug.)\n-\n-# 2) In general, libtool expects an argument such as `--tag=CXX' when\n-# using the C++ compiler, because that will enable the settings\n-# detected when C++ support was being configured.  However, when no\n-# such flag is given in the command line, libtool attempts to figure\n-# it out by matching the compiler name in each configuration section\n-# against a prefix of the command line.  The problem is that, if the\n-# compiler name and its initial flags stored in the libtool\n-# configuration file don't match those in the command line, libtool\n-# can't decide which configuration to use, and it gives up.  The\n-# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n-# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n-# attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX \\\n-\t       $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile \\\n-\t       $(CXX) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n-\t       $(AM_CXXFLAGS) $(CXXFLAGS)\n-\n-LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n-\n-# 3) We'd have a problem when building the shared libstdc++ object if\n-# the rules automake generates would be used.  We cannot allow g++ to\n-# be used since this would add -lstdc++ to the link line which of\n-# course is problematic at this point.  So, we get the top-level\n-# directory to configure libstdc++-v3 to use gcc as the C++\n-# compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n-\t  $(CXX) $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n-\n-\n-# Added bits to build debug library.\n+# Added rules.\n+# 1 debug library\n+# 2 supra-convenience library\n if GLIBCXX_BUILD_DEBUG\n-all-local: build_debug\n+all-local: libstdc++convenience.la build_debug\n install-data-local: install_debug\n else\n-all-local:\n+all-local: libstdc++convenience.la\n install-data-local:\n endif\n \n+# Make a non-installed convenience library, so that --disable-static\n+# may work.\n+libstdc++convenience.la: $(toolexeclib_LTLIBRARIES)\n+\t$(CXXLINK) $(libstdc___la_LIBADD) $(LIBS); \\\n+\tif test ! -f .libs/libstdc++.a; then \\\n+\t  $(LN_S) .libs/libstdc++convenience.a .libs/libstdc++.a; \\\n+\t  stamp-libstdc++convenience; \\\n+\tfi;\n+\n debugdir = debug\n \n # Build a set of debug objects here."}, {"sha": "92322c0e19000266b7e328b7729355479f8ef575", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 180, "deletions": 376, "changes": 556, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -88,48 +88,35 @@ am__base_list = \\\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n-am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \\\n-\tctype_configure_char.lo ctype_members.lo messages_members.lo \\\n-\tmonetary_members.lo numeric_members.lo time_members.lo\n-@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_2 = allocator-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tconcept-inst.lo ext-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tfstream-inst.lo ios-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tiostream-inst.lo istream-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tlocale-inst.lo misc-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tostream-inst.lo sstream-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tstreambuf-inst.lo string-inst.lo \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\twlocale-inst.lo wstring-inst.lo\n-@GLIBCXX_LDBL_COMPAT_TRUE@am__objects_3 = compatibility-ldbl.lo\n-@ENABLE_PARALLEL_TRUE@am__objects_4 = parallel_settings.lo \\\n-@ENABLE_PARALLEL_TRUE@\tcompatibility-parallel_list.lo \\\n-@ENABLE_PARALLEL_TRUE@\tcompatibility-parallel_list-2.lo\n-am__objects_5 = basic_file.lo c++locale.lo $(am__objects_2) \\\n-\t$(am__objects_3) $(am__objects_4)\n-am__objects_6 = bitmap_allocator.lo pool_allocator.lo mt_allocator.lo \\\n-\tcodecvt.lo compatibility.lo compatibility-c++0x.lo \\\n-\tcompatibility-atomic-c++0x.lo compatibility-debug_list.lo \\\n-\tcompatibility-debug_list-2.lo compatibility-list.lo \\\n-\tcompatibility-list-2.lo complex_io.lo ctype.lo debug.lo \\\n-\tfunctexcept.lo functional.lo globals_io.lo hash_c++0x.lo \\\n-\thash_tr1.lo hashtable_c++0x.lo hashtable_tr1.lo ios.lo \\\n-\tios_failure.lo ios_init.lo ios_locale.lo limits.lo list.lo \\\n-\tlocale.lo locale_init.lo locale_facets.lo localename.lo \\\n-\tmath_stubs_float.lo math_stubs_long_double.lo stdexcept.lo \\\n-\tstrstream.lo system_error.lo tree.lo istream.lo \\\n-\tplaceholders.lo regex.lo shared_ptr.lo streambuf.lo mutex.lo \\\n-\tcondition_variable.lo chrono.lo thread.lo future.lo \\\n-\tvalarray.lo $(am__objects_1) $(am__objects_5)\n-am_libstdc___la_OBJECTS = $(am__objects_6)\n+am_libstdc___la_OBJECTS =\n libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)\n DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n depcomp =\n am__depfiles_maybe =\n-CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n-\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n-CXXLD = $(CXX)\n+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CCLD = $(CC)\n+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n+\t$(LDFLAGS) -o $@\n SOURCES = $(libstdc___la_SOURCES)\n+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n+\thtml-recursive info-recursive install-data-recursive \\\n+\tinstall-dvi-recursive install-exec-recursive \\\n+\tinstall-html-recursive install-info-recursive \\\n+\tinstall-pdf-recursive install-ps-recursive install-recursive \\\n+\tinstallcheck-recursive installdirs-recursive pdf-recursive \\\n+\tps-recursive uninstall-recursive\n+RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n+  distclean-recursive maintainer-clean-recursive\n+AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n+\t$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS\n ETAGS = etags\n CTAGS = ctags\n+DIST_SUBDIRS = $(SUBDIRS)\n ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n ACLOCAL = @ACLOCAL@\n ALLOCATOR_H = @ALLOCATOR_H@\n@@ -198,7 +185,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -225,6 +211,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n@@ -337,146 +324,28 @@ WARN_CXXFLAGS = \\\n \n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n+SUBDIRS = c++98 c++11\n \n # Cross compiler support.\n toolexeclib_LTLIBRARIES = libstdc++.la\n-@ENABLE_SYMVERS_TRUE@CLEANFILES = libstdc++-symbols.ver $(version_dep)\n-@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-exported_symbols_list,libstdc++-symbols.explist\n-@ENABLE_SYMVERS_FALSE@version_arg = \n-@ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n-@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n-@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script,libstdc++-symbols.ver-sol2\n-@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-M,libstdc++-symbols.ver-sun\n-@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.explist\n-@ENABLE_SYMVERS_FALSE@version_dep = \n-@ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n-@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n-@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sol2\n-@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sun\n-\n-# Source files linked in via configuration/make substitution for a\n-# particular host.\n-host_sources = \\\n-\tatomicity.cc \\\n-\tcodecvt_members.cc \\\n-\tcollate_members.cc \\\n-\tctype_configure_char.cc \\\n-\tctype_members.cc \\\n-\tmessages_members.cc \\\n-\tmonetary_members.cc \\\n-\tnumeric_members.cc \\\n-\ttime_members.cc\n-\n-atomicity_file = ${glibcxx_srcdir}/$(ATOMICITY_SRCDIR)/atomicity.h\n-\n-# Source files linked in via configuration/make substitution for a\n-# particular host, but with ad hoc naming rules.\n-host_sources_extra = \\\n-\tbasic_file.cc c++locale.cc \\\n-\t${inst_sources} ${ldbl_compat_sources} ${parallel_sources}\n-\n-@ENABLE_PARALLEL_FALSE@parallel_sources = \n-@ENABLE_PARALLEL_TRUE@parallel_sources = parallel_settings.cc \\\n-@ENABLE_PARALLEL_TRUE@\t\t   compatibility-parallel_list.cc \\\n-@ENABLE_PARALLEL_TRUE@\t\t   compatibility-parallel_list-2.cc\n-\n-@GLIBCXX_LDBL_COMPAT_FALSE@ldbl_compat_sources = \n-@GLIBCXX_LDBL_COMPAT_TRUE@ldbl_compat_sources = compatibility-ldbl.cc\n-@ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n-@ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n-@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources = \n-@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources = \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tallocator-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tconcept-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\text-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tfstream-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tios-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tiostream-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tistream-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tlocale-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tmisc-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tostream-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tsstream-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tstreambuf-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\tstring-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\twlocale-inst.cc \\\n-@ENABLE_EXTERN_TEMPLATE_TRUE@\twstring-inst.cc\n-\n-\n-# Sources present in the src directory, always present.\n-sources = \\\n-\tbitmap_allocator.cc \\\n-\tpool_allocator.cc \\\n-\tmt_allocator.cc \\\n-\tcodecvt.cc \\\n-\tcompatibility.cc \\\n-\tcompatibility-c++0x.cc \\\n-\tcompatibility-atomic-c++0x.cc \\\n-\tcompatibility-debug_list.cc \\\n-\tcompatibility-debug_list-2.cc \\\n-\tcompatibility-list.cc \\\n-\tcompatibility-list-2.cc \\\n-\tcomplex_io.cc \\\n-\tctype.cc \\\n-\tdebug.cc \\\n-\tfunctexcept.cc \\\n-\tfunctional.cc \\\n-\tglobals_io.cc \\\n-\thash_c++0x.cc \\\n-\thash_tr1.cc \\\n-\thashtable_c++0x.cc \\\n-\thashtable_tr1.cc \\\n-\tios.cc \\\n-\tios_failure.cc \\\n-\tios_init.cc \\\n-\tios_locale.cc \\\n-\tlimits.cc \\\n-\tlist.cc \\\n-\tlocale.cc \\\n-\tlocale_init.cc \\\n-\tlocale_facets.cc \\\n-\tlocalename.cc \\\n-\tmath_stubs_float.cc \\\n-\tmath_stubs_long_double.cc \\\n-\tstdexcept.cc \\\n-\tstrstream.cc \\\n-\tsystem_error.cc \\\n-\ttree.cc \\\n-\tistream.cc \\\n-\tplaceholders.cc \\\n-\tregex.cc \\\n-\tshared_ptr.cc \\\n-\tstreambuf.cc \\\n-\tmutex.cc \\\n-\tcondition_variable.cc \\\n-\tchrono.cc \\\n-\tthread.cc \\\n-\tfuture.cc \\\n-\tvalarray.cc \\\n-\t${host_sources} \\\n-\t${host_sources_extra}\n-\n-libstdc___la_SOURCES = $(sources)\n+libstdc___la_SOURCES = \n libstdc___la_LIBADD = \\\n \t$(GLIBCXX_LIBS) \\\n-\t$(top_builddir)/libsupc++/libsupc++convenience.la\n+\t$(top_builddir)/libsupc++/libsupc++convenience.la \\\n+\t$(top_builddir)/src/c++98/libc++98convenience.la \\\n+\t$(top_builddir)/src/c++11/libc++11convenience.la\n \n libstdc___la_DEPENDENCIES = \\\n \t${version_dep} \\\n-\t$(top_builddir)/libsupc++/libsupc++convenience.la\n+\t$(top_builddir)/libsupc++/libsupc++convenience.la \\\n+\t$(top_builddir)/src/c++98/libc++98convenience.la \\\n+\t$(top_builddir)/src/c++11/libc++11convenience.la\n \n libstdc___la_LDFLAGS = \\\n \t-version-info $(libtool_VERSION) ${version_arg} -lm\n \n libstdc___la_LINK = $(CXXLINK) $(libstdc___la_LDFLAGS)\n \n-# Use special rules for the deprecated source files so that they find\n-# deprecated include files.\n-GLIBCXX_INCLUDE_DIR = $(glibcxx_builddir)/include\n-\n-# Use special rules for parallel mode compilation.\n-PARALLEL_FLAGS = -fopenmp -D_GLIBCXX_PARALLEL -I$(glibcxx_builddir)/../libgomp\n-\n # AM_CXXFLAGS needs to be in each subdirectory so that it can be\n # modified in a per-library or per-sub-library way.  Need to manually\n # set this option because CONFIG_CXXFLAGS has to be after\n@@ -523,11 +392,23 @@ LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n CXXLINK = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n \t  $(CXX) $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n \n+@ENABLE_SYMVERS_TRUE@CLEANFILES = libstdc++-symbols.ver $(version_dep)\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-exported_symbols_list,libstdc++-symbols.explist\n+@ENABLE_SYMVERS_FALSE@version_arg = \n+@ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script,libstdc++-symbols.ver-sol2\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-M,libstdc++-symbols.ver-sun\n+@ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.explist\n+@ENABLE_SYMVERS_FALSE@version_dep = \n+@ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sol2\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sun\n debugdir = debug\n-all: all-am\n+all: all-recursive\n \n .SUFFIXES:\n-.SUFFIXES: .cc .lo .o .obj\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)\n \t@for dep in $?; do \\\n \t  case '$(am__configure_deps)' in \\\n@@ -598,21 +479,82 @@ mostlyclean-compile:\n distclean-compile:\n \t-rm -f *.tab.c\n \n-.cc.o:\n-\t$(CXXCOMPILE) -c -o $@ $<\n-\n-.cc.obj:\n-\t$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n-\n-.cc.lo:\n-\t$(LTCXXCOMPILE) -c -o $@ $<\n-\n mostlyclean-libtool:\n \t-rm -f *.lo\n \n clean-libtool:\n \t-rm -rf .libs _libs\n \n+# This directory's subdirectories are mostly independent; you can cd\n+# into them and run `make' without going through this Makefile.\n+# To change the values of `make' variables: instead of editing Makefiles,\n+# (1) if the variable is set in `config.status', edit `config.status'\n+#     (which will cause the Makefiles to be regenerated when you run `make');\n+# (2) otherwise, pass the desired values on the `make' command line.\n+$(RECURSIVE_TARGETS):\n+\t@fail= failcom='exit 1'; \\\n+\tfor f in x $$MAKEFLAGS; do \\\n+\t  case $$f in \\\n+\t    *=* | --[!k]*);; \\\n+\t    *k*) failcom='fail=yes';; \\\n+\t  esac; \\\n+\tdone; \\\n+\tdot_seen=no; \\\n+\ttarget=`echo $@ | sed s/-recursive//`; \\\n+\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n+\t  echo \"Making $$target in $$subdir\"; \\\n+\t  if test \"$$subdir\" = \".\"; then \\\n+\t    dot_seen=yes; \\\n+\t    local_target=\"$$target-am\"; \\\n+\t  else \\\n+\t    local_target=\"$$target\"; \\\n+\t  fi; \\\n+\t  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n+\t  || eval $$failcom; \\\n+\tdone; \\\n+\tif test \"$$dot_seen\" = \"no\"; then \\\n+\t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n+\tfi; test -z \"$$fail\"\n+\n+$(RECURSIVE_CLEAN_TARGETS):\n+\t@fail= failcom='exit 1'; \\\n+\tfor f in x $$MAKEFLAGS; do \\\n+\t  case $$f in \\\n+\t    *=* | --[!k]*);; \\\n+\t    *k*) failcom='fail=yes';; \\\n+\t  esac; \\\n+\tdone; \\\n+\tdot_seen=no; \\\n+\tcase \"$@\" in \\\n+\t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n+\t  *) list='$(SUBDIRS)' ;; \\\n+\tesac; \\\n+\trev=''; for subdir in $$list; do \\\n+\t  if test \"$$subdir\" = \".\"; then :; else \\\n+\t    rev=\"$$subdir $$rev\"; \\\n+\t  fi; \\\n+\tdone; \\\n+\trev=\"$$rev .\"; \\\n+\ttarget=`echo $@ | sed s/-recursive//`; \\\n+\tfor subdir in $$rev; do \\\n+\t  echo \"Making $$target in $$subdir\"; \\\n+\t  if test \"$$subdir\" = \".\"; then \\\n+\t    local_target=\"$$target-am\"; \\\n+\t  else \\\n+\t    local_target=\"$$target\"; \\\n+\t  fi; \\\n+\t  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n+\t  || eval $$failcom; \\\n+\tdone && test -z \"$$fail\"\n+tags-recursive:\n+\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n+\t  test \"$$subdir\" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \\\n+\tdone\n+ctags-recursive:\n+\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n+\t  test \"$$subdir\" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \\\n+\tdone\n+\n ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n \tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n \tunique=`for i in $$list; do \\\n@@ -623,10 +565,23 @@ ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n \tmkid -fID $$unique\n tags: TAGS\n \n-TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n \t\t$(TAGS_FILES) $(LISP)\n \tset x; \\\n \there=`pwd`; \\\n+\tif ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \\\n+\t  include_option=--etags-include; \\\n+\t  empty_fix=.; \\\n+\telse \\\n+\t  include_option=--include; \\\n+\t  empty_fix=; \\\n+\tfi; \\\n+\tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n+\t  if test \"$$subdir\" = .; then :; else \\\n+\t    test ! -f $$subdir/TAGS || \\\n+\t      set \"$$@\" \"$$include_option=$$here/$$subdir/TAGS\"; \\\n+\t  fi; \\\n+\tdone; \\\n \tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n \tunique=`for i in $$list; do \\\n \t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n@@ -645,7 +600,7 @@ TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n \t  fi; \\\n \tfi\n ctags: CTAGS\n-CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n \t\t$(TAGS_FILES) $(LISP)\n \tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n \tunique=`for i in $$list; do \\\n@@ -665,21 +620,22 @@ GTAGS:\n distclean-tags:\n \t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n check-am: all-am\n-check: check-am\n+check: check-recursive\n all-am: Makefile $(LTLIBRARIES) all-local\n-installdirs:\n+installdirs: installdirs-recursive\n+installdirs-am:\n \tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n \t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n \tdone\n-install: install-am\n-install-exec: install-exec-am\n-install-data: install-data-am\n-uninstall: uninstall-am\n+install: install-recursive\n+install-exec: install-exec-recursive\n+install-data: install-data-recursive\n+uninstall: uninstall-recursive\n \n install-am: all-am\n \t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n \n-installcheck: installcheck-am\n+installcheck: installcheck-recursive\n install-strip:\n \t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n \t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n@@ -697,93 +653,99 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n-clean: clean-am\n+clean: clean-recursive\n \n clean-am: clean-generic clean-libtool clean-toolexeclibLTLIBRARIES \\\n \tmostlyclean-am\n \n-distclean: distclean-am\n+distclean: distclean-recursive\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-tags\n \n-dvi: dvi-am\n+dvi: dvi-recursive\n \n dvi-am:\n \n-html: html-am\n+html: html-recursive\n \n html-am:\n \n-info: info-am\n+info: info-recursive\n \n info-am:\n \n install-data-am: install-data-local\n \n-install-dvi: install-dvi-am\n+install-dvi: install-dvi-recursive\n \n install-dvi-am:\n \n install-exec-am: install-toolexeclibLTLIBRARIES\n \n-install-html: install-html-am\n+install-html: install-html-recursive\n \n install-html-am:\n \n-install-info: install-info-am\n+install-info: install-info-recursive\n \n install-info-am:\n \n install-man:\n \n-install-pdf: install-pdf-am\n+install-pdf: install-pdf-recursive\n \n install-pdf-am:\n \n-install-ps: install-ps-am\n+install-ps: install-ps-recursive\n \n install-ps-am:\n \n installcheck-am:\n \n-maintainer-clean: maintainer-clean-am\n+maintainer-clean: maintainer-clean-recursive\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n \n-mostlyclean: mostlyclean-am\n+mostlyclean: mostlyclean-recursive\n \n mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n \tmostlyclean-libtool\n \n-pdf: pdf-am\n+pdf: pdf-recursive\n \n pdf-am:\n \n-ps: ps-am\n+ps: ps-recursive\n \n ps-am:\n \n uninstall-am: uninstall-toolexeclibLTLIBRARIES\n \n-.MAKE: install-am install-strip\n+.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \\\n+\tinstall-am install-strip tags-recursive\n \n-.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \\\n-\tclean-generic clean-libtool clean-toolexeclibLTLIBRARIES ctags \\\n-\tdistclean distclean-compile distclean-generic \\\n+.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \\\n+\tall all-am all-local check check-am clean clean-generic \\\n+\tclean-libtool clean-toolexeclibLTLIBRARIES ctags \\\n+\tctags-recursive distclean distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-tags dvi dvi-am html html-am info \\\n \tinfo-am install install-am install-data install-data-am \\\n \tinstall-data-local install-dvi install-dvi-am install-exec \\\n \tinstall-exec-am install-html install-html-am install-info \\\n \tinstall-info-am install-man install-pdf install-pdf-am \\\n \tinstall-ps install-ps-am install-strip \\\n \tinstall-toolexeclibLTLIBRARIES installcheck installcheck-am \\\n-\tinstalldirs maintainer-clean maintainer-clean-generic \\\n-\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n-\tmostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \\\n-\tuninstall-am uninstall-toolexeclibLTLIBRARIES\n+\tinstalldirs installdirs-am maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\ttags tags-recursive uninstall uninstall-am \\\n+\tuninstall-toolexeclibLTLIBRARIES\n \n \n+vpath % $(top_srcdir)/src\n+vpath % $(top_srcdir)\n+\n # Symbol versioning for shared libraries.\n @ENABLE_SYMVERS_TRUE@libstdc++-symbols.ver:  ${glibcxx_srcdir}/$(SYMVER_FILE) \\\n @ENABLE_SYMVERS_TRUE@\t\t$(port_specific_symbol_files)\n@@ -823,181 +785,23 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n \n-codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCODECVT_CC) . || true\n-\n-collate_members.cc: ${glibcxx_srcdir}/$(CCOLLATE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCOLLATE_CC) . || true\n-\n-ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n-\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n-\n-ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n-\n-messages_members.cc: ${glibcxx_srcdir}/$(CMESSAGES_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_CC) . || true\n-\n-monetary_members.cc: ${glibcxx_srcdir}/$(CMONEY_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CMONEY_CC) . || true\n-\n-numeric_members.cc: ${glibcxx_srcdir}/$(CNUMERIC_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CNUMERIC_CC) . || true\n-\n-time_members.cc: ${glibcxx_srcdir}/$(CTIME_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CTIME_CC) . || true\n-atomicity.cc: ${atomicity_file}\n-\t$(LN_S) ${atomicity_file} ./atomicity.cc || true\n-\n-c++locale.cc: ${glibcxx_srcdir}/$(CLOCALE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(CLOCALE_CC) ./$@ || true\n-\n-basic_file.cc: ${glibcxx_srcdir}/$(BASIC_FILE_CC)\n-\t$(LN_S) ${glibcxx_srcdir}/$(BASIC_FILE_CC) ./$@ || true\n-\n-vpath % $(top_srcdir)/src\n-vpath % $(top_srcdir)\n-strstream.lo: strstream.cc\n-\t$(LTCXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n-strstream.o: strstream.cc\n-\t$(CXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n-\n-# Use special rules for the concept-checking instantiations so that all\n-# the generated template functions are also instantiated.  Force the checks\n-# to be on so that the instantiations are actually seen.\n-concept-inst.lo: concept-inst.cc\n-\t$(LTCXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n-concept-inst.o: concept-inst.cc\n-\t$(CXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n-parallel_settings.lo: parallel_settings.cc\n-\t$(LTCXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n-parallel_settings.o: parallel_settings.cc\n-\t$(CXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n-\n-compatibility-parallel_list.lo: compatibility-parallel_list.cc\n-\t$(LTCXXCOMPILE) -c $<\n-compatibility-parallel_list.o: compatibility-parallel_list.cc\n-\t$(CXXCOMPILE) -c $<\n-\n-compatibility-parallel_list-2.lo: compatibility-parallel_list-2.cc\n-\t$(LTCXXCOMPILE) -c $<\n-compatibility-parallel_list-2.o: compatibility-parallel_list-2.cc\n-\t$(CXXCOMPILE) -c $<\n-\n-# Use special rules for the C++0x sources so that the proper flags are passed.\n-functexcept.lo: functexcept.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-functexcept.o: functexcept.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-shared_ptr.lo: shared_ptr.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-shared_ptr.o: shared_ptr.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-system_error.lo: system_error.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-system_error.o: system_error.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-mutex.lo: mutex.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-mutex.o: mutex.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-condition_variable.lo: condition_variable.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-condition_variable.o: condition_variable.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-compatibility-c++0x.lo: compatibility-c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-compatibility-c++0x.o: compatibility-c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-compatibility-atomic-c++0x.lo: compatibility-atomic-c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-compatibility-atomic-c++0x.o: compatibility-atomic-c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-functional.lo: functional.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-functional.o: functional.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-hash_c++0x.lo: hash_c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-hash_c++0x.o: hash_c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-hashtable_c++0x.lo: hashtable_c++0x.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-hashtable_c++0x.o: hashtable_c++0x.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-limits.lo: limits.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-limits.o: limits.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-fstream-inst.lo: fstream-inst.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-fstream-inst.o: fstream-inst.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-string-inst.lo: string-inst.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-string-inst.o: string-inst.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-wstring-inst.lo: wstring-inst.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-wstring-inst.o: wstring-inst.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-chrono.lo: chrono.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-chrono.o: chrono.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-thread.lo: thread.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-thread.o: thread.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-future.lo: future.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-future.o: future.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-regex.lo: regex.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-regex.o: regex.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-debug.lo: debug.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-debug.o: debug.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-placeholders.lo: placeholders.cc\n-\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n-placeholders.o: placeholders.cc\n-\t$(CXXCOMPILE) -std=gnu++0x -c $<\n-\n-# Use special rules for compatibility-ldbl.cc compilation, as we need to\n-# pass -mlong-double-64.\n-@GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.lo: compatibility-ldbl.cc\n-@GLIBCXX_LDBL_COMPAT_TRUE@\t$(LTCXXCOMPILE) -mlong-double-64 -c $<\n-@GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.o: compatibility-ldbl.cc\n-@GLIBCXX_LDBL_COMPAT_TRUE@\t$(CXXCOMPILE) -mlong-double-64 -c $<\n-\n-# Added bits to build debug library.\n-@GLIBCXX_BUILD_DEBUG_TRUE@all-local: build_debug\n+# Added rules.\n+# 1 debug library\n+# 2 supra-convenience library\n+@GLIBCXX_BUILD_DEBUG_TRUE@all-local: libstdc++convenience.la build_debug\n @GLIBCXX_BUILD_DEBUG_TRUE@install-data-local: install_debug\n-@GLIBCXX_BUILD_DEBUG_FALSE@all-local:\n+@GLIBCXX_BUILD_DEBUG_FALSE@all-local: libstdc++convenience.la\n @GLIBCXX_BUILD_DEBUG_FALSE@install-data-local:\n \n+# Make a non-installed convenience library, so that --disable-static\n+# may work.\n+libstdc++convenience.la: $(toolexeclib_LTLIBRARIES)\n+\t$(CXXLINK) $(libstdc___la_LIBADD) $(LIBS); \\\n+\tif test ! -f .libs/libstdc++.a; then \\\n+\t  $(LN_S) .libs/libstdc++convenience.a .libs/libstdc++.a; \\\n+\t  stamp-libstdc++convenience; \\\n+\tfi;\n+\n # Build a set of debug objects here.\n # Take care to fix all possibly-relative paths.\n stamp-debug:"}, {"sha": "cc454bbc4c406e26974a7fa7c1627b45cbab70dc", "filename": "libstdc++-v3/src/c++11/Makefile.am", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.am?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -0,0 +1,118 @@\n+## Makefile for the C++03 sources of the GNU C++ Standard library.\n+##\n+## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+## 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+## Free Software Foundation, Inc.\n+##\n+## This file is part of the libstdc++ version 3 distribution.\n+## Process this file with automake to produce Makefile.in.\n+\n+## This file is part of the GNU ISO C++ Library.  This library is free\n+## software; you can redistribute it and/or modify it under the\n+## terms of the GNU General Public License as published by the\n+## Free Software Foundation; either version 3, or (at your option)\n+## any later version.\n+\n+## This library is distributed in the hope that it will be useful,\n+## but WITHOUT ANY WARRANTY; without even the implied warranty of\n+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+## GNU General Public License for more details.\n+\n+## You should have received a copy of the GNU General Public License along\n+## with this library; see the file COPYING3.  If not see\n+## <http://www.gnu.org/licenses/>.\n+\n+include $(top_srcdir)/fragment.am\n+\n+# Convenience library for C++11 runtime.\n+toolexeclib_LTLIBRARIES = libc++11.la\n+noinst_LTLIBRARIES = libc++11convenience.la\n+\n+headers =\n+\n+sources = \\\n+\tchrono.cc \\\n+\tcondition_variable.cc \\\n+\tcompatibility-c++0x.cc \\\n+\tcompatibility-atomic-c++0x.cc \\\n+\tdebug.cc \\\n+\tfunctexcept.cc \\\n+\tfunctional.cc \\\n+\tfuture.cc \\\n+\thash_c++0x.cc \\\n+\thashtable_c++0x.cc \\\n+\tlimits.cc \\\n+\tmutex.cc \\\n+\tplaceholders.cc \\\n+\tregex.cc  \\\n+\tshared_ptr.cc \\\n+\tsystem_error.cc \\\n+\tthread.cc\n+\n+if ENABLE_EXTERN_TEMPLATE\n+XTEMPLATE_FLAGS = -fno-implicit-templates\n+inst_sources = \\\n+\tfstream-inst.cc \\\n+\tstring-inst.cc \\\n+\twstring-inst.cc\n+else\n+XTEMPLATE_FLAGS =\n+inst_sources =\n+endif\n+\n+vpath % $(top_srcdir)/src/c++11\n+vpath % $(top_srcdir)\n+\n+libc__11_la_SOURCES = $(sources) $(inst_sources)\n+libc__11convenience_la_SOURCES = $(sources)  $(inst_sources)\n+\n+# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# modified in a per-library or per-sub-library way.  Need to manually\n+# set this option because CONFIG_CXXFLAGS has to be after\n+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n+# as the occasion calls for it.\n+AM_CXXFLAGS = \\\n+\t$(PIC_CXXFLAGS) \\\n+\t$(XTEMPLATE_FLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) -std=gnu++11\n+\n+AM_MAKEFLAGS = \\\n+\t\"gxx_include_dir=$(gxx_include_dir)\"\n+\n+# Libtool notes\n+\n+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n+\n+# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# using the C++ compiler, because that will enable the settings\n+# detected when C++ support was being configured.  However, when no\n+# such flag is given in the command line, libtool attempts to figure\n+# it out by matching the compiler name in each configuration section\n+# against a prefix of the command line.  The problem is that, if the\n+# compiler name and its initial flags stored in the libtool\n+# configuration file don't match those in the command line, libtool\n+# can't decide which configuration to use, and it gives up.  The\n+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n+# attempt to infer which configuration to use.\n+# We have to put --tag disable-shared after --tag CXX lest things\n+# CXX undo the affect of disable-shared.\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n+# 3) We'd have a problem when building the shared libstdc++ object if\n+# the rules automake generates would be used.  We cannot allow g++ to\n+# be used since this would add -lstdc++ to the link line which of\n+# course is problematic at this point.  So, we get the top-level\n+# directory to configure libstdc++-v3 to use gcc as the C++\n+# compilation driver.\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t  --mode=link $(CXX) \\\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@"}, {"sha": "72653c65222f679a6f42be369f2fd14b2a803e51", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "added", "additions": 681, "deletions": 0, "changes": 681, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -0,0 +1,681 @@\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+VPATH = @srcdir@\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+DIST_COMMON = $(top_srcdir)/fragment.am $(srcdir)/Makefile.in \\\n+\t$(srcdir)/Makefile.am\n+subdir = src/c++11\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/futex.m4 \\\n+\t$(top_srcdir)/../config/iconv.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/lib-ld.m4 \\\n+\t$(top_srcdir)/../config/lib-link.m4 \\\n+\t$(top_srcdir)/../config/lib-prefix.m4 \\\n+\t$(top_srcdir)/../config/lthostflags.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n+\t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n+\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n+\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n+\t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n+\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+CONFIG_HEADER = $(top_builddir)/config.h\n+CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n+libc__11_la_LIBADD =\n+am__objects_1 = chrono.lo condition_variable.lo compatibility-c++0x.lo \\\n+\tcompatibility-atomic-c++0x.lo debug.lo functexcept.lo \\\n+\tfunctional.lo future.lo hash_c++0x.lo hashtable_c++0x.lo \\\n+\tlimits.lo mutex.lo placeholders.lo regex.lo shared_ptr.lo \\\n+\tsystem_error.lo thread.lo\n+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_2 = fstream-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tstring-inst.lo wstring-inst.lo\n+am_libc__11_la_OBJECTS = $(am__objects_1) $(am__objects_2)\n+libc__11_la_OBJECTS = $(am_libc__11_la_OBJECTS)\n+libc__11convenience_la_LIBADD =\n+am_libc__11convenience_la_OBJECTS = $(am__objects_1) $(am__objects_2)\n+libc__11convenience_la_OBJECTS = $(am_libc__11convenience_la_OBJECTS)\n+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n+depcomp =\n+am__depfiles_maybe =\n+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+CXXLD = $(CXX)\n+SOURCES = $(libc__11_la_SOURCES) $(libc__11convenience_la_SOURCES)\n+ETAGS = etags\n+CTAGS = ctags\n+ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n+ACLOCAL = @ACLOCAL@\n+ALLOCATOR_H = @ALLOCATOR_H@\n+ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+AMTAR = @AMTAR@\n+AR = @AR@\n+AS = @AS@\n+ATOMICITY_SRCDIR = @ATOMICITY_SRCDIR@\n+ATOMIC_FLAGS = @ATOMIC_FLAGS@\n+ATOMIC_WORD_SRCDIR = @ATOMIC_WORD_SRCDIR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BASIC_FILE_CC = @BASIC_FILE_CC@\n+BASIC_FILE_H = @BASIC_FILE_H@\n+CC = @CC@\n+CCODECVT_CC = @CCODECVT_CC@\n+CCOLLATE_CC = @CCOLLATE_CC@\n+CCTYPE_CC = @CCTYPE_CC@\n+CFLAGS = @CFLAGS@\n+CLOCALE_CC = @CLOCALE_CC@\n+CLOCALE_H = @CLOCALE_H@\n+CLOCALE_INTERNAL_H = @CLOCALE_INTERNAL_H@\n+CMESSAGES_CC = @CMESSAGES_CC@\n+CMESSAGES_H = @CMESSAGES_H@\n+CMONEY_CC = @CMONEY_CC@\n+CNUMERIC_CC = @CNUMERIC_CC@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CSTDIO_H = @CSTDIO_H@\n+CTIME_CC = @CTIME_CC@\n+CTIME_H = @CTIME_H@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+C_INCLUDE_DIR = @C_INCLUDE_DIR@\n+DBLATEX = @DBLATEX@\n+DEBUG_FLAGS = @DEBUG_FLAGS@\n+DEFS = @DEFS@\n+DOT = @DOT@\n+DOXYGEN = @DOXYGEN@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+ERROR_CONSTANTS_SRCDIR = @ERROR_CONSTANTS_SRCDIR@\n+EXEEXT = @EXEEXT@\n+EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n+FGREP = @FGREP@\n+GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n+GLIBCXX_LIBS = @GLIBCXX_LIBS@\n+GREP = @GREP@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LIBICONV = @LIBICONV@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBICONV = @LTLIBICONV@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n+OS_INC_SRCDIR = @OS_INC_SRCDIR@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n+RANLIB = @RANLIB@\n+SECTION_FLAGS = @SECTION_FLAGS@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+SYMVER_FILE = @SYMVER_FILE@\n+TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n+USE_NLS = @USE_NLS@\n+VERSION = @VERSION@\n+WARN_FLAGS = @WARN_FLAGS@\n+WERROR = @WERROR@\n+XMLLINT = @XMLLINT@\n+XSLTPROC = @XSLTPROC@\n+XSL_STYLE_DIR = @XSL_STYLE_DIR@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__leading_dot = @am__leading_dot@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+baseline_dir = @baseline_dir@\n+baseline_subdir_switch = @baseline_subdir_switch@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+check_msgfmt = @check_msgfmt@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+enable_shared = @enable_shared@\n+enable_static = @enable_static@\n+exec_prefix = @exec_prefix@\n+glibcxx_MOFILES = @glibcxx_MOFILES@\n+glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n+glibcxx_POFILES = @glibcxx_POFILES@\n+glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_prefixdir = @glibcxx_prefixdir@\n+glibcxx_srcdir = @glibcxx_srcdir@\n+glibcxx_toolexecdir = @glibcxx_toolexecdir@\n+glibcxx_toolexeclibdir = @glibcxx_toolexeclibdir@\n+gxx_include_dir = @gxx_include_dir@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+libtool_VERSION = @libtool_VERSION@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+lt_host_flags = @lt_host_flags@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+multi_basedir = @multi_basedir@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+port_specific_symbol_files = @port_specific_symbol_files@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_os = @target_os@\n+target_vendor = @target_vendor@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+toplevel_builddir = @toplevel_builddir@\n+toplevel_srcdir = @toplevel_srcdir@\n+\n+# May be used by various substitution variables.\n+gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+MAINT_CHARSET = latin1\n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+PWD_COMMAND = $${PWDCMD-pwd}\n+STAMP = echo timestamp >\n+toolexecdir = $(glibcxx_toolexecdir)\n+toolexeclibdir = $(glibcxx_toolexeclibdir)\n+\n+# These bits are all figured out from configure.  Look in acinclude.m4\n+# or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n+CONFIG_CXXFLAGS = \\\n+\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\n+WARN_CXXFLAGS = \\\n+\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\n+\n+# -I/-D flags to pass when compiling.\n+AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n+\n+# Convenience library for C++11 runtime.\n+toolexeclib_LTLIBRARIES = libc++11.la\n+noinst_LTLIBRARIES = libc++11convenience.la\n+headers = \n+sources = \\\n+\tchrono.cc \\\n+\tcondition_variable.cc \\\n+\tcompatibility-c++0x.cc \\\n+\tcompatibility-atomic-c++0x.cc \\\n+\tdebug.cc \\\n+\tfunctexcept.cc \\\n+\tfunctional.cc \\\n+\tfuture.cc \\\n+\thash_c++0x.cc \\\n+\thashtable_c++0x.cc \\\n+\tlimits.cc \\\n+\tmutex.cc \\\n+\tplaceholders.cc \\\n+\tregex.cc  \\\n+\tshared_ptr.cc \\\n+\tsystem_error.cc \\\n+\tthread.cc\n+\n+@ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n+@ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources = \n+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources = \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tfstream-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tstring-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\twstring-inst.cc\n+\n+libc__11_la_SOURCES = $(sources) $(inst_sources)\n+libc__11convenience_la_SOURCES = $(sources)  $(inst_sources)\n+\n+# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# modified in a per-library or per-sub-library way.  Need to manually\n+# set this option because CONFIG_CXXFLAGS has to be after\n+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n+# as the occasion calls for it.\n+AM_CXXFLAGS = \\\n+\t$(PIC_CXXFLAGS) \\\n+\t$(XTEMPLATE_FLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) -std=gnu++11\n+\n+AM_MAKEFLAGS = \\\n+\t\"gxx_include_dir=$(gxx_include_dir)\"\n+\n+\n+# Libtool notes\n+\n+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n+\n+# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# using the C++ compiler, because that will enable the settings\n+# detected when C++ support was being configured.  However, when no\n+# such flag is given in the command line, libtool attempts to figure\n+# it out by matching the compiler name in each configuration section\n+# against a prefix of the command line.  The problem is that, if the\n+# compiler name and its initial flags stored in the libtool\n+# configuration file don't match those in the command line, libtool\n+# can't decide which configuration to use, and it gives up.  The\n+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n+# attempt to infer which configuration to use.\n+# We have to put --tag disable-shared after --tag CXX lest things\n+# CXX undo the affect of disable-shared.\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n+# 3) We'd have a problem when building the shared libstdc++ object if\n+# the rules automake generates would be used.  We cannot allow g++ to\n+# be used since this would add -lstdc++ to the link line which of\n+# course is problematic at this point.  So, we get the top-level\n+# directory to configure libstdc++-v3 to use gcc as the C++\n+# compilation driver.\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t  --mode=link $(CXX) \\\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n+\n+all: all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .cc .lo .o .obj\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n+\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps src/c++11/Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign --ignore-deps src/c++11/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(am__aclocal_m4_deps):\n+\n+clean-noinstLTLIBRARIES:\n+\t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n+\t@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(toolexeclibdir)\"; \\\n+\t}\n+\n+uninstall-toolexeclibLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(toolexeclibdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\tdone\n+\n+clean-toolexeclibLTLIBRARIES:\n+\t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+libc++11.la: $(libc__11_la_OBJECTS) $(libc__11_la_DEPENDENCIES) \n+\t$(CXXLINK) -rpath $(toolexeclibdir) $(libc__11_la_OBJECTS) $(libc__11_la_LIBADD) $(LIBS)\n+libc++11convenience.la: $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_DEPENDENCIES) \n+\t$(CXXLINK)  $(libc__11convenience_la_OBJECTS) $(libc__11convenience_la_LIBADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+.cc.o:\n+\t$(CXXCOMPILE) -c -o $@ $<\n+\n+.cc.obj:\n+\t$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.cc.lo:\n+\t$(LTCXXCOMPILE) -c -o $@ $<\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n+\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tmkid -fID $$unique\n+tags: TAGS\n+\n+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tset x; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: CTAGS\n+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am:\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-toolexeclibLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-toolexeclibLTLIBRARIES\n+\n+.MAKE: install-am install-strip\n+\n+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \\\n+\tclean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES ctags distclean distclean-compile \\\n+\tdistclean-generic distclean-libtool distclean-tags dvi dvi-am \\\n+\thtml html-am info info-am install install-am install-data \\\n+\tinstall-data-am install-dvi install-dvi-am install-exec \\\n+\tinstall-exec-am install-html install-html-am install-info \\\n+\tinstall-info-am install-man install-pdf install-pdf-am \\\n+\tinstall-ps install-ps-am install-strip \\\n+\tinstall-toolexeclibLTLIBRARIES installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \\\n+\tuninstall-am uninstall-toolexeclibLTLIBRARIES\n+\n+\n+vpath % $(top_srcdir)/src/c++11\n+vpath % $(top_srcdir)\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "17b3402c76cd157315ab8df4b1ac8a93fed29248", "filename": "libstdc++-v3/src/c++11/chrono.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fchrono.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fchrono.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fchrono.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/chrono.cc"}, {"sha": "1ee0d7e35a8c82fd3209b913aadced77c35d6bef", "filename": "libstdc++-v3/src/c++11/compatibility-atomic-c++0x.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-atomic-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-atomic-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-atomic-c%2B%2B0x.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-atomic-c++0x.cc"}, {"sha": "03c58d244f2c560e0ab33b03f661bd2febf79662", "filename": "libstdc++-v3/src/c++11/compatibility-c++0x.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcompatibility-c%2B%2B0x.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-c++0x.cc"}, {"sha": "400fcf3546af9b09ee1c7995820bc1050db4f8ae", "filename": "libstdc++-v3/src/c++11/condition_variable.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/condition_variable.cc"}, {"sha": "af45ae4f543a6fb6bc7db9183a3230f954e59b59", "filename": "libstdc++-v3/src/c++11/debug.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fdebug.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/debug.cc"}, {"sha": "cd7a6cd45461d32e7018cfd0537e4f07114c2d1c", "filename": "libstdc++-v3/src/c++11/fstream-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffstream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffstream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffstream-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/fstream-inst.cc"}, {"sha": "2fe14d532e056741e17795bbdc25bf31b385c49f", "filename": "libstdc++-v3/src/c++11/functexcept.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctexcept.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/functexcept.cc"}, {"sha": "2ab34051432cf29155fd9764a2ad87d333a5482f", "filename": "libstdc++-v3/src/c++11/functional.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctional.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctional.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffunctional.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/functional.cc"}, {"sha": "e68642c34276db052ac5af1ac4fa2f7782186a1f", "filename": "libstdc++-v3/src/c++11/future.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Ffuture.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/future.cc"}, {"sha": "d685074540b06f7fc6813a21d3389aa4d6c592fc", "filename": "libstdc++-v3/src/c++11/hash_c++0x.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhash_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhash_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhash_c%2B%2B0x.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/hash_c++0x.cc"}, {"sha": "2bf55082cd59711b987bb3904c519259de07eee2", "filename": "libstdc++-v3/src/c++11/hashtable_c++0x.cc", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fhashtable_c%2B%2B0x.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -30,5 +30,5 @@\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n-#include \"hashtable-aux.cc\"\n+#include \"../shared/hashtable-aux.cc\"\n } // namespace // namespace std", "previous_filename": "libstdc++-v3/src/hashtable_c++0x.cc"}, {"sha": "cc6acc21ea7427685054c4a8848045fd02406826", "filename": "libstdc++-v3/src/c++11/limits.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Flimits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Flimits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Flimits.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/limits.cc"}, {"sha": "d6f2f03700fbd1fcaa15f5e99095d36d8349df12", "filename": "libstdc++-v3/src/c++11/mutex.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fmutex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fmutex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fmutex.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/mutex.cc"}, {"sha": "967ce178a3241d5fd6b21d887878385ab52d72e8", "filename": "libstdc++-v3/src/c++11/placeholders.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fplaceholders.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fplaceholders.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fplaceholders.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/placeholders.cc"}, {"sha": "8a47da341ae6fc2452f00f1ab7c80192e4b0df84", "filename": "libstdc++-v3/src/c++11/regex.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fregex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fregex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fregex.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/regex.cc"}, {"sha": "911e745ebe2e9ed9c0a65858714e347442c71e8c", "filename": "libstdc++-v3/src/c++11/shared_ptr.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fshared_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fshared_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fshared_ptr.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/shared_ptr.cc"}, {"sha": "879ccec7e8ddfcfff6367a46772a69b420090f48", "filename": "libstdc++-v3/src/c++11/string-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fstring-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fstring-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fstring-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/string-inst.cc"}, {"sha": "3ee1d9b0b0afc15a3dd6b4d9119147061f4b041e", "filename": "libstdc++-v3/src/c++11/system_error.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/system_error.cc"}, {"sha": "ff034b16143b9a83e806c1372d0ff2c3d1f5e3c6", "filename": "libstdc++-v3/src/c++11/thread.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fthread.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/thread.cc"}, {"sha": "b753f616fd4e6ea56ee7e00deeaf8726c47b5d0c", "filename": "libstdc++-v3/src/c++11/wstring-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fwstring-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fwstring-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fwstring-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/wstring-inst.cc"}, {"sha": "fe39f23750c7ea5aa886be54cfc3dc0338353eae", "filename": "libstdc++-v3/src/c++98/Makefile.am", "status": "added", "additions": 253, "deletions": 0, "changes": 253, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.am?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -0,0 +1,253 @@\n+## Makefile for the C++03 sources of the GNU C++ Standard library.\n+##\n+## Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+## 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+## Free Software Foundation, Inc.\n+##\n+## This file is part of the libstdc++ version 3 distribution.\n+## Process this file with automake to produce Makefile.in.\n+\n+## This file is part of the GNU ISO C++ Library.  This library is free\n+## software; you can redistribute it and/or modify it under the\n+## terms of the GNU General Public License as published by the\n+## Free Software Foundation; either version 3, or (at your option)\n+## any later version.\n+\n+## This library is distributed in the hope that it will be useful,\n+## but WITHOUT ANY WARRANTY; without even the implied warranty of\n+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+## GNU General Public License for more details.\n+\n+## You should have received a copy of the GNU General Public License along\n+## with this library; see the file COPYING3.  If not see\n+## <http://www.gnu.org/licenses/>.\n+\n+include $(top_srcdir)/fragment.am\n+\n+# Convenience library for C++98 runtime.\n+toolexeclib_LTLIBRARIES = libc++98.la\n+noinst_LTLIBRARIES = libc++98convenience.la\n+\n+headers =\n+\n+# Source files linked in via configuration/make substitution for a\n+# particular host.\n+host_sources = \\\n+\tatomicity.cc \\\n+\tcodecvt_members.cc \\\n+\tcollate_members.cc \\\n+\tctype_configure_char.cc \\\n+\tctype_members.cc \\\n+\tmessages_members.cc \\\n+\tmonetary_members.cc \\\n+\tnumeric_members.cc \\\n+\ttime_members.cc\n+\n+codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCODECVT_CC) . || true\n+\n+collate_members.cc: ${glibcxx_srcdir}/$(CCOLLATE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCOLLATE_CC) . || true\n+\n+ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n+\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n+\n+ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n+\n+messages_members.cc: ${glibcxx_srcdir}/$(CMESSAGES_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_CC) . || true\n+\n+monetary_members.cc: ${glibcxx_srcdir}/$(CMONEY_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CMONEY_CC) . || true\n+\n+numeric_members.cc: ${glibcxx_srcdir}/$(CNUMERIC_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CNUMERIC_CC) . || true\n+\n+time_members.cc: ${glibcxx_srcdir}/$(CTIME_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CTIME_CC) . || true\n+\n+atomicity_file = ${glibcxx_srcdir}/$(ATOMICITY_SRCDIR)/atomicity.h\n+atomicity.cc: ${atomicity_file}\n+\t$(LN_S) ${atomicity_file} ./atomicity.cc || true\n+\n+# Source files linked in via configuration/make substitution for a\n+# particular host, but with ad hoc naming rules.\n+host_sources_extra = \\\n+\tbasic_file.cc c++locale.cc \\\n+\t${inst_sources} ${ldbl_compat_sources} ${parallel_sources}\n+\n+c++locale.cc: ${glibcxx_srcdir}/$(CLOCALE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CLOCALE_CC) ./$@ || true\n+\n+basic_file.cc: ${glibcxx_srcdir}/$(BASIC_FILE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(BASIC_FILE_CC) ./$@ || true\n+\n+if ENABLE_PARALLEL\n+parallel_sources = parallel_settings.cc \\\n+\t\t   compatibility-parallel_list.cc \\\n+\t\t   compatibility-parallel_list-2.cc\n+else\n+parallel_sources =\n+endif\n+\n+if GLIBCXX_LDBL_COMPAT\n+ldbl_compat_sources = compatibility-ldbl.cc\n+else\n+ldbl_compat_sources =\n+endif\n+\n+if ENABLE_EXTERN_TEMPLATE\n+XTEMPLATE_FLAGS = -fno-implicit-templates\n+inst_sources = \\\n+\tallocator-inst.cc \\\n+\tconcept-inst.cc \\\n+\text-inst.cc \\\n+\tios-inst.cc \\\n+\tiostream-inst.cc \\\n+\tistream-inst.cc \\\n+\tlocale-inst.cc \\\n+\tmisc-inst.cc \\\n+\tostream-inst.cc \\\n+\tsstream-inst.cc \\\n+\tstreambuf-inst.cc \\\n+\twlocale-inst.cc\n+else\n+XTEMPLATE_FLAGS =\n+inst_sources =\n+endif\n+\n+# Sources present in the src directory, always present.\n+sources = \\\n+\tbitmap_allocator.cc \\\n+\tpool_allocator.cc \\\n+\tmt_allocator.cc \\\n+\tcodecvt.cc \\\n+\tcompatibility.cc \\\n+\tcompatibility-debug_list.cc \\\n+\tcompatibility-debug_list-2.cc \\\n+\tcompatibility-list.cc \\\n+\tcompatibility-list-2.cc \\\n+\tcomplex_io.cc \\\n+\tctype.cc \\\n+\tglobals_io.cc \\\n+\thash_tr1.cc \\\n+\thashtable_tr1.cc \\\n+\tios.cc \\\n+\tios_failure.cc \\\n+\tios_init.cc \\\n+\tios_locale.cc \\\n+\tlist.cc \\\n+\tlocale.cc \\\n+\tlocale_init.cc \\\n+\tlocale_facets.cc \\\n+\tlocalename.cc \\\n+\tmath_stubs_float.cc \\\n+\tmath_stubs_long_double.cc \\\n+\tstdexcept.cc \\\n+\tstrstream.cc \\\n+\ttree.cc \\\n+\tistream.cc \\\n+\tstreambuf.cc \\\n+\tvalarray.cc \\\n+\t${host_sources} \\\n+\t${host_sources_extra}\n+\n+vpath % $(top_srcdir)/src/c++98\n+vpath % $(top_srcdir)\n+\n+libc__98_la_SOURCES = $(sources) $(inst_sources)\n+libc__98convenience_la_SOURCES = $(sources)  $(inst_sources)\n+\n+# Use special rules for the deprecated source files so that they find\n+# deprecated include files.\n+GLIBCXX_INCLUDE_DIR=$(glibcxx_builddir)/include\n+strstream.lo: strstream.cc\n+\t$(LTCXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n+strstream.o: strstream.cc\n+\t$(CXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n+\n+# Use special rules for the concept-checking instantiations so that all\n+# the generated template functions are also instantiated.  Force the checks\n+# to be on so that the instantiations are actually seen.\n+concept-inst.lo: concept-inst.cc\n+\t$(LTCXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n+concept-inst.o: concept-inst.cc\n+\t$(CXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n+\n+# Use special rules for parallel mode compilation.\n+PARALLEL_FLAGS = -fopenmp -D_GLIBCXX_PARALLEL -I$(glibcxx_builddir)/../libgomp\n+parallel_settings.lo: parallel_settings.cc\n+\t$(LTCXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n+parallel_settings.o: parallel_settings.cc\n+\t$(CXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n+\n+compatibility-parallel_list.lo: compatibility-parallel_list.cc\n+\t$(LTCXXCOMPILE) -c $<\n+compatibility-parallel_list.o: compatibility-parallel_list.cc\n+\t$(CXXCOMPILE) -c $<\n+\n+compatibility-parallel_list-2.lo: compatibility-parallel_list-2.cc\n+\t$(LTCXXCOMPILE) -c $<\n+compatibility-parallel_list-2.o: compatibility-parallel_list-2.cc\n+\t$(CXXCOMPILE) -c $<\n+\n+if GLIBCXX_LDBL_COMPAT\n+# Use special rules for compatibility-ldbl.cc compilation, as we need to\n+# pass -mlong-double-64.\n+compatibility-ldbl.lo: compatibility-ldbl.cc\n+\t$(LTCXXCOMPILE) -mlong-double-64 -c $<\n+compatibility-ldbl.o: compatibility-ldbl.cc\n+\t$(CXXCOMPILE) -mlong-double-64 -c $<\n+endif\n+\n+# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# modified in a per-library or per-sub-library way.  Need to manually\n+# set this option because CONFIG_CXXFLAGS has to be after\n+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n+# as the occasion calls for it.\n+AM_CXXFLAGS = \\\n+\t$(PIC_CXXFLAGS) \\\n+\t$(XTEMPLATE_FLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS)\n+\n+AM_MAKEFLAGS = \\\n+\t\"gxx_include_dir=$(gxx_include_dir)\"\n+\n+# Libtool notes\n+\n+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n+\n+# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# using the C++ compiler, because that will enable the settings\n+# detected when C++ support was being configured.  However, when no\n+# such flag is given in the command line, libtool attempts to figure\n+# it out by matching the compiler name in each configuration section\n+# against a prefix of the command line.  The problem is that, if the\n+# compiler name and its initial flags stored in the libtool\n+# configuration file don't match those in the command line, libtool\n+# can't decide which configuration to use, and it gives up.  The\n+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n+# attempt to infer which configuration to use.\n+# We have to put --tag disable-shared after --tag CXX lest things\n+# CXX undo the affect of disable-shared.\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n+# 3) We'd have a problem when building the shared libstdc++ object if\n+# the rules automake generates would be used.  We cannot allow g++ to\n+# be used since this would add -lstdc++ to the link line which of\n+# course is problematic at this point.  So, we get the top-level\n+# directory to configure libstdc++-v3 to use gcc as the C++\n+# compilation driver.\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t  --mode=link $(CXX) \\\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@"}, {"sha": "dae6f26ff299d6f562b87b87b68e0966b3889975", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "added", "additions": 828, "deletions": 0, "changes": 828, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -0,0 +1,828 @@\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+VPATH = @srcdir@\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+DIST_COMMON = $(top_srcdir)/fragment.am $(srcdir)/Makefile.in \\\n+\t$(srcdir)/Makefile.am\n+subdir = src/c++98\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/futex.m4 \\\n+\t$(top_srcdir)/../config/iconv.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/lib-ld.m4 \\\n+\t$(top_srcdir)/../config/lib-link.m4 \\\n+\t$(top_srcdir)/../config/lib-prefix.m4 \\\n+\t$(top_srcdir)/../config/lthostflags.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n+\t$(top_srcdir)/../config/no-executables.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/stdint.m4 \\\n+\t$(top_srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n+\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n+\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n+\t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n+\t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+CONFIG_HEADER = $(top_builddir)/config.h\n+CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n+libc__98_la_LIBADD =\n+am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \\\n+\tctype_configure_char.lo ctype_members.lo messages_members.lo \\\n+\tmonetary_members.lo numeric_members.lo time_members.lo\n+@ENABLE_EXTERN_TEMPLATE_TRUE@am__objects_2 = allocator-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tconcept-inst.lo ext-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tios-inst.lo iostream-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tistream-inst.lo locale-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tmisc-inst.lo ostream-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tsstream-inst.lo streambuf-inst.lo \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\twlocale-inst.lo\n+@GLIBCXX_LDBL_COMPAT_TRUE@am__objects_3 = compatibility-ldbl.lo\n+@ENABLE_PARALLEL_TRUE@am__objects_4 = parallel_settings.lo \\\n+@ENABLE_PARALLEL_TRUE@\tcompatibility-parallel_list.lo \\\n+@ENABLE_PARALLEL_TRUE@\tcompatibility-parallel_list-2.lo\n+am__objects_5 = basic_file.lo c++locale.lo $(am__objects_2) \\\n+\t$(am__objects_3) $(am__objects_4)\n+am__objects_6 = bitmap_allocator.lo pool_allocator.lo mt_allocator.lo \\\n+\tcodecvt.lo compatibility.lo compatibility-debug_list.lo \\\n+\tcompatibility-debug_list-2.lo compatibility-list.lo \\\n+\tcompatibility-list-2.lo complex_io.lo ctype.lo globals_io.lo \\\n+\thash_tr1.lo hashtable_tr1.lo ios.lo ios_failure.lo ios_init.lo \\\n+\tios_locale.lo list.lo locale.lo locale_init.lo \\\n+\tlocale_facets.lo localename.lo math_stubs_float.lo \\\n+\tmath_stubs_long_double.lo stdexcept.lo strstream.lo tree.lo \\\n+\tistream.lo streambuf.lo valarray.lo $(am__objects_1) \\\n+\t$(am__objects_5)\n+am_libc__98_la_OBJECTS = $(am__objects_6) $(am__objects_2)\n+libc__98_la_OBJECTS = $(am_libc__98_la_OBJECTS)\n+libc__98convenience_la_LIBADD =\n+am_libc__98convenience_la_OBJECTS = $(am__objects_6) $(am__objects_2)\n+libc__98convenience_la_OBJECTS = $(am_libc__98convenience_la_OBJECTS)\n+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n+depcomp =\n+am__depfiles_maybe =\n+CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+CXXLD = $(CXX)\n+SOURCES = $(libc__98_la_SOURCES) $(libc__98convenience_la_SOURCES)\n+ETAGS = etags\n+CTAGS = ctags\n+ABI_TWEAKS_SRCDIR = @ABI_TWEAKS_SRCDIR@\n+ACLOCAL = @ACLOCAL@\n+ALLOCATOR_H = @ALLOCATOR_H@\n+ALLOCATOR_NAME = @ALLOCATOR_NAME@\n+AMTAR = @AMTAR@\n+AR = @AR@\n+AS = @AS@\n+ATOMICITY_SRCDIR = @ATOMICITY_SRCDIR@\n+ATOMIC_FLAGS = @ATOMIC_FLAGS@\n+ATOMIC_WORD_SRCDIR = @ATOMIC_WORD_SRCDIR@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+BASIC_FILE_CC = @BASIC_FILE_CC@\n+BASIC_FILE_H = @BASIC_FILE_H@\n+CC = @CC@\n+CCODECVT_CC = @CCODECVT_CC@\n+CCOLLATE_CC = @CCOLLATE_CC@\n+CCTYPE_CC = @CCTYPE_CC@\n+CFLAGS = @CFLAGS@\n+CLOCALE_CC = @CLOCALE_CC@\n+CLOCALE_H = @CLOCALE_H@\n+CLOCALE_INTERNAL_H = @CLOCALE_INTERNAL_H@\n+CMESSAGES_CC = @CMESSAGES_CC@\n+CMESSAGES_H = @CMESSAGES_H@\n+CMONEY_CC = @CMONEY_CC@\n+CNUMERIC_CC = @CNUMERIC_CC@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CPU_DEFINES_SRCDIR = @CPU_DEFINES_SRCDIR@\n+CSTDIO_H = @CSTDIO_H@\n+CTIME_CC = @CTIME_CC@\n+CTIME_H = @CTIME_H@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+C_INCLUDE_DIR = @C_INCLUDE_DIR@\n+DBLATEX = @DBLATEX@\n+DEBUG_FLAGS = @DEBUG_FLAGS@\n+DEFS = @DEFS@\n+DOT = @DOT@\n+DOXYGEN = @DOXYGEN@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+ERROR_CONSTANTS_SRCDIR = @ERROR_CONSTANTS_SRCDIR@\n+EXEEXT = @EXEEXT@\n+EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n+FGREP = @FGREP@\n+GLIBCXX_INCLUDES = @GLIBCXX_INCLUDES@\n+GLIBCXX_LIBS = @GLIBCXX_LIBS@\n+GREP = @GREP@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LIBICONV = @LIBICONV@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBICONV = @LTLIBICONV@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n+OPT_LDFLAGS = @OPT_LDFLAGS@\n+OS_INC_SRCDIR = @OS_INC_SRCDIR@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n+RANLIB = @RANLIB@\n+SECTION_FLAGS = @SECTION_FLAGS@\n+SECTION_LDFLAGS = @SECTION_LDFLAGS@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+SYMVER_FILE = @SYMVER_FILE@\n+TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n+USE_NLS = @USE_NLS@\n+VERSION = @VERSION@\n+WARN_FLAGS = @WARN_FLAGS@\n+WERROR = @WERROR@\n+XMLLINT = @XMLLINT@\n+XSLTPROC = @XSLTPROC@\n+XSL_STYLE_DIR = @XSL_STYLE_DIR@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__leading_dot = @am__leading_dot@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+baseline_dir = @baseline_dir@\n+baseline_subdir_switch = @baseline_subdir_switch@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+check_msgfmt = @check_msgfmt@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+enable_shared = @enable_shared@\n+enable_static = @enable_static@\n+exec_prefix = @exec_prefix@\n+glibcxx_MOFILES = @glibcxx_MOFILES@\n+glibcxx_PCHFLAGS = @glibcxx_PCHFLAGS@\n+glibcxx_POFILES = @glibcxx_POFILES@\n+glibcxx_builddir = @glibcxx_builddir@\n+glibcxx_localedir = @glibcxx_localedir@\n+glibcxx_prefixdir = @glibcxx_prefixdir@\n+glibcxx_srcdir = @glibcxx_srcdir@\n+glibcxx_toolexecdir = @glibcxx_toolexecdir@\n+glibcxx_toolexeclibdir = @glibcxx_toolexeclibdir@\n+gxx_include_dir = @gxx_include_dir@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+libtool_VERSION = @libtool_VERSION@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+lt_host_flags = @lt_host_flags@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+multi_basedir = @multi_basedir@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+port_specific_symbol_files = @port_specific_symbol_files@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_os = @target_os@\n+target_vendor = @target_vendor@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+toplevel_builddir = @toplevel_builddir@\n+toplevel_srcdir = @toplevel_srcdir@\n+\n+# May be used by various substitution variables.\n+gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+MAINT_CHARSET = latin1\n+mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n+PWD_COMMAND = $${PWDCMD-pwd}\n+STAMP = echo timestamp >\n+toolexecdir = $(glibcxx_toolexecdir)\n+toolexeclibdir = $(glibcxx_toolexeclibdir)\n+\n+# These bits are all figured out from configure.  Look in acinclude.m4\n+# or configure.ac to see how they are set.  See GLIBCXX_EXPORT_FLAGS.\n+CONFIG_CXXFLAGS = \\\n+\t$(SECTION_FLAGS) $(EXTRA_CXX_FLAGS) -frandom-seed=$@\n+\n+WARN_CXXFLAGS = \\\n+\t$(WARN_FLAGS) $(WERROR) -fdiagnostics-show-location=once -Wabi\n+\n+\n+# -I/-D flags to pass when compiling.\n+AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n+\n+# Convenience library for C++98 runtime.\n+toolexeclib_LTLIBRARIES = libc++98.la\n+noinst_LTLIBRARIES = libc++98convenience.la\n+headers = \n+\n+# Source files linked in via configuration/make substitution for a\n+# particular host.\n+host_sources = \\\n+\tatomicity.cc \\\n+\tcodecvt_members.cc \\\n+\tcollate_members.cc \\\n+\tctype_configure_char.cc \\\n+\tctype_members.cc \\\n+\tmessages_members.cc \\\n+\tmonetary_members.cc \\\n+\tnumeric_members.cc \\\n+\ttime_members.cc\n+\n+atomicity_file = ${glibcxx_srcdir}/$(ATOMICITY_SRCDIR)/atomicity.h\n+\n+# Source files linked in via configuration/make substitution for a\n+# particular host, but with ad hoc naming rules.\n+host_sources_extra = \\\n+\tbasic_file.cc c++locale.cc \\\n+\t${inst_sources} ${ldbl_compat_sources} ${parallel_sources}\n+\n+@ENABLE_PARALLEL_FALSE@parallel_sources = \n+@ENABLE_PARALLEL_TRUE@parallel_sources = parallel_settings.cc \\\n+@ENABLE_PARALLEL_TRUE@\t\t   compatibility-parallel_list.cc \\\n+@ENABLE_PARALLEL_TRUE@\t\t   compatibility-parallel_list-2.cc\n+\n+@GLIBCXX_LDBL_COMPAT_FALSE@ldbl_compat_sources = \n+@GLIBCXX_LDBL_COMPAT_TRUE@ldbl_compat_sources = compatibility-ldbl.cc\n+@ENABLE_EXTERN_TEMPLATE_FALSE@XTEMPLATE_FLAGS = \n+@ENABLE_EXTERN_TEMPLATE_TRUE@XTEMPLATE_FLAGS = -fno-implicit-templates\n+@ENABLE_EXTERN_TEMPLATE_FALSE@inst_sources = \n+@ENABLE_EXTERN_TEMPLATE_TRUE@inst_sources = \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tallocator-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tconcept-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\text-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tios-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tiostream-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tistream-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tlocale-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tmisc-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tostream-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tsstream-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\tstreambuf-inst.cc \\\n+@ENABLE_EXTERN_TEMPLATE_TRUE@\twlocale-inst.cc\n+\n+\n+# Sources present in the src directory, always present.\n+sources = \\\n+\tbitmap_allocator.cc \\\n+\tpool_allocator.cc \\\n+\tmt_allocator.cc \\\n+\tcodecvt.cc \\\n+\tcompatibility.cc \\\n+\tcompatibility-debug_list.cc \\\n+\tcompatibility-debug_list-2.cc \\\n+\tcompatibility-list.cc \\\n+\tcompatibility-list-2.cc \\\n+\tcomplex_io.cc \\\n+\tctype.cc \\\n+\tglobals_io.cc \\\n+\thash_tr1.cc \\\n+\thashtable_tr1.cc \\\n+\tios.cc \\\n+\tios_failure.cc \\\n+\tios_init.cc \\\n+\tios_locale.cc \\\n+\tlist.cc \\\n+\tlocale.cc \\\n+\tlocale_init.cc \\\n+\tlocale_facets.cc \\\n+\tlocalename.cc \\\n+\tmath_stubs_float.cc \\\n+\tmath_stubs_long_double.cc \\\n+\tstdexcept.cc \\\n+\tstrstream.cc \\\n+\ttree.cc \\\n+\tistream.cc \\\n+\tstreambuf.cc \\\n+\tvalarray.cc \\\n+\t${host_sources} \\\n+\t${host_sources_extra}\n+\n+libc__98_la_SOURCES = $(sources) $(inst_sources)\n+libc__98convenience_la_SOURCES = $(sources)  $(inst_sources)\n+\n+# Use special rules for the deprecated source files so that they find\n+# deprecated include files.\n+GLIBCXX_INCLUDE_DIR = $(glibcxx_builddir)/include\n+\n+# Use special rules for parallel mode compilation.\n+PARALLEL_FLAGS = -fopenmp -D_GLIBCXX_PARALLEL -I$(glibcxx_builddir)/../libgomp\n+\n+# AM_CXXFLAGS needs to be in each subdirectory so that it can be\n+# modified in a per-library or per-sub-library way.  Need to manually\n+# set this option because CONFIG_CXXFLAGS has to be after\n+# OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n+# as the occasion calls for it.\n+AM_CXXFLAGS = \\\n+\t$(PIC_CXXFLAGS) \\\n+\t$(XTEMPLATE_FLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS)\n+\n+AM_MAKEFLAGS = \\\n+\t\"gxx_include_dir=$(gxx_include_dir)\"\n+\n+\n+# Libtool notes\n+\n+# 1) Need to explicitly set LTCXXCOMPILE so that AM_CXXFLAGS is\n+# last. (That way, things like -O2 passed down from the toplevel can\n+# be overridden by --enable-debug.)\n+\n+# 2) In general, libtool expects an argument such as `--tag=CXX' when\n+# using the C++ compiler, because that will enable the settings\n+# detected when C++ support was being configured.  However, when no\n+# such flag is given in the command line, libtool attempts to figure\n+# it out by matching the compiler name in each configuration section\n+# against a prefix of the command line.  The problem is that, if the\n+# compiler name and its initial flags stored in the libtool\n+# configuration file don't match those in the command line, libtool\n+# can't decide which configuration to use, and it gives up.  The\n+# correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n+# CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n+# attempt to infer which configuration to use.\n+# We have to put --tag disable-shared after --tag CXX lest things\n+# CXX undo the affect of disable-shared.\n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t       --mode=compile $(CXX) $(TOPLEVEL_INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+\n+LTLDFLAGS = $(shell $(SHELL) $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n+\n+# 3) We'd have a problem when building the shared libstdc++ object if\n+# the rules automake generates would be used.  We cannot allow g++ to\n+# be used since this would add -lstdc++ to the link line which of\n+# course is problematic at this point.  So, we get the top-level\n+# directory to configure libstdc++-v3 to use gcc as the C++\n+# compilation driver.\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared $(LIBTOOLFLAGS) \\\n+\t  --mode=link $(CXX) \\\n+\t  $(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_CXXFLAGS) $(LTLDFLAGS) -o $@\n+\n+all: all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .cc .lo .o .obj\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/fragment.am $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n+\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps src/c++98/Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign --ignore-deps src/c++98/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(am__aclocal_m4_deps):\n+\n+clean-noinstLTLIBRARIES:\n+\t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n+\t@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(toolexeclibdir)\"; \\\n+\t}\n+\n+uninstall-toolexeclibLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(toolexeclibdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\tdone\n+\n+clean-toolexeclibLTLIBRARIES:\n+\t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+libc++98.la: $(libc__98_la_OBJECTS) $(libc__98_la_DEPENDENCIES) \n+\t$(CXXLINK) -rpath $(toolexeclibdir) $(libc__98_la_OBJECTS) $(libc__98_la_LIBADD) $(LIBS)\n+libc++98convenience.la: $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_DEPENDENCIES) \n+\t$(CXXLINK)  $(libc__98convenience_la_OBJECTS) $(libc__98convenience_la_LIBADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+.cc.o:\n+\t$(CXXCOMPILE) -c -o $@ $<\n+\n+.cc.obj:\n+\t$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n+\n+.cc.lo:\n+\t$(LTCXXCOMPILE) -c -o $@ $<\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n+\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tmkid -fID $$unique\n+tags: TAGS\n+\n+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tset x; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: CTAGS\n+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am:\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-toolexeclibLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-toolexeclibLTLIBRARIES\n+\n+.MAKE: install-am install-strip\n+\n+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \\\n+\tclean-libtool clean-noinstLTLIBRARIES \\\n+\tclean-toolexeclibLTLIBRARIES ctags distclean distclean-compile \\\n+\tdistclean-generic distclean-libtool distclean-tags dvi dvi-am \\\n+\thtml html-am info info-am install install-am install-data \\\n+\tinstall-data-am install-dvi install-dvi-am install-exec \\\n+\tinstall-exec-am install-html install-html-am install-info \\\n+\tinstall-info-am install-man install-pdf install-pdf-am \\\n+\tinstall-ps install-ps-am install-strip \\\n+\tinstall-toolexeclibLTLIBRARIES installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \\\n+\tuninstall-am uninstall-toolexeclibLTLIBRARIES\n+\n+\n+codecvt_members.cc: ${glibcxx_srcdir}/$(CCODECVT_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCODECVT_CC) . || true\n+\n+collate_members.cc: ${glibcxx_srcdir}/$(CCOLLATE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCOLLATE_CC) . || true\n+\n+ctype_configure_char.cc: ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc\n+\t$(LN_S) ${glibcxx_srcdir}/$(OS_INC_SRCDIR)/ctype_configure_char.cc . || true\n+\n+ctype_members.cc: ${glibcxx_srcdir}/$(CCTYPE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CCTYPE_CC) . || true\n+\n+messages_members.cc: ${glibcxx_srcdir}/$(CMESSAGES_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CMESSAGES_CC) . || true\n+\n+monetary_members.cc: ${glibcxx_srcdir}/$(CMONEY_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CMONEY_CC) . || true\n+\n+numeric_members.cc: ${glibcxx_srcdir}/$(CNUMERIC_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CNUMERIC_CC) . || true\n+\n+time_members.cc: ${glibcxx_srcdir}/$(CTIME_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CTIME_CC) . || true\n+atomicity.cc: ${atomicity_file}\n+\t$(LN_S) ${atomicity_file} ./atomicity.cc || true\n+\n+c++locale.cc: ${glibcxx_srcdir}/$(CLOCALE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(CLOCALE_CC) ./$@ || true\n+\n+basic_file.cc: ${glibcxx_srcdir}/$(BASIC_FILE_CC)\n+\t$(LN_S) ${glibcxx_srcdir}/$(BASIC_FILE_CC) ./$@ || true\n+\n+vpath % $(top_srcdir)/src/c++98\n+vpath % $(top_srcdir)\n+strstream.lo: strstream.cc\n+\t$(LTCXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n+strstream.o: strstream.cc\n+\t$(CXXCOMPILE) -I$(GLIBCXX_INCLUDE_DIR)/backward -Wno-deprecated -c $<\n+\n+# Use special rules for the concept-checking instantiations so that all\n+# the generated template functions are also instantiated.  Force the checks\n+# to be on so that the instantiations are actually seen.\n+concept-inst.lo: concept-inst.cc\n+\t$(LTCXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n+concept-inst.o: concept-inst.cc\n+\t$(CXXCOMPILE) -D_GLIBCXX_CONCEPT_CHECKS -fimplicit-templates -c $<\n+parallel_settings.lo: parallel_settings.cc\n+\t$(LTCXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n+parallel_settings.o: parallel_settings.cc\n+\t$(CXXCOMPILE) $(PARALLEL_FLAGS) -c $<\n+\n+compatibility-parallel_list.lo: compatibility-parallel_list.cc\n+\t$(LTCXXCOMPILE) -c $<\n+compatibility-parallel_list.o: compatibility-parallel_list.cc\n+\t$(CXXCOMPILE) -c $<\n+\n+compatibility-parallel_list-2.lo: compatibility-parallel_list-2.cc\n+\t$(LTCXXCOMPILE) -c $<\n+compatibility-parallel_list-2.o: compatibility-parallel_list-2.cc\n+\t$(CXXCOMPILE) -c $<\n+\n+# Use special rules for compatibility-ldbl.cc compilation, as we need to\n+# pass -mlong-double-64.\n+@GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.lo: compatibility-ldbl.cc\n+@GLIBCXX_LDBL_COMPAT_TRUE@\t$(LTCXXCOMPILE) -mlong-double-64 -c $<\n+@GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.o: compatibility-ldbl.cc\n+@GLIBCXX_LDBL_COMPAT_TRUE@\t$(CXXCOMPILE) -mlong-double-64 -c $<\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "801468016d271dbd9a7fd57d5c660583b84b801e", "filename": "libstdc++-v3/src/c++98/allocator-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fallocator-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fallocator-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fallocator-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/allocator-inst.cc"}, {"sha": "a9f3a77ba2d01139377091656cbfbac49f9a7fb1", "filename": "libstdc++-v3/src/c++98/bitmap_allocator.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fbitmap_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fbitmap_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fbitmap_allocator.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/bitmap_allocator.cc"}, {"sha": "fdb0896caa29d7d3bbbf8bf83f1396a8dee7f1f8", "filename": "libstdc++-v3/src/c++98/codecvt.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcodecvt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcodecvt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcodecvt.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/codecvt.cc"}, {"sha": "c032ff8598b1f861e5c905c898b6f926f03bde4d", "filename": "libstdc++-v3/src/c++98/compatibility-debug_list-2.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-debug_list-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-debug_list-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-debug_list-2.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-debug_list-2.cc"}, {"sha": "76cceec7205adf4a3bb060b345010eceb3d84975", "filename": "libstdc++-v3/src/c++98/compatibility-debug_list.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-debug_list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-debug_list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-debug_list.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-debug_list.cc"}, {"sha": "a103856adfa00234697399cd36e680b487a56314", "filename": "libstdc++-v3/src/c++98/compatibility-ldbl.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-ldbl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-ldbl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-ldbl.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-ldbl.cc"}, {"sha": "ac69798740dba53402898569f986de6de12ee7bc", "filename": "libstdc++-v3/src/c++98/compatibility-list-2.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list-2.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-list-2.cc"}, {"sha": "a0d706b27a91dd71fe95c109150686ab66185940", "filename": "libstdc++-v3/src/c++98/compatibility-list.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-list.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-list.cc"}, {"sha": "8dc837a361a9341d661632ec5cc521efa284207b", "filename": "libstdc++-v3/src/c++98/compatibility-parallel_list-2.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-parallel_list-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-parallel_list-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-parallel_list-2.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-parallel_list-2.cc"}, {"sha": "05e50fa569df7b029cbcaae66a18f291aaa25db2", "filename": "libstdc++-v3/src/c++98/compatibility-parallel_list.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-parallel_list.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-parallel_list.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility-parallel_list.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility-parallel_list.cc"}, {"sha": "d4cf5d7c1225543d72705a9dd376136ce965bf31", "filename": "libstdc++-v3/src/c++98/compatibility.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcompatibility.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/compatibility.cc"}, {"sha": "4e4aeef46f7dee9b664de1e288a99db4a3058360", "filename": "libstdc++-v3/src/c++98/complex_io.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcomplex_io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcomplex_io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fcomplex_io.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/complex_io.cc"}, {"sha": "829d0db0b68a976e38869fd04f288c74ac0887b3", "filename": "libstdc++-v3/src/c++98/concept-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fconcept-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fconcept-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fconcept-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/concept-inst.cc"}, {"sha": "e246bea10ddb8849aa148ff90fe6ba44f3b1bb20", "filename": "libstdc++-v3/src/c++98/ctype.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fctype.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fctype.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fctype.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ctype.cc"}, {"sha": "831f37cf14e8c0ab3487087ebe9f621bf5cbc054", "filename": "libstdc++-v3/src/c++98/ext-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fext-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fext-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fext-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ext-inst.cc"}, {"sha": "722abacbe84c70d49876de9323e448a91cea3121", "filename": "libstdc++-v3/src/c++98/globals_io.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fglobals_io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fglobals_io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fglobals_io.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/globals_io.cc"}, {"sha": "70ed45bbfbe87325c8838024961e299eef7d44b3", "filename": "libstdc++-v3/src/c++98/hash-long-double-tr1-aux.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhash-long-double-tr1-aux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhash-long-double-tr1-aux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhash-long-double-tr1-aux.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/hash-long-double-tr1-aux.cc"}, {"sha": "a5ac87e585b9c52e874e896ef09429803280553b", "filename": "libstdc++-v3/src/c++98/hash_tr1.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhash_tr1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhash_tr1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhash_tr1.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/hash_tr1.cc"}, {"sha": "53b5e5db4d1eb645dc60012ff3a552689ffc15ef", "filename": "libstdc++-v3/src/c++98/hashtable_tr1.cc", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhashtable_tr1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhashtable_tr1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fhashtable_tr1.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -28,6 +28,6 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n   namespace tr1 \n   {\n-#include \"hashtable-aux.cc\"\n+#include \"../shared/hashtable-aux.cc\"\n   }\n }", "previous_filename": "libstdc++-v3/src/hashtable_tr1.cc"}, {"sha": "10fdaf7cd929fbe7acbecc92d1294a5f08c8dbb9", "filename": "libstdc++-v3/src/c++98/ios-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ios-inst.cc"}, {"sha": "292f1f8d02f58f4ed103ebb3d0c61141d07da4f1", "filename": "libstdc++-v3/src/c++98/ios.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ios.cc"}, {"sha": "1c42f01eddd0f90965d95fa5b09970fa45e7065a", "filename": "libstdc++-v3/src/c++98/ios_failure.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_failure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_failure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_failure.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ios_failure.cc"}, {"sha": "a811daf00cc2d4002a9305e7cc9a3ce0ce5b22a8", "filename": "libstdc++-v3/src/c++98/ios_init.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_init.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ios_init.cc"}, {"sha": "b98b96c6222822f949660d5f62b375805c7b6235", "filename": "libstdc++-v3/src/c++98/ios_locale.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_locale.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ios_locale.cc"}, {"sha": "60f52061e06993fcd9291cd4aa13721eb8a043f2", "filename": "libstdc++-v3/src/c++98/iostream-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fiostream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fiostream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fiostream-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/iostream-inst.cc"}, {"sha": "4d3bc1a74dc8327149fba6acc3df0747dcf52ce6", "filename": "libstdc++-v3/src/c++98/istream-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fistream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fistream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fistream-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/istream-inst.cc"}, {"sha": "6bcf2dbf34606e787152a3b1255e64079dd5e3a5", "filename": "libstdc++-v3/src/c++98/istream.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fistream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fistream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fistream.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/istream.cc"}, {"sha": "6dbad69ac64a11ccf931ac1c53a40adb40820615", "filename": "libstdc++-v3/src/c++98/list.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flist.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flist.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flist.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/list.cc"}, {"sha": "e77c5c95d69e643e8303f7f139ddaf4066c4c4d5", "filename": "libstdc++-v3/src/c++98/locale-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/locale-inst.cc"}, {"sha": "09dccf0d7d396fa11093a4c8f61f5a90417d155a", "filename": "libstdc++-v3/src/c++98/locale.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/locale.cc"}, {"sha": "92552227f80614a92815edf9ffd9022fd4c97c4a", "filename": "libstdc++-v3/src/c++98/locale_facets.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_facets.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_facets.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_facets.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/locale_facets.cc"}, {"sha": "98c228cf15fcc0efc3fcf54b5c7c1726e811d1b6", "filename": "libstdc++-v3/src/c++98/locale_init.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocale_init.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/locale_init.cc"}, {"sha": "52e228281919d8decce57eaa633bd1f96e16e18b", "filename": "libstdc++-v3/src/c++98/localename.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Flocalename.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/localename.cc"}, {"sha": "a226ce46f2660e38b83570717cbdf1d905a36697", "filename": "libstdc++-v3/src/c++98/math_stubs_float.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmath_stubs_float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmath_stubs_float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmath_stubs_float.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/math_stubs_float.cc"}, {"sha": "9f760cfb32f0256e653270081efe17a48bd23329", "filename": "libstdc++-v3/src/c++98/math_stubs_long_double.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmath_stubs_long_double.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmath_stubs_long_double.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmath_stubs_long_double.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/math_stubs_long_double.cc"}, {"sha": "ad09c9b84ddf7e22df57ce82f7a736a64b341aa2", "filename": "libstdc++-v3/src/c++98/misc-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmisc-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmisc-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmisc-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/misc-inst.cc"}, {"sha": "16c2fb8063ee657db98f29406d3ead1e6a782f85", "filename": "libstdc++-v3/src/c++98/mt_allocator.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmt_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmt_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fmt_allocator.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/mt_allocator.cc"}, {"sha": "9c25228771b10d596092068e5a6633cdceaa6ee1", "filename": "libstdc++-v3/src/c++98/ostream-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fostream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fostream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fostream-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/ostream-inst.cc"}, {"sha": "e183c97f45e8468890676df1a8e132fe265c3571", "filename": "libstdc++-v3/src/c++98/parallel_settings.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fparallel_settings.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fparallel_settings.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fparallel_settings.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/parallel_settings.cc"}, {"sha": "f94656b03bae10841ce5531610c654f0169f5efc", "filename": "libstdc++-v3/src/c++98/pool_allocator.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fpool_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fpool_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fpool_allocator.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/pool_allocator.cc"}, {"sha": "5c6877904dd9ff4d4f3c9281053763b23c341edc", "filename": "libstdc++-v3/src/c++98/sstream-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fsstream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fsstream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fsstream-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/sstream-inst.cc"}, {"sha": "dbc8f408e2f4d3294d543951632de68188c790c9", "filename": "libstdc++-v3/src/c++98/stdexcept.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstdexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstdexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstdexcept.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/stdexcept.cc"}, {"sha": "5b563c8e1733b3bd9785d7cf55a15605febc490e", "filename": "libstdc++-v3/src/c++98/streambuf-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstreambuf-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstreambuf-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstreambuf-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/streambuf-inst.cc"}, {"sha": "5bcd0ea8d58516807ecf9e5ccfbe70e925eb4ec6", "filename": "libstdc++-v3/src/c++98/streambuf.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstreambuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstreambuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstreambuf.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/streambuf.cc"}, {"sha": "c76fc60e0ac57bbfe251feac1464eb3d5f095fa6", "filename": "libstdc++-v3/src/c++98/strstream.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstrstream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstrstream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fstrstream.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/strstream.cc"}, {"sha": "0a7f6f9e48599ba2413cf550296e92f0394e3631", "filename": "libstdc++-v3/src/c++98/tree.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Ftree.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/tree.cc"}, {"sha": "5de146bc156141dd67fb6f5ec3451582b70a57bd", "filename": "libstdc++-v3/src/c++98/valarray.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fvalarray.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fvalarray.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fvalarray.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/valarray.cc"}, {"sha": "cdfed0c3e3fd515a8a5d0b16a4f5fe8d48338b0e", "filename": "libstdc++-v3/src/c++98/wlocale-inst.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fwlocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fwlocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fwlocale-inst.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/wlocale-inst.cc"}, {"sha": "23bb00ec584a47fa4c7cf2bf8f7932d1eba1162e", "filename": "libstdc++-v3/src/shared/hashtable-aux.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fshared%2Fhashtable-aux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Fsrc%2Fshared%2Fhashtable-aux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fshared%2Fhashtable-aux.cc?ref=8bae34da8a4625767bc7e1caab295855963ff280", "previous_filename": "libstdc++-v3/src/hashtable-aux.cc"}, {"sha": "d00050621f03e6586065c090c5fde1a1f0eb00c7", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bae34da8a4625767bc7e1caab295855963ff280/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=8bae34da8a4625767bc7e1caab295855963ff280", "patch": "@@ -134,7 +134,6 @@ LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n LIBOBJS = @LIBOBJS@\n LIBS = @LIBS@\n-LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n@@ -161,6 +160,7 @@ PACKAGE_URL = @PACKAGE_URL@\n PACKAGE_VERSION = @PACKAGE_VERSION@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PDFLATEX = @PDFLATEX@\n+PIC_CXXFLAGS = @PIC_CXXFLAGS@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@"}]}