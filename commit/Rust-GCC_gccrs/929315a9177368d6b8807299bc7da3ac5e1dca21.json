{"sha": "929315a9177368d6b8807299bc7da3ac5e1dca21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5MzE1YTkxNzczNjhkNmI4ODA3Mjk5YmM3ZGEzYWM1ZTFkY2EyMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-23T09:14:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-23T09:14:48Z"}, "message": "Makefile.def: Add libcpp build module and dependencies.\n\n2014-10-23  Richard Biener  <rguenther@suse.de>\n\n\t* Makefile.def: Add libcpp build module and dependencies.\n\t* configure.ac: Add libcpp build module.\n\t* Makefile.in: Regenerate.\n\t* configure: Likewise.\n\n\tgcc/\n\t* Makefile.in (BUILD_CPPLIB): Add.\n\t(build/genmatch$(build_exeext)): Use BUILD_CPPLIB, not CPPLIB.\n\tDrop LIBIBERTY.\n\nFrom-SVN: r216579", "tree": {"sha": "7daf07426f472aacdd4be8d9e7e91f7e2d6b2a06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7daf07426f472aacdd4be8d9e7e91f7e2d6b2a06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/929315a9177368d6b8807299bc7da3ac5e1dca21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929315a9177368d6b8807299bc7da3ac5e1dca21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929315a9177368d6b8807299bc7da3ac5e1dca21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929315a9177368d6b8807299bc7da3ac5e1dca21/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "282d3a81fae765d860777a4ce65e42ea75b4fe47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282d3a81fae765d860777a4ce65e42ea75b4fe47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/282d3a81fae765d860777a4ce65e42ea75b4fe47"}], "stats": {"total": 91, "additions": 88, "deletions": 3}, "files": [{"sha": "9097d0f8755a1ad5d5a093839a42b2531f21135e", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -1,3 +1,10 @@\n+2014-10-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* Makefile.def: Add libcpp build module and dependencies.\n+\t* configure.ac: Add libcpp build module.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\n 2014-10-15  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* MAINTAINERS (write-after-approval): Add myself."}, {"sha": "d3bcd9bd4cc1cee933740213414a262c090b6d71", "filename": "Makefile.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -30,6 +30,8 @@ build_modules= { module= flex; };\n build_modules= { module= m4; };\n build_modules= { module= texinfo; };\n build_modules= { module= fixincludes; };\n+build_modules= { module= libcpp;\n+                 extra_configure_flags='--disable-nls am_cv_func_iconv=no';};\n \n host_modules= { module= bfd; bootstrap=true; };\n host_modules= { module= opcodes; bootstrap=true; };\n@@ -301,6 +303,7 @@ dependencies = { module=all-build-flex; on=all-build-m4; };\n dependencies = { module=all-build-libiberty; on=all-build-texinfo; };\n dependencies = { module=all-build-m4; on=all-build-texinfo; };\n dependencies = { module=all-build-fixincludes; on=all-build-libiberty; };\n+dependencies = { module=all-build-libcpp; on=all-build-libiberty; };\n \n // Host modules specific to gcc.\n dependencies = { module=configure-gcc; on=configure-intl; };\n@@ -321,6 +324,7 @@ dependencies = { module=all-gcc; on=all-build-bison; };\n dependencies = { module=all-gcc; on=all-build-flex; };\n dependencies = { module=all-gcc; on=all-build-libiberty; };\n dependencies = { module=all-gcc; on=all-build-fixincludes; };\n+dependencies = { module=all-gcc; on=all-build-libcpp; };\n dependencies = { module=all-gcc; on=all-zlib; };\n dependencies = { module=all-gcc; on=all-libbacktrace; hard=true; };\n dependencies = { module=all-gcc; on=all-libcpp; hard=true; };"}, {"sha": "e3a37371248240ce256e5570acd3e4a39090a21a", "filename": "Makefile.in", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -991,6 +991,7 @@ all-build: maybe-all-build-flex\n all-build: maybe-all-build-m4\n all-build: maybe-all-build-texinfo\n all-build: maybe-all-build-fixincludes\n+all-build: maybe-all-build-libcpp\n \n .PHONY: all-host\n \n@@ -3005,6 +3006,63 @@ all-build-fixincludes: configure-build-fixincludes\n \n \n \n+.PHONY: configure-build-libcpp maybe-configure-build-libcpp\n+maybe-configure-build-libcpp:\n+@if gcc-bootstrap\n+configure-build-libcpp: stage_current\n+@endif gcc-bootstrap\n+@if build-libcpp\n+maybe-configure-build-libcpp: configure-build-libcpp\n+configure-build-libcpp: \n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ttest ! -f $(BUILD_SUBDIR)/libcpp/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(BUILD_SUBDIR)/libcpp ; \\\n+\t$(BUILD_EXPORTS)  \\\n+\techo Configuring in $(BUILD_SUBDIR)/libcpp; \\\n+\tcd \"$(BUILD_SUBDIR)/libcpp\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(BUILD_SUBDIR)/libcpp/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libcpp; \\\n+\trm -f no-such-file || : ; \\\n+\tCONFIG_SITE=no-such-file $(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(BUILD_CONFIGARGS) --build=${build_alias} --host=${build_alias} \\\n+\t  --target=${target_alias} --disable-nls am_cv_func_iconv=no \\\n+\t  || exit 1\n+@endif build-libcpp\n+\n+\n+\n+\n+\n+.PHONY: all-build-libcpp maybe-all-build-libcpp\n+maybe-all-build-libcpp:\n+@if gcc-bootstrap\n+all-build-libcpp: stage_current\n+@endif gcc-bootstrap\n+@if build-libcpp\n+TARGET-build-libcpp=all\n+maybe-all-build-libcpp: all-build-libcpp\n+all-build-libcpp: configure-build-libcpp\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(BUILD_EXPORTS)  \\\n+\t(cd $(BUILD_SUBDIR)/libcpp && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n+\t\t$(TARGET-build-libcpp))\n+@endif build-libcpp\n+\n+\n+\n+\n+\n # --------------------------------------\n # Modules which run on the host machine\n # --------------------------------------\n@@ -48047,6 +48105,7 @@ all-build-flex: maybe-all-build-m4\n all-build-libiberty: maybe-all-build-texinfo\n all-build-m4: maybe-all-build-texinfo\n all-build-fixincludes: maybe-all-build-libiberty\n+all-build-libcpp: maybe-all-build-libiberty\n configure-gcc: maybe-configure-intl\n \n configure-stage1-gcc: maybe-configure-stage1-intl\n@@ -48191,6 +48250,14 @@ all-stage3-gcc: maybe-all-build-fixincludes\n all-stage4-gcc: maybe-all-build-fixincludes\n all-stageprofile-gcc: maybe-all-build-fixincludes\n all-stagefeedback-gcc: maybe-all-build-fixincludes\n+all-gcc: maybe-all-build-libcpp\n+\n+all-stage1-gcc: maybe-all-build-libcpp\n+all-stage2-gcc: maybe-all-build-libcpp\n+all-stage3-gcc: maybe-all-build-libcpp\n+all-stage4-gcc: maybe-all-build-libcpp\n+all-stageprofile-gcc: maybe-all-build-libcpp\n+all-stagefeedback-gcc: maybe-all-build-libcpp\n all-gcc: maybe-all-zlib\n \n all-stage1-gcc: maybe-all-stage1-zlib"}, {"sha": "9b337dc4e31da78acf8f3966b5673e5f24aab2f7", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -2713,7 +2713,7 @@ extra_host_args=\n # these library is used by various programs built for the build\n # environment\n #\n-build_libs=\"build-libiberty\"\n+build_libs=\"build-libiberty build-libcpp\"\n \n # these tools are built for the build environment\n build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\""}, {"sha": "f96e0f278d861587dc195cebca0ff983b5fc62e9", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -126,7 +126,7 @@ extra_host_args=\n # these library is used by various programs built for the build\n # environment\n #\n-build_libs=\"build-libiberty\"\n+build_libs=\"build-libiberty build-libcpp\"\n \n # these tools are built for the build environment\n build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\""}, {"sha": "6d8388fdb50b6b537726d06973226bf5d4849c93", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -1,3 +1,9 @@\n+2014-10-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* Makefile.in (BUILD_CPPLIB): Add.\n+\t(build/genmatch$(build_exeext)): Use BUILD_CPPLIB, not CPPLIB.\n+\tDrop LIBIBERTY.\n+\n 2014-10-23  Richard Biener  <rguenther@suse.de>\n \n \t* fold-const.c (fold_binary_loc): Preserve side-effects of"}, {"sha": "c44c0fd6cf0c443f40bc1204bd7afb04982386cf", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/929315a9177368d6b8807299bc7da3ac5e1dca21/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/929315a9177368d6b8807299bc7da3ac5e1dca21/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=929315a9177368d6b8807299bc7da3ac5e1dca21", "patch": "@@ -981,6 +981,7 @@ else\n LIBIBERTY = ../libiberty/libiberty.a\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/libiberty.a\n endif\n+BUILD_CPPLIB = $(build_libobjdir)/libcpp/libcpp.a\n \n # Dependencies on the intl and portability libraries.\n LIBDEPS= libcommon.a $(CPPLIB) $(LIBIBERTY) $(LIBINTL_DEP) $(LIBICONV_DEP) \\\n@@ -2520,7 +2521,7 @@ genprog = $(genprogerr) check checksum condmd match\n # These programs need libs over and above what they get from the above list.\n build/genautomata$(build_exeext) : BUILD_LIBS += -lm\n \n-build/genmatch$(build_exeext) : $(CPPLIB) $(LIBIBERTY) \\\n+build/genmatch$(build_exeext) : $(BUILD_CPPLIB) \\\n   $(BUILD_ERRORS) build/vec.o build/hash-table.o\n \n # These programs are not linked with the MD reader."}]}