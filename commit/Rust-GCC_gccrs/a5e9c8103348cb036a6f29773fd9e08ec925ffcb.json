{"sha": "a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlOWM4MTAzMzQ4Y2IwMzZhNmYyOTc3M2ZkOWUwOGVjOTI1ZmZjYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2004-02-12T18:25:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-02-12T18:25:09Z"}, "message": "emit-rtl.c (set_mem_attributes_minus_bitpos): Don't kill previous MEM_VOLATILE in REF.\n\n\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Don't kill\n\tprevious MEM_VOLATILE in REF.\n\t* function.c (fixup_var_refs): Save volatile_ok and set to 1.\n\t* expr.c (emit_block_move_via_movstr): Save and restore volatile_ok.\n\nFrom-SVN: r77718", "tree": {"sha": "7b4a430fb294344fe468f64ca7e6d902b0ac2a90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b4a430fb294344fe468f64ca7e6d902b0ac2a90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/comments", "author": null, "committer": null, "parents": [{"sha": "2e9a1f6b05e79f1b7de15d5ae64f3222d989e7e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9a1f6b05e79f1b7de15d5ae64f3222d989e7e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9a1f6b05e79f1b7de15d5ae64f3222d989e7e5"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "3d38c29aeb5c9ae4dac0f52d757289a72222d833", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "patch": "@@ -1,3 +1,10 @@\n+2004-02-12  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Don't kill\n+\tprevious MEM_VOLATILE in REF.\n+\t* function.c (fixup_var_refs): Save volatile_ok and set to 1.\n+\t* expr.c (emit_block_move_via_movstr): Save and restore volatile_ok.\n+\n 2004-02-12  Gunther Nikl  <gni@gecko.de>\n \n \t* config.gcc: Restore support for m68k-openbsd."}, {"sha": "76f292ce4b9bf5f7e2c58ae2b2268093c03b8ca8", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "patch": "@@ -1479,7 +1479,7 @@ set_mem_attributes_minus_bitpos (rtx ref, tree t, int objectp,\n      front-end routine) and use it.  */\n   alias = get_alias_set (t);\n \n-  MEM_VOLATILE_P (ref) = TYPE_VOLATILE (type);\n+  MEM_VOLATILE_P (ref) |= TYPE_VOLATILE (type);\n   MEM_IN_STRUCT_P (ref) = AGGREGATE_TYPE_P (type);\n   RTX_UNCHANGING_P (ref)\n     |= ((lang_hooks.honor_readonly"}, {"sha": "a6d222e339a07ede71cb9a9a0251371f709f3a84", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "patch": "@@ -1417,6 +1417,7 @@ static bool\n emit_block_move_via_movstr (rtx x, rtx y, rtx size, unsigned int align)\n {\n   rtx opalign = GEN_INT (align / BITS_PER_UNIT);\n+  int save_volatile_ok = volatile_ok;\n   enum machine_mode mode;\n \n   /* Since this is a move insn, we don't care about volatility.  */\n@@ -1466,15 +1467,15 @@ emit_block_move_via_movstr (rtx x, rtx y, rtx size, unsigned int align)\n \t  if (pat)\n \t    {\n \t      emit_insn (pat);\n-\t      volatile_ok = 0;\n+\t      volatile_ok = save_volatile_ok;\n \t      return true;\n \t    }\n \t  else\n \t    delete_insns_since (last);\n \t}\n     }\n \n-  volatile_ok = 0;\n+  volatile_ok = save_volatile_ok;\n   return false;\n }\n "}, {"sha": "ca26cf82517ecdb4363bdc43853b203540b87a00", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9c8103348cb036a6f29773fd9e08ec925ffcb/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=a5e9c8103348cb036a6f29773fd9e08ec925ffcb", "patch": "@@ -1503,6 +1503,7 @@ fixup_var_refs (rtx var, enum machine_mode promoted_mode, int unsignedp,\n   rtx first_insn = get_insns ();\n   struct sequence_stack *stack = seq_stack;\n   tree rtl_exps = rtl_expr_chain;\n+  int save_volatile_ok = volatile_ok;\n \n   /* If there's a hash table, it must record all uses of VAR.  */\n   if (ht)\n@@ -1514,6 +1515,9 @@ fixup_var_refs (rtx var, enum machine_mode promoted_mode, int unsignedp,\n       return;\n     }\n \n+  /* Volatile is valid in MEMs because all we're doing in changing the\n+     address inside.  */\n+  volatile_ok = 1;\n   fixup_var_refs_insns (first_insn, var, promoted_mode, unsignedp,\n \t\t\tstack == 0, may_share);\n \n@@ -1541,6 +1545,8 @@ fixup_var_refs (rtx var, enum machine_mode promoted_mode, int unsignedp,\n \t  end_sequence ();\n \t}\n     }\n+\n+  volatile_ok = save_volatile_ok;\n }\n \f\n /* REPLACEMENTS is a pointer to a list of the struct fixup_replacement and X is"}]}