{"sha": "fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU4ZjVkYWY3YjFlZmZiY2Y2MGY5Njk2ZjhmMmJiMTM4YjdlNDQ2Yg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2007-09-26T10:41:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-26T10:41:35Z"}, "message": "a-calend-vms.adb, [...]: Add a section on leap seconds control along with two entities used to enable...\n\n2007-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-calend-vms.adb, a-calend.adb: \n\tAdd a section on leap seconds control along with two entities used to\n\tenable and disable leap seconds support. The array Leap_Second_Times is\n\tnow constant and contains hard time values pre-generated. Remove\n\tall elaboration code used to populate the table of leap seconds.\n\n\t* bindgen.adb: \n\tAdd entity Leap_Seconds_Support to the list of global run-time variables\n\talong with a comment on its usage and values.\n\t(Gen_Adainit_Ada): Add code to generate the declaration and import of\n\tInteger variable Leap_Seconds_Support. Set its value to zero (disabled)\n\tor one (enabled) depending on the presence of binder switch \"-y\".\n\t(Gen_Adainit_C): Add code to generate the declaration of external int\n\t__gl_leap_seconds_support. Set is value to zero (disabled) or one\n\t(enabled) depending on the presence of binder switch \"-y\".\n\n\t* init.c: Add __gl_leap_seconds_support to the list of global values\n\tcomputed by the binder.\n\nFrom-SVN: r128780", "tree": {"sha": "644752c5356a4d7d621cd13a2c67342dfd5036b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/644752c5356a4d7d621cd13a2c67342dfd5036b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "954c111a1a1fa7dafb94df4925d320f0f8bbac7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/954c111a1a1fa7dafb94df4925d320f0f8bbac7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/954c111a1a1fa7dafb94df4925d320f0f8bbac7a"}], "stats": {"total": 288, "additions": 120, "deletions": 168}, "files": [{"sha": "bcfc3dd49bff7d24dee1fcb5c27f71f3192142ba", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 44, "deletions": 89, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "patch": "@@ -112,17 +112,27 @@ package body Ada.Calendar is\n    --  Unchecked_Conversion was employed, the resulting values would be off\n    --  by 100.\n \n-   ---------------------\n-   -- Local Constants --\n-   ---------------------\n+   --------------------------\n+   -- Leap seconds control --\n+   --------------------------\n \n-   --  Currently none of the GNAT targets support leap seconds. At some point\n-   --  it might be necessary to query a C function to determine if the target\n-   --  supports leap seconds, but for now this is deemed unnecessary.\n+   Flag : Integer;\n+   pragma Import (C, Flag, \"__gl_leap_seconds_support\");\n+   --  This imported value is used to determine whether the compilation had\n+   --  binder flag \"-y\" present which enables leap seconds. A value of zero\n+   --  signifies no leap seconds support while a value of one enables the\n+   --  support.\n+\n+   Leap_Support : constant Boolean := Flag = 1;\n+   --  The above flag controls the usage of leap seconds in all Ada.Calendar\n+   --  routines.\n \n-   Leap_Support       : constant Boolean := False;\n    Leap_Seconds_Count : constant Natural := 23;\n \n+   ---------------------\n+   -- Local Constants --\n+   ---------------------\n+\n    --  The range of Ada time expressed as milis since the VMS Epoch\n \n    Ada_Low  : constant Time :=  (10 * 366 +  32 * 365 + 45) * Milis_In_Day;\n@@ -141,14 +151,33 @@ package body Ada.Calendar is\n    End_Of_Time   : constant Time := Ada_High + Time (3) * Milis_In_Day;\n    Start_Of_Time : constant Time := Ada_Low  - Time (3) * Milis_In_Day;\n \n-   Cumulative_Days_Before_Month :\n-     constant array (Month_Number) of Natural :=\n-       (0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334);\n-\n-   Leap_Second_Times : array (1 .. Leap_Seconds_Count) of Time;\n-   --  Each value represents a time value which is one second before a leap\n-   --  second occurence. This table is populated during the elaboration of\n-   --  Ada.Calendar.\n+   --  The following table contains the hard time values of all existing leap\n+   --  seconds. The values are produced by the utility program xleaps.adb.\n+\n+   Leap_Second_Times : constant array (1 .. Leap_Seconds_Count) of Time :=\n+     (35855136000000000,\n+      36014112010000000,\n+      36329472020000000,\n+      36644832030000000,\n+      36960192040000000,\n+      37276416050000000,\n+      37591776060000000,\n+      37907136070000000,\n+      38222496080000000,\n+      38695104090000000,\n+      39010464100000000,\n+      39325824110000000,\n+      39957408120000000,\n+      40747104130000000,\n+      41378688140000000,\n+      41694048150000000,\n+      42166656160000000,\n+      42482016170000000,\n+      42797376180000000,\n+      43271712190000000,\n+      43744320200000000,\n+      44218656210000000,\n+      46427904220000000);\n \n    ---------\n    -- \"+\" --\n@@ -1062,78 +1091,4 @@ package body Ada.Calendar is\n          return get_gmtoff;\n       end UTC_Time_Offset;\n    end Time_Zones_Operations;\n-\n---  Start of elaboration code for Ada.Calendar\n-\n-begin\n-   --  Population of the leap seconds table\n-\n-   if Leap_Support then\n-      declare\n-         type Leap_Second_Date is record\n-            Year  : Year_Number;\n-            Month : Month_Number;\n-            Day   : Day_Number;\n-         end record;\n-\n-         Leap_Second_Dates :\n-           constant array (1 .. Leap_Seconds_Count) of Leap_Second_Date :=\n-             ((1972,  6, 30), (1972, 12, 31), (1973, 12, 31), (1974, 12, 31),\n-              (1975, 12, 31), (1976, 12, 31), (1977, 12, 31), (1978, 12, 31),\n-              (1979, 12, 31), (1981,  6, 30), (1982,  6, 30), (1983,  6, 30),\n-              (1985,  6, 30), (1987, 12, 31), (1989, 12, 31), (1990, 12, 31),\n-              (1992,  6, 30), (1993,  6, 30), (1994,  6, 30), (1995, 12, 31),\n-              (1997,  6, 30), (1998, 12, 31), (2005, 12, 31));\n-\n-         Ada_Min_Year       : constant Year_Number := Year_Number'First;\n-         Days_In_Four_Years : constant := 365 * 3 + 366;\n-         VMS_Days           : constant := 10 * 366 + 32 * 365 + 45;\n-\n-         Days  : Natural;\n-         Leap  : Leap_Second_Date;\n-         Years : Natural;\n-\n-      begin\n-         for Index in 1 .. Leap_Seconds_Count loop\n-            Leap := Leap_Second_Dates (Index);\n-\n-            --  Calculate the number of days from the start of Ada time until\n-            --  the current leap second occurence. Non-leap centenial years\n-            --  are not accounted for in these calculations since there are\n-            --  no leap seconds after 2100 yet.\n-\n-            Years := Leap.Year - Ada_Min_Year;\n-            Days  := (Years / 4) * Days_In_Four_Years;\n-            Years := Years mod 4;\n-\n-            if Years = 1 then\n-               Days := Days + 365;\n-\n-            elsif Years = 2 then\n-               Days := Days + 365 * 2;\n-\n-            elsif Years = 3 then\n-               Days := Days + 365 * 3;\n-            end if;\n-\n-            Days := Days + Cumulative_Days_Before_Month (Leap.Month);\n-\n-            if Is_Leap (Leap.Year)\n-              and then Leap.Month > 2\n-            then\n-               Days := Days + 1;\n-            end if;\n-\n-            --  Add the number of days since the start of VMS time till the\n-            --  start of Ada time.\n-\n-            Days := Days + Leap.Day + VMS_Days;\n-\n-            --  Index - 1 previous leap seconds are added to Time (Index)\n-\n-            Leap_Second_Times (Index) :=\n-              (Time (Days) * Secs_In_Day + Time (Index - 1)) * Mili;\n-         end loop;\n-      end;\n-   end if;\n end Ada.Calendar;"}, {"sha": "eb77eac37b20536f20fd3ca54671b21db3085c2d", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 44, "deletions": 78, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "patch": "@@ -127,17 +127,27 @@ package body Ada.Calendar is\n \n    type Time_Dur is range 0 .. 2 ** 63 - 1;\n \n-   ---------------------\n-   -- Local Constants --\n-   ---------------------\n+   --------------------------\n+   -- Leap seconds control --\n+   --------------------------\n+\n+   Flag : Integer;\n+   pragma Import (C, Flag, \"__gl_leap_seconds_support\");\n+   --  This imported value is used to determine whether the compilation had\n+   --  binder flag \"-y\" present which enables leap seconds. A value of zero\n+   --  signifies no leap seconds support while a value of one enables the\n+   --  support.\n \n-   --  Currently none of the GNAT targets support leap seconds. At some point\n-   --  it might be necessary to query a C function to determine if the target\n-   --  supports leap seconds, but for now this is deemed unnecessary.\n+   Leap_Support : constant Boolean := Flag = 1;\n+   --  The above flag controls the usage of leap seconds in all Ada.Calendar\n+   --  routines.\n \n-   Leap_Support       : constant Boolean := False;\n    Leap_Seconds_Count : constant Natural := 23;\n \n+   ---------------------\n+   -- Local Constants --\n+   ---------------------\n+\n    Ada_Min_Year          : constant Year_Number := Year_Number'First;\n    Secs_In_Four_Years    : constant := (3 * 365 + 366) * Secs_In_Day;\n    Secs_In_Non_Leap_Year : constant := 365 * Secs_In_Day;\n@@ -174,10 +184,33 @@ package body Ada.Calendar is\n      constant array (Month_Number) of Natural :=\n        (0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334);\n \n-   Leap_Second_Times : array (1 .. Leap_Seconds_Count) of Time_Rep;\n-   --  Each value represents a time value which is one second before a leap\n-   --  second occurence. This table is populated during the elaboration of\n-   --  Ada.Calendar.\n+   --  The following table contains the hard time values of all existing leap\n+   --  seconds. The values are produced by the utility program xleaps.adb.\n+\n+   Leap_Second_Times : constant array (1 .. Leap_Seconds_Count) of Time_Rep :=\n+     (-5601484800000000000,\n+      -5585587199000000000,\n+      -5554051198000000000,\n+      -5522515197000000000,\n+      -5490979196000000000,\n+      -5459356795000000000,\n+      -5427820794000000000,\n+      -5396284793000000000,\n+      -5364748792000000000,\n+      -5317487991000000000,\n+      -5285951990000000000,\n+      -5254415989000000000,\n+      -5191257588000000000,\n+      -5112287987000000000,\n+      -5049129586000000000,\n+      -5017593585000000000,\n+      -4970332784000000000,\n+      -4938796783000000000,\n+      -4907260782000000000,\n+      -4859827181000000000,\n+      -4812566380000000000,\n+      -4765132779000000000,\n+      -4544207978000000000);\n \n    ---------\n    -- \"+\" --\n@@ -1318,71 +1351,4 @@ package body Ada.Calendar is\n \n begin\n    System.OS_Primitives.Initialize;\n-\n-   --  Population of the leap seconds table\n-\n-   if Leap_Support then\n-      declare\n-         type Leap_Second_Date is record\n-            Year  : Year_Number;\n-            Month : Month_Number;\n-            Day   : Day_Number;\n-         end record;\n-\n-         Leap_Second_Dates :\n-           constant array (1 .. Leap_Seconds_Count) of Leap_Second_Date :=\n-             ((1972,  6, 30), (1972, 12, 31), (1973, 12, 31), (1974, 12, 31),\n-              (1975, 12, 31), (1976, 12, 31), (1977, 12, 31), (1978, 12, 31),\n-              (1979, 12, 31), (1981,  6, 30), (1982,  6, 30), (1983,  6, 30),\n-              (1985,  6, 30), (1987, 12, 31), (1989, 12, 31), (1990, 12, 31),\n-              (1992,  6, 30), (1993,  6, 30), (1994,  6, 30), (1995, 12, 31),\n-              (1997,  6, 30), (1998, 12, 31), (2005, 12, 31));\n-\n-         Days_In_Four_Years : constant := 365 * 3 + 366;\n-\n-         Days  : Natural;\n-         Leap  : Leap_Second_Date;\n-         Years : Natural;\n-\n-      begin\n-         for Index in 1 .. Leap_Seconds_Count loop\n-            Leap := Leap_Second_Dates (Index);\n-\n-            --  Calculate the number of days from the start of Ada time until\n-            --  the current leap second occurence. Non-leap centenial years\n-            --  are not accounted for in these calculations since there are\n-            --  no leap seconds after 2100 yet.\n-\n-            Years := Leap.Year - Ada_Min_Year;\n-            Days  := (Years / 4) * Days_In_Four_Years;\n-            Years := Years mod 4;\n-\n-            if Years = 1 then\n-               Days := Days + 365;\n-\n-            elsif Years = 2 then\n-               Days := Days + 365 * 2;\n-\n-            elsif Years = 3 then\n-               Days := Days + 365 * 3;\n-            end if;\n-\n-            Days := Days + Cumulative_Days_Before_Month (Leap.Month);\n-\n-            if Is_Leap (Leap.Year)\n-              and then Leap.Month > 2\n-            then\n-               Days := Days + 1;\n-            end if;\n-\n-            Days := Days + Leap.Day;\n-\n-            --  Index - 1 previous leap seconds are added to Time (Index) as\n-            --  well as the lower buffer for time zones.\n-\n-            Leap_Second_Times (Index) := Ada_Low +\n-              (Time_Rep (Days) * Secs_In_Day + Time_Rep (Index - 1)) * Nano;\n-         end loop;\n-      end;\n-   end if;\n end Ada.Calendar;"}, {"sha": "bf15ffb3ca3310d90ff06685fd6e5519e2ff58e1", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "patch": "@@ -124,6 +124,7 @@ package body Bindgen is\n    --     Zero_Cost_Exceptions          : Integer;\n    --     Detect_Blocking               : Integer;\n    --     Default_Stack_Size            : Integer;\n+   --     Leap_Seconds_Support          : Integer;\n \n    --  Main_Priority is the priority value set by pragma Priority in the\n    --  main program. If no such pragma is present, the value is -1.\n@@ -207,6 +208,10 @@ package body Bindgen is\n    --  Default_Stack_Size is the default stack size used when creating an\n    --  Ada task with no explicit Storize_Size clause.\n \n+   --  Leap_Seconds_Support denotes whether leap seconds have been enabled or\n+   --  disabled. A value of zero indicates that leap seconds are turned \"off\",\n+   --  while a value of one signifies \"on\" status.\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -575,6 +580,9 @@ package body Bindgen is\n          WBI (\"      Default_Stack_Size : Integer;\");\n          WBI (\"      pragma Import (C, Default_Stack_Size, \" &\n               \"\"\"__gl_default_stack_size\"\");\");\n+         WBI (\"      Leap_Seconds_Support : Integer;\");\n+         WBI (\"      pragma Import (C, Leap_Seconds_Support, \" &\n+              \"\"\"__gl_leap_seconds_support\"\");\");\n \n          --  Import entry point for elaboration time signal handler\n          --  installation, and indication of if it's been called previously.\n@@ -686,6 +694,17 @@ package body Bindgen is\n          Set_String (\";\");\n          Write_Statement_Buffer;\n \n+         Set_String (\"      Leap_Seconds_Support := \");\n+\n+         if Leap_Seconds_Support then\n+            Set_Int (1);\n+         else\n+            Set_Int (0);\n+         end if;\n+\n+         Set_String (\";\");\n+         Write_Statement_Buffer;\n+\n          --  Generate call to Install_Handler\n \n          WBI (\"\");\n@@ -925,6 +944,18 @@ package body Bindgen is\n          Set_String (\";\");\n          Write_Statement_Buffer;\n \n+         WBI (\"   extern int __gl_leap_seconds_support;\");\n+         Set_String (\"   __gl_leap_seconds_support = \");\n+\n+         if Leap_Seconds_Support then\n+            Set_Int (1);\n+         else\n+            Set_Int (0);\n+         end if;\n+\n+         Set_String (\";\");\n+         Write_Statement_Buffer;\n+\n          WBI (\"\");\n \n          --  Install elaboration time signal handler"}, {"sha": "ba36d38458d8bf38ffa7f51e534f714eb3d24261", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=fe8f5daf7b1effbcf60f9696f8f2bb138b7e446b", "patch": "@@ -101,6 +101,7 @@ int   __gl_exception_tracebacks          = 0;\n int   __gl_zero_cost_exceptions          = 0;\n int   __gl_detect_blocking               = 0;\n int   __gl_default_stack_size            = -1;\n+int   __gl_leap_seconds_support          = 0;\n \n /* Indication of whether synchronous signal handler has already been\n    installed by a previous call to adainit */\n@@ -444,7 +445,6 @@ __gnat_set_code_loc (struct sigcontext *context, char *pc)\n   context->sc_pc = (long) pc;\n }\n \n-\n size_t\n __gnat_machine_state_length (void)\n {"}]}