{"sha": "02a39a93ce25e78a1698001e1fefd6d96f644231", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhMzlhOTNjZTI1ZTc4YTE2OTgwMDFlMWZlZmQ2ZDk2ZjY0NDIzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-09-15T23:55:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-09-15T23:55:35Z"}, "message": "call.c (convert_like_real): Use the underlying type of the reference for the temporary.\n\n\t* call.c (convert_like_real): Use the underlying type of the\n\treference for the temporary.\n\nFrom-SVN: r164320", "tree": {"sha": "ab157a8a677650ad8da116c8ad3d8f7401e06e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab157a8a677650ad8da116c8ad3d8f7401e06e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a39a93ce25e78a1698001e1fefd6d96f644231", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a39a93ce25e78a1698001e1fefd6d96f644231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a39a93ce25e78a1698001e1fefd6d96f644231", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a39a93ce25e78a1698001e1fefd6d96f644231/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9fa07b131e21a921ecc535f736882a5fb0698a9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa07b131e21a921ecc535f736882a5fb0698a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fa07b131e21a921ecc535f736882a5fb0698a9c"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "27cb326a7635eea7c09201f13f1c0eeb77f7d2e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a39a93ce25e78a1698001e1fefd6d96f644231/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a39a93ce25e78a1698001e1fefd6d96f644231/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=02a39a93ce25e78a1698001e1fefd6d96f644231", "patch": "@@ -1,3 +1,8 @@\n+2010-09-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (convert_like_real): Use the underlying type of the\n+\treference for the temporary.\n+\n 2010-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/45635"}, {"sha": "2b9b848a73099e23fa27e025ccc34b961a5bf0db", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a39a93ce25e78a1698001e1fefd6d96f644231/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a39a93ce25e78a1698001e1fefd6d96f644231/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=02a39a93ce25e78a1698001e1fefd6d96f644231", "patch": "@@ -5207,10 +5207,16 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t    || TREE_CODE (expr) == CONSTRUCTOR\n \t    || TREE_CODE (expr) == VA_ARG_EXPR)\n \t  {\n-\t    tree type = convs->u.next->type;\n+\t    /* Otherwise, a temporary of type \"cv1 T1\" is created and\n+\t       initialized from the initializer expression using the rules\n+\t       for a non-reference copy-initialization (8.5).  */\n+\n+\t    tree type = TREE_TYPE (ref_type);\n \t    cp_lvalue_kind lvalue = real_lvalue_p (expr);\n \n-\t    if (!CP_TYPE_CONST_NON_VOLATILE_P (TREE_TYPE (ref_type))\n+\t    gcc_assert (same_type_ignoring_top_level_qualifiers_p\n+\t\t\t(type, convs->u.next->type));\n+\t    if (!CP_TYPE_CONST_NON_VOLATILE_P (type)\n \t\t&& !TYPE_REF_IS_RVALUE (ref_type))\n \t      {\n \t\tif (complain & tf_error)"}]}