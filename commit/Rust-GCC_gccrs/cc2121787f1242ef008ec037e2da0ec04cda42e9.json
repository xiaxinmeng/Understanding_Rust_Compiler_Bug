{"sha": "cc2121787f1242ef008ec037e2da0ec04cda42e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyMTIxNzg3ZjEyNDJlZjAwOGVjMDM3ZTJkYTBlYzA0Y2RhNDJlOQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-05-28T03:21:07Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2004-05-28T03:21:07Z"}, "message": "t-linux (SHLIB_MAPFILES): Use sh specific libgcc-std.ver.\n\n\t* config/sh/t-linux (SHLIB_MAPFILES): Use sh specific\n\tlibgcc-std.ver.\n\t* config/sh/libgcc-std.ver: New file.\n\nFrom-SVN: r82350", "tree": {"sha": "721e9715ce0c7a36f2216ffad7045e82d93fe2d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/721e9715ce0c7a36f2216ffad7045e82d93fe2d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2121787f1242ef008ec037e2da0ec04cda42e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2121787f1242ef008ec037e2da0ec04cda42e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2121787f1242ef008ec037e2da0ec04cda42e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2121787f1242ef008ec037e2da0ec04cda42e9/comments", "author": null, "committer": null, "parents": [{"sha": "aed30657939aab74f62b96386be0e96f9e902a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed30657939aab74f62b96386be0e96f9e902a1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed30657939aab74f62b96386be0e96f9e902a1c"}], "stats": {"total": 226, "additions": 224, "deletions": 2}, "files": [{"sha": "9e1cc8930d42c96e4376af4ee908147ce9f5c620", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2121787f1242ef008ec037e2da0ec04cda42e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2121787f1242ef008ec037e2da0ec04cda42e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc2121787f1242ef008ec037e2da0ec04cda42e9", "patch": "@@ -1,3 +1,9 @@\n+2004-05-27  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/t-linux (SHLIB_MAPFILES): Use sh specific\n+\tlibgcc-std.ver.\n+\t* config/sh/libgcc-std.ver: New file.\n+\n 2004-05-27  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* except.c: Revert change of 2004-05-26."}, {"sha": "6476ec84aa06ed54c3a972b713cd07ed2db48d90", "filename": "gcc/config/sh/libgcc-std.ver", "status": "added", "additions": 213, "deletions": 0, "changes": 213, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2121787f1242ef008ec037e2da0ec04cda42e9/gcc%2Fconfig%2Fsh%2Flibgcc-std.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2121787f1242ef008ec037e2da0ec04cda42e9/gcc%2Fconfig%2Fsh%2Flibgcc-std.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flibgcc-std.ver?ref=cc2121787f1242ef008ec037e2da0ec04cda42e9", "patch": "@@ -0,0 +1,213 @@\n+GCC_3.0 {\n+  # libgcc1 integer symbols\n+  __absvsi2\n+  __addvsi3\n+  # __ashlsi3\n+  # __ashrsi3\n+  __divsi3\n+  # __lshrsi3\n+  __modsi3\n+  __mulsi3\n+  __mulvsi3\n+  __negvsi2\n+  __subvsi3\n+  # __udivsi3\n+  __umodsi3\n+\n+  # libgcc1 floating point symbols\n+  __addsf3\n+  __adddf3\n+  __addxf3\n+  __addtf3\n+  __divsf3\n+  __divdf3\n+  __divxf3\n+  __divtf3\n+  __eqsf2\n+  __eqdf2\n+  __eqxf2\n+  __eqtf2\n+  __extenddfxf2\n+  __extenddftf2\n+  __extendsfdf2\n+  __extendsfxf2\n+  __extendsftf2\n+  __fixsfsi\n+  __fixdfsi\n+  __fixxfsi\n+  __fixtfsi\n+  __floatsisf\n+  __floatsidf\n+  __floatsixf\n+  __floatsitf\n+  __gesf2\n+  __gedf2\n+  __gexf2\n+  __getf2\n+  __gtsf2\n+  __gtdf2\n+  __gtxf2\n+  __gttf2\n+  __lesf2\n+  __ledf2\n+  __lexf2\n+  __letf2\n+  __ltsf2\n+  __ltdf2\n+  __ltxf2\n+  __lttf2\n+  __mulsf3\n+  __muldf3\n+  __mulxf3\n+  __multf3\n+  __negsf2\n+  __negdf2\n+  __negxf2\n+  __negtf2\n+  __nesf2\n+  __nedf2\n+  __nexf2\n+  __netf2\n+  __subsf3\n+  __subdf3\n+  __subxf3\n+  __subtf3\n+  __truncdfsf2\n+  __truncxfsf2\n+  __trunctfsf2\n+  __truncxfdf2\n+  __trunctfdf2\n+\n+  # libgcc2 DImode arithmetic (for 32-bit targets).\n+  __absvdi2\n+  __addvdi3\n+  __ashldi3\n+  __ashrdi3\n+  __cmpdi2\n+  __divdi3\n+  __ffsdi2\n+  __fixdfdi\n+  __fixsfdi\n+  __fixtfdi\n+  __fixxfdi\n+  __fixunsdfdi\n+  __fixunsdfsi\n+  __fixunssfsi\n+  __fixunssfdi\n+  __fixunstfdi\n+  __fixunstfsi\n+  __fixunsxfdi\n+  __fixunsxfsi\n+  __floatdidf\n+  __floatdisf\n+  __floatdixf\n+  __floatditf\n+  __lshrdi3\n+  __moddi3\n+  __muldi3\n+  __mulvdi3\n+  __negdi2\n+  __negvdi2\n+  __subvdi3\n+  __ucmpdi2\n+  __udivdi3\n+  __udivmoddi4\n+  __umoddi3\n+\n+  # libgcc2 TImode arithmetic (for 64-bit targets).\n+  __ashlti3\n+  __ashrti3\n+  __cmpti2\n+  __divti3\n+  __ffsti2\n+  __fixdfti\n+  __fixsfti\n+  __fixtfti\n+  __fixxfti\n+  __lshrti3\n+  __modti3\n+  __multi3\n+  __negti2\n+  __ucmpti2\n+  __udivmodti4\n+  __udivti3\n+  __umodti3\n+  __fixunsdfti\n+  __fixunssfti\n+  __fixunstfti\n+  __fixunsxfti\n+  __floattidf\n+  __floattisf\n+  __floattixf\n+  __floattitf\n+\n+  # Used to deal with trampoline initialization on some platforms\n+  __clear_cache\n+\n+  # EH symbols\n+  _Unwind_DeleteException\n+  _Unwind_Find_FDE\n+  _Unwind_ForcedUnwind\n+  _Unwind_GetGR\n+  _Unwind_GetIP\n+  _Unwind_GetLanguageSpecificData\n+  _Unwind_GetRegionStart\n+  _Unwind_GetTextRelBase\n+  _Unwind_GetDataRelBase\n+  _Unwind_RaiseException\n+  _Unwind_Resume\n+  _Unwind_SetGR\n+  _Unwind_SetIP\n+  __deregister_frame\n+  __deregister_frame_info\n+  __deregister_frame_info_bases\n+  __register_frame\n+  __register_frame_info\n+  __register_frame_info_bases\n+  __register_frame_info_table\n+  __register_frame_info_table_bases\n+  __register_frame_table\n+\n+  # SjLj EH symbols\n+  _Unwind_SjLj_Register\n+  _Unwind_SjLj_Unregister\n+  _Unwind_SjLj_RaiseException\n+  _Unwind_SjLj_ForcedUnwind\n+  _Unwind_SjLj_Resume\n+}\n+\n+%inherit GCC_3.3 GCC_3.0\n+GCC_3.3 {\n+  _Unwind_FindEnclosingFunction\n+  _Unwind_GetCFA\n+  _Unwind_Backtrace\n+  _Unwind_Resume_or_Rethrow\n+  _Unwind_SjLj_Resume_or_Rethrow\n+}\n+\n+%inherit GCC_3.3.1 GCC_3.3\n+GCC_3.3.1 {\n+  __gcc_personality_sj0\n+  __gcc_personality_v0\n+}\n+\n+%inherit GCC_3.3.2 GCC_3.3.1\n+GCC_3.3.2 {\n+}\n+\n+%inherit GCC_3.4 GCC_3.3.2\n+GCC_3.4 {\n+  # bit scanning and counting built-ins\n+  __clzsi2\n+  __clzdi2\n+  __clzti2\n+  __ctzsi2\n+  __ctzdi2\n+  __ctzti2\n+  __popcountsi2\n+  __popcountdi2\n+  __popcountti2\n+  __paritysi2\n+  __paritydi2\n+  __parityti2\n+}"}, {"sha": "12969d2f8e615acc05d9944927b458e329b7ed56", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2121787f1242ef008ec037e2da0ec04cda42e9/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2121787f1242ef008ec037e2da0ec04cda42e9/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=cc2121787f1242ef008ec037e2da0ec04cda42e9", "patch": "@@ -11,8 +11,11 @@ MULTILIB_EXCEPTIONS=\n EXTRA_MULTILIB_PARTS= crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n \n # Override t-slibgcc-elf-ver to export some libgcc symbols with\n-# the symbol versions that glibc used.\n-SHLIB_MAPFILES =  $(srcdir)/libgcc-std.ver $(srcdir)/config/sh/libgcc-glibc.ver\n+# the symbol versions that glibc used.  Also use an sh specific\n+# libgcc-std.ver to avoid to export some lib1func routines which\n+# should not be called via PLT.\n+SHLIB_MAPFILES =  $(srcdir)/config/sh/libgcc-std.ver \\\n+\t$(srcdir)/config/sh/libgcc-glibc.ver\n \n # Override SHLIB_LINK and SHLIB_INSTALL to use linker script\n # libgcc_s.so."}]}