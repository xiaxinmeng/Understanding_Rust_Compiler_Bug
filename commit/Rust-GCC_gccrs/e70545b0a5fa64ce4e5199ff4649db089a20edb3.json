{"sha": "e70545b0a5fa64ce4e5199ff4649db089a20edb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcwNTQ1YjBhNWZhNjRjZTRlNTE5OWZmNDY0OWRiMDg5YTIwZWRiMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2009-10-28T14:36:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-28T14:36:28Z"}, "message": "var-tracking.c (emit_note_insn_var_location): Get the mode of a variable part from its REG, MEM or VALUE.\n\n\t* var-tracking.c (emit_note_insn_var_location): Get the mode of\n\ta variable part from its REG, MEM or VALUE.\n\nFrom-SVN: r153665", "tree": {"sha": "617a6536e511b810e56896ddde09802e5045d7ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/617a6536e511b810e56896ddde09802e5045d7ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e70545b0a5fa64ce4e5199ff4649db089a20edb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70545b0a5fa64ce4e5199ff4649db089a20edb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e70545b0a5fa64ce4e5199ff4649db089a20edb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e70545b0a5fa64ce4e5199ff4649db089a20edb3/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f883d997700c6f3d5f14d3ade0a924a9dff118ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f883d997700c6f3d5f14d3ade0a924a9dff118ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f883d997700c6f3d5f14d3ade0a924a9dff118ef"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "8c9048e65ac669fe227d775f78ae872cf37ff4c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e70545b0a5fa64ce4e5199ff4649db089a20edb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e70545b0a5fa64ce4e5199ff4649db089a20edb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e70545b0a5fa64ce4e5199ff4649db089a20edb3", "patch": "@@ -1,3 +1,8 @@\n+2009-10-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* var-tracking.c (emit_note_insn_var_location): Get the mode of\n+\ta variable part from its REG, MEM or VALUE.\n+\n 2009-10-28  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (gimple_get_alias_set): Fix comment typo."}, {"sha": "61ce32bca835e5408d09ce0409190ca3a5415865", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e70545b0a5fa64ce4e5199ff4649db089a20edb3/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e70545b0a5fa64ce4e5199ff4649db089a20edb3/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=e70545b0a5fa64ce4e5199ff4649db089a20edb3", "patch": "@@ -6416,7 +6416,7 @@ emit_note_insn_var_location (void **varp, void *data)\n \t  continue;\n \t}\n       loc[n_var_parts] = loc2;\n-      mode = GET_MODE (loc[n_var_parts]);\n+      mode = GET_MODE (var->var_part[i].loc_chain->loc);\n       initialized = var->var_part[i].loc_chain->init;\n       last_limit = offsets[n_var_parts] + GET_MODE_SIZE (mode);\n \n@@ -6427,9 +6427,9 @@ emit_note_insn_var_location (void **varp, void *data)\n \t  break;\n       if (j < var->n_var_parts\n \t  && wider_mode != VOIDmode\n+\t  && mode == GET_MODE (var->var_part[j].loc_chain->loc)\n \t  && (loc2 = vt_expand_loc (var->var_part[j].loc_chain->loc, vars))\n \t  && GET_CODE (loc[n_var_parts]) == GET_CODE (loc2)\n-\t  && mode == GET_MODE (loc2)\n \t  && last_limit == var->var_part[j].offset)\n \t{\n \t  rtx new_loc = NULL;"}]}