{"sha": "1946537baae0c1012b0ab5a58c4f514189d885f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0NjUzN2JhYWUwYzEwMTJiMGFiNWE1OGM0ZjUxNDE4OWQ4ODVmNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-07-26T22:24:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-07-26T22:24:00Z"}, "message": "input.c (feed_input): Add file, line parms.\n\n\t* input.c (feed_input): Add file, line parms.\n\t* lex.c (begin_definition_of_inclass_inline, feed_defarg): Adjust.\n\t(real_yylex): Check linemode before input_redirected().\n\n\t* typeck.c (c_expand_return): Downgrade pedwarn about returning NULL\n\tfrom op new to warning.\n\nFrom-SVN: r28276", "tree": {"sha": "c7dd083b74db4d0b977db93bd2215af49543a9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7dd083b74db4d0b977db93bd2215af49543a9a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1946537baae0c1012b0ab5a58c4f514189d885f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1946537baae0c1012b0ab5a58c4f514189d885f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1946537baae0c1012b0ab5a58c4f514189d885f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1946537baae0c1012b0ab5a58c4f514189d885f5/comments", "author": null, "committer": null, "parents": [{"sha": "e7f9deaeff2bb58c6dbe62e941828677b387a59e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f9deaeff2bb58c6dbe62e941828677b387a59e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f9deaeff2bb58c6dbe62e941828677b387a59e"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "afa0b86e8acc769ecdcc9782d93e00ec2b83a0ca", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1946537baae0c1012b0ab5a58c4f514189d885f5", "patch": "@@ -1,3 +1,12 @@\n+1999-07-26  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* input.c (feed_input): Add file, line parms.\n+\t* lex.c (begin_definition_of_inclass_inline, feed_defarg): Adjust.\n+\t(real_yylex): Check linemode before input_redirected().\n+\n+\t* typeck.c (c_expand_return): Downgrade pedwarn about returning NULL\n+\tfrom op new to warning.\n+\n 1999-07-26  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (ncp_convert): Rename to perform_implicit_conversion."}, {"sha": "12ad47ba52100bd145a60bea1fedc6a766168c4e", "filename": "gcc/cp/input.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finput.c?ref=1946537baae0c1012b0ab5a58c4f514189d885f5", "patch": "@@ -69,7 +69,7 @@ extern unsigned char *yy_cur, *yy_lim;\n extern int yy_get_token ();\n #endif\n \n-extern void feed_input PROTO((char *, int));\n+extern void feed_input PROTO((char *, int, char *, int));\n extern void put_input PROTO((int));\n extern void put_back PROTO((int));\n extern int getch PROTO((void));\n@@ -110,9 +110,11 @@ free_input (inp)\n \n inline\n void\n-feed_input (str, len)\n+feed_input (str, len, file, line)\n      char *str;\n      int len;\n+     char *file;\n+     int line;\n {\n   struct input_source *inp = allocate_input ();\n \n@@ -126,6 +128,9 @@ feed_input (str, len)\n     my_friendly_abort (990710);\n   cpp_push_buffer (&parse_in, str, len);\n   CPP_BUFFER (&parse_in)->manual_pop = 1;\n+  CPP_BUFFER (&parse_in)->nominal_fname\n+    = CPP_BUFFER (&parse_in)->fname = file;\n+  CPP_BUFFER (&parse_in)->lineno = line;\n #else\n   inp->str = str;\n   inp->length = len;\n@@ -134,6 +139,8 @@ feed_input (str, len)\n   putback.buffer = NULL;\n   putback.buffer_size = 0;\n   putback.index = -1;\n+  lineno = line;\n+  input_filename = file;\n #endif\n   inp->next = input;\n   inp->filename = input_filename;"}, {"sha": "d1d18a47f3762e4106bde58b094d9ecee58c56e6", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=1946537baae0c1012b0ab5a58c4f514189d885f5", "patch": "@@ -1266,9 +1266,7 @@ begin_definition_of_inclass_inline (pi)\n   if (context)\n     push_cp_function_context (context);\n \n-  feed_input (pi->buf, pi->len);\n-  lineno = pi->lineno;\n-  input_filename = pi->filename;\n+  feed_input (pi->buf, pi->len, pi->filename, pi->lineno);\n   yychar = PRE_PARSED_FUNCTION_DECL;\n   yylval.ttype = build_tree_list ((tree) pi, pi->fndecl);\n   /* Pass back a handle to the rest of the inline functions, so that they\n@@ -1878,12 +1876,20 @@ feed_defarg (f, p)\n      tree f, p;\n {\n   tree d = TREE_PURPOSE (p);\n-  feed_input (DEFARG_POINTER (d), DEFARG_LENGTH (d));\n+  char *file;\n+  int line;\n   if (TREE_CODE (f) == FUNCTION_DECL)\n     {\n-      lineno = DECL_SOURCE_LINE (f);\n-      input_filename = DECL_SOURCE_FILE (f);\n+      line = DECL_SOURCE_LINE (f);\n+      file = DECL_SOURCE_FILE (f);\n     }\n+  else\n+    {\n+      line = lineno;\n+      file = input_filename;\n+    }\n+\n+  feed_input (DEFARG_POINTER (d), DEFARG_LENGTH (d), file, line);\n   yychar = DEFARG_MARKER;\n   yylval.ttype = p;\n }\n@@ -3557,10 +3563,10 @@ real_yylex ()\n     case EOF:\n       end_of_file = 1;\n       token_buffer[0] = 0;\n-      if (input_redirected ())\n-\tvalue = END_OF_SAVED_INPUT;\n-      else if (linemode)\n+      if (linemode)\n \tvalue = END_OF_LINE;\n+      else if (input_redirected ())\n+\tvalue = END_OF_SAVED_INPUT;\n       else\n \tvalue = ENDFILE;\n       break;"}, {"sha": "64a6dadee12eaef9e4c69fca76799e409de43827", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1946537baae0c1012b0ab5a58c4f514189d885f5/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=1946537baae0c1012b0ab5a58c4f514189d885f5", "patch": "@@ -6757,7 +6757,7 @@ c_expand_return (retval)\n        || DECL_NAME (current_function_decl) == ansi_opname[(int) VEC_NEW_EXPR])\n       && !TYPE_NOTHROW_P (TREE_TYPE (current_function_decl))\n       && null_ptr_cst_p (retval))\n-    cp_pedwarn (\"operator new should throw an exception, not return NULL\");\n+    cp_warning (\"operator new should throw an exception, not return NULL\");\n   \n   if (retval == NULL_TREE)\n     {"}]}