{"sha": "e0afb98af7dafb0bb088cd57d168d95542fdbf6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhZmI5OGFmN2RhZmIwYmIwODhjZDU3ZDE2OGQ5NTU0MmZkYmY2Yg==", "commit": {"author": {"name": "Sebastian Pop", "email": "pop@cri.ensmp.fr", "date": "2004-11-11T19:25:58Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2004-11-11T19:25:58Z"}, "message": "tree-scalar-evolution.c (follow_ssa_edge_in_condition_phi): Give up as soon as the evolution is known not computable.\n\n\t* tree-scalar-evolution.c (follow_ssa_edge_in_condition_phi):\n\tGive up as soon as the evolution is known not computable.\n\nFrom-SVN: r90491", "tree": {"sha": "4060f2ebeabfe21384f5159ab7564a73587c8cbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4060f2ebeabfe21384f5159ab7564a73587c8cbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0afb98af7dafb0bb088cd57d168d95542fdbf6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0afb98af7dafb0bb088cd57d168d95542fdbf6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0afb98af7dafb0bb088cd57d168d95542fdbf6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0afb98af7dafb0bb088cd57d168d95542fdbf6b/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d1d0daeccf191b78662548cf4de07ccf387d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46d1d0daeccf191b78662548cf4de07ccf387d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46d1d0daeccf191b78662548cf4de07ccf387d02"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "620cefa952fcd665003cb06ec9021c259ce9efaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0afb98af7dafb0bb088cd57d168d95542fdbf6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0afb98af7dafb0bb088cd57d168d95542fdbf6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0afb98af7dafb0bb088cd57d168d95542fdbf6b", "patch": "@@ -1,3 +1,8 @@\n+2004-11-11  Sebastian Pop  <pop@cri.ensmp.fr>\n+\n+\t* tree-scalar-evolution.c (follow_ssa_edge_in_condition_phi): \n+\tGive up as soon as the evolution is known not computable.\n+\n 2004-11-11  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR target/16457"}, {"sha": "e26f1da48db049610bdd0c7e848dfc0c178f940e", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0afb98af7dafb0bb088cd57d168d95542fdbf6b/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0afb98af7dafb0bb088cd57d168d95542fdbf6b/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=e0afb98af7dafb0bb088cd57d168d95542fdbf6b", "patch": "@@ -1398,6 +1398,11 @@ follow_ssa_edge_in_condition_phi (struct loop *loop,\n \n   for (i = 1; i < PHI_NUM_ARGS (condition_phi); i++)\n     {\n+      /* Quickly give up when the evolution of one of the branches is\n+\t not known.  */\n+      if (*evolution_of_loop == chrec_dont_know)\n+\treturn true;\n+\n       if (!follow_ssa_edge_in_condition_phi_branch (i, loop, condition_phi,\n \t\t\t\t\t\t    halting_phi,\n \t\t\t\t\t\t    &evolution_of_branch,"}]}