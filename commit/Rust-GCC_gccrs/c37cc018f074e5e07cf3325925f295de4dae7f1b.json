{"sha": "c37cc018f074e5e07cf3325925f295de4dae7f1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM3Y2MwMThmMDc0ZTVlMDdjZjMzMjU5MjVmMjk1ZGU0ZGFlN2YxYg==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2004-05-07T04:18:19Z"}, "committer": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2004-05-07T04:18:19Z"}, "message": "ChangeLog\n\nFrom-SVN: r81604", "tree": {"sha": "4e749b7520d0384f198f66837b8b0c6fd3eb9094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e749b7520d0384f198f66837b8b0c6fd3eb9094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c37cc018f074e5e07cf3325925f295de4dae7f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37cc018f074e5e07cf3325925f295de4dae7f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c37cc018f074e5e07cf3325925f295de4dae7f1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c37cc018f074e5e07cf3325925f295de4dae7f1b/comments", "author": null, "committer": null, "parents": [{"sha": "4d980568a69e67a741059678e512dd30b779977a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d980568a69e67a741059678e512dd30b779977a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d980568a69e67a741059678e512dd30b779977a"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "11b0aacf940ce769b348b35b4b5b63f9fbb4a179", "filename": "libjava/java/util/Calendar.java", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c37cc018f074e5e07cf3325925f295de4dae7f1b/libjava%2Fjava%2Futil%2FCalendar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c37cc018f074e5e07cf3325925f295de4dae7f1b/libjava%2Fjava%2Futil%2FCalendar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCalendar.java?ref=c37cc018f074e5e07cf3325925f295de4dae7f1b", "patch": "@@ -926,8 +926,21 @@ public int getMinimalDaysInFirstWeek()\n    * @return the actual minimum value.\n    * @since jdk1.2\n    */\n-  // FIXME: XXX: Not abstract in JDK 1.2.\n-  public abstract int getActualMinimum(int field);\n+  public int getActualMinimum(int field)\n+  {\n+    Calendar tmp = (Calendar)clone();\t// To avoid restoring state\n+    int min = tmp.getGreatestMinimum(field);\n+    int end = tmp.getMinimum(field);\n+    tmp.set(field, min);\n+    for (; min > end; min--)\n+      {\n+\ttmp.add(field, -1);\t// Try to get smaller\n+\tif (tmp.get(field) != min - 1)\n+\t  break;\t\t// Done if not successful\n+\n+      }\n+    return min;\n+  }\n \n   /**\n    * Gets the actual maximum value that is allowed for the specified field.\n@@ -936,8 +949,20 @@ public int getMinimalDaysInFirstWeek()\n    * @return the actual maximum value.  \n    * @since jdk1.2\n    */\n-  // FIXME: XXX: Not abstract in JDK 1.2.\n-  public abstract int getActualMaximum(int field);\n+  public int getActualMaximum(int field)\n+  {\n+    Calendar tmp = (Calendar)clone();\t// To avoid restoring state\n+    int max = tmp.getLeastMaximum(field);\n+    int end = tmp.getMaximum(field);\n+    tmp.set(field, max);\n+    for (; max < end; max++)\n+      {\n+\ttmp.add(field, 1);\n+\tif (tmp.get(field) != max + 1)\n+\t  break;\n+      }\n+    return max;\n+  }\n \n   /**\n    * Return a clone of this object."}]}