{"sha": "dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3", "node_id": "C_kwDOANBUbNoAKGRiYjBjODBjMzYwMzM1OTBmOGFkNjNlYTFjZGFhYmNmNzljNTJmZDM", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-05T16:08:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:18Z"}, "message": "[Ada] Get rid of secondary stack for controlled components of limited types\n\nThe initial work didn't change anything for limited types because they use\na specific return mechanism for functions called build-in-place where there\nis no anonymous return object, so the secondary stack was used only for the\nsake of consistency with the nonlimited case.\n\nThis change aligns the limited case with the nonlimited case, i.e. either\nthey both use the primary stack or they both use the secondary stack.\n\ngcc/ada/\n\n\t* exp_ch6.adb (Caller_Known_Size): Call Returns_On_Secondary_Stack\n\tinstead of Requires_Transient_Scope and tidy up.\n\t(Needs_BIP_Alloc_Form): Likewise.\n\t* exp_util.adb (Initialized_By_Aliased_BIP_Func_Call): Also return\n\ttrue if the build-in-place function call has no BIPalloc parameter.\n\t(Is_Finalizable_Transient): Remove redundant test.", "tree": {"sha": "cef7075e8dafe71bccb9f03093152c197895b75e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cef7075e8dafe71bccb9f03093152c197895b75e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a9800fa4d065ce220e00e7d6194dc419b7dbb38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9800fa4d065ce220e00e7d6194dc419b7dbb38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9800fa4d065ce220e00e7d6194dc419b7dbb38"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "f9c6f3337502633c91c1151a94a3814968332381", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3", "patch": "@@ -1055,11 +1055,12 @@ package body Exp_Ch6 is\n      (Func_Call   : Node_Id;\n       Result_Subt : Entity_Id) return Boolean\n    is\n+      Ctrl : constant Node_Id   := Controlling_Argument (Func_Call);\n+      Utyp : constant Entity_Id := Underlying_Type (Result_Subt);\n+\n    begin\n-      return\n-          (Is_Definite_Subtype (Underlying_Type (Result_Subt))\n-            and then No (Controlling_Argument (Func_Call)))\n-        or else not Requires_Transient_Scope (Underlying_Type (Result_Subt));\n+      return (No (Ctrl) and then Is_Definite_Subtype (Utyp))\n+        or else not Returns_On_Secondary_Stack (Utyp);\n    end Caller_Known_Size;\n \n    -----------------------\n@@ -10218,7 +10219,7 @@ package body Exp_Ch6 is\n       pragma Assert (Is_Build_In_Place_Function (Func_Id));\n       Func_Typ : constant Entity_Id := Underlying_Type (Etype (Func_Id));\n    begin\n-      return Requires_Transient_Scope (Func_Typ);\n+      return Returns_On_Secondary_Stack (Func_Typ);\n    end Needs_BIP_Alloc_Form;\n \n    -------------------------------------"}, {"sha": "8a8f07c449f7f6f03e886ad0b42a8fcce900ba50", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=dbb0c80c36033590f8ad63ea1cdaabcf79c52fd3", "patch": "@@ -8368,9 +8368,10 @@ package body Exp_Util is\n       function Initialized_By_Aliased_BIP_Func_Call\n         (Trans_Id : Entity_Id) return Boolean;\n       --  Determine whether transient object Trans_Id is initialized by a\n-      --  build-in-place function call where the BIPalloc parameter is of\n-      --  value 1 and BIPaccess is not null. This case creates an aliasing\n-      --  between the returned value and the value denoted by BIPaccess.\n+      --  build-in-place function call where the BIPalloc parameter either\n+      --  does not exist or is Caller_Allocation, and BIPaccess is not null.\n+      --  This case creates an aliasing between the returned value and the\n+      --  value denoted by BIPaccess.\n \n       function Is_Aliased\n         (Trans_Id   : Entity_Id;\n@@ -8427,11 +8428,14 @@ package body Exp_Util is\n \n          if Is_Build_In_Place_Function_Call (Call) then\n             declare\n+               Caller_Allocation_Val : constant Uint :=\n+                 UI_From_Int (BIP_Allocation_Form'Pos (Caller_Allocation));\n+\n                Access_Nam : Name_Id := No_Name;\n                Access_OK  : Boolean := False;\n                Actual     : Node_Id;\n                Alloc_Nam  : Name_Id := No_Name;\n-               Alloc_OK   : Boolean := False;\n+               Alloc_OK   : Boolean := True;\n                Formal     : Node_Id;\n                Func_Id    : Entity_Id;\n                Param      : Node_Id;\n@@ -8466,21 +8470,20 @@ package body Exp_Util is\n                             BIP_Formal_Suffix (BIP_Alloc_Form));\n                      end if;\n \n-                     --  A match for BIPaccess => Temp has been found\n+                     --  A nonnull BIPaccess has been found\n \n                      if Chars (Formal) = Access_Nam\n                        and then Nkind (Actual) /= N_Null\n                      then\n                         Access_OK := True;\n                      end if;\n \n-                     --  A match for BIPalloc => 1 has been found\n+                     --  A BIPalloc has been found\n \n                      if Chars (Formal) = Alloc_Nam\n                        and then Nkind (Actual) = N_Integer_Literal\n-                       and then Intval (Actual) = Uint_1\n                      then\n-                        Alloc_OK := True;\n+                        Alloc_OK := Intval (Actual) = Caller_Allocation_Val;\n                      end if;\n                   end if;\n \n@@ -8767,7 +8770,6 @@ package body Exp_Util is\n       return\n         Ekind (Obj_Id) in E_Constant | E_Variable\n           and then Needs_Finalization (Desig)\n-          and then Requires_Transient_Scope (Desig)\n           and then Nkind (Rel_Node) /= N_Simple_Return_Statement\n           and then not Is_Part_Of_BIP_Return_Statement (Rel_Node)\n "}]}