{"sha": "3aecd443dadce5ef2c94551bb0fd9a54f6ba5684", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FlY2Q0NDNkYWRjZTVlZjJjOTQ1NTFiYjBmZDlhNTRmNmJhNTY4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-07-01T08:21:09Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-07-01T08:21:09Z"}, "message": "tree-pretty-print.c (dump_generic_code): Print [idx]= and [idx1 ...\n\n\t* tree-pretty-print.c (dump_generic_code) <case CONSTRUCTOR>: Print\n\t[idx]= and [idx1 ... idx2]= before initializers if needed for\n\tarray initializers.\n\nFrom-SVN: r175748", "tree": {"sha": "7dc5163f592182cadd59c5f44c94b451d2f25bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dc5163f592182cadd59c5f44c94b451d2f25bff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7474f719762a83f06c295b5c7bdc27f55b1d089b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7474f719762a83f06c295b5c7bdc27f55b1d089b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7474f719762a83f06c295b5c7bdc27f55b1d089b"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "a4b743cf44b9dfd62b894b99c202fb818568498f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3aecd443dadce5ef2c94551bb0fd9a54f6ba5684", "patch": "@@ -1,3 +1,9 @@\n+2011-07-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-pretty-print.c (dump_generic_code) <case CONSTRUCTOR>: Print\n+\t[idx]= and [idx1 ... idx2]= before initializers if needed for\n+\tarray initializers.\n+\n 2011-07-01  Chen Liqin  <liqin.gcc@gmail.com>\n \n \t* config.gcc (score-*-elf): Remove score7.o."}, {"sha": "2a938b72a09c4d638ea766d9dee806e445923576", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 47, "deletions": 8, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3aecd443dadce5ef2c94551bb0fd9a54f6ba5684/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=3aecd443dadce5ef2c94551bb0fd9a54f6ba5684", "patch": "@@ -1,6 +1,6 @@\n /* Pretty formatting of GENERIC trees in C syntax.\n-   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n-   Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n+   2011  Free Software Foundation, Inc.\n    Adapted from c-pretty-print.c by Diego Novillo <dnovillo@redhat.com>\n \n This file is part of GCC.\n@@ -1250,19 +1250,58 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n       {\n \tunsigned HOST_WIDE_INT ix;\n \ttree field, val;\n-\tbool is_struct_init = FALSE;\n+\tbool is_struct_init = false;\n+\tbool is_array_init = false;\n+\tdouble_int curidx = double_int_zero;\n \tpp_character (buffer, '{');\n \tif (TREE_CODE (TREE_TYPE (node)) == RECORD_TYPE\n \t    || TREE_CODE (TREE_TYPE (node)) == UNION_TYPE)\n-\t  is_struct_init = TRUE;\n+\t  is_struct_init = true;\n+        else if (TREE_CODE (TREE_TYPE (node)) == ARRAY_TYPE\n+\t\t && TYPE_DOMAIN (TREE_TYPE (node))\n+\t\t && TYPE_MIN_VALUE (TYPE_DOMAIN (TREE_TYPE (node)))\n+\t\t && TREE_CODE (TYPE_MIN_VALUE (TYPE_DOMAIN (TREE_TYPE (node))))\n+\t\t    == INTEGER_CST)\n+\t  {\n+\t    tree minv = TYPE_MIN_VALUE (TYPE_DOMAIN (TREE_TYPE (node)));\n+\t    is_array_init = true;\n+\t    curidx = tree_to_double_int (minv);\n+\t  }\n \tFOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (node), ix, field, val)\n \t  {\n-\t    if (field && is_struct_init)\n+\t    if (field)\n \t      {\n-\t\tpp_character (buffer, '.');\n-\t\tdump_generic_node (buffer, field, spc, flags, false);\n-\t\tpp_string (buffer, \"=\");\n+\t\tif (is_struct_init)\n+\t\t  {\n+\t\t    pp_character (buffer, '.');\n+\t\t    dump_generic_node (buffer, field, spc, flags, false);\n+\t\t    pp_character (buffer, '=');\n+\t\t  }\n+\t\telse if (is_array_init\n+\t\t\t && (TREE_CODE (field) != INTEGER_CST\n+\t\t\t     || !double_int_equal_p (tree_to_double_int (field),\n+\t\t\t\t\t\t     curidx)))\n+\t\t  {\n+\t\t    pp_character (buffer, '[');\n+\t\t    if (TREE_CODE (field) == RANGE_EXPR)\n+\t\t      {\n+\t\t\tdump_generic_node (buffer, TREE_OPERAND (field, 0), spc,\n+\t\t\t\t\t   flags, false);\n+\t\t\tpp_string (buffer, \" ... \");\n+\t\t\tdump_generic_node (buffer, TREE_OPERAND (field, 1), spc,\n+\t\t\t\t\t   flags, false);\n+\t\t\tif (TREE_CODE (TREE_OPERAND (field, 1)) == INTEGER_CST)\n+\t\t\t  curidx = tree_to_double_int (TREE_OPERAND (field, 1));\n+\t\t      }\n+\t\t    else\n+\t\t      dump_generic_node (buffer, field, spc, flags, false);\n+\t\t    if (TREE_CODE (field) == INTEGER_CST)\n+\t\t      curidx = tree_to_double_int (field);\n+\t\t    pp_string (buffer, \"]=\");\n+\t\t  }\n \t      }\n+            if (is_array_init)\n+\t      curidx = double_int_add (curidx, double_int_one);\n \t    if (val && TREE_CODE (val) == ADDR_EXPR)\n \t      if (TREE_CODE (TREE_OPERAND (val, 0)) == FUNCTION_DECL)\n \t\tval = TREE_OPERAND (val, 0);"}]}