{"sha": "5f37d07c6e08778a5e16779bc5c0c419533b47a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzN2QwN2M2ZTA4Nzc4YTVlMTY3NzliYzVjMGM0MTk1MzNiNDdhMQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-11-04T22:37:46Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-11-04T22:37:46Z"}, "message": "aof.h (aof_text_section, [...]): Don't declare.\n\n\t* arm/aof.h (aof_text_section, aof_data_section): Don't declare.\n\t(common_section): Delete unused variable.\n\t(ASM_OUTPUT_ASCII): Fix signed/unsigned warnings.\n\t(ASM_GENERATE_INTERNAL_LABEL): Fix format specifier warning.\n\t* arm-protos.h (arm_poke_function_name, aof_add_import,\n\taof_delete_import): Const-ify.\n\t* arm.c (legitimize_pic_address): Wrap variables in the macro\n\tcontrolling their usage.\n\t(arm_finalize_pic): Mark variable with ATTRIBUTE_UNUSED.\n\t(arm_poke_function_name, pic_chain, import, aof_add_import,\n\taof_delete_import): Const-ify.\n\t* i386.c (ix86_osf_output_function_prologue): Const-ify.\n\t* i386/sysv4.h (ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE,\n\tASM_OUTPUT_LONG_DOUBLE): Fix format specifier warnings.\n\t* i860/fx2800.h (DBX_OUTPUT_STANDARD_TYPES): Const-ify.\n\t* i860/sysv3.h: Add missing comment closure.\n\t* m68k/apollo68.h (ASM_RETURN_CASE_JUMP): Add missing semi-colon.\n\t* m88k/dgux.h (SELECT_RTX_SECTION): Add missing argument in call\n\tto symbolic_operand.\n\n\t* config.gcc (m680[02]0-*-*): Rename case from m68000-*-*.\n\t(i960-*-*): Set tmake_file.\n\t(sparc86x-*-elf*): Fix typo in header name.\n\n\t* sched-rgn.c (schedule_insns): Delete unused variable.\n\nFrom-SVN: r46776", "tree": {"sha": "05df4b091e6f9286e6ff1dc22e3556704810175a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05df4b091e6f9286e6ff1dc22e3556704810175a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f37d07c6e08778a5e16779bc5c0c419533b47a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f37d07c6e08778a5e16779bc5c0c419533b47a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f37d07c6e08778a5e16779bc5c0c419533b47a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f37d07c6e08778a5e16779bc5c0c419533b47a1/comments", "author": null, "committer": null, "parents": [{"sha": "966c049dbf5e87774306aafddd0295a21657a1da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966c049dbf5e87774306aafddd0295a21657a1da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966c049dbf5e87774306aafddd0295a21657a1da"}], "stats": {"total": 89, "additions": 58, "deletions": 31}, "files": [{"sha": "ffe0d7e002d990f2a5a4134f44133d6763c59da3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -1,3 +1,31 @@\n+2001-11-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* arm/aof.h (aof_text_section, aof_data_section): Don't declare.\n+\t(common_section): Delete unused variable.\n+\t(ASM_OUTPUT_ASCII): Fix signed/unsigned warnings.\n+\t(ASM_GENERATE_INTERNAL_LABEL): Fix format specifier warning.\n+\t* arm-protos.h (arm_poke_function_name, aof_add_import,\n+\taof_delete_import): Const-ify.\n+\t* arm.c (legitimize_pic_address): Wrap variables in the macro\n+\tcontrolling their usage.\n+\t(arm_finalize_pic): Mark variable with ATTRIBUTE_UNUSED.\n+\t(arm_poke_function_name, pic_chain, import, aof_add_import,\n+\taof_delete_import): Const-ify.\n+\t* i386.c (ix86_osf_output_function_prologue): Const-ify.\n+\t* i386/sysv4.h (ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE,\n+\tASM_OUTPUT_LONG_DOUBLE): Fix format specifier warnings.\n+\t* i860/fx2800.h (DBX_OUTPUT_STANDARD_TYPES): Const-ify.\n+\t* i860/sysv3.h: Add missing comment closure.\n+\t* m68k/apollo68.h (ASM_RETURN_CASE_JUMP): Add missing semi-colon.\n+\t* m88k/dgux.h (SELECT_RTX_SECTION): Add missing argument in call\n+\tto symbolic_operand.\n+\t\n+\t* config.gcc (m680[02]0-*-*): Rename case from m68000-*-*.\n+\t(i960-*-*): Set tmake_file.\n+\t(sparc86x-*-elf*): Fix typo in header name.\n+\t\n+\t* sched-rgn.c (schedule_insns): Delete unused variable.\n+\n 2001-11-04  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \tPR c/2820"}, {"sha": "13f3b4e02eaf75beab2761a3f1b44aef098b4938", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -236,7 +236,7 @@ x86_64-*-*)\n hppa*-*-* | parisc*-*-*)\n \tcpu_type=pa\n \t;;\n-m68000-*-*)\n+m680[02]0-*-*)\n \tcpu_type=m68k\n \t;;\n mips*-*-*)\n@@ -1528,6 +1528,7 @@ i960-*-rtems)\n \t;;\n i960-*-*)\t\t\t# Default i960 environment.\n \tuse_collect2=yes\n+\ttmake_file=i960/t-960bare\n \tc_target_objs=\"i960-c.o\"\n \tcxx_target_objs=\"i960-c.o\"\n \t;;\n@@ -3149,7 +3150,7 @@ sparc86x-*-aout*)\n \ttmake_file=sparc/t-sp86x\n \t;;\n sparc86x-*-elf*)\n-\ttm_file=\"sparc/sol2.h sparc./elf.h sparc/sp86x-elf.h\"\n+\ttm_file=\"sparc/sol2.h sparc/elf.h sparc/sp86x-elf.h\"\n \ttmake_file=sparc/t-sp86x\n         extra_parts=\"crtbegin.o crtend.o\"\n \t;;"}, {"sha": "d8fb2eb01f91c57a639de31174e6dac6a3816f3d", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -52,12 +52,10 @@ Boston, MA 02111-1307, USA.  */\n    two areas with the same attributes will be linked adjacently in the\n    resulting executable, so we have to be careful not to do pc-relative \n    addressing across such boundaries.  */\n-char *aof_text_section ();\n #define TEXT_SECTION_ASM_OP aof_text_section ()\n \n #define SELECT_RTX_SECTION(MODE,RTX,ALIGN) text_section ();\n \n-char *aof_data_section ();\n #define DATA_SECTION_ASM_OP aof_data_section ()\n \n #define EXTRA_SECTIONS in_zero_init, in_common\n@@ -85,7 +83,6 @@ zero_init_section ()\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n common_section ()\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n-  static int common_count = 1;\t\t\t\t\t\\\n   if (in_section != in_common)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       in_section = in_common;\t\t\t\t\t\\\n@@ -232,10 +229,10 @@ do {\t\t\t\t\t\t\t\\\n   int i;\t\t\t\t\t\t\\\n   const char *ptr = (PTR);\t\t\t\t\\\n   fprintf ((STREAM), \"\\tDCB\");\t\t\t\t\\\n-  for (i = 0; i < (LEN); i++)\t\t\t\t\\\n+  for (i = 0; i < (long)(LEN); i++)\t\t\t\\\n     fprintf ((STREAM), \" &%02x%s\", \t\t\t\\\n \t     (unsigned ) *(ptr++),\t\t\t\\\n-\t     (i + 1 < (LEN)\t\t\t\t\\\n+\t     (i + 1 < (long)(LEN)\t\t\t\t\\\n \t      ? ((i & 3) == 3 ? \"\\n\\tDCB\" : \",\")\t\\\n \t      : \"\\n\"));\t\t\t\t\t\\\n }\n@@ -313,7 +310,7 @@ do {\t\t\t\t\t\\\n   fprintf ((STREAM), \"|%s|\", NAME)\n \n #define ASM_GENERATE_INTERNAL_LABEL(STRING,PREFIX,NUM)\t\\\n-  sprintf ((STRING), \"*|%s..%d|\", (PREFIX), (NUM))\n+  sprintf ((STRING), \"*|%s..%ld|\", (PREFIX), (long)(NUM))\n \n #define ASM_FORMAT_PRIVATE_NAME(OUTVAR,NAME,NUMBER)\t\\\n  ((OUTVAR) = (char *) alloca (strlen ((NAME)) + 10),\t\\"}, {"sha": "11accd34b32803c74e9239559ae80e3ae41d37c0", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -122,7 +122,7 @@ extern const char * output_add_immediate PARAMS ((rtx *));\n extern const char * arithmetic_instr\tPARAMS ((rtx, int));\n extern void   output_ascii_pseudo_op\tPARAMS ((FILE *, const unsigned char *, int));\n extern const char * output_return_instruction PARAMS ((rtx, int, int));\n-extern void   arm_poke_function_name\tPARAMS ((FILE *, char *));\n+extern void   arm_poke_function_name\tPARAMS ((FILE *, const char *));\n extern void   arm_print_operand\t\tPARAMS ((FILE *, rtx, int));\n extern void   arm_print_operand_address\tPARAMS ((FILE *, rtx));\n extern void   arm_final_prescan_insn\tPARAMS ((rtx));\n@@ -142,8 +142,8 @@ extern rtx    aof_pic_entry\t\tPARAMS ((rtx));\n extern void   aof_dump_pic_table\tPARAMS ((FILE *));\n extern char * aof_text_section\t\tPARAMS ((void));\n extern char * aof_data_section\t\tPARAMS ((void));\n-extern void   aof_add_import\t\tPARAMS ((char *));\n-extern void   aof_delete_import\t\tPARAMS ((char *));\n+extern void   aof_add_import\t\tPARAMS ((const char *));\n+extern void   aof_delete_import\t\tPARAMS ((const char *));\n extern void   aof_dump_imports\t\tPARAMS ((FILE *));\n extern void   zero_init_section\t\tPARAMS ((void));\n extern void   common_section\t\tPARAMS ((void));"}, {"sha": "0475c58fc94992d0564f99585fe665dc2b62d248", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -2251,7 +2251,9 @@ legitimize_pic_address (orig, mode, reg)\n {\n   if (GET_CODE (orig) == SYMBOL_REF)\n     {\n+#ifndef AOF_ASSEMBLER\n       rtx pic_ref, address;\n+#endif\n       rtx insn;\n       int subregs = 0;\n \n@@ -2375,7 +2377,7 @@ legitimize_pic_address (orig, mode, reg)\n \n void\n arm_finalize_pic (prologue)\n-     int prologue;\n+     int prologue ATTRIBUTE_UNUSED;\n {\n #ifndef AOF_ASSEMBLER\n   rtx l1, pic_tmp, pic_tmp2, seq, pic_rtx;\n@@ -7313,7 +7315,7 @@ output_return_instruction (operand, really_return, reverse)\n void\n arm_poke_function_name (stream, name)\n    FILE * stream;\n-   char * name;\n+   const char * name;\n {\n   unsigned long alignlength;\n   unsigned long length;\n@@ -10675,7 +10677,7 @@ rtx aof_pic_label = NULL_RTX;\n struct pic_chain\n {\n   struct pic_chain * next;\n-  char * symname;\n+  const char * symname;\n };\n \n static struct pic_chain * aof_pic_chain = NULL;\n@@ -10765,14 +10767,14 @@ aof_data_section ()\n struct import\n {\n   struct import * next;\n-  char * name;\n+  const char * name;\n };\n \n static struct import * imports_list = NULL;\n \n void\n aof_add_import (name)\n-     char * name;\n+     const char * name;\n {\n   struct import * new;\n \n@@ -10788,7 +10790,7 @@ aof_add_import (name)\n \n void\n aof_delete_import (name)\n-     char * name;\n+     const char * name;\n {\n   struct import ** old;\n "}, {"sha": "44353a96365cd96f2a60dc36ff3886b4a354596e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -1178,8 +1178,8 @@ ix86_osf_output_function_prologue (file, size)\n      FILE *file;\n      HOST_WIDE_INT size;\n {\n-  char *prefix = \"\";\n-  char *lprefix = LPREFIX;\n+  const char *prefix = \"\";\n+  const char *const lprefix = LPREFIX;\n   int labelno = profile_label_no;\n \n #ifdef OSF_OS"}, {"sha": "f60ec31fe5b50062183474dc9216ce634dc2420a", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -48,7 +48,7 @@ Boston, MA 02111-1307, USA.  */\n do { long value;\t\t\t\t\t\t\t\\\n      REAL_VALUE_TO_TARGET_SINGLE ((VALUE), value);\t\t\t\\\n      if (sizeof (int) == sizeof (long))\t\t\t\t\t\\\n-         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, value);\t\t\t\\\n+         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, (int) value);\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n          fprintf((FILE), \"%s0x%lx\\n\", ASM_LONG, value);\t\t\t\\\n    } while (0)\n@@ -64,8 +64,8 @@ do { long value[2];\t\t\t\t\t\t\t\\\n      REAL_VALUE_TO_TARGET_DOUBLE ((VALUE), value);\t\t\t\\\n      if (sizeof (int) == sizeof (long))\t\t\t\t\t\\\n        {\t\t\t\t\t\t\t\t\\\n-         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, value[0]);\t\t\\\n-         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, value[1]);\t\t\\\n+         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, (int) value[0]);\t\t\\\n+         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, (int) value[1]);\t\t\\\n        }\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n        {\t\t\t\t\t\t\t\t\\\n@@ -81,9 +81,9 @@ do { long value[3];\t\t\t\t\t\t\t\\\n      REAL_VALUE_TO_TARGET_LONG_DOUBLE ((VALUE), value);\t\t\t\\\n      if (sizeof (int) == sizeof (long))\t\t\t\t\t\\\n        {\t\t\t\t\t\t\t\t\\\n-         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, value[0]);\t\t\\\n-         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, value[1]);\t\t\\\n-         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, value[2]);\t\t\\\n+         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, (int) value[0]);\t\t\\\n+         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, (int) value[1]);\t\t\\\n+         fprintf((FILE), \"%s0x%x\\n\", ASM_LONG, (int) value[2]);\t\t\\\n        }\t\t\t\t\t\t\t\t\\\n      else\t\t\t\t\t\t\t\t\\\n        {\t\t\t\t\t\t\t\t\\"}, {"sha": "e86a91e2c2a1332815b5e4e03c0a0bc9cbec7824", "filename": "gcc/config/i860/fx2800.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi860%2Ffx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi860%2Ffx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Ffx2800.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -100,7 +100,8 @@ Boston, MA 02111-1307, USA.  */\n    sets long & unsigned long in 18 & 19, not in 100 & 101 as shown above. */\n \n #define DBX_OUTPUT_STANDARD_TYPES(syms)\t\\\n-{ char *dtyps[]={\"\", \"char\", \"short int\", \"int\", \"logical*1\",\t\t\\\n+{ static const char *const dtyps[] = {\t\t\t\t\t\\\n+\t\"\", \"char\", \"short int\", \"int\", \"logical*1\",\t\t\t\\\n \t\"logical*2\", \"logical*4\", \"float\", \"double\", \"complex\",\t\t\\\n \t\"doublecomplex\", \"character\", \"void\", \"nil\", \"boolean\",\t\t\\\n \t\"unsigned char\", \"short unsigned int\", \"unsigned int\",\t\t\\"}, {"sha": "2b0eb00fb0b4ec0e0eb631e9391f20c0a8438eae", "filename": "gcc/config/i860/sysv3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi860%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fi860%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fsysv3.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -97,7 +97,7 @@ extern const char *current_function_original_name;\n     fprintf ((FILE), \"\\t.set .,.+%u\\n\", (ROUNDED));\t\\\n   } while (0)\n \n-/* The routine used to output string literals.\n+/* The routine used to output string literals.  */\n \n #define ASCII_DATA_ASM_OP\t\"\\t.byte\\t\"\n "}, {"sha": "38fd5dd5eff3bb18ecb6e4b1be07810bad57aded", "filename": "gcc/config/m68k/apollo68.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fm68k%2Fapollo68.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fm68k%2Fapollo68.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fapollo68.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -182,7 +182,7 @@ Boston, MA 02111-1307, USA.  */\n     if (TARGET_5200)\t\t\t\t\\\n       return \"ext%.l %0\\n\\tjmp %%pc@(2,%0:l)\";\t\\\n     else\t\t\t\t\t\\\n-      return \"jmp %%pc@(2,%0:w)\"\t\t\\\n+      return \"jmp %%pc@(2,%0:w)\";\t\t\\\n   } while (0)\n \n /* Here are the new register names.  */"}, {"sha": "a789f395450de8824563dab4a9bbafdfbcd663a0", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -298,7 +298,7 @@ func_ptr __DTOR_END__[1] = { (func_ptr) (-1) }\n #undef SELECT_RTX_SECTION\n #define SELECT_RTX_SECTION(MODE,RTX,ALIGN)      \\\n {                                               \\\n-  if (flag_pic && symbolic_operand (RTX))       \\\n+  if (flag_pic && symbolic_operand ((RTX), (MODE))) \\\n     data_section ();                            \\\n   else                                          \\\n     const_section ();                           \\"}, {"sha": "299314a68385f2e4a53472c34a309189a36dc650", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f37d07c6e08778a5e16779bc5c0c419533b47a1/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=5f37d07c6e08778a5e16779bc5c0c419533b47a1", "patch": "@@ -2963,8 +2963,6 @@ schedule_insns (dump_file)\n       for (rgn = 0; rgn < nr_regions; rgn++)\n \tif (RGN_NR_BLOCKS (rgn) == 1)\n \t  {\n-\t    int b;\n-\n \t    sbitmap_zero (blocks);\n \t    SET_BIT (blocks, rgn_bb_table[RGN_BLOCKS (rgn)]);\n "}]}