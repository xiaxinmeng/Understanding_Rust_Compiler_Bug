{"sha": "d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIyYzIzMjRlNmJmOTZiM2RjOTU0ZGU3ZTQ1ZGQ3ZTBmYzM2OGQ1Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-06-02T23:19:01Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-06-02T23:19:01Z"}, "message": "reverted erroneous checkin\n\nFrom-SVN: r54193", "tree": {"sha": "1c041c11176cde5aa8d256a2157d388d0c3b68df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c041c11176cde5aa8d256a2157d388d0c3b68df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f/comments", "author": null, "committer": null, "parents": [{"sha": "5d83269d111d5fce6d7d85063a1eef38829536d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d83269d111d5fce6d7d85063a1eef38829536d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d83269d111d5fce6d7d85063a1eef38829536d4"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "f4b0ee7ff5d93b3e4bcbe08eebaa645969a2a81e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d22c2324e6bf96b3dc954de7e45dd7e0fc368d5f", "patch": "@@ -7656,27 +7656,16 @@ reg_loc_descriptor (rtl)\n      rtx rtl;\n {\n   dw_loc_descr_ref loc_result = NULL;\n-  unsigned reg, i, max;\n+  unsigned reg;\n \n   if (REGNO (rtl) >= FIRST_PSEUDO_REGISTER)\n     return 0;\n \n   reg = reg_number (rtl);\n-  max = HARD_REGNO_NREGS (reg, GET_MODE (rtl));  \n-  for (i = 0; i < max; ++i)\n-    {\n-      add_loc_descr (&loc_result,\n-\t\t     new_loc_descr (reg <= 31 ? DW_OP_reg0 + reg : DW_OP_regx,\n-\t\t\t\t    reg <= 31 ? 0 : reg,\n-\t\t\t\t    0));\n-\n-      if (max > 1)\n-\tadd_loc_descr (&loc_result,\n-\t\t       new_loc_descr (DW_OP_piece,\n-\t\t\t\t      GET_MODE_SIZE (reg_raw_mode[reg]), 0));\n-\n-      ++reg;\n-    }\n+  if (reg <= 31)\n+    loc_result = new_loc_descr (DW_OP_reg0 + reg, 0, 0);\n+  else\n+    loc_result = new_loc_descr (DW_OP_regx, reg, 0);\n \n   return loc_result;\n }"}]}