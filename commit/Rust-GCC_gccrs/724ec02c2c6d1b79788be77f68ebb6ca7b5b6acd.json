{"sha": "724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI0ZWMwMmMyYzZkMWI3OTc4OGJlNzdmNjhlYmI2Y2E3YjViNmFjZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-25T10:03:39Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-25T10:03:39Z"}, "message": "Make target_clones resolver fn static if possible.\n\n\tPR target/93274\n\tPR ipa/94271\n\t* config/i386/i386-features.c (make_resolver_func): Drop\n\tpublic flag for resolver.\n\t* config/rs6000/rs6000.c (make_resolver_func): Add comdat\n\tgroup for resolver and drop public flag if possible.\n\t* multiple_target.c (create_dispatcher_calls): Drop unique_name\n\tand resolution as we want to enable LTO privatization of the default\n\tsymbol.\n\tPR target/93274\n\tPR ipa/94271\n\t* gcc.target/i386/pr81213-2.c: New test.\n\t* gcc.target/i386/pr81213.c: Add additional source.\n\t* gcc.dg/lto/pr94271_0.c: New test.\n\t* gcc.dg/lto/pr94271_1.c: New test.", "tree": {"sha": "9f339a0ee3d2abe45c3ba1eaed8881c2b6d4a1e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f339a0ee3d2abe45c3ba1eaed8881c2b6d4a1e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl57LHsACgkQTcGC3A+n\nN4WykggAvhqQ1GSZ9LWaJWPB+4MiVCSrAh0tKhtV27NFt8lv4nZrJfXOkb/vmKh+\nDtU0uVhhK9iGDIkwmUvQ3vRa+hd1JGcr4MojkrkTAQOMmfCulIe3Ko+cyzQo91pW\n8JWWTOdw9E82MjDhHe/6oPByn2q6GSkDKi9nQi36yOMDspPu84Ex3cb4wETn1aJ0\nwxT4I+a41ziToBgR43zZr/nTjWzjZqwM0ol3CtU3tAp7ODinAJPqEDFBFJiBo3sT\npiOBPfK+Ohz+Ao3Z0KBeHzPmTXVdODAMzrC63urcGkvSNKkKJOFlBaSBZkeEO0Kv\ni9Tfc0nXUH3/Dyf5DEX7rP2NuL4iXA==\n=rhV8\n-----END PGP SIGNATURE-----", "payload": "tree 9f339a0ee3d2abe45c3ba1eaed8881c2b6d4a1e1\nparent 0fb0240a051df91d3c24385d1d3c17548b266544\nauthor Martin Liska <mliska@suse.cz> 1585130619 +0100\ncommitter Martin Liska <mliska@suse.cz> 1585130619 +0100\n\nMake target_clones resolver fn static if possible.\n\n\tPR target/93274\n\tPR ipa/94271\n\t* config/i386/i386-features.c (make_resolver_func): Drop\n\tpublic flag for resolver.\n\t* config/rs6000/rs6000.c (make_resolver_func): Add comdat\n\tgroup for resolver and drop public flag if possible.\n\t* multiple_target.c (create_dispatcher_calls): Drop unique_name\n\tand resolution as we want to enable LTO privatization of the default\n\tsymbol.\n\tPR target/93274\n\tPR ipa/94271\n\t* gcc.target/i386/pr81213-2.c: New test.\n\t* gcc.target/i386/pr81213.c: Add additional source.\n\t* gcc.dg/lto/pr94271_0.c: New test.\n\t* gcc.dg/lto/pr94271_1.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fb0240a051df91d3c24385d1d3c17548b266544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb0240a051df91d3c24385d1d3c17548b266544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb0240a051df91d3c24385d1d3c17548b266544"}], "stats": {"total": 88, "additions": 82, "deletions": 6}, "files": [{"sha": "c63b65a82b0c265a22771d72a3c0b47ed05e8e1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -1,3 +1,15 @@\n+2020-03-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/93274\n+\tPR ipa/94271\n+\t* config/i386/i386-features.c (make_resolver_func): Drop\n+\tpublic flag for resolver.\n+\t* config/rs6000/rs6000.c (make_resolver_func): Add comdat\n+\tgroup for resolver and drop public flag if possible.\n+\t* multiple_target.c (create_dispatcher_calls): Drop unique_name\n+\tand resolution as we want to enable LTO privatization of the default\n+\tsymbol.\n+\n 2020-03-25  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/94259"}, {"sha": "3c70279dc7c5cba4f8d5cd2f24f047c9beda0372", "filename": "gcc/config/i386/i386-features.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Fconfig%2Fi386%2Fi386-features.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Fconfig%2Fi386%2Fi386-features.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -2777,6 +2777,9 @@ make_resolver_func (const tree default_decl,\n       DECL_COMDAT (decl) = 1;\n       make_decl_one_only (decl, DECL_ASSEMBLER_NAME (decl));\n     }\n+  else\n+    TREE_PUBLIC (ifunc_alias_decl) = 0;\n+\n   /* Build result decl and add to function_decl. */\n   t = build_decl (UNKNOWN_LOCATION, RESULT_DECL, NULL_TREE, ptr_type_node);\n   DECL_CONTEXT (t) = decl;"}, {"sha": "7505a0e1e8e18b34110c82d2fdc4dca6f6796720", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -23894,6 +23894,18 @@ make_resolver_func (const tree default_decl,\n   DECL_INITIAL (decl) = make_node (BLOCK);\n   DECL_STATIC_CONSTRUCTOR (decl) = 0;\n \n+  if (DECL_COMDAT_GROUP (default_decl)\n+      || TREE_PUBLIC (default_decl))\n+    {\n+      /* In this case, each translation unit with a call to this\n+\t versioned function will put out a resolver.  Ensure it\n+\t is comdat to keep just one copy.  */\n+      DECL_COMDAT (decl) = 1;\n+      make_decl_one_only (decl, DECL_ASSEMBLER_NAME (decl));\n+    }\n+  else\n+    TREE_PUBLIC (dispatch_decl) = 0;\n+\n   /* Build result decl and add to function_decl.  */\n   tree t = build_decl (UNKNOWN_LOCATION, RESULT_DECL, NULL_TREE, ptr_type_node);\n   DECL_CONTEXT (t) = decl;"}, {"sha": "c1cfe8ff978192b73c704a4f5a380f6392addf9a", "filename": "gcc/multiple_target.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Fmultiple_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Fmultiple_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmultiple_target.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -178,10 +178,6 @@ create_dispatcher_calls (struct cgraph_node *node)\n   node->externally_visible = false;\n   node->forced_by_abi = false;\n   node->set_section (NULL);\n-  node->unique_name = ((node->resolution == LDPR_PREVAILING_DEF_IRONLY\n-\t\t\t|| node->resolution == LDPR_PREVAILING_DEF_IRONLY_EXP)\n-\t\t       && !flag_incremental_link);\n-  node->resolution = LDPR_PREVAILING_DEF_IRONLY;\n \n   DECL_ARTIFICIAL (node->decl) = 1;\n   node->force_output = true;"}, {"sha": "3db4098a8d211f11a8baa3ae713042f6f0885bfc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -1,3 +1,12 @@\n+2020-03-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/93274\n+\tPR ipa/94271\n+\t* gcc.target/i386/pr81213-2.c: New test.\n+\t* gcc.target/i386/pr81213.c: Add additional source.\n+\t* gcc.dg/lto/pr94271_0.c: New test.\n+\t* gcc.dg/lto/pr94271_1.c: New test.\n+\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/94280"}, {"sha": "2ce7d65411a420bc5c591c644088dded97af2f35", "filename": "gcc/testsuite/gcc.dg/lto/pr94271_0.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr94271_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr94271_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr94271_0.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -0,0 +1,13 @@\n+/* PR lto/94271 */\n+/* { dg-lto-do link } */\n+\n+int a;\n+\n+static int __attribute__ ((target_clones (\"default\", \"avx512f\"))) fast_clamp ()\n+{}\n+\n+void\n+c ()\n+{\n+  a = fast_clamp ();\n+}"}, {"sha": "db9bc9df6db5f22dc9e1922d19c8aef4eb7533f6", "filename": "gcc/testsuite/gcc.dg/lto/pr94271_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr94271_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr94271_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr94271_1.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -0,0 +1,17 @@\n+int aa;\n+\n+static inline int __attribute__ ((target_clones (\"default\", \"avx512f\")))\n+fast_clamp ()\n+{}\n+\n+void\n+b ()\n+{\n+  aa = fast_clamp ();\n+}\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"}, {"sha": "a80622cb1845f253ea85b8c7165a981845b6e168", "filename": "gcc/testsuite/gcc.target/i386/pr81213-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81213-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81213-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81213-2.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -0,0 +1,11 @@\n+__attribute__((target_clones(\"avx\",\"arch=slm\",\"arch=core-avx2\",\"default\")))\n+static int\n+foo ()\n+{\n+  return 2;\n+}\n+\n+int bar()\n+{\n+  return foo();\n+}"}, {"sha": "334838631d0ff091e41134e3c1a8e34fbfbb7248", "filename": "gcc/testsuite/gcc.target/i386/pr81213.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81213.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81213.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81213.c?ref=724ec02c2c6d1b79788be77f68ebb6ca7b5b6acd", "patch": "@@ -1,6 +1,9 @@\n /* PR ipa/81214.  */\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-require-ifunc \"\" } */\n+/* { dg-additional-sources \"pr81213-2.c\" } */\n+\n+int bar();\n \n __attribute__((target_clones(\"avx\",\"arch=slm\",\"arch=core-avx2\",\"default\")))\n static int\n@@ -11,7 +14,7 @@ foo ()\n \n int main()\n {\n-  return foo();\n+  return foo() + bar();\n }\n \n /* { dg-final { scan-assembler \"\\t.globl\\tfoo\" } } */"}]}