{"sha": "d4407370d9f55cfe677a34668d97afa6f5d1cab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0MDczNzBkOWY1NWNmZTY3N2EzNDY2OGQ5N2FmYTZmNWQxY2FiMQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2016-06-29T13:11:48Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-06-29T13:11:48Z"}, "message": "Increase loop alignment on Cortex cores to 8 and set function alignment to 16.\n\nThis makes things consistent across big.LITTLE cores, improves performance of\nbenchmarks with tight loops and reduces performance variations due to small\nchanges in code layout.\n\n    gcc/\n        * config/aarch64/aarch64.c (cortexa53_tunings):\n        Increase loop alignment to 8.  Set function alignment to 16.\n        (cortexa35_tunings): Likewise.\n        (cortexa57_tunings): Increase loop alignment to 8.\n        (cortexa72_tunings): Likewise.\n        (cortexa73_tunings): Likewise.\n\nFrom-SVN: r237851", "tree": {"sha": "01e7f60c44e27a75ad6ffc80514bc2d45406cc66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01e7f60c44e27a75ad6ffc80514bc2d45406cc66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4407370d9f55cfe677a34668d97afa6f5d1cab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4407370d9f55cfe677a34668d97afa6f5d1cab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4407370d9f55cfe677a34668d97afa6f5d1cab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4407370d9f55cfe677a34668d97afa6f5d1cab1/comments", "author": null, "committer": null, "parents": [{"sha": "9182f7184019a076898de5f2429ea5822e5ff324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9182f7184019a076898de5f2429ea5822e5ff324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9182f7184019a076898de5f2429ea5822e5ff324"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "dc5b6814e2fafcee34fdfc711c37034e4949be3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4407370d9f55cfe677a34668d97afa6f5d1cab1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4407370d9f55cfe677a34668d97afa6f5d1cab1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4407370d9f55cfe677a34668d97afa6f5d1cab1", "patch": "@@ -1,3 +1,12 @@\n+2016-06-29  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64.c (cortexa53_tunings):\n+\tIncrease loop alignment to 8.  Set function alignment to 16.\n+\t(cortexa35_tunings): Likewise.\n+\t(cortexa57_tunings): Increase loop alignment to 8.\n+\t(cortexa72_tunings): Likewise.\n+\t(cortexa73_tunings): Likewise.\n+\n 2016-06-29  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* doc/sourcebuild.texi (Effective-Target keywords): Add entries"}, {"sha": "314deb5836d8ecca1df3a0db72b79e84e88a68c3", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4407370d9f55cfe677a34668d97afa6f5d1cab1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4407370d9f55cfe677a34668d97afa6f5d1cab1/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d4407370d9f55cfe677a34668d97afa6f5d1cab1", "patch": "@@ -454,9 +454,9 @@ static const struct tune_params cortexa35_tunings =\n   1, /* issue_rate  */\n   (AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n-  8,\t/* function_align.  */\n+  16,\t/* function_align.  */\n   8,\t/* jump_align.  */\n-  4,\t/* loop_align.  */\n+  8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1,\t/* vec_reassoc_width.  */\n@@ -480,9 +480,9 @@ static const struct tune_params cortexa53_tunings =\n   2, /* issue_rate  */\n   (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_MOV_MOVK | AARCH64_FUSE_ADRP_ADD\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n-  8,\t/* function_align.  */\n+  16,\t/* function_align.  */\n   8,\t/* jump_align.  */\n-  4,\t/* loop_align.  */\n+  8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1,\t/* vec_reassoc_width.  */\n@@ -508,7 +508,7 @@ static const struct tune_params cortexa57_tunings =\n    | AARCH64_FUSE_MOVK_MOVK), /* fusible_ops  */\n   16,\t/* function_align.  */\n   8,\t/* jump_align.  */\n-  4,\t/* loop_align.  */\n+  8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1,\t/* vec_reassoc_width.  */\n@@ -534,7 +534,7 @@ static const struct tune_params cortexa72_tunings =\n    | AARCH64_FUSE_MOVK_MOVK), /* fusible_ops  */\n   16,\t/* function_align.  */\n   8,\t/* jump_align.  */\n-  4,\t/* loop_align.  */\n+  8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1,\t/* vec_reassoc_width.  */\n@@ -560,7 +560,7 @@ static const struct tune_params cortexa73_tunings =\n    | AARCH64_FUSE_MOVK_MOVK | AARCH64_FUSE_ADRP_LDR), /* fusible_ops  */\n   16,\t/* function_align.  */\n   8,\t/* jump_align.  */\n-  4,\t/* loop_align.  */\n+  8,\t/* loop_align.  */\n   2,\t/* int_reassoc_width.  */\n   4,\t/* fp_reassoc_width.  */\n   1,\t/* vec_reassoc_width.  */"}]}