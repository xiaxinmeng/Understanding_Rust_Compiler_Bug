{"sha": "f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNhOGU0ZjU4ZDExMDdmMGU4NGI4NjVkNWRkMGU5MmVhNTZkOGU2ZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-10-26T01:51:01Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-10-26T01:51:01Z"}, "message": "dwarf2out.c (PTR_SIZE, [...]): Move outside of macro guards.\n\n\t* dwarf2out.c (PTR_SIZE, default_eh_frame_section): Move outside\n\tof macro guards. Fix #endif comment.\n\n\t* output.h (default_exception_section, default_eh_frame_section):\n\tMove prototypes outside of macro guard.\n\n\t* crtstuff.c: Fix #endif comment.\n\nFrom-SVN: r46520", "tree": {"sha": "fd026017dea2851e8801dfd0950f0f11a8281890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd026017dea2851e8801dfd0950f0f11a8281890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/comments", "author": null, "committer": null, "parents": [{"sha": "ed4a14688d13dcabe426d88b81a63f9c12aa4ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed4a14688d13dcabe426d88b81a63f9c12aa4ba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed4a14688d13dcabe426d88b81a63f9c12aa4ba2"}], "stats": {"total": 70, "additions": 42, "deletions": 28}, "files": [{"sha": "24e0a2f8d95eb72456105ad84d12ad41c48736d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "patch": "@@ -1,3 +1,13 @@\n+2001-10-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* dwarf2out.c (PTR_SIZE, default_eh_frame_section): Move outside\n+\tof macro guards. Fix #endif comment.\n+\n+\t* output.h (default_exception_section, default_eh_frame_section):\n+\tMove prototypes outside of macro guard.\n+\t\n+\t* crtstuff.c: Fix #endif comment.\n+\n Thu Oct 25 12:21:58 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* doc/md.texi (movMM): Clarify semantics of storing into a "}, {"sha": "dae5190f90403885ab5e8751908ba7647c73d93b", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "patch": "@@ -460,7 +460,7 @@ STATIC int __FRAME_END__[]\n      __attribute__ ((unused, mode(SI), section(EH_FRAME_SECTION_NAME),\n \t\t     aligned(4)))\n      = { 0 };\n-#endif /* EH_FRAME_SECTION */\n+#endif /* EH_FRAME_SECTION_NAME */\n \n #ifdef JCR_SECTION_NAME\n /* Null terminate the .jcr section array.  */"}, {"sha": "a5acdb57fa7557a130d563612a71adc5df63a91e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "patch": "@@ -107,6 +107,30 @@ dwarf2out_do_frame ()\n    unique to each function definition.  */\n unsigned current_funcdef_number = 0;\n \n+/* The size of the target's pointer type.  */\n+#ifndef PTR_SIZE\n+#define PTR_SIZE (POINTER_SIZE / BITS_PER_UNIT)\n+#endif\n+\n+/* Default version of targetm.eh_frame_section.  Note this must appear\n+   outside the DWARF2_DEBUGGING_INFO || DWARF2_UNWIND_INFO macro\n+   guards.  */\n+\n+void\n+default_eh_frame_section ()\n+{\n+#ifdef EH_FRAME_SECTION_NAME\n+  named_section_flags (EH_FRAME_SECTION_NAME, SECTION_WRITE);\n+#else\n+  tree label = get_file_function_name ('F');\n+\n+  data_section ();\n+  ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (PTR_SIZE));\n+  ASM_GLOBALIZE_LABEL (asm_out_file, IDENTIFIER_POINTER (label));\n+  ASM_OUTPUT_LABEL (asm_out_file, IDENTIFIER_POINTER (label));\n+#endif\n+}\n+\n #if defined (DWARF2_DEBUGGING_INFO) || defined (DWARF2_UNWIND_INFO)\n \n /* How to start an assembler comment.  */\n@@ -175,11 +199,6 @@ dw_fde_node;\n /* Maximum size (in bytes) of an artificially generated label.  */\n #define MAX_ARTIFICIAL_LABEL_BYTES\t30\n \n-/* The size of the target's pointer type.  */\n-#ifndef PTR_SIZE\n-#define PTR_SIZE (POINTER_SIZE / BITS_PER_UNIT)\n-#endif\n-\n /* The size of addresses as they appear in the Dwarf 2 data.\n    Some architectures use word addresses to refer to code locations,\n    but Dwarf 2 info always uses byte addresses.  On such machines,\n@@ -1968,21 +1987,6 @@ output_call_frame_info (for_eh)\n     app_disable ();\n }\n \n-void\n-default_eh_frame_section ()\n-{\n-#ifdef EH_FRAME_SECTION_NAME\n-  named_section_flags (EH_FRAME_SECTION_NAME, SECTION_WRITE);\n-#else\n-  tree label = get_file_function_name ('F');\n-\n-  data_section ();\n-  ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (PTR_SIZE));\n-  ASM_GLOBALIZE_LABEL (asm_out_file, IDENTIFIER_POINTER (label));\n-  ASM_OUTPUT_LABEL (asm_out_file, IDENTIFIER_POINTER (label));\n-#endif\n-}\n-\n /* Output a marker (i.e. a label) for the beginning of a function, before\n    the prologue.  */\n \n@@ -11807,4 +11811,4 @@ dwarf2out_finish (input_filename)\n       dw2_asm_output_data (1, DW_MACINFO_end_file, \"End file\");\n     }\n }\n-#endif /* DWARF2_DEBUGGING_INFO */\n+#endif /* DWARF2_DEBUGGING_INFO || DWARF2_UNWIND_INFO */"}, {"sha": "e18ceeaa714dfff2f53541822e8cdcab13ec153f", "filename": "gcc/output.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=f3a8e4f58d1107f0e84b865d5dd0e92ea56d8e6e", "patch": "@@ -208,12 +208,6 @@ extern void named_section\t\tPARAMS ((tree, const char *, int));\n /* Tell assembler to switch to the section for function DECL.  */\n extern void function_section\t\tPARAMS ((tree));\n \n-/* Tell assembler to switch to the section for the exception table.  */\n-extern void default_exception_section\tPARAMS ((void));\n-\n-/* Tell assembler to switch to the section for the EH frames.  */\n-extern void default_eh_frame_section\tPARAMS ((void));\n-\n /* Tell assembler to switch to the section for string merging.  */\n extern void mergeable_string_section\tPARAMS ((tree, unsigned HOST_WIDE_INT,\n \t\t\t\t\t\t unsigned int));\n@@ -462,6 +456,12 @@ extern int profile_label_no;\n /* Default target function prologue and epilogue assembler output.  */\n extern void default_function_pro_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n \n+/* Tell assembler to switch to the section for the exception table.  */\n+extern void default_exception_section\tPARAMS ((void));\n+\n+/* Tell assembler to switch to the section for the EH frames.  */\n+extern void default_eh_frame_section\tPARAMS ((void));\n+\n /* Default target hook that outputs nothing to a stream.  */\n extern void no_asm_to_stream PARAMS ((FILE *));\n "}]}