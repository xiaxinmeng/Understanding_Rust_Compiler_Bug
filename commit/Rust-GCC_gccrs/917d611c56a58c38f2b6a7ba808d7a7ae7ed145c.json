{"sha": "917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3ZDYxMWM1NmE1OGMzOGYyYjZhN2JhODA4ZDdhN2FlN2VkMTQ1Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-08-14T08:56:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-08-14T08:56:58Z"}, "message": "decl.c (grokdeclarator): Use id_loc and EXPR_LOCATION in a few error messages.\n\n/cp\n2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (grokdeclarator): Use id_loc and EXPR_LOCATION in\n\ta few error messages.\n\n/testsuite\n2019-08-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/enum20.C: Test location(s) too.\n\t* g++.dg/other/friend3.C: Likewise.\n\t* g++.dg/parse/dtor5.C: Likewise.\n\t* g++.dg/parse/friend7.C: Likewise.\n\t* g++.dg/template/error22.C: Likewise.\n\t* g++.old-deja/g++.brendan/err-msg5.C: Likewise.\n\nFrom-SVN: r274435", "tree": {"sha": "248641091d2d1bb1dd64fdf2caaf6953c9437947", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/248641091d2d1bb1dd64fdf2caaf6953c9437947"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/comments", "author": null, "committer": null, "parents": [{"sha": "2803bc3bbca332f53801770715a5b592b2467492", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2803bc3bbca332f53801770715a5b592b2467492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2803bc3bbca332f53801770715a5b592b2467492"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "c3b91b0e18d9baab312b276267438be008058b40", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "patch": "@@ -1,3 +1,8 @@\n+2019-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl2.c (grok_array_decl): Use the location of the open square\n+\tbracket in error message about invalid types.\n+\n 2019-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (grokdeclarator): Check here for typedef a function"}, {"sha": "a32108f9d168e07da04371437928120a6ff1ecbe", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "patch": "@@ -434,8 +434,8 @@ grok_array_decl (location_t loc, tree array_expr, tree index_exp,\n \tarray_expr = p2, index_exp = i1;\n       else\n \t{\n-\t  error (\"invalid types %<%T[%T]%> for array subscript\",\n-\t\t type, TREE_TYPE (index_exp));\n+\t  error_at (loc, \"invalid types %<%T[%T]%> for array subscript\",\n+\t\t    type, TREE_TYPE (index_exp));\n \t  return error_mark_node;\n \t}\n "}, {"sha": "78202075f192544f91440cbac14be273711921ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "patch": "@@ -1,3 +1,7 @@\n+2019-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/conversion/simd4.C: Test locations.\n+\n 2019-08-14  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/peel_ind_1.c: Look for an inverted .B VL1."}, {"sha": "22274a1783811d1dd1a2d8ad146e94fc025f93c2", "filename": "gcc/testsuite/g++.dg/conversion/simd4.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/917d611c56a58c38f2b6a7ba808d7a7ae7ed145c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd4.C?ref=917d611c56a58c38f2b6a7ba808d7a7ae7ed145c", "patch": "@@ -12,13 +12,13 @@ void\n foo ()\n {\n   b[t];\n-  b[u];\t\t// { dg-error \"invalid types\" }\n-  b[v];\t\t// { dg-error \"invalid types\" }\n-  b[w];\t\t// { dg-error \"invalid types\" }\n+  b[u];\t\t// { dg-error \"4:invalid types\" }\n+  b[v];\t\t// { dg-error \"4:invalid types\" }\n+  b[w];\t\t// { dg-error \"4:invalid types\" }\n   t[b];\n-  u[b];\t\t// { dg-error \"invalid types\" }\n-  v[b];\t\t// { dg-error \"invalid types\" }\n-  w[b];\t\t// { dg-error \"invalid types\" }\n+  u[b];\t\t// { dg-error \"4:invalid types\" }\n+  v[b];\t\t// { dg-error \"4:invalid types\" }\n+  w[b];\t\t// { dg-error \"4:invalid types\" }\n   new int[t];\n   new int[u];\t// { dg-error \"new-declarator must have integral\" }\n   new int[v];\t// { dg-error \"new-declarator must have integral\" }"}]}