{"sha": "3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VmM2YzODQ1Y2Q0ZjljNjllM2U4MWMyY2Y3OTk4NTRmZmUzZWY2Yg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-04-29T04:12:02Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-04-29T04:12:02Z"}, "message": "re PR target/6494 (sparc64-linux libjava testsuite failures)\n\n2002-04-27  David S. Miller  <davem@redhat.com>\n\n\tPR target/6494\n\t* config/sparc/linux64.h (MD_FALLBACK_FRAME_STATE_FOR): Be mindful\n\tof the stack bias.\n\n\t* config/sparc/linux.h, config/sparc/linux64.h: Don't bother\n\tincluding signal.h and sys/ucontext.h, not needed.\n\nFrom-SVN: r52872", "tree": {"sha": "2419f3d97176523199b05a5e2eda7a148d75183f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2419f3d97176523199b05a5e2eda7a148d75183f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/comments", "author": null, "committer": null, "parents": [{"sha": "ec493bcb3a0e745425e6e98445d751e3c209edad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec493bcb3a0e745425e6e98445d751e3c209edad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec493bcb3a0e745425e6e98445d751e3c209edad"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "d8380e91590c72a74f2361e7c429c99cd250ad1c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "patch": "@@ -1,3 +1,12 @@\n+2002-04-27  David S. Miller  <davem@redhat.com>\n+\n+\tPR target/6494\n+\t* config/sparc/linux64.h (MD_FALLBACK_FRAME_STATE_FOR): Be mindful\n+\tof the stack bias.\n+\n+\t* config/sparc/linux.h, config/sparc/linux64.h: Don't bother\n+\tincluding signal.h and sys/ucontext.h, not needed.\n+\n 2002-04-29  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* varasm.c (output_constant_def): Correct test for not calling"}, {"sha": "ccf4ce0bb4653cfd4fc75623ef2765d96bcc7d0e", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "patch": "@@ -261,11 +261,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n \n-#ifdef IN_LIBGCC2\n-#include <signal.h>\n-#include <sys/ucontext.h>\n-#endif\n-\n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     unsigned int *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\"}, {"sha": "c7950a8ff8117f57db46783b9046eaab9923a6d5", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=3ef3f3845cd4f9c69e3e81c2cf799854ffe3ef6b", "patch": "@@ -381,11 +381,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n \n-#ifdef IN_LIBGCC2\n-#include <signal.h>\n-#include <sys/ucontext.h>\n-#endif\n-\n /* Handle multilib correctly.  */\n #if defined(__arch64__)\n /* 64-bit Sparc version */\n@@ -403,14 +398,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n     fpu_save_off_ = regs_off_ + (16 * 8) + (3 * 8) + (2 * 4);\t\t\\\n     this_cfa_ = (long) (CONTEXT)->cfa;\t\t\t\t\t\\\n     new_cfa_ = *(long *)(((CONTEXT)->cfa) + (regs_off_ + (14 * 8)));\t\\\n+    new_cfa_ += 2047; /* Stack bias */\t\t\t\t\t\\\n     fpu_save_ = *(long *)((this_cfa_) + (fpu_save_off_));\t\t\\\n     (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n     (FS)->cfa_reg = 14;\t\t\t\t\t\t\t\\\n     (FS)->cfa_offset = new_cfa_ - (long) (CONTEXT)->cfa;\t\t\\\n     for (i_ = 1; i_ < 16; ++i_)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-        if (i_ == 14)\t\t\t\t\t\t\t\\\n-          continue;\t\t\t\t\t\t\t\\\n \t(FS)->regs.reg[i_].how = REG_SAVED_OFFSET;\t\t\t\\\n \t(FS)->regs.reg[i_].loc.offset =\t\t\t\t\t\\\n \t  this_cfa_ + (regs_off_ + (i_ * 8)) - new_cfa_;\t\t\\"}]}