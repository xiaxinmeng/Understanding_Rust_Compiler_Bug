{"sha": "fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUzNzdhNDhiNGM0MWIzMmJiMDBiNWFjMDg3ZDc4MWE2YjJiNTk2Zg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-08-25T08:22:56Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-08-25T08:22:56Z"}, "message": "re PR c/77323 (Bad \"defaults to 'int'\" warning for unsupported types)\n\n\tPR c/77323\n\t* c-decl.c (declspecs_add_type): Set typespec_word even when __intN\n\tor _FloatN or _FloatNx is not supported.\n\t(finish_declspecs): Set type to integer_type_node when _FloatN or\n\t_FloatNx is not supported.\n\n\t* gcc.dg/pr77323.c: New test.\n\nFrom-SVN: r239752", "tree": {"sha": "486a8bdcc3246d93af945a8d4d31cfe1000b0fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/486a8bdcc3246d93af945a8d4d31cfe1000b0fc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e627efefd86786d104fea7c9cc9b10a0c26b5398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e627efefd86786d104fea7c9cc9b10a0c26b5398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e627efefd86786d104fea7c9cc9b10a0c26b5398"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "dc863bb4a1b38a6e6280ecc576e7848de2f44c3f", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "patch": "@@ -1,3 +1,11 @@\n+2016-08-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/77323\n+\t* c-decl.c (declspecs_add_type): Set typespec_word even when __intN\n+\tor _FloatN or _FloatNx is not supported.\n+\t(finish_declspecs): Set type to integer_type_node when _FloatN or\n+\t_FloatNx is not supported.\n+\n 2016-08-19  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/32187"}, {"sha": "0c52a64a77eaf593fc347d7dfdfb6005ba8acb6e", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "patch": "@@ -10190,10 +10190,13 @@ declspecs_add_type (location_t loc, struct c_declspecs *specs,\n \t\t\t  (\"both %<__int%d%> and %<short%> in \"\n \t\t\t   \"declaration specifiers\"),\n \t\t\t  int_n_data[specs->int_n_idx].bitsize);\n-\t      else if (! int_n_enabled_p [specs->int_n_idx])\n-\t\terror_at (loc,\n-\t\t\t  \"%<__int%d%> is not supported on this target\",\n-\t\t\t  int_n_data[specs->int_n_idx].bitsize);\n+\t      else if (! int_n_enabled_p[specs->int_n_idx])\n+\t\t{\n+\t\t  specs->typespec_word = cts_int_n;\n+\t\t  error_at (loc,\n+\t\t\t    \"%<__int%d%> is not supported on this target\",\n+\t\t\t    int_n_data[specs->int_n_idx].bitsize);\n+\t\t}\n \t      else\n \t\t{\n \t\t  specs->typespec_word = cts_int_n;\n@@ -10400,12 +10403,15 @@ declspecs_add_type (location_t loc, struct c_declspecs *specs,\n \t\t\t   ? \"x\"\n \t\t\t   : \"\"));\n \t      else if (FLOATN_NX_TYPE_NODE (specs->floatn_nx_idx) == NULL_TREE)\n-\t\terror_at (loc,\n-\t\t\t  \"%<_Float%d%s%> is not supported on this target\",\n-\t\t\t  floatn_nx_types[specs->floatn_nx_idx].n,\n-\t\t\t  (floatn_nx_types[specs->floatn_nx_idx].extended\n-\t\t\t   ? \"x\"\n-\t\t\t   : \"\"));\n+\t\t{\n+\t\t  specs->typespec_word = cts_floatn_nx;\n+\t\t  error_at (loc,\n+\t\t\t    \"%<_Float%d%s%> is not supported on this target\",\n+\t\t\t    floatn_nx_types[specs->floatn_nx_idx].n,\n+\t\t\t    (floatn_nx_types[specs->floatn_nx_idx].extended\n+\t\t\t     ? \"x\"\n+\t\t\t     : \"\"));\n+\t\t}\n \t      else\n \t\t{\n \t\t  specs->typespec_word = cts_floatn_nx;\n@@ -10892,9 +10898,12 @@ finish_declspecs (struct c_declspecs *specs)\n     case cts_floatn_nx:\n       gcc_assert (!specs->long_p && !specs->short_p\n \t\t  && !specs->signed_p && !specs->unsigned_p);\n-      specs->type = (specs->complex_p\n-\t\t     ? COMPLEX_FLOATN_NX_TYPE_NODE (specs->floatn_nx_idx)\n-\t\t     : FLOATN_NX_TYPE_NODE (specs->floatn_nx_idx));\n+      if (FLOATN_NX_TYPE_NODE (specs->floatn_nx_idx) == NULL_TREE)\n+\tspecs->type = integer_type_node;\n+      else if (specs->complex_p)\n+\tspecs->type = COMPLEX_FLOATN_NX_TYPE_NODE (specs->floatn_nx_idx);\n+      else\n+\tspecs->type = FLOATN_NX_TYPE_NODE (specs->floatn_nx_idx);\n       break;\n     case cts_dfloat32:\n     case cts_dfloat64:"}, {"sha": "f4dddd8bea3c3c893751696d8c2343a16d20eb00", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "patch": "@@ -1,3 +1,8 @@\n+2016-08-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/77323\n+\t* gcc.dg/pr77323.c: New test.\n+\n 2016-08-24  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/77358"}, {"sha": "281c334749a527daf520a87c4e54d3a5294fedde", "filename": "gcc/testsuite/gcc.dg/pr77323.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77323.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe377a48b4c41b32bb00b5ac087d781a6b2b596f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77323.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77323.c?ref=fe377a48b4c41b32bb00b5ac087d781a6b2b596f", "patch": "@@ -0,0 +1,6 @@\n+/* PR c/77323 */\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"\" } */\n+\n+__int128 a; /* { dg-error \"not supported\" } */\n+_Float128x b; /* { dg-error \"not supported\" } */"}]}