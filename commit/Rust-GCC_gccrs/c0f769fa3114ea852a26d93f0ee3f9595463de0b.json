{"sha": "c0f769fa3114ea852a26d93f0ee3f9595463de0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBmNzY5ZmEzMTE0ZWE4NTJhMjZkOTNmMGVlM2Y5NTk1NDYzZGUwYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-06-11T20:10:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-06-12T16:46:28Z"}, "message": "c-family: don't warn for [[maybe_unused]] on data member\n\nThe C++17 standard (and C2x) says that [[maybe_unused]] may be applied to a\nnon-static data member, so we shouldn't warn about it.  And I don't see a\nreason not to handle a FIELD_DECL the same as any other decl, by setting\nTREE_USED on it.  It doesn't look like anything yet cares about that flag on\na FIELD_DECL, but setting it shouldn't hurt.\n\ngcc/c-family/ChangeLog:\n\n\t* c-attribs.c (handle_unused_attribute): Handle FIELD_DECL.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/ext/attrib62.C: No longer warn.\n\t* g++.dg/diagnostic/maybe_unused1.C: New test.\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi (unused variable attribute): Applies to\n\tstructure fields as well.", "tree": {"sha": "0c00779a9b0041d2c1e61c37cfaaf968e525d290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c00779a9b0041d2c1e61c37cfaaf968e525d290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0f769fa3114ea852a26d93f0ee3f9595463de0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f769fa3114ea852a26d93f0ee3f9595463de0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0f769fa3114ea852a26d93f0ee3f9595463de0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0f769fa3114ea852a26d93f0ee3f9595463de0b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08e1ff9d6e5a419d5b4a60c077df549e81601d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e1ff9d6e5a419d5b4a60c077df549e81601d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e1ff9d6e5a419d5b4a60c077df549e81601d9b"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "6bf492afcc0146f0dbb04206588c97f7bb187966", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=c0f769fa3114ea852a26d93f0ee3f9595463de0b", "patch": "@@ -1568,6 +1568,7 @@ handle_unused_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n \t  || VAR_OR_FUNCTION_DECL_P (decl)\n \t  || TREE_CODE (decl) == LABEL_DECL\n \t  || TREE_CODE (decl) == CONST_DECL\n+\t  || TREE_CODE (decl) == FIELD_DECL\n \t  || TREE_CODE (decl) == TYPE_DECL)\n \t{\n \t  TREE_USED (decl) = 1;"}, {"sha": "8fc66d626d83cfd80579bd26576222704c81ed60", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c0f769fa3114ea852a26d93f0ee3f9595463de0b", "patch": "@@ -7516,9 +7516,9 @@ Not all targets support this attribute.\n \n @item unused\n @cindex @code{unused} variable attribute\n-This attribute, attached to a variable, means that the variable is meant\n-to be possibly unused.  GCC does not produce a warning for this\n-variable.\n+This attribute, attached to a variable or structure field, means that\n+the variable or field is meant to be possibly unused.  GCC does not\n+produce a warning for this variable or field.\n \n @item used\n @cindex @code{used} variable attribute"}, {"sha": "70a8ec937ddc4848d88fbf4f6e7fa7051150fb51", "filename": "gcc/testsuite/g++.dg/diagnostic/maybe_unused1.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmaybe_unused1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmaybe_unused1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmaybe_unused1.C?ref=c0f769fa3114ea852a26d93f0ee3f9595463de0b", "patch": "@@ -0,0 +1,17 @@\n+/* [dcl.attr.unused] The attribute may be applied to the declaration of a\n+   class, a typedef-name, a variable (including a structured binding\n+   declaration), a non-static data member, a function, an enumeration, or an\n+   enumerator.  */\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wunused -Wextra\" }\n+\n+class [[maybe_unused]] Test {\n+  [[maybe_unused]] int a_;\n+  void b() {};\n+};\n+\n+[[maybe_unused]] typedef Test Test2;\n+\n+[[maybe_unused]] int i;\n+[[maybe_unused]] void f();\n+enum [[maybe_unused]] E { e [[maybe_unused]] = 42 };"}, {"sha": "d34cd2549de512574230053f922655c92375dd79", "filename": "gcc/testsuite/g++.dg/ext/attrib62.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0f769fa3114ea852a26d93f0ee3f9595463de0b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib62.C?ref=c0f769fa3114ea852a26d93f0ee3f9595463de0b", "patch": "@@ -3,5 +3,5 @@\n \n template<typename T> struct A\n {\n-  T a, __attribute((unused)) b; // { dg-warning \"attribute ignored\" }\n+  T a, __attribute((unused)) b;\n };"}]}