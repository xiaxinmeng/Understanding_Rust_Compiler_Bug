{"sha": "e25a75e6da62acd97a31b7a190e28dee53d93b49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI1YTc1ZTZkYTYyYWNkOTdhMzFiN2ExOTBlMjhkZWU1M2Q5M2I0OQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-06-01T16:04:55Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-01T16:04:55Z"}, "message": "toplev.c: Use ISO C90 prototypes.\n\n        * toplev.c: Use ISO C90 prototypes.\n\n        * toplev.h: Use ISO C90 prototypes.\n\nFrom-SVN: r67299", "tree": {"sha": "9f218d14faf14f05dbf4bc61ea7eefef0ccb7e28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f218d14faf14f05dbf4bc61ea7eefef0ccb7e28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e25a75e6da62acd97a31b7a190e28dee53d93b49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25a75e6da62acd97a31b7a190e28dee53d93b49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25a75e6da62acd97a31b7a190e28dee53d93b49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25a75e6da62acd97a31b7a190e28dee53d93b49/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16610927c0514cc262acd29ca95824175ca27bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16610927c0514cc262acd29ca95824175ca27bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16610927c0514cc262acd29ca95824175ca27bc6"}], "stats": {"total": 352, "additions": 155, "deletions": 197}, "files": [{"sha": "4c40d1ab4c63f269375fa7e01624416a75aedbab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25a75e6da62acd97a31b7a190e28dee53d93b49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25a75e6da62acd97a31b7a190e28dee53d93b49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e25a75e6da62acd97a31b7a190e28dee53d93b49", "patch": "@@ -1,5 +1,9 @@\n 2003-06-01  Andreas Jaeger  <aj@suse.de>\n \n+        * toplev.c: Use ISO C90 prototypes.\n+\n+        * toplev.h: Use ISO C90 prototypes.\n+\n \t* genrecog.c: Use ISO C90 prototypes.\n \t(nodes_identical): Correct declaration to match prototype.\n \t(maybe_both_true): Likewise."}, {"sha": "7235d95f447319bc4fb849b30fb84d2a31b336a7", "filename": "gcc/toplev.c", "status": "modified", "additions": 95, "deletions": 141, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25a75e6da62acd97a31b7a190e28dee53d93b49/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25a75e6da62acd97a31b7a190e28dee53d93b49/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e25a75e6da62acd97a31b7a190e28dee53d93b49", "patch": "@@ -100,38 +100,38 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n extern int size_directive_output;\n extern tree last_assemble_variable_decl;\n \n-extern void reg_alloc PARAMS ((void));\n-\n-static void general_init PARAMS ((char *));\n-static void parse_options_and_default_flags PARAMS ((int, char **));\n-static void do_compile PARAMS ((void));\n-static void process_options PARAMS ((void));\n-static void backend_init PARAMS ((void));\n-static int lang_dependent_init PARAMS ((const char *));\n-static void init_asm_output PARAMS ((const char *));\n-static void finalize PARAMS ((void));\n-\n-static void set_target_switch PARAMS ((const char *));\n-\n-static void crash_signal PARAMS ((int)) ATTRIBUTE_NORETURN;\n-static void setup_core_dumping PARAMS ((void));\n-static void compile_file PARAMS ((void));\n-static void display_help PARAMS ((void));\n-static void display_target_options PARAMS ((void));\n-\n-static void decode_d_option PARAMS ((const char *));\n-static int decode_f_option PARAMS ((const char *));\n-static int decode_W_option PARAMS ((const char *));\n-static int decode_g_option PARAMS ((const char *));\n-static unsigned int independent_decode_option PARAMS ((int, char **));\n-static void set_Wextra PARAMS ((int));\n-\n-static void print_version PARAMS ((FILE *, const char *));\n-static int print_single_switch PARAMS ((FILE *, int, int, const char *,\n-\t\t\t\t      const char *, const char *,\n-\t\t\t\t      const char *, const char *));\n-static void print_switch_values PARAMS ((FILE *, int, int, const char *,\n-\t\t\t\t       const char *, const char *));\n+extern void reg_alloc (void);\n+\n+static void general_init (char *);\n+static void parse_options_and_default_flags (int, char **);\n+static void do_compile (void);\n+static void process_options (void);\n+static void backend_init (void);\n+static int lang_dependent_init (const char *);\n+static void init_asm_output (const char *);\n+static void finalize (void);\n+\n+static void set_target_switch (const char *);\n+\n+static void crash_signal (int) ATTRIBUTE_NORETURN;\n+static void setup_core_dumping (void);\n+static void compile_file (void);\n+static void display_help (void);\n+static void display_target_options (void);\n+\n+static void decode_d_option (const char *);\n+static int decode_f_option (const char *);\n+static int decode_W_option (const char *);\n+static int decode_g_option (const char *);\n+static unsigned int independent_decode_option (int, char **);\n+static void set_Wextra (int);\n+\n+static void print_version (FILE *, const char *);\n+static int print_single_switch (FILE *, int, int, const char *,\n+\t\t\t\tconst char *, const char *,\n+\t\t\t\tconst char *, const char *);\n+static void print_switch_values (FILE *, int, int, const char *,\n+\t\t\t\t const char *, const char *);\n \n /* Rest of compilation helper functions.  */\n static bool rest_of_handle_inlining (tree);\n@@ -349,9 +349,9 @@ static struct dump_file_info dump_file[DFI_MAX] =\n   { \"dbr\",\t'd', 0, 0, 0 },\n };\n \n-static int open_dump_file PARAMS ((enum dump_file_index, tree));\n-static void close_dump_file PARAMS ((enum dump_file_index,\n-\t\t\t\t     void (*) (FILE *, rtx), rtx));\n+static int open_dump_file (enum dump_file_index, tree);\n+static void close_dump_file (enum dump_file_index,\n+\t\t\t     void (*) (FILE *, rtx), rtx);\n \n /* Other flags saying which kinds of debugging dump have been requested.  */\n \n@@ -1634,8 +1634,7 @@ static const lang_independent_options W_options[] =\n \n /* Initialize unused warning flags.  */\n void\n-set_Wunused (setting)\n-     int setting;\n+set_Wunused (int setting)\n {\n   warn_unused_function = setting;\n   warn_unused_label = setting;\n@@ -1652,8 +1651,7 @@ set_Wunused (setting)\n \n /* Initialize more unused warning flags.  */\n static void\n-set_Wextra (setting)\n-     int setting;\n+set_Wextra (int setting)\n {\n   extra_warnings = setting;\n   warn_unused_value = setting;\n@@ -1672,8 +1670,7 @@ set_Wextra (setting)\n    -ffast-math and -fno-fast-math imply.  */\n \n void\n-set_fast_math_flags (set)\n-     int set;\n+set_fast_math_flags (int set)\n {\n   flag_trapping_math = !set;\n   flag_unsafe_math_optimizations = set;\n@@ -1685,7 +1682,7 @@ set_fast_math_flags (set)\n \n /* Return true iff flags are set as if -ffast-math.  */\n bool\n-fast_math_flags_set_p ()\n+fast_math_flags_set_p (void)\n {\n   return (!flag_trapping_math\n \t  && flag_unsafe_math_optimizations\n@@ -1706,10 +1703,7 @@ FILE *rtl_dump_file = NULL;\n    If PNAME is zero just return DEFVAL, do not call error.  */\n \n int\n-read_integral_parameter (p, pname, defval)\n-     const char *p;\n-     const char *pname;\n-     const int  defval;\n+read_integral_parameter (const char *p, const char *pname, const int  defval)\n {\n   const char *endp = p;\n \n@@ -1737,8 +1731,7 @@ read_integral_parameter (p, pname, defval)\n    This should be used via the `exact_log2' macro.  */\n \n int\n-exact_log2_wide (x)\n-     unsigned HOST_WIDE_INT x;\n+exact_log2_wide (unsigned HOST_WIDE_INT x)\n {\n   int log = 0;\n   /* Test for 0 or a power of 2.  */\n@@ -1755,8 +1748,7 @@ exact_log2_wide (x)\n    This should be used via the floor_log2 macro.  */\n \n int\n-floor_log2_wide (x)\n-     unsigned HOST_WIDE_INT x;\n+floor_log2_wide (unsigned HOST_WIDE_INT x)\n {\n   int log = -1;\n   while (x != 0)\n@@ -1769,8 +1761,7 @@ floor_log2_wide (x)\n    into ICE messages, which is much more user friendly.  */\n \n static void\n-crash_signal (signo)\n-     int signo;\n+crash_signal (int signo)\n {\n   internal_error (\"%s\", strsignal (signo));\n }\n@@ -1779,7 +1770,7 @@ crash_signal (signo)\n    printed first, except in the case of abort().)  */\n \n static void\n-setup_core_dumping ()\n+setup_core_dumping (void)\n {\n #ifdef SIGABRT\n   signal (SIGABRT, SIG_DFL);\n@@ -1804,9 +1795,7 @@ setup_core_dumping ()\n    up to five characters.  (Java uses \".class\".)  */\n \n void\n-strip_off_ending (name, len)\n-     char *name;\n-     int len;\n+strip_off_ending (char *name, int len)\n {\n   int i;\n   for (i = 2; i < 6 && len > i; i++)\n@@ -1822,9 +1811,7 @@ strip_off_ending (name, len)\n /* Output a quoted string.  */\n \n void\n-output_quoted_string (asm_file, string)\n-     FILE *asm_file;\n-     const char *string;\n+output_quoted_string (FILE *asm_file, const char *string)\n {\n #ifdef OUTPUT_QUOTED_STRING\n   OUTPUT_QUOTED_STRING (asm_file, string);\n@@ -1850,9 +1837,7 @@ output_quoted_string (asm_file, string)\n /* Output NAME into FILE after having turned it into something\n    usable as an identifier in a target's assembly file.  */\n void\n-output_clean_symbol_name (file, name)\n-     FILE *file;\n-     const char *name;\n+output_clean_symbol_name (FILE *file, const char *name)\n {\n   /* Make a copy of NAME.  */\n   char *id = xstrdup (name);\n@@ -1868,9 +1853,7 @@ output_clean_symbol_name (file, name)\n /* Output a file name in the form wanted by System V.  */\n \n void\n-output_file_directive (asm_file, input_name)\n-     FILE *asm_file;\n-     const char *input_name;\n+output_file_directive (FILE *asm_file, const char *input_name)\n {\n   int len = strlen (input_name);\n   const char *na = input_name + len;\n@@ -1899,9 +1882,7 @@ output_file_directive (asm_file, input_name)\n /* Routine to open a dump file.  Return true if the dump file is enabled.  */\n \n static int\n-open_dump_file (index, decl)\n-     enum dump_file_index index;\n-     tree decl;\n+open_dump_file (enum dump_file_index index, tree decl)\n {\n   char *dump_name;\n   const char *open_arg;\n@@ -1957,10 +1938,9 @@ open_dump_file (index, decl)\n /* Routine to close a dump file.  */\n \n static void\n-close_dump_file (index, func, insns)\n-     enum dump_file_index index;\n-     void (*func) PARAMS ((FILE *, rtx));\n-     rtx insns;\n+close_dump_file (enum dump_file_index index,\n+\t\t void (*func) (FILE *, rtx),\n+\t\t rtx insns)\n {\n   if (! rtl_dump_file)\n     return;\n@@ -1995,9 +1975,7 @@ close_dump_file (index, func, insns)\n    Returns nonzero if anything was put out.  */\n \n int\n-wrapup_global_declarations (vec, len)\n-     tree *vec;\n-     int len;\n+wrapup_global_declarations (tree *vec, int len)\n {\n   tree decl;\n   int i;\n@@ -2099,9 +2077,7 @@ wrapup_global_declarations (vec, len)\n    which there are LEN).  Output debugging information for them.  */\n \n void\n-check_global_declarations (vec, len)\n-     tree *vec;\n-     int len;\n+check_global_declarations (tree *vec, int len)\n {\n   tree decl;\n   int i;\n@@ -2174,9 +2150,7 @@ check_global_declarations (vec, len)\n    INPUT_LOCATION accordingly.  */\n \n void\n-push_srcloc (file, line)\n-     const char *file;\n-     int line;\n+push_srcloc (const char *file, int line)\n {\n   struct file_stack *fs;\n \n@@ -2197,7 +2171,7 @@ push_srcloc (file, line)\n    stack.  */\n \n void\n-pop_srcloc ()\n+pop_srcloc (void)\n {\n   struct file_stack *fs;\n \n@@ -2219,7 +2193,7 @@ pop_srcloc ()\n    output and various debugging dumps.  */\n \n static void\n-compile_file ()\n+compile_file (void)\n {\n   /* Initialize yet another pass.  */\n \n@@ -2316,11 +2290,10 @@ compile_file ()\n    if this declaration is not within a function.  */\n \n void\n-rest_of_decl_compilation (decl, asmspec, top_level, at_end)\n-     tree decl;\n-     const char *asmspec;\n-     int top_level;\n-     int at_end;\n+rest_of_decl_compilation (tree decl,\n+\t\t\t  const char *asmspec,\n+\t\t\t  int top_level,\n+\t\t\t  int at_end)\n {\n   /* We deferred calling assemble_alias so that we could collect\n      other attributes such as visibility.  Emit the alias now.  */\n@@ -2409,15 +2382,16 @@ rest_of_decl_compilation (decl, asmspec, top_level, at_end)\n /* Called after finishing a record, union or enumeral type.  */\n \n void\n-rest_of_type_compilation (type, toplev)\n+rest_of_type_compilation (\n #if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\t\\\n     || defined (SDB_DEBUGGING_INFO) || defined (DWARF2_DEBUGGING_INFO)\n-     tree type;\n-     int toplev;\n+\t\t\t  tree type,\n+\t\t\t  int toplev\n #else\n-     tree type ATTRIBUTE_UNUSED;\n-     int toplev ATTRIBUTE_UNUSED;\n+\t\t\t  tree type ATTRIBUTE_UNUSED,\n+\t\t\t  int toplev ATTRIBUTE_UNUSED,\n #endif\n+\t\t\t  )\n {\n   /* Avoid confusing the debug information machinery when there are\n      errors.  */\n@@ -2702,7 +2676,7 @@ rest_of_handle_reorder_blocks (tree decl, rtx insns)\n \n   close_dump_file (DFI_bbro, print_rtl_with_bb, insns);\n   timevar_pop (TV_REORDER_BLOCKS);\n-}  \n+}\n \n /* Run instruction scheduler.  */\n static void\n@@ -3485,8 +3459,7 @@ rest_of_handle_loop2 (tree decl, rtx insns)\n    After we return, the tree storage is freed.  */\n \n void\n-rest_of_compilation (decl)\n-     tree decl;\n+rest_of_compilation (tree decl)\n {\n   rtx insns;\n   int rebuild_label_notes_after_reload;\n@@ -3965,7 +3938,7 @@ rest_of_compilation (decl)\n  exit_rest_of_compilation:\n \n   coverage_end_function ();\n-  \n+\n   /* In case the function was not output,\n      don't leave any temporary anonymous types\n      queued up for sdb output.  */\n@@ -4032,7 +4005,7 @@ rest_of_compilation (decl)\n \n /* Display help for generic options.  */\n static void\n-display_help ()\n+display_help (void)\n {\n   int undoc;\n   unsigned long i;\n@@ -4048,7 +4021,7 @@ display_help ()\n   printf (_(\"  -fstack-limit-register=<register>  Trap if the stack goes past <register>\\n\"));\n   printf (_(\"  -fstack-limit-symbol=<name>  Trap if the stack goes past symbol <name>\\n\"));\n   printf (_(\"  -frandom-seed=<string>  Make compile reproducible using <string>\\n\"));\n-  \n+\n \n   for (i = ARRAY_SIZE (f_options); i--;)\n     {\n@@ -4166,7 +4139,7 @@ display_help ()\n \n /* Display help for target options.  */\n static void\n-display_target_options ()\n+display_target_options (void)\n {\n   int undoc, i;\n   static bool displayed = false;\n@@ -4238,8 +4211,7 @@ display_target_options ()\n /* Parse a -d... command line switch.  */\n \n static void\n-decode_d_option (arg)\n-     const char *arg;\n+decode_d_option (const char *arg)\n {\n   int i, c, matched;\n \n@@ -4296,8 +4268,7 @@ decode_d_option (arg)\n    Return the number of strings consumed.  */\n \n static int\n-decode_f_option (arg)\n-     const char *arg;\n+decode_f_option (const char *arg)\n {\n   int j;\n   const char *option_value = NULL;\n@@ -4427,8 +4398,7 @@ decode_f_option (arg)\n    Return the number of strings consumed.  */\n \n static int\n-decode_W_option (arg)\n-     const char *arg;\n+decode_W_option (const char *arg)\n {\n   const char *option_value = NULL;\n   int j;\n@@ -4492,8 +4462,7 @@ const char *const debug_type_names[] =\n    Return the number of strings consumed.  */\n \n static int\n-decode_g_option (arg)\n-     const char *arg;\n+decode_g_option (const char *arg)\n {\n   static unsigned level = 0;\n   /* A lot of code assumes write_symbols == NO_DEBUG if the\n@@ -4612,9 +4581,7 @@ ignoring option `%s' due to invalid debug level specification\",\n    Return the number of strings consumed.  */\n \n static unsigned int\n-independent_decode_option (argc, argv)\n-     int argc;\n-     char **argv;\n+independent_decode_option (int argc, char **argv)\n {\n   char *arg = argv[0];\n \n@@ -4856,8 +4823,7 @@ independent_decode_option (argc, argv)\n /* Decode the switch -mNAME.  */\n \n static void\n-set_target_switch (name)\n-     const char *name;\n+set_target_switch (const char *name)\n {\n   size_t j;\n   int valid_target_option = 0;\n@@ -4912,9 +4878,7 @@ set_target_switch (name)\n    assembler output file).  */\n \n static void\n-print_version (file, indent)\n-     FILE *file;\n-     const char *indent;\n+print_version (FILE *file, const char *indent)\n {\n #ifndef __VERSION__\n #define __VERSION__ \"[?]\"\n@@ -4938,10 +4902,9 @@ print_version (file, indent)\n    other code will catch a disk full though.  */\n \n static int\n-print_single_switch (file, pos, max, indent, sep, term, type, name)\n-     FILE *file;\n-     int pos, max;\n-     const char *indent, *sep, *term, *type, *name;\n+print_single_switch (FILE *file, int pos, int max,\n+\t\t     const char *indent, const char *sep, const char *term,\n+\t\t     const char *type, const char *name)\n {\n   /* The ultrix fprintf returns 0 on success, so compute the result we want\n      here since we need it for the following test.  */\n@@ -4969,10 +4932,8 @@ print_single_switch (file, pos, max, indent, sep, term, type, name)\n    Each switch is separated from the next by SEP.  */\n \n static void\n-print_switch_values (file, pos, max, indent, sep, term)\n-     FILE *file;\n-     int pos, max;\n-     const char *indent, *sep, *term;\n+print_switch_values (FILE *file, int pos, int max,\n+\t\t     const char *indent, const char *sep, const char *term)\n {\n   size_t j;\n   char **p;\n@@ -5053,8 +5014,7 @@ print_switch_values (file, pos, max, indent, sep, term)\n    temporary file or bit bucket for us.  NAME is the file specified on\n    the command line, possibly NULL.  */\n static void\n-init_asm_output (name)\n-     const char *name;\n+init_asm_output (const char *name)\n {\n   if (name == NULL && asm_file_name == 0)\n     asm_out_file = stdout;\n@@ -5107,8 +5067,7 @@ init_asm_output (name)\n    options are parsed.  Signal handlers, internationalization etc.\n    ARGV0 is main's argv[0].  */\n static void\n-general_init (argv0)\n-     char *argv0;\n+general_init (char *argv0)\n {\n   char *p;\n \n@@ -5164,9 +5123,7 @@ general_init (argv0)\n \n    Return nonzero to suppress compiler back end initialization.  */\n static void\n-parse_options_and_default_flags (argc, argv)\n-     int argc;\n-     char **argv;\n+parse_options_and_default_flags (int argc, char **argv)\n {\n   int i;\n \n@@ -5409,7 +5366,7 @@ parse_options_and_default_flags (argc, argv)\n \n /* Process the options that have been parsed.  */\n static void\n-process_options ()\n+process_options (void)\n {\n   /* Allow the front end to perform consistency checks and do further\n      initialization based on the command line options.  This hook also\n@@ -5429,7 +5386,7 @@ process_options ()\n   else if (filename)\n     {\n       char *name = xstrdup (lbasename (filename));\n-      \n+\n       strip_off_ending (name, strlen (name));\n       aux_base_name = name;\n     }\n@@ -5620,7 +5577,7 @@ process_options ()\n \n /* Initialize the compiler back end.  */\n static void\n-backend_init ()\n+backend_init (void)\n {\n   /* init_emit_once uses reg_raw_mode and therefore must be called\n      after init_regs which initialized reg_raw_mode.  */\n@@ -5651,8 +5608,7 @@ backend_init ()\n \n /* Language-dependent initialization.  Returns nonzero on success.  */\n static int\n-lang_dependent_init (name)\n-     const char *name;\n+lang_dependent_init (const char *name)\n {\n   if (dump_base_name == 0)\n     dump_base_name = name ? name : \"gccdump\";\n@@ -5698,7 +5654,7 @@ lang_dependent_init (name)\n /* Clean up: close opened files, etc.  */\n \n static void\n-finalize ()\n+finalize (void)\n {\n   /* Close the dump files.  */\n   if (flag_gen_aux_info)\n@@ -5754,7 +5710,7 @@ finalize ()\n \n /* Initialize the compiler, and compile the input file.  */\n static void\n-do_compile ()\n+do_compile (void)\n {\n   /* Initialize timing first.  The C front ends read the main file in\n      the post_options hook, and C++ does file timings.  */\n@@ -5791,9 +5747,7 @@ do_compile ()\n    It is not safe to call this function more than once.  */\n \n int\n-toplev_main (argc, argv)\n-     int argc;\n-     char **argv;\n+toplev_main (int argc, char **argv)\n {\n   /* Initialization of GCC's environment, and diagnostics.  */\n   general_init (argv[0]);"}, {"sha": "ef1a705f3a343bcb8352fc9c4ab38f5298b56df7", "filename": "gcc/toplev.h", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e25a75e6da62acd97a31b7a190e28dee53d93b49/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e25a75e6da62acd97a31b7a190e28dee53d93b49/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=e25a75e6da62acd97a31b7a190e28dee53d93b49", "patch": "@@ -1,5 +1,5 @@\n /* toplev.h - Various declarations for functions found in toplev.c\n-   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -26,23 +26,23 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define skip_leading_substring(whole,  part) \\\n    (strncmp (whole, part, strlen (part)) ? NULL : whole + strlen (part))\n \n-extern int toplev_main\t\t\tPARAMS ((int, char **));\n-extern int read_integral_parameter\tPARAMS ((const char *, const char *,\n-\t\t\t\t\t\tconst int));\n-extern void strip_off_ending\t\tPARAMS ((char *, int));\n-extern void print_time\t\t\tPARAMS ((const char *, long));\n-extern const char *trim_filename\tPARAMS ((const char *));\n-extern void internal_error\t\tPARAMS ((const char *, ...))\n-\t\t\t\t\t       ATTRIBUTE_NORETURN;\n-extern void _fatal_insn_not_found\tPARAMS ((struct rtx_def *,\n-\t\t\t\t\t\tconst char *, int,\n-\t\t\t\t\t\tconst char *))\n-\t\t\t\t\t       ATTRIBUTE_NORETURN;\n-extern void _fatal_insn\t\t\tPARAMS ((const char *,\n-\t\t\t\t\t\tstruct rtx_def *,\n-\t\t\t\t\t\tconst char *, int,\n-\t\t\t\t\t\tconst char *))\n-\t\t\t\t\t      ATTRIBUTE_NORETURN;\n+extern int toplev_main\t\t\t(int, char **);\n+extern int read_integral_parameter\t(const char *, const char *,\n+\t\t\t\t\t const int);\n+extern void strip_off_ending\t\t(char *, int);\n+extern void print_time\t\t\t(const char *, long);\n+extern const char *trim_filename\t(const char *);\n+extern void internal_error\t\t(const char *, ...)\n+     ATTRIBUTE_NORETURN;\n+extern void _fatal_insn_not_found\t(struct rtx_def *,\n+  \t\t\t\t\t const char *, int,\n+\t\t\t\t\t const char *)\n+     ATTRIBUTE_NORETURN;\n+extern void _fatal_insn\t\t\t(const char *,\n+\t\t\t\t\t struct rtx_def *,\n+\t\t\t\t\t const char *, int,\n+\t\t\t\t\t const char *)\n+     ATTRIBUTE_NORETURN;\n \n #define fatal_insn(msgid, insn) \\\n \t_fatal_insn (msgid, insn, __FILE__, __LINE__, __FUNCTION__)\n@@ -52,48 +52,48 @@ extern void _fatal_insn\t\t\tPARAMS ((const char *,\n /* None of these functions are suitable for ATTRIBUTE_PRINTF, because\n    each language front end can extend them with its own set of format\n    specifiers.  */\n-extern void warning\t\t\tPARAMS ((const char *, ...));\n-extern void error\t\t\tPARAMS ((const char *, ...));\n-extern void fatal_error\t\t\tPARAMS ((const char *, ...))\n-\t\t\t\t\t       ATTRIBUTE_NORETURN;\n-extern void pedwarn\t\t\tPARAMS ((const char *, ...));\n-extern void sorry\t\t\tPARAMS ((const char *, ...));\n-\n-extern void rest_of_decl_compilation\tPARAMS ((union tree_node *,\n-\t\t\t\t\t\tconst char *, int, int));\n-extern void rest_of_type_compilation\tPARAMS ((union tree_node *, int));\n-extern void rest_of_compilation\t\tPARAMS ((union tree_node *));\n-\n-extern void pedwarn_with_decl\t\tPARAMS ((union tree_node *,\n-\t\t\t\t\t\t const char *, ...));\n-extern void warning_with_decl\t\tPARAMS ((union tree_node *,\n-\t\t\t\t\t\t const char *, ...));\n-extern void error_with_decl\t\tPARAMS ((union tree_node *,\n-\t\t\t\t\t\t const char *, ...));\n-\n-extern void announce_function\t\tPARAMS ((union tree_node *));\n-\n-extern void error_for_asm\t\tPARAMS ((struct rtx_def *,\n-\t\t\t\t\t\t const char *, ...));\n-extern void warning_for_asm\t\tPARAMS ((struct rtx_def *,\n-\t\t\t\t\t\t const char *, ...));\n-extern void warn_deprecated_use\t\tPARAMS ((union tree_node *));\n-\n-extern void output_clean_symbol_name    PARAMS ((FILE *, const char *));\n+extern void warning\t\t\t(const char *, ...);\n+extern void error\t\t\t(const char *, ...);\n+extern void fatal_error\t\t\t(const char *, ...)\n+     ATTRIBUTE_NORETURN;\n+extern void pedwarn\t\t\t(const char *, ...);\n+extern void sorry\t\t\t(const char *, ...);\n+\n+extern void rest_of_decl_compilation\t(union tree_node *,\n+\t\t\t\t\t const char *, int, int);\n+extern void rest_of_type_compilation\t(union tree_node *, int);\n+extern void rest_of_compilation\t\t(union tree_node *);\n+\n+extern void pedwarn_with_decl\t\t(union tree_node *,\n+\t\t\t\t\t const char *, ...);\n+extern void warning_with_decl\t\t(union tree_node *,\n+\t\t\t\t\t const char *, ...);\n+extern void error_with_decl\t\t(union tree_node *,\n+\t\t\t\t\t const char *, ...);\n+\n+extern void announce_function\t\t(union tree_node *);\n+\n+extern void error_for_asm\t\t(struct rtx_def *,\n+\t\t\t\t\t const char *, ...);\n+extern void warning_for_asm\t\t(struct rtx_def *,\n+\t\t\t\t\t const char *, ...);\n+extern void warn_deprecated_use\t\t(union tree_node *);\n+\n+extern void output_clean_symbol_name    (FILE *, const char *);\n #ifdef BUFSIZ\n-extern void output_quoted_string\tPARAMS ((FILE *, const char *));\n-extern void output_file_directive\tPARAMS ((FILE *, const char *));\n+extern void output_quoted_string\t(FILE *, const char *);\n+extern void output_file_directive\t(FILE *, const char *);\n #endif\n \n #ifdef BUFSIZ\n   /* N.B. Unlike all the others, fnotice is just gettext+fprintf, and\n      therefore it can have ATTRIBUTE_PRINTF.  */\n-extern void fnotice\t\t\tPARAMS ((FILE *, const char *, ...))\n-\t\t\t\t\t       ATTRIBUTE_PRINTF_2;\n+extern void fnotice\t\t\t(FILE *, const char *, ...)\n+     ATTRIBUTE_PRINTF_2;\n #endif\n \n-extern int wrapup_global_declarations   PARAMS ((union tree_node **, int));\n-extern void check_global_declarations   PARAMS ((union tree_node **, int));\n+extern int wrapup_global_declarations   (union tree_node **, int);\n+extern void check_global_declarations   (union tree_node **, int);\n \n extern const char *progname;\n extern const char *dump_base_name;\n@@ -106,10 +106,10 @@ extern struct ht *ident_hash;\n /* This function can be used by targets to set the flags originally\n     implied by -ffast-math and -fno-fast-math.  */\n \n-extern void set_fast_math_flags         PARAMS ((int));\n+extern void set_fast_math_flags         (int);\n \n /* Return true iff flags are set as if -ffast-math.  */\n-extern bool fast_math_flags_set_p\tPARAMS ((void));\n+extern bool fast_math_flags_set_p\t(void);\n \n /* The following functions accept a wide integer argument.  Rather\n    than having to cast on every function call, we use a macro instead.  */\n@@ -118,7 +118,7 @@ extern bool fast_math_flags_set_p\tPARAMS ((void));\n #define exact_log2(N) exact_log2_wide ((unsigned HOST_WIDE_INT) (N))\n #define floor_log2(N) floor_log2_wide ((unsigned HOST_WIDE_INT) (N))\n #endif\n-extern int exact_log2_wide             PARAMS ((unsigned HOST_WIDE_INT));\n-extern int floor_log2_wide             PARAMS ((unsigned HOST_WIDE_INT));\n+extern int exact_log2_wide             (unsigned HOST_WIDE_INT);\n+extern int floor_log2_wide             (unsigned HOST_WIDE_INT);\n \n #endif /* ! GCC_TOPLEV_H */"}]}