{"sha": "c6e84dc4845c7da5bf2d477a531a23b9dee5b907", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZlODRkYzQ4NDVjN2RhNWJmMmQ0NzdhNTMxYTIzYjlkZWU1YjkwNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-26T23:24:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-26T23:24:58Z"}, "message": "(__unwind_function): Provide a default definition for implementations\nthat don't yet have a function unwinder.\n\nFrom-SVN: r10524", "tree": {"sha": "81de1ef043a16cda0e79ff53416e4ac500c795d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81de1ef043a16cda0e79ff53416e4ac500c795d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6e84dc4845c7da5bf2d477a531a23b9dee5b907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e84dc4845c7da5bf2d477a531a23b9dee5b907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6e84dc4845c7da5bf2d477a531a23b9dee5b907", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6e84dc4845c7da5bf2d477a531a23b9dee5b907/comments", "author": null, "committer": null, "parents": [{"sha": "b030d598109a6a7060cd00c7422ae4564ede0f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b030d598109a6a7060cd00c7422ae4564ede0f0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b030d598109a6a7060cd00c7422ae4564ede0f0c"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "d266a4a9226d5e200f151082a5d3befce80380ab", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6e84dc4845c7da5bf2d477a531a23b9dee5b907/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6e84dc4845c7da5bf2d477a531a23b9dee5b907/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=c6e84dc4845c7da5bf2d477a531a23b9dee5b907", "patch": "@@ -2349,18 +2349,16 @@ __unwind_function(void *ptr)\n   /* This is a test routine, as we have to dynamically probe to find out\n      what to pop for certain, this is just a guess. */\n   asm(\"leal -16(%ebp),%esp\");\n-  asm(\"pop %eax\"); /* really for popl %ebx */\n-  asm(\"pop %eax\"); /* really for popl %esi */\n-  asm(\"pop %eax\"); /* really for popl %edi */\n+  asm(\"pop %ebx\");\n+  asm(\"pop %esi\");\n+  asm(\"pop %edi\");\n   asm(\"movl %ebp,%esp\");\n   asm(\"popl %ebp\");\n \n   asm(\"movl %ecx,0(%esp)\");\n   asm(\"ret\");\n }\n-#endif\n-\n-#if #machine(rs6000)\n+#elif #machine(rs6000)\n __unwind_function(void *ptr)\n {\n   asm(\"mr 31,1\");\n@@ -2376,9 +2374,7 @@ __unwind_function(void *ptr)\n   asm(\"# br\");\n   asm(\"mtctr 3;bctr # b 3\");\n }\n-#endif /* rs6000 */\n-\n-#if #machine(powerpc)\n+#elif #machine(powerpc)\n __unwind_function(void *ptr)\n {\n   asm(\"mr 31,1\");\n@@ -2394,6 +2390,11 @@ __unwind_function(void *ptr)\n   asm(\"# br\");\n   asm(\"mtctr 3;bctr # b 3\");\n }\n+#else\n+__unwind_function(void *ptr)\n+{\n+  abort ();\n+}\n #endif /* powerpc */\n #endif /* L_eh */\n \f"}]}