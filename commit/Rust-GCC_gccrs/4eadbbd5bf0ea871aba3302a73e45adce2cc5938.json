{"sha": "4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhZGJiZDViZjBlYTg3MWFiYTMzMDJhNzNlNDVhZGNlMmNjNTkzOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-03-21T19:43:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-03-21T19:43:36Z"}, "message": "sdbout.c: #include ggc.h.\n\n\t* sdbout.c: #include ggc.h.\n \t(sdbout_init): Move to end of file.\n\tCall ggc_add_tree_root for anonymous_types.\n\t(sdbout_symbol): Use DECL_NAME for local, not DECL_ASSEMBLER_NAME.\n\t(sdbout_one_type): Use DECL_NAME for field name.\n\t* Makefile.in (sdbout.o): Show includes ggc.h.\n\nFrom-SVN: r40710", "tree": {"sha": "afa7dd6e86b2aa45534ef13c23d96c04a4b26cc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afa7dd6e86b2aa45534ef13c23d96c04a4b26cc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/comments", "author": null, "committer": null, "parents": [{"sha": "2d32013ffed6aa934bbb70a026e6fd326f8c2012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d32013ffed6aa934bbb70a026e6fd326f8c2012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d32013ffed6aa934bbb70a026e6fd326f8c2012"}], "stats": {"total": 74, "additions": 47, "deletions": 27}, "files": [{"sha": "042911804ac182de6f1ff275a37cd48c5eebc41e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "patch": "@@ -1,3 +1,12 @@\n+Wed Mar 21 14:27:11 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* sdbout.c: #include ggc.h.\n+ \t(sdbout_init): Move to end of file.\n+\tCall ggc_add_tree_root for anonymous_types.\n+\t(sdbout_symbol): Use DECL_NAME for local, not DECL_ASSEMBLER_NAME.\n+\t(sdbout_one_type): Use DECL_NAME for field name.\n+\t* Makefile.in (sdbout.o): Show includes ggc.h.\n+\n Wed Mar 21 20:33:26 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (override_options): Default ix86_regparm to REGPARM_MAX.\n@@ -15,8 +24,10 @@ Wed Mar 21 20:33:26 CET 2001  Jan Hubicka  <jh@suse.cz>\n \t(print_operand_address): Output (%rip) where possible.\n \t(split_di): Abort on 64bit registers.\n \t(ix86_expand_branch): DImode comparison is simple for x86_64.\n-\t(memory_address_length): Recognize memory addresses formed using PRE/POST modify.\n-\t(ix86_data_alignment, ix86_local_alignment): Align arrays to 16 bytes for x86_64.\n+\t(memory_address_length): Recognize memory addresses formed using\n+\tPRE/POST modify.\n+\t(ix86_data_alignment, ix86_local_alignment): Align arrays to 16 bytes \n+\tfor x86_64.\n \t* i386.h (TARGET_USE_SAHF): Disable for 64bit.\n \n Wed Mar 21 18:51:19 CET 2001  Jan Hubicka  <jh@suse.cz>"}, {"sha": "dc9a55f550534be5cdff4cd34dfa0c2684ab82aa", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "patch": "@@ -1410,7 +1410,7 @@ dbxout.o : dbxout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) flags.h $(REGS_H) \\\n    $(TM_P_H)\n sdbout.o : sdbout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) flags.h except.h \\\n    function.h $(EXPR_H) output.h hard-reg-set.h $(REGS_H) real.h \\\n-   insn-config.h $(OBSTACK_H) xcoffout.h c-pragma.h \\\n+   insn-config.h $(OBSTACK_H) xcoffout.h c-pragma.h ggc.h \\\n    sdbout.h toplev.h $(TM_P_H)\n dwarfout.o : dwarfout.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) dwarf.h \\\n    flags.h insn-config.h reload.h output.h toplev.h dwarfout.h $(TM_P_H)"}, {"sha": "649bc0aa67d544869607dd5bdfb8eb3b59146115", "filename": "gcc/sdbout.c", "status": "modified", "additions": 33, "deletions": 24, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4eadbbd5bf0ea871aba3302a73e45adce2cc5938/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=4eadbbd5bf0ea871aba3302a73e45adce2cc5938", "patch": "@@ -54,6 +54,7 @@ AT&T C compiler.  From the example below I would conclude the following:\n #include \"reload.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n+#include \"ggc.h\"\n #include \"tm_p.h\"\n \n /* Mips systems use the SDB functions to dump out symbols, but do not\n@@ -301,28 +302,6 @@ static struct sdb_file *current_file;\n \n #endif /* MIPS_DEBUGGING_INFO */\n \f\n-/* Set up for SDB output at the start of compilation.  */\n-\n-void\n-sdbout_init (asm_file, input_file_name, syms)\n-     FILE *asm_file ATTRIBUTE_UNUSED;\n-     const char *input_file_name ATTRIBUTE_UNUSED;\n-     tree syms ATTRIBUTE_UNUSED;\n-{\n-#ifdef MIPS_DEBUGGING_INFO\n-  current_file = (struct sdb_file *) xmalloc (sizeof *current_file);\n-  current_file->next = NULL;\n-  current_file->name = input_file_name;\n-#endif\n-\n-#ifdef RMS_QUICK_HACK_1\n-  tree t;\n-  for (t = syms; t; t = TREE_CHAIN (t))\n-    if (DECL_NAME (t) && IDENTIFIER_POINTER (DECL_NAME (t)) != 0\n-\t&& !strcmp (IDENTIFIER_POINTER (DECL_NAME (t)), \"__vtbl_ptr_type\"))\n-      sdbout_symbol (t, 0);\n-#endif  \n-}\n \n #if 0\n \n@@ -844,7 +823,10 @@ sdbout_symbol (decl, local)\n \treturn;\n \n       /* Record the name for, starting a symtab entry.  */\n-      name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+      if (local)\n+\tname = IDENTIFIER_POINTER (DECL_NAME (decl));\n+      else\n+\tname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n \n       if (GET_CODE (value) == MEM\n \t  && GET_CODE (XEXP (value, 0)) == SYMBOL_REF)\n@@ -1247,7 +1229,7 @@ sdbout_one_type (type)\n \t\tconst char *name;\n \n \t\tCONTIN;\n-\t\tname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (tem));\n+\t\tname = IDENTIFIER_POINTER (DECL_NAME (tem));\n \t\tPUT_SDB_DEF (name);\n \t\tif (DECL_BIT_FIELD_TYPE (tem))\n \t\t  {\n@@ -1642,4 +1624,31 @@ sdbout_resume_previous_source_file ()\n #endif\n }\n \n+/* Set up for SDB output at the start of compilation.  */\n+\n+void\n+sdbout_init (asm_file, input_file_name, syms)\n+     FILE *asm_file ATTRIBUTE_UNUSED;\n+     const char *input_file_name ATTRIBUTE_UNUSED;\n+     tree syms ATTRIBUTE_UNUSED;\n+{\n+#ifdef MIPS_DEBUGGING_INFO\n+  current_file = (struct sdb_file *) xmalloc (sizeof *current_file);\n+  current_file->next = NULL;\n+  current_file->name = input_file_name;\n+#endif\n+\n+#ifdef RMS_QUICK_HACK_1\n+  tree t;\n+  for (t = syms; t; t = TREE_CHAIN (t))\n+    if (DECL_NAME (t) && IDENTIFIER_POINTER (DECL_NAME (t)) != 0\n+\t&& !strcmp (IDENTIFIER_POINTER (DECL_NAME (t)), \"__vtbl_ptr_type\"))\n+      sdbout_symbol (t, 0);\n+#endif  \n+\n+#ifdef SDB_ALLOW_FORWARD_REFERENCES\n+  ggc_add_tree_root (&anonymous_types, 1);\n+#endif\n+}\n+\n #endif /* SDB_DEBUGGING_INFO */"}]}