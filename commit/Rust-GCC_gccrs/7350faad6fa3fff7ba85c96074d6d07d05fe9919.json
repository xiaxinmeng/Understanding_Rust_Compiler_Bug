{"sha": "7350faad6fa3fff7ba85c96074d6d07d05fe9919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM1MGZhYWQ2ZmEzZmZmN2JhODVjOTYwNzRkNmQwN2QwNWZlOTkxOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-06-28T08:53:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-06-28T08:53:03Z"}, "message": "re PR c++/57682 (Uniform initialization syntax rejected in function-try-block)\n\n/cp\n2013-06-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/57682\n\t* parser.c (cp_parser_save_member_function_body): Handle correctly\n\tcurly braces in function-try-block mem-initializers.\n\n/testsuite\n2013-06-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/57682\n\t* g++.dg/cpp0x/initlist73.C: New.\n\nFrom-SVN: r200504", "tree": {"sha": "9619c90a5d8b194036c5bdf9c8b1b3f0c1031617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9619c90a5d8b194036c5bdf9c8b1b3f0c1031617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7350faad6fa3fff7ba85c96074d6d07d05fe9919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7350faad6fa3fff7ba85c96074d6d07d05fe9919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7350faad6fa3fff7ba85c96074d6d07d05fe9919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7350faad6fa3fff7ba85c96074d6d07d05fe9919/comments", "author": null, "committer": null, "parents": [{"sha": "1c3429049aebb067ca6e7c1543206e58972d7878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3429049aebb067ca6e7c1543206e58972d7878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3429049aebb067ca6e7c1543206e58972d7878"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "120247d641e573caad5470c540925899d02bb6e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7350faad6fa3fff7ba85c96074d6d07d05fe9919", "patch": "@@ -1,3 +1,9 @@\n+2013-06-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/57682\n+\t* parser.c (cp_parser_save_member_function_body): Handle correctly\n+\tcurly braces in function-try-block mem-initializers.\n+\n 2013-06-27  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/57509"}, {"sha": "c6ecf69e50e9852fb808ca2a72d0c06e4efdb4f7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7350faad6fa3fff7ba85c96074d6d07d05fe9919", "patch": "@@ -22798,12 +22798,14 @@ cp_parser_save_member_function_body (cp_parser* parser,\n   /* Save away the tokens that make up the body of the\n      function.  */\n   first = parser->lexer->next_token;\n+  /* Handle function try blocks.  */\n+  if (cp_lexer_next_token_is_keyword (parser->lexer, RID_TRY))\n+    cp_lexer_consume_token (parser->lexer);\n   /* We can have braced-init-list mem-initializers before the fn body.  */\n   if (cp_lexer_next_token_is (parser->lexer, CPP_COLON))\n     {\n       cp_lexer_consume_token (parser->lexer);\n-      while (cp_lexer_next_token_is_not (parser->lexer, CPP_OPEN_BRACE)\n-\t     && cp_lexer_next_token_is_not_keyword (parser->lexer, RID_TRY))\n+      while (cp_lexer_next_token_is_not (parser->lexer, CPP_OPEN_BRACE))\n \t{\n \t  /* cache_group will stop after an un-nested { } pair, too.  */\n \t  if (cp_parser_cache_group (parser, CPP_CLOSE_PAREN, /*depth=*/0))"}, {"sha": "2c2443f6a1e8bc3216542a411186681bf51358b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7350faad6fa3fff7ba85c96074d6d07d05fe9919", "patch": "@@ -1,3 +1,8 @@\n+2013-06-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/57682\n+\t* g++.dg/cpp0x/initlist73.C: New.\n+\n 2013-06-27  Meador Inge  <meadori@codesourcery.com>\n \n \t* gcc.dg/atomic-flag.c: Add dg-require-effective-target sync_*."}, {"sha": "de9748d8b902ff9c6fb1ed75e19fac63e2016c47", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist73.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist73.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7350faad6fa3fff7ba85c96074d6d07d05fe9919/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist73.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist73.C?ref=7350faad6fa3fff7ba85c96074d6d07d05fe9919", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/57682\n+// { dg-do compile { target c++11 } }\n+\n+struct Class\n+{\n+  Class (int func)\n+  try\n+  : f { func }  { }\n+  catch ( ... ) { }\n+\n+private:\n+  int f;\n+};"}]}