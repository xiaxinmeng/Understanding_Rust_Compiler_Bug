{"sha": "f9427d170488c89fc8f2f4eed47b7feca4b32296", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk0MjdkMTcwNDg4Yzg5ZmM4ZjJmNGVlZDQ3YjdmZWNhNGIzMjI5Ng==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-08-02T19:56:53Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-08-02T19:56:53Z"}, "message": "encodings.pl: New file.\n\n\t* scripts/encodings.pl: New file.\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (convert_source_files): Added IOConverter.java.\n\t* gnu/gcj/convert/UnicodeToBytes.java (UnicodeToBytes): Extend\n\tIOConverter.\n\t(getDefaultDecodingClass): Canonicalize default encoding name.\n\t(getEncoder): Likewise.\n\t* gnu/gcj/convert/BytesToUnicode.java (BytesToUnicode): Extend\n\tIOConverter.\n\t(getDefaultDecodingClass): Canonicalize default encoding name.\n\t(getDecoder): Likewise.\n\t* gnu/gcj/convert/IOConverter.java: New file.\n\nFrom-SVN: r35432", "tree": {"sha": "0c8d1667b236d225c6148e9a0990ef2a665f3fca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c8d1667b236d225c6148e9a0990ef2a665f3fca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9427d170488c89fc8f2f4eed47b7feca4b32296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9427d170488c89fc8f2f4eed47b7feca4b32296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9427d170488c89fc8f2f4eed47b7feca4b32296", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9427d170488c89fc8f2f4eed47b7feca4b32296/comments", "author": null, "committer": null, "parents": [{"sha": "5f51a7528fa1d1cee55a664b71dd3b3a08151ffc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f51a7528fa1d1cee55a664b71dd3b3a08151ffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f51a7528fa1d1cee55a664b71dd3b3a08151ffc"}], "stats": {"total": 216, "additions": 186, "deletions": 30}, "files": [{"sha": "ed5bc408f1c02509fb376512b15288b18fc04cad", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -1,3 +1,18 @@\n+2000-08-02  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* scripts/encodings.pl: New file.\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (convert_source_files): Added IOConverter.java.\n+\t* gnu/gcj/convert/UnicodeToBytes.java (UnicodeToBytes): Extend\n+\tIOConverter.\n+\t(getDefaultDecodingClass): Canonicalize default encoding name.\n+\t(getEncoder): Likewise.\n+\t* gnu/gcj/convert/BytesToUnicode.java (BytesToUnicode): Extend\n+\tIOConverter.\n+\t(getDefaultDecodingClass): Canonicalize default encoding name.\n+\t(getDecoder): Likewise.\n+\t* gnu/gcj/convert/IOConverter.java: New file.\n+\n 2000-08-02  Bryce McKinlay  <bryce@albatross.co.nz>\n \n         * interpret.cc (_Jv_InterpMethod::continue1): Type of `fun' changed"}, {"sha": "e4e569bca55449272127a6f7010360d04cbb5129", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -473,6 +473,7 @@ gnu/gcj/convert/Input_JavaSrc.java \\\n gnu/gcj/convert/Input_SJIS.java \\\n gnu/gcj/convert/Input_UTF8.java\t\\\n gnu/gcj/convert/Input_iconv.java \\\n+gnu/gcj/convert/IOConverter.java \\\n gnu/gcj/convert/Output_8859_1.java \\\n gnu/gcj/convert/Output_EUCJIS.java \\\n gnu/gcj/convert/Output_JavaSrc.java \\\n@@ -494,8 +495,8 @@ java/awt/AWTEventMulticaster.java \\\n java/awt/AWTException.java \\\n java/awt/ActiveEvent.java \\\n java/awt/Adjustable.java \\\n-java/awt/Button.java \\\n java/awt/BorderLayout.java \\\n+java/awt/Button.java \\\n java/awt/CheckboxGroup.java \\\n java/awt/Color.java \\\n java/awt/Component.java\t\\"}, {"sha": "6d51cb0a43950e1a85c6adc8b731270e795a7ccd", "filename": "libjava/Makefile.in", "status": "modified", "additions": 45, "deletions": 23, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -115,31 +115,48 @@ here = @here@\n libgcj_basedir = @libgcj_basedir@\n \n AUTOMAKE_OPTIONS = foreign no-installinfo\n-@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@TESTSUBDIR_TRUE@SUBDIRS = \\\n+@TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = \\\n+@TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = \\\n+@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = \\\n+@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = \\\n+@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n \n toolexeclib_LTLIBRARIES = libgcj.la\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.zip\n \n-@NEEDS_DATA_START_TRUE@toolexeclib_LIBRARIES = @NEEDS_DATA_START_TRUE@libgcjdata.a\n-@NEEDS_DATA_START_TRUE@libgcjdata_a_SOURCES = @NEEDS_DATA_START_TRUE@libgcjdata.c\n+@NEEDS_DATA_START_TRUE@toolexeclib_LIBRARIES = \\\n+@NEEDS_DATA_START_TRUE@libgcjdata.a\n+@NEEDS_DATA_START_TRUE@libgcjdata_a_SOURCES = \\\n+@NEEDS_DATA_START_TRUE@libgcjdata.c\n \n-@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij\n+@NATIVE_TRUE@bin_PROGRAMS = \\\n+@NATIVE_TRUE@jv-convert gij\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJ = @CANADIAN_TRUE@@NULL_TARGET_TRUE@gcj\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJ = @CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcj\n-@CANADIAN_FALSE@GCJ = @CANADIAN_FALSE@$(expanded)/gcj$(EXEEXT) -B$(expanded)/\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@zip\n-@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n-@CANADIAN_FALSE@expanded = @CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJ = \\\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@gcj\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJ = \\\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcj\n+@CANADIAN_FALSE@GCJ = \\\n+@CANADIAN_FALSE@$(expanded)/gcj$(EXEEXT) -B$(expanded)/\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@zip\n+@CANADIAN_FALSE@ZIP = \\\n+@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = \\\n+@CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = \\\n+@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_FALSE@expanded = \\\n+@CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n \n GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled -L$(here) $(JC1FLAGS) -c\n GCJLINK = $(LIBTOOL) --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n@@ -153,8 +170,10 @@ WARNINGS = -W -Wall\n AM_CXXFLAGS = -fno-rtti -fvtable-thunks -fasynchronous-exceptions \\\n \t@LIBGCJ_CXXFLAGS@ @EXCEPTIONSPEC@ $(WARNINGS) -D_GNU_SOURCE\n \n-@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = \\\n+@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = \\\n+@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n@@ -206,7 +225,8 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -250,6 +270,7 @@ gnu/gcj/convert/Input_JavaSrc.java \\\n gnu/gcj/convert/Input_SJIS.java \\\n gnu/gcj/convert/Input_UTF8.java\t\\\n gnu/gcj/convert/Input_iconv.java \\\n+gnu/gcj/convert/IOConverter.java \\\n gnu/gcj/convert/Output_8859_1.java \\\n gnu/gcj/convert/Output_EUCJIS.java \\\n gnu/gcj/convert/Output_JavaSrc.java \\\n@@ -270,8 +291,8 @@ java/awt/AWTEventMulticaster.java \\\n java/awt/AWTException.java \\\n java/awt/ActiveEvent.java \\\n java/awt/Adjustable.java \\\n-java/awt/Button.java \\\n java/awt/BorderLayout.java \\\n+java/awt/Button.java \\\n java/awt/CheckboxGroup.java \\\n java/awt/Color.java \\\n java/awt/Component.java\t\\\n@@ -992,7 +1013,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/defineclass.P .deps/exception.P .deps/gij.P \\\n .deps/gnu/gcj/RawData.P .deps/gnu/gcj/awt/BitMaskExtent.P \\\n .deps/gnu/gcj/awt/Buffers.P .deps/gnu/gcj/convert/BytesToUnicode.P \\\n-.deps/gnu/gcj/convert/Convert.P .deps/gnu/gcj/convert/Input_8859_1.P \\\n+.deps/gnu/gcj/convert/Convert.P .deps/gnu/gcj/convert/IOConverter.P \\\n+.deps/gnu/gcj/convert/Input_8859_1.P \\\n .deps/gnu/gcj/convert/Input_EUCJIS.P \\\n .deps/gnu/gcj/convert/Input_JavaSrc.P \\\n .deps/gnu/gcj/convert/Input_SJIS.P .deps/gnu/gcj/convert/Input_UTF8.P \\\n@@ -1765,7 +1787,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "d80ed6570d839b858bdbde7bc5883a7692178c50", "filename": "libjava/gnu/gcj/convert/BytesToUnicode.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fgnu%2Fgcj%2Fconvert%2FBytesToUnicode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fgnu%2Fgcj%2Fconvert%2FBytesToUnicode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FBytesToUnicode.java?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -8,7 +8,7 @@\n \n package gnu.gcj.convert;\n \n-public abstract class BytesToUnicode\n+public abstract class BytesToUnicode extends IOConverter\n {\n   /** Buffer to read bytes from.\n    * The characters inbuffer[inpos] ... inbuffer[inlength-1] are available. */\n@@ -25,7 +25,7 @@ static synchronized void getDefaultDecodingClass()\n     // Test (defaultDecodingClass == null) again in case of race condition.\n     if (defaultDecodingClass == null)\n       {\n-\tString encoding = System.getProperty(\"file.encoding\");\n+\tString encoding = canonicalize (System.getProperty(\"file.encoding\"));\n \tString className = \"gnu.gcj.convert.Input_\"+encoding;\n \ttry\n \t  {\n@@ -60,7 +60,7 @@ public static BytesToUnicode getDefaultDecoder()\n   public static BytesToUnicode getDecoder (String encoding)\n     throws java.io.UnsupportedEncodingException\n   {\n-    String className = \"gnu.gcj.convert.Input_\"+encoding;\n+    String className = \"gnu.gcj.convert.Input_\" + canonicalize (encoding);\n     Class decodingClass;\n     try \n       { \n@@ -71,6 +71,8 @@ public static BytesToUnicode getDecoder (String encoding)\n       { \n \ttry\n \t  {\n+\t    // We pass the original name to iconv and let it handle\n+\t    // its own aliasing.\n \t    return new Input_iconv (encoding);\n \t  }\n \tcatch (Throwable _)"}, {"sha": "c98662485b67a39576d5aaf7781ec0191520fefd", "filename": "libjava/gnu/gcj/convert/IOConverter.java", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fgnu%2Fgcj%2Fconvert%2FIOConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fgnu%2Fgcj%2Fconvert%2FIOConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FIOConverter.java?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -0,0 +1,52 @@\n+/* Copyright (C) 2000  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+/* This is a base class that handles aliasing issues for\n+   UnicodeToBytes to BytesToUnicode.  */\n+\n+package gnu.gcj.convert;\n+\n+import java.util.Hashtable;\n+\n+public abstract class IOConverter\n+{\n+  // Map encoding aliases to our canonical form.\n+  static private Hashtable hash = new Hashtable ();\n+\n+  static\n+  {\n+    // Manually maintained aliases.  Note that the value must be our\n+    // canonical name.\n+    hash.put (\"ISO-Latin-1\", \"8859_1\");\n+    // All aliases after this point are automatically generated by the\n+    // `encodings.pl' script.  Run it to make any corrections.\n+    hash.put (\"ISO_8859-1:1987\", \"8859_1\");\n+    hash.put (\"iso-ir-100\", \"8859_1\");\n+    hash.put (\"ISO_8859-1\", \"8859_1\");\n+    hash.put (\"ISO-8859-1\", \"8859_1\");\n+    hash.put (\"latin1\", \"8859_1\");\n+    hash.put (\"l1\", \"8859_1\");\n+    hash.put (\"IBM819\", \"8859_1\");\n+    hash.put (\"CP819\", \"8859_1\");\n+    hash.put (\"csISOLatin1\", \"8859_1\");\n+    hash.put (\"UTF-8\", \"UTF8\");\n+    hash.put (\"Shift_JIS\", \"SJIS\");\n+    hash.put (\"MS_Kanji\", \"SJIS\");\n+    hash.put (\"csShiftJIS\", \"SJIS\");\n+    hash.put (\"Extended_UNIX_Code_Packed_Format_for_Japanese\", \"EUCJIS\");\n+    hash.put (\"csEUCPkdFmtJapanese\", \"EUCJIS\");\n+    hash.put (\"EUC-JP\", \"EUCJIS\");\n+  }\n+\n+  // Turn an alias into the canonical form.\n+  protected static final String canonicalize (String name)\n+  {\n+    String c = (String) hash.get (name);\n+    return c == null ? name : c;\n+  }\n+}"}, {"sha": "1ba6ddf8065433b03609b983bd6efbdc11b652c6", "filename": "libjava/gnu/gcj/convert/UnicodeToBytes.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FUnicodeToBytes.java?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -8,7 +8,7 @@\n \n package gnu.gcj.convert; \n  \n-public abstract class UnicodeToBytes\n+public abstract class UnicodeToBytes extends IOConverter\n {\n   /** Buffer to emit bytes to.\n    * The locations buf[count] ... buf[buf.length-1] are available. */\n@@ -22,7 +22,7 @@ static synchronized void getDefaultEncodingClass()\n     // Test (defaultEncodingClass == null) again in case of race condition.\n     if (defaultEncodingClass == null)\n       {\n-\tString encoding = System.getProperty(\"file.encoding\");\n+\tString encoding = canonicalize (System.getProperty(\"file.encoding\"));\n \tString className = \"gnu.gcj.convert.Output_\"+encoding;\n \ttry\n \t  {\n@@ -58,7 +58,7 @@ public static UnicodeToBytes getDefaultEncoder()\n   public static UnicodeToBytes getEncoder (String encoding)\n     throws java.io.UnsupportedEncodingException\n   {\n-    String className = \"gnu.gcj.convert.Output_\"+encoding;\n+    String className = \"gnu.gcj.convert.Output_\" + canonicalize (encoding);\n     Class encodingClass;\n     try \n       { \n@@ -69,6 +69,8 @@ public static UnicodeToBytes getEncoder (String encoding)\n       { \n \ttry\n \t  {\n+\t    // We pass the original name to iconv and let it handle\n+\t    // its own aliasing.\n \t    return new Output_iconv (encoding);\n \t  }\n \tcatch (Throwable _)"}, {"sha": "f2f649959ce72ce7d1773836707c567011cfe905", "filename": "libjava/scripts/encodings.pl", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fscripts%2Fencodings.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9427d170488c89fc8f2f4eed47b7feca4b32296/libjava%2Fscripts%2Fencodings.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fencodings.pl?ref=f9427d170488c89fc8f2f4eed47b7feca4b32296", "patch": "@@ -0,0 +1,62 @@\n+# encodings.pl - Download IANA text and compute alias list.\n+# Assumes you are running this program from gnu/gcj/convert/.\n+# Output suitable for direct inclusion in IOConverter.java.\n+\n+# Map IANA canonical names onto our canonical names.\n+%map = (\n+\t'ISO_8859-1:1987' => '8859_1',\n+\t'UTF-8' => 'UTF8',\n+\t'Shift_JIS' => 'SJIS',\n+\t'Extended_UNIX_Code_Packed_Format_for_Japanese' => 'EUCJIS'\n+\t);\n+\n+if ($ARGV[0] eq '')\n+{\n+    $file = 'character-sets';\n+    if (! -f $file)\n+    {\n+\t# Too painful to figure out how to get Perl to do it.\n+\tsystem 'wget -o .wget-log http://www.isi.edu/in-notes/iana/assignments/character-sets';\n+    }\n+}\n+else\n+{\n+    $file = $ARGV[0];\n+}\n+\n+open (INPUT, \"< $file\") || die \"couldn't open $file: $!\";\n+\n+$body = 0;\n+$current = '';\n+while (<INPUT>)\n+{\n+    chop;\n+    $body = 1 if /^Name:/;\n+    next unless $body;\n+\n+    if (/^$/)\n+    {\n+\t$current = '';\n+\tnext;\n+    }\n+\n+    ($type, $name) = split (/\\s+/);\n+    if ($type eq 'Name:')\n+    {\n+\t$current = $map{$name};\n+\tif ($current)\n+\t{\n+\t    print \"    hash.put (\\\"$name\\\", \\\"$current\\\");\\n\";\n+\t}\n+    }\n+    elsif ($type eq 'Alias:')\n+    {\n+\t# The IANA list has some ugliness.\n+\tif ($name ne '' && $name ne 'NONE' && $current)\n+\t{\n+\t    print \"    hash.put (\\\"$name\\\", \\\"$current\\\");\\n\";\n+\t}\n+    }\n+}\n+\n+close (INPUT);"}]}