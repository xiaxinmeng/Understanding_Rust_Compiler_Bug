{"sha": "0f62caf58b5d11f375f789385d6d49891ebd9a94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY2MmNhZjU4YjVkMTFmMzc1Zjc4OTM4NWQ2ZDQ5ODkxZWJkOWE5NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:11:33Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-05T14:11:33Z"}, "message": "Provide warning for missing jobserver.\n\n\tPR driver/94330\n\t* lto-wrapper.c (run_gcc): When using -flto=jobserver,\n\treport warning when the jobserver is not detected.", "tree": {"sha": "61de0150b2fc3e95c0205c8ad6213049fb0c06b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61de0150b2fc3e95c0205c8ad6213049fb0c06b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f62caf58b5d11f375f789385d6d49891ebd9a94", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6xdBUACgkQTcGC3A+n\nN4U4cAgAmDKjiDdopffVx6v5/lEwGndsS74HYCnTT93ikxlL3raRZNNpj5xsUxrP\nqkF/GZApjcSz+XPXoEYmYO4dCVT7JONoa5WeoaCfJEaug0ds9wT391Bgav5a2+mV\nJfIyj8etMwmVobh0AXRdnVNG8AP9mZPx0KEKZRBYS2GBSRUInXiJjkvDQWgxKWzt\n2n+adcAOXVbXmv1/MIi/IFMJ4NXxF2OsoxllHFgrfBwFn9H2xqRFhkgE6tSM7Dvz\nmv6jexTTCZisXtYnMbeHC5uvuz0YVbPQp6SP/F2tZBdXKVVafZjtOz+s14tllxu6\nGOra6kaaZTm6KhTwjufaNqJ/0tdZZQ==\n=ntul\n-----END PGP SIGNATURE-----", "payload": "tree 61de0150b2fc3e95c0205c8ad6213049fb0c06b6\nparent af2311abf8a13cdfe00bfa44453bb02c38b0b5d8\nauthor Martin Liska <mliska@suse.cz> 1588687893 +0200\ncommitter Martin Liska <mliska@suse.cz> 1588687893 +0200\n\nProvide warning for missing jobserver.\n\n\tPR driver/94330\n\t* lto-wrapper.c (run_gcc): When using -flto=jobserver,\n\treport warning when the jobserver is not detected.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f62caf58b5d11f375f789385d6d49891ebd9a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f62caf58b5d11f375f789385d6d49891ebd9a94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f62caf58b5d11f375f789385d6d49891ebd9a94/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af2311abf8a13cdfe00bfa44453bb02c38b0b5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af2311abf8a13cdfe00bfa44453bb02c38b0b5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af2311abf8a13cdfe00bfa44453bb02c38b0b5d8"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "cbdc5504cadbc58d419702db59682e7c0d0a9da2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f62caf58b5d11f375f789385d6d49891ebd9a94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f62caf58b5d11f375f789385d6d49891ebd9a94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f62caf58b5d11f375f789385d6d49891ebd9a94", "patch": "@@ -1,3 +1,9 @@\n+2020-05-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR driver/94330\n+\t* lto-wrapper.c (run_gcc): When using -flto=jobserver,\n+\treport warning when the jobserver is not detected.\n+\n 2020-05-05  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/94636"}, {"sha": "19d0c224dadadaab2e0e6b9bdd7cf5809a4d64ca", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f62caf58b5d11f375f789385d6d49891ebd9a94/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f62caf58b5d11f375f789385d6d49891ebd9a94/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=0f62caf58b5d11f375f789385d6d49891ebd9a94", "patch": "@@ -1236,28 +1236,33 @@ init_num_threads (void)\n \n /* FIXME: once using -std=c++11, we can use std::thread::hardware_concurrency.  */\n \n-/* Return true when a jobserver is running and can accept a job.  */\n+/* Test and return reason why a jobserver cannot be detected.  */\n \n-static bool\n+static const char *\n jobserver_active_p (void)\n {\n+  #define JS_PREFIX \"jobserver is not available: \"\n+  #define JS_NEEDLE \"--jobserver-auth=\"\n+\n   const char *makeflags = getenv (\"MAKEFLAGS\");\n   if (makeflags == NULL)\n-    return false;\n+    return JS_PREFIX \"%<MAKEFLAGS%> environment variable is unset\";\n \n-  const char *needle = \"--jobserver-auth=\";\n-  const char *n = strstr (makeflags, needle);\n+  const char *n = strstr (makeflags, JS_NEEDLE);\n   if (n == NULL)\n-    return false;\n+    return JS_PREFIX \"%<\" JS_NEEDLE \"%> is not present in %<MAKEFLAGS%>\";\n \n   int rfd = -1;\n   int wfd = -1;\n \n-  return (sscanf (n + strlen (needle), \"%d,%d\", &rfd, &wfd) == 2\n-\t  && rfd > 0\n-\t  && wfd > 0\n-\t  && is_valid_fd (rfd)\n-\t  && is_valid_fd (wfd));\n+  if (sscanf (n + strlen (JS_NEEDLE), \"%d,%d\", &rfd, &wfd) == 2\n+      && rfd > 0\n+      && wfd > 0\n+      && is_valid_fd (rfd)\n+      && is_valid_fd (wfd))\n+    return NULL;\n+  else\n+    return JS_PREFIX \"cannot access %<\" JS_NEEDLE \"%> file descriptors\";\n }\n \n /* Execute gcc. ARGC is the number of arguments. ARGV contains the arguments. */\n@@ -1473,10 +1478,16 @@ run_gcc (unsigned argc, char *argv[])\n       auto_parallel = 0;\n       parallel = 0;\n     }\n-  else if (!jobserver && jobserver_active_p ())\n+  else\n     {\n-      parallel = 1;\n-      jobserver = 1;\n+      const char *jobserver_error = jobserver_active_p ();\n+      if (jobserver && jobserver_error != NULL)\n+\twarning (0, jobserver_error);\n+      else if (!jobserver && jobserver_error == NULL)\n+\t{\n+\t  parallel = 1;\n+\t  jobserver = 1;\n+\t}\n     }\n \n   if (linker_output)"}]}