{"sha": "f1b1846249458e8b583b407f674fec541c4f6869", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiMTg0NjI0OTQ1OGU4YjU4M2I0MDdmNjc0ZmVjNTQxYzRmNjg2OQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-09-21T15:30:20Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-09-21T15:30:20Z"}, "message": "2004-09-21  Casey Marshall  <csm@gnu.org>\n\n\t* java/security/cert/X509CRLSelector.java:\n\t(match): remove unreachable try-catch clauses.\n\tReported by: Dalibor Topic <robilad@kaffe.org>\n\nFrom-SVN: r87805", "tree": {"sha": "bc309268f61548dfd2fd03375ad799b9964d2e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc309268f61548dfd2fd03375ad799b9964d2e6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1b1846249458e8b583b407f674fec541c4f6869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b1846249458e8b583b407f674fec541c4f6869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b1846249458e8b583b407f674fec541c4f6869", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b1846249458e8b583b407f674fec541c4f6869/comments", "author": null, "committer": null, "parents": [{"sha": "9413382eec489236a06827e7dbff33975b249bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9413382eec489236a06827e7dbff33975b249bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9413382eec489236a06827e7dbff33975b249bb1"}], "stats": {"total": 68, "additions": 33, "deletions": 35}, "files": [{"sha": "0e6212683a0d7df247c99c8fedde537eee29368f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b1846249458e8b583b407f674fec541c4f6869/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b1846249458e8b583b407f674fec541c4f6869/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f1b1846249458e8b583b407f674fec541c4f6869", "patch": "@@ -1,3 +1,15 @@\n+2004-09-21  Casey Marshall  <csm@gnu.org>\n+\n+\t* java/security/cert/X509CRLSelector.java:\n+\t(match): remove unreachable try-catch clauses.\n+\tReported by: Dalibor Topic <robilad@kaffe.org>\n+\n+2004-09-21  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/TreeMap.java (root): Don't initialize.\n+\t(TreeMap(Comparator)): Call fabricateTree(0).\n+\t(fabricateTree): Initialize root and size when count is 0.\n+\n 2004-09-21  Sven de Marothy <sven@physto.se>\n \n \t* java/nio/ByteBuffer.java (hashCode): Implemented."}, {"sha": "a59791e6759172a6dbb725d81d44818b2c1c0e14", "filename": "libjava/java/security/cert/X509CRLSelector.java", "status": "modified", "additions": 21, "deletions": 35, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b1846249458e8b583b407f674fec541c4f6869/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRLSelector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b1846249458e8b583b407f674fec541c4f6869/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRLSelector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FX509CRLSelector.java?ref=f1b1846249458e8b583b407f674fec541c4f6869", "patch": "@@ -378,7 +378,26 @@ public boolean match(CRL _crl)\n     BigInteger crlNumber = null;\n     if (maxCrlNumber != null)\n       {\n+        byte[] b = crl.getExtensionValue(CRL_NUMBER_ID);\n+        if (b == null)\n+          return false;\n         try\n+          {\n+            DERValue val = DERReader.read(b);\n+            if (!(val.getValue() instanceof BigInteger))\n+              return false;\n+            crlNumber = (BigInteger) val.getValue();\n+          }\n+        catch (IOException ioe)\n+          {\n+            return false;\n+          }\n+        if (maxCrlNumber.compareTo(crlNumber) < 0)\n+          return false;\n+      }\n+    if (minCrlNumber != null)\n+      {\n+        if (crlNumber == null)\n           {\n             byte[] b = crl.getExtensionValue(CRL_NUMBER_ID);\n             if (b == null)\n@@ -394,42 +413,9 @@ public boolean match(CRL _crl)\n               {\n                 return false;\n               }\n-            if (maxCrlNumber.compareTo(crlNumber) < 0)\n-              return false;\n-          }\n-        catch (CertificateParsingException cpe)\n-          {\n-            return false;\n-          }\n-      }\n-    if (minCrlNumber != null)\n-      {\n-        try\n-          {\n-            if (crlNumber == null)\n-              {\n-                byte[] b = crl.getExtensionValue(CRL_NUMBER_ID);\n-                if (b == null)\n-                  return false;\n-                try\n-                  {\n-                    DERValue val = DERReader.read(b);\n-                    if (!(val.getValue() instanceof BigInteger))\n-                      return false;\n-                    crlNumber = (BigInteger) val.getValue();\n-                  }\n-                catch (IOException ioe)\n-                  {\n-                    return false;\n-                  }\n-              }\n-            if (minCrlNumber.compareTo(crlNumber) > 0)\n-              return false;\n-          }\n-        catch (CertificateParsingException cpe)\n-          {\n-            return false;\n           }\n+        if (minCrlNumber.compareTo(crlNumber) > 0)\n+          return false;\n       }\n     if (date != null)\n       {"}]}