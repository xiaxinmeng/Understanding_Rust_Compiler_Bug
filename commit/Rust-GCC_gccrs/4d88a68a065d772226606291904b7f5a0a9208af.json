{"sha": "4d88a68a065d772226606291904b7f5a0a9208af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4OGE2OGEwNjVkNzcyMjI2NjA2MjkxOTA0YjdmNWEwYTkyMDhhZg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@purist.soma.redhat.com", "date": "2001-02-20T00:57:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-02-20T00:57:54Z"}, "message": "configure.in (target_libs): Remove libg++.\n\n\n2001-02-19  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* configure.in (target_libs): Remove libg++.\n\t(noconfigdirs): Remove libg++.\n\t(noconfigdirs): Same.\n\t(noconfigdirs): Same.\n\t(noconfigdirs): Same.\n\n\t* config-ml.in: Remove libg++ references.\n\n\t* Makefile.in (TARGET_CONFIGDIRS): Remove libio, libstdc++, libg++.\n\t(ALL_TARGET_MODULES): Same.\n\t(configure-target-libg++): Remove.\n\t(all-target-libg++): Remove.\n\t(configure-target-libio): Remove.\n\t(all-target-libio): Remove.\n\t(check-target-libio): Remove.\n\t(.PHONY): Remove.\n\t(libg++.tar.bz2): Remove.\n\t(all-target-cygmon): Remove libio.\n\t(all-target-libstdc++): Remove.\n\t(configure-target-libstdc++): Remove.\n\t(TARGET_LIB_PATH): Remove libstdc++.\n\t(ALL_GCC_CXX): Remove libstdc++.\n\nFrom-SVN: r39911", "tree": {"sha": "67137582102b401890ce51a69c18ccc3ba6ee4b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67137582102b401890ce51a69c18ccc3ba6ee4b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d88a68a065d772226606291904b7f5a0a9208af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d88a68a065d772226606291904b7f5a0a9208af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d88a68a065d772226606291904b7f5a0a9208af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d88a68a065d772226606291904b7f5a0a9208af/comments", "author": null, "committer": null, "parents": [{"sha": "3cb4f6fa99ae4e4c16714f476039413a24ab56ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb4f6fa99ae4e4c16714f476039413a24ab56ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb4f6fa99ae4e4c16714f476039413a24ab56ee"}], "stats": {"total": 87, "additions": 39, "deletions": 48}, "files": [{"sha": "442bc12947405ef5b6f38be4a93b5dd3e2b3a909", "filename": "ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d88a68a065d772226606291904b7f5a0a9208af/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d88a68a065d772226606291904b7f5a0a9208af/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=4d88a68a065d772226606291904b7f5a0a9208af", "patch": "@@ -1,3 +1,29 @@\n+2001-02-19  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n+\n+\t* configure.in (target_libs): Remove libg++.\n+\t(noconfigdirs): Remove libg++.\n+\t(noconfigdirs): Same.\n+\t(noconfigdirs): Same.\n+\t(noconfigdirs): Same.\n+\n+\t* config-ml.in: Remove libg++ references.\n+\n+\t* Makefile.in (TARGET_CONFIGDIRS): Remove libio, libstdc++, libg++.\n+\t(ALL_TARGET_MODULES): Same.\n+\t(configure-target-libg++): Remove.\n+\t(all-target-libg++): Remove.\n+\t(configure-target-libio): Remove.\n+\t(all-target-libio): Remove.\n+\t(check-target-libio): Remove.\n+\t(.PHONY): Remove.\n+\t(libg++.tar.bz2): Remove.\n+\t(all-target-cygmon): Remove libio.\n+\t(all-target-libstdc++): Remove.\n+\t(configure-target-libstdc++): Remove.\n+\t(TARGET_LIB_PATH): Remove libstdc++.\n+\t(ALL_GCC_CXX): Remove libstdc++.\n+\t(all-target-gperf): Correct.\n+\n 2001-02-16  Nick Clifton  <nickc@redhat.com>\n \n \t* configure.in (noconfigdirs): Allow configuration of texinfo"}, {"sha": "cf3aa7b87ea2dff4685c1feedbd3ea9a7552996a", "filename": "Makefile.in", "status": "modified", "additions": 5, "deletions": 34, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d88a68a065d772226606291904b7f5a0a9208af/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d88a68a065d772226606291904b7f5a0a9208af/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=4d88a68a065d772226606291904b7f5a0a9208af", "patch": "@@ -169,7 +169,7 @@ OTHERS =\n \n # This is set by the configure script to the list of directories which\n # should be built using the target tools.\n-TARGET_CONFIGDIRS = libiberty libgloss $(SPECIAL_LIBS) newlib libio librx libstdc++ libg++ winsup opcodes bsp libstub cygmon libf2c libchill libobjc\n+TARGET_CONFIGDIRS = libiberty libgloss $(SPECIAL_LIBS) newlib librx winsup opcodes bsp libstub cygmon libf2c libchill libobjc\n \n # Target libraries are put under this directory:\n # Changed by configure to $(target_alias) if cross.\n@@ -192,7 +192,7 @@ HOST_LIB_PATH = $$r/bfd:$$r/opcodes\n \n # This is the list of directories that may be needed in RPATH_ENVVAR\n # so that prorgams built for the target machine work.\n-TARGET_LIB_PATH = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:$$r/$(TARGET_SUBDIR)/libstdc++\n+TARGET_LIB_PATH = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n \n # configure.in sets SET_LIB_PATH to this if --enable-shared was used.\n # Some platforms don't like blank entries, so we remove duplicate,\n@@ -732,11 +732,8 @@ INSTALL_X11_MODULES = \\\n # This is a list of the targets for all of the modules which are compiled\n # using $(TARGET_FLAGS_TO_PASS).\n ALL_TARGET_MODULES = \\\n-\tall-target-libio \\\n-\tall-target-libstdc++ \\\n \tall-target-libstdc++-v3 \\\n \tall-target-librx \\\n-\tall-target-libg++ \\\n \tall-target-newlib \\\n \tall-target-libf2c \\\n \tall-target-libchill \\\n@@ -759,11 +756,8 @@ ALL_TARGET_MODULES = \\\n # This is a list of the configure targets for all of the modules which\n # are compiled using the target tools.\n CONFIGURE_TARGET_MODULES = \\\n-\tconfigure-target-libio \\\n-\tconfigure-target-libstdc++ \\\n \tconfigure-target-libstdc++-v3 \\\n \tconfigure-target-librx \\\n-\tconfigure-target-libg++ \\\n \tconfigure-target-newlib \\\n \tconfigure-target-libf2c \\\n \tconfigure-target-libchill \\\n@@ -786,10 +780,7 @@ CONFIGURE_TARGET_MODULES = \\\n # This is a list of the check targets for all of the modules which are\n # compiled using $(TARGET_FLAGS_TO_PASS).\n CHECK_TARGET_MODULES = \\\n-\tcheck-target-libio \\\n-\tcheck-target-libstdc++ \\\n \tcheck-target-libstdc++-v3 \\\n-\tcheck-target-libg++ \\\n \tcheck-target-newlib \\\n \tcheck-target-libf2c \\\n \tcheck-target-libchill \\\n@@ -806,10 +797,7 @@ CHECK_TARGET_MODULES = \\\n # This is a list of the install targets for all of the modules which are\n # compiled using $(TARGET_FLAGS_TO_PASS).\n INSTALL_TARGET_MODULES = \\\n-\tinstall-target-libio \\\n-\tinstall-target-libstdc++ \\\n \tinstall-target-libstdc++-v3 \\\n-\tinstall-target-libg++ \\\n \tinstall-target-newlib \\\n \tinstall-target-libf2c \\\n \tinstall-target-libchill \\\n@@ -896,11 +884,8 @@ CLEAN_MODULES = \\\n \n # All of the target modules that can be cleaned\n CLEAN_TARGET_MODULES = \\\n-\tclean-target-libio \\\n-\tclean-target-libstdc++ \\\n \tclean-target-libstdc++-v3 \\\n \tclean-target-librx \\\n-\tclean-target-libg++ \\\n \tclean-target-newlib \\\n \tclean-target-libf2c \\\n \tclean-target-libchill \\\n@@ -1570,7 +1555,7 @@ all-bzip2:\n all-cgen: all-libiberty\n all-cvssrc:\n configure-target-cygmon: $(ALL_GCC_C)\n-all-target-cygmon: configure-target-cygmon all-target-libiberty all-target-libio all-target-libstub all-target-bsp\n+all-target-cygmon: configure-target-cygmon all-target-libiberty all-target-libstub all-target-bsp\n all-db:\n all-dejagnu: all-tcl all-expect all-tk\n all-diff: all-libiberty\n@@ -1589,15 +1574,15 @@ all-gash: all-tcl\n all-gawk:\n ALL_GCC = all-gcc\n ALL_GCC_C = $(ALL_GCC) all-target-newlib all-target-libgloss\n-ALL_GCC_CXX = $(ALL_GCC_C) all-target-libstdc++ all-target-libstdc++-v3\n+ALL_GCC_CXX = $(ALL_GCC_C) all-target-libstdc++-v3\n all-gcc: all-bison all-byacc all-binutils all-gas all-ld all-zlib\n all-bootstrap: all-libiberty all-texinfo all-bison all-byacc all-binutils all-gas all-ld all-zlib\n GDB_TK = all-tk all-tcl all-itcl all-tix all-libgui\n all-gdb: all-libiberty all-opcodes all-bfd all-mmalloc all-readline all-bison all-byacc all-sim $(gdbnlmrequirements) $(GDB_TK)\n all-gettext:\n all-gnuserv:\n configure-target-gperf: $(ALL_GCC_C)\n-all-target-gperf: configure-target-gperf all-target-libiberty all-target-libstdc++\n+all-target-gperf: configure-target-gperf all-target-libiberty all-target-libstdc++-v3\n all-gprof: all-libiberty all-bfd all-opcodes all-intl\n all-grep: all-libiberty\n all-grez: all-libiberty all-bfd all-opcodes\n@@ -1611,13 +1596,8 @@ all-intl:\n all-ispell: all-emacs19\n all-itcl: all-tcl all-tk all-tcl8.1 all-tk8.1\n all-ld: all-libiberty all-bfd all-opcodes all-bison all-byacc all-flex all-intl\n-configure-target-libg++: $(ALL_GCC_CXX) configure-target-librx\n-all-target-libg++: configure-target-libg++ all-target-libiberty all-target-librx\n configure-target-libgloss: $(ALL_GCC)\n all-target-libgloss: configure-target-libgloss configure-target-newlib\n-configure-target-libio: $(ALL_GCC_C)\n-all-target-libio: configure-target-libio all-gas all-ld all-gcc all-target-libiberty all-target-newlib\n-check-target-libio: all-target-libstdc++\n all-libgui: all-tcl all-tk all-tcl8.1 all-tk8.1 all-itcl\n all-libiberty:\n configure-target-libffi: $(ALL_GCC_C) \n@@ -1626,8 +1606,6 @@ configure-target-libjava: $(ALL_GCC_CXX) configure-target-zlib configure-target-\n all-target-libjava: configure-target-libjava all-fastjar all-target-zlib all-target-boehm-gc all-target-qthreads all-target-libffi\n configure-target-librx: $(ALL_GCC_C)\n all-target-librx: configure-target-librx\n-configure-target-libstdc++: $(ALL_GCC_C)\n-all-target-libstdc++: configure-target-libstdc++ all-target-libiberty all-target-libio\n configure-target-libstdc++-v3: $(ALL_GCC_C)\n all-target-libstdc++-v3: configure-target-libstdc++-v3 all-target-libiberty\n configure-target-libstub: $(ALL_GCC_C)\n@@ -1895,13 +1873,6 @@ gas+binutils.tar.bz2: $(DIST_SUPPORT) $(GASB_SUPPORT_DIRS) gas\n \t\tMD5PROG=\"$(MD5PROG)\" \\\n \t\tSUPPORT_FILES=\"$(GASB_SUPPORT_DIRS)\"\n \n-.PHONY: libg++.tar.bz2\n-LIBGXX_SUPPORT_DIRS=include libstdc++ libio librx libiberty\n-libg++.tar.bz2: $(DIST_SUPPORT) libg++\n-\t$(MAKE) -f Makefile.in taz TOOL=libg++ \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(LIBGXX_SUPPORT_DIRS)\"\n-\n GNATS_SUPPORT_DIRS=include libiberty send-pr\n gnats.tar.bz2: $(DIST_SUPPORT) $(GNATS_SUPPORT_DIRS) gnats\n \t$(MAKE) -f  Makefile.in taz TOOL=gnats \\"}, {"sha": "d528ac7c5eb8d2893280896fc0af1afa2ea41e07", "filename": "config-ml.in", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d88a68a065d772226606291904b7f5a0a9208af/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d88a68a065d772226606291904b7f5a0a9208af/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=4d88a68a065d772226606291904b7f5a0a9208af", "patch": "@@ -17,8 +17,6 @@\n #   . ${srcdir}/../config-ml.in\n # fi\n #\n-# See librx/configure.in in the libg++ distribution for an example of how\n-# to handle autoconf'd libraries.\n #\n # Things are complicated because 6 separate cases must be handled:\n # 2 (native, cross) x 3 (absolute-path, relative-not-dot, dot) = 6.\n@@ -30,13 +28,10 @@\n # The build tree is layed out as\n #\n # ./\n-#   libg++\n #   newlib\n #   m68020/\n-#          libg++\n #          newlib\n #          m68881/\n-#                 libg++\n #                 newlib\n #\n # The nice feature about this arrangement is that inter-library references\n@@ -156,7 +151,7 @@ done\n if [ \"${enable_multilib}\" = yes ]; then\n \n # Compute whether this is the library's top level directory\n-# (ie: not a multilib subdirectory, and not a subdirectory like libg++/src).\n+# (ie: not a multilib subdirectory, and not a subdirectory like newlib/src).\n # ${with_multisubdir} tells us we're in the right branch, but we could be\n # in a subdir of that.\n # ??? The previous version could void this test by separating the process into"}, {"sha": "81c3605a91945843204b9ec2847ff57f9708f97a", "filename": "configure.in", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d88a68a065d772226606291904b7f5a0a9208af/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d88a68a065d772226606291904b7f5a0a9208af/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=4d88a68a065d772226606291904b7f5a0a9208af", "patch": "@@ -72,7 +72,6 @@ target_libs=\"target-libiberty \\\n \t\ttarget-newlib \\\n \t\ttarget-librx \\\n \t\t${libstdcxx_version} \\\n-\t\ttarget-libg++ \\\n \t\ttarget-libf2c \\\n \t\ttarget-libchill \\\n \t\t${libgcj}\n@@ -591,7 +590,7 @@ esac\n \n case \"${target}\" in\n   *-*-netware)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-newlib target-libiberty target-libgloss ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-librx target-newlib target-libiberty target-libgloss ${libgcj}\"\n     ;;\n   *-*-rtems*)\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n@@ -655,7 +654,7 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n   c4x-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n     ;;\n   c54x*-*-* | tic54x-*-*)\n     noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-libgloss ${libgcj} gcc gdb newlib\"\n@@ -700,7 +699,7 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs ld target-libgloss ${libgcj}\"\n     ;;\n   d10v-*-*)\n-    noconfigdirs=\"$noconfigdirs target-librx target-libg++ ${libstdcxx_version} target-libgloss ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-librx ${libstdcxx_version} target-libgloss ${libgcj}\"\n     ;;\n   d30v-*-*)\n     noconfigdirs=\"${libgcj}\"\n@@ -713,7 +712,7 @@ case \"${target}\" in\n     ;;\n   h8300*-*-* | \\\n   h8500-*-*)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n     ;;\n   hppa*-*-*elf* | \\\n   hppa*-*-linux* | \\\n@@ -771,7 +770,7 @@ case \"${target}\" in\n     esac\n     ;;    \n   i[3456]86-*-pe)\n-    noconfigdirs=\"$noconfigdirs target-libg++ ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs ${libstdcxx_version} target-librx target-libgloss ${libgcj}\"\n     ;;\n   i[3456]86-*-sco3.2v5*)\n     # The linker does not yet know about weak symbols in COFF,\n@@ -928,7 +927,7 @@ case \"${target}\" in\n   sparc-*-solaris*)\n     ;;\n   v810-*-*)\n-    noconfigdirs=\"$noconfigdirs bfd binutils gas gcc gdb ld target-libg++ ${libstdcxx_version} opcodes target-libgloss ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs bfd binutils gas gcc gdb ld ${libstdcxx_version} opcodes target-libgloss ${libgcj}\"\n     ;;\n   v850-*-*)\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n@@ -1292,7 +1291,7 @@ fi\n \n # provide a proper gxx_include_dir.\n # Note, if you change the default, make sure to fix both here and in\n-# the gcc, libio, libstdc++ and libg++ subdirectories.\n+# the gcc and libstdc++-v3 subdirectories.\n # Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n gxx_include_dir=\n if test -n \"${with_gxx_include_dir}\"; then"}]}