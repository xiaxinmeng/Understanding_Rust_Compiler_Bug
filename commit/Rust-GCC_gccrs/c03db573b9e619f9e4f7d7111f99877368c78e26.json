{"sha": "c03db573b9e619f9e4f7d7111f99877368c78e26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzZGI1NzNiOWU2MTlmOWU0ZjdkNzExMWY5OTg3NzM2OGM3OGUyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-08-31T16:54:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-09-07T18:09:38Z"}, "message": "tree: Change error_operand_p to an inline function\n\nI've thought for a while that many of the macros in tree.h and such should\nbecome inline functions.  This one in particular was confusing Coverity; the\nnull check in the macro made it think that all code guarded by\nerror_operand_p would also need null checks.\n\ngcc/ChangeLog:\n\n\t* tree.h (error_operand_p): Change to inline function.", "tree": {"sha": "6339d667948245908afdd9af00080eda82edfc53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6339d667948245908afdd9af00080eda82edfc53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c03db573b9e619f9e4f7d7111f99877368c78e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03db573b9e619f9e4f7d7111f99877368c78e26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03db573b9e619f9e4f7d7111f99877368c78e26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03db573b9e619f9e4f7d7111f99877368c78e26/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81f9718139cb1cc164ada411ada8cca9f32b8be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81f9718139cb1cc164ada411ada8cca9f32b8be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81f9718139cb1cc164ada411ada8cca9f32b8be8"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "1b51420819b4a029464f2f3f3c07687c887f057f", "filename": "gcc/tree.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03db573b9e619f9e4f7d7111f99877368c78e26/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03db573b9e619f9e4f7d7111f99877368c78e26/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=c03db573b9e619f9e4f7d7111f99877368c78e26", "patch": "@@ -4365,11 +4365,14 @@ tree_strip_any_location_wrapper (tree exp)\n #define long_long_integer_type_node\tinteger_types[itk_long_long]\n #define long_long_unsigned_type_node\tinteger_types[itk_unsigned_long_long]\n \n-/* True if NODE is an erroneous expression.  */\n+/* True if T is an erroneous expression.  */\n \n-#define error_operand_p(NODE)\t\t\t\t\t\\\n-  ((NODE) == error_mark_node\t\t\t\t\t\\\n-   || ((NODE) && TREE_TYPE ((NODE)) == error_mark_node))\n+inline bool\n+error_operand_p (const_tree t)\n+{\n+  return (t == error_mark_node\n+\t  || (t && TREE_TYPE (t) == error_mark_node));\n+}\n \n /* Return the number of elements encoded directly in a VECTOR_CST.  */\n "}]}