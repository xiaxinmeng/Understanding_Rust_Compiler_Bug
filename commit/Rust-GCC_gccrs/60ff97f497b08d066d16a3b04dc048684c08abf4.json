{"sha": "60ff97f497b08d066d16a3b04dc048684c08abf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBmZjk3ZjQ5N2IwOGQwNjZkMTZhM2IwNGRjMDQ4Njg0YzA4YWJmNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-08T00:15:53Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-08T00:15:53Z"}, "message": "varasm.c (initialize_cold_section_name): Fix alloca buffer overflow.\n\n        * varasm.c (initialize_cold_section_name): Fix alloca buffer overflow.\n        (assemble_start_function): Fix strcmp confusion.\n\nFrom-SVN: r100733", "tree": {"sha": "c02f2e132283f4b674ad148a7bbce6cd2f93162f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c02f2e132283f4b674ad148a7bbce6cd2f93162f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60ff97f497b08d066d16a3b04dc048684c08abf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ff97f497b08d066d16a3b04dc048684c08abf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60ff97f497b08d066d16a3b04dc048684c08abf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ff97f497b08d066d16a3b04dc048684c08abf4/comments", "author": null, "committer": null, "parents": [{"sha": "ff680eb1283d40be70067d1b6c731265fb71ff99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff680eb1283d40be70067d1b6c731265fb71ff99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff680eb1283d40be70067d1b6c731265fb71ff99"}], "stats": {"total": 39, "additions": 15, "deletions": 24}, "files": [{"sha": "44ad050bd68eb399f37b3eba12f2f2fb6d5f3eb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ff97f497b08d066d16a3b04dc048684c08abf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ff97f497b08d066d16a3b04dc048684c08abf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60ff97f497b08d066d16a3b04dc048684c08abf4", "patch": "@@ -1,3 +1,8 @@\n+2005-06-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* varasm.c (initialize_cold_section_name): Fix alloca buffer overflow.\n+\t(assemble_start_function): Fix strcmp confusion.\n+\n 2005-06-07  Uros Bizjak  <uros@kss-loka.si>\n \n \t* config/i386/i386.h (enum ix86_entity): New."}, {"sha": "35943f5368889227fd394c2549aa9a25354197c2", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 24, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ff97f497b08d066d16a3b04dc048684c08abf4/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ff97f497b08d066d16a3b04dc048684c08abf4/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=60ff97f497b08d066d16a3b04dc048684c08abf4", "patch": "@@ -176,21 +176,22 @@ EXTRA_SECTION_FUNCTIONS\n static void\n initialize_cold_section_name (void)\n {\n-  const char *name;\n   const char *stripped_name;\n-  char *buffer;\n+  char *name, *buffer;\n+  tree dsn;\n \n   gcc_assert (cfun && current_function_decl);\n   if (cfun->unlikely_text_section_name)\n     return;\n \n-  if (flag_function_sections && DECL_SECTION_NAME (current_function_decl))\n+  dsn = DECL_SECTION_NAME (current_function_decl);\n+  if (flag_function_sections && dsn)\n     {\n-      name = alloca (TREE_STRING_LENGTH (DECL_SECTION_NAME\n-\t\t\t\t\t (current_function_decl)));\n-      strcpy ((char *) name, TREE_STRING_POINTER (DECL_SECTION_NAME \n-\t\t\t\t\t (current_function_decl)));\n+      name = alloca (TREE_STRING_LENGTH (dsn) + 1);\n+      memcpy (name, TREE_STRING_POINTER (dsn), TREE_STRING_LENGTH (dsn) + 1);\n+\n       stripped_name = targetm.strip_name_encoding (name);\n+\n       buffer = ACONCAT ((stripped_name, \"_unlikely\", NULL));\n       cfun->unlikely_text_section_name = ggc_strdup (buffer);\n     }\n@@ -1289,26 +1290,11 @@ assemble_start_function (tree decl, const char *fnname)\n \t doing partitioning, if the entire function was decided by\n \t choose_function_section (predict.c) to be cold.  */\n \n-      int i;\n-      int len;\n-      char *s;\n-\n       initialize_cold_section_name ();\n \n-      /* The following is necessary, because 'strcmp\n-\t(TREE_STRING_POINTER (DECL_SECTION_NAME (decl)), blah)' always\n-\tfails, presumably because TREE_STRING_POINTER is declared to\n-\tbe an array of size 1 of char.  */\n-\n-      len = TREE_STRING_LENGTH (DECL_SECTION_NAME (decl));\n-      s = (char *) xmalloc (len + 1);\n-\n-      for (i = 0; i < len; i ++)\n-\ts[i] = (TREE_STRING_POINTER (DECL_SECTION_NAME (decl)))[i];\n-      s[len] = '\\0';\n-      \n       if (cfun->unlikely_text_section_name \n-\t  && (strcmp (s, cfun->unlikely_text_section_name) == 0))\n+\t  && strcmp (TREE_STRING_POINTER (DECL_SECTION_NAME (decl)),\n+\t\t     cfun->unlikely_text_section_name) == 0)\n \tfirst_function_block_is_cold = true;\n     }\n "}]}