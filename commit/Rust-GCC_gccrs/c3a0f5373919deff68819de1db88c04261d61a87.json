{"sha": "c3a0f5373919deff68819de1db88c04261d61a87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNhMGY1MzczOTE5ZGVmZjY4ODE5ZGUxZGI4OGMwNDI2MWQ2MWE4Nw==", "commit": {"author": {"name": "David Faust", "email": "david.faust@oracle.com", "date": "2020-09-04T08:18:56Z"}, "committer": {"name": "Jose E. Marchesi", "email": "jose.marchesi@oracle.com", "date": "2020-09-04T08:18:56Z"}, "message": "bpf: generate indirect calls for xBPF\n\nThis patch updates the BPF back end to generate indirect calls via\nthe 'call %reg' instruction when targetting xBPF.\n\nAdditionally, the BPF ASM_SPEC is updated to pass along -mxbpf to\ngas, where it is now supported.\n\n2020-09-03  David Faust  <david.faust@oracle.com>\n\ngcc/\n\n\t* config/bpf/bpf.h (ASM_SPEC): Pass -mxbpf to gas, if specified.\n\t* config/bpf/bpf.c (bpf_output_call): Support indirect calls in xBPF.\n\ngcc/testsuite/\n\n\t* gcc.target/bpf/xbpf-indirect-call-1.c: New test.", "tree": {"sha": "646d735c65364ba0b994032a74149ee1ed81b9e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/646d735c65364ba0b994032a74149ee1ed81b9e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3a0f5373919deff68819de1db88c04261d61a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a0f5373919deff68819de1db88c04261d61a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a0f5373919deff68819de1db88c04261d61a87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a0f5373919deff68819de1db88c04261d61a87/comments", "author": {"login": "dafaust", "id": 4460334, "node_id": "MDQ6VXNlcjQ0NjAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4460334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dafaust", "html_url": "https://github.com/dafaust", "followers_url": "https://api.github.com/users/dafaust/followers", "following_url": "https://api.github.com/users/dafaust/following{/other_user}", "gists_url": "https://api.github.com/users/dafaust/gists{/gist_id}", "starred_url": "https://api.github.com/users/dafaust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dafaust/subscriptions", "organizations_url": "https://api.github.com/users/dafaust/orgs", "repos_url": "https://api.github.com/users/dafaust/repos", "events_url": "https://api.github.com/users/dafaust/events{/privacy}", "received_events_url": "https://api.github.com/users/dafaust/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jemarch", "id": 7061875, "node_id": "MDQ6VXNlcjcwNjE4NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jemarch", "html_url": "https://github.com/jemarch", "followers_url": "https://api.github.com/users/jemarch/followers", "following_url": "https://api.github.com/users/jemarch/following{/other_user}", "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions", "organizations_url": "https://api.github.com/users/jemarch/orgs", "repos_url": "https://api.github.com/users/jemarch/repos", "events_url": "https://api.github.com/users/jemarch/events{/privacy}", "received_events_url": "https://api.github.com/users/jemarch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1336703f8220dcffdeddb5e19dd032c766fbb8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1336703f8220dcffdeddb5e19dd032c766fbb8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1336703f8220dcffdeddb5e19dd032c766fbb8f"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "13181f21c5b22ae4c8bf03c343eb7ea3302c02d9", "filename": "gcc/config/bpf/bpf.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3a0f5373919deff68819de1db88c04261d61a87/gcc%2Fconfig%2Fbpf%2Fbpf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3a0f5373919deff68819de1db88c04261d61a87/gcc%2Fconfig%2Fbpf%2Fbpf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.c?ref=c3a0f5373919deff68819de1db88c04261d61a87", "patch": "@@ -705,8 +705,13 @@ bpf_output_call (rtx target)\n \tbreak;\n       }\n     default:\n-      error (\"indirect call in function, which are not supported by eBPF\");\n-      output_asm_insn (\"call 0\", NULL);\n+      if (TARGET_XBPF)\n+\toutput_asm_insn (\"call\\t%0\", &target);\n+      else\n+\t{\n+\t  error (\"indirect call in function, which are not supported by eBPF\");\n+\t  output_asm_insn (\"call 0\", NULL);\n+\t}\n       break;\n     }\n "}, {"sha": "359f389a1347f60a2b1068917c4e02a97a2eaa5e", "filename": "gcc/config/bpf/bpf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3a0f5373919deff68819de1db88c04261d61a87/gcc%2Fconfig%2Fbpf%2Fbpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3a0f5373919deff68819de1db88c04261d61a87/gcc%2Fconfig%2Fbpf%2Fbpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.h?ref=c3a0f5373919deff68819de1db88c04261d61a87", "patch": "@@ -22,7 +22,7 @@\n \n /**** Controlling the Compilation Driver.  */\n \n-#define ASM_SPEC \"%{mbig-endian:-EB} %{!mbig-endian:-EL}\"\n+#define ASM_SPEC \"%{mbig-endian:-EB} %{!mbig-endian:-EL} %{mxbpf:-mxbpf}\"\n #define LINK_SPEC \"%{mbig-endian:-EB} %{!mbig-endian:-EL}\"\n #define LIB_SPEC \"\"\n #define STARTFILE_SPEC \"\""}, {"sha": "dc4b3cfb12dc787f8841c51aa24315c5af9789aa", "filename": "gcc/testsuite/gcc.target/bpf/xbpf-indirect-call-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3a0f5373919deff68819de1db88c04261d61a87/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fxbpf-indirect-call-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3a0f5373919deff68819de1db88c04261d61a87/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fxbpf-indirect-call-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fbpf%2Fxbpf-indirect-call-1.c?ref=c3a0f5373919deff68819de1db88c04261d61a87", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mxbpf\" } */\n+\n+/* GCC should generate an indirect call instruction (call %REG)\n+   when targetting xBPF.  */\n+\n+void\n+foo ()\n+{\n+  ;\n+}\n+\n+void\n+bar()\n+{\n+  void (*funp) () = &foo;\n+\n+  (*funp) ();\n+}\n+\n+/* { dg-final { scan-assembler \"call\\t%r\" } } */"}]}