{"sha": "0404429725688df26a9f68ee08e3f303efca5628", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwNDQyOTcyNTY4OGRmMjZhOWY2OGVlMDhlM2YzMDNlZmNhNTYyOA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-09-29T16:42:27Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-09-29T16:42:27Z"}, "message": "Allow pointers to be short\n\nFrom-SVN: r12855", "tree": {"sha": "34e3f51065c909354948cfdbd834608f58d915d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34e3f51065c909354948cfdbd834608f58d915d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0404429725688df26a9f68ee08e3f303efca5628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0404429725688df26a9f68ee08e3f303efca5628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0404429725688df26a9f68ee08e3f303efca5628", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0404429725688df26a9f68ee08e3f303efca5628/comments", "author": null, "committer": null, "parents": [{"sha": "412c00dcfa6575dc08653a65801e68369d343444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/412c00dcfa6575dc08653a65801e68369d343444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/412c00dcfa6575dc08653a65801e68369d343444"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "0994ec380fa789cfb0e8d474acd1158b03bf35b7", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0404429725688df26a9f68ee08e3f303efca5628/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0404429725688df26a9f68ee08e3f303efca5628/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=0404429725688df26a9f68ee08e3f303efca5628", "patch": "@@ -2711,10 +2711,12 @@ pointer_diff (op0, op1)\n     }\n \n   /* First do the subtraction as integers;\n-     then drop through to build the divide operator.  */\n+     then drop through to build the divide operator.\n+     Do not do default conversions on the minus operator\n+     in case restype is a short type.  */\n \n   op0 = build_binary_op (MINUS_EXPR, convert (restype, op0),\n-\t\t\t convert (restype, op1), 1);\n+\t\t\t convert (restype, op1), 0);\n   /* This generates an error if op1 is pointer to incomplete type.  */\n   if (TYPE_SIZE (TREE_TYPE (TREE_TYPE (op1))) == 0)\n     error (\"arithmetic on pointer to an incomplete type\");"}]}