{"sha": "38827811dd5d0e07c8f31d780732d3e429aee4fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg4Mjc4MTFkZDVkMGUwN2M4ZjMxZDc4MDczMmQzZTQyOWFlZTRmYQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-06-06T12:25:04Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-06-06T12:25:04Z"}, "message": "Add and use split_mode_p\n\n2017-06-06  Tom de Vries  <tom@codesourcery.com>\n\n\t* config/nvptx/nvptx.c (split_mode_p): New function.\n\t(nvptx_declare_function_name, nvptx_print_operand): Use split_mode_p.\n\nFrom-SVN: r248918", "tree": {"sha": "c3f3cce8d8616710b732b23c304fff408d5f85e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3f3cce8d8616710b732b23c304fff408d5f85e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38827811dd5d0e07c8f31d780732d3e429aee4fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38827811dd5d0e07c8f31d780732d3e429aee4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38827811dd5d0e07c8f31d780732d3e429aee4fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38827811dd5d0e07c8f31d780732d3e429aee4fa/comments", "author": null, "committer": null, "parents": [{"sha": "02e4a6ff04da7ce6b7289541abbdf96fd00d1d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e4a6ff04da7ce6b7289541abbdf96fd00d1d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e4a6ff04da7ce6b7289541abbdf96fd00d1d15"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "245ec28096c7108a0f3eae60672fa28b537a1774", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38827811dd5d0e07c8f31d780732d3e429aee4fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38827811dd5d0e07c8f31d780732d3e429aee4fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38827811dd5d0e07c8f31d780732d3e429aee4fa", "patch": "@@ -1,3 +1,8 @@\n+2017-06-06  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (split_mode_p): New function.\n+\t(nvptx_declare_function_name, nvptx_print_operand): Use split_mode_p.\n+\n 2017-06-06  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/nvptx/nvptx.c (nvptx_print_operand): Use maybe_split_mode."}, {"sha": "2eb5570024720d79ada7548798f5906f60a8f8f4", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38827811dd5d0e07c8f31d780732d3e429aee4fa/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38827811dd5d0e07c8f31d780732d3e429aee4fa/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=38827811dd5d0e07c8f31d780732d3e429aee4fa", "patch": "@@ -328,6 +328,14 @@ maybe_split_mode (machine_mode mode)\n   return VOIDmode;\n }\n \n+/* Return true if mode should be treated as two registers.  */\n+\n+static bool\n+split_mode_p (machine_mode mode)\n+{\n+  return maybe_split_mode (mode) != VOIDmode;\n+}\n+\n /* Output a register, subreg, or register pair (with optional\n    enclosing braces).  */\n \n@@ -1277,7 +1285,7 @@ nvptx_declare_function_name (FILE *file, const char *name, const_tree decl)\n \t  machine_mode mode = PSEUDO_REGNO_MODE (i);\n \t  machine_mode split = maybe_split_mode (mode);\n \n-\t  if (split != VOIDmode)\n+\t  if (split_mode_p (mode))\n \t    mode = split;\n \t  fprintf (file, \"\\t.reg%s \", nvptx_ptx_type_from_mode (mode, true));\n \t  output_reg (file, i, split, -2);\n@@ -2396,9 +2404,8 @@ nvptx_print_operand (FILE *file, rtx x, int code)\n       if (x_code == SUBREG)\n \t{\n \t  mode = GET_MODE (SUBREG_REG (x));\n-\t  machine_mode split = maybe_split_mode (mode);\n-\t  if (split != VOIDmode)\n-\t    mode = split;\n+\t  if (split_mode_p (mode))\n+\t    mode = maybe_split_mode (mode);\n \t}\n       fprintf (file, \"%s\", nvptx_ptx_type_from_mode (mode, code == 't'));\n       break;\n@@ -2499,7 +2506,7 @@ nvptx_print_operand (FILE *file, rtx x, int code)\n \t    machine_mode inner_mode = GET_MODE (inner_x);\n \t    machine_mode split = maybe_split_mode (inner_mode);\n \n-\t    if (split != VOIDmode\n+\t    if (split_mode_p (inner_mode)\n \t\t&& (GET_MODE_SIZE (inner_mode) == GET_MODE_SIZE (mode)))\n \t      output_reg (file, REGNO (inner_x), split);\n \t    else"}]}