{"sha": "874e360b8c06066cda9febb91430bc630eb0de1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0ZTM2MGI4YzA2MDY2Y2RhOWZlYmI5MTQzMGJjNjMwZWIwZGUxYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-14T10:26:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-14T10:26:09Z"}, "message": "stl_list.h (splice(iterator, list&), [...]): Re-add in C++0x mode for backward compatibility (see DR 1133).\n\n2009-12-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_list.h (splice(iterator, list&), splice(iterator,\n\tlist&, iterator), splice(iterator, list&, iterator, iterator),\n\tmerge(list&), merge(list&, _StrictWeakOrdering)): Re-add in C++0x\n\tmode for backward compatibility (see DR 1133).\n\t(insert(iterator, size_type, const value_type&), insert(iterator,\n\t_InputIterator, _InputIterator)): Adjust.\n\t* include/bits/list.tcc (sort): Likewise.\n\t* testsuite/23_containers/list/modifiers/1_c++0x.cc: Add.\n\t* testsuite/23_containers/list/operations/2_c++0x.cc: Likewise.\n\t* testsuite/23_containers/list/operations/3_c++0x.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tassign_neg.cc: Adjust dg-error line numbers.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tinsert_neg.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\nFrom-SVN: r155210", "tree": {"sha": "6d9b34f6838cf2f44618a97610143a146bcf6579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d9b34f6838cf2f44618a97610143a146bcf6579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/874e360b8c06066cda9febb91430bc630eb0de1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874e360b8c06066cda9febb91430bc630eb0de1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874e360b8c06066cda9febb91430bc630eb0de1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874e360b8c06066cda9febb91430bc630eb0de1b/comments", "author": null, "committer": null, "parents": [{"sha": "507d0069fa46a93942923e13401657bd6657f09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507d0069fa46a93942923e13401657bd6657f09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507d0069fa46a93942923e13401657bd6657f09c"}], "stats": {"total": 166, "additions": 145, "deletions": 21}, "files": [{"sha": "7c20083923a52f09a1896008e5eea4a477700a5c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -1,3 +1,24 @@\n+2009-12-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_list.h (splice(iterator, list&), splice(iterator,\n+\tlist&, iterator), splice(iterator, list&, iterator, iterator),\n+\tmerge(list&), merge(list&, _StrictWeakOrdering)): Re-add in C++0x\n+\tmode for backward compatibility (see DR 1133).\n+\t(insert(iterator, size_type, const value_type&), insert(iterator,\n+\t_InputIterator, _InputIterator)): Adjust.\n+\t* include/bits/list.tcc (sort): Likewise.\n+\t* testsuite/23_containers/list/modifiers/1_c++0x.cc: Add.\n+\t* testsuite/23_containers/list/operations/2_c++0x.cc: Likewise.\n+\t* testsuite/23_containers/list/operations/3_c++0x.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tassign_neg.cc: Adjust dg-error line numbers.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tinsert_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/list/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\n 2009-12-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Matthias Klose  <doko@ubuntu.com>\n "}, {"sha": "899b41815094c5daf473b0764bc55a0b10c39ab3", "filename": "libstdc++-v3/include/bits/list.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flist.tcc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -312,13 +312,13 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \n         do\n \t  {\n-\t    __carry.splice(__carry.begin(), _GLIBCXX_MOVE(*this), begin());\n+\t    __carry.splice(__carry.begin(), *this, begin());\n \n \t    for(__counter = &__tmp[0];\n \t\t__counter != __fill && !__counter->empty();\n \t\t++__counter)\n \t      {\n-\t\t__counter->merge(_GLIBCXX_MOVE(__carry));\n+\t\t__counter->merge(__carry);\n \t\t__carry.swap(*__counter);\n \t      }\n \t    __carry.swap(*__counter);\n@@ -328,7 +328,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \twhile ( !empty() );\n \n         for (__counter = &__tmp[1]; __counter != __fill; ++__counter)\n-          __counter->merge(_GLIBCXX_MOVE(*(__counter - 1)));\n+          __counter->merge(*(__counter - 1));\n         swap( *(__fill - 1) );\n       }\n     }\n@@ -389,13 +389,13 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \n \t    do\n \t      {\n-\t\t__carry.splice(__carry.begin(), _GLIBCXX_MOVE(*this), begin());\n+\t\t__carry.splice(__carry.begin(), *this, begin());\n \n \t\tfor(__counter = &__tmp[0];\n \t\t    __counter != __fill && !__counter->empty();\n \t\t    ++__counter)\n \t\t  {\n-\t\t    __counter->merge(_GLIBCXX_MOVE(__carry), __comp);\n+\t\t    __counter->merge(__carry, __comp);\n \t\t    __carry.swap(*__counter);\n \t\t  }\n \t\t__carry.swap(*__counter);\n@@ -405,7 +405,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t    while ( !empty() );\n \n \t    for (__counter = &__tmp[1]; __counter != __fill; ++__counter)\n-\t      __counter->merge(_GLIBCXX_MOVE(*(__counter - 1)), __comp);\n+\t      __counter->merge(*(__counter - 1), __comp);\n \t    swap(*(__fill - 1));\n \t  }\n       }"}, {"sha": "51f8a8f931dfeeb506c862c4b15bb085f47cb341", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -1027,11 +1027,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       insert(iterator __position, size_type __n, const value_type& __x)\n       {  \n \tlist __tmp(__n, __x, _M_get_Node_allocator());\n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n-\t  splice(__position, std::move(__tmp));\n-#else\n-\t  splice(__position, __tmp);\n-#endif\n+\tsplice(__position, __tmp);\n       }\n \n       /**\n@@ -1053,11 +1049,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t       _InputIterator __last)\n         {\n \t  list __tmp(__first, __last, _M_get_Node_allocator());\n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n-\t  splice(__position, std::move(__tmp));\n-#else\n \t  splice(__position, __tmp);\n-#endif\n \t}\n \n       /**\n@@ -1164,6 +1156,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t  }\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      void\n+      splice(iterator __position, list& __x)\n+      { splice(__position, std::move(__x)); }\n+#endif\n+\n       /**\n        *  @brief  Insert element from another %list.\n        *  @param  position  Iterator referencing the element to insert before.\n@@ -1191,6 +1189,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \tthis->_M_transfer(__position, __i, __j);\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      void\n+      splice(iterator __position, list& __x, iterator __i)\n+      { splice(__position, std::move(__x), __i); }\n+#endif\n+\n       /**\n        *  @brief  Insert range from another %list.\n        *  @param  position  Iterator referencing the element to insert before.\n@@ -1221,6 +1225,12 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t  }\n       }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      void\n+      splice(iterator __position, list& __x, iterator __first, iterator __last)\n+      { splice(__position, std::move(__x), __first, __last); }\n+#endif\n+\n       /**\n        *  @brief  Remove all elements equal to value.\n        *  @param  value  The value to remove.\n@@ -1288,10 +1298,15 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  sorted order, leaving @a x empty when complete.  Elements in\n        *  this list precede elements in @a x that are equal.\n        */\n-      void\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n+      void\n       merge(list&& __x);\n+\n+      void\n+      merge(list& __x)\n+      { merge(std::move(__x)); }\n #else\n+      void\n       merge(list& __x);\n #endif\n \n@@ -1307,11 +1322,18 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n        *  in this list precede elements in @a x that are equivalent\n        *  according to StrictWeakOrdering().\n        */\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n       template<typename _StrictWeakOrdering>\n         void\n-#ifdef __GXX_EXPERIMENTAL_CXX0X__\n         merge(list&&, _StrictWeakOrdering);\n+\n+      template<typename _StrictWeakOrdering>\n+        void\n+        merge(list& __x, _StrictWeakOrdering __comp)\n+        { merge(std::move(__x), __comp); }\n #else\n+      template<typename _StrictWeakOrdering>\n+        void\n         merge(list&, _StrictWeakOrdering);\n #endif\n "}, {"sha": "c055f70bc741d7a9b427074a31a5715d44df25c3", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/1_c++0x.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2F1_c%2B%2B0x.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"1.h\"\n+#include <list>\n+\n+int main()\n+{\n+  modifiers1<std::list<__gnu_test::copy_tracker> >();\n+  return 0;\n+}"}, {"sha": "faaf2f765b1e017ace0251a977c0afd63d2b0eb3", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/2_c++0x.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F2_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F2_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F2_c%2B%2B0x.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"2.h\"\n+#include <list>\n+\n+int main()\n+{\n+  operations02<std::list<int> >();\n+  return 0;\n+}"}, {"sha": "0598cfb225bd85ea69dff472f9b64676acd84464", "filename": "libstdc++-v3/testsuite/23_containers/list/operations/3_c++0x.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F3_c%2B%2B0x.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F3_c%2B%2B0x.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Foperations%2F3_c%2B%2B0x.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -0,0 +1,27 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"3.h\"\n+#include <list>\n+\n+int main()\n+{\n+  operations03<std::list<int> >();\n+  return 0;\n+}"}, {"sha": "a9ef74472bf2e058ca262f1e280ad2f849fdfd2e", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1387 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1409 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "a3e29627f8dc3b16a278951141560c486bc4d88b", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1356 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1378 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "f90ed940727db5b1c75d4986a82e5a4802ddbaf7", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1356 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1378 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "24bcee0c7fd324fff1001a90d37605dd4b4a9f62", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/874e360b8c06066cda9febb91430bc630eb0de1b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=874e360b8c06066cda9febb91430bc630eb0de1b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1356 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1378 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}]}