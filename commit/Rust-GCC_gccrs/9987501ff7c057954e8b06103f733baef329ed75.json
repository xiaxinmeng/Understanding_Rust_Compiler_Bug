{"sha": "9987501ff7c057954e8b06103f733baef329ed75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4NzUwMWZmN2MwNTc5NTRlOGIwNjEwM2Y3MzNiYWVmMzI5ZWQ3NQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-03-26T11:37:26Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-03-26T11:37:26Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r590", "tree": {"sha": "3516beec548d386678dce80e2078cdea73b32f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3516beec548d386678dce80e2078cdea73b32f86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9987501ff7c057954e8b06103f733baef329ed75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9987501ff7c057954e8b06103f733baef329ed75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9987501ff7c057954e8b06103f733baef329ed75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9987501ff7c057954e8b06103f733baef329ed75/comments", "author": null, "committer": null, "parents": [{"sha": "492f34e08e89e66804226b1a8a038f676d759b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/492f34e08e89e66804226b1a8a038f676d759b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/492f34e08e89e66804226b1a8a038f676d759b85"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "860fb127c3dfc7644fb017b0b50947314f64bc5f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9987501ff7c057954e8b06103f733baef329ed75/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9987501ff7c057954e8b06103f733baef329ed75/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=9987501ff7c057954e8b06103f733baef329ed75", "patch": "@@ -50,7 +50,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define X_OK 1\n #endif\n \n-#ifdef USG\n+#if defined(USG) || defined(NO_STAB_H)\n #include \"gstab.h\"  /* If doing DBX on sysV, use our own stab.h.  */\n #else\n #include <stab.h>  /* On BSD, use the system's stab.h.  */\n@@ -2982,6 +2982,8 @@ mips_output_filename (stream, name)\n       SET_FILE_NUMBER ();\n       current_function_file = name;\n       fprintf (stream, \"\\t.file\\t%d \\\"%s\\\"\\n\", num_source_filenames, name);\n+      if (!TARGET_GAS && write_symbols == DBX_DEBUG)\n+\tfprintf (stream, \"\\t#@stabs\\n\");\n     }\n \n   else if (!TARGET_GAS && write_symbols == DBX_DEBUG)\n@@ -3139,6 +3141,30 @@ mips_asm_file_end (file)\n     }\n }\n \n+\f\n+/* Emit either a label, .comm, or .lcomm directive, and mark\n+   that the symbol is used, so that we don't emit an .extern\n+   for it in mips_asm_file_end.  */\n+\n+void\n+mips_declare_object (stream, name, init_string, final_string, size)\n+     FILE *stream;\n+     char *name;\n+     char *init_string;\n+     char *final_string;\n+     int size;\n+{\n+  fputs (init_string, stream);\t\t/* \"\", \"\\t.comm\\t\", or \"\\t.lcomm\\t\" */\n+  assemble_name (stream, name);\n+  fprintf (stream, final_string, size);\t/* \":\\n\", \",%u\\n\", \",%u\\n\" */\n+\n+  if (TARGET_GP_OPT && mips_section_threshold != 0)\n+    {\n+      tree name_tree = get_identifier (name);\n+      TREE_ASM_WRITTEN (name_tree) = 1;\n+    }\n+}\n+\n \f\n /* Return the bytes needed to compute the frame pointer from the current\n    stack pointer."}]}