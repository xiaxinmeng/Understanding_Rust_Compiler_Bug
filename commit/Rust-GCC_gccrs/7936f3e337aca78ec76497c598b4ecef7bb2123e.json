{"sha": "7936f3e337aca78ec76497c598b4ecef7bb2123e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkzNmYzZTMzN2FjYTc4ZWM3NjQ5N2M1OThiNGVjZWY3YmIyMTIzZQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-05-27T09:41:42Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-05-27T09:41:42Z"}, "message": "re PR fortran/19777 (-fbounds-check catches non-existent bounds violation)\n\n\tPR fortran/19777\n\n\t* trans-array.c (gfc_conv_array_ref): Don't perform out-of-bounds\n\tchecking for assumed-size arrrays.\n\n\t* gfortran.dg/bounds_check_2.f: New test.\n\nFrom-SVN: r114153", "tree": {"sha": "0a6f6da968945705bd677fac17b6d37a709d3603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a6f6da968945705bd677fac17b6d37a709d3603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7936f3e337aca78ec76497c598b4ecef7bb2123e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7936f3e337aca78ec76497c598b4ecef7bb2123e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7936f3e337aca78ec76497c598b4ecef7bb2123e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7936f3e337aca78ec76497c598b4ecef7bb2123e/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59c0928b6ae0a194833640c15905ff3aa26c54e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59c0928b6ae0a194833640c15905ff3aa26c54e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59c0928b6ae0a194833640c15905ff3aa26c54e7"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "c5a0c0a6afabc1d9259140e1b9b5951aa864c1b0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -1,3 +1,9 @@\n+2006-05-27  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/19777\n+\t* trans-array.c (gfc_conv_array_ref): Don't perform out-of-bounds\n+\tchecking for assumed-size arrrays.\n+\n 2006-05-27  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* trans-intrinsic.c (gfc_conv_associated): If pointer in first"}, {"sha": "737beeffc35bbd2aeac0ddf2d60fe014778ba2cd", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -1948,7 +1948,7 @@ gfc_conv_array_ref (gfc_se * se, gfc_array_ref * ar)\n       gfc_conv_expr_type (&indexse, ar->start[n], gfc_array_index_type);\n       gfc_add_block_to_block (&se->pre, &indexse.pre);\n \n-      if (flag_bounds_check)\n+      if (flag_bounds_check && ar->as->type != AS_ASSUMED_SIZE)\n \t{\n \t  /* Check array bounds.  */\n \t  tree cond;"}, {"sha": "78c926ec17f873bbc5fd6990131992a47929ec5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -1,3 +1,8 @@\n+2006-05-27  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/19777\n+\t* gfortran.dg/bounds_check_2.f: New test.\n+\n 2006-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* gfortran.dg/hollerith_f95.f90: Add -fall-intrinsics."}, {"sha": "01607233d8f4e88c760d220e0fd3ecc645613fc6", "filename": "gcc/testsuite/gfortran.dg/bounds_check_2.f", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7936f3e337aca78ec76497c598b4ecef7bb2123e/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_2.f?ref=7936f3e337aca78ec76497c598b4ecef7bb2123e", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+! { dg-options \"-fbounds-check\" }\n+! PR fortran/19777\n+      implicit none\n+      integer          npts\n+      parameter        (npts=10)\n+      double precision v(npts)\n+      external         init1\n+\n+      call init1 (npts, v)\n+      end\n+\n+      subroutine init1 (npts, v)\n+      implicit none\n+      integer          npts\n+      double precision v(*)\n+\n+      integer          i\n+\n+      do 10 i = 1, npts\n+         v(i) = 0\n+ 10   continue\n+      end"}]}