{"sha": "5c9186cec38354d5b51e41cbfb37d89a1a8ddca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM5MTg2Y2VjMzgzNTRkNWI1MWU0MWNiZmIzN2Q4OWExYThkZGNhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-09-08T16:37:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-09-08T16:37:20Z"}, "message": "tree-vrp.c (extract_range_from_unary_expr): Do not set the range for the result of a conversion if...\n\n\t* tree-vrp.c (extract_range_from_unary_expr): Do not set the range for\n\tthe result of a conversion if the new min and max cannot be compared.\n\nFrom-SVN: r104036", "tree": {"sha": "8bbfa509269df1cf8b44fcf65705fbc8f29d043a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bbfa509269df1cf8b44fcf65705fbc8f29d043a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "068e7338865ad5fea910a27f87c7007d8def8517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/068e7338865ad5fea910a27f87c7007d8def8517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/068e7338865ad5fea910a27f87c7007d8def8517"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "2548e32d1926134734bba6da67a24b99d3fa427d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c9186cec38354d5b51e41cbfb37d89a1a8ddca9", "patch": "@@ -1,3 +1,8 @@\n+2005-09-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* tree-vrp.c (extract_range_from_unary_expr): Do not set the range for\n+\tthe result of a conversion if the new min and max cannot be compared.\n+\n 2005-09-08  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.c (s390_sr_alias_set): Variable removed."}, {"sha": "a7be2d9cc2ec0487fec689185061b32049a9f1d5", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c9186cec38354d5b51e41cbfb37d89a1a8ddca9/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=5c9186cec38354d5b51e41cbfb37d89a1a8ddca9", "patch": "@@ -1341,7 +1341,7 @@ extract_range_from_unary_expr (value_range_t *vr, tree expr)\n \t      && tree_int_cst_equal (new_min, vr0.min)\n \t      && tree_int_cst_equal (new_max, vr0.max)\n \t      && compare_values (new_min, new_max) <= 0\n-\t      && compare_values (new_min, new_max) >= -2)\n+\t      && compare_values (new_min, new_max) >= -1)\n \t    {\n \t      set_value_range (vr, VR_RANGE, new_min, new_max, vr->equiv);\n \t      return;"}]}