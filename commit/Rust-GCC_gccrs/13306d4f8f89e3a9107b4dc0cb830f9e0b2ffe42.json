{"sha": "13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMzMDZkNGY4Zjg5ZTNhOTEwN2I0ZGMwY2I4MzBmOWUwYjJmZmU0Mg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@cygnus.com", "date": "1994-10-15T17:19:19Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1994-10-15T17:19:19Z"}, "message": "move a few important patches (this offset calculations for vtables).\n\nFrom-SVN: r8280", "tree": {"sha": "33f665d738bb626689e1712c9c078587a18a55d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33f665d738bb626689e1712c9c078587a18a55d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42/comments", "author": null, "committer": null, "parents": [{"sha": "13fbb038189e72f6ba1ff8ffe13de137060a7187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fbb038189e72f6ba1ff8ffe13de137060a7187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13fbb038189e72f6ba1ff8ffe13de137060a7187"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "2b0dc18493bf0d4802f3a2f9cfb1b5e73e5bc9f6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42", "patch": "@@ -1,3 +1,8 @@\n+Fri Oct 14 18:54:48 1994  Mike Stump  <mrs@cygnus.com>\n+\n+\t* class.c (modify_one_vtable): Since the DECL_CONTEXT of fndecl can\n+\tbe set just below, use current_fndecl instead.\n+\n Thu Oct 13 17:44:55 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n \n         * method.c (build_decl_overload): Set numeric_outputed_need_bar to 0.\n@@ -40,6 +45,14 @@ Tue Oct 11 23:48:31 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n   \n         * various: Cast pointer arguments to bzero and bcopy to char *.\n \n+Tue Oct 11 19:34:32 1994  Mike Stump  <mrs@cygnus.com>\n+\n+\t* class.c (get_derived_offset): Added a type parameter to limit how\n+\tfar up the CLASSTYPE_VFIELD_PARENT chain we search.\n+\t* class.c (modify_one_vtable, fixup_vtable_deltas): When forming the\n+\toffset to put into the vtable for the this parameter, make sure we\n+\tdon't offset from a parent of the DECL_CONTEXT of the function.\n+\n Mon Oct 10 00:56:53 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n \n         * lex.c (cons_up_default_function): Mark methods in a template class"}, {"sha": "a3bcb26d3d2f0f138fd11cc3715ddaa78cc9ad71", "filename": "gcc/cp/class.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=13306d4f8f89e3a9107b4dc0cb830f9e0b2ffe42", "patch": "@@ -1119,10 +1119,14 @@ get_vfield_offset (binfo)\n \t\t     BINFO_OFFSET (binfo));\n }\n \n-/* Get the offset to the start of the original binfo that we derived this\n-   binfo from.  */\n-tree get_derived_offset (binfo)\n-     tree binfo;\n+/* Get the offset to the start of the original binfo that we derived\n+   this binfo from.  If we find TYPE first, return the offset only\n+   that far.  The shortened search is useful because the this pointer\n+   on method calling is expected to point to a DECL_CONTEXT (fndecl)\n+   object, and not a baseclass of it.  */\n+static tree\n+get_derived_offset (binfo, type)\n+     tree binfo, type;\n {\n   tree offset1 = get_vfield_offset (TYPE_BINFO (BINFO_TYPE (binfo)));\n   tree offset2;\n@@ -1131,6 +1135,8 @@ tree get_derived_offset (binfo)\n \t && (i=CLASSTYPE_VFIELD_PARENT (BINFO_TYPE (binfo))) != -1)\n     {\n       tree binfos = BINFO_BASETYPES (binfo);\n+      if (BINFO_TYPE (binfo) == type)\n+\tbreak;\n       binfo = TREE_VEC_ELT (binfos, i);\n     }\n   offset2 = get_vfield_offset (TYPE_BINFO (BINFO_TYPE (binfo)));\n@@ -2261,7 +2267,7 @@ modify_one_vtable (binfo, t, fndecl, pfn)\n \t     Also, we want just the delta bewteen the most base class\n \t     that we derived this vfield from and us.  */\n \t  base_offset = size_binop (PLUS_EXPR,\n-\t\t\t\t    get_derived_offset (binfo),\n+\t\t\t\t    get_derived_offset (binfo, DECL_CONTEXT (current_fndecl)),\n \t\t\t\t    BINFO_OFFSET (binfo));\n \t  this_offset = size_binop (MINUS_EXPR, offset, base_offset);\n \n@@ -2366,7 +2372,7 @@ fixup_vtable_deltas (binfo, t)\n \t     Also, we want just the delta bewteen the most base class\n \t     that we derived this vfield from and us.  */\n \t  base_offset = size_binop (PLUS_EXPR,\n-\t\t\t\t    get_derived_offset (binfo),\n+\t\t\t\t    get_derived_offset (binfo, DECL_CONTEXT (fndecl)),\n \t\t\t\t    BINFO_OFFSET (binfo));\n \t  this_offset = size_binop (MINUS_EXPR, offset, base_offset);\n "}]}