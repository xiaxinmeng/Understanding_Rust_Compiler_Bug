{"sha": "e81c832812e5432cb849146ca44ed64727e672af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgxYzgzMjgxMmU1NDMyY2I4NDkxNDZjYTQ0ZWQ2NDcyN2U2NzJhZg==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2017-05-11T07:44:29Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2017-05-11T07:44:29Z"}, "message": "re PR c++/80682 (__is_trivially_constructible(void, int) returns true.)\n\nPR c++/80682\n\ncp/\n\nPR c++/80682\n* method.c (is_trivially_xible): Reject void types.\n\ntestsuite/\n\nPR c++/80682\n* g++.dg/ext/is_trivially_constructible1.C: Add tests for void target.\n\nFrom-SVN: r247880", "tree": {"sha": "6c77901b461b80f24c5249e7339a954fcba37791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c77901b461b80f24c5249e7339a954fcba37791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e81c832812e5432cb849146ca44ed64727e672af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81c832812e5432cb849146ca44ed64727e672af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e81c832812e5432cb849146ca44ed64727e672af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81c832812e5432cb849146ca44ed64727e672af/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "687aed9cc8c53b7833df9c62912292c17fdbc97f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/687aed9cc8c53b7833df9c62912292c17fdbc97f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/687aed9cc8c53b7833df9c62912292c17fdbc97f"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "af7fae58555afe4a7148621f20b5e798b04413c8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81c832812e5432cb849146ca44ed64727e672af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81c832812e5432cb849146ca44ed64727e672af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e81c832812e5432cb849146ca44ed64727e672af", "patch": "@@ -1,3 +1,8 @@\n+2017-05-11  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR c++/80682\n+\t* method.c (is_trivially_xible): Reject void types.\n+\n 2017-05-10  Nathan Sidwell  <nathan@acm.org>\n \n \t* class.c (handle_using_decl): Always use OVL_CURRENT."}, {"sha": "99e98cce807acfd8747f901e99e9cf5ca4c3ec65", "filename": "gcc/cp/method.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81c832812e5432cb849146ca44ed64727e672af/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81c832812e5432cb849146ca44ed64727e672af/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=e81c832812e5432cb849146ca44ed64727e672af", "patch": "@@ -1207,6 +1207,8 @@ constructible_expr (tree to, tree from)\n bool\n is_trivially_xible (enum tree_code code, tree to, tree from)\n {\n+  if (VOID_TYPE_P (to))\n+    return false;\n   tree expr;\n   if (code == MODIFY_EXPR)\n     expr = assignable_expr (to, from);"}, {"sha": "175eae98233f1d43ef34962034bbe41d214165a9", "filename": "gcc/testsuite/g++.dg/ext/is_trivially_constructible1.C", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e81c832812e5432cb849146ca44ed64727e672af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e81c832812e5432cb849146ca44ed64727e672af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_trivially_constructible1.C?ref=e81c832812e5432cb849146ca44ed64727e672af", "patch": "@@ -27,10 +27,18 @@ SA(!__is_trivially_constructible(C,C&));\n SA(__is_trivially_assignable(C,C&));\n SA(!__is_trivially_assignable(C,C));\n SA(!__is_trivially_assignable(C,C&&));\n+SA(!__is_trivially_assignable(void,int));\n+SA(!__is_trivially_assignable(const void,int));\n+SA(!__is_trivially_assignable(volatile void,int));\n+SA(!__is_trivially_assignable(const volatile void,int));\n \n SA(__is_trivially_constructible(int,int));\n SA(__is_trivially_constructible(int,double));\n SA(!__is_trivially_constructible(int,B));\n+SA(!__is_trivially_constructible(void,int));\n+SA(!__is_trivially_constructible(const void,int));\n+SA(!__is_trivially_constructible(volatile void,int));\n+SA(!__is_trivially_constructible(const volatile void,int));\n \n SA(!__is_trivially_constructible(D));\n "}]}