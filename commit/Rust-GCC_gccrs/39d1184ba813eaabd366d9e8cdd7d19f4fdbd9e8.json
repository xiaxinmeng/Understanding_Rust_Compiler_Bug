{"sha": "39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkMTE4NGJhODEzZWFhYmQzNjZkOWU4Y2RkN2QxOWY0ZmRiZDllOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-06-10T15:55:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-06-10T15:55:36Z"}, "message": "PR other/90695 reduce testcase to remove library dependency\n\nThis reproduces the original ICE fixed by r178857 (tested at r178852 and\nr178860), without depending on a libstdc++ header that keeps changing.\n\nThe number of errors differs between C++14 and C++17 modes, so the fixed\ntest uses dg-excess-errors to match any number of them. The precise\nerrors aren't what's being tested for here anyway, the point of the test\nis to verify the ICE in PR 50391 is fixed.\n\n\tPR other/90695\n\t* g++.dg/cpp0x/noexcept15.C: Remove dependency on library header.\n\nFrom-SVN: r272121", "tree": {"sha": "4f6011378bfa4a19da017d296473a0052864ba1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f6011378bfa4a19da017d296473a0052864ba1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97623b520bfe0d1f1bf554c50ed14483240db321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97623b520bfe0d1f1bf554c50ed14483240db321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97623b520bfe0d1f1bf554c50ed14483240db321"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "ede0ec50a314bd64427f4f07ce6027f420c0e76f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8", "patch": "@@ -1,3 +1,8 @@\n+2019-06-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR other/90695\n+\t* g++.dg/cpp0x/noexcept15.C: Remove dependency on library header.\n+\n 2019-06-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/gomp/scan-1.c: New test."}, {"sha": "6c6eef689153c3791da997ac6ccdf69fc26f03cb", "filename": "gcc/testsuite/g++.dg/cpp0x/noexcept15.C", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnoexcept15.C?ref=39d1184ba813eaabd366d9e8cdd7d19f4fdbd9e8", "patch": "@@ -1,12 +1,46 @@\n // PR c++/50391\n // { dg-do compile { target c++11 } }\n \n-#include <type_traits>\n+namespace std\n+{\n+  template<typename T, T Val>\n+    struct integral_constant\n+    { static constexpr T value = Val; };\n+\n+  template<typename T>\n+    struct is_abstract\n+    : integral_constant<bool, __is_abstract(T)>\n+    { };\n+\n+  template<typename T, bool = is_abstract<T>::value>\n+    struct is_destructible\n+    : integral_constant<bool, true>\n+    { };\n+\n+  template<typename T>\n+    struct is_destructible<T, true>\n+    : integral_constant<bool, false>\n+    { };\n+\n+  template<typename T>\n+    struct is_nothrow_move_constructible\n+    : is_destructible<T>\n+    { };\n+\n+  template<typename T>\n+    struct decay\n+    { typedef T type; };\n+\n+  template<typename T>\n+    struct decay<T&>\n+    { typedef T type; };\n+\n+} // std\n \n template<class Tp>\n   struct single\n   {\n-    Tp elem;  // { dg-error \"incomplete type\" }\n+    Tp elem;\n \n     constexpr single(const Tp& e)\n     : elem(e) { }\n@@ -30,3 +64,5 @@ foo(Blob *b)\n {\n   make_single(*b);\n }\n+\n+// { dg-excess-errors \"incomplete type|not a member\" }"}]}