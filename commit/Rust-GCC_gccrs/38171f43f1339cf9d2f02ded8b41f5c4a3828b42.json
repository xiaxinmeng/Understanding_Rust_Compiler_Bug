{"sha": "38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgxNzFmNDNmMTMzOWNmOWQyZjAyZGVkOGI0MWY1YzRhMzgyOGI0Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:17:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:17:35Z"}, "message": "[multiple changes]\n\n2011-08-01  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch7.adb (Uninstall_Declarations): Remove useless code.\n\t* einfo.ads (Access_Disp_Table): Fix documentation.\n\t(Dispatch_Table_Wrappers): Fix documentation.\n\t* einfo.adb (Access_Disp_Table, Dispatch_Table_Wrappers,\n\tSet_Access_Disp_Table, Set_Dispatch_Table_Wrappers): Fix the assertions\n\tto enforce the documentation of this attribute.\n\t(Set_Is_Interface): Cleanup the assertion.\n\t* exp_ch4.adb (Expand_Allocator_Expression, Tagged_Membership): Locate\n\tthe Underlying_Type entity before reading attribute Access_Disp_Table.\n\t* exp_disp.adb (Expand_Dispatching_Call, Expand_Interface_Conversion):\n\tLocate the Underlying_Type before reading attribute Access_Disp_Table.\n\t* exp_aggr.adb (Build_Array_Aggr_Code, Build_Record_Aggr_Code): Locate\n\tthe Underlying_Type entity before reading attribute Access_Disp_Table.\n\t* exp_ch3.adb (Build_Record_Init_Proc, Expand_N_Object_Declaration):\n\tLocate the Underlying_Type entity before reading attribute\n\tAccess_Disp_Table.\n\n2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* s-poosiz.ads: Additional overriding indicators.\n\n2011-08-01  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Exit_Statement): add return after error in\n\tformal mode.\n\t(Analyze_Iteration_Scheme): issue error in formal mode when loop\n\tparameter specification does not include a subtype mark.\n\t* sem_ch6.adb (Analyze_Abstract_Subprogram_Declaration): issue error in\n\tformal mode on abstract subprogram.\n\t(Analyze_Subprogram_Specification): issue error in formal mode on\n\tuser-defined operator.\n\t(Process_Formals): issue error in formal mode on access parameter and\n\tdefault expression.\n\t* sem_ch9.adb (Analyze_Abort_Statement,\n\tAnalyze_Accept_Statement, Analyze_Asynchronous_Select,\n\tAnalyze_Conditional_Entry_Call, Analyze_Delay_Relative,\n\tAnalyze_Delay_Until, Analyze_Entry_Call_Alternative,\n\tAnalyze_Requeue, Analyze_Selective_Accept,\n\tAnalyze_Timed_Entry_Call): issue error in formal mode on such constructs\n\t* sem_ch11.adb (Analyze_Raise_Statement, Analyze_Raise_xxx_Error):\n\tissue error in formal mode on user-defined raise statement.\n\nFrom-SVN: r177047", "tree": {"sha": "d57f4216b88d82864aa55870fb9a13c1bf5de546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d57f4216b88d82864aa55870fb9a13c1bf5de546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/comments", "author": null, "committer": null, "parents": [{"sha": "1f25038381847b32fda35dd91ae0053635509a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f25038381847b32fda35dd91ae0053635509a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f25038381847b32fda35dd91ae0053635509a83"}], "stats": {"total": 422, "additions": 302, "deletions": 120}, "files": [{"sha": "0c0b22f7e1f61c8d4a88e82d469d8c5cabf4f19b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -1,3 +1,47 @@\n+2011-08-01  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch7.adb (Uninstall_Declarations): Remove useless code.\n+\t* einfo.ads (Access_Disp_Table): Fix documentation.\n+\t(Dispatch_Table_Wrappers): Fix documentation.\n+\t* einfo.adb (Access_Disp_Table, Dispatch_Table_Wrappers,\n+\tSet_Access_Disp_Table, Set_Dispatch_Table_Wrappers): Fix the assertions\n+\tto enforce the documentation of this attribute.\n+\t(Set_Is_Interface): Cleanup the assertion.\n+\t* exp_ch4.adb (Expand_Allocator_Expression, Tagged_Membership): Locate\n+\tthe Underlying_Type entity before reading attribute Access_Disp_Table.\n+\t* exp_disp.adb (Expand_Dispatching_Call, Expand_Interface_Conversion):\n+\tLocate the Underlying_Type before reading attribute Access_Disp_Table.\n+\t* exp_aggr.adb (Build_Array_Aggr_Code, Build_Record_Aggr_Code): Locate\n+\tthe Underlying_Type entity before reading attribute Access_Disp_Table.\n+\t* exp_ch3.adb (Build_Record_Init_Proc, Expand_N_Object_Declaration):\n+\tLocate the Underlying_Type entity before reading attribute\n+\tAccess_Disp_Table.\n+\n+2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* s-poosiz.ads: Additional overriding indicators.\n+\n+2011-08-01  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Exit_Statement): add return after error in\n+\tformal mode.\n+\t(Analyze_Iteration_Scheme): issue error in formal mode when loop\n+\tparameter specification does not include a subtype mark.\n+\t* sem_ch6.adb (Analyze_Abstract_Subprogram_Declaration): issue error in\n+\tformal mode on abstract subprogram.\n+\t(Analyze_Subprogram_Specification): issue error in formal mode on\n+\tuser-defined operator.\n+\t(Process_Formals): issue error in formal mode on access parameter and\n+\tdefault expression.\n+\t* sem_ch9.adb (Analyze_Abort_Statement,\n+\tAnalyze_Accept_Statement, Analyze_Asynchronous_Select,\n+\tAnalyze_Conditional_Entry_Call, Analyze_Delay_Relative,\n+\tAnalyze_Delay_Until, Analyze_Entry_Call_Alternative,\n+\tAnalyze_Requeue, Analyze_Selective_Accept,\n+\tAnalyze_Timed_Entry_Call): issue error in formal mode on such constructs\n+\t* sem_ch11.adb (Analyze_Raise_Statement, Analyze_Raise_xxx_Error):\n+\tissue error in formal mode on user-defined raise statement.\n+\n 2011-08-01  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch6.adb (Enter_Overloaded_Entity): Do not warn about a"}, {"sha": "8d65e9e751399e5950e41700394d2159e8628db4", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -573,7 +573,8 @@ package body Einfo is\n \n    function Access_Disp_Table (Id : E) return L is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id));\n+      pragma Assert (Ekind_In (Id, E_Record_Type,\n+                                   E_Record_Subtype));\n       return Elist16 (Implementation_Base_Type (Id));\n    end Access_Disp_Table;\n \n@@ -882,7 +883,8 @@ package body Einfo is\n \n    function Dispatch_Table_Wrappers (Id : E) return L is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id));\n+      pragma Assert (Ekind_In (Id, E_Record_Type,\n+                                   E_Record_Subtype));\n       return Elist26 (Implementation_Base_Type (Id));\n    end Dispatch_Table_Wrappers;\n \n@@ -2996,7 +2998,9 @@ package body Einfo is\n \n    procedure Set_Access_Disp_Table (Id : E; V : L) is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id) and then Is_Base_Type (Id));\n+      pragma Assert (Ekind (Id) = E_Record_Type\n+        and then Id = Implementation_Base_Type (Id));\n+      pragma Assert (V = No_Elist or else Is_Tagged_Type (Id));\n       Set_Elist16 (Id, V);\n    end Set_Access_Disp_Table;\n \n@@ -3302,12 +3306,9 @@ package body Einfo is\n \n    procedure Set_Dispatch_Table_Wrappers (Id : E; V : L) is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id)\n-        and then Is_Base_Type (Id)\n-        and then Ekind_In (Id, E_Record_Type,\n-                               E_Record_Subtype,\n-                               E_Record_Type_With_Private,\n-                               E_Record_Subtype_With_Private));\n+      pragma Assert (Ekind (Id) = E_Record_Type\n+        and then Id = Implementation_Base_Type (Id));\n+      pragma Assert (V = No_Elist or else Is_Tagged_Type (Id));\n       Set_Elist26 (Id, V);\n    end Set_Dispatch_Table_Wrappers;\n \n@@ -4312,13 +4313,7 @@ package body Einfo is\n \n    procedure Set_Is_Interface (Id : E; V : B := True) is\n    begin\n-      pragma Assert\n-        (Ekind_In (Id, E_Record_Type,\n-                       E_Record_Subtype,\n-                       E_Record_Type_With_Private,\n-                       E_Record_Subtype_With_Private,\n-                       E_Class_Wide_Type,\n-                       E_Class_Wide_Subtype));\n+      pragma Assert (Is_Record_Type (Id));\n       Set_Flag186 (Id, V);\n    end Set_Is_Interface;\n "}, {"sha": "a451ddcd45c49afabf627b00591aeccef9cd41c6", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -338,8 +338,8 @@ package Einfo is\n --       statements referencing the same entry.\n \n --    Access_Disp_Table (Elist16) [implementation base type only]\n---       Present in record type entities. For a tagged type, points to the\n---       dispatch tables associated with the tagged type. The first two\n+--       Present in record types and subtypes. Set in tagged types to point to\n+--       the dispatch tables associated with the tagged type. The first two\n --       entities correspond with the primary dispatch table: 1) primary\n --       dispatch table with user-defined primitives, 2) primary dispatch table\n --       with predefined primitives. For each interface type covered by the\n@@ -349,7 +349,7 @@ package Einfo is\n --       dispatch table with user-defined primitives, and 6) secondary dispatch\n --       table with predefined primitives. The last entity of this list is an\n --       access type declaration used to expand dispatching calls through the\n---       primary dispatch table. For a non-tagged record, contains Empty.\n+--       primary dispatch table. For a non-tagged record, contains No_Elist.\n \n --    Actual_Subtype (Node17)\n --       Present in variables, constants, and formal parameters. This is the\n@@ -855,11 +855,10 @@ package Einfo is\n --       index starting at 1 and ranging up to number of discriminants.\n \n --    Dispatch_Table_Wrappers (Elist26) [implementation base type only]\n---       Present in record type [with private] entities. Set in library level\n---       record type entities if we are generating statically allocated\n---       dispatch tables. For a tagged type, points to the list of dispatch\n---       table wrappers associated with the tagged type. For a non-tagged\n---       record, contains No_Elist.\n+--       Present in record types and subtypes. Set in library level tagged type\n+--       entities if we are generating statically allocated dispatch tables.\n+--       Points to the list of dispatch table wrappers associated with the\n+--       tagged type. For a non-tagged record, contains No_Elist.\n \n --    DTC_Entity (Node16)\n --       Present in function and procedure entities. Set to Empty unless\n@@ -5513,7 +5512,6 @@ package Einfo is\n    --  E_Record_Type_With_Private\n    --  E_Record_Subtype_With_Private\n    --    Direct_Primitive_Operations         (Elist10)\n-   --    Access_Disp_Table                   (Elist16)  (base type only)\n    --    First_Entity                        (Node17)\n    --    Private_Dependents                  (Elist18)\n    --    Underlying_Full_View                (Node19)\n@@ -5522,7 +5520,6 @@ package Einfo is\n    --    Private_View                        (Node22)\n    --    Stored_Constraint                   (Elist23)\n    --    Interfaces                          (Elist25)\n-   --    Dispatch_Table_Wrappers             (Elist26)  (base type only)\n    --    Has_Completion                      (Flag26)\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n    --    Has_External_Tag_Rep_Clause         (Flag110)"}, {"sha": "871de86154d9cda691e292d65ea4c7b771c98366", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -1211,22 +1211,27 @@ package body Exp_Aggr is\n               and then Is_Tagged_Type (Comp_Type)\n               and then Tagged_Type_Expansion\n             then\n-               A :=\n-                 Make_OK_Assignment_Statement (Loc,\n-                   Name =>\n-                     Make_Selected_Component (Loc,\n-                       Prefix =>  New_Copy_Tree (Indexed_Comp),\n-                       Selector_Name =>\n-                         New_Reference_To\n-                           (First_Tag_Component (Comp_Type), Loc)),\n-\n-                   Expression =>\n-                     Unchecked_Convert_To (RTE (RE_Tag),\n-                       New_Reference_To\n-                         (Node (First_Elmt (Access_Disp_Table (Comp_Type))),\n-                          Loc)));\n-\n-               Append_To (L, A);\n+               declare\n+                  Full_Typ : constant Entity_Id := Underlying_Type (Comp_Type);\n+\n+               begin\n+                  A :=\n+                    Make_OK_Assignment_Statement (Loc,\n+                      Name =>\n+                        Make_Selected_Component (Loc,\n+                          Prefix =>  New_Copy_Tree (Indexed_Comp),\n+                          Selector_Name =>\n+                            New_Reference_To\n+                              (First_Tag_Component (Full_Typ), Loc)),\n+\n+                      Expression =>\n+                        Unchecked_Convert_To (RTE (RE_Tag),\n+                          New_Reference_To\n+                            (Node (First_Elmt (Access_Disp_Table (Full_Typ))),\n+                             Loc)));\n+\n+                  Append_To (L, A);\n+               end;\n             end if;\n \n             --  Adjust and attach the component to the proper final list, which\n@@ -2982,7 +2987,7 @@ package body Exp_Aggr is\n                Gen_Ctrl_Actions_For_Aggr;\n             end if;\n \n-            Comp_Type := Etype (Selector);\n+            Comp_Type := Underlying_Type (Etype (Selector));\n             Comp_Expr :=\n               Make_Selected_Component (Loc,\n                 Prefix        => New_Copy_Tree (Target),"}, {"sha": "4ee02b78041c2de7ce305b35dce32800e06a40bc", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -1917,7 +1917,10 @@ package body Exp_Ch3 is\n                 Expression =>\n                   Unchecked_Convert_To (RTE (RE_Tag),\n                     New_Reference_To\n-                      (Node (First_Elmt (Access_Disp_Table (Typ))), Loc))));\n+                      (Node\n+                        (First_Elmt\n+                          (Access_Disp_Table (Underlying_Type (Typ)))),\n+                       Loc))));\n          end if;\n \n          --  Adjust the component if controlled except if it is an aggregate\n@@ -5055,27 +5058,32 @@ package body Exp_Ch3 is\n               and then Tagged_Type_Expansion\n               and then Nkind (Expr) /= N_Aggregate\n             then\n-               --  The re-assignment of the tag has to be done even if the\n-               --  object is a constant.\n-\n-               New_Ref :=\n-                 Make_Selected_Component (Loc,\n-                    Prefix => New_Reference_To (Def_Id, Loc),\n-                    Selector_Name =>\n-                      New_Reference_To (First_Tag_Component (Typ), Loc));\n+               declare\n+                  Full_Typ : constant Entity_Id := Underlying_Type (Typ);\n \n-               Set_Assignment_OK (New_Ref);\n+               begin\n+                  --  The re-assignment of the tag has to be done even if the\n+                  --  object is a constant.\n \n-               Insert_After (Init_After,\n-                 Make_Assignment_Statement (Loc,\n-                   Name => New_Ref,\n-                   Expression =>\n-                     Unchecked_Convert_To (RTE (RE_Tag),\n-                       New_Reference_To\n-                         (Node\n-                           (First_Elmt\n-                             (Access_Disp_Table (Base_Type (Typ)))),\n-                          Loc))));\n+                  New_Ref :=\n+                    Make_Selected_Component (Loc,\n+                       Prefix => New_Reference_To (Def_Id, Loc),\n+                       Selector_Name =>\n+                         New_Reference_To (First_Tag_Component (Full_Typ),\n+                                           Loc));\n+                  Set_Assignment_OK (New_Ref);\n+\n+                  Insert_After (Init_After,\n+                    Make_Assignment_Statement (Loc,\n+                      Name => New_Ref,\n+                      Expression =>\n+                        Unchecked_Convert_To (RTE (RE_Tag),\n+                          New_Reference_To\n+                            (Node\n+                              (First_Elmt\n+                                (Access_Disp_Table (Full_Typ))),\n+                             Loc))));\n+               end;\n \n             elsif Is_Tagged_Type (Typ)\n               and then Is_CPP_Constructor_Call (Expr)"}, {"sha": "34e4924783587a29862e5e40a7a8f73c1eb76515", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -874,19 +874,23 @@ package body Exp_Ch4 is\n          end if;\n \n          if Present (TagT) then\n-            Tag_Assign :=\n-              Make_Assignment_Statement (Loc,\n-                Name =>\n-                  Make_Selected_Component (Loc,\n-                    Prefix => TagR,\n-                    Selector_Name =>\n-                      New_Reference_To (First_Tag_Component (TagT), Loc)),\n+            declare\n+               Full_T : constant Entity_Id := Underlying_Type (TagT);\n \n-                Expression =>\n-                  Unchecked_Convert_To (RTE (RE_Tag),\n-                    New_Reference_To\n-                      (Elists.Node (First_Elmt (Access_Disp_Table (TagT))),\n-                       Loc)));\n+            begin\n+               Tag_Assign :=\n+                 Make_Assignment_Statement (Loc,\n+                   Name =>\n+                     Make_Selected_Component (Loc,\n+                       Prefix => TagR,\n+                       Selector_Name =>\n+                         New_Reference_To (First_Tag_Component (Full_T), Loc)),\n+                   Expression =>\n+                     Unchecked_Convert_To (RTE (RE_Tag),\n+                       New_Reference_To\n+                         (Elists.Node\n+                           (First_Elmt (Access_Disp_Table (Full_T))), Loc)));\n+            end;\n \n             --  The previous assignment has to be done in any case\n \n@@ -10397,6 +10401,7 @@ package body Exp_Ch4 is\n       Right : constant Node_Id    := Right_Opnd (N);\n       Loc   : constant Source_Ptr := Sloc (N);\n \n+      Full_R_Typ : Entity_Id;\n       Left_Type  : Entity_Id;\n       New_Node   : Node_Id;\n       Right_Type : Entity_Id;\n@@ -10414,6 +10419,12 @@ package body Exp_Ch4 is\n          Left_Type := Root_Type (Left_Type);\n       end if;\n \n+      if Is_Class_Wide_Type (Right_Type) then\n+         Full_R_Typ := Underlying_Type (Root_Type (Right_Type));\n+      else\n+         Full_R_Typ := Underlying_Type (Right_Type);\n+      end if;\n+\n       Obj_Tag :=\n         Make_Selected_Component (Loc,\n           Prefix        => Relocate_Node (Left),\n@@ -10482,8 +10493,7 @@ package body Exp_Ch4 is\n                      Prefix => Obj_Tag,\n                      Attribute_Name => Name_Address),\n                    New_Reference_To (\n-                     Node (First_Elmt\n-                            (Access_Disp_Table (Root_Type (Right_Type)))),\n+                     Node (First_Elmt (Access_Disp_Table (Full_R_Typ))),\n                      Loc)));\n \n          --  Ada 95: Normal case\n@@ -10493,9 +10503,7 @@ package body Exp_Ch4 is\n               Obj_Tag_Node => Obj_Tag,\n               Typ_Tag_Node =>\n                  New_Reference_To (\n-                   Node (First_Elmt\n-                          (Access_Disp_Table (Root_Type (Right_Type)))),\n-                   Loc),\n+                   Node (First_Elmt (Access_Disp_Table (Full_R_Typ))),  Loc),\n               Related_Nod => N,\n               New_Node    => New_Node);\n \n@@ -10526,7 +10534,7 @@ package body Exp_Ch4 is\n                 Left_Opnd  => Obj_Tag,\n                 Right_Opnd =>\n                   New_Reference_To\n-                    (Node (First_Elmt (Access_Disp_Table (Right_Type))), Loc));\n+                    (Node (First_Elmt (Access_Disp_Table (Full_R_Typ))), Loc));\n          end if;\n       end if;\n    end Tagged_Membership;"}, {"sha": "f2d5ccd88d5939b8fac39e3ea7f9690fb07548fd", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -919,7 +919,7 @@ package body Exp_Disp is\n \n       else\n          Build_Get_Prim_Op_Address (Loc,\n-           Typ      => Find_Dispatching_Type (Subp),\n+           Typ      => Underlying_Type (Find_Dispatching_Type (Subp)),\n            Tag_Node => Controlling_Tag,\n            Position => DT_Position (Subp),\n            New_Node => New_Node);\n@@ -1107,6 +1107,10 @@ package body Exp_Disp is\n          Iface_Typ := Corresponding_Record_Type (Iface_Typ);\n       end if;\n \n+      --  Handle private types\n+\n+      Iface_Typ := Underlying_Type (Iface_Typ);\n+\n       --  Freeze the entity associated with the target interface to have\n       --  available the attribute Access_Disp_Table.\n "}, {"sha": "e04414c16ea05c0168fcf6fd687d517e8f72592b", "filename": "gcc/ada/s-poosiz.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fs-poosiz.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fs-poosiz.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.ads?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,21 +62,21 @@ package System.Pool_Size is\n                                                        (1 .. Pool_Size);\n       end record;\n \n-   function Storage_Size\n+   overriding function Storage_Size\n      (Pool : Stack_Bounded_Pool) return System.Storage_Elements.Storage_Count;\n \n-   procedure Allocate\n+   overriding procedure Allocate\n      (Pool         : in out Stack_Bounded_Pool;\n       Address      : out System.Address;\n       Storage_Size : System.Storage_Elements.Storage_Count;\n       Alignment    : System.Storage_Elements.Storage_Count);\n \n-   procedure Deallocate\n+   overriding procedure Deallocate\n      (Pool         : in out Stack_Bounded_Pool;\n       Address      : System.Address;\n       Storage_Size : System.Storage_Elements.Storage_Count;\n       Alignment    : System.Storage_Elements.Storage_Count);\n \n-   procedure Initialize (Pool : in out Stack_Bounded_Pool);\n+   overriding procedure Initialize (Pool : in out Stack_Bounded_Pool);\n \n end System.Pool_Size;"}, {"sha": "ce71e7fc91b11e217e606c2a88cf1937a667b23f", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -441,6 +441,14 @@ package body Sem_Ch11 is\n       P              : Node_Id;\n \n    begin\n+      --  Raise statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"raise statement is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Check_Unreachable_Code (N);\n \n       --  Check exception restrictions on the original source\n@@ -607,6 +615,16 @@ package body Sem_Ch11 is\n    --  Start of processing for Analyze_Raise_xxx_Error\n \n    begin\n+      --  Source-code raise statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode\n+        and then Comes_From_Source (N)\n+      then\n+         Formal_Error_Msg_N (\"raise statement is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       if No (Etype (N)) then\n          Set_Etype (N, Standard_Void_Type);\n       end if;"}, {"sha": "3556590e7a7d16791bcf4d6dd77d977a9434bc32", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -1186,6 +1186,7 @@ package body Sem_Ch5 is\n          then\n             Formal_Error_Msg_N\n               (\"exit label must name the closest enclosing loop\", N);\n+            return;\n          else\n             Set_Has_Exit (U_Name);\n          end if;\n@@ -1864,6 +1865,16 @@ package body Sem_Ch5 is\n                   end if;\n                end;\n \n+               --  Loop parameter specification must include subtype mark in\n+               --  SPARK or ALFA\n+\n+               if Formal_Verification_Mode\n+                 and then Nkind (DS) = N_Range\n+               then\n+                  Formal_Error_Msg_N (\"loop parameter specification must \"\n+                                      & \"include subtype mark\", N);\n+               end if;\n+\n                --  Now analyze the subtype definition. If it is a range, create\n                --  temporaries for bounds.\n "}, {"sha": "338eae56149279dbad787e275788732610bcbec6", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -359,6 +359,14 @@ package body Sem_Ch6 is\n       Scop       : constant Entity_Id := Current_Scope;\n \n    begin\n+      --  Abstract subprogram is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"abstract subprogram is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Generate_Definition (Designator);\n       Set_Is_Abstract_Subprogram (Designator);\n       New_Overloaded_Entity (Designator);\n@@ -3034,6 +3042,16 @@ package body Sem_Ch6 is\n    --  Start of processing for Analyze_Subprogram_Specification\n \n    begin\n+      --  User-defined operator is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode\n+        and then Nkind (Defining_Unit_Name (N)) = N_Defining_Operator_Symbol\n+      then\n+         Formal_Error_Msg_N (\"user-defined operator is not allowed\", N);\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Generate_Definition (Designator);\n \n       if Nkind (N) = N_Function_Specification then\n@@ -8662,7 +8680,24 @@ package body Sem_Ch6 is\n          Set_Etype (Formal, Formal_Type);\n          Default := Expression (Param_Spec);\n \n+         --  Access parameter is not allowed in SPARK or ALFA\n+\n+         if Formal_Verification_Mode\n+           and then Ekind (Formal_Type) = E_Anonymous_Access_Type\n+         then\n+            Formal_Error_Msg_N (\"access parameter is not allowed\", Param_Spec);\n+         end if;\n+\n          if Present (Default) then\n+            --  Default expression is not allowed in SPARK or ALFA\n+\n+            if Formal_Verification_Mode then\n+               Formal_Error_Msg_N\n+                 (\"default expression is not allowed\", Default);\n+            end if;\n+\n+            --  Proceed with analysis\n+\n             if Out_Present (Param_Spec) then\n                Error_Msg_N\n                  (\"default initialization only allowed for IN parameters\","}, {"sha": "255edbe1b947cafae916a9d91e2ae74fdd70d95f", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -2069,39 +2069,6 @@ package body Sem_Ch7 is\n            and then Is_Tagged_Type (Full)\n            and then not Error_Posted (Full)\n          then\n-            if Priv_Is_Base_Type then\n-\n-               --  Ada 2005 (AI-345): The full view of a type implementing an\n-               --  interface can be a task type.\n-\n-               --    type T is new I with private;\n-               --  private\n-               --    task type T is new I with ...\n-\n-               if Is_Interface (Etype (Priv))\n-                 and then Is_Concurrent_Type (Base_Type (Full))\n-               then\n-                  --  Protect the frontend against previous errors\n-\n-                  if Present (Corresponding_Record_Type\n-                               (Base_Type (Full)))\n-                  then\n-                     Set_Access_Disp_Table\n-                       (Priv, Access_Disp_Table\n-                               (Corresponding_Record_Type (Base_Type (Full))));\n-\n-                  --  Generic context, or previous errors\n-\n-                  else\n-                     null;\n-                  end if;\n-\n-               else\n-                  Set_Access_Disp_Table\n-                    (Priv, Access_Disp_Table (Base_Type (Full)));\n-               end if;\n-            end if;\n-\n             if Is_Tagged_Type (Priv) then\n \n                --  If the type is tagged, the tag itself must be available on"}, {"sha": "e25c92f4e59262b3fab04585c573fc89350048bf", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38171f43f1339cf9d2f02ded8b41f5c4a3828b42/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=38171f43f1339cf9d2f02ded8b41f5c4a3828b42", "patch": "@@ -100,6 +100,15 @@ package body Sem_Ch9 is\n       T_Name : Node_Id;\n \n    begin\n+      --  Abort statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"abort statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Tasking_Used := True;\n       T_Name := First (Names (N));\n       while Present (T_Name) loop\n@@ -169,6 +178,15 @@ package body Sem_Ch9 is\n       Task_Nam  : Entity_Id;\n \n    begin\n+      --  Accept statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"accept statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Tasking_Used := True;\n \n       --  Entry name is initialized to Any_Id. It should get reset to the\n@@ -399,6 +417,15 @@ package body Sem_Ch9 is\n       Trigger        : Node_Id;\n \n    begin\n+      --  Select statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Tasking_Used := True;\n       Check_Restriction (Max_Asynchronous_Select_Nesting, N);\n       Check_Restriction (No_Select_Statements, N);\n@@ -444,6 +471,15 @@ package body Sem_Ch9 is\n       Is_Disp_Select : Boolean := False;\n \n    begin\n+      --  Select statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Check_Restriction (No_Select_Statements, N);\n       Tasking_Used := True;\n \n@@ -540,6 +576,15 @@ package body Sem_Ch9 is\n    procedure Analyze_Delay_Relative (N : Node_Id) is\n       E : constant Node_Id := Expression (N);\n    begin\n+      --  Delay statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"delay statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Check_Restriction (No_Relative_Delay, N);\n       Tasking_Used := True;\n       Check_Restriction (No_Delay, N);\n@@ -557,6 +602,15 @@ package body Sem_Ch9 is\n       Typ : Entity_Id;\n \n    begin\n+      --  Delay statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"delay statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Tasking_Used := True;\n       Check_Restriction (No_Delay, N);\n       Check_Potentially_Blocking_Operation (N);\n@@ -843,6 +897,15 @@ package body Sem_Ch9 is\n       Call : constant Node_Id := Entry_Call_Statement (N);\n \n    begin\n+      --  Entry call is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"entry call is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Tasking_Used := True;\n \n       if Present (Pragmas_Before (N)) then\n@@ -1293,6 +1356,15 @@ package body Sem_Ch9 is\n       Outer_Ent   : Entity_Id;\n \n    begin\n+      --  Requeue statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"requeue statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Check_Restriction (No_Requeue_Statements, N);\n       Check_Unreachable_Code (N);\n       Tasking_Used := True;\n@@ -1566,6 +1638,15 @@ package body Sem_Ch9 is\n       Alt_Count         : Uint    := Uint_0;\n \n    begin\n+      --  Select statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Check_Restriction (No_Select_Statements, N);\n       Tasking_Used := True;\n \n@@ -2094,6 +2175,15 @@ package body Sem_Ch9 is\n       Is_Disp_Select : Boolean := False;\n \n    begin\n+      --  Select statement is not allowed in SPARK or ALFA\n+\n+      if Formal_Verification_Mode then\n+         Formal_Error_Msg_N (\"select statement is not allowed\", N);\n+         return;\n+      end if;\n+\n+      --  Proceed with analysis\n+\n       Check_Restriction (No_Select_Statements, N);\n       Tasking_Used := True;\n "}]}