{"sha": "861bb6c1b0958236ad93717f98d347aa6152bd09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxYmI2YzFiMDk1ODIzNmFkOTM3MTdmOThkMzQ3YWE2MTUyYmQwOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-11T15:56:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-11T15:56:58Z"}, "message": "Initial revision\n\nFrom-SVN: r14764", "tree": {"sha": "b2e1ea43e0bdba8cca9bb02ed01f5e3da5a955a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2e1ea43e0bdba8cca9bb02ed01f5e3da5a955a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/861bb6c1b0958236ad93717f98d347aa6152bd09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861bb6c1b0958236ad93717f98d347aa6152bd09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861bb6c1b0958236ad93717f98d347aa6152bd09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861bb6c1b0958236ad93717f98d347aa6152bd09/comments", "author": null, "committer": null, "parents": [{"sha": "737cee66f221eb8de21f0e41affc4b13cb7c0feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/737cee66f221eb8de21f0e41affc4b13cb7c0feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/737cee66f221eb8de21f0e41affc4b13cb7c0feb"}], "stats": {"total": 162814, "additions": 162377, "deletions": 437}, "files": [{"sha": "dea758b546503ab8c8c39aee6a7f0eace0c01c24", "filename": "gcc/.gdbinit", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2F.gdbinit", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2F.gdbinit", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2F.gdbinit?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,95 @@\n+define pr\n+set debug_rtx ($)\n+end\n+\n+document pr\n+Print the full structure of the rtx that is $.\n+Works only when an inferior is executing.\n+end\n+\n+define prl\n+set debug_rtx_list ($, debug_rtx_count)\n+end\n+\n+document prl\n+Print the full structure of all rtx insns beginning at $.\n+Works only when an inferior is executing.\n+Uses variable debug_rtx_count to control number of insns printed:\n+  debug_rtx_count > 0: print from $ on.\n+  debug_rtx_count < 0: print a window around $.\n+\n+There is also debug_rtx_find (rtx, uid) that will scan a list for UID and print\n+it using debug_rtx_list. Usage example: set $foo=debug_rtx_find(first, 42)\n+end\n+\n+define pt\n+set debug_tree ($)\n+end\n+\n+document pt\n+Print the full structure of the tree that is $.\n+Works only when an inferior is executing.\n+end\n+\n+define ptc\n+output (enum tree_code) $.common.code\n+echo \\n\n+end\n+\n+document ptc\n+Print the tree-code of the tree node that is $.\n+end\n+\n+define pdn\n+output $.decl.name->identifier.pointer\n+echo \\n\n+end\n+\n+document pdn\n+Print the name of the decl-node that is $.\n+end\n+\n+define ptn\n+output $.type.name->decl.name->identifier.pointer\n+echo \\n\n+end\n+\n+document ptn\n+Print the name of the type-node that is $.\n+end\n+\n+define prc\n+output (enum rtx_code) $.code\n+echo \\ (\n+output $.mode\n+echo )\\n\n+end\n+\n+document prc\n+Print the rtx-code and machine mode of the rtx that is $.\n+end\n+\n+define pi\n+print $.fld[0].rtx@7\n+end\n+\n+document pi\n+Print the fields of an instruction that is $.\n+end\n+\n+define pbs\n+set print_binding_stack ()\n+end\n+\n+document pbs\n+In cc1plus, print the current binding stack, frame by frame, up to and\n+including the global binding level.\n+end\n+\n+# Don't let abort actually run, as it will make\n+# stdio stop working and therefore the `pr' command below as well.\n+b abort\n+\n+# Make gdb complain about symbol reading errors.  This is so that gcc\n+# developers can see and fix bugs in gcc debug output.\n+set complaints 20"}, {"sha": "60549be514af76c5db0c17ce6bbe01b2f81e2d9e", "filename": "gcc/COPYING", "status": "added", "additions": 340, "deletions": 0, "changes": 340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FCOPYING", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FCOPYING", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FCOPYING?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,340 @@\n+\t\t    GNU GENERAL PUBLIC LICENSE\n+\t\t       Version 2, June 1991\n+\n+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n+                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+\t\t\t    Preamble\n+\n+  The licenses for most software are designed to take away your\n+freedom to share and change it.  By contrast, the GNU General Public\n+License is intended to guarantee your freedom to share and change free\n+software--to make sure the software is free for all its users.  This\n+General Public License applies to most of the Free Software\n+Foundation's software and to any other program whose authors commit to\n+using it.  (Some other Free Software Foundation software is covered by\n+the GNU Library General Public License instead.)  You can apply it to\n+your programs, too.\n+\n+  When we speak of free software, we are referring to freedom, not\n+price.  Our General Public Licenses are designed to make sure that you\n+have the freedom to distribute copies of free software (and charge for\n+this service if you wish), that you receive source code or can get it\n+if you want it, that you can change the software or use pieces of it\n+in new free programs; and that you know you can do these things.\n+\n+  To protect your rights, we need to make restrictions that forbid\n+anyone to deny you these rights or to ask you to surrender the rights.\n+These restrictions translate to certain responsibilities for you if you\n+distribute copies of the software, or if you modify it.\n+\n+  For example, if you distribute copies of such a program, whether\n+gratis or for a fee, you must give the recipients all the rights that\n+you have.  You must make sure that they, too, receive or can get the\n+source code.  And you must show them these terms so they know their\n+rights.\n+\n+  We protect your rights with two steps: (1) copyright the software, and\n+(2) offer you this license which gives you legal permission to copy,\n+distribute and/or modify the software.\n+\n+  Also, for each author's protection and ours, we want to make certain\n+that everyone understands that there is no warranty for this free\n+software.  If the software is modified by someone else and passed on, we\n+want its recipients to know that what they have is not the original, so\n+that any problems introduced by others will not reflect on the original\n+authors' reputations.\n+\n+  Finally, any free program is threatened constantly by software\n+patents.  We wish to avoid the danger that redistributors of a free\n+program will individually obtain patent licenses, in effect making the\n+program proprietary.  To prevent this, we have made it clear that any\n+patent must be licensed for everyone's free use or not licensed at all.\n+\n+  The precise terms and conditions for copying, distribution and\n+modification follow.\n+\f\n+\t\t    GNU GENERAL PUBLIC LICENSE\n+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n+\n+  0. This License applies to any program or other work which contains\n+a notice placed by the copyright holder saying it may be distributed\n+under the terms of this General Public License.  The \"Program\", below,\n+refers to any such program or work, and a \"work based on the Program\"\n+means either the Program or any derivative work under copyright law:\n+that is to say, a work containing the Program or a portion of it,\n+either verbatim or with modifications and/or translated into another\n+language.  (Hereinafter, translation is included without limitation in\n+the term \"modification\".)  Each licensee is addressed as \"you\".\n+\n+Activities other than copying, distribution and modification are not\n+covered by this License; they are outside its scope.  The act of\n+running the Program is not restricted, and the output from the Program\n+is covered only if its contents constitute a work based on the\n+Program (independent of having been made by running the Program).\n+Whether that is true depends on what the Program does.\n+\n+  1. You may copy and distribute verbatim copies of the Program's\n+source code as you receive it, in any medium, provided that you\n+conspicuously and appropriately publish on each copy an appropriate\n+copyright notice and disclaimer of warranty; keep intact all the\n+notices that refer to this License and to the absence of any warranty;\n+and give any other recipients of the Program a copy of this License\n+along with the Program.\n+\n+You may charge a fee for the physical act of transferring a copy, and\n+you may at your option offer warranty protection in exchange for a fee.\n+\n+  2. You may modify your copy or copies of the Program or any portion\n+of it, thus forming a work based on the Program, and copy and\n+distribute such modifications or work under the terms of Section 1\n+above, provided that you also meet all of these conditions:\n+\n+    a) You must cause the modified files to carry prominent notices\n+    stating that you changed the files and the date of any change.\n+\n+    b) You must cause any work that you distribute or publish, that in\n+    whole or in part contains or is derived from the Program or any\n+    part thereof, to be licensed as a whole at no charge to all third\n+    parties under the terms of this License.\n+\n+    c) If the modified program normally reads commands interactively\n+    when run, you must cause it, when started running for such\n+    interactive use in the most ordinary way, to print or display an\n+    announcement including an appropriate copyright notice and a\n+    notice that there is no warranty (or else, saying that you provide\n+    a warranty) and that users may redistribute the program under\n+    these conditions, and telling the user how to view a copy of this\n+    License.  (Exception: if the Program itself is interactive but\n+    does not normally print such an announcement, your work based on\n+    the Program is not required to print an announcement.)\n+\f\n+These requirements apply to the modified work as a whole.  If\n+identifiable sections of that work are not derived from the Program,\n+and can be reasonably considered independent and separate works in\n+themselves, then this License, and its terms, do not apply to those\n+sections when you distribute them as separate works.  But when you\n+distribute the same sections as part of a whole which is a work based\n+on the Program, the distribution of the whole must be on the terms of\n+this License, whose permissions for other licensees extend to the\n+entire whole, and thus to each and every part regardless of who wrote it.\n+\n+Thus, it is not the intent of this section to claim rights or contest\n+your rights to work written entirely by you; rather, the intent is to\n+exercise the right to control the distribution of derivative or\n+collective works based on the Program.\n+\n+In addition, mere aggregation of another work not based on the Program\n+with the Program (or with a work based on the Program) on a volume of\n+a storage or distribution medium does not bring the other work under\n+the scope of this License.\n+\n+  3. You may copy and distribute the Program (or a work based on it,\n+under Section 2) in object code or executable form under the terms of\n+Sections 1 and 2 above provided that you also do one of the following:\n+\n+    a) Accompany it with the complete corresponding machine-readable\n+    source code, which must be distributed under the terms of Sections\n+    1 and 2 above on a medium customarily used for software interchange; or,\n+\n+    b) Accompany it with a written offer, valid for at least three\n+    years, to give any third party, for a charge no more than your\n+    cost of physically performing source distribution, a complete\n+    machine-readable copy of the corresponding source code, to be\n+    distributed under the terms of Sections 1 and 2 above on a medium\n+    customarily used for software interchange; or,\n+\n+    c) Accompany it with the information you received as to the offer\n+    to distribute corresponding source code.  (This alternative is\n+    allowed only for noncommercial distribution and only if you\n+    received the program in object code or executable form with such\n+    an offer, in accord with Subsection b above.)\n+\n+The source code for a work means the preferred form of the work for\n+making modifications to it.  For an executable work, complete source\n+code means all the source code for all modules it contains, plus any\n+associated interface definition files, plus the scripts used to\n+control compilation and installation of the executable.  However, as a\n+special exception, the source code distributed need not include\n+anything that is normally distributed (in either source or binary\n+form) with the major components (compiler, kernel, and so on) of the\n+operating system on which the executable runs, unless that component\n+itself accompanies the executable.\n+\n+If distribution of executable or object code is made by offering\n+access to copy from a designated place, then offering equivalent\n+access to copy the source code from the same place counts as\n+distribution of the source code, even though third parties are not\n+compelled to copy the source along with the object code.\n+\f\n+  4. You may not copy, modify, sublicense, or distribute the Program\n+except as expressly provided under this License.  Any attempt\n+otherwise to copy, modify, sublicense or distribute the Program is\n+void, and will automatically terminate your rights under this License.\n+However, parties who have received copies, or rights, from you under\n+this License will not have their licenses terminated so long as such\n+parties remain in full compliance.\n+\n+  5. You are not required to accept this License, since you have not\n+signed it.  However, nothing else grants you permission to modify or\n+distribute the Program or its derivative works.  These actions are\n+prohibited by law if you do not accept this License.  Therefore, by\n+modifying or distributing the Program (or any work based on the\n+Program), you indicate your acceptance of this License to do so, and\n+all its terms and conditions for copying, distributing or modifying\n+the Program or works based on it.\n+\n+  6. Each time you redistribute the Program (or any work based on the\n+Program), the recipient automatically receives a license from the\n+original licensor to copy, distribute or modify the Program subject to\n+these terms and conditions.  You may not impose any further\n+restrictions on the recipients' exercise of the rights granted herein.\n+You are not responsible for enforcing compliance by third parties to\n+this License.\n+\n+  7. If, as a consequence of a court judgment or allegation of patent\n+infringement or for any other reason (not limited to patent issues),\n+conditions are imposed on you (whether by court order, agreement or\n+otherwise) that contradict the conditions of this License, they do not\n+excuse you from the conditions of this License.  If you cannot\n+distribute so as to satisfy simultaneously your obligations under this\n+License and any other pertinent obligations, then as a consequence you\n+may not distribute the Program at all.  For example, if a patent\n+license would not permit royalty-free redistribution of the Program by\n+all those who receive copies directly or indirectly through you, then\n+the only way you could satisfy both it and this License would be to\n+refrain entirely from distribution of the Program.\n+\n+If any portion of this section is held invalid or unenforceable under\n+any particular circumstance, the balance of the section is intended to\n+apply and the section as a whole is intended to apply in other\n+circumstances.\n+\n+It is not the purpose of this section to induce you to infringe any\n+patents or other property right claims or to contest validity of any\n+such claims; this section has the sole purpose of protecting the\n+integrity of the free software distribution system, which is\n+implemented by public license practices.  Many people have made\n+generous contributions to the wide range of software distributed\n+through that system in reliance on consistent application of that\n+system; it is up to the author/donor to decide if he or she is willing\n+to distribute software through any other system and a licensee cannot\n+impose that choice.\n+\n+This section is intended to make thoroughly clear what is believed to\n+be a consequence of the rest of this License.\n+\f\n+  8. If the distribution and/or use of the Program is restricted in\n+certain countries either by patents or by copyrighted interfaces, the\n+original copyright holder who places the Program under this License\n+may add an explicit geographical distribution limitation excluding\n+those countries, so that distribution is permitted only in or among\n+countries not thus excluded.  In such case, this License incorporates\n+the limitation as if written in the body of this License.\n+\n+  9. The Free Software Foundation may publish revised and/or new versions\n+of the General Public License from time to time.  Such new versions will\n+be similar in spirit to the present version, but may differ in detail to\n+address new problems or concerns.\n+\n+Each version is given a distinguishing version number.  If the Program\n+specifies a version number of this License which applies to it and \"any\n+later version\", you have the option of following the terms and conditions\n+either of that version or of any later version published by the Free\n+Software Foundation.  If the Program does not specify a version number of\n+this License, you may choose any version ever published by the Free Software\n+Foundation.\n+\n+  10. If you wish to incorporate parts of the Program into other free\n+programs whose distribution conditions are different, write to the author\n+to ask for permission.  For software which is copyrighted by the Free\n+Software Foundation, write to the Free Software Foundation; we sometimes\n+make exceptions for this.  Our decision will be guided by the two goals\n+of preserving the free status of all derivatives of our free software and\n+of promoting the sharing and reuse of software generally.\n+\n+\t\t\t    NO WARRANTY\n+\n+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\n+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\n+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\n+PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\n+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\n+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\n+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\n+REPAIR OR CORRECTION.\n+\n+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\n+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\n+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\n+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\n+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\n+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\n+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\n+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\n+POSSIBILITY OF SUCH DAMAGES.\n+\n+\t\t     END OF TERMS AND CONDITIONS\n+\f\n+\t    How to Apply These Terms to Your New Programs\n+\n+  If you develop a new program, and you want it to be of the greatest\n+possible use to the public, the best way to achieve this is to make it\n+free software which everyone can redistribute and change under these terms.\n+\n+  To do so, attach the following notices to the program.  It is safest\n+to attach them to the start of each source file to most effectively\n+convey the exclusion of warranty; and each file should have at least\n+the \"copyright\" line and a pointer to where the full notice is found.\n+\n+    <one line to give the program's name and a brief idea of what it does.>\n+    Copyright (C) 19yy  <name of author>\n+\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 2 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License\n+    along with this program; if not, write to the Free Software\n+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+If the program is interactive, make it output a short notice like this\n+when it starts in an interactive mode:\n+\n+    Gnomovision version 69, Copyright (C) 19yy name of author\n+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n+    This is free software, and you are welcome to redistribute it\n+    under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate\n+parts of the General Public License.  Of course, the commands you use may\n+be called something other than `show w' and `show c'; they could even be\n+mouse-clicks or menu items--whatever suits your program.\n+\n+You should also get your employer (if you work as a programmer) or your\n+school, if any, to sign a \"copyright disclaimer\" for the program, if\n+necessary.  Here is a sample; alter the names:\n+\n+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n+  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n+\n+  <signature of Ty Coon>, 1 April 1989\n+  Ty Coon, President of Vice\n+\n+This General Public License does not permit incorporating your program into\n+proprietary programs.  If your program is a subroutine library, you may\n+consider it more useful to permit linking proprietary applications with the\n+library.  If this is what you want to do, use the GNU Library General\n+Public License instead of this License."}, {"sha": "161a3d1d47b94f5d092b4c5fa316007c6f22fe81", "filename": "gcc/COPYING.LIB", "status": "added", "additions": 482, "deletions": 0, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FCOPYING.LIB", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FCOPYING.LIB", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FCOPYING.LIB?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,482 @@\n+\t\t  GNU LIBRARY GENERAL PUBLIC LICENSE\n+\t\t       Version 2, June 1991\n+\n+ Copyright (C) 1991 Free Software Foundation, Inc.\n+ 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA\n+ Everyone is permitted to copy and distribute verbatim copies\n+ of this license document, but changing it is not allowed.\n+\n+[This is the first released version of the library GPL.  It is\n+ numbered 2 because it goes with version 2 of the ordinary GPL.]\n+\n+\t\t\t    Preamble\n+\n+  The licenses for most software are designed to take away your\n+freedom to share and change it.  By contrast, the GNU General Public\n+Licenses are intended to guarantee your freedom to share and change\n+free software--to make sure the software is free for all its users.\n+\n+  This license, the Library General Public License, applies to some\n+specially designated Free Software Foundation software, and to any\n+other libraries whose authors decide to use it.  You can use it for\n+your libraries, too.\n+\n+  When we speak of free software, we are referring to freedom, not\n+price.  Our General Public Licenses are designed to make sure that you\n+have the freedom to distribute copies of free software (and charge for\n+this service if you wish), that you receive source code or can get it\n+if you want it, that you can change the software or use pieces of it\n+in new free programs; and that you know you can do these things.\n+\n+  To protect your rights, we need to make restrictions that forbid\n+anyone to deny you these rights or to ask you to surrender the rights.\n+These restrictions translate to certain responsibilities for you if\n+you distribute copies of the library, or if you modify it.\n+\n+  For example, if you distribute copies of the library, whether gratis\n+or for a fee, you must give the recipients all the rights that we gave\n+you.  You must make sure that they, too, receive or can get the source\n+code.  If you link a program with the library, you must provide\n+complete object files to the recipients so that they can relink them\n+with the library, after making changes to the library and recompiling\n+it.  And you must show them these terms so they know their rights.\n+\n+  Our method of protecting your rights has two steps: (1) copyright\n+the library, and (2) offer you this license which gives you legal\n+permission to copy, distribute and/or modify the library.\n+\n+  Also, for each distributor's protection, we want to make certain\n+that everyone understands that there is no warranty for this free\n+library.  If the library is modified by someone else and passed on, we\n+want its recipients to know that what they have is not the original\n+version, so that any problems introduced by others will not reflect on\n+the original authors' reputations.\n+\f\n+  Finally, any free program is threatened constantly by software\n+patents.  We wish to avoid the danger that companies distributing free\n+software will individually obtain patent licenses, thus in effect\n+transforming the program into proprietary software.  To prevent this,\n+we have made it clear that any patent must be licensed for everyone's\n+free use or not licensed at all.\n+\n+  Most GNU software, including some libraries, is covered by the ordinary\n+GNU General Public License, which was designed for utility programs.  This\n+license, the GNU Library General Public License, applies to certain\n+designated libraries.  This license is quite different from the ordinary\n+one; be sure to read it in full, and don't assume that anything in it is\n+the same as in the ordinary license.\n+\n+  The reason we have a separate public license for some libraries is that\n+they blur the distinction we usually make between modifying or adding to a\n+program and simply using it.  Linking a program with a library, without\n+changing the library, is in some sense simply using the library, and is\n+analogous to running a utility program or application program.  However, in\n+a textual and legal sense, the linked executable is a combined work, a\n+derivative of the original library, and the ordinary General Public License\n+treats it as such.\n+\n+  Because of this blurred distinction, using the ordinary General\n+Public License for libraries did not effectively promote software\n+sharing, because most developers did not use the libraries.  We\n+concluded that weaker conditions might promote sharing better.\n+\n+  However, unrestricted linking of non-free programs would deprive the\n+users of those programs of all benefit from the free status of the\n+libraries themselves.  This Library General Public License is intended to\n+permit developers of non-free programs to use free libraries, while\n+preserving your freedom as a user of such programs to change the free\n+libraries that are incorporated in them.  (We have not seen how to achieve\n+this as regards changes in header files, but we have achieved it as regards\n+changes in the actual functions of the Library.)  The hope is that this\n+will lead to faster development of free libraries.\n+\n+  The precise terms and conditions for copying, distribution and\n+modification follow.  Pay close attention to the difference between a\n+\"work based on the library\" and a \"work that uses the library\".  The\n+former contains code derived from the library, while the latter only\n+works together with the library.\n+\n+  Note that it is possible for a library to be covered by the ordinary\n+General Public License rather than by this special one.\n+\f\n+\t\t  GNU LIBRARY GENERAL PUBLIC LICENSE\n+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n+\n+  0. This License Agreement applies to any software library which\n+contains a notice placed by the copyright holder or other authorized\n+party saying it may be distributed under the terms of this Library\n+General Public License (also called \"this License\").  Each licensee is\n+addressed as \"you\".\n+\n+  A \"library\" means a collection of software functions and/or data\n+prepared so as to be conveniently linked with application programs\n+(which use some of those functions and data) to form executables.\n+\n+  The \"Library\", below, refers to any such software library or work\n+which has been distributed under these terms.  A \"work based on the\n+Library\" means either the Library or any derivative work under\n+copyright law: that is to say, a work containing the Library or a\n+portion of it, either verbatim or with modifications and/or translated\n+straightforwardly into another language.  (Hereinafter, translation is\n+included without limitation in the term \"modification\".)\n+\n+  \"Source code\" for a work means the preferred form of the work for\n+making modifications to it.  For a library, complete source code means\n+all the source code for all modules it contains, plus any associated\n+interface definition files, plus the scripts used to control compilation\n+and installation of the library.\n+\n+  Activities other than copying, distribution and modification are not\n+covered by this License; they are outside its scope.  The act of\n+running a program using the Library is not restricted, and output from\n+such a program is covered only if its contents constitute a work based\n+on the Library (independent of the use of the Library in a tool for\n+writing it).  Whether that is true depends on what the Library does\n+and what the program that uses the Library does.\n+  \n+  1. You may copy and distribute verbatim copies of the Library's\n+complete source code as you receive it, in any medium, provided that\n+you conspicuously and appropriately publish on each copy an\n+appropriate copyright notice and disclaimer of warranty; keep intact\n+all the notices that refer to this License and to the absence of any\n+warranty; and distribute a copy of this License along with the\n+Library.\n+\n+  You may charge a fee for the physical act of transferring a copy,\n+and you may at your option offer warranty protection in exchange for a\n+fee.\n+\f\n+  2. You may modify your copy or copies of the Library or any portion\n+of it, thus forming a work based on the Library, and copy and\n+distribute such modifications or work under the terms of Section 1\n+above, provided that you also meet all of these conditions:\n+\n+    a) The modified work must itself be a software library.\n+\n+    b) You must cause the files modified to carry prominent notices\n+    stating that you changed the files and the date of any change.\n+\n+    c) You must cause the whole of the work to be licensed at no\n+    charge to all third parties under the terms of this License.\n+\n+    d) If a facility in the modified Library refers to a function or a\n+    table of data to be supplied by an application program that uses\n+    the facility, other than as an argument passed when the facility\n+    is invoked, then you must make a good faith effort to ensure that,\n+    in the event an application does not supply such function or\n+    table, the facility still operates, and performs whatever part of\n+    its purpose remains meaningful.\n+\n+    (For example, a function in a library to compute square roots has\n+    a purpose that is entirely well-defined independent of the\n+    application.  Therefore, Subsection 2d requires that any\n+    application-supplied function or table used by this function must\n+    be optional: if the application does not supply it, the square\n+    root function must still compute square roots.)\n+\n+These requirements apply to the modified work as a whole.  If\n+identifiable sections of that work are not derived from the Library,\n+and can be reasonably considered independent and separate works in\n+themselves, then this License, and its terms, do not apply to those\n+sections when you distribute them as separate works.  But when you\n+distribute the same sections as part of a whole which is a work based\n+on the Library, the distribution of the whole must be on the terms of\n+this License, whose permissions for other licensees extend to the\n+entire whole, and thus to each and every part regardless of who wrote\n+it.\n+\n+Thus, it is not the intent of this section to claim rights or contest\n+your rights to work written entirely by you; rather, the intent is to\n+exercise the right to control the distribution of derivative or\n+collective works based on the Library.\n+\n+In addition, mere aggregation of another work not based on the Library\n+with the Library (or with a work based on the Library) on a volume of\n+a storage or distribution medium does not bring the other work under\n+the scope of this License.\n+\n+  3. You may opt to apply the terms of the ordinary GNU General Public\n+License instead of this License to a given copy of the Library.  To do\n+this, you must alter all the notices that refer to this License, so\n+that they refer to the ordinary GNU General Public License, version 2,\n+instead of to this License.  (If a newer version than version 2 of the\n+ordinary GNU General Public License has appeared, then you can specify\n+that version instead if you wish.)  Do not make any other change in\n+these notices.\n+\f\n+  Once this change is made in a given copy, it is irreversible for\n+that copy, so the ordinary GNU General Public License applies to all\n+subsequent copies and derivative works made from that copy.\n+\n+  This option is useful when you wish to copy part of the code of\n+the Library into a program that is not a library.\n+\n+  4. You may copy and distribute the Library (or a portion or\n+derivative of it, under Section 2) in object code or executable form\n+under the terms of Sections 1 and 2 above provided that you accompany\n+it with the complete corresponding machine-readable source code, which\n+must be distributed under the terms of Sections 1 and 2 above on a\n+medium customarily used for software interchange.\n+\n+  If distribution of object code is made by offering access to copy\n+from a designated place, then offering equivalent access to copy the\n+source code from the same place satisfies the requirement to\n+distribute the source code, even though third parties are not\n+compelled to copy the source along with the object code.\n+\n+  5. A program that contains no derivative of any portion of the\n+Library, but is designed to work with the Library by being compiled or\n+linked with it, is called a \"work that uses the Library\".  Such a\n+work, in isolation, is not a derivative work of the Library, and\n+therefore falls outside the scope of this License.\n+\n+  However, linking a \"work that uses the Library\" with the Library\n+creates an executable that is a derivative of the Library (because it\n+contains portions of the Library), rather than a \"work that uses the\n+library\".  The executable is therefore covered by this License.\n+Section 6 states terms for distribution of such executables.\n+\n+  When a \"work that uses the Library\" uses material from a header file\n+that is part of the Library, the object code for the work may be a\n+derivative work of the Library even though the source code is not.\n+Whether this is true is especially significant if the work can be\n+linked without the Library, or if the work is itself a library.  The\n+threshold for this to be true is not precisely defined by law.\n+\n+  If such an object file uses only numerical parameters, data\n+structure layouts and accessors, and small macros and small inline\n+functions (ten lines or less in length), then the use of the object\n+file is unrestricted, regardless of whether it is legally a derivative\n+work.  (Executables containing this object code plus portions of the\n+Library will still fall under Section 6.)\n+\n+  Otherwise, if the work is a derivative of the Library, you may\n+distribute the object code for the work under the terms of Section 6.\n+Any executables containing that work also fall under Section 6,\n+whether or not they are linked directly with the Library itself.\n+\f\n+  6. As an exception to the Sections above, you may also compile or\n+link a \"work that uses the Library\" with the Library to produce a\n+work containing portions of the Library, and distribute that work\n+under terms of your choice, provided that the terms permit\n+modification of the work for the customer's own use and reverse\n+engineering for debugging such modifications.\n+\n+  You must give prominent notice with each copy of the work that the\n+Library is used in it and that the Library and its use are covered by\n+this License.  You must supply a copy of this License.  If the work\n+during execution displays copyright notices, you must include the\n+copyright notice for the Library among them, as well as a reference\n+directing the user to the copy of this License.  Also, you must do one\n+of these things:\n+\n+    a) Accompany the work with the complete corresponding\n+    machine-readable source code for the Library including whatever\n+    changes were used in the work (which must be distributed under\n+    Sections 1 and 2 above); and, if the work is an executable linked\n+    with the Library, with the complete machine-readable \"work that\n+    uses the Library\", as object code and/or source code, so that the\n+    user can modify the Library and then relink to produce a modified\n+    executable containing the modified Library.  (It is understood\n+    that the user who changes the contents of definitions files in the\n+    Library will not necessarily be able to recompile the application\n+    to use the modified definitions.)\n+\n+    b) Accompany the work with a written offer, valid for at\n+    least three years, to give the same user the materials\n+    specified in Subsection 6a, above, for a charge no more\n+    than the cost of performing this distribution.\n+\n+    c) If distribution of the work is made by offering access to copy\n+    from a designated place, offer equivalent access to copy the above\n+    specified materials from the same place.\n+\n+    d) Verify that the user has already received a copy of these\n+    materials or that you have already sent this user a copy.\n+\n+  For an executable, the required form of the \"work that uses the\n+Library\" must include any data and utility programs needed for\n+reproducing the executable from it.  However, as a special exception,\n+the source code distributed need not include anything that is normally\n+distributed (in either source or binary form) with the major\n+components (compiler, kernel, and so on) of the operating system on\n+which the executable runs, unless that component itself accompanies\n+the executable.\n+\n+  It may happen that this requirement contradicts the license\n+restrictions of other proprietary libraries that do not normally\n+accompany the operating system.  Such a contradiction means you cannot\n+use both them and the Library together in an executable that you\n+distribute.\n+\f\n+  7. You may place library facilities that are a work based on the\n+Library side-by-side in a single library together with other library\n+facilities not covered by this License, and distribute such a combined\n+library, provided that the separate distribution of the work based on\n+the Library and of the other library facilities is otherwise\n+permitted, and provided that you do these two things:\n+\n+    a) Accompany the combined library with a copy of the same work\n+    based on the Library, uncombined with any other library\n+    facilities.  This must be distributed under the terms of the\n+    Sections above.\n+\n+    b) Give prominent notice with the combined library of the fact\n+    that part of it is a work based on the Library, and explaining\n+    where to find the accompanying uncombined form of the same work.\n+\n+  8. You may not copy, modify, sublicense, link with, or distribute\n+the Library except as expressly provided under this License.  Any\n+attempt otherwise to copy, modify, sublicense, link with, or\n+distribute the Library is void, and will automatically terminate your\n+rights under this License.  However, parties who have received copies,\n+or rights, from you under this License will not have their licenses\n+terminated so long as such parties remain in full compliance.\n+\n+  9. You are not required to accept this License, since you have not\n+signed it.  However, nothing else grants you permission to modify or\n+distribute the Library or its derivative works.  These actions are\n+prohibited by law if you do not accept this License.  Therefore, by\n+modifying or distributing the Library (or any work based on the\n+Library), you indicate your acceptance of this License to do so, and\n+all its terms and conditions for copying, distributing or modifying\n+the Library or works based on it.\n+\n+  10. Each time you redistribute the Library (or any work based on the\n+Library), the recipient automatically receives a license from the\n+original licensor to copy, distribute, link with or modify the Library\n+subject to these terms and conditions.  You may not impose any further\n+restrictions on the recipients' exercise of the rights granted herein.\n+You are not responsible for enforcing compliance by third parties to\n+this License.\n+\f\n+  11. If, as a consequence of a court judgment or allegation of patent\n+infringement or for any other reason (not limited to patent issues),\n+conditions are imposed on you (whether by court order, agreement or\n+otherwise) that contradict the conditions of this License, they do not\n+excuse you from the conditions of this License.  If you cannot\n+distribute so as to satisfy simultaneously your obligations under this\n+License and any other pertinent obligations, then as a consequence you\n+may not distribute the Library at all.  For example, if a patent\n+license would not permit royalty-free redistribution of the Library by\n+all those who receive copies directly or indirectly through you, then\n+the only way you could satisfy both it and this License would be to\n+refrain entirely from distribution of the Library.\n+\n+If any portion of this section is held invalid or unenforceable under any\n+particular circumstance, the balance of the section is intended to apply,\n+and the section as a whole is intended to apply in other circumstances.\n+\n+It is not the purpose of this section to induce you to infringe any\n+patents or other property right claims or to contest validity of any\n+such claims; this section has the sole purpose of protecting the\n+integrity of the free software distribution system which is\n+implemented by public license practices.  Many people have made\n+generous contributions to the wide range of software distributed\n+through that system in reliance on consistent application of that\n+system; it is up to the author/donor to decide if he or she is willing\n+to distribute software through any other system and a licensee cannot\n+impose that choice.\n+\n+This section is intended to make thoroughly clear what is believed to\n+be a consequence of the rest of this License.\n+\n+  12. If the distribution and/or use of the Library is restricted in\n+certain countries either by patents or by copyrighted interfaces, the\n+original copyright holder who places the Library under this License may add\n+an explicit geographical distribution limitation excluding those countries,\n+so that distribution is permitted only in or among countries not thus\n+excluded.  In such case, this License incorporates the limitation as if\n+written in the body of this License.\n+\n+  13. The Free Software Foundation may publish revised and/or new\n+versions of the Library General Public License from time to time.\n+Such new versions will be similar in spirit to the present version,\n+but may differ in detail to address new problems or concerns.\n+\n+Each version is given a distinguishing version number.  If the Library\n+specifies a version number of this License which applies to it and\n+\"any later version\", you have the option of following the terms and\n+conditions either of that version or of any later version published by\n+the Free Software Foundation.  If the Library does not specify a\n+license version number, you may choose any version ever published by\n+the Free Software Foundation.\n+\f\n+  14. If you wish to incorporate parts of the Library into other free\n+programs whose distribution conditions are incompatible with these,\n+write to the author to ask for permission.  For software which is\n+copyrighted by the Free Software Foundation, write to the Free\n+Software Foundation; we sometimes make exceptions for this.  Our\n+decision will be guided by the two goals of preserving the free status\n+of all derivatives of our free software and of promoting the sharing\n+and reuse of software generally.\n+\n+\t\t\t    NO WARRANTY\n+\n+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\n+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\n+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\n+OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\n+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\n+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\n+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\n+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\n+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\n+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\n+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\n+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\n+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\n+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\n+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\n+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+DAMAGES.\n+\n+\t\t     END OF TERMS AND CONDITIONS\n+\f\n+     Appendix: How to Apply These Terms to Your New Libraries\n+\n+  If you develop a new library, and you want it to be of the greatest\n+possible use to the public, we recommend making it free software that\n+everyone can redistribute and change.  You can do so by permitting\n+redistribution under these terms (or, alternatively, under the terms of the\n+ordinary General Public License).\n+\n+  To apply these terms, attach the following notices to the library.  It is\n+safest to attach them to the start of each source file to most effectively\n+convey the exclusion of warranty; and each file should have at least the\n+\"copyright\" line and a pointer to where the full notice is found.\n+\n+    <one line to give the library's name and a brief idea of what it does.>\n+    Copyright (C) <year>  <name of author>\n+\n+    This library is free software; you can redistribute it and/or\n+    modify it under the terms of the GNU Library General Public\n+    License as published by the Free Software Foundation; either\n+    version 2 of the License, or (at your option) any later version.\n+\n+    This library is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+    Library General Public License for more details.\n+\n+    You should have received a copy of the GNU Library General Public\n+    License along with this library; if not, write to the Free\n+    Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,\n+    MA 02111-1307, USA\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+You should also get your employer (if you work as a programmer) or your\n+school, if any, to sign a \"copyright disclaimer\" for the library, if\n+necessary.  Here is a sample; alter the names:\n+\n+  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n+  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n+\n+  <signature of Ty Coon>, 1 April 1990\n+  Ty Coon, President of Vice\n+\n+That's all there is to it!"}, {"sha": "29483ba26183aaa97276c481174bbb42d2a628a9", "filename": "gcc/ChangeLog", "status": "added", "additions": 10652, "deletions": 0, "changes": 10652, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "2e413b1c25fe337de0b6881fa3d973f16c57dfb7", "filename": "gcc/ChangeLog.0", "status": "added", "additions": 6671, "deletions": 0, "changes": 6671, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.0", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.0", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.0?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "b0f29ab6c0171d26303d951c91514cfd4c28168f", "filename": "gcc/ChangeLog.1", "status": "added", "additions": 9207, "deletions": 0, "changes": 9207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.1?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "ad1669210dfb3fdcbdc4990e792c7454cd3b9d6b", "filename": "gcc/ChangeLog.10", "status": "added", "additions": 10185, "deletions": 0, "changes": 10185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.10?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "a5e092c26a7d0c49e07be13ad32f7df3e762d3bb", "filename": "gcc/ChangeLog.2", "status": "added", "additions": 7229, "deletions": 0, "changes": 7229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.2?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "346311a4267fadf2d7fe44d82a2b2072ea9bfdbd", "filename": "gcc/ChangeLog.3", "status": "added", "additions": 8063, "deletions": 0, "changes": 8063, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.3?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "af668a3be8965fcbe3c32bce9f8dcd19ed01cd5f", "filename": "gcc/ChangeLog.4", "status": "added", "additions": 10783, "deletions": 0, "changes": 10783, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.4?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "c6248db5290e35c1ed1720dec3d5b6b0bf65cc2d", "filename": "gcc/ChangeLog.5", "status": "added", "additions": 8954, "deletions": 0, "changes": 8954, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.5?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "9bd9de01a5fd3e529df2419f0b45ab8189817987", "filename": "gcc/ChangeLog.6", "status": "added", "additions": 8173, "deletions": 0, "changes": 8173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.6?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "784fe4f1bd6d8f2b5a093ca3322df6bdf4bfc532", "filename": "gcc/ChangeLog.7", "status": "added", "additions": 10376, "deletions": 0, "changes": 10376, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.7", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.7", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.7?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "9c9140e30c9b76b4e6728f2aa8607fc00eb07dd4", "filename": "gcc/ChangeLog.8", "status": "added", "additions": 11080, "deletions": 0, "changes": 11080, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.8", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.8", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.8?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "9cd8cdfe1a1449e067da2d53e51296ac10a37417", "filename": "gcc/ChangeLog.9", "status": "added", "additions": 9968, "deletions": 0, "changes": 9968, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.9", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FChangeLog.9", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.9?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "d4ac7c5a2ea53a9772cda1741a531cceed48b5ae", "filename": "gcc/INSTALL", "status": "added", "additions": 1906, "deletions": 0, "changes": 1906, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FINSTALL?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,1906 @@\n+This file documents the installation of the GNU compiler.  Copyright\n+(C) 1988, 1989, 1992, 1994, 1995 Free Software Foundation, Inc.  You\n+may copy, distribute, and modify it freely as long as you preserve this\n+copyright notice and permission notice.\n+\n+Installing GNU CC\n+*****************\n+\n+   Here is the procedure for installing GNU CC on a Unix system.  See\n+*Note VMS Install::, for VMS systems.  In this section we assume you\n+compile in the same directory that contains the source files; see *Note\n+Other Dir::, to find out how to compile in a separate directory on Unix\n+systems.\n+\n+   You cannot install GNU C by itself on MSDOS; it will not compile\n+under any MSDOS compiler except itself.  You need to get the complete\n+compilation package DJGPP, which includes binaries as well as sources,\n+and includes all the necessary compilation tools and libraries.\n+\n+  1. If you have built GNU CC previously in the same directory for a\n+     different target machine, do `make distclean' to delete all files\n+     that might be invalid.  One of the files this deletes is\n+     `Makefile'; if `make distclean' complains that `Makefile' does not\n+     exist, it probably means that the directory is already suitably\n+     clean.\n+\n+  2. On a System V release 4 system, make sure `/usr/bin' precedes\n+     `/usr/ucb' in `PATH'.  The `cc' command in `/usr/ucb' uses\n+     libraries which have bugs.\n+\n+  3. Specify the host, build and target machine configurations.  You do\n+     this by running the file `configure'.\n+\n+     The \"build\" machine is the system which you are using, the \"host\"\n+     machine is the system where you want to run the resulting compiler\n+     (normally the build machine), and the \"target\" machine is the\n+     system for which you want the compiler to generate code.\n+\n+     If you are building a compiler to produce code for the machine it\n+     runs on (a native compiler), you normally do not need to specify\n+     any operands to `configure'; it will try to guess the type of\n+     machine you are on and use that as the build, host and target\n+     machines.  So you don't need to specify a configuration when\n+     building a native compiler unless `configure' cannot figure out\n+     what your configuration is or guesses wrong.\n+\n+     In those cases, specify the build machine's \"configuration name\"\n+     with the `--build' option; the host and target will default to be\n+     the same as the build machine.  (If you are building a\n+     cross-compiler, see *Note Cross-Compiler::.)\n+\n+     Here is an example:\n+\n+          ./configure --build=sparc-sun-sunos4.1\n+\n+     A configuration name may be canonical or it may be more or less\n+     abbreviated.\n+\n+     A canonical configuration name has three parts, separated by\n+     dashes.  It looks like this: `CPU-COMPANY-SYSTEM'.  (The three\n+     parts may themselves contain dashes; `configure' can figure out\n+     which dashes serve which purpose.)  For example,\n+     `m68k-sun-sunos4.1' specifies a Sun 3.\n+\n+     You can also replace parts of the configuration by nicknames or\n+     aliases.  For example, `sun3' stands for `m68k-sun', so\n+     `sun3-sunos4.1' is another way to specify a Sun 3.  You can also\n+     use simply `sun3-sunos', since the version of SunOS is assumed by\n+     default to be version 4.  `sun3-bsd' also works, since `configure'\n+     knows that the only BSD variant on a Sun 3 is SunOS.\n+\n+     You can specify a version number after any of the system types,\n+     and some of the CPU types.  In most cases, the version is\n+     irrelevant, and will be ignored.  So you might as well specify the\n+     version if you know it.\n+\n+     See *Note Configurations::, for a list of supported configuration\n+     names and notes on many of the configurations.  You should check\n+     the notes in that section before proceeding any further with the\n+     installation of GNU CC.\n+\n+     There are four additional options you can specify independently to\n+     describe variant hardware and software configurations.  These are\n+     `--with-gnu-as', `--with-gnu-ld', `--with-stabs' and `--nfp'.\n+\n+    `--with-gnu-as'\n+          If you will use GNU CC with the GNU assembler (GAS), you\n+          should declare this by using the `--with-gnu-as' option when\n+          you run `configure'.\n+\n+          Using this option does not install GAS.  It only modifies the\n+          output of GNU CC to work with GAS.  Building and installing\n+          GAS is up to you.\n+\n+          Conversely, if you *do not* wish to use GAS and do not specify\n+          `--with-gnu-as' when building GNU CC, it is up to you to make\n+          sure that GAS is not installed.  GNU CC searches for a\n+          program named `as' in various directories; if the program it\n+          finds is GAS, then it runs GAS.  If you are not sure where\n+          GNU CC finds the assembler it is using, try specifying `-v'\n+          when you run it.\n+\n+          The systems where it makes a difference whether you use GAS\n+          are\n+          `hppa1.0-ANY-ANY', `hppa1.1-ANY-ANY', `i386-ANY-sysv',\n+          `i386-ANY-isc',\n+          `i860-ANY-bsd', `m68k-bull-sysv', `m68k-hp-hpux',\n+          `m68k-sony-bsd',\n+          `m68k-altos-sysv', `m68000-hp-hpux', `m68000-att-sysv',\n+          `ANY-lynx-lynxos', and `mips-ANY').  On any other system,\n+          `--with-gnu-as' has no effect.\n+\n+          On the systems listed above (except for the HP-PA, for ISC on\n+          the 386, and for `mips-sgi-irix5.*'), if you use GAS, you\n+          should also use the GNU linker (and specify `--with-gnu-ld').\n+\n+    `--with-gnu-ld'\n+          Specify the option `--with-gnu-ld' if you plan to use the GNU\n+          linker with GNU CC.\n+\n+          This option does not cause the GNU linker to be installed; it\n+          just modifies the behavior of GNU CC to work with the GNU\n+          linker.  Specifically, it inhibits the installation of\n+          `collect2', a program which otherwise serves as a front-end\n+          for the system's linker on most configurations.\n+\n+    `--with-stabs'\n+          On MIPS based systems and on Alphas, you must specify whether\n+          you want GNU CC to create the normal ECOFF debugging format,\n+          or to use BSD-style stabs passed through the ECOFF symbol\n+          table.  The normal ECOFF debug format cannot fully handle\n+          languages other than C.  BSD stabs format can handle other\n+          languages, but it only works with the GNU debugger GDB.\n+\n+          Normally, GNU CC uses the ECOFF debugging format by default;\n+          if you prefer BSD stabs, specify `--with-stabs' when you\n+          configure GNU CC.\n+\n+          No matter which default you choose when you configure GNU CC,\n+          the user can use the `-gcoff' and `-gstabs+' options to\n+          specify explicitly the debug format for a particular\n+          compilation.\n+\n+          `--with-stabs' is meaningful on the ISC system on the 386,\n+          also, if `--with-gas' is used.  It selects use of stabs\n+          debugging information embedded in COFF output.  This kind of\n+          debugging information supports C++ well; ordinary COFF\n+          debugging information does not.\n+\n+          `--with-stabs' is also meaningful on 386 systems running\n+          SVR4.  It selects use of stabs debugging information embedded\n+          in ELF output.  The C++ compiler currently (2.6.0) does not\n+          support the DWARF debugging information normally used on 386\n+          SVR4 platforms; stabs provide a workable alternative.  This\n+          requires gas and gdb, as the normal SVR4 tools can not\n+          generate or interpret stabs.\n+\n+    `--nfp'\n+          On certain systems, you must specify whether the machine has\n+          a floating point unit.  These systems include\n+          `m68k-sun-sunosN' and `m68k-isi-bsd'.  On any other system,\n+          `--nfp' currently has no effect, though perhaps there are\n+          other systems where it could usefully make a difference.\n+\n+     The `configure' script searches subdirectories of the source\n+     directory for other compilers that are to be integrated into GNU\n+     CC.  The GNU compiler for C++, called G++ is in a subdirectory\n+     named `cp'.  `configure' inserts rules into `Makefile' to build\n+     all of those compilers.\n+\n+     Here we spell out what files will be set up by `configure'.\n+     Normally you need not be concerned with these files.\n+\n+        * A file named `config.h' is created that contains a `#include'\n+          of the top-level config file for the machine you will run the\n+          compiler on (*note The Configuration File:\n+          (gcc.info)Config.).  This file is responsible for defining\n+          information about the host machine.  It includes `tm.h'.\n+\n+          The top-level config file is located in the subdirectory\n+          `config'.  Its name is always `xm-SOMETHING.h'; usually\n+          `xm-MACHINE.h', but there are some exceptions.\n+\n+          If your system does not support symbolic links, you might\n+          want to set up `config.h' to contain a `#include' command\n+          which refers to the appropriate file.\n+\n+        * A file named `tconfig.h' is created which includes the\n+          top-level config file for your target machine.  This is used\n+          for compiling certain programs to run on that machine.\n+\n+        * A file named `tm.h' is created which includes the\n+          machine-description macro file for your target machine.  It\n+          should be in the subdirectory `config' and its name is often\n+          `MACHINE.h'.\n+\n+        * The command file `configure' also constructs the file\n+          `Makefile' by adding some text to the template file\n+          `Makefile.in'.  The additional text comes from files in the\n+          `config' directory, named `t-TARGET' and `x-HOST'.  If these\n+          files do not exist, it means nothing needs to be added for a\n+          given target or host.\n+\n+  4. The standard directory for installing GNU CC is `/usr/local/lib'.\n+     If you want to install its files somewhere else, specify\n+     `--prefix=DIR' when you run `configure'.  Here DIR is a directory\n+     name to use instead of `/usr/local' for all purposes with one\n+     exception: the directory `/usr/local/include' is searched for\n+     header files no matter where you install the compiler.  To override\n+     this name, use the `--local-prefix' option below.\n+\n+  5. Specify `--local-prefix=DIR' if you want the compiler to search\n+     directory `DIR/include' for locally installed header files\n+     *instead* of `/usr/local/include'.\n+\n+     You should specify `--local-prefix' *only* if your site has a\n+     different convention (not `/usr/local') for where to put\n+     site-specific files.\n+\n+     *Do not* specify `/usr' as the `--local-prefix'!  The directory\n+     you use for `--local-prefix' *must not* contain any of the\n+     system's standard header files.  If it did contain them, certain\n+     programs would be miscompiled (including GNU Emacs, on certain\n+     targets), because this would override and nullify the header file\n+     corrections made by the `fixincludes' script.\n+\n+  6. Make sure the Bison parser generator is installed.  (This is\n+     unnecessary if the Bison output files `c-parse.c' and `cexp.c' are\n+     more recent than `c-parse.y' and `cexp.y' and you do not plan to\n+     change the `.y' files.)\n+\n+     Bison versions older than Sept 8, 1988 will produce incorrect\n+     output for `c-parse.c'.\n+\n+  7. If you have chosen a configuration for GNU CC which requires other\n+     GNU tools (such as GAS or the GNU linker) instead of the standard\n+     system tools, install the required tools in the build directory\n+     under the names `as', `ld' or whatever is appropriate.  This will\n+     enable the compiler to find the proper tools for compilation of\n+     the program `enquire'.\n+\n+     Alternatively, you can do subsequent compilation using a value of\n+     the `PATH' environment variable such that the necessary GNU tools\n+     come before the standard system tools.\n+\n+  8. Build the compiler.  Just type `make LANGUAGES=c' in the compiler\n+     directory.\n+\n+     `LANGUAGES=c' specifies that only the C compiler should be\n+     compiled.  The makefile normally builds compilers for all the\n+     supported languages; currently, C, C++ and Objective C.  However,\n+     C is the only language that is sure to work when you build with\n+     other non-GNU C compilers.  In addition, building anything but C\n+     at this stage is a waste of time.\n+\n+     In general, you can specify the languages to build by typing the\n+     argument `LANGUAGES=\"LIST\"', where LIST is one or more words from\n+     the list `c', `c++', and `objective-c'.  If you have any\n+     additional GNU compilers as subdirectories of the GNU CC source\n+     directory, you may also specify their names in this list.\n+\n+     Ignore any warnings you may see about \"statement not reached\" in\n+     `insn-emit.c'; they are normal.  Also, warnings about \"unknown\n+     escape sequence\" are normal in `genopinit.c' and perhaps some\n+     other files.  Likewise, you should ignore warnings about \"constant\n+     is so large that it is unsigned\" in `insn-emit.c' and\n+     `insn-recog.c' and a warning about a comparison always being zero\n+     in `enquire.o'.  Any other compilation errors may represent bugs in\n+     the port to your machine or operating system, and should be\n+     investigated and reported.\n+\n+     Some commercial compilers fail to compile GNU CC because they have\n+     bugs or limitations.  For example, the Microsoft compiler is said\n+     to run out of macro space.  Some Ultrix compilers run out of\n+     expression space; then you need to break up the statement where\n+     the problem happens.\n+\n+  9. If you are building a cross-compiler, stop here.  *Note\n+     Cross-Compiler::.\n+\n+ 10. Move the first-stage object files and executables into a\n+     subdirectory with this command:\n+\n+          make stage1\n+\n+     The files are moved into a subdirectory named `stage1'.  Once\n+     installation is complete, you may wish to delete these files with\n+     `rm -r stage1'.\n+\n+ 11. If you have chosen a configuration for GNU CC which requires other\n+     GNU tools (such as GAS or the GNU linker) instead of the standard\n+     system tools, install the required tools in the `stage1'\n+     subdirectory under the names `as', `ld' or whatever is\n+     appropriate.  This will enable the stage 1 compiler to find the\n+     proper tools in the following stage.\n+\n+     Alternatively, you can do subsequent compilation using a value of\n+     the `PATH' environment variable such that the necessary GNU tools\n+     come before the standard system tools.\n+\n+ 12. Recompile the compiler with itself, with this command:\n+\n+          make CC=\"stage1/xgcc -Bstage1/\" CFLAGS=\"-g -O2\"\n+\n+     This is called making the stage 2 compiler.\n+\n+     The command shown above builds compilers for all the supported\n+     languages.  If you don't want them all, you can specify the\n+     languages to build by typing the argument `LANGUAGES=\"LIST\"'.  LIST\n+     should contain one or more words from the list `c', `c++',\n+     `objective-c', and `proto'.  Separate the words with spaces.\n+     `proto' stands for the programs `protoize' and `unprotoize'; they\n+     are not a separate language, but you use `LANGUAGES' to enable or\n+     disable their installation.\n+\n+     If you are going to build the stage 3 compiler, then you might\n+     want to build only the C language in stage 2.\n+\n+     Once you have built the stage 2 compiler, if you are short of disk\n+     space, you can delete the subdirectory `stage1'.\n+\n+     On a 68000 or 68020 system lacking floating point hardware, unless\n+     you have selected a `tm.h' file that expects by default that there\n+     is no such hardware, do this instead:\n+\n+          make CC=\"stage1/xgcc -Bstage1/\" CFLAGS=\"-g -O2 -msoft-float\"\n+\n+ 13. If you wish to test the compiler by compiling it with itself one\n+     more time, install any other necessary GNU tools (such as GAS or\n+     the GNU linker) in the `stage2' subdirectory as you did in the\n+     `stage1' subdirectory, then do this:\n+\n+          make stage2\n+          make CC=\"stage2/xgcc -Bstage2/\" CFLAGS=\"-g -O2\"\n+\n+     This is called making the stage 3 compiler.  Aside from the `-B'\n+     option, the compiler options should be the same as when you made\n+     the stage 2 compiler.  But the `LANGUAGES' option need not be the\n+     same.  The command shown above builds compilers for all the\n+     supported languages; if you don't want them all, you can specify\n+     the languages to build by typing the argument `LANGUAGES=\"LIST\"',\n+     as described above.\n+\n+     If you do not have to install any additional GNU tools, you may\n+     use the command\n+\n+          make bootstrap LANGUAGES=LANGUAGE-LIST BOOT_CFLAGS=OPTION-LIST\n+\n+     instead of making `stage1', `stage2', and performing the two\n+     compiler builds.\n+\n+ 14. Then compare the latest object files with the stage 2 object\n+     files--they ought to be identical, aside from time stamps (if any).\n+\n+     On some systems, meaningful comparison of object files is\n+     impossible; they always appear \"different.\"  This is currently\n+     true on Solaris and some systems that use ELF object file format.\n+     On some versions of Irix on SGI machines and DEC Unix (OSF/1) on\n+     Alpha systems, you will not be able to compare the files without\n+     specifying `-save-temps'; see the description of individual\n+     systems above to see if you get comparison failures.  You may have\n+     similar problems on other systems.\n+\n+     Use this command to compare the files:\n+\n+          make compare\n+\n+     This will mention any object files that differ between stage 2 and\n+     stage 3.  Any difference, no matter how innocuous, indicates that\n+     the stage 2 compiler has compiled GNU CC incorrectly, and is\n+     therefore a potentially serious bug which you should investigate\n+     and report.\n+\n+     If your system does not put time stamps in the object files, then\n+     this is a faster way to compare them (using the Bourne shell):\n+\n+          for file in *.o; do\n+          cmp $file stage2/$file\n+          done\n+\n+     If you have built the compiler with the `-mno-mips-tfile' option on\n+     MIPS machines, you will not be able to compare the files.\n+\n+ 15. Install the compiler driver, the compiler's passes and run-time\n+     support with `make install'.  Use the same value for `CC',\n+     `CFLAGS' and `LANGUAGES' that you used when compiling the files\n+     that are being installed.  One reason this is necessary is that\n+     some versions of Make have bugs and recompile files gratuitously\n+     when you do this step.  If you use the same variable values, those\n+     files will be recompiled properly.\n+\n+     For example, if you have built the stage 2 compiler, you can use\n+     the following command:\n+\n+          make install CC=\"stage2/xgcc -Bstage2/\" CFLAGS=\"-g -O\" LANGUAGES=\"LIST\"\n+\n+     This copies the files `cc1', `cpp' and `libgcc.a' to files `cc1',\n+     `cpp' and `libgcc.a' in the directory\n+     `/usr/local/lib/gcc-lib/TARGET/VERSION', which is where the\n+     compiler driver program looks for them.  Here TARGET is the target\n+     machine type specified when you ran `configure', and VERSION is\n+     the version number of GNU CC.  This naming scheme permits various\n+     versions and/or cross-compilers to coexist.\n+\n+     This also copies the driver program `xgcc' into\n+     `/usr/local/bin/gcc', so that it appears in typical execution\n+     search paths.\n+\n+     On some systems, this command causes recompilation of some files.\n+     This is usually due to bugs in `make'.  You should either ignore\n+     this problem, or use GNU Make.\n+\n+     *Warning: there is a bug in `alloca' in the Sun library.  To avoid\n+     this bug, be sure to install the executables of GNU CC that were\n+     compiled by GNU CC.  (That is, the executables from stage 2 or 3,\n+     not stage 1.)  They use `alloca' as a built-in function and never\n+     the one in the library.*\n+\n+     (It is usually better to install GNU CC executables from stage 2\n+     or 3, since they usually run faster than the ones compiled with\n+     some other compiler.)\n+\n+ 16. If you're going to use C++, it's likely that you need to also\n+     install the libg++ distribution.  It should be available from the\n+     same place where you got the GNU C distribution.  Just as GNU C\n+     does not distribute a C runtime library, it also does not include\n+     a C++ run-time library.  All I/O functionality, special class\n+     libraries, etc., are available in the libg++ distribution.\n+\n+Configurations Supported by GNU CC\n+==================================\n+\n+   Here are the possible CPU types:\n+\n+     1750a, a29k, alpha, arm, cN, clipper, dsp16xx, elxsi, h8300,\n+     hppa1.0, hppa1.1, i370, i386, i486, i586, i860, i960, m68000, m68k,\n+     m88k, mips, mipsel, mips64, mips64el, ns32k, powerpc, powerpcle,\n+     pyramid, romp, rs6000, sh, sparc, sparclite, sparc64, vax, we32k.\n+\n+   Here are the recognized company names.  As you can see, customary\n+abbreviations are used rather than the longer official names.\n+\n+     acorn, alliant, altos, apollo, att, bull, cbm, convergent, convex,\n+     crds, dec, dg, dolphin, elxsi, encore, harris, hitachi, hp, ibm,\n+     intergraph, isi, mips, motorola, ncr, next, ns, omron, plexus,\n+     sequent, sgi, sony, sun, tti, unicom, wrs.\n+\n+   The company name is meaningful only to disambiguate when the rest of\n+the information supplied is insufficient.  You can omit it, writing\n+just `CPU-SYSTEM', if it is not needed.  For example, `vax-ultrix4.2'\n+is equivalent to `vax-dec-ultrix4.2'.\n+\n+   Here is a list of system types:\n+\n+     386bsd, aix, acis, amigados, aos, aout, bosx, bsd, clix, coff,\n+     ctix, cxux, dgux, dynix, ebmon, ecoff, elf, esix, freebsd, hms,\n+     genix, gnu, gnu/linux, hiux, hpux, iris, irix, isc, luna, lynxos,\n+     mach, minix, msdos, mvs, netbsd, newsos, nindy, ns, osf, osfrose,\n+     ptx, riscix, riscos, rtu, sco, sim, solaris, sunos, sym, sysv,\n+     udi, ultrix, unicos, uniplus, unos, vms, vsta, vxworks, winnt,\n+     xenix.\n+\n+You can omit the system type; then `configure' guesses the operating\n+system from the CPU and company.\n+\n+   You can add a version number to the system type; this may or may not\n+make a difference.  For example, you can write `bsd4.3' or `bsd4.4' to\n+distinguish versions of BSD.  In practice, the version number is most\n+needed for `sysv3' and `sysv4', which are often treated differently.\n+\n+   If you specify an impossible combination such as `i860-dg-vms', then\n+you may get an error message from `configure', or it may ignore part of\n+the information and do the best it can with the rest.  `configure'\n+always prints the canonical name for the alternative that it used.  GNU\n+CC does not support all possible alternatives.\n+\n+   Often a particular model of machine has a name.  Many machine names\n+are recognized as aliases for CPU/company combinations.  Thus, the\n+machine name `sun3', mentioned above, is an alias for `m68k-sun'.\n+Sometimes we accept a company name as a machine name, when the name is\n+popularly used for a particular machine.  Here is a table of the known\n+machine names:\n+\n+     3300, 3b1, 3bN, 7300, altos3068, altos, apollo68, att-7300,\n+     balance, convex-cN, crds, decstation-3100, decstation, delta,\n+     encore, fx2800, gmicro, hp7NN, hp8NN, hp9k2NN, hp9k3NN, hp9k7NN,\n+     hp9k8NN, iris4d, iris, isi68, m3230, magnum, merlin, miniframe,\n+     mmax, news-3600, news800, news, next, pbd, pc532, pmax, powerpc,\n+     powerpcle, ps2, risc-news, rtpc, sun2, sun386i, sun386, sun3,\n+     sun4, symmetry, tower-32, tower.\n+\n+Remember that a machine name specifies both the cpu type and the company\n+name.  If you want to install your own homemade configuration files,\n+you can use `local' as the company name to access them.  If you use\n+configuration `CPU-local', the configuration name without the cpu prefix\n+is used to form the configuration file names.\n+\n+   Thus, if you specify `m68k-local', configuration uses files\n+`m68k.md', `local.h', `m68k.c', `xm-local.h', `t-local', and `x-local',\n+all in the directory `config/m68k'.\n+\n+   Here is a list of configurations that have special treatment or\n+special things you must know:\n+\n+`1750a-*-*'\n+     MIL-STD-1750A processors.\n+\n+     Starting with GCC 2.6.1, the MIL-STD-1750A cross configuration no\n+     longer supports the Tektronix Assembler, but instead produces\n+     output for `as1750', an assembler/linker available under the GNU\n+     Public License for the 1750A. Contact *kellogg@space.otn.dasa.de*\n+     for more details on obtaining `as1750'.  A similarly licensed\n+     simulator for the 1750A is available from same address.\n+\n+     You should ignore a fatal error during the building of libgcc\n+     (libgcc is not yet implemented for the 1750A.)\n+\n+     The `as1750' assembler requires the file `ms1750.inc', which is\n+     found in the directory `config/1750a'.\n+\n+     GNU CC produced the same sections as the Fairchild F9450 C\n+     Compiler, namely:\n+\n+    `Normal'\n+          The program code section.\n+\n+    `Static'\n+          The read/write (RAM) data section.\n+\n+    `Konst'\n+          The read-only (ROM) constants section.\n+\n+    `Init'\n+          Initialization section (code to copy KREL to SREL).\n+\n+     The smallest addressable unit is 16 bits (BITS_PER_UNIT is 16).\n+     This means that type `char' is represented with a 16-bit word per\n+     character.  The 1750A's \"Load/Store Upper/Lower Byte\" instructions\n+     are not used by GNU CC.\n+\n+`alpha-*-osf1'\n+     Systems using processors that implement the DEC Alpha architecture\n+     and are running the DEC Unix (OSF/1) operating system, for example\n+     the DEC Alpha AXP systems.  (VMS on the Alpha is not currently\n+     supported by GNU CC.)\n+\n+     GNU CC writes a `.verstamp' directive to the assembler output file\n+     unless it is built as a cross-compiler.  It gets the version to\n+     use from the system header file `/usr/include/stamp.h'.  If you\n+     install a new version of DEC Unix, you should rebuild GCC to pick\n+     up the new version stamp.\n+\n+     Note that since the Alpha is a 64-bit architecture,\n+     cross-compilers from 32-bit machines will not generate code as\n+     efficient as that generated when the compiler is running on a\n+     64-bit machine because many optimizations that depend on being\n+     able to represent a word on the target in an integral value on the\n+     host cannot be performed.  Building cross-compilers on the Alpha\n+     for 32-bit machines has only been tested in a few cases and may\n+     not work properly.\n+\n+     `make compare' may fail on old versions of DEC Unix unless you add\n+     `-save-temps' to `CFLAGS'.  On these systems, the name of the\n+     assembler input file is stored in the object file, and that makes\n+     comparison fail if it differs between the `stage1' and `stage2'\n+     compilations.  The option `-save-temps' forces a fixed name to be\n+     used for the assembler input file, instead of a randomly chosen\n+     name in `/tmp'.  Do not add `-save-temps' unless the comparisons\n+     fail without that option.  If you add `-save-temps', you will have\n+     to manually delete the `.i' and `.s' files after each series of\n+     compilations.\n+\n+     GNU CC now supports both the native (ECOFF) debugging format used\n+     by DBX and GDB and an encapsulated STABS format for use only with\n+     GDB.  See the discussion of the `--with-stabs' option of\n+     `configure' above for more information on these formats and how to\n+     select them.\n+\n+     There is a bug in DEC's assembler that produces incorrect line\n+     numbers for ECOFF format when the `.align' directive is used.  To\n+     work around this problem, GNU CC will not emit such alignment\n+     directives while writing ECOFF format debugging information even\n+     if optimization is being performed.  Unfortunately, this has the\n+     very undesirable side-effect that code addresses when `-O' is\n+     specified are different depending on whether or not `-g' is also\n+     specified.\n+\n+     To avoid this behavior, specify `-gstabs+' and use GDB instead of\n+     DBX.  DEC is now aware of this problem with the assembler and\n+     hopes to provide a fix shortly.\n+\n+`arm'\n+     Advanced RISC Machines ARM-family processors.  These are often\n+     used in embedded applications.  There are no standard Unix\n+     configurations.  This configuration corresponds to the basic\n+     instruction sequences and will produce a.out format object modules.\n+\n+     You may need to make a variant of the file `arm.h' for your\n+     particular configuration.\n+\n+`arm-*-riscix'\n+     The ARM2 or ARM3 processor running RISC iX, Acorn's port of BSD\n+     Unix.  If you are running a version of RISC iX prior to 1.2 then\n+     you must specify the version number during configuration.  Note\n+     that the assembler shipped with RISC iX does not support stabs\n+     debugging information; a new version of the assembler, with stabs\n+     support included, is now available from Acorn.\n+\n+`a29k'\n+     AMD Am29k-family processors.  These are normally used in embedded\n+     applications.  There are no standard Unix configurations.  This\n+     configuration corresponds to AMD's standard calling sequence and\n+     binary interface and is compatible with other 29k tools.\n+\n+     You may need to make a variant of the file `a29k.h' for your\n+     particular configuration.\n+\n+`a29k-*-bsd'\n+     AMD Am29050 used in a system running a variant of BSD Unix.\n+\n+`decstation-*'\n+     DECstations can support three different personalities: Ultrix, DEC\n+     OSF/1, and OSF/rose.  To configure GCC for these platforms use the\n+     following configurations:\n+\n+    `decstation-ultrix'\n+          Ultrix configuration.\n+\n+    `decstation-osf1'\n+          Dec's version of OSF/1.\n+\n+    `decstation-osfrose'\n+          Open Software Foundation reference port of OSF/1 which uses\n+          the OSF/rose object file format instead of ECOFF.  Normally,\n+          you would not select this configuration.\n+\n+     The MIPS C compiler needs to be told to increase its table size\n+     for switch statements with the `-Wf,-XNg1500' option in order to\n+     compile `cp/parse.c'.  If you use the `-O2' optimization option,\n+     you also need to use `-Olimit 3000'.  Both of these options are\n+     automatically generated in the `Makefile' that the shell script\n+     `configure' builds.  If you override the `CC' make variable and\n+     use the MIPS compilers, you may need to add `-Wf,-XNg1500 -Olimit\n+     3000'.\n+\n+`elxsi-elxsi-bsd'\n+     The Elxsi's C compiler has known limitations that prevent it from\n+     compiling GNU C.  Please contact `mrs@cygnus.com' for more details.\n+\n+`dsp16xx'\n+     A port to the AT&T DSP1610 family of processors.\n+\n+`h8300-*-*'\n+     The calling convention and structure layout has changed in release\n+     2.6.  All code must be recompiled.  The calling convention now\n+     passes the first three arguments in function calls in registers.\n+     Structures are no longer a multiple of 2 bytes.\n+\n+`hppa*-*-*'\n+     There are two variants of this CPU, called 1.0 and 1.1, which have\n+     different machine descriptions.  You must use the right one for\n+     your machine.  All 7NN machines and 8N7 machines use 1.1, while\n+     all other 8NN machines use 1.0.\n+\n+     The easiest way to handle this problem is to use `configure hpNNN'\n+     or `configure hpNNN-hpux', where NNN is the model number of the\n+     machine.  Then `configure' will figure out if the machine is a 1.0\n+     or 1.1.  Use `uname -a' to find out the model number of your\n+     machine.\n+\n+     `-g' does not work on HP-UX, since that system uses a peculiar\n+     debugging format which GNU CC does not know about.  However, `-g'\n+     will work if you also use GAS and GDB in conjunction with GCC.  We\n+     highly recommend using GAS for all HP-PA configurations.\n+\n+     You should be using GAS-2.3 (or later) along with GDB-4.12 (or\n+     later).  These can be retrieved from all the traditional GNU ftp\n+     archive sites.\n+\n+     Build GAS and install the resulting binary as:\n+\n+          /usr/local/lib/gcc-lib/CONFIGURATION/GCCVERSION/as\n+\n+     where CONFIGURATION is the configuration name (perhaps\n+     `hpNNN-hpux') and GCCVERSION is the GNU CC version number.  Do\n+     this *before* starting the build process, otherwise you will get\n+     errors from the HPUX assembler while building `libgcc2.a'.  The\n+     command\n+\n+          make install-dir\n+\n+     will create the necessary directory hierarchy so you can install\n+     GAS before building GCC.\n+\n+     To enable debugging, configure GNU CC with the `--with-gnu-as'\n+     option before building.\n+\n+     It has been reported that GNU CC produces invalid assembly code for\n+     1.1 machines running HP-UX 8.02 when using the HP assembler.\n+     Typically the errors look like this:\n+          as: bug.s @line#15 [err#1060]\n+            Argument 0 or 2 in FARG upper\n+                   - lookahead = ARGW1=FR,RTNVAL=GR\n+          as: foo.s @line#28 [err#1060]\n+            Argument 0 or 2 in FARG upper\n+                   - lookahead = ARGW1=FR\n+\n+     You can check the version of HP-UX you are running by executing\n+     the command `uname -r'.   If you are indeed running HP-UX 8.02 on\n+     a PA and using the HP assembler then configure GCC with\n+     \"hpNNN-hpux8.02\".\n+\n+`i370-*-*'\n+     This port is very preliminary and has many known bugs.  We hope to\n+     have a higher-quality port for this machine soon.\n+\n+`i386-*-linuxoldld'\n+     Use this configuration to generate a.out binaries on Linux if you\n+     do not have gas/binutils version 2.5.2 or later installed. This is\n+     an obsolete configuration.\n+\n+`i386-*-linuxaout'\n+     Use this configuration to generate a.out binaries on Linux. This\n+     configuration is being superseded. You must use gas/binutils\n+     version 2.5.2 or later.\n+\n+`i386-*-linux'\n+     Use this configuration to generate ELF binaries on Linux.  You must\n+     use gas/binutils version 2.5.2 or later.\n+\n+`i386-*-sco'\n+     Compilation with RCC is recommended.  Also, it may be a good idea\n+     to link with GNU malloc instead of the malloc that comes with the\n+     system.\n+\n+`i386-*-sco3.2v4'\n+     Use this configuration for SCO release 3.2 version 4.\n+\n+`i386-*-isc'\n+     It may be a good idea to link with GNU malloc instead of the\n+     malloc that comes with the system.\n+\n+     In ISC version 4.1, `sed' core dumps when building `deduced.h'.\n+     Use the version of `sed' from version 4.0.\n+\n+`i386-*-esix'\n+     It may be good idea to link with GNU malloc instead of the malloc\n+     that comes with the system.\n+\n+`i386-ibm-aix'\n+     You need to use GAS version 2.1 or later, and and LD from GNU\n+     binutils version 2.2 or later.\n+\n+`i386-sequent-bsd'\n+     Go to the Berkeley universe before compiling.  In addition, you\n+     probably need to create a file named `string.h' containing just\n+     one line: `#include <strings.h>'.\n+\n+`i386-sequent-ptx1*'\n+     Sequent DYNIX/ptx 1.x.\n+\n+`i386-sequent-ptx2*'\n+     Sequent DYNIX/ptx 2.x.\n+\n+`i386-sun-sunos4'\n+     You may find that you need another version of GNU CC to begin\n+     bootstrapping with, since the current version when built with the\n+     system's own compiler seems to get an infinite loop compiling part\n+     of `libgcc2.c'.  GNU CC version 2 compiled with GNU CC (any\n+     version) seems not to have this problem.\n+\n+     See *Note Sun Install::, for information on installing GNU CC on\n+     Sun systems.\n+\n+`i[345]86-*-winnt3.5'\n+     This version requires a GAS that has not let been released.  Until\n+     it is, you can get a prebuilt binary version via anonymous ftp from\n+     `cs.washington.edu:pub/gnat' or `cs.nyu.edu:pub/gnat'. You must\n+     also use the Microsoft header files from the Windows NT 3.5 SDK.\n+     Find these on the CDROM in the `/mstools/h' directory dated\n+     9/4/94.  You must use a fixed version of Microsoft linker made\n+     especially for NT 3.5, which is also is available on the NT 3.5\n+     SDK CDROM.  If you do not have this linker, can you also use the\n+     linker from Visual C/C++ 1.0 or 2.0.\n+\n+     Installing GNU CC for NT builds a wrapper linker, called `ld.exe',\n+     which mimics the behaviour of Unix `ld' in the specification of\n+     libraries (`-L' and `-l').  `ld.exe' looks for both Unix and\n+     Microsoft named libraries.  For example, if you specify `-lfoo',\n+     `ld.exe' will look first for `libfoo.a' and then for `foo.lib'.\n+\n+     You may install GNU CC for Windows NT in one of two ways,\n+     depending on whether or not you have a Unix-like shell and various\n+     Unix-like utilities.\n+\n+       1. If you do not have a Unix-like shell and few Unix-like\n+          utilities, you will use a DOS style batch script called\n+          `configure.bat'.  Invoke it as `configure winnt' from an\n+          MSDOS console window or from the program manager dialog box.\n+          `configure.bat' assumes you have already installed and have\n+          in your path a Unix-like `sed' program which is used to\n+          create a working `Makefile' from `Makefile.in'.\n+\n+          `Makefile' uses the Microsoft Nmake program maintenance\n+          utility and the Visual C/C++ V8.00 compiler to build GNU CC.\n+          You need only have the utilities `sed' and `touch' to use\n+          this installation method, which only automatically builds the\n+          compiler itself.  You must then examine what `fixinc.winnt'\n+          does, edit the header files by hand and build `libgcc.a'\n+          manually.\n+\n+       2. The second type of installation assumes you are running a\n+          Unix-like shell, have a complete suite of Unix-like utilities\n+          in your path, and have a previous version of GNU CC already\n+          installed, either through building it via the above\n+          installation method or acquiring a pre-built binary.  In this\n+          case, use the `configure' script in the normal fashion.\n+\n+`i860-intel-osf1'\n+     This is the Paragon.  If you have version 1.0 of the operating\n+     system, you need to take special steps to build GNU CC due to\n+     peculiarities of the system.  Newer system versions have no\n+     problem.  See the section `Installation Problems' in the GNU CC\n+     Manual.\n+\n+`*-lynx-lynxos'\n+     LynxOS 2.2 and earlier comes with GNU CC 1.x already installed as\n+     `/bin/gcc'.  You should compile with this instead of `/bin/cc'.\n+     You can tell GNU CC to use the GNU assembler and linker, by\n+     specifying `--with-gnu-as --with-gnu-ld' when configuring.  These\n+     will produce COFF format object files and executables;  otherwise\n+     GNU CC will use the installed tools, which produce a.out format\n+     executables.\n+\n+`m68000-hp-bsd'\n+     HP 9000 series 200 running BSD.  Note that the C compiler that\n+     comes with this system cannot compile GNU CC; contact\n+     `law@cs.utah.edu' to get binaries of GNU CC for bootstrapping.\n+\n+`m68k-altos'\n+     Altos 3068.  You must use the GNU assembler, linker and debugger.\n+     Also, you must fix a kernel bug.  Details in the file\n+     `README.ALTOS'.\n+\n+`m68k-att-sysv'\n+     AT&T 3b1, a.k.a. 7300 PC.  Special procedures are needed to\n+     compile GNU CC with this machine's standard C compiler, due to\n+     bugs in that compiler.  You can bootstrap it more easily with\n+     previous versions of GNU CC if you have them.\n+\n+     Installing GNU CC on the 3b1 is difficult if you do not already\n+     have GNU CC running, due to bugs in the installed C compiler.\n+     However, the following procedure might work.  We are unable to\n+     test it.\n+\n+       1. Comment out the `#include \"config.h\"' line on line 37 of\n+          `cccp.c' and do `make cpp'.  This makes a preliminary version\n+          of GNU cpp.\n+\n+       2. Save the old `/lib/cpp' and copy the preliminary GNU cpp to\n+          that file name.\n+\n+       3. Undo your change in `cccp.c', or reinstall the original\n+          version, and do `make cpp' again.\n+\n+       4. Copy this final version of GNU cpp into `/lib/cpp'.\n+\n+       5. Replace every occurrence of `obstack_free' in the file\n+          `tree.c' with `_obstack_free'.\n+\n+       6. Run `make' to get the first-stage GNU CC.\n+\n+       7. Reinstall the original version of `/lib/cpp'.\n+\n+       8. Now you can compile GNU CC with itself and install it in the\n+          normal fashion.\n+\n+`m68k-bull-sysv'\n+     Bull DPX/2 series 200 and 300 with BOS-2.00.45 up to BOS-2.01. GNU\n+     CC works either with native assembler or GNU assembler. You can use\n+     GNU assembler with native coff generation by providing\n+     `--with-gnu-as' to the configure script or use GNU assembler with\n+     dbx-in-coff encapsulation by providing `--with-gnu-as --stabs'.\n+     For any problem with native assembler or for availability of the\n+     DPX/2 port of GAS, contact `F.Pierresteguy@frcl.bull.fr'.\n+\n+`m68k-crds-unox'\n+     Use `configure unos' for building on Unos.\n+\n+     The Unos assembler is named `casm' instead of `as'.  For some\n+     strange reason linking `/bin/as' to `/bin/casm' changes the\n+     behavior, and does not work.  So, when installing GNU CC, you\n+     should install the following script as `as' in the subdirectory\n+     where the passes of GCC are installed:\n+\n+          #!/bin/sh\n+          casm $*\n+\n+     The default Unos library is named `libunos.a' instead of `libc.a'.\n+     To allow GNU CC to function, either change all references to\n+     `-lc' in `gcc.c' to `-lunos' or link `/lib/libc.a' to\n+     `/lib/libunos.a'.\n+\n+     When compiling GNU CC with the standard compiler, to overcome bugs\n+     in the support of `alloca', do not use `-O' when making stage 2.\n+     Then use the stage 2 compiler with `-O' to make the stage 3\n+     compiler.  This compiler will have the same characteristics as the\n+     usual stage 2 compiler on other systems.  Use it to make a stage 4\n+     compiler and compare that with stage 3 to verify proper\n+     compilation.\n+\n+     (Perhaps simply defining `ALLOCA' in `x-crds' as described in the\n+     comments there will make the above paragraph superfluous.  Please\n+     inform us of whether this works.)\n+\n+     Unos uses memory segmentation instead of demand paging, so you\n+     will need a lot of memory.  5 Mb is barely enough if no other\n+     tasks are running.  If linking `cc1' fails, try putting the object\n+     files into a library and linking from that library.\n+\n+`m68k-hp-hpux'\n+     HP 9000 series 300 or 400 running HP-UX.  HP-UX version 8.0 has a\n+     bug in the assembler that prevents compilation of GNU CC.  To fix\n+     it, get patch PHCO_4484 from HP.\n+\n+     In addition, if you wish to use gas `--with-gnu-as' you must use\n+     gas version 2.1 or later, and you must use the GNU linker version\n+     2.1 or later.  Earlier versions of gas relied upon a program which\n+     converted the gas output into the native HP/UX format, but that\n+     program has not been kept up to date.  gdb does not understand\n+     that native HP/UX format, so you must use gas if you wish to use\n+     gdb.\n+\n+`m68k-sun'\n+     Sun 3.  We do not provide a configuration file to use the Sun FPA\n+     by default, because programs that establish signal handlers for\n+     floating point traps inherently cannot work with the FPA.\n+\n+     See *Note Sun Install::, for information on installing GNU CC on\n+     Sun systems.\n+\n+`m88k-*-svr3'\n+     Motorola m88k running the AT&T/Unisoft/Motorola V.3 reference port.\n+     These systems tend to use the Green Hills C, revision 1.8.5, as the\n+     standard C compiler.  There are apparently bugs in this compiler\n+     that result in object files differences between stage 2 and stage\n+     3.  If this happens, make the stage 4 compiler and compare it to\n+     the stage 3 compiler.  If the stage 3 and stage 4 object files are\n+     identical, this suggests you encountered a problem with the\n+     standard C compiler; the stage 3 and 4 compilers may be usable.\n+\n+     It is best, however, to use an older version of GNU CC for\n+     bootstrapping if you have one.\n+\n+`m88k-*-dgux'\n+     Motorola m88k running DG/UX.  To build 88open BCS native or cross\n+     compilers on DG/UX, specify the configuration name as\n+     `m88k-*-dguxbcs' and build in the 88open BCS software development\n+     environment.  To build ELF native or cross compilers on DG/UX,\n+     specify `m88k-*-dgux' and build in the DG/UX ELF development\n+     environment.  You set the software development environment by\n+     issuing `sde-target' command and specifying either `m88kbcs' or\n+     `m88kdguxelf' as the operand.\n+\n+     If you do not specify a configuration name, `configure' guesses the\n+     configuration based on the current software development\n+     environment.\n+\n+`m88k-tektronix-sysv3'\n+     Tektronix XD88 running UTekV 3.2e.  Do not turn on optimization\n+     while building stage1 if you bootstrap with the buggy Green Hills\n+     compiler.  Also, The bundled LAI System V NFS is buggy so if you\n+     build in an NFS mounted directory, start from a fresh reboot, or\n+     avoid NFS all together.  Otherwise you may have trouble getting\n+     clean comparisons between stages.\n+\n+`mips-mips-bsd'\n+     MIPS machines running the MIPS operating system in BSD mode.  It's\n+     possible that some old versions of the system lack the functions\n+     `memcpy', `memcmp', and `memset'.  If your system lacks these, you\n+     must remove or undo the definition of `TARGET_MEM_FUNCTIONS' in\n+     `mips-bsd.h'.\n+\n+     The MIPS C compiler needs to be told to increase its table size\n+     for switch statements with the `-Wf,-XNg1500' option in order to\n+     compile `cp/parse.c'.  If you use the `-O2' optimization option,\n+     you also need to use `-Olimit 3000'.  Both of these options are\n+     automatically generated in the `Makefile' that the shell script\n+     `configure' builds.  If you override the `CC' make variable and\n+     use the MIPS compilers, you may need to add `-Wf,-XNg1500 -Olimit\n+     3000'.\n+\n+`mips-mips-riscos*'\n+     The MIPS C compiler needs to be told to increase its table size\n+     for switch statements with the `-Wf,-XNg1500' option in order to\n+     compile `cp/parse.c'.  If you use the `-O2' optimization option,\n+     you also need to use `-Olimit 3000'.  Both of these options are\n+     automatically generated in the `Makefile' that the shell script\n+     `configure' builds.  If you override the `CC' make variable and\n+     use the MIPS compilers, you may need to add `-Wf,-XNg1500 -Olimit\n+     3000'.\n+\n+     MIPS computers running RISC-OS can support four different\n+     personalities: default, BSD 4.3, System V.3, and System V.4 (older\n+     versions of RISC-OS don't support V.4).  To configure GCC for\n+     these platforms use the following configurations:\n+\n+    `mips-mips-riscos`rev''\n+          Default configuration for RISC-OS, revision `rev'.\n+\n+    `mips-mips-riscos`rev'bsd'\n+          BSD 4.3 configuration for RISC-OS, revision `rev'.\n+\n+    `mips-mips-riscos`rev'sysv4'\n+          System V.4 configuration for RISC-OS, revision `rev'.\n+\n+    `mips-mips-riscos`rev'sysv'\n+          System V.3 configuration for RISC-OS, revision `rev'.\n+\n+     The revision `rev' mentioned above is the revision of RISC-OS to\n+     use.  You must reconfigure GCC when going from a RISC-OS revision\n+     4 to RISC-OS revision 5.  This has the effect of avoiding a linker\n+     bug.\n+\n+`mips-sgi-*'\n+     In order to compile GCC on an SGI running IRIX 4, the \"c.hdr.lib\"\n+     option must be installed from the CD-ROM supplied from Silicon\n+     Graphics.  This is found on the 2nd CD in release 4.0.1.\n+\n+     In order to compile GCC on an SGI running IRIX 5, the\n+     \"compiler_dev.hdr\" subsystem must be installed from the IDO CD-ROM\n+     supplied by Silicon Graphics.\n+\n+     `make compare' may fail on version 5 of IRIX unless you add\n+     `-save-temps' to `CFLAGS'.  On these systems, the name of the\n+     assembler input file is stored in the object file, and that makes\n+     comparison fail if it differs between the `stage1' and `stage2'\n+     compilations.  The option `-save-temps' forces a fixed name to be\n+     used for the assembler input file, instead of a randomly chosen\n+     name in `/tmp'.  Do not add `-save-temps' unless the comparisons\n+     fail without that option.  If you do you `-save-temps', you will\n+     have to manually delete the `.i' and `.s' files after each series\n+     of compilations.\n+\n+     The MIPS C compiler needs to be told to increase its table size\n+     for switch statements with the `-Wf,-XNg1500' option in order to\n+     compile `cp/parse.c'.  If you use the `-O2' optimization option,\n+     you also need to use `-Olimit 3000'.  Both of these options are\n+     automatically generated in the `Makefile' that the shell script\n+     `configure' builds.  If you override the `CC' make variable and\n+     use the MIPS compilers, you may need to add `-Wf,-XNg1500 -Olimit\n+     3000'.\n+\n+     On Irix version 4.0.5F, and perhaps on some other versions as well,\n+     there is an assembler bug that reorders instructions incorrectly.\n+     To work around it, specify the target configuration\n+     `mips-sgi-irix4loser'.  This configuration inhibits assembler\n+     optimization.\n+\n+     In a compiler configured with target `mips-sgi-irix4', you can turn\n+     off assembler optimization by using the `-noasmopt' option.  This\n+     compiler option passes the option `-O0' to the assembler, to\n+     inhibit reordering.\n+\n+     The `-noasmopt' option can be useful for testing whether a problem\n+     is due to erroneous assembler reordering.  Even if a problem does\n+     not go away with `-noasmopt', it may still be due to assembler\n+     reordering--perhaps GNU CC itself was miscompiled as a result.\n+\n+     To enable debugging under Irix 5, you must use GNU as 2.5 or later,\n+     and use the `--with-gnu-as' configure option when configuring gcc.\n+     GNU as is distributed as part of the binutils package.\n+\n+`mips-sony-sysv'\n+     Sony MIPS NEWS.  This works in NEWSOS 5.0.1, but not in 5.0.2\n+     (which uses ELF instead of COFF).  Support for 5.0.2 will probably\n+     be provided soon by volunteers.  In particular, the linker does\n+     not like the code generated by GCC when shared libraries are\n+     linked in.\n+\n+`ns32k-encore'\n+     Encore ns32000 system.  Encore systems are supported only under\n+     BSD.\n+\n+`ns32k-*-genix'\n+     National Semiconductor ns32000 system.  Genix has bugs in `alloca'\n+     and `malloc'; you must get the compiled versions of these from GNU\n+     Emacs.\n+\n+`ns32k-sequent'\n+     Go to the Berkeley universe before compiling.  In addition, you\n+     probably need to create a file named `string.h' containing just\n+     one line: `#include <strings.h>'.\n+\n+`ns32k-utek'\n+     UTEK ns32000 system (\"merlin\").  The C compiler that comes with\n+     this system cannot compile GNU CC; contact `tektronix!reed!mason'\n+     to get binaries of GNU CC for bootstrapping.\n+\n+`romp-*-aos'\n+`romp-*-mach'\n+     The only operating systems supported for the IBM RT PC are AOS and\n+     MACH.  GNU CC does not support AIX running on the RT.  We\n+     recommend you compile GNU CC with an earlier version of itself; if\n+     you compile GNU CC with `hc', the Metaware compiler, it will work,\n+     but you will get mismatches between the stage 2 and stage 3\n+     compilers in various files.  These errors are minor differences in\n+     some floating-point constants and can be safely ignored; the stage\n+     3 compiler is correct.\n+\n+`rs6000-*-aix'\n+`powerpc-*-aix'\n+     Various early versions of each release of the IBM XLC compiler\n+     will not bootstrap GNU CC.  Symptoms include differences between\n+     the stage2 and stage3 object files, and errors when compiling\n+     `libgcc.a' or `enquire'.  Known problematic releases include:\n+     xlc-1.2.1.8, xlc-1.3.0.0 (distributed with AIX 3.2.5), and\n+     xlc-1.3.0.19.  Both xlc-1.2.1.28 and xlc-1.3.0.24 (PTF 432238) are\n+     known to produce working versions of GNU CC, but most other recent\n+     releases correctly bootstrap GNU CC.  Also, releases of AIX prior\n+     to AIX 3.2.4 include a version of the IBM assembler which does not\n+     accept debugging directives: assembler updates are available as\n+     PTFs.  Also, if you are using AIX 3.2.5 or greater and the GNU\n+     assembler, you must have a version modified after October 16th,\n+     1995 in order for the GNU C compiler to build.  See the file\n+     `README.RS6000' for more details on of these problems.\n+\n+     GNU CC does not yet support the 64-bit PowerPC instructions.\n+\n+     Objective C does not work on this architecture because it makes\n+     assumptions that are incompatible with the calling conventions.\n+\n+     AIX on the RS/6000 provides support (NLS) for environments outside\n+     of the United States.  Compilers and assemblers use NLS to support\n+     locale-specific representations of various objects including\n+     floating-point numbers (\".\" vs \",\" for separating decimal\n+     fractions).  There have been problems reported where the library\n+     linked with GNU CC does not produce the same floating-point\n+     formats that the assembler accepts.  If you have this problem, set\n+     the LANG environment variable to \"C\" or \"En_US\".\n+\n+     Due to changes in the way that GNU CC invokes the binder (linker)\n+     for AIX 4.1, you may now receive warnings of duplicate symbols\n+     from the link step that were not reported before.  The assembly\n+     files generated by GNU CC for AIX have always included multiple\n+     symbol definitions for certain global variable and function\n+     declarations in the original program.  The warnings should not\n+     prevent the linker from producing a correct library or runnable\n+     executable.\n+\n+`powerpc-*-elf'\n+`powerpc-*-sysv4'\n+     PowerPC system in big endian mode, running System V.4.\n+\n+     This configuration is currently under development.\n+\n+`powerpc-*-eabiaix'\n+     Embedded PowerPC system in big endian mode with -mcall-aix\n+     selected as the default.  This system is currently under\n+     development.\n+\n+`powerpc-*-eabisim'\n+     Embedded PowerPC system in big endian mode for use in running\n+     under the PSIM simulator.  This system is currently under\n+     development.\n+\n+`powerpc-*-eabi'\n+     Embedded PowerPC system in big endian mode.\n+\n+     This configuration is currently under development.\n+\n+`powerpcle-*-elf'\n+`powerpcle-*-sysv4'\n+     PowerPC system in little endian mode, running System V.4.\n+\n+     This configuration is currently under development.\n+\n+`powerpcle-*-sysv4'\n+     Embedded PowerPC system in little endian mode.\n+\n+     This system is currently under development.\n+\n+`powerpcle-*-eabisim'\n+     Embedded PowerPC system in little endian mode for use in running\n+     under the PSIM simulator.\n+\n+     This system is currently under development.\n+\n+`powerpcle-*-eabi'\n+     Embedded PowerPC system in little endian mode.\n+\n+     This configuration is currently under development.\n+\n+`vax-dec-ultrix'\n+     Don't try compiling with Vax C (`vcc').  It produces incorrect code\n+     in some cases (for example, when `alloca' is used).\n+\n+     Meanwhile, compiling `cp/parse.c' with pcc does not work because of\n+     an internal table size limitation in that compiler.  To avoid this\n+     problem, compile just the GNU C compiler first, and use it to\n+     recompile building all the languages that you want to run.\n+\n+`sparc-sun-*'\n+     See *Note Sun Install::, for information on installing GNU CC on\n+     Sun systems.\n+\n+`vax-dec-vms'\n+     See *Note VMS Install::, for details on how to install GNU CC on\n+     VMS.\n+\n+`we32k-*-*'\n+     These computers are also known as the 3b2, 3b5, 3b20 and other\n+     similar names.  (However, the 3b1 is actually a 68000; see *Note\n+     Configurations::.)\n+\n+     Don't use `-g' when compiling with the system's compiler.  The\n+     system's linker seems to be unable to handle such a large program\n+     with debugging information.\n+\n+     The system's compiler runs out of capacity when compiling `stmt.c'\n+     in GNU CC.  You can work around this by building `cpp' in GNU CC\n+     first, then use that instead of the system's preprocessor with the\n+     system's C compiler to compile `stmt.c'.  Here is how:\n+\n+          mv /lib/cpp /lib/cpp.att\n+          cp cpp /lib/cpp.gnu\n+          echo '/lib/cpp.gnu -traditional ${1+\"$@\"}' > /lib/cpp\n+          chmod +x /lib/cpp\n+\n+     The system's compiler produces bad code for some of the GNU CC\n+     optimization files.  So you must build the stage 2 compiler without\n+     optimization.  Then build a stage 3 compiler with optimization.\n+     That executable should work.  Here are the necessary commands:\n+\n+          make LANGUAGES=c CC=stage1/xgcc CFLAGS=\"-Bstage1/ -g\"\n+          make stage2\n+          make CC=stage2/xgcc CFLAGS=\"-Bstage2/ -g -O\"\n+\n+     You may need to raise the ULIMIT setting to build a C++ compiler,\n+     as the file `cc1plus' is larger than one megabyte.\n+\n+Compilation in a Separate Directory\n+===================================\n+\n+   If you wish to build the object files and executables in a directory\n+other than the one containing the source files, here is what you must\n+do differently:\n+\n+  1. Make sure you have a version of Make that supports the `VPATH'\n+     feature.  (GNU Make supports it, as do Make versions on most BSD\n+     systems.)\n+\n+  2. If you have ever run `configure' in the source directory, you must\n+     undo the configuration.  Do this by running:\n+\n+          make distclean\n+\n+  3. Go to the directory in which you want to build the compiler before\n+     running `configure':\n+\n+          mkdir gcc-sun3\n+          cd gcc-sun3\n+\n+     On systems that do not support symbolic links, this directory must\n+     be on the same file system as the source code directory.\n+\n+  4. Specify where to find `configure' when you run it:\n+\n+          ../gcc/configure ...\n+\n+     This also tells `configure' where to find the compiler sources;\n+     `configure' takes the directory from the file name that was used to\n+     invoke it.  But if you want to be sure, you can specify the source\n+     directory with the `--srcdir' option, like this:\n+\n+          ../gcc/configure --srcdir=../gcc OTHER OPTIONS\n+\n+     The directory you specify with `--srcdir' need not be the same as\n+     the one that `configure' is found in.\n+\n+   Now, you can run `make' in that directory.  You need not repeat the\n+configuration steps shown above, when ordinary source files change.  You\n+must, however, run `configure' again when the configuration files\n+change, if your system does not support symbolic links.\n+\n+Building and Installing a Cross-Compiler\n+========================================\n+\n+   GNU CC can function as a cross-compiler for many machines, but not\n+all.\n+\n+   * Cross-compilers for the Mips as target using the Mips assembler\n+     currently do not work, because the auxiliary programs\n+     `mips-tdump.c' and `mips-tfile.c' can't be compiled on anything\n+     but a Mips.  It does work to cross compile for a Mips if you use\n+     the GNU assembler and linker.\n+\n+   * Cross-compilers between machines with different floating point\n+     formats have not all been made to work.  GNU CC now has a floating\n+     point emulator with which these can work, but each target machine\n+     description needs to be updated to take advantage of it.\n+\n+   * Cross-compilation between machines of different word sizes is\n+     somewhat problematic and sometimes does not work.\n+\n+   Since GNU CC generates assembler code, you probably need a\n+cross-assembler that GNU CC can run, in order to produce object files.\n+If you want to link on other than the target machine, you need a\n+cross-linker as well.  You also need header files and libraries suitable\n+for the target machine that you can install on the host machine.\n+\n+Steps of Cross-Compilation\n+--------------------------\n+\n+   To compile and run a program using a cross-compiler involves several\n+steps:\n+\n+   * Run the cross-compiler on the host machine to produce assembler\n+     files for the target machine.  This requires header files for the\n+     target machine.\n+\n+   * Assemble the files produced by the cross-compiler.  You can do this\n+     either with an assembler on the target machine, or with a\n+     cross-assembler on the host machine.\n+\n+   * Link those files to make an executable.  You can do this either\n+     with a linker on the target machine, or with a cross-linker on the\n+     host machine.  Whichever machine you use, you need libraries and\n+     certain startup files (typically `crt....o') for the target\n+     machine.\n+\n+   It is most convenient to do all of these steps on the same host\n+machine, since then you can do it all with a single invocation of GNU\n+CC.  This requires a suitable cross-assembler and cross-linker.  For\n+some targets, the GNU assembler and linker are available.\n+\n+Configuring a Cross-Compiler\n+----------------------------\n+\n+   To build GNU CC as a cross-compiler, you start out by running\n+`configure'.  Use the `--target=TARGET' to specify the target type.  If\n+`configure' was unable to correctly identify the system you are running\n+on, also specify the `--build=BUILD' option.  For example, here is how\n+to configure for a cross-compiler that produces code for an HP 68030\n+system running BSD on a system that `configure' can correctly identify:\n+\n+     ./configure --target=m68k-hp-bsd4.3\n+\n+Tools and Libraries for a Cross-Compiler\n+----------------------------------------\n+\n+   If you have a cross-assembler and cross-linker available, you should\n+install them now.  Put them in the directory `/usr/local/TARGET/bin'.\n+Here is a table of the tools you should put in this directory:\n+\n+`as'\n+     This should be the cross-assembler.\n+\n+`ld'\n+     This should be the cross-linker.\n+\n+`ar'\n+     This should be the cross-archiver: a program which can manipulate\n+     archive files (linker libraries) in the target machine's format.\n+\n+`ranlib'\n+     This should be a program to construct a symbol table in an archive\n+     file.\n+\n+   The installation of GNU CC will find these programs in that\n+directory, and copy or link them to the proper place to for the\n+cross-compiler to find them when run later.\n+\n+   The easiest way to provide these files is to build the Binutils\n+package and GAS.  Configure them with the same `--host' and `--target'\n+options that you use for configuring GNU CC, then build and install\n+them.  They install their executables automatically into the proper\n+directory.  Alas, they do not support all the targets that GNU CC\n+supports.\n+\n+   If you want to install libraries to use with the cross-compiler,\n+such as a standard C library, put them in the directory\n+`/usr/local/TARGET/lib'; installation of GNU CC copies all all the\n+files in that subdirectory into the proper place for GNU CC to find\n+them and link with them.  Here's an example of copying some libraries\n+from a target machine:\n+\n+     ftp TARGET-MACHINE\n+     lcd /usr/local/TARGET/lib\n+     cd /lib\n+     get libc.a\n+     cd /usr/lib\n+     get libg.a\n+     get libm.a\n+     quit\n+\n+The precise set of libraries you'll need, and their locations on the\n+target machine, vary depending on its operating system.\n+\n+   Many targets require \"start files\" such as `crt0.o' and `crtn.o'\n+which are linked into each executable; these too should be placed in\n+`/usr/local/TARGET/lib'.  There may be several alternatives for\n+`crt0.o', for use with profiling or other compilation options.  Check\n+your target's definition of `STARTFILE_SPEC' to find out what start\n+files it uses.  Here's an example of copying these files from a target\n+machine:\n+\n+     ftp TARGET-MACHINE\n+     lcd /usr/local/TARGET/lib\n+     prompt\n+     cd /lib\n+     mget *crt*.o\n+     cd /usr/lib\n+     mget *crt*.o\n+     quit\n+\n+`libgcc.a' and Cross-Compilers\n+------------------------------\n+\n+   Code compiled by GNU CC uses certain runtime support functions\n+implicitly.  Some of these functions can be compiled successfully with\n+GNU CC itself, but a few cannot be.  These problem functions are in the\n+source file `libgcc1.c'; the library made from them is called\n+`libgcc1.a'.\n+\n+   When you build a native compiler, these functions are compiled with\n+some other compiler-the one that you use for bootstrapping GNU CC.\n+Presumably it knows how to open code these operations, or else knows how\n+to call the run-time emulation facilities that the machine comes with.\n+But this approach doesn't work for building a cross-compiler.  The\n+compiler that you use for building knows about the host system, not the\n+target system.\n+\n+   So, when you build a cross-compiler you have to supply a suitable\n+library `libgcc1.a' that does the job it is expected to do.\n+\n+   To compile `libgcc1.c' with the cross-compiler itself does not work.\n+The functions in this file are supposed to implement arithmetic\n+operations that GNU CC does not know how to open code for your target\n+machine.  If these functions are compiled with GNU CC itself, they will\n+compile into infinite recursion.\n+\n+   On any given target, most of these functions are not needed.  If GNU\n+CC can open code an arithmetic operation, it will not call these\n+functions to perform the operation.  It is possible that on your target\n+machine, none of these functions is needed.  If so, you can supply an\n+empty library as `libgcc1.a'.\n+\n+   Many targets need library support only for multiplication and\n+division.  If you are linking with a library that contains functions for\n+multiplication and division, you can tell GNU CC to call them directly\n+by defining the macros `MULSI3_LIBCALL', and the like.  These macros\n+need to be defined in the target description macro file.  For some\n+targets, they are defined already.  This may be sufficient to avoid the\n+need for libgcc1.a; if so, you can supply an empty library.\n+\n+   Some targets do not have floating point instructions; they need other\n+functions in `libgcc1.a', which do floating arithmetic.  Recent\n+versions of GNU CC have a file which emulates floating point.  With a\n+certain amount of work, you should be able to construct a floating\n+point emulator that can be used as `libgcc1.a'.  Perhaps future\n+versions will contain code to do this automatically and conveniently.\n+That depends on whether someone wants to implement it.\n+\n+   Some embedded targets come with all the necessary `libgcc1.a'\n+routines written in C or assembler.  These targets build `libgcc1.a'\n+automatically and you do not need to do anything special for them.\n+Other embedded targets do not need any `libgcc1.a' routines since all\n+the necessary operations are supported by the hardware.\n+\n+   If your target system has another C compiler, you can configure GNU\n+CC as a native compiler on that machine, build just `libgcc1.a' with\n+`make libgcc1.a' on that machine, and use the resulting file with the\n+cross-compiler.  To do this, execute the following on the target\n+machine:\n+\n+     cd TARGET-BUILD-DIR\n+     ./configure --host=sparc --target=sun3\n+     make libgcc1.a\n+\n+And then this on the host machine:\n+\n+     ftp TARGET-MACHINE\n+     binary\n+     cd TARGET-BUILD-DIR\n+     get libgcc1.a\n+     quit\n+\n+   Another way to provide the functions you need in `libgcc1.a' is to\n+define the appropriate `perform_...' macros for those functions.  If\n+these definitions do not use the C arithmetic operators that they are\n+meant to implement, you should be able to compile them with the\n+cross-compiler you are building.  (If these definitions already exist\n+for your target file, then you are all set.)\n+\n+   To build `libgcc1.a' using the perform macros, use\n+`LIBGCC1=libgcc1.a OLDCC=./xgcc' when building the compiler.\n+Otherwise, you should place your replacement library under the name\n+`libgcc1.a' in the directory in which you will build the\n+cross-compiler, before you run `make'.\n+\n+Cross-Compilers and Header Files\n+--------------------------------\n+\n+   If you are cross-compiling a standalone program or a program for an\n+embedded system, then you may not need any header files except the few\n+that are part of GNU CC (and those of your program).  However, if you\n+intend to link your program with a standard C library such as `libc.a',\n+then you probably need to compile with the header files that go with\n+the library you use.\n+\n+   The GNU C compiler does not come with these files, because (1) they\n+are system-specific, and (2) they belong in a C library, not in a\n+compiler.\n+\n+   If the GNU C library supports your target machine, then you can get\n+the header files from there (assuming you actually use the GNU library\n+when you link your program).\n+\n+   If your target machine comes with a C compiler, it probably comes\n+with suitable header files also.  If you make these files accessible\n+from the host machine, the cross-compiler can use them also.\n+\n+   Otherwise, you're on your own in finding header files to use when\n+cross-compiling.\n+\n+   When you have found suitable header files, put them in\n+`/usr/local/TARGET/include', before building the cross compiler.  Then\n+installation will run fixincludes properly and install the corrected\n+versions of the header files where the compiler will use them.\n+\n+   Provide the header files before you build the cross-compiler, because\n+the build stage actually runs the cross-compiler to produce parts of\n+`libgcc.a'.  (These are the parts that *can* be compiled with GNU CC.)\n+Some of them need suitable header files.\n+\n+   Here's an example showing how to copy the header files from a target\n+machine.  On the target machine, do this:\n+\n+     (cd /usr/include; tar cf - .) > tarfile\n+\n+   Then, on the host machine, do this:\n+\n+     ftp TARGET-MACHINE\n+     lcd /usr/local/TARGET/include\n+     get tarfile\n+     quit\n+     tar xf tarfile\n+\n+Actually Building the Cross-Compiler\n+------------------------------------\n+\n+   Now you can proceed just as for compiling a single-machine compiler\n+through the step of building stage 1.  If you have not provided some\n+sort of `libgcc1.a', then compilation will give up at the point where\n+it needs that file, printing a suitable error message.  If you do\n+provide `libgcc1.a', then building the compiler will automatically\n+compile and link a test program called `libgcc1-test'; if you get\n+errors in the linking, it means that not all of the necessary routines\n+in `libgcc1.a' are available.\n+\n+   You must provide the header file `float.h'.  One way to do this is\n+to compile `enquire' and run it on your target machine.  The job of\n+`enquire' is to run on the target machine and figure out by experiment\n+the nature of its floating point representation.  `enquire' records its\n+findings in the header file `float.h'.  If you can't produce this file\n+by running `enquire' on the target machine, then you will need to come\n+up with a suitable `float.h' in some other way (or else, avoid using it\n+in your programs).\n+\n+   Do not try to build stage 2 for a cross-compiler.  It doesn't work to\n+rebuild GNU CC as a cross-compiler using the cross-compiler, because\n+that would produce a program that runs on the target machine, not on the\n+host.  For example, if you compile a 386-to-68030 cross-compiler with\n+itself, the result will not be right either for the 386 (because it was\n+compiled into 68030 code) or for the 68030 (because it was configured\n+for a 386 as the host).  If you want to compile GNU CC into 68030 code,\n+whether you compile it on a 68030 or with a cross-compiler on a 386, you\n+must specify a 68030 as the host when you configure it.\n+\n+   To install the cross-compiler, use `make install', as usual.\n+\n+Installing GNU CC on the Sun\n+============================\n+\n+   On Solaris (version 2.1), do not use the linker or other tools in\n+`/usr/ucb' to build GNU CC.  Use `/usr/ccs/bin'.\n+\n+   Make sure the environment variable `FLOAT_OPTION' is not set when\n+you compile `libgcc.a'.  If this option were set to `f68881' when\n+`libgcc.a' is compiled, the resulting code would demand to be linked\n+with a special startup file and would not link properly without special\n+pains.\n+\n+   There is a bug in `alloca' in certain versions of the Sun library.\n+To avoid this bug, install the binaries of GNU CC that were compiled by\n+GNU CC.  They use `alloca' as a built-in function and never the one in\n+the library.\n+\n+   Some versions of the Sun compiler crash when compiling GNU CC.  The\n+problem is a segmentation fault in cpp.  This problem seems to be due to\n+the bulk of data in the environment variables.  You may be able to avoid\n+it by using the following command to compile GNU CC with Sun CC:\n+\n+     make CC=\"TERMCAP=x OBJS=x LIBFUNCS=x STAGESTUFF=x cc\"\n+\n+Installing GNU CC on VMS\n+========================\n+\n+   The VMS version of GNU CC is distributed in a backup saveset\n+containing both source code and precompiled binaries.\n+\n+   To install the `gcc' command so you can use the compiler easily, in\n+the same manner as you use the VMS C compiler, you must install the VMS\n+CLD file for GNU CC as follows:\n+\n+  1. Define the VMS logical names `GNU_CC' and `GNU_CC_INCLUDE' to\n+     point to the directories where the GNU CC executables\n+     (`gcc-cpp.exe', `gcc-cc1.exe', etc.) and the C include files are\n+     kept respectively.  This should be done with the commands:\n+\n+          $ assign /system /translation=concealed -\n+            disk:[gcc.] gnu_cc\n+          $ assign /system /translation=concealed -\n+            disk:[gcc.include.] gnu_cc_include\n+\n+     with the appropriate disk and directory names.  These commands can\n+     be placed in your system startup file so they will be executed\n+     whenever the machine is rebooted.  You may, if you choose, do this\n+     via the `GCC_INSTALL.COM' script in the `[GCC]' directory.\n+\n+  2. Install the `GCC' command with the command line:\n+\n+          $ set command /table=sys$common:[syslib]dcltables -\n+            /output=sys$common:[syslib]dcltables gnu_cc:[000000]gcc\n+          $ install replace sys$common:[syslib]dcltables\n+\n+  3. To install the help file, do the following:\n+\n+          $ library/help sys$library:helplib.hlb gcc.hlp\n+\n+     Now you can invoke the compiler with a command like `gcc /verbose\n+     file.c', which is equivalent to the command `gcc -v -c file.c' in\n+     Unix.\n+\n+   If you wish to use GNU C++ you must first install GNU CC, and then\n+perform the following steps:\n+\n+  1. Define the VMS logical name `GNU_GXX_INCLUDE' to point to the\n+     directory where the preprocessor will search for the C++ header\n+     files.  This can be done with the command:\n+\n+          $ assign /system /translation=concealed -\n+            disk:[gcc.gxx_include.] gnu_gxx_include\n+\n+     with the appropriate disk and directory name.  If you are going to\n+     be using libg++, this is where the libg++ install procedure will\n+     install the libg++ header files.\n+\n+  2. Obtain the file `gcc-cc1plus.exe', and place this in the same\n+     directory that `gcc-cc1.exe' is kept.\n+\n+     The GNU C++ compiler can be invoked with a command like `gcc /plus\n+     /verbose file.cc', which is equivalent to the command `g++ -v -c\n+     file.cc' in Unix.\n+\n+   We try to put corresponding binaries and sources on the VMS\n+distribution tape.  But sometimes the binaries will be from an older\n+version than the sources, because we don't always have time to update\n+them.  (Use the `/version' option to determine the version number of\n+the binaries and compare it with the source file `version.c' to tell\n+whether this is so.)  In this case, you should use the binaries you get\n+to recompile the sources.  If you must recompile, here is how:\n+\n+  1. Execute the command procedure `vmsconfig.com' to set up the files\n+     `tm.h', `config.h', `aux-output.c', and `md.', and to create files\n+     `tconfig.h' and `hconfig.h'.  This procedure also creates several\n+     linker option files used by `make-cc1.com' and a data file used by\n+     `make-l2.com'.\n+\n+          $ @vmsconfig.com\n+\n+  2. Setup the logical names and command tables as defined above.  In\n+     addition, define the VMS logical name `GNU_BISON' to point at the\n+     to the directories where the Bison executable is kept.  This\n+     should be done with the command:\n+\n+          $ assign /system /translation=concealed -\n+            disk:[bison.] gnu_bison\n+\n+     You may, if you choose, use the `INSTALL_BISON.COM' script in the\n+     `[BISON]' directory.\n+\n+  3. Install the `BISON' command with the command line:\n+\n+          $ set command /table=sys$common:[syslib]dcltables -\n+            /output=sys$common:[syslib]dcltables -\n+            gnu_bison:[000000]bison\n+          $ install replace sys$common:[syslib]dcltables\n+\n+  4. Type `@make-gcc' to recompile everything (alternatively, submit\n+     the file `make-gcc.com' to a batch queue).  If you wish to build\n+     the GNU C++ compiler as well as the GNU CC compiler, you must\n+     first edit `make-gcc.com' and follow the instructions that appear\n+     in the comments.\n+\n+  5. In order to use GCC, you need a library of functions which GCC\n+     compiled code will call to perform certain tasks, and these\n+     functions are defined in the file `libgcc2.c'.  To compile this\n+     you should use the command procedure `make-l2.com', which will\n+     generate the library `libgcc2.olb'.  `libgcc2.olb' should be built\n+     using the compiler built from the same distribution that\n+     `libgcc2.c' came from, and `make-gcc.com' will automatically do\n+     all of this for you.\n+\n+     To install the library, use the following commands:\n+\n+          $ library gnu_cc:[000000]gcclib/delete=(new,eprintf)\n+          $ library gnu_cc:[000000]gcclib/delete=L_*\n+          $ library libgcc2/extract=*/output=libgcc2.obj\n+          $ library gnu_cc:[000000]gcclib libgcc2.obj\n+\n+     The first command simply removes old modules that will be replaced\n+     with modules from `libgcc2' under different module names.  The\n+     modules `new' and `eprintf' may not actually be present in your\n+     `gcclib.olb'--if the VMS librarian complains about those modules\n+     not being present, simply ignore the message and continue on with\n+     the next command.  The second command removes the modules that\n+     came from the previous version of the library `libgcc2.c'.\n+\n+     Whenever you update the compiler on your system, you should also\n+     update the library with the above procedure.\n+\n+  6. You may wish to build GCC in such a way that no files are written\n+     to the directory where the source files reside.  An example would\n+     be the when the source files are on a read-only disk.  In these\n+     cases, execute the following DCL commands (substituting your\n+     actual path names):\n+\n+          $ assign dua0:[gcc.build_dir.]/translation=concealed, -\n+                   dua1:[gcc.source_dir.]/translation=concealed  gcc_build\n+          $ set default gcc_build:[000000]\n+\n+     where the directory `dua1:[gcc.source_dir]' contains the source\n+     code, and the directory `dua0:[gcc.build_dir]' is meant to contain\n+     all of the generated object files and executables.  Once you have\n+     done this, you can proceed building GCC as described above.  (Keep\n+     in mind that `gcc_build' is a rooted logical name, and thus the\n+     device names in each element of the search list must be an actual\n+     physical device name rather than another rooted logical name).\n+\n+  7. *If you are building GNU CC with a previous version of GNU CC, you\n+     also should check to see that you have the newest version of the\n+     assembler*.  In particular, GNU CC version 2 treats global constant\n+     variables slightly differently from GNU CC version 1, and GAS\n+     version 1.38.1 does not have the patches required to work with GCC\n+     version 2.  If you use GAS 1.38.1, then `extern const' variables\n+     will not have the read-only bit set, and the linker will generate\n+     warning messages about mismatched psect attributes for these\n+     variables.  These warning messages are merely a nuisance, and can\n+     safely be ignored.\n+\n+     If you are compiling with a version of GNU CC older than 1.33,\n+     specify `/DEFINE=(\"inline=\")' as an option in all the\n+     compilations.  This requires editing all the `gcc' commands in\n+     `make-cc1.com'.  (The older versions had problems supporting\n+     `inline'.)  Once you have a working 1.33 or newer GNU CC, you can\n+     change this file back.\n+\n+  8. If you want to build GNU CC with the VAX C compiler, you will need\n+     to make minor changes in `make-cccp.com' and `make-cc1.com' to\n+     choose alternate definitions of `CC', `CFLAGS', and `LIBS'.  See\n+     comments in those files.  However, you must also have a working\n+     version of the GNU assembler (GNU as, aka GAS) as it is used as\n+     the back-end for GNU CC to produce binary object modules and is\n+     not included in the GNU CC sources.  GAS is also needed to compile\n+     `libgcc2' in order to build `gcclib' (see above); `make-l2.com'\n+     expects to be able to find it operational in\n+     `gnu_cc:[000000]gnu-as.exe'.\n+\n+     To use GNU CC on VMS, you need the VMS driver programs `gcc.exe',\n+     `gcc.com', and `gcc.cld'.  They are distributed with the VMS\n+     binaries (`gcc-vms') rather than the GNU CC sources.  GAS is also\n+     included in `gcc-vms', as is Bison.\n+\n+     Once you have successfully built GNU CC with VAX C, you should use\n+     the resulting compiler to rebuild itself.  Before doing this, be\n+     sure to restore the `CC', `CFLAGS', and `LIBS' definitions in\n+     `make-cccp.com' and `make-cc1.com'.  The second generation\n+     compiler will be able to take advantage of many optimizations that\n+     must be suppressed when building with other compilers.\n+\n+   Under previous versions of GNU CC, the generated code would\n+occasionally give strange results when linked with the sharable\n+`VAXCRTL' library.  Now this should work.\n+\n+   Even with this version, however, GNU CC itself should not be linked\n+with the sharable `VAXCRTL'.  The version of `qsort' in `VAXCRTL' has a\n+bug (known to be present in VMS versions V4.6 through V5.5) which\n+causes the compiler to fail.\n+\n+   The executables are generated by `make-cc1.com' and `make-cccp.com'\n+use the object library version of `VAXCRTL' in order to make use of the\n+`qsort' routine in `gcclib.olb'.  If you wish to link the compiler\n+executables with the shareable image version of `VAXCRTL', you should\n+edit the file `tm.h' (created by `vmsconfig.com') to define the macro\n+`QSORT_WORKAROUND'.\n+\n+   `QSORT_WORKAROUND' is always defined when GNU CC is compiled with\n+VAX C, to avoid a problem in case `gcclib.olb' is not yet available.\n+\n+`collect2'\n+==========\n+\n+   Many target systems do not have support in the assembler and linker\n+for \"constructors\"--initialization functions to be called before the\n+official \"start\" of `main'.  On such systems, GNU CC uses a utility\n+called `collect2' to arrange to call these functions at start time.\n+\n+   The program `collect2' works by linking the program once and looking\n+through the linker output file for symbols with particular names\n+indicating they are constructor functions.  If it finds any, it creates\n+a new temporary `.c' file containing a table of them, compiles it, and\n+links the program a second time including that file.\n+\n+   The actual calls to the constructors are carried out by a subroutine\n+called `__main', which is called (automatically) at the beginning of\n+the body of `main' (provided `main' was compiled with GNU CC).  Calling\n+`__main' is necessary, even when compiling C code, to allow linking C\n+and C++ object code together.  (If you use `-nostdlib', you get an\n+unresolved reference to `__main', since it's defined in the standard\n+GCC library.  Include `-lgcc' at the end of your compiler command line\n+to resolve this reference.)\n+\n+   The program `collect2' is installed as `ld' in the directory where\n+the passes of the compiler are installed.  When `collect2' needs to\n+find the *real* `ld', it tries the following file names:\n+\n+   * `real-ld' in the directories listed in the compiler's search\n+     directories.\n+\n+   * `real-ld' in the directories listed in the environment variable\n+     `PATH'.\n+\n+   * The file specified in the `REAL_LD_FILE_NAME' configuration macro,\n+     if specified.\n+\n+   * `ld' in the compiler's search directories, except that `collect2'\n+     will not execute itself recursively.\n+\n+   * `ld' in `PATH'.\n+\n+   \"The compiler's search directories\" means all the directories where\n+`gcc' searches for passes of the compiler.  This includes directories\n+that you specify with `-B'.\n+\n+   Cross-compilers search a little differently:\n+\n+   * `real-ld' in the compiler's search directories.\n+\n+   * `TARGET-real-ld' in `PATH'.\n+\n+   * The file specified in the `REAL_LD_FILE_NAME' configuration macro,\n+     if specified.\n+\n+   * `ld' in the compiler's search directories.\n+\n+   * `TARGET-ld' in `PATH'.\n+\n+   `collect2' explicitly avoids running `ld' using the file name under\n+which `collect2' itself was invoked.  In fact, it remembers up a list\n+of such names--in case one copy of `collect2' finds another copy (or\n+version) of `collect2' installed as `ld' in a second place in the\n+search path.\n+\n+   `collect2' searches for the utilities `nm' and `strip' using the\n+same algorithm as above for `ld'.\n+\n+Standard Header File Directories\n+================================\n+\n+   `GCC_INCLUDE_DIR' means the same thing for native and cross.  It is\n+where GNU CC stores its private include files, and also where GNU CC\n+stores the fixed include files.  A cross compiled GNU CC runs\n+`fixincludes' on the header files in `$(tooldir)/include'.  (If the\n+cross compilation header files need to be fixed, they must be installed\n+before GNU CC is built.  If the cross compilation header files are\n+already suitable for ANSI C and GNU CC, nothing special need be done).\n+\n+   `GPLUS_INCLUDE_DIR' means the same thing for native and cross.  It\n+is where `g++' looks first for header files.  `libg++' installs only\n+target independent header files in that directory.\n+\n+   `LOCAL_INCLUDE_DIR' is used only for a native compiler.  It is\n+normally `/usr/local/include'.  GNU CC searches this directory so that\n+users can install header files in `/usr/local/include'.\n+\n+   `CROSS_INCLUDE_DIR' is used only for a cross compiler.  GNU CC\n+doesn't install anything there.\n+\n+   `TOOL_INCLUDE_DIR' is used for both native and cross compilers.  It\n+is the place for other packages to install header files that GNU CC will\n+use.  For a cross-compiler, this is the equivalent of `/usr/include'.\n+When you build a cross-compiler, `fixincludes' processes any header\n+files in this directory.\n+"}, {"sha": "6483738327de3786b0f1e782541b6a6fc1880c32", "filename": "gcc/NEWS", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FNEWS?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -3,12 +3,17 @@ Noteworthy changes in GCC version 2.8.0:\n The -specs=file switch allows you to override default specs used in invoking\n programs like cc1, as, etc.\n \n+Options -Wall and -Wimplicit now cause GCC to warn about implicit int\n+in declarations (e.g. `register i;'), since the C Standard committee\n+has decided to disallow this in the next revision of the standard.\n+\n The following new targets are supported:\n \n     Solaris 2.5 running on UltraSPARC's.\n     The sparclet cpu (a.out file format).\n     Solaris 2.51 running on PowerPC's.\n     Linux running on PowerPC's.\n+    Embedded target m32r-elf.\n \n New features for the Hitachi H8/300(H).\n \n@@ -23,6 +28,17 @@ New features for SPARC-based systems:\n     -mtune=xxx\n     -mimpure-text and -mno-impure-text\n \n+New features for all rs6000 and PowerPC systems:\n+\n+    -mcpu=604e\n+    -mcpu=801\n+    -mcpu=823\n+    -mtune=xxx\n+    -mupdate\n+    -mno-update\n+    -mfused-madd\n+    -mno-fused-madd\n+\n New features for PowerPC-based systems running either System V, Linux, Solaris,\n or embedded systems:\n \n@@ -33,10 +49,16 @@ or embedded systems:\n     -mcall-sysv-eabi\n     -mcall-sysv-noeabi\n     -msdata\n+    -msdata=none\n+    -msdata=default\n+    -msdata=sysv\n+    -msdata=eabi\n     -memb\n-    -mtune=xxx\n     -msim\n     -mmvme\n+    wchar_t is now of type long, not unsigned short as per ABI.\n+    -p/-pg support\n+    -mcpu=403 now implies -mstrict-align.\n \n Options -mno-v8 and -mno-sparclite are no longer supported on SPARC\n targets.  Options -mcypress, -mv8, -msupersparc, -msparclite, -mf930,"}, {"sha": "ac183c9d4c69963b6ecfd87b3a34963d564ad8ea", "filename": "gcc/ORDERS", "status": "added", "additions": 4003, "deletions": 0, "changes": 4003, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FORDERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FORDERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FORDERS?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "43ed75d6f9f406f87377340ce3beee2b57b00e5e", "filename": "gcc/README", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,26 @@\n+This directory contains the version 2.7.2 release of the GNU C\n+compiler.  It includes all of the support for compiling C++ and\n+Objective C, including a run-time library for Objective C.\n+\n+The GNU C compiler is free software.  See the file COPYING for copying\n+permission.\n+\n+See the file gcc.texi (together with other files that it includes) for\n+installation and porting information.  The file INSTALL contains a\n+copy of the installation information, as plain ASCII.\n+\n+Installing this package will create various files in subdirectories of\n+/usr/local/lib, which are passes used by the compiler and a library\n+named libgcc.a.  It will also create /usr/local/bin/gcc, which is\n+the user-level command to do a compilation.\n+\n+See the Bugs chapter of the GCC Manual for how to report bugs\n+usefully.  An online readable version of the manual is in the files\n+gcc.info*.\n+\n+The files pself.c and pself1.c are not part of GCC.\n+They are programs that print themselves on standard output.\n+They were written by Dario Dariol and Giovanni Cozzi, and are\n+included for your hacking pleasure.  Likewise pself2.c\n+(Who is the author of that?) and pself3.c (by Vlad Taeerov and Rashit\n+Fakhreyev)."}, {"sha": "06e15bb8af708d6ab812b58b75d79798f2e8e9e9", "filename": "gcc/README-bugs", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FREADME-bugs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FREADME-bugs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME-bugs?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,144 @@\n+The purpose of GCC pretesting is to verify that the new GCC\n+distribution, about to be released, works properly on your system *with\n+no change whatever*, when installed following the precise\n+recommendations that come with the distribution.\n+\n+Here are some guidelines on how to do pretesting so as to make it\n+helpful.  All of them follow from common sense together with the\n+nature of the purpose and the situation.\n+\n+* It is absolutely vital that you mention even the smallest change or\n+departure from the standard sources and installation procedure.\n+\n+Otherwise, you are not testing the same program that I wrote.  Testing\n+a different program is usually of no use whatever.  It can even cause\n+trouble if you fail to tell me that you tested some other program\n+instead of what I know as GCC.  I might think that GCC works, when in\n+fact it has not been properly tried, and might have a glaring fault.\n+\n+* Even changing the compilation options counts as a change in the\n+program.  The GCC sources specify which compilation options to use.\n+Some of them are specified in makefiles, and some in machine-specific\n+configuration files.\n+\n+You have ways to override this--but if you do, then you are not\n+testing what ordinary users will do.  Therefore, when pretesting, it\n+is vital to test with the default compilation options.\n+\n+(It is okay to test with nonstandard options as well as testing with\n+the standard ones.)\n+\n+* The machine and system configuration files of GCC are parts of\n+GCC.  So when you test GCC, you need to do it with the\n+configuration files that come with GCC.\n+\n+If GCC does not come with configuration files for a certain machine,\n+and you test it with configuration files that don't come with GCC,\n+this is effectively changing GCC.  Because the crucial fact about\n+the planned release is that, without changes, it doesn't work on that\n+machine.\n+\n+To make GCC work on that machine, I would need to install new\n+configuration files.  That is not out of the question, since it is\n+safe--it certainly won't break any other machines that already work.\n+But you will have to rush me the legal papers to give the FSF\n+permission to use a large piece of text.\n+\n+* Look for recommendations for your system.\n+\n+You can find these recommendations in the Installation node of the\n+manual, and in the file INSTALL.  (These two files have the same text.)\n+\n+These files say which configuration name to use for your machine, so\n+use the ones that are recommended.  If you guess, you might guess\n+wrong and encounter spurious difficulties.  What's more, if you don't\n+follow the recommendations then you aren't helping to test that its\n+recommendations are valid.\n+\n+These files may describe other things that you need to do to make GCC\n+work on your machine.  If so, you should follow these recommendations\n+also, for the same reason.\n+\n+Also look at the Trouble chapter of the manual for items that\n+pertain to your machine.\n+\n+* Don't delay sending information.\n+\n+When you find a problem, please double check it if you can do so\n+quickly.  But don't spend a long time double-checking.  A good rule is\n+always to tell me about every problem on the same day you encounter\n+it, even if that means you can't find a solution before you report the\n+problem.\n+\n+I'd much rather hear about a problem today and a solution tomorrow\n+than get both of them tomorrow at the same time.\n+\n+* Make each bug report self-contained.\n+\n+If you refer back to another message, whether from you or from someone\n+else, then it will be necessary for anyone who wants to investigate\n+the bug to find the other message.  This may be difficult, it is\n+probably time-consuming.\n+\n+To help me save time, simply copy the relevant parts of any previous\n+messages into your own bug report.\n+\n+In particular, if I ask you for more information because a bug report\n+was incomplete, it is best to send me the *entire* collection of\n+relevant information, all together.  If you send just the additional\n+information, that makes me do extra work.  There is even a risk that\n+I won't remember what question you are sending me the answer to.\n+\n+* Always be precise when talking about changes you have made.  Show\n+things rather than describing them.  Use exact filenames (relative to\n+the main directory of the distribution), not partial ones.  For\n+example, say \"I changed Makefile\" rather than \"I changed the\n+makefile\".  Instead of saying \"I defined the MUMBLE macro\", send a\n+diff that shows your change.\n+\n+* Always use `diff -c' to make diffs.  If you don't include context,\n+it may be hard for me to figure out where you propose to make the\n+changes.  I might have to ignore your patch because I can't tell what\n+it means.\n+\n+* When you write a fix, keep in mind that I can't install a change\n+that would break other systems.\n+\n+People often suggest fixing a problem by changing machine-independent\n+files such as toplev.c to do something special that a particular\n+system needs.  Sometimes it is totally obvious that such changes would\n+break GCC for almost all users.  I can't possibly make a change like\n+that.  All I can do is send it back to you and ask you to find a fix\n+that is safe to install.\n+\n+Sometimes people send fixes that *might* be an improvement in\n+general--but it is hard to be sure of this.  I can install such\n+changes some of the time, but not during pretest, when I am trying to\n+get a new version to work reliably as quickly as possible.\n+\n+The safest changes for me to install are changes to the configuration\n+files for a particular machine.  At least I know those can't create\n+bugs on other machines.\n+\n+* Don't try changing GCC unless it fails to work if you don't change it.\n+\n+* Don't even suggest changes that would only make GCC cleaner.\n+Every change I install could introduce a bug, so I won't install\n+a change unless I see it is necessary.\n+\n+* If you would like to suggest changes for purposes other than fixing\n+serious bugs, don't wait till pretest time.  Instead, send them just\n+after I make a release.  That's the best time for me to install them.\n+\n+* In some cases, if you don't follow these guidelines, your\n+information might still be useful, but I might have to do more work to\n+make use of it.  Unfortunately, I am so far behind in my work that I\n+just can't get the job done unless you help me to do it efficiently.\n+\n+\n+\t\t\t\tThank you\n+\t\t\t\t   rms\n+\f\n+Local Variables:\n+mode: text\n+End:"}, {"sha": "786d4768c68c85ae972f0c9891271582c2fb14a0", "filename": "gcc/SERVICE", "status": "added", "additions": 1460, "deletions": 0, "changes": 1460, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FSERVICE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FSERVICE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FSERVICE?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,1460 @@\n+\t\t\t\t\t\t\t-*- text -*-\n+GNU Service Directory\n+---------------------\n+\n+This is a list of people who have asked to be listed as offering\n+support services for GNU software, including GNU Emacs, for a fee\n+or in some cases at no charge.\n+\n+The information comes from the people who asked to be listed;\n+we do not include any information we know to be false, but we\n+cannot check out any of the information; we are transmitting it to\n+you as it was given to us and do not promise it is correct.\n+Also, this is not an endorsement of the people listed here.\n+We have no opinions and usually no information about the abilities of\n+any specific person.  We provide this list to enable you to contact\n+service providers and decide for yourself whether to hire one.\n+\n+Before FSF will list your name in the GNU Service Directory, we ask\n+that you agree informally to the following terms:\n+\n+1. You will not restrict (except by copyleft) the use or distribution\n+of any software, documentation, or other information you supply anyone\n+in the course of modifying, extending, or supporting GNU software.\n+This includes any information specifically designed to ameliorate the\n+use of GNU software.\n+\n+2. You will not take advantage of contact made through the Service\n+Directory to advertise an unrelated business (e.g., sales of\n+non-GNU-related proprietary information).  You may spontaneously\n+mention your availability for general consulting, but you should not\n+promote a specific unrelated business unless the client asks.\n+\n+Please include some indication of your rates, because otherwise users\n+have nothing to go by.\tPlease put each e-mail address inside \"<>\".\n+Please put nothing else inside \"<>\".  Thanks!\n+\n+For a current copy of this directory, or to have yourself listed, ask:\n+\tgnu@prep.ai.mit.edu\n+\n+** Please keep the entries in this file alphabetical **\n+\u001f\n+Altrasoft\t<info@altrasoft.com>\n+4880 Stevens Creek Blvd., Suite 205\n+San Jose, CA  95129-1034\n++1 408 243 3300\n+http://www.altrasoft.com\n+\n+Altrasoft provides corporate-quality support, development and user\n+documentation for GNU Emacs, XEmacs and InfoDock.  (InfoDock is a turnkey\n+information management and software development toolset built atop emacs,\n+written by one of our associates.)  Emacs distributions for a variety of\n+platforms are also available, as is support for other emacs variants, such as\n+those often found on PCs.\n+\n+Our unique focus on emacs-related work allows us to attract expert talent in\n+this area to keep you on the leading edge of productivity, especially if you\n+do software development work.  We do the porting, patching, coding,\n+integrating, debugging, documenting and testing so that your people spend\n+much more productive time on their mainline tasks.\n+\n+Standard support packages include help on all aspects of the packages\n+supported, including all tools shipped as a standard part of the original\n+package distribution.  In general, we want to give you an unbelievably strong\n+level of support, so where we can, we will also answer questions concerning\n+any add-on Lisp code that is used at your site.  Setup and customization\n+help, bug fixes, and announcements of new releases are, of course, included.\n+\n+Support rates start at $1,500 USD, for single user support for one year.\n+Discounts are available for group contracts.  We also offer Golden Support\n+contracts for those who need the absolute best in mission-critical support;\n+contact us for details.  Hourly development rates and fixed bid work are\n+available.\n+\n+Updated: 1997-05-12\n+\u001f\n+Magnus Alvestad <magnus@itanalyse.no>\n+\n+GNU Emacs, GCC, the Unix tools, Linux, Jolt.\n+\n+Rates: Free, or from $50/hour.\n+\n+Updated:  1997-05-09\n+\u001f\n+AO UrbanSoft <info@usoft.spb.su>\n+St. Petersburg State University Science Campus\n+St. Petersburg, Russia\n+www.usoft.spb.ru\n+\n+AO UrbanSoft packages, markets and supports\n+industry standard free software products,\n+including the Linux operating system and\n+TeX document compiler.\n+The company also provides programming services \n+based on TeX, Tk, Python, HTML, Java, Perl and\n+Intranet. \n+\n+Rates approximately 15 USD per hour.\n+\n+Updated: 1997-05-25\n+\u001f\n+Joseph Arceneaux        \t<jla@ai.mit.edu>\n+PO Box 460633\t\t\thttp://www.samsara.com/~jla\n+San Francisco, CA  94146-0633\n++1 415 648 9988\n++1 415 285 9088\n+\n+Recently led the project making Wells Fargo Bank the first to provide\n+secure customer account access over the Internet.\n+\n+Former FSF staffmember.  Performed X11 implementation of Emacs version\n+19, designed and implemented WYSIWYG Emacs.  Installed and\n+administered FSF network.  Maintainer of GNU indent.  Over 15 years\n+experience with Unix and other systems, from writing ROM monitors to\n+UI design and system administration.\n+\n+I provide installation, porting, debugging and customization or\n+development of GNU and other Unix software.  I also design and\n+implement free software projects and consult on software engineering\n+and systems design.  Handholding and  teaching services are also\n+available as well as things like LAN and compute--infrastructure design.\n+\n+Time and material rates around $150 USD per hour, depending upon the\n+particular job.  I am also very interested in fixed-bid jobs.  For\n+selected non-profit organizations with worthy goals, I work for free.\n+\n+Updated: 1995-10-17\n+\u001f\n+Gerd Aschemann\t\t<Aschemann@Informatik.TH-Darmstadt.de>\n+Osannstr. 49\n+D-64285 Darmstadt\n+Tel.: +49 6151 16 2259\n+http://www.informatik.th-darmstadt.de/~ascheman/\n+\n+- System Administrator (UNIX) at CS Department, TU Darmstadt, Germany\n+- 17 years experience with CS, System administration on different platforms\n+- 10 years with UNIX/Networking/FreeWare/GNU/X11\n+-  8 years organizer of Operating Systems and Distributed Systems courses\n+- Lectures on System and Network Administration\n+- Platforms: Solaris, SunOS, Ultrix, OSF1, HP-UX, Linux, FreeBSD, AIX, SCO\n+- Distributed Platforms and Information Systems (CORBA, WWW, Java, FTP)\n+- Experience with parallel environments (Connection Machine, Meiko, Parsytec)\n+- Consultant\n+\n+Rates are at 130,-- DM (~80 US$) per hour minimum, depending on the job.\n+I am willing to travel for sufficiently large jobs.\n+\n+Updated: 1997-05-07\n+\u001f\n+\n+\t\t\tBasis Technology Corp.\n+\t\t     One Kendall Square, Bldg 200\n+\t\t\t Cambridge, MA 02139\n+\t\t\t\tU.S.A.\n+\n+\t\t\t Tel: +1-617-252-5636\n+\t\t\t Fax: +1-617-252-9150\n+\t\t      E-mail: <info@basistech.com>\n+\t\t    Web: http://www.basistech.com\n+\n+Technical Expertise:\n+  Multilingual software development\n+  Internationalization and localization of software products\n+  International character encodings, including Unicode, ISO-10646,\n+    ISO-2022, ISO-8859-n, JIS, KSC5601, BIG5, GB2312\n+  Translation of technical materials into Japanese, Korean, and Chinese\n+    including HTML, SGML, RTF, MIF, etc.\n+\n+GNU-related Services:\n+  Custom internationalization and localization of GNU software, or\n+    applications developed using GNU tools (GCC, G++, Emacs Lisp, etc.)\n+  Custom multilingual application development based on MULE.\n+\n+GNU Contributions:\n+  Organized 1992, 1993, and 1994 fund-raising seminars and lecture\n+    tours for FSF in Japan.\n+  Negotiated book royalty agreements with Japanese publishers on\n+    behalf of the FSF.\n+  Negotiated hardware contributions from Japanese PC vendors to\n+    the FSF.\n+\n+Contacts:\n+  Carl Hoffman, Steve Cohen, or Karen Watts\n+\n+Updated:  1997-05-07\n+\u001f\n+Laurent Bernardin\n+16, rue Dicks\n+L-6944 Niederanven\n+Luxemburg\n+<bernardin@inf.ethz.ch>\n++41 1 632 7469\n+\n+Support and installation of all GNU software.\n+\n+Expertise: C, C++, Java, Motif, X, Unix administration, network security\n+\n+Rates: ~60 US$ / hour (Flux 2000.-)\n+\n+Updated:  1997-05-07\n+\u001f\n+Paul Black                                      <paulb@triode.apana.org.au>\n+Sydney, Australia\n+\n+     I am available for general consulting on GNU software.  My specific\n+areas of interest are:\n+\t- general C, C++, ADA and APL programming\n+\t- Gnu/unix utilities\n+\t- Troff\n+\t- Real Time Software\n+\t- Linux\n+\t- IP Comms, SMTP, NNTP, HTTP and WWW\n+\t- Simulation\n+\n+I am happy to provide free consulting/services if the work is of the order of\n+a couple of hours. If more time is required, I am happy to negotiate depending\n+on the nature of the work, my indicative rate is $40 per hour.\n+\n+Entered: 1996-07-10\n+\u001f\n+Keith Bostic\n+\n+\tI'm interested in supporting/extending the ex/vi editors,\n+\twhich I wrote.  On-site or by email, rates are based on the\n+\tproject.  <bostic@cs.berkeley.edu>\n+\n+Entered:  1996-07-15\n+\u001f\n+Philip Brown\n+<phil@mitre.org>\n+(703) 893-8967 (prefer email)\n+Northern-VA, D.C. Area\n+Rates: $40/Hr; less for educational or charitable organizations\n+\n+Systems Supported:\n+\t HP9000/7xx running HP/UX 8.07 - 10.X\n+\t IBM RS6000 running AIX 3.2.X\n+\t Also SGI/Indy and Sun/Sparcs\n+\n+Software Supported:\n+\t Most all FSF (Gnu) software\n+\t esp. GCC, Emacs, Binutils, GS, etc...\n+\n+Statement:\n+        I'd be more than happy to assist anyone in my area with acquiring,\n+        installing, and configuring any FSF tools/utilities on any of the\n+        above systems.  I'm also willing to work with other UNIX systems not\n+        listed above. In addition, I'd be happy to share my many years of\n+        experience with anyone having difficulty using or configuring these\n+        tools.  I've been installing and using them for about 5 years now\n+        and I'll swear by their quality and the people/principles that made\n+        them available.\n+\n+\n+\t\t\tPhil Brown\n+\n+Updated:  1997-05-07\n+\u001f\n+James Craig Burley\n+97 Arrowhead Circle\n+Ashland, MA 01721-1987\n+508 881-6087, -4745\n+(Please call only between 0900-1700 Eastern time, and only if you\n+are prepared to hire me -- ask me to help you for free only\n+via email, to which I might or might not respond.)\n+Email: <burley@gnu.ai.mit.edu> --preferred--\n+       <burley@cygnus.com>\n+       <burley@world.std.com>\n+\n+Expertise:\n+    Compiler Internals (author of GNU Fortran, for example)\n+    Operating Systems Internals\n+    Tools/Utilities Development and Maintenance\n+    Microcode Development and Maintenance (primarily VLIW machines)\n+    System Design (computers, operating systems, toolsets, &c)\n+    Debugging (often asked to help debug Other People's Code)\n+    Documentation (authored many books and ran a few doc projects)\n+    Extensive experience with a variety of operating systems, hardware,\n+\tlanguages, and so on\n+\n+Rate: $100/hour -- willing to consider flat-fee arrangements\n+\n+Updated: 1997-05-07\n+\u001f\n+Thomas Bushnell, n/BSG\t<thomas@gnu.ai.mit.edu>\n+Becket House\n+66 Highland Ave. No. 8\n+Somerville, MA  02143\n+(617) 623-0654\n+\n+\n+All GNU software: Installation, customization, answering simple or\n+\t\t  complex questions, bug fixing, extension.\n+\n+Experience:  I have done Unix and GNU programming for several years,\n+\t     I am the primary author of the Hurd (which provides most\n+\t     kernel related facilities for the GNU OS).\n+\n+I am easily available in the Cambridge/Boston area; work via email.\n+I am willing to travel for sufficiently large jobs.\n+\n+Rates: $100/hr, negotiable, less for non-profit organizaions.\n+\n+Updated: 1997-05-07\n+\u001f\n+   C2V\t\t\t\tMichel Delval <mfd@ccv.fr>\n+   82 bd Haussmann\t\tJean-Alain Le Borgne <jalb@ccv.fr>\n+   75008 Paris\n+   France\n+   Tel (33 1) 40.08.07.07\n+   Fax (33 1) 43.87.35.99\n+   Compuserve 100413,1012\n+   http://c2v.com\n+\n+   We offer source or source+binary distribution, installation, training,\n+   maintenance, technical support, consulting, specific development and\n+   followup on the GNU software development environment: Emacs, gcc/g++,\n+   binutils, gas, gdb.\n+\n+   Experience: adapted gcc, gas and binutils to work as cross-development\n+   tools for the Thomson D950 DSP chip: GCC parser and typing system\n+   have been augmented to allow the manipulation of variables located in\n+   separated memory spaces. Porting on new platforms, and professionally\n+   developing software with the GNU tools in the Unix/X11 environment\n+   since they were first available.\n+\n+   Rates: from 2000 FF/day to 150 000 FF/year, 40% discount for\n+   educational institutions, add taxes and expenses.  Ask for list.\n+\n+Updated: 1997-05-09\n+\u001f\n+Bruce Dawson    -    <jbd@codemeta.com>\n+CodeMeta, Inc.\n+Epping, NH  USA\n+800-468-8750\n+\n+Specializing in GNU tools such as guile, CVS, gnats, bash, gawk, fileutils...\n+\n+Services:\n+ \n+ o 800 phone support.\n+\n+ o Modification and development.\n+\n+ o Training.\n+\n+Rate: $75/hour or per quote.\n+\n+http://www.codemeta.com\n+\n+Updated: 1997-05-09\n+\u001f\n+Kevin Cosgrove  \t<kevinc@dOink.COM>\n+\n+\n+\tI can help folks with porting & installation of many GNU\n+\tand X packages on a variety of Unix platforms.\n+\n+\n+\tMy rates depend on the scope of each project but range\n+\tfrom $35 to $90 per hour.\n+\n+Updated:  1997-05-07\n+\u001f\n+Couvares Consulting\n+211 W. Gilman St., Suite 3W\n+Madison, WI 53703 USA\n+Phone: (608) 256-6201\n+EMail: <couvares@family.hampshire.edu>\n+Contact: Peter F. Couvares\n+\n+Type of support: We offer phone/email support, installation, ongoing\n+     administration, training, programming, and specialized consulting for\n+     free software and other UNIX systems.\n+\n+Sample prices: USD75/hour commercial, 40/hour nonprofit, sliding scale\n+for individuals.\n+\n+Updated:  1996-12-04\n+\u001f\n+Stuart Cracraft\t\t<cracraft@ai.mit.edu>\n+25682 Cresta Loma\n+Laguna Niguel, CA, 92677, USA\n+GNUline: 714-308-7900\n+Website: http://www.earthlink.net/~cracraft/index.html\n+Rate: $90/hour\n+Consultation topics:\n+Entire GNU suite - porting, compilation, installation,\n+user-training, administrator-training\n+Method: telephone line support, call-in via modem to your site,\n+work over the Internet, or in-person visit.\n+ \n+Experience: supporting GNU since the mid-1980's, coordinator\n+of GNU Chess (original author), GNU Shogi, GNU Go. Ported GNU Emacs\n+to Solaris (System V Release 4). Expertise in C, Emacs Lisp, Perl,\n+Expect, Oracle, Informix, SunOS, Solaris, NIS, NFS.\n+\n+Customized programming also available.\n+\n+Updated: 1997-05-07\n+\u001f\n+Noel Cragg                      <noel@cyclic.com>\n+6244 Aberdeen Av\n+Goleta CA 93117\n+805-899-4695\n+\n+I'll do installation, debugging, and extension of GNU tools on a\n+contract basis.  CVS and configuration management are my current\n+specialties.  Rate: $75/hour or per-project negotiated fee.\n+\n+Updated: 1997-05-07\n+\u001f\n+Cygnus Solutions\n+<info@cygnus.com>\n+1325 Chesapeake Terrace\n+Sunnyvale, CA 94089 USA\n++1 408 542 9600 voice\n++1 408 542 9699 fax\n+Web Site: http://www.cygnus.com\n+\n+\n+Cygnus Solutions provides supported and maintained versions of gcc, g++, gdb\n+with GUI, GNU linker and GNU macro assembler.  In addition, Cygnus provides\n+these GNU software development tools for well over 100 host-target\n+configurations.  Support includes bug fixes and semi-annual releases of the\n+toolset.  Each release is regression tested and includes substantial\n+improvements and additions to the current release.  Support is available for\n+groups of 5 or 25 on a wide range of standard, special and vintage\n+toolchains for native and embedded applications.  New target processors are\n+being added regularly.  Rates for support for standard products start at $7495.\n+\n+Cygnus Solutions contacts:\n+\n+\tKathy Powers\n+\tph: +1-206-888-6002\n+\tfx: +1-206-888-6145\n+\temail: <kpowers@cygnus.com>\n+\n+\n+   \tErik Westcott\n+   \tph: +1 408 542 9637\n+   \tfx: +1 408 542 9699\n+   \temail:  <westcott@cygnus.com>\n+Updated: 1997-05-23\n+\u001f\n+Marcus G. Daniels              <marcusd@gnu.ai.mit.edu>\n+31060 S. Kaufman Rd.           <marcus@tdb.com>\n+Canby, OR  97013-9520          <marcus@sysc.pdx.edu>\n+(503) 651-2694                 \n+\n+I can customize, extend, port, and repair many types of free software.\n+I maintain the CLISP Common Lisp implementation and contribute to\n+several GNU packages (e.g. Emacs).  Ten years of C and Unix\n+experience.  Consulting rates start at $40 US/hr.\n+\n+Updated: 1997-05-07\n+\u001f\n+Edgar Der-Danieliantz (Danielyan) <edd@acm.org>\n+P.O. Box 10             FAX +374 2 28 50 82\n+Yerevan 375009\n+ARMENIA\n+\n+ Support for GCC, X Window System, WWW, Tcl/Tk, logic programming,\n+ Internet security, TCP/IP.\n+\n+ Experience:\n+    OS's: 4.4BSD, SVR4.2, FreeBSD, SCO, Solaris, UnixWare.\n+    Languages: C, C++, Objective C, Pascal, Tcl/Tk, Perl, Prolog\n+    Platforms: Intel, SPARC, Mac, VAX, NeXT.\n+\n+ Rates: Depending on type of work, approx. $20/hour. Contact for more\n+        information.\n+    Negotiable for individuals and non-profit organizations.\n+    FREE for individuals who can't pay. Your 'Thanks!' just enough! :-)\n+    Payment by international wire transfer or check.\n+\n+Updated:  1997-05-07\n+\u001f\n+Echo Labs                  <echo@iinet.net.au>\n+29 Weld St,                http://www.iinet.net.au/~echo/\n+Nedlands, WA 6009\n+Perth, Australia\n++61 (0) 41 985 9603\n+\n+Echo Labs is a software consultancy that also provides support and\n+development skills.  Specialising in GNU software, particularly Tcl/Tk\n+and Linux. We can deliver systems at a fraction of the cost of those\n+based on more traditional technologies.  Internet/intranet and data\n+communications solutions, for all platforms are undertaken.  GUI\n+front-ends done quickly.\n+\n+While typically involved in engineering and technical area, any\n+GNU/freeware software will be supported.\n+\n+For further details see: http://www.iinet.net.au/~echo/\n+\n+Experience: 12+ years C/Unix, Sun, SCO, Linux, Win/NT.\n+            Systems programming, device drivers, hardware interfacing.\n+            GNU tools/utilities,\n+            Embedded & realtime systems, software, firmware, hardware.\n+            Communications protocols and implementation.\n+\n+Degrees:    BAppSc (CS), Curtin University, Perth\n+\n+Rates:      AUS $50-75/hr neg.\n+\n+Updated:    1997-05-09\n+\u001f\n+Free Software Association of Germany\n+Michaela Merz\n+Heimatring 19\n+6000 Frankfurt/Main 70\n+phone:\t  (+49 69) 6312083)\n+ert  :\t  (+49-172-6987246)\n+email:\t  (info@elara.fsag.de)\n+\n+Supporting all kinds of freeware (i.e. GNU), freeware development, consulting,\n+training, installation.\t Special LINUX support group.\n+\n+RATES:\n+\n+Companies and for profit\n+organizations\t\t   :  100 US$ / hour\n+Private and not-for-profit\n+organizations\t\t   :   40 US$ / hour\n+ert (24h Emergency\n+response team)\t\t   :  300 US$ / hour\n+\n+Entered: 1994-04-14\n+\u001f\n+Noah Friedman             \t<friedman@prep.ai.mit.edu>\n+1111 W. El Camino Real #109-331\n+Sunnyvale, CA 94087\n+(permanent)\n+\n+Author of several Emacs Lisp packages and parts of Emacs, as well as\n+numerous network and unix system utilities.  Co-maintained GNU Texinfo and\n+Autoconf for a couple of years.  Experienced unix systems administrator.\n+FSF employee Feb 1991--Sep 1994.\n+\n+I can perform installation, porting, and enhancement of all GNU software\n+and any other free software, including the Linux kernel; system design and\n+administration for unix-type systems and IP networks; and I am willing to\n+provide handholding for shell programming, Emacs Lisp development, and\n+version control systems such as RCS and CVS.\n+\n+Fees negotiable, averaging $75-$100/hour.  I can work in the California bay\n+area or anywhere accessible on the Internet.  For larger jobs I may be\n+willing to travel.\n+\n+Updated: 1997-05-08\n+\u001f\n+Ronald F. Guilmette\t<rfg@monkeys.com>\n+RG Consulting\n+1751 East Roseville Pkwy. #1828\n+Roseville, CA 95661\n+Tel: +1 916 786 7945\n+FAX: +1 916 786 5311\n+\n+Services:\tDevelopment & porting of GNU software development tools.\n+\n+GNU Contributions:\n+\t\tInvented, designed, and implemented the protoize and\n+\t\tunprotoize tools supplied with GCC2.\n+\n+\t\tDesigned and developed all code to support the generation\n+\t\tof Dwarf symbolic debugging information for System V Release\n+\t\t4 in GCC2.\n+\n+\t\tPerformed original port of GNU compilers to SVr4 system.\n+\n+\t\tFinished port of GNU compilers to Intel i860 RISC\n+\t\tprocessor.\n+\n+Experience:\t13+ years UNIX systems experience, all working on compilers\n+\t\tand related tools.\n+\n+\t\t7+ years working professionally on GCC, G++, and GDB under\n+\t\tcontract to various firms including the Microelectronics\n+\t\tand Computer Technology Corporation (MCC), Data General (DG),\n+\t\tNetwork Computing Devices (NCD), and Intel Corp.\n+\n+Other qualifications:\n+\t\tDeveloper of the RoadTest (tm) C and C++ commercial\n+\t\tcompiler test suites.\n+\n+\t\tFormer vice-chairman of UNIX International Programming\n+\t\tLanguages Special Interest Group (UI/PLSIG).\n+\n+\t\tBachelor's and a Master's degrees, both in Computer Science.\n+\n+Rates:\t\tVariable depending upon contract duration.  Call for quote.\n+\n+Updated: 1997-05-07\n+\u001f\n+Michael P. Deignan\n+Ideamation, Inc.\n+136 Nelson Street\n+Providence, RI 02908\n+(401) 331-3708\n+(401) 272-6449 fax.\n+\n+Rate:\tVaries depending on complexity of task.\n+\tHourly and fixed-rate contracts are available.\n+Programs Supported:\tAll\n+\n+Updated: 1997-05-07\n+\u001f\n+Interactive Information Limited\n+\n+Interactive Information Limited is an Edinburgh-based company that\n+specialises in WWW services and support for using the Internet for\n+marketing.\n+\n+Our staff have many years experience in using, and developing lisp packages\n+within, Emacs, and in using other GNU/Unix tools, particularly under public\n+domain UNIXes.\n+\n+We can provide services throughout the UK, at any level from general\n+consultancy through fetching, installing and customising software to\n+bespoke programming.  Fees would be in the range #300 - #600 per day,\n+depending primarily on the size of the job.\n+\n+You can contact us\n+\tby email: <enquire@interactive.co.uk>\n+\tby phone: 0370 30 40 52 (UK)\n+\t\t  (+44) 370 30 40 52 (International)\n+\tby post: 3, Lauriston Gardens,\n+\t\t Edinburgh EH3 9HH\n+\t\t Scotland\n+\n+Entered: 1997-05-09\n+\u001f\n+Scott D. Kalter\t\t\t<sdk@twinsun.com>\n+2032 Corral Canyon\n+Malibu, CA 90265-9503\n+Home: (310) 456-0254\n+\n+Very familiar with all levels of Elisp programming.  Taught Emacs use\n+and customization in universities and industry.  Extensive\n+troubleshooting and user support experience.  Co-developed an\n+object-oriented extension to Elisp (Eoops) that can be used for\n+projects.  Extensive Elisp level modification for rapid prototyping of\n+designs used in groupware research.  This includes the development of\n+an infrastructure to support multiple, communicating Emacs processes.\n+\n+Prefer e-mail communication to telephone calls.\n+\n+Updated:  1997-05-07\n+\u001f\n+Kaman Sciences Corporation\n+Griffiss Business & Technology Park\n+775 Daedalian Drive\n+Rome, NY 13441-4909\n+(315) 334-4900\n+ \n+CONTACTS: \n+       Dennis Fitzgerald\t<dfitzgerald@rome.kaman.com> \n+       Tom Robbins\t\t<trobbins@rome.kaman.com>\n+ \n+Kaman Sciences has performed a GNU port for a custom RISC processor.\n+We have experience in the definition and description of the machine\n+register transfer language to the GNU tool-set.  This includes rewriting\n+and modification of the necessary description and source files of gcc, gas,\n+and gld and other binutils.  Kaman also has services for installation and\n+setup of GNU tools, (GAWK, GCC, EMACS, etc.) on Sun workstations.\n+  \n+Work is on a \"service contract\" basis and development is charged either\n+hourly or as a fixed price contract.\n+ \n+Consulting rates: $70 to $175 per hour.\n+ \n+Updated:  1997-05-07\n+\u001f\n+Ehud Karni      <kehud@simonwiesel.net.il>\n+\n+I am an UNIX system programmer. My skills include writing in C and scripts.\n+\n+In the GNU domain, I consider myself an expert on Emacs.  I have written several\n+packages in emacs-lisp (.el) including: better Hebrew support, another marking\n+system, emulation for CDC full screen editor (FSE), COBOL mode, mathematical\n+expression computing, and enhancements to vc.el (customization) and to ange-ftp\n+(added Novell and NT operating systems).\n+     I have installed and tested Emacs and my el's on several machines: DG,\n+HP, Alpha (OSF) and PC (DOS).\n+     I installed and worked with several other GNU packages - RCS, Gmake, GCC\n+and more, but I'm not an expert in these packages.\n+\n+I work in Israel and my normal rate is $40 per hour.\n+\n+Entered:  1996-07-15\n+\u001f\n+Joseph R. Kiniry\t\t<kiniry@cs.caltech.edu>\n+Caltech Mailstop 256-80\t\thttp://www.cs.caltech.edu/~kiniry/\n+Pasadena, CA 91125              <jrk@metagenesis.com>\n+Phone: 818-395-4840\n+Fax: 818-792-4257\n+\n+Long-term high-level consultant in a variety of domains.  See\n+http://www.cs.caltech.edu/~kiniry/resume.html for more information on\n+professional and academic background.\n+\n+I provide installation, porting, debugging, customization, design, and\n+development of GNU and other UNIX and non-UNIX software.  I am or have\n+been a certified developer with Microsoft, SunSoft, NeXT, and Amiga.\n+I have a great deal of development and management experience and an\n+extremely broad background which contributes to my excellent system\n+integration capabilities.  I have a special expertise and conduct\n+research in distributed object technologies.\n+\n+Time and material rates for local work vary regionally, but are\n+currently $250 per hour on the west coast.  Other rates apply for\n+long-term jobs (day rates, travel, etc.) and remote work (usually 1/2\n+fee).  I am interested in fixed-bid jobs and will work for lower rates\n+for non-profit organizations and educational institutions.\n+\n+Updated: 1997-05-07\n+\u001f\n+Bradley M. Kuhn\n+<bkuhn@acm.org>\n+http://www.smart.net/~bkuhn\n+\n+I am available for primarily Unix system administration consulting, including\n+but not limited to installation, configuration and integration of GNU tools\n+and other copy-lefted software such as GNU/Linux.\n+\n+I am particularly skilled at end-user hand-holding and assisting in the\n+integration of GNU and other copy-lefted software into new environments that\n+have not used such tools in the past.\n+\n+Please visit my homepage for more information on my background and skills.\n+\n+I am available for both 1099 (preferred) and W2 on-site contracting in the\n+Baltimore, MD metropolitan area, as well as remote consulting via dialup or\n+Internet connection anywhere in the US.\n+\n+My rate is in the $40/hour range, depending on the circumstances.  Rates for\n+non-profit organizations are substantially lower, and possibly free.\n+\n+Updated: 1996-12-31\n+\u001f\n+Fen Labalme                       <fen@comedia.com>\n+CoMedia Consulting           http//www.comedia.com/comedia/\n+40 Carl Street #4                 WE ARE EVERYWHERE\n+San Francisco CA 94117             JUST SAY \"KNOW\"\n+\n+Consulting, installation, customization and training for GNU Emacs,\n+and selected other GNU & network software.  Design & implementation\n+of free software projects, as well as software engineering & system\n+design.  I have been hacking Emacs since '76 when it was TECO and ^R\n+macros (don't ask), and am inter/intra-network, UNIX & Web friendly.\n+\n+Rates:\t$75 hour & up, depending;  flat rate jobs considered.\n+\tLower rates, barter or free for selected non-profits.\n+\n+Updated: 1997-05-07\n+\u001f\n+Greg Lehey\n+LEMIS\n+PO Box 460\n+Echunga SA 5153\n+Australia\n+\n+Phone:\t+61-8-8388-8250\n+Fax:\t+61-8-8388-8250\n+Mobile:\t+61-41-739-7062\n+Mail\t<grog@lemis.com>\n+\n+Services: Supply, porting, installation, consultation on all GNU\n+products.\n+\n+Experience: 20 years OS and compiler experience, ports of most GNU\n+products.  Author of ported software CD-ROM for UNIX System V.4.2,\n+\"Porting UNIX Software\" (O'Reilly), \"Installing and Running FreeBSD\"\n+and \"The Complete FreeBSD\" (both Walnut Creek).\n+\n+Rates: Choice of AUD 120 per hour or hotline rates AUD 2.50 DM per\n+minute.  Outside Australia, $US 100 per hour or $US 2 per minute.\n+Quick questions may be free.  Limited free support available for\n+purchasers of LEMIS CD-ROMs.\n+\n+Updated: 1997-05-09\n+\u001f\n+Rohan Lenard                            <rjl@wr.com.au>\n+32 Holtermann St.\n+Crows Nest, NSW 2065\n+AUSTRALIA\n++61 411250024\n+\n+* The human face behind the bug-g++@prep.ai.mit.edu mailing list - known\n+  in the past as <rjl@iassf.easams.com.au> and <rjl@ot.com.au> - now\n+  known as <rjl@wr.com.au>.\n+\n+* Interested in providing first line support and development.\n+\n+Experience: 10+ years C/Unix, 6+ years C++\n+            Extensive experience with GNU tools, cross-compilers,\n+            embedded/hosted systems, realtime, simulations,\n+            and military software.\n+\n+Degrees:    BSc (CS), BE (Comms), University of Melbourne\n+\n+Rates:      AUS $75+/hr neg.\n+\n+Updated:  1997-05-17\n+\u001f\n+Reuven M. Lerner\t\t<reuven@netvision.net.il>\n+17 Disraeli Street\n+Haifa 34333\n+Israel\n+\n+Phone:     04-824-2265 (within Israel)\n+       +972-4-824-2265 (outside of Israel)\n+\n+Fax:       04-826-1219 (within Israel)\n+       +972-4-826-1219 (outside of Israel)    \n+\n+WWW: http://www.netvision.net.il/php/reuven\n+\n+- System and network administration, especially Linux-based systems\n+  and networks\n+- Administration, training, and programming for Internet nodes and\n+  World-Wide Web sites\n+- Installation, support and training in the use of Linux, Emacs, Perl,\n+  and other free software\n+- Expertise in C, Emacs Lisp, and Perl\n+\n+Consulting rates: $75/hour, less for educational institutions.\n+\n+Updated: 1997-05-07\n+\u001f\n+Richard Levitte             (in TeX: Richard Levitte\n+Levitte Programming                  Levitte Programming\n+Spannvagen 38, I                     Spannv\\\"agen 28, I\n+S-168 35  Bromma                     S-168 35  Bromma\n+Sweden                               Sweden)\n+Tel.nr.:  +46 (8) 26 52 47      (there is an answering machine)\n+Cellular: +46 (10) 222 64 05\n+e-mail:   <levitte@lp.se>\n+\n+What I do:\n+\tPrimarly I work on GNU software for VMS, both VAX and AXP.  I've\n+\tbeen porting GNU Emacs to VMS since spring 1991.  I've \tported a\n+\tbunch of other GNU programs as well.  I maintain GNU vmslib.\n+\tFor further info, see http://www.lp.se/~levitte/prof/resume.html\n+\n+Programs supported:\n+\tTo a varying degree (ranging from extention and porting to\n+\tinstallation and simple questions) at the time of updating this\n+\tentry:\n+\t- GNU vmslib, emacs, autoconf, zip, diffutils, m4, patch, texinfo,\n+\t  C/C++; on both VMS and Unix.\n+\t- Other GNU programs to a small degree; on Unix.\n+\tFor further info, look at http://www.lp.se/products/gnu.html\n+\n+Experience:\n+\tFluent in TeX/LaTeX and many programming languages.\n+\tModified key elements in Emacs (e.g., memory and process management)\n+\tto work transparently on VMS.  I have very good knowledge in the VMS\n+\toperating system.  I'm also knowledged in the a few Unix flavors.\n+\tFor further info, see http://www.lp.se/~levitte/prof/resume.html\n+\n+Your Rate:\n+\t$70-$100/hour (500-800 SEK in sweden), plus expenses.  My rates\n+\tare negotiable, depending on how interesting the project is to me.\n+\n+Updated: 1997-05-08\n+\u001f\n+Lexa Software                           info@lexa.com\n+1590 The Alameda, Suite 102\n+San Jose, CA  95126\n+\n++1 800 278-2040\n++1 408 278-2043  voice\n++1 408 278-2045  fax\n+\n+http://www.lexa.com\n+\n+Lexa Software provides support for GNU C/C++ including the GNU debugger\n+and linker.  Lexa has extensive experience supporting GCC/G++ on SNI\n+and Pyramid as well as all other MIPS ABI platforms.  We offer support\n+to 2, 5, 25 and larger number of users via phone, email, ftp.\n+\n+Updated:  1997-05-01\n+\u001f\n+Gord Matzigkeit                      <gord@gnu.ai.mit.edu>\n+2220 Capitol Hill Crescent           http://www.m-tech.ab.ca/~gord/\n+Calgary, Alberta   T2M 4B9           Voice: (403) 282-1387\n+CANADA                               FAX:   (403) 284-0137\n+\n+I will help install badly-behaved source code packages, and have experience\n+fixing them to conform to GNU standards.  I will gladly help novices and\n+intermediate computer users to understand, install, and use free software,\n+whether or not I have prior experience with that software.  I know my\n+limitations well, and will freely give other contacts if I do not want to\n+solve your problem myself.\n+\n+I have installed and administered free and proprietary systems in home,\n+academic, and business environments.  I have practical experience in most\n+aspects of Unix and network security.  I know how to diagnose a complex\n+existing computer system and incrementally replace it with a superior free\n+system without disrupting service.\n+\n+I have over 2 years of experience with several of the major free OSes:\n+Linux/GNU (Red Hat, Debian, Slackware), NetBSD, FreeBSD, and GNU/Hurd.  I am\n+the maintainer of GNU Libtool and GNU DLD.  Some of my specialties are:\n+Emacs, Automake, Autoconf, SANE, C, Perl, and shell script programming.\n+\n+My rates start at $10 (Canadian dollars) per hour.  When I am not starving, I\n+do not charge worthy non-profit organizations.\n+\n+Updated:  1997-05-08\n+\u001f\n+Andrew McCallum\n+6623 Dalzell Place\n+Pittsburgh, PA  15217\n+Home: (412) 422-0688\n+<mccallum@cs.cmu.edu>\n+http://www.cs.rochester.edu/u/mccallum\n+\n+Services:     Support, enhancements, new development in:\n+\t\tGNU Objective C\n+\t\tGNUstep, both graphical and non-graphical.\n+\t\tGNUstep Base Library: libgnustep-base\n+\t\t(especially Distributed Objects)\n+\t\tInterface between Objective-C and Guile or TCL: libguileobjc.\n+\n+Experience:\t10+ years of UNIX experience.\n+\t\tProgramming for NeXTSTEP since version 0.8, 1988.\n+\t\tMA and PhD in Computer Science.\n+\t\tExtensive work on GNU Objective C Runtime.\n+\t\tAuthor of GNUstep Base Library, including Distributed Objects\n+\t\tFSF Chief Maintainer of the GNUstep Project.\n+\t\tContributor to GCC, Emacs, Guile.\n+\t\tC, Objective-C, Postscript, Scheme, Lisp, ELisp, Linux.\n+\t\tEnglish and Francais.\n+\n+Rates:\t\t$90-$150 / hour, negotiable, depending on many variables.\n+\n+Updated: 1997-05-07\n+\u001f\n+Erik Naggum\t\t<erik@naggum.no>\n+P.O. Box 1570 Vika\thttp://www.naggum.no\n+0118 OSLO\t\tphone: +47 8800 8879\n+NORWAY\t\t\tNIC handle: EN9\n+\n+Background: I have extensive experience with programming under Unix, in C\n+in particular (since 1983), with standards and specifications for Internet\n+protocols (since 1987), International Standards for character sets and\n+encoding schemes (since 1988), ISO\ufffd8879 SGML (since 1990, national head of\n+delegation to ISO/IEC JTC 1/SC 18/WG 8 since 1991), and ANSI X3.226 Common\n+Lisp (since early 1994).  I have been an Emacs user and programmer from\n+1984 to 1987 (TOPS-20) and from 1991 to present (Unix).  since early 1994,\n+I have worked on GNU Emacs development, in both Lisp and C, and since mid\n+1995, I have been tracking the development code.\n+\n+Services I offer the free software community include supporting Emacs users\n+and programmers with expert advice (gratis on USENET or mailing lists where\n+others may benefit), customizing and writing Emacs functions and packages,\n+delivering courses and seminars from tutorials to writing Emacs Lisp and C\n+extensions, and providing general aid with all GNU software.\n+\n+My standard rate is a flat USD 80 per hour or USD 2 per minute (you decide\n+which time unit to apply), but to offset the cost of processing money, the\n+minimum credit card charge is USD\ufffd100 and the minimum invoiced amount is\n+USD 250.  Discounts are available to worthy causes -- present your case.\n+Time away from home is billed at USD 40 per hour around the clock to\n+encourage remote work.  (Courses and seminars are negotiated individually.)\n+\n+Please call only about actual work, I prefer mail for all other questions.\n+\n+Updated: 1997-07-18\n+\u001f\n+NET-Community                   <sales@net-community.com>\n+522 SW 5th Avenue               http://www.net-community.com\n+Suite 1105\n+Portland, OR 97204 USA\n+1-800-919-0060 voice  \n+1-503-274-4423 voice  \n+1-503-274-5406 fax    \n+\n+NET-Community provides support for the complete GNUstep toolset\n+including the Objective-C runtime within GCC, the GNUstep Base Library,\n+the Display Ghostscript system, the GNUstep GUI Library, the GNUstep\n+X/DPS GUI Backend, and the GNUstep Database Library. NET-Community also\n+provides support for its own MediaBook software including the MediaBook\n+Random Library and the MediaBook Speech Synthesis Library. \n+NET-Community actively supports and develops free software on all\n+GNUstep platforms; a portion of the proceeds, usually 20%, generated\n+from CD-ROM sales go towards additional development and enhancement of\n+GNUstep.\n+\n+Updated: 1997-05-12\n+\u001f\n+  Open Systems Consultants a.s\n+  St. Olavsgt. 24\n+  N-0166 OSLO\n+  NORWAY\n+\n+Phone:               Fax:\n+  +47 22 20 40 50    +47 22 20 02 85\n+\n+Web:                 E-mail:\n+  http://www.osc.no  <gnu-support@osc.no>\n+\n+Open Systems Consultants a.s can provide programming support for all\n+GNU software -- extending or adopting it to meet customer needs.\n+Prices vary with software and project.  Hourly fees are in the $80-120\n+range.  Fixed-priced projects are also available.  No phone support.\n+\n+Updated:  1997-05-08\n+\u001f\n+Francesco Potorti` <F.Potorti@cnuce.cnr.it>\n+Via S.Stefano, 8\n+56123 Pisa, Italy\n+Tel. (050)560671\n+\n+Emacs:\tinstallation and maintenance, training and tutorials,\n+\tcustomisation, extensions, troubleshooting.  Author of some of\n+\tthe packages in the emacs distribution, has made the porting\n+\tof emacs to the Motorola Delta architecture.\n+\n+Other:\tinstallation and maintenance of GNU software.  Experience with\n+\thylafax, RCS, gperf, etags, smail, indent, diff, gawk, gcc,\n+\tscreen.  Is the current maintainer of etags.\n+\n+Rates:\t30-80 KL/hr, depending on experience on the particular task.\n+\tAverage is 50 KL/hr $50/hr.\n+\tPrefer e-mail communication to telephone.\n+\n+Qualifications: Electronic Engineering degree, Pisa.  Full time\n+\tresearcher in CNUCE-CNR.\n+\tFamiliar with elisp programming and porting of C programs.\n+\n+Updated:  1997-05-08\n+\u001f\n+Dipl.-Inform. Klaus Kaempf\t\t<kkaempf@progis.de>\n+proGIS Software\n+Jakobstr. 117\n+D-52064 Aachen\n+Germany\n+http://www.progis.de\n+Tel +49 241 470670\n+Fax +49 241 4706729\n+\n+- 15 years C/Unix experience\n+- 6 years VMS experience\n+- Ported BFD library, Binutils, GNU Assembler, GNU C, GNU C++,\n+  GNU C++ libraries, and GNU Make to openVMS/Alpha.\n+\n+We do a lot of cross-platform (Unix-VMS-WindowsNT) development\n+mostly with the GNU compiler environment. We are actively\n+supporting GNU software on openVMS/Alpha.\n+\n+Rates start at 160.- DM / hour for support and\n+installation. Larger projects are negotiable.\n+\n+Updated: 1997-05-08\n+\u001f\n+Quiotix Corporation\n+Menlo Park, CA\n+\n+Contact: Jeffrey Siegal\n+         jbs@quiotix.com\n+         415 324-0535\n+\n+Area of focus: Embedded systems--using GNU software to develop for\n+embedded systems, porting GNU software to embedded systems, extending GNU\n+software to better support embedded environments, developing new tools and\n+utilities for embedded development using GNU software.\n+\n+Services: porting, development, support, project management, advisory\n+consulting.\n+\n+Rates: $125-$250/hour or fixed fees depending on services provided.\n+\n+Updated:  1997-05-16\n+\u001f\n+Wolfgang S. Rupprecht\t\t<wolfgang@wsrcc.com>\n+47 Esparito Ave.\n+Fremont, CA 94539-3827\n+(510) 659-9757\n+\n+Anything, (lisp, C, customization, porting, installing) I have\n+written thousands of lines of GNU Emacs C and Lisp code.  Original\n+author of the floating point additions in Emacs 19.\n+\n+Rates:\t$95/hr.\n+\n+Updated: 1997-05-08\n+\u001f\n+Stanislav Shalunov\n+\n+Email: shalunov@mccme.ru\n+Phones: on request\n+\n+Installing, configuring, helping learn any free software.  \n+Handholding, trouble shooting.  Making custom changes to free \n+software written in C.  Teaching, lecturing, consulting.\n+\n+Want to have a free OS with free software serving your needs but do \n+not want to spend time yourself or not very skilled with the \n+computers?  Cannot decide which free software suits your needs \n+better?  Drop me a line.\n+\n+Well, essentially, anything else on special request.  :-)\n+\n+Rate: $30/hour if you are in Moscow and I am there when you request \n+job done, $50 if the job may be done remotely (like configuring user \n+level program), $60/hour + travel expenses otherwise.  (Negotiable, \n+significant discounts may apply.)\n+\n+Entered 1997-07-17\n+\f\n+Vin Shelton\n+EtherSoft, Inc\n+617.924.6437\n+<acs@acm.org>\n+\n+I have been a professional programmer for 20 years, with most of that time\n+spent doing UNIX/C/C++ hacking.  My specialties are (in no particular\n+order): system/kernel hacking, speech recognition, perl, object-oriented\n+design and analysis, FSF software (I have built nearly every FSF package on\n+several different platforms), small language design and implementation, and\n+HTML/web programming.  Currently I'm a member of the XEmacs beta testing\n+team - I'm responsible for maintaining the version 19.15 patches and have\n+written a few small packages/lisp hacks.  My rates vary from $60 - $100 per\n+hour, depending on the size of the project.\n+\n+Updated: 1997-05-09\n+\u001f\n+Signum Support AB\t\t<info@signum.se>\n+Teknikringen 8\n+S-583 30 Linkoping, Sweden\n++46 13 21 46 00 voice\n++46 13 21 47 00 fax\n+http://www.signum.se/\n+\n+Signum Support AB is a company dedicated to supporting, developing and\n+distributing free software for mainly UNIX systems. The people behind\n+Signum Support AB have many years of general UNIX and Internet\n+experience, both as system administrators and as programmers, and also\n+extensive experience in maintaining and administring the GNU programs\n+and Linux.\n+\n+Signum Support develops and markets the free GUI equiped Readynet\n+Internet server, the free PHTTPD http server and the easy to use Linux\n+based Fuego firewall.\n+\n+Services offered:\n+\n+ - Support on Internet service software, especially the free\n+   Readynet Internet server we have developed for Linux.\n+ - Support on Linux.\n+ - Customization of Linux.\n+ - Installation and customizing GNU and other free software.  We are\n+   making free software as easy to install and use as shrink wrapped\n+   programs.\n+ - Warranty protection.\n+ - Finding, Recommending and Investigation of free software in any\n+   area of the customers choise.\n+ - Regular consulting.\n+\n+Rates: For software items, request our price list.\n+       For consulting, 700-900 SEK/hour.\n+\n+Updated: 1997-05-12\n+\u001f\n+   Jon Solomon                     <jsol@gnu.ai.mit.edu>\n+   235 Main St., Apt 3C-1\n+   East Hartford, Conn. 06118\n+   +1 860 895-8289\n+\n+   Maintains all GNU software... Available for General Consulting\n+   (contact me if you are interested)...\n+   Sendmail a specialty... Can answer questions pertaining to the\n+   installation, maintainence, bug reporting and fixing for\n+   most GNU products... Adhering to the FSF/GNU copyleft for all\n+   work... (I only charge for the time it takes to do the above,\n+   the software (and most GNU copyleft'd software) is free.\n+   I can make tapes for you if you need that...\n+\n+Updated: 1997-05-09\n+\u001f\n+Name:           Julian Stacey <jhs@freebsd.org>\n+Location:\tMunich Germany, & on the Internet.\n+Qualifications: University Degree, BSc Hons Computer & Cybernetics, 1980.\n+Phone:          +49.89.268616   Fax: +49.89.260812   Data: +49.89.26023276\n+Resume:\t\thttp://www.freebsd.org/~jhs/\n+Time Zone:      +01:00\n+Rate:           130-170 DM/Hour.  2.7846 DM = 1 Pound = US $1.6332\n+Commercial Independent Freelance Consultancy:\n+                Any Unix (inc FreeBSD, Linux etc), C, X-Windows, FSF Tools,\n+                Internet, Systems engineering, hardware interfacing, \n+                real time, comms & scientific industrial, even Cyrillic &\n+                Chinese interfaces etc.  No Emacs. No Cobol.\n+Free Sources:   FSF, FreeBSD & NetBSD CVS & current (daily!) & releases,\n+\t\tX-Windows, XFree86, Free dial in soon (details on web).\n+\t\tMedia Copy Charge ~DM 100 QIC 1/4\" 525M, 150M, & 60M; & CAS-60M.\n+Free GCC-1.40\tFor Symmetric Computer Systems Model 375 (native cc is broken).\n+Languages:      Deutsch & Francais\n+                Man kann mir in Deutsch schreiben, (oder mich anrufen).\n+                Je comprend Francais, mais je n'ecris pas des responses en Fr.\n+! NO FREE HELP !\n+\t- The Free Software Foundation do not pay me.\n+\t- I earn my living from professional consultancy fees.\n+\t- Though I write code for public domain ...\n+\t- I will Not solve stranger's complex problems for free !\n+WHEN CONTACTING ME,  DO THIS :-\n+\t  1) Tell me Immediately,  Are You:\n+\t\tA)  Expecting to pay my bill for professional consultancy.\n+\t\tB)  Seeking a few minutes advice free of charge.\n+\t  2) Give me your email adddress, or that of a friend.\n+\t     or Volunteer to phone back ~ 5 days later to collect follow-up\n+\t     info.  from the net.  (No I will not incur bills phoning you back).\n+\t  3) Speak English if you want free advice !  I speak German, &\n+\t     listen in French, but if you're not paying, make some effort too !\n+\n+Updated: 1997-05-15\n+\u001f\n+Richard M. Stallman\t<rms@gnu.ai.mit.edu>\n+545 Tech Sq, Rm 430\n+Cambridge, MA 02139\n+\n+Emacs: anything whatever\n+Is anyone interested in courses in using or extending GNU Emacs?\n+\n+Original inventor of Emacs and main author of GNU Emacs and GCC.\n+\n+Rates: $6/min or $250/hr.\n+\n+Updated: 1997-05-09\n+\u001f\n+Kayvan Sylvan <kayvan@sylvan.com>\n+Sylvan Associates\n+879 Lewiston Drive\n+San Jose, CA 95136-1517\n+Phone: (408) 978-1407\n+Fax:   (408) 978-1417\n+\n+I will help you port, install and customize GNU Emacs, GCC, G++,\n+bison, and other GNU tools on almost any architechture and operating\n+system. Questions answered. GNU C and lisp hacking available. I will\n+also do ongoing support and periodic upgrades if you get on my GNU\n+software subscription list.\n+\n+Rates: $70-$100/hour, depending on type of work. Substantial discounts\n+for long-term contracts and also for educational or non-profit\n+institutions.\n+\n+Experience: Many different Unix systems (2.9BSD to 4.4BSD, Xenix, SVR3 and\n+SVR4, Linux, FreeBSD). Systems programming and system administration on all\n+brands of Unix. Kernel hacking experience. Lots of porting experience.\n+\n+Updated: 1997-05-09\n+\u001f\n+TerraTel AB <info@netg.se>\n+Tankeg=E5ngen 4\n+S-417 56 G=F6teborg, Sweden\n++46 31 50 79 40 voice\n++46 31 50 79 39 fax\n+http://www.netg.se\n+\n+TerraTel AB is a company that does consultant jobs and holds courses\n+in the fields of Unix software, TCP/IP networking and Internet\n+applications. The people behind TerraTel AB have many years\n+of general UNIX experience, both as system administrators and as\n+programmers, and also extensive experience in maintaining the GNU\n+programs; in administration as well as finding and fixing bugs.\n+\n+Services offered:\n+\n+- Installation and customizing GNU and other free software.  We will\n+  make free software as easy to install and use as shrink wrapped\n+  programs.\n+- Service and support subscriptions.\n+- Warranty protection.\n+- Customization and porting.\n+- Subscriptions to new versions which we will send monthly or with\n+  any other interval.\n+- Finding, recommending and investigating free software in any\n+  area of the customers choice.\n+- Regular consulting.\n+- Support on Internet service software, especially the free\n+- Support on Linux.\n+- Freeware based courses in Unix usage, C, C++, or any GNU tools\n+\n+Rates: For courses, contact us for a quote,\n+For consulting, $60-120/hour, depending on contract length.\n+\n+Entered:  1997-05-12\n+\u001f\n+Jonathan Thornburg / BKIS Consulting\n+E-mail: <bkis@island.net>       (preferred way to contact me)\n+Postal: Box 8-7, Thetis Island  BC  V0R 2Y0, Canada\n+Phone:  (250) 246-3640          (somewhat unreliable)\n+\n+* B.Sc (Honors 1st Class) in Math+Physics+CS, M.Sc and Ph.D in Astronomy\n+* 20+ years computing experience using a wide range of software and\n+  hardware environments\n+\n+* Very fluent in C (15+ years experience)\n+* Fluent in C++, Perl, sh, csh, Awk, Fortran, PL/I, Pascal, APL, Lisp,\n+            Basic, Maple, Reduce, various machine languages\n+* Very fluent (10+ years experience) in general Unix toolset and programming\n+* Good knowledge (4+ years experience) of Unix system administration\n+  (SunOS, Linux, SGI)\n+* Strong background (both theory and practical experience) in Unix/network\n+  security, computer graphics, X and Motif GUI programming\n+* Good general knowledge of Unix (kernel) internals and device drivers\n+* Very fluent in LaTeX, TeX, also HTML, HTTP, and CGI programming\n+* Member of Usenix (professional and technical Unix association) and\n+  SAGE (system administrator's guild)\n+\n+* Very strong background (extensive experience) in numerical analysis\n+* Strong backgrounds in hardware architecture, microprogramming,\n+  programming language implementation, compiler theory, data structures,\n+  OS design and internals, networking, symbolic manipulation, AI\n+\n+I'm available for Unix-based contract programming, software installation,\n+and/or general system administration.  My recent projects include several\n+20K-50K 50K line C/Maple/Awk scientific applications, several small (1K line)\n+Perl/Awk text processors and \"system glue\" CGI programs, finding and fixing\n+bugs in a (free) 50K line graphics package, and a partially completed project\n+to port (really rewrite) the GUI of a 50K line C++ Netscape plugin from\n+Win32 to Unix/X/Motif.\n+\n+Unless otherwise required by a client, all the software I write is covered\n+by the GNU Public License.  My basic rate is Can$50/hour for work I can do\n+remotely over the Internet, more for on-site work, less for selected\n+non-profit organizations.\n+\n+Updated:  1997-05-19\n+\u001f\n+Leonard H. Tower Jr.\t<tower@prep.ai.mit.edu>\n+36 Porter Street\n+Somerville, MA\t02143\n+USA\n++1-617-623-7739\n+\n+Will work on most GNU software.\n+Installation, handholding, trouble shooting, extensions, teaching.\n+\n+Rates: $ 150.00/hour + travel expenses.  Negotiable for non-profits.\n+\n+Experience: Have hacked on over a dozen architectures in many languages.  Have\n+system mothered too many varieties of Unixes.  Assisted rms with the front end\n+of gcc and its back-end support.  Resume available on request.\n+\n+Updated:  1997-05-24\n+\u001f\n+noris network GmbH\n+Matthias Urlichs\n+Schleiermacherstrasse 12\n+90491 Nuernberg\n+Germany\n+Phone: +49 911 59818-0\n+Fax: +49 911 59818-11\n+<info@noris.de>\n+http://info.noris.de/ (German)\n+\n+Expertise:\n+  OS internals, esp. Linux and BSD, esp. device drivers\n+  Network protocol / program design and coding\n+  Utilities coding and maintainance\n+  Program debugging, testing\n+  User interface design and testing\n+  Several programming and tool languages\n+\n+Services:\n+  Installation, debugging, enhancement, distribution,\n+    for all kinds of free software.\n+  System administration for most Unix-like systems.\n+  Email, Fax, phone, and in-person consulting (and/or \"question answering\").\n+  Remote support and system monitoring (over the Internet),\n+  Update service (new tools tested and installed automagically)\n+  Internet access\n+\n+Rates:\n+  DM 110 (~$70) per hour\n+  Support contracts start at DM 170/month + DM 30/supported system.\n+  Willing to travel for sufficiently large jobs.\n+  Rates don't include taxes.\n+\n+Updated: 1996-07-05\n+\u001f\n+Paul C.A. van Gool\n+      <P.vanGool@LR.TUDelft.NL>\n+\n+Address: Faculty of Aerospace Engineering\n+         Delft University of Technology\n+         Kluyverweg 1,  2629 HS Delft\n+         The Netherlands\n+\n+Phone: +31-15-2785370\n+Fax  : +31-15-2786480\n+\n+I would like to provide unpaid support for the following things:\n+\n+- C\n+- C++\n+- f2c\n+- compilation and installation of most GNU packages\n+\n+Updated:  1997-05-12\n+\u001f\n+Arne Wichmann\n+\n+EMail: <aw@math.uni-sb.de>\n+Telephone on request.\n+\n+I support GNU software on the following platforms:\n+\n+Linux\n+SunOS 4.X 5.X\n+HPUX 9.X\n+other platforms on request.\n+\n+Usual rates: 20DM per hour. Free support for private people as time\n+permits.\n+\n+Updated: 1997-05-16\n+\u001f\n+Jody Winston\n+xprt Computer Consulting, Inc.\n+731 Voyager\n+Houston, TX, 77058\n+(281) 480-UNIX, <jody@sccsi.com>\n+\n+We have supported, installed, and used the entire GNU software suite\n+for over 8 years on many different Unix platforms.  We have written\n+character device drivers and proc file systems for custom hardware\n+running on Linux.  In addition, we have developed a custom X11 server\n+and X input extensions. Our consulting rate is $150.00 US dollars per\n+hour, negotiable, plus a per diem for out of town work.\n+\n+Updated:  1997-05-12\n+\u001f\n+Lige Zhou\n+Consultant\n+Open Technologies Corporation\n+Sun Lotus Bldg. 2nd Floor\n+2-9-1 Chuou, Nakano-ku, Tokyo 164 Japan\n+Tel: +81-3-3365-2911 Fax: +81-3-3365-2920\n+E-mail: <zhou@opentech.co.jp>\n+\n+My profile is listed at:  http://www.opentech.co.jp/~zhou/\n+\n+I have two years of experience porting and supporting GNU C Compiler and\n+GNU Assember at the Wingnut project of SRA, Inc., Tokyo.\n+\n+I can provide free consultation on these products if the problem is not\n+time-consuming.\n+\n+Updated:  1996-12-04\n+\u001f\n+\n+For a current copy of this directory, or to have yourself listed, ask:\n+\tgnu@prep.ai.mit.edu\n+\n+** Please keep the entries in this file alphabetical **"}, {"sha": "04641e3c8fb84e1df0033b1d9727544baee8992c", "filename": "gcc/TESTS.FLUNK", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FTESTS.FLUNK", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2FTESTS.FLUNK", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FTESTS.FLUNK?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,39 @@\n+This is a collection of things that test suites have\n+said were \"wrong\" with GCC--but that I don't agree with.\n+\n+First, test suites sometimes test for compatibility with\n+traditional C.  GCC with -traditional is not completely\n+compatible with traditional C, and in some ways I think it\n+should not be.\n+\n+* K&R C allowed \\x to appear in a string literal (or character\n+literal?)  even in cases where it is *not* followed by a sequence of\n+hex digits.  I'm not convinced this is desirable.\n+\n+* K&R compilers allow comments to cross over an inclusion boundary (i.e.\n+started in an include file and ended in the including file).\n+I think this would be quite ugly and can't imagine it could\n+be needed.\n+\n+Sometimes tests disagree with GCC's interpretation of the ANSI standard.\n+\n+* One test claims that this function should return 1.\n+\n+    enum {A, B} foo;\n+\n+    func (enum {B, A} arg)\n+    {\n+      return B;\n+    }\n+\n+I think it should return 0, because the definition of B that\n+applies is the one in func.\n+\n+* Some tests report failure when the compiler does not produce\n+an error message for a certain program.\n+\n+ANSI C requires a \"diagnostic\" message for certain kinds of invalid\n+programs, but a warning counts as a diagnostic.  If GCC produces\n+a warning but not an error, that is correct ANSI support.\n+When test suites call this \"failure\", the tests are broken.\n+"}, {"sha": "9f6f2b02e3c41585f671932216d448b893dd1686", "filename": "gcc/bi-parser.c", "status": "added", "additions": 980, "deletions": 0, "changes": 980, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fbi-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fbi-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbi-parser.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,980 @@\n+\n+/*  A Bison parser, made from bi-parser.y with Bison version GNU Bison version 1.24\n+  */\n+\n+#define YYBISON 1  /* Identify Bison output.  */\n+\n+#define\tDEFOP\t258\n+#define\tSTRING\t259\n+\n+#line 22 \"bi-parser.y\"\n+\n+\n+#include <stdio.h>\n+#include \"hconfig.h\"\n+#include \"bi-defs.h\"\n+\n+extern char yytext[];\n+extern int yyleng;\n+\n+\n+/* Chain of all defs built by the parser. */\n+struct def *defs;\n+int ndefs;\n+\n+static struct node *makenode ();\n+static struct variation *makevar ();\n+static struct def *makedef ();\n+\n+void yyerror ();\n+\n+\n+#line 44 \"bi-parser.y\"\n+typedef union\n+{\n+  char *string;\n+  struct def *def;\n+  struct variation *variation;\n+  struct node *node;\n+} YYSTYPE;\n+\n+#ifndef YYLTYPE\n+typedef\n+  struct yyltype\n+    {\n+      int timestamp;\n+      int first_line;\n+      int first_column;\n+      int last_line;\n+      int last_column;\n+      char *text;\n+   }\n+  yyltype;\n+\n+#define YYLTYPE yyltype\n+#endif\n+\n+#include <stdio.h>\n+\n+#ifndef __cplusplus\n+#ifndef __STDC__\n+#define const\n+#endif\n+#endif\n+\n+\n+\n+#define\tYYFINAL\t\t39\n+#define\tYYFLAG\t\t-32768\n+#define\tYYNTBASE\t8\n+\n+#define YYTRANSLATE(x) ((unsigned)(x) <= 259 ? yytranslate[x] : 17)\n+\n+static const char yytranslate[] = {     0,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     5,\n+     7,     2,     2,     6,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     1,     2,     3,     4\n+};\n+\n+#if YYDEBUG != 0\n+static const short yyprhs[] = {     0,\n+     0,     2,     4,     7,    18,    20,    24,    28,    34,    42,\n+    52,    53,    55,    59,    60,    62,    66\n+};\n+\n+static const short yyrhs[] = {     9,\n+     0,    10,     0,     9,    10,     0,     3,     5,     4,     6,\n+    13,     6,     5,    11,     7,     7,     0,    12,     0,    11,\n+     6,    12,     0,     5,    13,     7,     0,     5,    13,     6,\n+    14,     7,     0,     5,    13,     6,    14,     6,    14,     7,\n+     0,     5,    13,     6,    14,     6,    14,     6,    14,     7,\n+     0,     0,     4,     0,     5,    15,     7,     0,     0,    16,\n+     0,    16,     6,    15,     0,     4,     0\n+};\n+\n+#endif\n+\n+#if YYDEBUG != 0\n+static const short yyrline[] = { 0,\n+    60,    65,    67,    71,    76,    78,    82,    85,    87,    89,\n+    93,    95,    98,   101,   105,   108,   112\n+};\n+\n+static const char * const yytname[] = {   \"$\",\"error\",\"$undefined.\",\"DEFOP\",\n+\"STRING\",\"'('\",\"','\",\"')'\",\"top\",\"defs\",\"def\",\"variations\",\"variation\",\"opt_string\",\n+\"list\",\"items\",\"item\",\"\"\n+};\n+#endif\n+\n+static const short yyr1[] = {     0,\n+     8,     9,     9,    10,    11,    11,    12,    12,    12,    12,\n+    13,    13,    14,    14,    15,    15,    16\n+};\n+\n+static const short yyr2[] = {     0,\n+     1,     1,     2,    10,     1,     3,     3,     5,     7,     9,\n+     0,     1,     3,     0,     1,     3,     1\n+};\n+\n+static const short yydefact[] = {     0,\n+     0,     1,     2,     0,     3,     0,    11,    12,     0,     0,\n+     0,    11,     0,     5,     0,     0,     0,    14,     7,     6,\n+     4,     0,     0,    17,     0,    15,    14,     8,    13,     0,\n+     0,    16,    14,     9,     0,    10,     0,     0,     0\n+};\n+\n+static const short yydefgoto[] = {    37,\n+     2,     3,    13,    14,     9,    23,    25,    26\n+};\n+\n+static const short yypact[] = {     2,\n+     6,     2,-32768,     8,-32768,     7,    10,-32768,     9,    11,\n+    12,    10,    -5,-32768,    -3,    12,    13,    14,-32768,-32768,\n+-32768,    17,     1,-32768,    15,    18,    14,-32768,-32768,    17,\n+     3,-32768,    14,-32768,    16,-32768,    25,    26,-32768\n+};\n+\n+static const short yypgoto[] = {-32768,\n+-32768,    27,-32768,    19,    20,   -27,   -12,-32768\n+};\n+\n+\n+#define\tYYLAST\t\t35\n+\n+\n+static const short yytable[] = {    31,\n+    16,    17,    18,    19,     1,    35,    27,    28,    33,    34,\n+     4,     6,     7,     8,    10,    11,    12,    32,    22,    21,\n+    24,    29,    36,    30,    38,    39,     0,     0,     5,     0,\n+     0,    15,     0,     0,    20\n+};\n+\n+static const short yycheck[] = {    27,\n+     6,     7,     6,     7,     3,    33,     6,     7,     6,     7,\n+     5,     4,     6,     4,     6,     5,     5,    30,     5,     7,\n+     4,     7,     7,     6,     0,     0,    -1,    -1,     2,    -1,\n+    -1,    12,    -1,    -1,    16\n+};\n+/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n+#line 3 \"/usr/local/share/bison.simple\"\n+\n+/* Skeleton output parser for bison,\n+   Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* As a special exception, when this file is copied by Bison into a\n+   Bison output file, you may use that output file without restriction.\n+   This special exception was added by the Free Software Foundation\n+   in version 1.24 of Bison.  */\n+\n+#ifndef alloca\n+#ifdef __GNUC__\n+#define alloca __builtin_alloca\n+#else /* not GNU C.  */\n+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n+#include <alloca.h>\n+#else /* not sparc */\n+#if defined (MSDOS) && !defined (__TURBOC__)\n+#include <malloc.h>\n+#else /* not MSDOS, or __TURBOC__ */\n+#if defined(_AIX)\n+#include <malloc.h>\n+ #pragma alloca\n+#else /* not MSDOS, __TURBOC__, or _AIX */\n+#ifdef __hpux\n+#ifdef __cplusplus\n+extern \"C\" {\n+void *alloca (unsigned int);\n+};\n+#else /* not __cplusplus */\n+void *alloca ();\n+#endif /* not __cplusplus */\n+#endif /* __hpux */\n+#endif /* not _AIX */\n+#endif /* not MSDOS, or __TURBOC__ */\n+#endif /* not sparc.  */\n+#endif /* not GNU C.  */\n+#endif /* alloca not defined.  */\n+\n+/* This is the parser code that is written into each bison parser\n+  when the %semantic_parser declaration is not specified in the grammar.\n+  It was written by Richard Stallman by simplifying the hairy parser\n+  used when %semantic_parser is specified.  */\n+\n+/* Note: there must be only one dollar sign in this file.\n+   It is replaced by the list of actions, each action\n+   as one case of the switch.  */\n+\n+#define yyerrok\t\t(yyerrstatus = 0)\n+#define yyclearin\t(yychar = YYEMPTY)\n+#define YYEMPTY\t\t-2\n+#define YYEOF\t\t0\n+#define YYACCEPT\treturn(0)\n+#define YYABORT \treturn(1)\n+#define YYERROR\t\tgoto yyerrlab1\n+/* Like YYERROR except do call yyerror.\n+   This remains here temporarily to ease the\n+   transition to the new meaning of YYERROR, for GCC.\n+   Once GCC version 2 has supplanted version 1, this can go.  */\n+#define YYFAIL\t\tgoto yyerrlab\n+#define YYRECOVERING()  (!!yyerrstatus)\n+#define YYBACKUP(token, value) \\\n+do\t\t\t\t\t\t\t\t\\\n+  if (yychar == YYEMPTY && yylen == 1)\t\t\t\t\\\n+    { yychar = (token), yylval = (value);\t\t\t\\\n+      yychar1 = YYTRANSLATE (yychar);\t\t\t\t\\\n+      YYPOPSTACK;\t\t\t\t\t\t\\\n+      goto yybackup;\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\\\n+    { yyerror (\"syntax error: cannot back up\"); YYERROR; }\t\\\n+while (0)\n+\n+#define YYTERROR\t1\n+#define YYERRCODE\t256\n+\n+#ifndef YYPURE\n+#define YYLEX\t\tyylex()\n+#endif\n+\n+#ifdef YYPURE\n+#ifdef YYLSP_NEEDED\n+#ifdef YYLEX_PARAM\n+#define YYLEX\t\tyylex(&yylval, &yylloc, YYLEX_PARAM)\n+#else\n+#define YYLEX\t\tyylex(&yylval, &yylloc)\n+#endif\n+#else /* not YYLSP_NEEDED */\n+#ifdef YYLEX_PARAM\n+#define YYLEX\t\tyylex(&yylval, YYLEX_PARAM)\n+#else\n+#define YYLEX\t\tyylex(&yylval)\n+#endif\n+#endif /* not YYLSP_NEEDED */\n+#endif\n+\n+/* If nonreentrant, generate the variables here */\n+\n+#ifndef YYPURE\n+\n+int\tyychar;\t\t\t/*  the lookahead symbol\t\t*/\n+YYSTYPE\tyylval;\t\t\t/*  the semantic value of the\t\t*/\n+\t\t\t\t/*  lookahead symbol\t\t\t*/\n+\n+#ifdef YYLSP_NEEDED\n+YYLTYPE yylloc;\t\t\t/*  location data for the lookahead\t*/\n+\t\t\t\t/*  symbol\t\t\t\t*/\n+#endif\n+\n+int yynerrs;\t\t\t/*  number of parse errors so far       */\n+#endif  /* not YYPURE */\n+\n+#if YYDEBUG != 0\n+int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n+/* Since this is uninitialized, it does not stop multiple parsers\n+   from coexisting.  */\n+#endif\n+\n+/*  YYINITDEPTH indicates the initial size of the parser's stacks\t*/\n+\n+#ifndef\tYYINITDEPTH\n+#define YYINITDEPTH 200\n+#endif\n+\n+/*  YYMAXDEPTH is the maximum size the stacks can grow to\n+    (effective only if the built-in stack extension method is used).  */\n+\n+#if YYMAXDEPTH == 0\n+#undef YYMAXDEPTH\n+#endif\n+\n+#ifndef YYMAXDEPTH\n+#define YYMAXDEPTH 10000\n+#endif\n+\n+/* Prevent warning if -Wstrict-prototypes.  */\n+#ifdef __GNUC__\n+int yyparse (void);\n+#endif\n+\f\n+#if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n+#define __yy_memcpy(FROM,TO,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n+#else\t\t\t\t/* not GNU C or C++ */\n+#ifndef __cplusplus\n+\n+/* This is the most reliable way to avoid incompatibilities\n+   in available built-in functions on various systems.  */\n+static void\n+__yy_memcpy (from, to, count)\n+     char *from;\n+     char *to;\n+     int count;\n+{\n+  register char *f = from;\n+  register char *t = to;\n+  register int i = count;\n+\n+  while (i-- > 0)\n+    *t++ = *f++;\n+}\n+\n+#else /* __cplusplus */\n+\n+/* This is the most reliable way to avoid incompatibilities\n+   in available built-in functions on various systems.  */\n+static void\n+__yy_memcpy (char *from, char *to, int count)\n+{\n+  register char *f = from;\n+  register char *t = to;\n+  register int i = count;\n+\n+  while (i-- > 0)\n+    *t++ = *f++;\n+}\n+\n+#endif\n+#endif\n+\f\n+#line 192 \"/usr/local/share/bison.simple\"\n+\n+/* The user can define YYPARSE_PARAM as the name of an argument to be passed\n+   into yyparse.  The argument should have type void *.\n+   It should actually point to an object.\n+   Grammar actions can access the variable by casting it\n+   to the proper pointer type.  */\n+\n+#ifdef YYPARSE_PARAM\n+#define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;\n+#else\n+#define YYPARSE_PARAM\n+#define YYPARSE_PARAM_DECL\n+#endif\n+\n+int\n+yyparse(YYPARSE_PARAM)\n+     YYPARSE_PARAM_DECL\n+{\n+  register int yystate;\n+  register int yyn;\n+  register short *yyssp;\n+  register YYSTYPE *yyvsp;\n+  int yyerrstatus;\t/*  number of tokens to shift before error messages enabled */\n+  int yychar1 = 0;\t\t/*  lookahead token as an internal (translated) token number */\n+\n+  short\tyyssa[YYINITDEPTH];\t/*  the state stack\t\t\t*/\n+  YYSTYPE yyvsa[YYINITDEPTH];\t/*  the semantic value stack\t\t*/\n+\n+  short *yyss = yyssa;\t\t/*  refer to the stacks thru separate pointers */\n+  YYSTYPE *yyvs = yyvsa;\t/*  to allow yyoverflow to reallocate them elsewhere */\n+\n+#ifdef YYLSP_NEEDED\n+  YYLTYPE yylsa[YYINITDEPTH];\t/*  the location stack\t\t\t*/\n+  YYLTYPE *yyls = yylsa;\n+  YYLTYPE *yylsp;\n+\n+#define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)\n+#else\n+#define YYPOPSTACK   (yyvsp--, yyssp--)\n+#endif\n+\n+  int yystacksize = YYINITDEPTH;\n+\n+#ifdef YYPURE\n+  int yychar;\n+  YYSTYPE yylval;\n+  int yynerrs;\n+#ifdef YYLSP_NEEDED\n+  YYLTYPE yylloc;\n+#endif\n+#endif\n+\n+  YYSTYPE yyval;\t\t/*  the variable used to return\t\t*/\n+\t\t\t\t/*  semantic values from the action\t*/\n+\t\t\t\t/*  routines\t\t\t\t*/\n+\n+  int yylen;\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Starting parse\\n\");\n+#endif\n+\n+  yystate = 0;\n+  yyerrstatus = 0;\n+  yynerrs = 0;\n+  yychar = YYEMPTY;\t\t/* Cause a token to be read.  */\n+\n+  /* Initialize stack pointers.\n+     Waste one element of value and location stack\n+     so that they stay on the same level as the state stack.\n+     The wasted elements are never initialized.  */\n+\n+  yyssp = yyss - 1;\n+  yyvsp = yyvs;\n+#ifdef YYLSP_NEEDED\n+  yylsp = yyls;\n+#endif\n+\n+/* Push a new state, which is found in  yystate  .  */\n+/* In all cases, when you get here, the value and location stacks\n+   have just been pushed. so pushing a state here evens the stacks.  */\n+yynewstate:\n+\n+  *++yyssp = yystate;\n+\n+  if (yyssp >= yyss + yystacksize - 1)\n+    {\n+      /* Give user a chance to reallocate the stack */\n+      /* Use copies of these so that the &'s don't force the real ones into memory. */\n+      YYSTYPE *yyvs1 = yyvs;\n+      short *yyss1 = yyss;\n+#ifdef YYLSP_NEEDED\n+      YYLTYPE *yyls1 = yyls;\n+#endif\n+\n+      /* Get the current used size of the three stacks, in elements.  */\n+      int size = yyssp - yyss + 1;\n+\n+#ifdef yyoverflow\n+      /* Each stack pointer address is followed by the size of\n+\t the data in use in that stack, in bytes.  */\n+#ifdef YYLSP_NEEDED\n+      /* This used to be a conditional around just the two extra args,\n+\t but that might be undefined if yyoverflow is a macro.  */\n+      yyoverflow(\"parser stack overflow\",\n+\t\t &yyss1, size * sizeof (*yyssp),\n+\t\t &yyvs1, size * sizeof (*yyvsp),\n+\t\t &yyls1, size * sizeof (*yylsp),\n+\t\t &yystacksize);\n+#else\n+      yyoverflow(\"parser stack overflow\",\n+\t\t &yyss1, size * sizeof (*yyssp),\n+\t\t &yyvs1, size * sizeof (*yyvsp),\n+\t\t &yystacksize);\n+#endif\n+\n+      yyss = yyss1; yyvs = yyvs1;\n+#ifdef YYLSP_NEEDED\n+      yyls = yyls1;\n+#endif\n+#else /* no yyoverflow */\n+      /* Extend the stack our own way.  */\n+      if (yystacksize >= YYMAXDEPTH)\n+\t{\n+\t  yyerror(\"parser stack overflow\");\n+\t  return 2;\n+\t}\n+      yystacksize *= 2;\n+      if (yystacksize > YYMAXDEPTH)\n+\tyystacksize = YYMAXDEPTH;\n+      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss1, (char *)yyss, size * sizeof (*yyssp));\n+      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs1, (char *)yyvs, size * sizeof (*yyvsp));\n+#ifdef YYLSP_NEEDED\n+      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls1, (char *)yyls, size * sizeof (*yylsp));\n+#endif\n+#endif /* no yyoverflow */\n+\n+      yyssp = yyss + size - 1;\n+      yyvsp = yyvs + size - 1;\n+#ifdef YYLSP_NEEDED\n+      yylsp = yyls + size - 1;\n+#endif\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Stack size increased to %d\\n\", yystacksize);\n+#endif\n+\n+      if (yyssp >= yyss + yystacksize - 1)\n+\tYYABORT;\n+    }\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Entering state %d\\n\", yystate);\n+#endif\n+\n+  goto yybackup;\n+ yybackup:\n+\n+/* Do appropriate processing given the current state.  */\n+/* Read a lookahead token if we need one and don't already have one.  */\n+/* yyresume: */\n+\n+  /* First try to decide what to do without reference to lookahead token.  */\n+\n+  yyn = yypact[yystate];\n+  if (yyn == YYFLAG)\n+    goto yydefault;\n+\n+  /* Not known => get a lookahead token if don't already have one.  */\n+\n+  /* yychar is either YYEMPTY or YYEOF\n+     or a valid token in external form.  */\n+\n+  if (yychar == YYEMPTY)\n+    {\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Reading a token: \");\n+#endif\n+      yychar = YYLEX;\n+    }\n+\n+  /* Convert token to internal form (in yychar1) for indexing tables with */\n+\n+  if (yychar <= 0)\t\t/* This means end of input. */\n+    {\n+      yychar1 = 0;\n+      yychar = YYEOF;\t\t/* Don't call YYLEX any more */\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Now at end of input.\\n\");\n+#endif\n+    }\n+  else\n+    {\n+      yychar1 = YYTRANSLATE(yychar);\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\t{\n+\t  fprintf (stderr, \"Next token is %d (%s\", yychar, yytname[yychar1]);\n+\t  /* Give the individual parser a way to print the precise meaning\n+\t     of a token, for further debugging info.  */\n+#ifdef YYPRINT\n+\t  YYPRINT (stderr, yychar, yylval);\n+#endif\n+\t  fprintf (stderr, \")\\n\");\n+\t}\n+#endif\n+    }\n+\n+  yyn += yychar1;\n+  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)\n+    goto yydefault;\n+\n+  yyn = yytable[yyn];\n+\n+  /* yyn is what to do for this token type in this state.\n+     Negative => reduce, -yyn is rule number.\n+     Positive => shift, yyn is new state.\n+       New state is final state => don't bother to shift,\n+       just return success.\n+     0, or most negative number => error.  */\n+\n+  if (yyn < 0)\n+    {\n+      if (yyn == YYFLAG)\n+\tgoto yyerrlab;\n+      yyn = -yyn;\n+      goto yyreduce;\n+    }\n+  else if (yyn == 0)\n+    goto yyerrlab;\n+\n+  if (yyn == YYFINAL)\n+    YYACCEPT;\n+\n+  /* Shift the lookahead token.  */\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Shifting token %d (%s), \", yychar, yytname[yychar1]);\n+#endif\n+\n+  /* Discard the token being shifted unless it is eof.  */\n+  if (yychar != YYEOF)\n+    yychar = YYEMPTY;\n+\n+  *++yyvsp = yylval;\n+#ifdef YYLSP_NEEDED\n+  *++yylsp = yylloc;\n+#endif\n+\n+  /* count tokens shifted since error; after three, turn off error status.  */\n+  if (yyerrstatus) yyerrstatus--;\n+\n+  yystate = yyn;\n+  goto yynewstate;\n+\n+/* Do the default action for the current state.  */\n+yydefault:\n+\n+  yyn = yydefact[yystate];\n+  if (yyn == 0)\n+    goto yyerrlab;\n+\n+/* Do a reduction.  yyn is the number of a rule to reduce with.  */\n+yyreduce:\n+  yylen = yyr2[yyn];\n+  if (yylen > 0)\n+    yyval = yyvsp[1-yylen]; /* implement default value of the action */\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    {\n+      int i;\n+\n+      fprintf (stderr, \"Reducing via rule %d (line %d), \",\n+\t       yyn, yyrline[yyn]);\n+\n+      /* Print the symbols being reduced, and their result.  */\n+      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)\n+\tfprintf (stderr, \"%s \", yytname[yyrhs[i]]);\n+      fprintf (stderr, \" -> %s\\n\", yytname[yyr1[yyn]]);\n+    }\n+#endif\n+\n+\n+  switch (yyn) {\n+\n+case 1:\n+#line 62 \"bi-parser.y\"\n+{ defs = yyvsp[0].def; ;\n+    break;}\n+case 3:\n+#line 68 \"bi-parser.y\"\n+{ yyvsp[0].def->next = yyvsp[-1].def; yyval.def = yyvsp[0].def; ;\n+    break;}\n+case 4:\n+#line 73 \"bi-parser.y\"\n+{ yyval.def = makedef (yyvsp[-7].string, yyvsp[-5].string, yyvsp[-2].variation); ;\n+    break;}\n+case 6:\n+#line 79 \"bi-parser.y\"\n+{ yyvsp[0].variation->next = yyvsp[-2].variation; yyval.variation = yyvsp[0].variation; ;\n+    break;}\n+case 7:\n+#line 84 \"bi-parser.y\"\n+{ yyval.variation = makevar (yyvsp[-1].string, (struct node *) NULL, (struct node *) NULL, (struct node *) NULL); ;\n+    break;}\n+case 8:\n+#line 86 \"bi-parser.y\"\n+{ yyval.variation = makevar (yyvsp[-3].string, yyvsp[-1].node, (struct node *) NULL, (struct node *) NULL); ;\n+    break;}\n+case 9:\n+#line 88 \"bi-parser.y\"\n+{ yyval.variation = makevar (yyvsp[-5].string, yyvsp[-3].node, yyvsp[-1].node, (struct node *) NULL); ;\n+    break;}\n+case 10:\n+#line 90 \"bi-parser.y\"\n+{ yyval.variation = makevar (yyvsp[-7].string, yyvsp[-5].node, yyvsp[-3].node, yyvsp[-1].node); ;\n+    break;}\n+case 11:\n+#line 94 \"bi-parser.y\"\n+{ yyval.string = \"\"; ;\n+    break;}\n+case 12:\n+#line 95 \"bi-parser.y\"\n+{ yyval.string = yyvsp[0].string; ;\n+    break;}\n+case 13:\n+#line 100 \"bi-parser.y\"\n+{ yyval.node = yyvsp[-1].node; ;\n+    break;}\n+case 14:\n+#line 102 \"bi-parser.y\"\n+{ yyval.node = NULL; ;\n+    break;}\n+case 16:\n+#line 109 \"bi-parser.y\"\n+{ yyvsp[-2].node->next = yyvsp[0].node; yyval.node = yyvsp[-2].node; ;\n+    break;}\n+case 17:\n+#line 114 \"bi-parser.y\"\n+{ yyval.node = makenode (yyvsp[0].string); ;\n+    break;}\n+}\n+   /* the action file gets copied in in place of this dollarsign */\n+#line 487 \"/usr/local/share/bison.simple\"\n+\f\n+  yyvsp -= yylen;\n+  yyssp -= yylen;\n+#ifdef YYLSP_NEEDED\n+  yylsp -= yylen;\n+#endif\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    {\n+      short *ssp1 = yyss - 1;\n+      fprintf (stderr, \"state stack now\");\n+      while (ssp1 != yyssp)\n+\tfprintf (stderr, \" %d\", *++ssp1);\n+      fprintf (stderr, \"\\n\");\n+    }\n+#endif\n+\n+  *++yyvsp = yyval;\n+\n+#ifdef YYLSP_NEEDED\n+  yylsp++;\n+  if (yylen == 0)\n+    {\n+      yylsp->first_line = yylloc.first_line;\n+      yylsp->first_column = yylloc.first_column;\n+      yylsp->last_line = (yylsp-1)->last_line;\n+      yylsp->last_column = (yylsp-1)->last_column;\n+      yylsp->text = 0;\n+    }\n+  else\n+    {\n+      yylsp->last_line = (yylsp+yylen-1)->last_line;\n+      yylsp->last_column = (yylsp+yylen-1)->last_column;\n+    }\n+#endif\n+\n+  /* Now \"shift\" the result of the reduction.\n+     Determine what state that goes to,\n+     based on the state we popped back to\n+     and the rule number reduced by.  */\n+\n+  yyn = yyr1[yyn];\n+\n+  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;\n+  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)\n+    yystate = yytable[yystate];\n+  else\n+    yystate = yydefgoto[yyn - YYNTBASE];\n+\n+  goto yynewstate;\n+\n+yyerrlab:   /* here on detecting error */\n+\n+  if (! yyerrstatus)\n+    /* If not already recovering from an error, report this error.  */\n+    {\n+      ++yynerrs;\n+\n+#ifdef YYERROR_VERBOSE\n+      yyn = yypact[yystate];\n+\n+      if (yyn > YYFLAG && yyn < YYLAST)\n+\t{\n+\t  int size = 0;\n+\t  char *msg;\n+\t  int x, count;\n+\n+\t  count = 0;\n+\t  /* Start X at -yyn if nec to avoid negative indexes in yycheck.  */\n+\t  for (x = (yyn < 0 ? -yyn : 0);\n+\t       x < (sizeof(yytname) / sizeof(char *)); x++)\n+\t    if (yycheck[x + yyn] == x)\n+\t      size += strlen(yytname[x]) + 15, count++;\n+\t  msg = (char *) malloc(size + 15);\n+\t  if (msg != 0)\n+\t    {\n+\t      strcpy(msg, \"parse error\");\n+\n+\t      if (count < 5)\n+\t\t{\n+\t\t  count = 0;\n+\t\t  for (x = (yyn < 0 ? -yyn : 0);\n+\t\t       x < (sizeof(yytname) / sizeof(char *)); x++)\n+\t\t    if (yycheck[x + yyn] == x)\n+\t\t      {\n+\t\t\tstrcat(msg, count == 0 ? \", expecting `\" : \" or `\");\n+\t\t\tstrcat(msg, yytname[x]);\n+\t\t\tstrcat(msg, \"'\");\n+\t\t\tcount++;\n+\t\t      }\n+\t\t}\n+\t      yyerror(msg);\n+\t      free(msg);\n+\t    }\n+\t  else\n+\t    yyerror (\"parse error; also virtual memory exceeded\");\n+\t}\n+      else\n+#endif /* YYERROR_VERBOSE */\n+\tyyerror(\"parse error\");\n+    }\n+\n+  goto yyerrlab1;\n+yyerrlab1:   /* here on error raised explicitly by an action */\n+\n+  if (yyerrstatus == 3)\n+    {\n+      /* if just tried and failed to reuse lookahead token after an error, discard it.  */\n+\n+      /* return failure if at end of input */\n+      if (yychar == YYEOF)\n+\tYYABORT;\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Discarding token %d (%s).\\n\", yychar, yytname[yychar1]);\n+#endif\n+\n+      yychar = YYEMPTY;\n+    }\n+\n+  /* Else will try to reuse lookahead token\n+     after shifting the error token.  */\n+\n+  yyerrstatus = 3;\t\t/* Each real token shifted decrements this */\n+\n+  goto yyerrhandle;\n+\n+yyerrdefault:  /* current state does not do anything special for the error token. */\n+\n+#if 0\n+  /* This is wrong; only states that explicitly want error tokens\n+     should shift them.  */\n+  yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Otherwise pop it.*/\n+  if (yyn) goto yydefault;\n+#endif\n+\n+yyerrpop:   /* pop the current state because it cannot handle the error token */\n+\n+  if (yyssp == yyss) YYABORT;\n+  yyvsp--;\n+  yystate = *--yyssp;\n+#ifdef YYLSP_NEEDED\n+  yylsp--;\n+#endif\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    {\n+      short *ssp1 = yyss - 1;\n+      fprintf (stderr, \"Error: state stack now\");\n+      while (ssp1 != yyssp)\n+\tfprintf (stderr, \" %d\", *++ssp1);\n+      fprintf (stderr, \"\\n\");\n+    }\n+#endif\n+\n+yyerrhandle:\n+\n+  yyn = yypact[yystate];\n+  if (yyn == YYFLAG)\n+    goto yyerrdefault;\n+\n+  yyn += YYTERROR;\n+  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)\n+    goto yyerrdefault;\n+\n+  yyn = yytable[yyn];\n+  if (yyn < 0)\n+    {\n+      if (yyn == YYFLAG)\n+\tgoto yyerrpop;\n+      yyn = -yyn;\n+      goto yyreduce;\n+    }\n+  else if (yyn == 0)\n+    goto yyerrpop;\n+\n+  if (yyn == YYFINAL)\n+    YYACCEPT;\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Shifting error token, \");\n+#endif\n+\n+  *++yyvsp = yylval;\n+#ifdef YYLSP_NEEDED\n+  *++yylsp = yylloc;\n+#endif\n+\n+  yystate = yyn;\n+  goto yynewstate;\n+}\n+#line 117 \"bi-parser.y\"\n+\n+\n+static struct node *\n+makenode (s)\n+     char *s;\n+{\n+  struct node *n;\n+\n+  n = (struct node *) malloc (sizeof (struct node));\n+  n->text = s;\n+  n->next = NULL;\n+  return n;\n+}\n+\n+static struct variation *\n+makevar (name, inputs, outputs, literals)\n+     char *name;\n+     struct node *inputs, *outputs, *literals;\n+{\n+  struct variation *v;\n+\n+  v = (struct variation *) malloc (sizeof (struct variation));\n+  v->name = name;\n+  v->code = ndefs++;\n+  v->inputs = inputs;\n+  v->outputs = outputs;\n+  v->literals = literals;\n+  v->next = NULL;\n+  return v;\n+}\n+\n+static struct def *\n+makedef (name, template, vars)\n+     char *name, *template;\n+     struct variation *vars;\n+{\n+  struct def *d;\n+\n+  d = (struct def *) malloc (sizeof (struct def));\n+  d->basename = name;\n+  d->template = template;\n+  d->variations = vars;\n+  d->next = NULL;\n+  return d;\n+}\n+\n+void\n+yyerror (s)\n+     char *s;\n+{\n+  fprintf (stderr, \"syntax error in input\\n\");\n+  exit (FATAL_EXIT_CODE);\n+}"}, {"sha": "5beb8628f0818a15e0165d139125486e6b43eb00", "filename": "gcc/bi-parser.h", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fbi-parser.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fbi-parser.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbi-parser.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,12 @@\n+typedef union\n+{\n+  char *string;\n+  struct def *def;\n+  struct variation *variation;\n+  struct node *node;\n+} YYSTYPE;\n+#define\tDEFOP\t258\n+#define\tSTRING\t259\n+\n+\n+extern YYSTYPE yylval;"}, {"sha": "b556d0825f1fd7e4a25b262165e15e03746f249f", "filename": "gcc/c-decl.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -4339,7 +4339,7 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \n   /* Long double is a special combination.  */\n \n-  if ((specbits & 1 << (int) RID_LONG)\n+  if ((specbits & 1 << (int) RID_LONG) && ! longlong\n       && TYPE_MAIN_VARIANT (type) == double_type_node)\n     {\n       specbits &= ~ (1 << (int) RID_LONG);\n@@ -4353,22 +4353,31 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n     {\n       int ok = 0;\n \n-      if (TREE_CODE (type) != INTEGER_TYPE)\n-\terror (\"long, short, signed or unsigned invalid for `%s'\", name);\n-      else if ((specbits & 1 << (int) RID_LONG)\n-\t       && (specbits & 1 << (int) RID_SHORT))\n-\terror (\"long and short specified together for `%s'\", name);\n+      if ((specbits & 1 << (int) RID_LONG)\n+\t  && (specbits & 1 << (int) RID_SHORT))\n+\terror (\"both long and short specified for `%s'\", name);\n       else if (((specbits & 1 << (int) RID_LONG)\n \t\t|| (specbits & 1 << (int) RID_SHORT))\n \t       && explicit_char)\n \terror (\"long or short specified with char for `%s'\", name);\n       else if (((specbits & 1 << (int) RID_LONG)\n \t\t|| (specbits & 1 << (int) RID_SHORT))\n \t       && TREE_CODE (type) == REAL_TYPE)\n-\terror (\"long or short specified with floating type for `%s'\", name);\n+\t{\n+\t  static int already = 0;\n+\n+\t  error (\"long or short specified with floating type for `%s'\", name);\n+\t  if (! already && ! pedantic)\n+\t    {\n+\t      error (\"the only valid combination is `long double'\");\n+\t      already = 1;\n+\t    }\n+\t}\n       else if ((specbits & 1 << (int) RID_SIGNED)\n \t       && (specbits & 1 << (int) RID_UNSIGNED))\n-\terror (\"signed and unsigned given together for `%s'\", name);\n+\terror (\"both signed and unsigned specified for `%s'\", name);\n+      else if (TREE_CODE (type) != INTEGER_TYPE)\n+\terror (\"long, short, signed or unsigned invalid for `%s'\", name);\n       else\n \t{\n \t  ok = 1;"}, {"sha": "361b9d971df8114b79022661a36e9bb9e3b21492", "filename": "gcc/c-gperf.h", "status": "added", "additions": 186, "deletions": 0, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-gperf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-gperf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-gperf.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,186 @@\n+/* C code produced by gperf version 2.5 (GNU C++ version) */\n+/* Command-line: gperf -p -j1 -i 1 -g -o -t -G -N is_reserved_word -k1,3,$ ./c-parse.gperf  */\n+/* Command-line: gperf -p -j1 -i 1 -g -o -t -N is_reserved_word -k1,3,$ c-parse.gperf  */ \n+struct resword { char *name; short token; enum rid rid; };\n+\n+#define TOTAL_KEYWORDS 79\n+#define MIN_WORD_LENGTH 2\n+#define MAX_WORD_LENGTH 20\n+#define MIN_HASH_VALUE 10\n+#define MAX_HASH_VALUE 144\n+/* maximum key range = 135, duplicates = 0 */\n+\n+#ifdef __GNUC__\n+inline\n+#endif\n+static unsigned int\n+hash (str, len)\n+     register char *str;\n+     register int unsigned len;\n+{\n+  static unsigned char asso_values[] =\n+    {\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145,  25, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145, 145, 145, 145, 145, 145,\n+     145, 145, 145, 145, 145,   1, 145,  46,   8,  15,\n+      61,   6,  36,  48,   3,   5, 145,  18,  63,  25,\n+      29,  76,   1, 145,  13,   2,   1,  51,  37,   9,\n+       9,   1,   3, 145, 145, 145, 145, 145,\n+    };\n+  register int hval = len;\n+\n+  switch (hval)\n+    {\n+      default:\n+      case 3:\n+        hval += asso_values[str[2]];\n+      case 2:\n+      case 1:\n+        hval += asso_values[str[0]];\n+        break;\n+    }\n+  return hval + asso_values[str[len - 1]];\n+}\n+\n+static struct resword wordlist[] =\n+{\n+      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n+      {\"\",}, \n+      {\"int\",  TYPESPEC, RID_INT},\n+      {\"\",}, {\"\",}, \n+      {\"__typeof__\",  TYPEOF, NORID},\n+      {\"__signed__\",  TYPESPEC, RID_SIGNED},\n+      {\"__imag__\",  IMAGPART, NORID},\n+      {\"switch\",  SWITCH, NORID},\n+      {\"__inline__\",  SCSPEC, RID_INLINE},\n+      {\"else\",  ELSE, NORID},\n+      {\"__iterator__\",  SCSPEC, RID_ITERATOR},\n+      {\"__inline\",  SCSPEC, RID_INLINE},\n+      {\"__extension__\",  EXTENSION, NORID},\n+      {\"struct\",  STRUCT, NORID},\n+      {\"__real__\",  REALPART, NORID},\n+      {\"__const\",  TYPE_QUAL, RID_CONST},\n+      {\"while\",  WHILE, NORID},\n+      {\"__const__\",  TYPE_QUAL, RID_CONST},\n+      {\"case\",  CASE, NORID},\n+      {\"__complex__\",  TYPESPEC, RID_COMPLEX},\n+      {\"__iterator\",  SCSPEC, RID_ITERATOR},\n+      {\"bycopy\",  TYPE_QUAL, RID_BYCOPY},\n+      {\"\",}, {\"\",}, {\"\",}, \n+      {\"__complex\",  TYPESPEC, RID_COMPLEX},\n+      {\"\",}, \n+      {\"in\",  TYPE_QUAL, RID_IN},\n+      {\"break\",  BREAK, NORID},\n+      {\"@defs\",  DEFS, NORID},\n+      {\"\",}, {\"\",}, {\"\",}, \n+      {\"extern\",  SCSPEC, RID_EXTERN},\n+      {\"if\",  IF, NORID},\n+      {\"typeof\",  TYPEOF, NORID},\n+      {\"typedef\",  SCSPEC, RID_TYPEDEF},\n+      {\"__typeof\",  TYPEOF, NORID},\n+      {\"sizeof\",  SIZEOF, NORID},\n+      {\"\",}, \n+      {\"return\",  RETURN, NORID},\n+      {\"const\",  TYPE_QUAL, RID_CONST},\n+      {\"__volatile__\",  TYPE_QUAL, RID_VOLATILE},\n+      {\"@private\",  PRIVATE, NORID},\n+      {\"@selector\",  SELECTOR, NORID},\n+      {\"__volatile\",  TYPE_QUAL, RID_VOLATILE},\n+      {\"__asm__\",  ASM_KEYWORD, NORID},\n+      {\"\",}, {\"\",}, \n+      {\"continue\",  CONTINUE, NORID},\n+      {\"__alignof__\",  ALIGNOF, NORID},\n+      {\"__imag\",  IMAGPART, NORID},\n+      {\"__attribute__\",  ATTRIBUTE, NORID},\n+      {\"\",}, {\"\",}, \n+      {\"__attribute\",  ATTRIBUTE, NORID},\n+      {\"for\",  FOR, NORID},\n+      {\"\",}, \n+      {\"@encode\",  ENCODE, NORID},\n+      {\"id\",  OBJECTNAME, RID_ID},\n+      {\"static\",  SCSPEC, RID_STATIC},\n+      {\"@interface\",  INTERFACE, NORID},\n+      {\"\",}, \n+      {\"__signed\",  TYPESPEC, RID_SIGNED},\n+      {\"\",}, \n+      {\"__label__\",  LABEL, NORID},\n+      {\"\",}, {\"\",}, \n+      {\"__asm\",  ASM_KEYWORD, NORID},\n+      {\"char\",  TYPESPEC, RID_CHAR},\n+      {\"\",}, \n+      {\"inline\",  SCSPEC, RID_INLINE},\n+      {\"out\",  TYPE_QUAL, RID_OUT},\n+      {\"register\",  SCSPEC, RID_REGISTER},\n+      {\"__real\",  REALPART, NORID},\n+      {\"short\",  TYPESPEC, RID_SHORT},\n+      {\"\",}, \n+      {\"enum\",  ENUM, NORID},\n+      {\"inout\",  TYPE_QUAL, RID_INOUT},\n+      {\"\",}, \n+      {\"oneway\",  TYPE_QUAL, RID_ONEWAY},\n+      {\"union\",  UNION, NORID},\n+      {\"\",}, \n+      {\"__alignof\",  ALIGNOF, NORID},\n+      {\"\",}, \n+      {\"@implementation\",  IMPLEMENTATION, NORID},\n+      {\"\",}, \n+      {\"@class\",  CLASS, NORID},\n+      {\"\",}, \n+      {\"@public\",  PUBLIC, NORID},\n+      {\"asm\",  ASM_KEYWORD, NORID},\n+      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n+      {\"default\",  DEFAULT, NORID},\n+      {\"\",}, \n+      {\"void\",  TYPESPEC, RID_VOID},\n+      {\"\",}, \n+      {\"@protected\",  PROTECTED, NORID},\n+      {\"@protocol\",  PROTOCOL, NORID},\n+      {\"\",}, {\"\",}, {\"\",}, \n+      {\"volatile\",  TYPE_QUAL, RID_VOLATILE},\n+      {\"\",}, {\"\",}, \n+      {\"signed\",  TYPESPEC, RID_SIGNED},\n+      {\"float\",  TYPESPEC, RID_FLOAT},\n+      {\"@end\",  END, NORID},\n+      {\"\",}, {\"\",}, \n+      {\"unsigned\",  TYPESPEC, RID_UNSIGNED},\n+      {\"@compatibility_alias\",  ALIAS, NORID},\n+      {\"double\",  TYPESPEC, RID_DOUBLE},\n+      {\"\",}, {\"\",}, \n+      {\"auto\",  SCSPEC, RID_AUTO},\n+      {\"\",}, \n+      {\"goto\",  GOTO, NORID},\n+      {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n+      {\"do\",  DO, NORID},\n+      {\"\",}, {\"\",}, {\"\",}, {\"\",}, \n+      {\"long\",  TYPESPEC, RID_LONG},\n+};\n+\n+#ifdef __GNUC__\n+inline\n+#endif\n+struct resword *\n+is_reserved_word (str, len)\n+     register char *str;\n+     register unsigned int len;\n+{\n+  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)\n+    {\n+      register int key = hash (str, len);\n+\n+      if (key <= MAX_HASH_VALUE && key >= 0)\n+        {\n+          register char *s = wordlist[key].name;\n+\n+          if (*s == *str && !strcmp (str + 1, s + 1))\n+            return &wordlist[key];\n+        }\n+    }\n+  return 0;\n+}"}, {"sha": "0c6f3d2b0b7c7a4ebec2413091c81808e3b659b8", "filename": "gcc/c-parse.c", "status": "added", "additions": 3859, "deletions": 0, "changes": 3859, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "21b3d0caf6bde1cb6480d6e6dede13aef3f38ccf", "filename": "gcc/c-parse.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,64 @@\n+typedef union {long itype; tree ttype; enum tree_code code;\n+\tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n+#define\tIDENTIFIER\t258\n+#define\tTYPENAME\t259\n+#define\tSCSPEC\t260\n+#define\tTYPESPEC\t261\n+#define\tTYPE_QUAL\t262\n+#define\tCONSTANT\t263\n+#define\tSTRING\t264\n+#define\tELLIPSIS\t265\n+#define\tSIZEOF\t266\n+#define\tENUM\t267\n+#define\tSTRUCT\t268\n+#define\tUNION\t269\n+#define\tIF\t270\n+#define\tELSE\t271\n+#define\tWHILE\t272\n+#define\tDO\t273\n+#define\tFOR\t274\n+#define\tSWITCH\t275\n+#define\tCASE\t276\n+#define\tDEFAULT\t277\n+#define\tBREAK\t278\n+#define\tCONTINUE\t279\n+#define\tRETURN\t280\n+#define\tGOTO\t281\n+#define\tASM_KEYWORD\t282\n+#define\tTYPEOF\t283\n+#define\tALIGNOF\t284\n+#define\tATTRIBUTE\t285\n+#define\tEXTENSION\t286\n+#define\tLABEL\t287\n+#define\tREALPART\t288\n+#define\tIMAGPART\t289\n+#define\tASSIGN\t290\n+#define\tOROR\t291\n+#define\tANDAND\t292\n+#define\tEQCOMPARE\t293\n+#define\tARITHCOMPARE\t294\n+#define\tLSHIFT\t295\n+#define\tRSHIFT\t296\n+#define\tUNARY\t297\n+#define\tPLUSPLUS\t298\n+#define\tMINUSMINUS\t299\n+#define\tHYPERUNARY\t300\n+#define\tPOINTSAT\t301\n+#define\tINTERFACE\t302\n+#define\tIMPLEMENTATION\t303\n+#define\tEND\t304\n+#define\tSELECTOR\t305\n+#define\tDEFS\t306\n+#define\tENCODE\t307\n+#define\tCLASSNAME\t308\n+#define\tPUBLIC\t309\n+#define\tPRIVATE\t310\n+#define\tPROTECTED\t311\n+#define\tPROTOCOL\t312\n+#define\tOBJECTNAME\t313\n+#define\tCLASS\t314\n+#define\tALIAS\t315\n+#define\tOBJC_STRING\t316\n+\n+\n+extern YYSTYPE yylval;"}, {"sha": "fd2b0f94a08264880f9fb83afa352a969f3495bf", "filename": "gcc/c-parse.y", "status": "added", "additions": 2176, "deletions": 0, "changes": 2176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,2176 @@\n+/*WARNING: This file is automatically generated!*/\n+/* YACC parser for C syntax and for Objective C.  -*-c-*-\n+   Copyright (C) 1987, 88, 89, 92-6, 1997 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This file defines the grammar of C and that of Objective C.\n+   ifobjc ... end ifobjc  conditionals contain code for Objective C only.\n+   ifc ... end ifc  conditionals contain code for C only.\n+   Sed commands in Makefile.in are used to convert this file into\n+   c-parse.y and into objc-parse.y.  */\n+\n+/* To whomever it may concern: I have heard that such a thing was once\n+   written by AT&T, but I have never seen it.  */\n+\n+%expect 46\n+\n+/* These are the 23 conflicts you should get in parse.output;\n+   the state numbers may vary if minor changes in the grammar are made.\n+\n+State 42 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n+State 44 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 103 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 110 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n+State 111 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 115 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 132 contains 1 shift/reduce conflict.  (See comment at component_decl.)\n+State 180 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTE.)\n+State 194 contains 2 shift/reduce conflict.  (Four ways to parse this.)\n+State 202 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 214 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 220 contains 1 shift/reduce conflict.  (Two ways to recover from error.)\n+State 304 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n+State 335 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n+State 347 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTES.)\n+State 352 contains 1 shift/reduce conflict.  (Two ways to parse ATTRIBUTES.)\n+State 383 contains 2 shift/reduce conflicts.  (Four ways to parse this.)\n+State 434 contains 2 shift/reduce conflicts.  (Four ways to parse this.)  */\n+\n+\n+%{\n+#include <stdio.h>\n+#include <errno.h>\n+#include <setjmp.h>\n+\n+#include \"config.h\"\n+#include \"tree.h\"\n+#include \"input.h\"\n+#include \"c-lex.h\"\n+#include \"c-tree.h\"\n+#include \"flags.h\"\n+\n+#ifdef MULTIBYTE_CHARS\n+#include <stdlib.h>\n+#include <locale.h>\n+#endif\n+\n+\n+/* Since parsers are distinct for each language, put the language string\n+   definition here.  */\n+char *language_string = \"GNU C\";\n+\n+#ifndef errno\n+extern int errno;\n+#endif\n+\n+void yyerror ();\n+\n+/* Like YYERROR but do call yyerror.  */\n+#define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n+\n+/* Cause the `yydebug' variable to be defined.  */\n+#define YYDEBUG 1\n+%}\n+\n+%start program\n+\n+%union {long itype; tree ttype; enum tree_code code;\n+\tchar *filename; int lineno; int ends_in_label; }\n+\n+/* All identifiers that are not reserved words\n+   and are not declared typedefs in the current block */\n+%token IDENTIFIER\n+\n+/* All identifiers that are declared typedefs in the current block.\n+   In some contexts, they are treated just like IDENTIFIER,\n+   but they can also serve as typespecs in declarations.  */\n+%token TYPENAME\n+\n+/* Reserved words that specify storage class.\n+   yylval contains an IDENTIFIER_NODE which indicates which one.  */\n+%token SCSPEC\n+\n+/* Reserved words that specify type.\n+   yylval contains an IDENTIFIER_NODE which indicates which one.  */\n+%token TYPESPEC\n+\n+/* Reserved words that qualify type: \"const\" or \"volatile\".\n+   yylval contains an IDENTIFIER_NODE which indicates which one.  */\n+%token TYPE_QUAL\n+\n+/* Character or numeric constants.\n+   yylval is the node for the constant.  */\n+%token CONSTANT\n+\n+/* String constants in raw form.\n+   yylval is a STRING_CST node.  */\n+%token STRING\n+\n+/* \"...\", used for functions with variable arglists.  */\n+%token ELLIPSIS\n+\n+/* the reserved words */\n+/* SCO include files test \"ASM\", so use something else. */\n+%token SIZEOF ENUM STRUCT UNION IF ELSE WHILE DO FOR SWITCH CASE DEFAULT\n+%token BREAK CONTINUE RETURN GOTO ASM_KEYWORD TYPEOF ALIGNOF\n+%token ATTRIBUTE EXTENSION LABEL\n+%token REALPART IMAGPART\n+\n+/* Add precedence rules to solve dangling else s/r conflict */\n+%nonassoc IF\n+%nonassoc ELSE\n+\n+/* Define the operator tokens and their precedences.\n+   The value is an integer because, if used, it is the tree code\n+   to use in the expression made from the operator.  */\n+\n+%right <code> ASSIGN '='\n+%right <code> '?' ':'\n+%left <code> OROR\n+%left <code> ANDAND\n+%left <code> '|'\n+%left <code> '^'\n+%left <code> '&'\n+%left <code> EQCOMPARE\n+%left <code> ARITHCOMPARE\n+%left <code> LSHIFT RSHIFT\n+%left <code> '+' '-'\n+%left <code> '*' '/' '%'\n+%right <code> UNARY PLUSPLUS MINUSMINUS\n+%left HYPERUNARY\n+%left <code> POINTSAT '.' '(' '['\n+\n+/* The Objective-C keywords.  These are included in C and in\n+   Objective C, so that the token codes are the same in both.  */\n+%token INTERFACE IMPLEMENTATION END SELECTOR DEFS ENCODE\n+%token CLASSNAME PUBLIC PRIVATE PROTECTED PROTOCOL OBJECTNAME CLASS ALIAS\n+\n+/* Objective-C string constants in raw form.\n+   yylval is an OBJC_STRING_CST node.  */\n+%token OBJC_STRING\n+\n+\n+%type <code> unop\n+\n+%type <ttype> identifier IDENTIFIER TYPENAME CONSTANT expr nonnull_exprlist exprlist\n+%type <ttype> expr_no_commas cast_expr unary_expr primary string STRING\n+%type <ttype> typed_declspecs reserved_declspecs\n+%type <ttype> typed_typespecs reserved_typespecquals\n+%type <ttype> declmods typespec typespecqual_reserved\n+%type <ttype> typed_declspecs_no_prefix_attr reserved_declspecs_no_prefix_attr\n+%type <ttype> declmods_no_prefix_attr\n+%type <ttype> SCSPEC TYPESPEC TYPE_QUAL nonempty_type_quals maybe_type_qual\n+%type <ttype> initdecls notype_initdecls initdcl notype_initdcl\n+%type <ttype> init maybeasm\n+%type <ttype> asm_operands nonnull_asm_operands asm_operand asm_clobbers\n+%type <ttype> maybe_attribute attributes attribute attribute_list attrib\n+%type <ttype> any_word\n+\n+%type <ttype> compstmt\n+\n+%type <ttype> declarator\n+%type <ttype> notype_declarator after_type_declarator\n+%type <ttype> parm_declarator\n+\n+%type <ttype> structsp component_decl_list component_decl_list2\n+%type <ttype> component_decl components component_declarator\n+%type <ttype> enumlist enumerator\n+%type <ttype> typename absdcl absdcl1 type_quals\n+%type <ttype> xexpr parms parm identifiers\n+\n+%type <ttype> parmlist parmlist_1 parmlist_2\n+%type <ttype> parmlist_or_identifiers parmlist_or_identifiers_1\n+%type <ttype> identifiers_or_typenames\n+\n+%type <itype> setspecs\n+\n+%type <ends_in_label> lineno_stmt_or_label lineno_stmt_or_labels stmt_or_label\n+\n+%type <filename> save_filename\n+%type <lineno> save_lineno\n+\f\n+\f\n+%{\n+/* Number of statements (loosely speaking) seen so far.  */\n+static int stmt_count;\n+\n+/* Input file and line number of the end of the body of last simple_if;\n+   used by the stmt-rule immediately after simple_if returns.  */\n+static char *if_stmt_file;\n+static int if_stmt_line;\n+\n+/* List of types and structure classes of the current declaration.  */\n+static tree current_declspecs = NULL_TREE;\n+static tree prefix_attributes = NULL_TREE;\n+\n+/* Stack of saved values of current_declspecs and prefix_attributes.  */\n+static tree declspec_stack;\n+\n+/* 1 if we explained undeclared var errors.  */\n+static int undeclared_variable_notice;\n+\n+\n+/* Tell yyparse how to print a token's value, if yydebug is set.  */\n+\n+#define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n+extern void yyprint ();\n+%}\n+\f\n+%%\n+program: /* empty */\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids an empty source file\");\n+\t\t  finish_file ();\n+\t\t}\n+\t| extdefs\n+\t\t{\n+\t\t  /* In case there were missing closebraces,\n+\t\t     get us back to the global binding level.  */\n+\t\t  while (! global_bindings_p ())\n+\t\t    poplevel (0, 0, 0);\n+\t\t  finish_file ();\n+\t\t}\n+\t;\n+\n+/* the reason for the strange actions in this rule\n+ is so that notype_initdecls when reached via datadef\n+ can find a valid list of type and sc specs in $0. */\n+\n+extdefs:\n+\t{$<ttype>$ = NULL_TREE; } extdef\n+\t| extdefs {$<ttype>$ = NULL_TREE; } extdef\n+\t;\n+\n+extdef:\n+\tfndef\n+\t| datadef\n+\t| ASM_KEYWORD '(' expr ')' ';'\n+\t\t{ STRIP_NOPS ($3);\n+\t\t  if ((TREE_CODE ($3) == ADDR_EXPR\n+\t\t       && TREE_CODE (TREE_OPERAND ($3, 0)) == STRING_CST)\n+\t\t      || TREE_CODE ($3) == STRING_CST)\n+\t\t    assemble_asm ($3);\n+\t\t  else\n+\t\t    error (\"argument of `asm' is not a constant string\"); }\n+\t| extension extdef\n+\t\t{ pedantic = $<itype>1; }\n+\t;\n+\n+datadef:\n+\t  setspecs notype_initdecls ';'\n+\t\t{ if (pedantic)\n+\t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n+\t\t  else if (!flag_traditional)\n+\t\t    warning (\"data definition has no type or storage class\"); \n+\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($1); }\n+        | declmods setspecs notype_initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2);  }\n+        | declmods ';'\n+\t  { pedwarn (\"empty declaration\"); }\n+\t| typed_declspecs ';'\n+\t  { shadow_tag ($1); }\n+\t| error ';'\n+\t| error '}'\n+\t| ';'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); }\n+\t;\n+\f\n+fndef:\n+\t  typed_declspecs setspecs declarator\n+\t\t{ if (! start_function (current_declspecs, $3,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n+\t\t    YYERROR1;\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+\t  compstmt_or_error\n+\t\t{ finish_function (0); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs declarator error\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_declarator\n+\t\t{ if (! start_function (current_declspecs, $3,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n+\t\t    YYERROR1;\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+\t  compstmt_or_error\n+\t\t{ finish_function (0); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_declarator error\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| setspecs notype_declarator\n+\t\t{ if (! start_function (NULL_TREE, $2,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n+\t\t    YYERROR1;\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+\t  compstmt_or_error\n+\t\t{ finish_function (0); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($1); }\n+\t| setspecs notype_declarator error\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($1); }\n+\t;\n+\n+identifier:\n+\tIDENTIFIER\n+\t| TYPENAME\n+\t;\n+\n+unop:     '&'\n+\t\t{ $$ = ADDR_EXPR; }\n+\t| '-'\n+\t\t{ $$ = NEGATE_EXPR; }\n+\t| '+'\n+\t\t{ $$ = CONVERT_EXPR; }\n+\t| PLUSPLUS\n+\t\t{ $$ = PREINCREMENT_EXPR; }\n+\t| MINUSMINUS\n+\t\t{ $$ = PREDECREMENT_EXPR; }\n+\t| '~'\n+\t\t{ $$ = BIT_NOT_EXPR; }\n+\t| '!'\n+\t\t{ $$ = TRUTH_NOT_EXPR; }\n+\t;\n+\n+expr:\tnonnull_exprlist\n+\t\t{ $$ = build_compound_expr ($1); }\n+\t;\n+\n+exprlist:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| nonnull_exprlist\n+\t;\n+\n+nonnull_exprlist:\n+\texpr_no_commas\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| nonnull_exprlist ',' expr_no_commas\n+\t\t{ chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+unary_expr:\n+\tprimary\n+\t| '*' cast_expr   %prec UNARY\n+\t\t{ $$ = build_indirect_ref ($2, \"unary *\"); }\n+\t/* __extension__ turns off -pedantic for following primary.  */\n+\t| extension cast_expr\t  %prec UNARY\n+\t\t{ $$ = $2;\n+\t\t  pedantic = $<itype>1; }\n+\t| unop cast_expr  %prec UNARY\n+\t\t{ $$ = build_unary_op ($1, $2, 0);\n+\t\t  overflow_warning ($$); }\n+\t/* Refer to the address of a label as a pointer.  */\n+\t| ANDAND identifier\n+\t\t{ tree label = lookup_label ($2);\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids `&&'\");\n+\t\t  if (label == 0)\n+\t\t    $$ = null_pointer_node;\n+\t\t  else\n+\t\t    {\n+\t\t      TREE_USED (label) = 1;\n+\t\t      $$ = build1 (ADDR_EXPR, ptr_type_node, label);\n+\t\t      TREE_CONSTANT ($$) = 1;\n+\t\t    }\n+\t\t}\n+/* This seems to be impossible on some machines, so let's turn it off.\n+   You can use __builtin_next_arg to find the anonymous stack args.\n+\t| '&' ELLIPSIS\n+\t\t{ tree types = TYPE_ARG_TYPES (TREE_TYPE (current_function_decl));\n+\t\t  $$ = error_mark_node;\n+\t\t  if (TREE_VALUE (tree_last (types)) == void_type_node)\n+\t\t    error (\"`&...' used in function with fixed number of arguments\");\n+\t\t  else\n+\t\t    {\n+\t\t      if (pedantic)\n+\t\t\tpedwarn (\"ANSI C forbids `&...'\");\n+\t\t      $$ = tree_last (DECL_ARGUMENTS (current_function_decl));\n+\t\t      $$ = build_unary_op (ADDR_EXPR, $$, 0);\n+\t\t    } }\n+*/\n+\t| sizeof unary_expr  %prec UNARY\n+\t\t{ skip_evaluation--;\n+\t\t  if (TREE_CODE ($2) == COMPONENT_REF\n+\t\t      && DECL_BIT_FIELD (TREE_OPERAND ($2, 1)))\n+\t\t    error (\"`sizeof' applied to a bit-field\");\n+\t\t  $$ = c_sizeof (TREE_TYPE ($2)); }\n+\t| sizeof '(' typename ')'  %prec HYPERUNARY\n+\t\t{ skip_evaluation--;\n+\t\t  $$ = c_sizeof (groktypename ($3)); }\n+\t| alignof unary_expr  %prec UNARY\n+\t\t{ skip_evaluation--;\n+\t\t  $$ = c_alignof_expr ($2); }\n+\t| alignof '(' typename ')'  %prec HYPERUNARY\n+\t\t{ skip_evaluation--;\n+\t\t  $$ = c_alignof (groktypename ($3)); }\n+\t| REALPART cast_expr %prec UNARY\n+\t\t{ $$ = build_unary_op (REALPART_EXPR, $2, 0); }\n+\t| IMAGPART cast_expr %prec UNARY\n+\t\t{ $$ = build_unary_op (IMAGPART_EXPR, $2, 0); }\n+\t;\n+\n+sizeof:\n+\tSIZEOF { skip_evaluation++; }\n+\t;\n+\n+alignof:\n+\tALIGNOF { skip_evaluation++; }\n+\t;\n+\n+cast_expr:\n+\tunary_expr\n+\t| '(' typename ')' cast_expr  %prec UNARY\n+\t\t{ tree type = groktypename ($2);\n+\t\t  $$ = build_c_cast (type, $4); }\n+\t| '(' typename ')' '{' \n+\t\t{ start_init (NULL_TREE, NULL, 0);\n+\t\t  $2 = groktypename ($2);\n+\t\t  really_start_incremental_init ($2); }\n+\t  initlist_maybe_comma '}'  %prec UNARY\n+\t\t{ char *name;\n+\t\t  tree result = pop_init_level (0);\n+\t\t  tree type = $2;\n+\t\t  finish_init ();\n+\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids constructor expressions\");\n+\t\t  if (TYPE_NAME (type) != 0)\n+\t\t    {\n+\t\t      if (TREE_CODE (TYPE_NAME (type)) == IDENTIFIER_NODE)\n+\t\t\tname = IDENTIFIER_POINTER (TYPE_NAME (type));\n+\t\t      else\n+\t\t\tname = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type)));\n+\t\t    }\n+\t\t  else\n+\t\t    name = \"\";\n+\t\t  $$ = result;\n+\t\t  if (TREE_CODE (type) == ARRAY_TYPE && TYPE_SIZE (type) == 0)\n+\t\t    {\n+\t\t      int failure = complete_array_type (type, $$, 1);\n+\t\t      if (failure)\n+\t\t\tabort ();\n+\t\t    }\n+\t\t}\n+\t;\n+\n+expr_no_commas:\n+\t  cast_expr\n+\t| expr_no_commas '+' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '-' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '*' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '/' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '%' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas LSHIFT expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas RSHIFT expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas ARITHCOMPARE expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas EQCOMPARE expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '&' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '|' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '^' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas ANDAND\n+\t\t{ $1 = truthvalue_conversion (default_conversion ($1));\n+\t\t  skip_evaluation += $1 == boolean_false_node; }\n+\t  expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_false_node;\n+\t\t  $$ = parser_build_binary_op (TRUTH_ANDIF_EXPR, $1, $4); }\n+\t| expr_no_commas OROR\n+\t\t{ $1 = truthvalue_conversion (default_conversion ($1));\n+\t\t  skip_evaluation += $1 == boolean_true_node; }\n+\t  expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_true_node;\n+\t\t  $$ = parser_build_binary_op (TRUTH_ORIF_EXPR, $1, $4); }\n+\t| expr_no_commas '?'\n+\t\t{ $1 = truthvalue_conversion (default_conversion ($1));\n+\t\t  skip_evaluation += $1 == boolean_false_node; }\n+          expr ':'\n+\t\t{ skip_evaluation += (($1 == boolean_true_node)\n+\t\t\t\t      - ($1 == boolean_false_node)); }\n+\t  expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_true_node;\n+\t\t  $$ = build_conditional_expr ($1, $4, $7); }\n+\t| expr_no_commas '?'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n+\t\t  /* Make sure first operand is calculated only once.  */\n+\t\t  $<ttype>2 = save_expr ($1);\n+\t\t  $1 = truthvalue_conversion (default_conversion ($<ttype>2));\n+\t\t  skip_evaluation += $1 == boolean_true_node; }\n+\t  ':' expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_true_node;\n+\t\t  $$ = build_conditional_expr ($1, $<ttype>2, $5); }\n+\t| expr_no_commas '=' expr_no_commas\n+\t\t{ $$ = build_modify_expr ($1, NOP_EXPR, $3);\n+\t\t  C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR); }\n+\t| expr_no_commas ASSIGN expr_no_commas\n+\t\t{ $$ = build_modify_expr ($1, $2, $3);\n+\t\t  /* This inhibits warnings in truthvalue_conversion.  */\n+\t\t  C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK); }\n+\t;\n+\n+primary:\n+\tIDENTIFIER\n+\t\t{\n+\t\t  $$ = lastiddecl;\n+\t\t  if (!$$ || $$ == error_mark_node)\n+\t\t    {\n+\t\t      if (yychar == YYEMPTY)\n+\t\t\tyychar = YYLEX;\n+\t\t      if (yychar == '(')\n+\t\t\t{\n+\t\t\t    {\n+\t\t\t      /* Ordinary implicit function declaration.  */\n+\t\t\t      $$ = implicitly_declare ($1);\n+\t\t\t      assemble_external ($$);\n+\t\t\t      TREE_USED ($$) = 1;\n+\t\t\t    }\n+\t\t\t}\n+\t\t      else if (current_function_decl == 0)\n+\t\t\t{\n+\t\t\t  error (\"`%s' undeclared here (not in a function)\",\n+\t\t\t\t IDENTIFIER_POINTER ($1));\n+\t\t\t  $$ = error_mark_node;\n+\t\t\t}\n+\t\t      else\n+\t\t\t{\n+\t\t\t    {\n+\t\t\t      if (IDENTIFIER_GLOBAL_VALUE ($1) != error_mark_node\n+\t\t\t\t  || IDENTIFIER_ERROR_LOCUS ($1) != current_function_decl)\n+\t\t\t\t{\n+\t\t\t\t  error (\"`%s' undeclared (first use this function)\",\n+\t\t\t\t\t IDENTIFIER_POINTER ($1));\n+\n+\t\t\t\t  if (! undeclared_variable_notice)\n+\t\t\t\t    {\n+\t\t\t\t      error (\"(Each undeclared identifier is reported only once\");\n+\t\t\t\t      error (\"for each function it appears in.)\");\n+\t\t\t\t      undeclared_variable_notice = 1;\n+\t\t\t\t    }\n+\t\t\t\t}\n+\t\t\t      $$ = error_mark_node;\n+\t\t\t      /* Prevent repeated error messages.  */\n+\t\t\t      IDENTIFIER_GLOBAL_VALUE ($1) = error_mark_node;\n+\t\t\t      IDENTIFIER_ERROR_LOCUS ($1) = current_function_decl;\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n+\t\t  else if (TREE_TYPE ($$) == error_mark_node)\n+\t\t    $$ = error_mark_node;\n+\t\t  else if (C_DECL_ANTICIPATED ($$))\n+\t\t    {\n+\t\t      /* The first time we see a build-in function used,\n+\t\t\t if it has not been declared.  */\n+\t\t      C_DECL_ANTICIPATED ($$) = 0;\n+\t\t      if (yychar == YYEMPTY)\n+\t\t\tyychar = YYLEX;\n+\t\t      if (yychar == '(')\n+\t\t\t{\n+\t\t\t  /* Omit the implicit declaration we\n+\t\t\t     would ordinarily do, so we don't lose\n+\t\t\t     the actual built in type.\n+\t\t\t     But print a diagnostic for the mismatch.  */\n+\t\t\t    if (TREE_CODE ($$) != FUNCTION_DECL)\n+\t\t\t      error (\"`%s' implicitly declared as function\",\n+\t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE ($$)))\n+\t\t\t\t    != TYPE_MODE (integer_type_node))\n+\t\t\t\t   && (TREE_TYPE (TREE_TYPE ($$))\n+\t\t\t\t       != void_type_node))\n+\t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n+\t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\t\t\t  /* If it really returns void, change that to int.  */\n+\t\t\t  if (TREE_TYPE (TREE_TYPE ($$)) == void_type_node)\n+\t\t\t    TREE_TYPE ($$)\n+\t\t\t      = build_function_type (integer_type_node,\n+\t\t\t\t\t\t     TYPE_ARG_TYPES (TREE_TYPE ($$)));\n+\t\t\t}\n+\t\t      else\n+\t\t\tpedwarn (\"built-in function `%s' used without declaration\",\n+\t\t\t\t IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\n+\t\t      /* Do what we would ordinarily do when a fn is used.  */\n+\t\t      assemble_external ($$);\n+\t\t      TREE_USED ($$) = 1;\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      assemble_external ($$);\n+\t\t      TREE_USED ($$) = 1;\n+\t\t    }\n+\n+\t\t  if (TREE_CODE ($$) == CONST_DECL)\n+\t\t    {\n+\t\t      $$ = DECL_INITIAL ($$);\n+\t\t      /* This is to prevent an enum whose value is 0\n+\t\t\t from being considered a null pointer constant.  */\n+\t\t      $$ = build1 (NOP_EXPR, TREE_TYPE ($$), $$);\n+\t\t      TREE_CONSTANT ($$) = 1;\n+\t\t    }\n+\t\t}\n+\t| CONSTANT\n+\t| string\n+\t\t{ $$ = combine_strings ($1); }\n+\t| '(' expr ')'\n+\t\t{ char class = TREE_CODE_CLASS (TREE_CODE ($2));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE ($2, ERROR_MARK);\n+\t\t  $$ = $2; }\n+\t| '(' error ')'\n+\t\t{ $$ = error_mark_node; }\n+\t| '('\n+\t\t{ if (current_function_decl == 0)\n+\t\t    {\n+\t\t      error (\"braced-group within expression allowed only inside a function\");\n+\t\t      YYERROR;\n+\t\t    }\n+\t\t  /* We must force a BLOCK for this level\n+\t\t     so that, if it is not expanded later,\n+\t\t     there is a way to turn off the entire subtree of blocks\n+\t\t     that are contained in it.  */\n+\t\t  keep_next_level ();\n+\t\t  push_iterator_stack ();\n+\t\t  push_label_level ();\n+\t\t  $<ttype>$ = expand_start_stmt_expr (); }\n+\t  compstmt ')'\n+\t\t{ tree rtl_exp;\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n+\t\t  pop_iterator_stack ();\n+\t\t  pop_label_level ();\n+\t\t  rtl_exp = expand_end_stmt_expr ($<ttype>2);\n+\t\t  /* The statements have side effects, so the group does.  */\n+\t\t  TREE_SIDE_EFFECTS (rtl_exp) = 1;\n+\n+\t\t  if (TREE_CODE ($3) == BLOCK)\n+\t\t    {\n+\t\t      /* Make a BIND_EXPR for the BLOCK already made.  */\n+\t\t      $$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n+\t\t\t\t  NULL_TREE, rtl_exp, $3);\n+\t\t      /* Remove the block from the tree at this point.\n+\t\t\t It gets put back at the proper place\n+\t\t\t when the BIND_EXPR is expanded.  */\n+\t\t      delete_block ($3);\n+\t\t    }\n+\t\t  else\n+\t\t    $$ = $3;\n+\t\t}\n+\t| primary '(' exprlist ')'   %prec '.'\n+\t\t{ $$ = build_function_call ($1, $3); }\n+\t| primary '[' expr ']'   %prec '.'\n+\t\t{ $$ = build_array_ref ($1, $3); }\n+\t| primary '.' identifier\n+\t\t{\n+\t\t    $$ = build_component_ref ($1, $3);\n+\t\t}\n+\t| primary POINTSAT identifier\n+\t\t{\n+                  tree expr = build_indirect_ref ($1, \"->\");\n+\n+                    $$ = build_component_ref (expr, $3);\n+\t\t}\n+\t| primary PLUSPLUS\n+\t\t{ $$ = build_unary_op (POSTINCREMENT_EXPR, $1, 0); }\n+\t| primary MINUSMINUS\n+\t\t{ $$ = build_unary_op (POSTDECREMENT_EXPR, $1, 0); }\n+\t;\n+\n+/* Produces a STRING_CST with perhaps more STRING_CSTs chained onto it.  */\n+string:\n+\t  STRING\n+\t| string STRING\n+\t\t{ $$ = chainon ($1, $2); }\n+\t;\n+\n+\n+old_style_parm_decls:\n+\t/* empty */\n+\t| datadecls\n+\t| datadecls ELLIPSIS\n+\t\t/* ... is used here to indicate a varargs function.  */\n+\t\t{ c_mark_varargs ();\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); }\n+\t;\n+\n+/* The following are analogous to lineno_decl, decls and decl\n+   except that they do not allow nested functions.\n+   They are used for old-style parm decls.  */\n+lineno_datadecl:\n+\t  save_filename save_lineno datadecl\n+\t\t{ }\n+\t;\n+\n+datadecls:\n+\tlineno_datadecl\n+\t| errstmt\n+\t| datadecls lineno_datadecl\n+\t| lineno_datadecl errstmt\n+\t;\n+\n+/* We don't allow prefix attributes here because they cause reduce/reduce\n+   conflicts: we can't know whether we're parsing a function decl with\n+   attribute suffix, or function defn with attribute prefix on first old\n+   style parm.  */\n+datadecl:\n+\ttyped_declspecs_no_prefix_attr setspecs initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods_no_prefix_attr setspecs notype_initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\t\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs_no_prefix_attr ';'\n+\t\t{ shadow_tag_warned ($1, 1);\n+\t\t  pedwarn (\"empty declaration\"); }\n+\t| declmods_no_prefix_attr ';'\n+\t\t{ pedwarn (\"empty declaration\"); }\n+\t;\n+\n+/* This combination which saves a lineno before a decl\n+   is the normal thing to use, rather than decl itself.\n+   This is to avoid shift/reduce conflicts in contexts\n+   where statement labels are allowed.  */\n+lineno_decl:\n+\t  save_filename save_lineno decl\n+\t\t{ }\n+\t;\n+\n+decls:\n+\tlineno_decl\n+\t| errstmt\n+\t| decls lineno_decl\n+\t| lineno_decl errstmt\n+\t;\n+\n+/* records the type and storage class specs to use for processing\n+   the declarators that follow.\n+   Maintains a stack of outer-level values of current_declspecs,\n+   for the sake of parm declarations nested in function declarators.  */\n+setspecs: /* empty */\n+\t\t{ $$ = suspend_momentary ();\n+\t\t  pending_xref_error ();\n+\t\t  declspec_stack = tree_cons (prefix_attributes,\n+\t\t\t\t\t      current_declspecs,\n+\t\t\t\t\t      declspec_stack);\n+\t\t  split_specs_attrs ($<ttype>0,\n+\t\t\t\t     &current_declspecs, &prefix_attributes); }\n+\t;\n+\n+/* ??? Yuck.  See after_type_declarator.  */\n+setattrs: /* empty */\n+\t\t{ prefix_attributes = chainon (prefix_attributes, $<ttype>0); }\n+\t;\n+\n+decl:\n+\ttyped_declspecs setspecs initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs nested_function\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_nested_function\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs ';'\n+\t\t{ shadow_tag ($1); }\n+\t| declmods ';'\n+\t\t{ pedwarn (\"empty declaration\"); }\n+\t| extension decl\n+\t\t{ pedantic = $<itype>1; }\n+\t;\n+\n+/* Declspecs which contain at least one type specifier or typedef name.\n+   (Just `const' or `volatile' is not enough.)\n+   A typedef'd name following these is taken as a name to be declared.\n+   Declspecs have a non-NULL TREE_VALUE, attributes do not.  */\n+\n+typed_declspecs:\n+\t  typespec reserved_declspecs\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, $2); }\n+\t| declmods typespec reserved_declspecs\n+\t\t{ $$ = chainon ($3, tree_cons (NULL_TREE, $2, $1)); }\n+\t;\n+\n+reserved_declspecs:  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| reserved_declspecs typespecqual_reserved\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t| reserved_declspecs SCSPEC\n+\t\t{ if (extra_warnings)\n+\t\t    warning (\"`%s' is not at beginning of declaration\",\n+\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t| reserved_declspecs attributes\n+\t\t{ $$ = tree_cons ($2, NULL_TREE, $1); }\n+\t;\n+\n+typed_declspecs_no_prefix_attr:\n+\t  typespec reserved_declspecs_no_prefix_attr\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, $2); }\n+\t| declmods_no_prefix_attr typespec reserved_declspecs_no_prefix_attr\n+\t\t{ $$ = chainon ($3, tree_cons (NULL_TREE, $2, $1)); }\n+\t;\n+\n+reserved_declspecs_no_prefix_attr:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| reserved_declspecs_no_prefix_attr typespecqual_reserved\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t| reserved_declspecs_no_prefix_attr SCSPEC\n+\t\t{ if (extra_warnings)\n+\t\t    warning (\"`%s' is not at beginning of declaration\",\n+\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+/* List of just storage classes, type modifiers, and prefix attributes.\n+   A declaration can start with just this, but then it cannot be used\n+   to redeclare a typedef-name.\n+   Declspecs have a non-NULL TREE_VALUE, attributes do not.  */\n+\n+declmods:\n+\t  declmods_no_prefix_attr\n+\t\t{ $$ = $1; }\n+\t| attributes\n+\t\t{ $$ = tree_cons ($1, NULL_TREE, NULL_TREE); }\n+\t| declmods declmods_no_prefix_attr\n+\t\t{ $$ = chainon ($2, $1); }\n+\t| declmods attributes\n+\t\t{ $$ = tree_cons ($2, NULL_TREE, $1); }\n+\t;\n+\n+declmods_no_prefix_attr:\n+\t  TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE);\n+\t\t  TREE_STATIC ($$) = 1; }\n+\t| SCSPEC\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE); }\n+\t| declmods_no_prefix_attr TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1);\n+\t\t  TREE_STATIC ($$) = 1; }\n+\t| declmods_no_prefix_attr SCSPEC\n+\t\t{ if (extra_warnings && TREE_STATIC ($1))\n+\t\t    warning (\"`%s' is not at beginning of declaration\",\n+\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = tree_cons (NULL_TREE, $2, $1);\n+\t\t  TREE_STATIC ($$) = TREE_STATIC ($1); }\n+\t;\n+\n+\n+/* Used instead of declspecs where storage classes are not allowed\n+   (that is, for typenames and structure components).\n+   Don't accept a typedef-name if anything but a modifier precedes it.  */\n+\n+typed_typespecs:\n+\t  typespec reserved_typespecquals\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, $2); }\n+\t| nonempty_type_quals typespec reserved_typespecquals\n+\t\t{ $$ = chainon ($3, tree_cons (NULL_TREE, $2, $1)); }\n+\t;\n+\n+reserved_typespecquals:  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| reserved_typespecquals typespecqual_reserved\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+/* A typespec (but not a type qualifier).\n+   Once we have seen one of these in a declaration,\n+   if a typedef name appears then it is being redeclared.  */\n+\n+typespec: TYPESPEC\n+\t| structsp\n+\t| TYPENAME\n+\t\t{ /* For a typedef name, record the meaning, not the name.\n+\t\t     In case of `foo foo, bar;'.  */\n+\t\t  $$ = lookup_name ($1); }\n+\t| TYPEOF '(' expr ')'\n+\t\t{ $$ = TREE_TYPE ($3); }\n+\t| TYPEOF '(' typename ')'\n+\t\t{ $$ = groktypename ($3); }\n+\t;\n+\n+/* A typespec that is a reserved word, or a type qualifier.  */\n+\n+typespecqual_reserved: TYPESPEC\n+\t| TYPE_QUAL\n+\t| structsp\n+\t;\n+\n+initdecls:\n+\tinitdcl\n+\t| initdecls ',' initdcl\n+\t;\n+\n+notype_initdecls:\n+\tnotype_initdcl\n+\t| notype_initdecls ',' initdcl\n+\t;\n+\n+maybeasm:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| ASM_KEYWORD '(' string ')'\n+\t\t{ if (TREE_CHAIN ($3)) $3 = combine_strings ($3);\n+\t\t  $$ = $3;\n+\t\t}\n+\t;\n+\n+initdcl:\n+\t  declarator maybeasm maybe_attribute '='\n+\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1,\n+\t\t\t\t\t  $3, prefix_attributes);\n+\t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n+\t  init\n+/* Note how the declaration of the variable is in effect while its init is parsed! */\n+\t\t{ finish_init ();\n+\t\t  finish_decl ($<ttype>5, $6, $2); }\n+\t| declarator maybeasm maybe_attribute\n+\t\t{ tree d = start_decl ($1, current_declspecs, 0,\n+\t\t\t\t       $3, prefix_attributes);\n+\t\t  finish_decl (d, NULL_TREE, $2); \n+                }\n+\t;\n+\n+notype_initdcl:\n+\t  notype_declarator maybeasm maybe_attribute '='\n+\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1,\n+\t\t\t\t\t  $3, prefix_attributes);\n+\t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n+\t  init\n+/* Note how the declaration of the variable is in effect while its init is parsed! */\n+\t\t{ finish_init ();\n+\t\t  decl_attributes ($<ttype>5, $3, prefix_attributes);\n+\t\t  finish_decl ($<ttype>5, $6, $2); }\n+\t| notype_declarator maybeasm maybe_attribute\n+\t\t{ tree d = start_decl ($1, current_declspecs, 0,\n+\t\t\t\t       $3, prefix_attributes);\n+\t\t  finish_decl (d, NULL_TREE, $2); }\n+\t;\n+/* the * rules are dummies to accept the Apollo extended syntax\n+   so that the header files compile. */\n+maybe_attribute:\n+      /* empty */\n+  \t\t{ $$ = NULL_TREE; }\n+\t| attributes\n+\t\t{ $$ = $1; }\n+\t;\n+ \n+attributes:\n+      attribute\n+\t\t{ $$ = $1; }\n+\t| attributes attribute\n+\t\t{ $$ = chainon ($1, $2); }\n+\t;\n+\n+attribute:\n+      ATTRIBUTE '(' '(' attribute_list ')' ')'\n+\t\t{ $$ = $4; }\n+\t;\n+\n+attribute_list:\n+      attrib\n+\t\t{ $$ = $1; }\n+\t| attribute_list ',' attrib\n+\t\t{ $$ = chainon ($1, $3); }\n+\t;\n+ \n+attrib:\n+    /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| any_word\n+\t\t{ $$ = build_tree_list ($1, NULL_TREE); }\n+\t| any_word '(' IDENTIFIER ')'\n+\t\t{ $$ = build_tree_list ($1, build_tree_list (NULL_TREE, $3)); }\n+\t| any_word '(' IDENTIFIER ',' nonnull_exprlist ')'\n+\t\t{ $$ = build_tree_list ($1, tree_cons (NULL_TREE, $3, $5)); }\n+\t| any_word '(' exprlist ')'\n+\t\t{ $$ = build_tree_list ($1, $3); }\n+\t;\n+\n+/* This still leaves out most reserved keywords,\n+   shouldn't we include them?  */\n+\n+any_word:\n+\t  identifier\n+\t| SCSPEC\n+\t| TYPESPEC\n+\t| TYPE_QUAL\n+\t;\n+\f\n+/* Initializers.  `init' is the entry point.  */\n+\n+init:\n+\texpr_no_commas\n+\t| '{'\n+\t\t{ really_start_incremental_init (NULL_TREE);\n+\t\t  /* Note that the call to clear_momentary\n+\t\t     is in process_init_element.  */\n+\t\t  push_momentary (); }\n+\t  initlist_maybe_comma '}'\n+\t\t{ $$ = pop_init_level (0);\n+\t\t  if ($$ == error_mark_node\n+\t\t      && ! (yychar == STRING || yychar == CONSTANT))\n+\t\t    pop_momentary ();\n+\t\t  else\n+\t\t    pop_momentary_nofree (); }\n+\n+\t| error\n+\t\t{ $$ = error_mark_node; }\n+\t;\n+\n+/* `initlist_maybe_comma' is the guts of an initializer in braces.  */\n+initlist_maybe_comma:\n+\t  /* empty */\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); }\n+\t| initlist1 maybecomma\n+\t;\n+\n+initlist1:\n+\t  initelt\n+\t| initlist1 ',' initelt\n+\t;\n+\n+/* `initelt' is a single element of an initializer.\n+   It may use braces.  */\n+initelt:\n+\texpr_no_commas\n+\t\t{ process_init_element ($1); }\n+\t| '{' \n+\t\t{ push_init_level (0); }\n+\t  initlist_maybe_comma '}'\n+\t\t{ process_init_element (pop_init_level (0)); }\n+\t| error\n+\t/* These are for labeled elements.  The syntax for an array element\n+\t   initializer conflicts with the syntax for an Objective-C message,\n+\t   so don't include these productions in the Objective-C grammar.  */\n+\t| '[' expr_no_commas ELLIPSIS expr_no_commas ']' '='\n+\t\t{ set_init_index ($2, $4); }\n+\t  initelt\n+\t| '[' expr_no_commas ']' '='\n+\t\t{ set_init_index ($2, NULL_TREE); }\n+\t  initelt\n+\t| '[' expr_no_commas ']'\n+\t\t{ set_init_index ($2, NULL_TREE); }\n+\t  initelt\n+\t| identifier ':'\n+\t\t{ set_init_label ($1); }\n+\t  initelt\n+\t| '.' identifier '='\n+\t\t{ set_init_label ($2); }\n+\t  initelt\n+\t;\n+\f\n+nested_function:\n+\t  declarator\n+\t\t{ push_c_function_context ();\n+\t\t  if (! start_function (current_declspecs, $1,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n+\t\t    {\n+\t\t      pop_c_function_context ();\n+\t\t      YYERROR1;\n+\t\t    }\n+\t\t  reinit_parse_for_function (); }\n+\t   old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+/* This used to use compstmt_or_error.\n+   That caused a bug with input `f(g) int g {}',\n+   where the use of YYERROR1 above caused an error\n+   which then was handled by compstmt_or_error.\n+   There followed a repeated execution of that same rule,\n+   which called YYERROR1 again, and so on.  */\n+\t  compstmt\n+\t\t{ finish_function (1);\n+\t\t  pop_c_function_context (); }\n+\t;\n+\n+notype_nested_function:\n+\t  notype_declarator\n+\t\t{ push_c_function_context ();\n+\t\t  if (! start_function (current_declspecs, $1,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n+\t\t    {\n+\t\t      pop_c_function_context ();\n+\t\t      YYERROR1;\n+\t\t    }\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+/* This used to use compstmt_or_error.\n+   That caused a bug with input `f(g) int g {}',\n+   where the use of YYERROR1 above caused an error\n+   which then was handled by compstmt_or_error.\n+   There followed a repeated execution of that same rule,\n+   which called YYERROR1 again, and so on.  */\n+\t  compstmt\n+\t\t{ finish_function (1);\n+\t\t  pop_c_function_context (); }\n+\t;\n+\n+/* Any kind of declarator (thus, all declarators allowed\n+   after an explicit typespec).  */\n+\n+declarator:\n+\t  after_type_declarator\n+\t| notype_declarator\n+\t;\n+\n+/* A declarator that is allowed only after an explicit typespec.  */\n+\n+after_type_declarator:\n+\t  '(' after_type_declarator ')'\n+\t\t{ $$ = $2; }\n+\t| after_type_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| after_type_declarator '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+\t| after_type_declarator '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| after_type_declarator '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '*' type_quals after_type_declarator  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t/* ??? Yuck.  setattrs is a quick hack.  We can't use\n+\t   prefix_attributes because $1 only applies to this\n+\t   declarator.  We assume setspecs has already been done.\n+\t   setattrs also avoids 5 reduce/reduce conflicts (otherwise multiple\n+\t   attributes could be recognized here or in `attributes').  */\n+\t| attributes setattrs after_type_declarator\n+\t\t{ $$ = $3; }\n+\t| TYPENAME\n+\t;\n+\n+/* Kinds of declarator that can appear in a parameter list\n+   in addition to notype_declarator.  This is like after_type_declarator\n+   but does not allow a typedef name in parentheses as an identifier\n+   (because it would conflict with a function with that typedef as arg).  */\n+\n+parm_declarator:\n+\t  parm_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| parm_declarator '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+\t| parm_declarator '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| parm_declarator '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '*' type_quals parm_declarator  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t/* ??? Yuck.  setattrs is a quick hack.  We can't use\n+\t   prefix_attributes because $1 only applies to this\n+\t   declarator.  We assume setspecs has already been done.\n+\t   setattrs also avoids 5 reduce/reduce conflicts (otherwise multiple\n+\t   attributes could be recognized here or in `attributes').  */\n+\t| attributes setattrs parm_declarator\n+\t\t{ $$ = $3; }\n+\t| TYPENAME\n+\t;\n+\n+/* A declarator allowed whether or not there has been\n+   an explicit typespec.  These cannot redeclare a typedef-name.  */\n+\n+notype_declarator:\n+\t  notype_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| notype_declarator '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+\t| '(' notype_declarator ')'\n+\t\t{ $$ = $2; }\n+\t| '*' type_quals notype_declarator  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t| notype_declarator '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| notype_declarator '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t/* ??? Yuck.  setattrs is a quick hack.  We can't use\n+\t   prefix_attributes because $1 only applies to this\n+\t   declarator.  We assume setspecs has already been done.\n+\t   setattrs also avoids 5 reduce/reduce conflicts (otherwise multiple\n+\t   attributes could be recognized here or in `attributes').  */\n+\t| attributes setattrs notype_declarator\n+\t\t{ $$ = $3; }\n+\t| IDENTIFIER\n+\t;\n+\n+structsp:\n+\t  STRUCT identifier '{'\n+\t\t{ $$ = start_struct (RECORD_TYPE, $2);\n+\t\t  /* Start scope of tag before parsing components.  */\n+\t\t}\n+\t  component_decl_list '}' maybe_attribute \n+\t\t{ $$ = finish_struct ($<ttype>4, $5, $7); }\n+\t| STRUCT '{' component_decl_list '}' maybe_attribute\n+\t\t{ $$ = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n+\t\t\t\t      $3, $5);\n+\t\t}\n+\t| STRUCT identifier\n+\t\t{ $$ = xref_tag (RECORD_TYPE, $2); }\n+\t| UNION identifier '{'\n+\t\t{ $$ = start_struct (UNION_TYPE, $2); }\n+\t  component_decl_list '}' maybe_attribute\n+\t\t{ $$ = finish_struct ($<ttype>4, $5, $7); }\n+\t| UNION '{' component_decl_list '}' maybe_attribute\n+\t\t{ $$ = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n+\t\t\t\t      $3, $5);\n+\t\t}\n+\t| UNION identifier\n+\t\t{ $$ = xref_tag (UNION_TYPE, $2); }\n+\t| ENUM identifier '{'\n+\t\t{ $<itype>3 = suspend_momentary ();\n+\t\t  $$ = start_enum ($2); }\n+\t  enumlist maybecomma_warn '}' maybe_attribute\n+\t\t{ $$ = finish_enum ($<ttype>4, nreverse ($5), $8);\n+\t\t  resume_momentary ($<itype>3); }\n+\t| ENUM '{'\n+\t\t{ $<itype>2 = suspend_momentary ();\n+\t\t  $$ = start_enum (NULL_TREE); }\n+\t  enumlist maybecomma_warn '}' maybe_attribute\n+\t\t{ $$ = finish_enum ($<ttype>3, nreverse ($4), $7);\n+\t\t  resume_momentary ($<itype>2); }\n+\t| ENUM identifier\n+\t\t{ $$ = xref_tag (ENUMERAL_TYPE, $2); }\n+\t;\n+\n+maybecomma:\n+\t  /* empty */\n+\t| ','\n+\t;\n+\n+maybecomma_warn:\n+\t  /* empty */\n+\t| ','\n+\t\t{ if (pedantic) pedwarn (\"comma at end of enumerator list\"); }\n+\t;\n+\n+component_decl_list:\n+\t  component_decl_list2\n+\t\t{ $$ = $1; }\n+\t| component_decl_list2 component_decl\n+\t\t{ $$ = chainon ($1, $2);\n+\t\t  pedwarn (\"no semicolon at end of struct or union\"); }\n+\t;\n+\n+component_decl_list2:\t/* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| component_decl_list2 component_decl ';'\n+\t\t{ $$ = chainon ($1, $2); }\n+\t| component_decl_list2 ';'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"extra semicolon in struct or union specified\"); }\n+\t;\n+\n+/* There is a shift-reduce conflict here, because `components' may\n+   start with a `typename'.  It happens that shifting (the default resolution)\n+   does the right thing, because it treats the `typename' as part of\n+   a `typed_typespecs'.\n+\n+   It is possible that this same technique would allow the distinction\n+   between `notype_initdecls' and `initdecls' to be eliminated.\n+   But I am being cautious and not trying it.  */\n+\n+component_decl:\n+\t  typed_typespecs setspecs components\n+\t\t{ $$ = $3;\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_typespecs\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n+\t\t  shadow_tag($1);\n+\t\t  $$ = NULL_TREE; }\n+\t| nonempty_type_quals setspecs components\n+\t\t{ $$ = $3;\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| nonempty_type_quals\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n+\t\t  shadow_tag($1);\n+\t\t  $$ = NULL_TREE; }\n+\t| error\n+\t\t{ $$ = NULL_TREE; }\n+\t| extension component_decl\n+\t\t{ $$ = $2;\n+\t\t  pedantic = $<itype>1; }\n+\t;\n+\n+components:\n+\t  component_declarator\n+\t| components ',' component_declarator\n+\t\t{ $$ = chainon ($1, $3); }\n+\t;\n+\n+component_declarator:\n+\t  save_filename save_lineno declarator maybe_attribute\n+\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, NULL_TREE);\n+\t\t  decl_attributes ($$, $4, prefix_attributes); }\n+\t| save_filename save_lineno\n+\t  declarator ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, $5);\n+\t\t  decl_attributes ($$, $6, prefix_attributes); }\n+\t| save_filename save_lineno ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield ($1, $2, NULL_TREE, current_declspecs, $4);\n+\t\t  decl_attributes ($$, $5, prefix_attributes); }\n+\t;\n+\n+/* We chain the enumerators in reverse order.\n+   They are put in forward order where enumlist is used.\n+   (The order used to be significant, but no longer is so.\n+   However, we still maintain the order, just to be clean.)  */\n+\n+enumlist:\n+\t  enumerator\n+\t| enumlist ',' enumerator\n+\t\t{ if ($1 == error_mark_node)\n+\t\t    $$ = $1;\n+\t\t  else\n+\t\t    $$ = chainon ($3, $1); }\n+\t| error\n+\t\t{ $$ = error_mark_node; }\n+\t;\n+\n+\n+enumerator:\n+\t  identifier\n+\t\t{ $$ = build_enumerator ($1, NULL_TREE); }\n+\t| identifier '=' expr_no_commas\n+\t\t{ $$ = build_enumerator ($1, $3); }\n+\t;\n+\n+typename:\n+\ttyped_typespecs absdcl\n+\t\t{ $$ = build_tree_list ($1, $2); }\n+\t| nonempty_type_quals absdcl\n+\t\t{ $$ = build_tree_list ($1, $2); }\n+\t;\n+\n+absdcl:   /* an absolute declarator */\n+\t/* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| absdcl1\n+\t;\n+\n+nonempty_type_quals:\n+\t  TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE); }\n+\t| nonempty_type_quals TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+type_quals:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| type_quals TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+absdcl1:  /* a nonempty absolute declarator */\n+\t  '(' absdcl1 ')'\n+\t\t{ $$ = $2; }\n+\t  /* `(typedef)1' is `int'.  */\n+\t| '*' type_quals absdcl1  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t| '*' type_quals  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, NULL_TREE); }\n+\t| absdcl1 '(' parmlist  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+\t| absdcl1 '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| absdcl1 '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '(' parmlist  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, NULL_TREE, $2, NULL_TREE); }\n+\t| '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, NULL_TREE, $2); }\n+\t| '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); }\n+\t/* ??? It appears we have to support attributes here, however\n+\t   using prefix_attributes is wrong.  */\n+\t;\n+\n+/* at least one statement, the first of which parses without error.  */\n+/* stmts is used only after decls, so an invalid first statement\n+   is actually regarded as an invalid decl and part of the decls.  */\n+\n+stmts:\n+\tlineno_stmt_or_labels\n+\t\t{\n+\t\t  if (pedantic && $1)\n+\t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n+\t\t}\n+\t;\n+\n+lineno_stmt_or_labels:\n+\t  lineno_stmt_or_label\n+\t| lineno_stmt_or_labels lineno_stmt_or_label\n+\t\t{ $$ = $2; }\n+\t| lineno_stmt_or_labels errstmt\n+\t\t{ $$ = 0; }\n+\t;\n+\n+xstmts:\n+\t/* empty */\n+\t| stmts\n+\t;\n+\n+errstmt:  error ';'\n+\t;\n+\n+pushlevel:  /* empty */\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  pushlevel (0);\n+\t\t  clear_last_expr ();\n+\t\t  push_momentary ();\n+\t\t  expand_start_bindings (0);\n+\t\t}\n+\t;\n+\n+/* Read zero or more forward-declarations for labels\n+   that nested functions can jump to.  */\n+maybe_label_decls:\n+\t  /* empty */\n+\t| label_decls\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids label declarations\"); }\n+\t;\n+\n+label_decls:\n+\t  label_decl\n+\t| label_decls label_decl\n+\t;\n+\n+label_decl:\n+\t  LABEL identifiers_or_typenames ';'\n+\t\t{ tree link;\n+\t\t  for (link = $2; link; link = TREE_CHAIN (link))\n+\t\t    {\n+\t\t      tree label = shadow_label (TREE_VALUE (link));\n+\t\t      C_DECLARED_LABEL_FLAG (label) = 1;\n+\t\t      declare_nonlocal_label (label);\n+\t\t    }\n+\t\t}\n+\t;\n+\n+/* This is the body of a function definition.\n+   It causes syntax errors to ignore to the next openbrace.  */\n+compstmt_or_error:\n+\t  compstmt\n+\t\t{}\n+\t| error compstmt\n+\t;\n+\n+compstmt: '{' '}'\n+\t\t{ $$ = convert (void_type_node, integer_zero_node); }\n+\t| '{' pushlevel maybe_label_decls decls xstmts '}'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_end_bindings (getdecls (), 1, 0);\n+\t\t  $$ = poplevel (1, 1, 0);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t| '{' pushlevel maybe_label_decls error '}'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n+\t\t  $$ = poplevel (kept_level_p (), 0, 0);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t| '{' pushlevel maybe_label_decls stmts '}'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n+\t\t  $$ = poplevel (kept_level_p (), 0, 0);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t;\n+\n+/* Value is number of statements counted as of the closeparen.  */\n+simple_if:\n+\t  if_prefix lineno_labeled_stmt\n+/* Make sure expand_end_cond is run once\n+   for each call to expand_start_cond.\n+   Otherwise a crash is likely.  */\n+\t| if_prefix error\n+\t;\n+\n+if_prefix:\n+\t  IF '(' expr ')'\n+\t\t{ emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  expand_start_cond (truthvalue_conversion ($3), 0);\n+\t\t  $<itype>$ = stmt_count;\n+\t\t  if_stmt_file = $<filename>-1;\n+\t\t  if_stmt_line = $<lineno>0;\n+\t\t  position_after_white_space (); }\n+\t;\n+\n+/* This is a subroutine of stmt.\n+   It is used twice, once for valid DO statements\n+   and once for catching errors in parsing the end test.  */\n+do_stmt_start:\n+\t  DO\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* See comment in `while' alternative, above.  */\n+\t\t  emit_nop ();\n+\t\t  expand_start_loop_continue_elsewhere (1);\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt WHILE\n+\t\t{ expand_loop_continue_here (); }\n+\t;\n+\n+save_filename:\n+\t\t{ $$ = input_filename; }\n+\t;\n+\n+save_lineno:\n+\t\t{ $$ = lineno; }\n+\t;\n+\n+lineno_labeled_stmt:\n+\t  save_filename save_lineno stmt\n+\t\t{ }\n+/*\t| save_filename save_lineno error\n+\t\t{ }\n+*/\n+\t| save_filename save_lineno label lineno_labeled_stmt\n+\t\t{ }\n+\t;\n+\n+lineno_stmt_or_label:\n+\t  save_filename save_lineno stmt_or_label\n+\t\t{ $$ = $3; }\n+\t;\n+\n+stmt_or_label:\n+\t  stmt\n+\t\t{ $$ = 0; }\n+\t| label\n+\t\t{ $$ = 1; }\n+\t;\n+\n+/* Parse a single real statement, not including any labels.  */\n+stmt:\n+\t  compstmt\n+\t\t{ stmt_count++; }\n+        | all_iter_stmt \n+\t| expr ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+/* It appears that this should not be done--that a non-lvalue array\n+   shouldn't get an error if the value isn't used.\n+   Section 3.2.2.1 says that an array lvalue gets converted to a pointer\n+   if it appears as a top-level expression,\n+   but says nothing about non-lvalue arrays.  */\n+#if 0\n+\t\t  /* Call default_conversion to get an error\n+\t\t     on referring to a register array if pedantic.  */\n+\t\t  if (TREE_CODE (TREE_TYPE ($1)) == ARRAY_TYPE\n+\t\t      || TREE_CODE (TREE_TYPE ($1)) == FUNCTION_TYPE)\n+\t\t    $1 = default_conversion ($1);\n+#endif\n+\t\t  iterator_expand ($1);\n+\t\t  clear_momentary (); }\n+\t| simple_if ELSE\n+\t\t{ expand_start_else ();\n+\t\t  $<itype>1 = stmt_count;\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ expand_end_cond ();\n+\t\t  if (extra_warnings && stmt_count == $<itype>1)\n+\t\t    warning (\"empty body in an else-statement\"); }\n+\t| simple_if %prec IF\n+\t\t{ expand_end_cond ();\n+\t\t  /* This warning is here instead of in simple_if, because we\n+\t\t     do not want a warning if an empty if is followed by an\n+\t\t     else statement.  Increment stmt_count so we don't\n+\t\t     give a second error if this is a nested `if'.  */\n+\t\t  if (extra_warnings && stmt_count++ == $<itype>1)\n+\t\t    warning_with_file_and_line (if_stmt_file, if_stmt_line,\n+\t\t\t\t\t\t\"empty body in an if-statement\"); }\n+/* Make sure expand_end_cond is run once\n+   for each call to expand_start_cond.\n+   Otherwise a crash is likely.  */\n+\t| simple_if ELSE error\n+\t\t{ expand_end_cond (); }\n+\t| WHILE\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* The emit_nop used to come before emit_line_note,\n+\t\t     but that made the nop seem like part of the preceding line.\n+\t\t     And that was confusing when the preceding line was\n+\t\t     inside of an if statement and was not really executed.\n+\t\t     I think it ought to work to put the nop after the line number.\n+\t\t     We will see.  --rms, July 15, 1991.  */\n+\t\t  emit_nop (); }\n+\t  '(' expr ')'\n+\t\t{ /* Don't start the loop till we have succeeded\n+\t\t     in parsing the end test.  This is to make sure\n+\t\t     that we end every loop we start.  */\n+\t\t  expand_start_loop (1);\n+\t\t  emit_line_note (input_filename, lineno);\n+\t\t  expand_exit_loop_if_false (NULL_PTR,\n+\t\t\t\t\t     truthvalue_conversion ($4));\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ expand_end_loop (); }\n+\t| do_stmt_start\n+\t  '(' expr ')' ';'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_exit_loop_if_false (NULL_PTR,\n+\t\t\t\t\t     truthvalue_conversion ($3));\n+\t\t  expand_end_loop ();\n+\t\t  clear_momentary (); }\n+/* This rule is needed to make sure we end every loop we start.  */\n+\t| do_stmt_start error\n+\t\t{ expand_end_loop ();\n+\t\t  clear_momentary (); }\n+\t| FOR\n+\t  '(' xexpr ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* See comment in `while' alternative, above.  */\n+\t\t  emit_nop ();\n+\t\t  if ($3) c_expand_expr_stmt ($3);\n+\t\t  /* Next step is to call expand_start_loop_continue_elsewhere,\n+\t\t     but wait till after we parse the entire for (...).\n+\t\t     Otherwise, invalid input might cause us to call that\n+\t\t     fn without calling expand_end_loop.  */\n+\t\t}\n+\t  xexpr ';'\n+\t\t/* Can't emit now; wait till after expand_start_loop...  */\n+\t\t{ $<lineno>7 = lineno;\n+\t\t  $<filename>$ = input_filename; }\n+\t  xexpr ')'\n+\t\t{ \n+\t\t  /* Start the loop.  Doing this after parsing\n+\t\t     all the expressions ensures we will end the loop.  */\n+\t\t  expand_start_loop_continue_elsewhere (1);\n+\t\t  /* Emit the end-test, with a line number.  */\n+\t\t  emit_line_note ($<filename>8, $<lineno>7);\n+\t\t  if ($6)\n+\t\t    expand_exit_loop_if_false (NULL_PTR,\n+\t\t\t\t\t       truthvalue_conversion ($6));\n+\t\t  /* Don't let the tree nodes for $9 be discarded by\n+\t\t     clear_momentary during the parsing of the next stmt.  */\n+\t\t  push_momentary ();\n+\t\t  $<lineno>7 = lineno;\n+\t\t  $<filename>8 = input_filename;\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ /* Emit the increment expression, with a line number.  */\n+\t\t  emit_line_note ($<filename>8, $<lineno>7);\n+\t\t  expand_loop_continue_here ();\n+\t\t  if ($9)\n+\t\t    c_expand_expr_stmt ($9);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary ();\n+\t\t  expand_end_loop (); }\n+\t| SWITCH '(' expr ')'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_start_case ($3);\n+\t\t  /* Don't let the tree nodes for $3 be discarded by\n+\t\t     clear_momentary during the parsing of the next stmt.  */\n+\t\t  push_momentary ();\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ expand_end_case ($3);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t| BREAK ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  if ( ! expand_exit_something ())\n+\t\t    error (\"break statement not within loop or switch\"); }\n+\t| CONTINUE ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  if (! expand_continue_loop (NULL_PTR))\n+\t\t    error (\"continue statement not within a loop\"); }\n+\t| RETURN ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_return (NULL_TREE); }\n+\t| RETURN expr ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_return ($2); }\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  STRIP_NOPS ($4);\n+\t\t  if ((TREE_CODE ($4) == ADDR_EXPR\n+\t\t       && TREE_CODE (TREE_OPERAND ($4, 0)) == STRING_CST)\n+\t\t      || TREE_CODE ($4) == STRING_CST)\n+\t\t    expand_asm ($4);\n+\t\t  else\n+\t\t    error (\"argument of `asm' is not a constant string\"); }\n+\t/* This is the case with just output operands.  */\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_asm_operands ($4, $6, NULL_TREE, NULL_TREE,\n+\t\t\t\t\t $2 == ridpointers[(int)RID_VOLATILE],\n+\t\t\t\t\t input_filename, lineno); }\n+\t/* This is the case with input operands as well.  */\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_asm_operands ($4, $6, $8, NULL_TREE,\n+\t\t\t\t\t $2 == ridpointers[(int)RID_VOLATILE],\n+\t\t\t\t\t input_filename, lineno); }\n+\t/* This is the case with clobbered registers as well.  */\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':'\n+  \t  asm_operands ':' asm_clobbers ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_asm_operands ($4, $6, $8, $10,\n+\t\t\t\t\t $2 == ridpointers[(int)RID_VOLATILE],\n+\t\t\t\t\t input_filename, lineno); }\n+\t| GOTO identifier ';'\n+\t\t{ tree decl;\n+\t\t  stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  decl = lookup_label ($2);\n+\t\t  if (decl != 0)\n+\t\t    {\n+\t\t      TREE_USED (decl) = 1;\n+\t\t      expand_goto (decl);\n+\t\t    }\n+\t\t}\n+\t| GOTO '*' expr ';'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n+\t\t  stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  expand_computed_goto (convert (ptr_type_node, $3)); }\n+\t| ';'\n+\t;\n+\n+all_iter_stmt:\n+\t  all_iter_stmt_simple\n+/*\t| all_iter_stmt_with_decl */\n+\t;\n+\n+all_iter_stmt_simple:\n+\t  FOR '(' primary ')' \n+\t  {\n+\t    /* The value returned by this action is  */\n+\t    /*      1 if everything is OK */ \n+\t    /*      0 in case of error or already bound iterator */\n+\n+\t    $<itype>$ = 0;\n+\t    if (TREE_CODE ($3) != VAR_DECL)\n+\t      error (\"invalid `for (ITERATOR)' syntax\");\n+\t    else if (! ITERATOR_P ($3))\n+\t      error (\"`%s' is not an iterator\",\n+\t\t     IDENTIFIER_POINTER (DECL_NAME ($3)));\n+\t    else if (ITERATOR_BOUND_P ($3))\n+\t      error (\"`for (%s)' inside expansion of same iterator\",\n+\t\t     IDENTIFIER_POINTER (DECL_NAME ($3)));\n+\t    else\n+\t      {\n+\t\t$<itype>$ = 1;\n+\t\titerator_for_loop_start ($3);\n+\t      }\n+\t  }\n+\t  lineno_labeled_stmt\n+\t  {\n+\t    if ($<itype>5)\n+\t      iterator_for_loop_end ($3);\n+\t  }\n+\n+/*  This really should allow any kind of declaration,\n+    for generality.  Fix it before turning it back on.\n+\n+all_iter_stmt_with_decl:\n+\t  FOR '(' ITERATOR pushlevel setspecs iterator_spec ')' \n+\t  {\n+*/\t    /* The value returned by this action is  */\n+\t    /*      1 if everything is OK */ \n+\t    /*      0 in case of error or already bound iterator */\n+/*\n+\t    iterator_for_loop_start ($6);\n+\t  }\n+\t  lineno_labeled_stmt\n+\t  {\n+\t    iterator_for_loop_end ($6);\n+\t    emit_line_note (input_filename, lineno);\n+\t    expand_end_bindings (getdecls (), 1, 0);\n+\t    $<ttype>$ = poplevel (1, 1, 0);\n+\t    if (yychar == CONSTANT || yychar == STRING)\n+\t      pop_momentary_nofree ();\n+\t    else\n+\t      pop_momentary ();\t    \n+\t  }\n+*/\n+\n+/* Any kind of label, including jump labels and case labels.\n+   ANSI C accepts labels only before statements, but we allow them\n+   also at the end of a compound statement.  */\n+\n+label:\t  CASE expr_no_commas ':'\n+\t\t{ register tree value = check_case_value ($2);\n+\t\t  register tree label\n+\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n+\n+\t\t  stmt_count++;\n+\n+\t\t  if (value != error_mark_node)\n+\t\t    {\n+\t\t      tree duplicate;\n+\t\t      int success = pushcase (value, convert_and_check,\n+\t\t\t\t\t      label, &duplicate);\n+\t\t      if (success == 1)\n+\t\t\terror (\"case label not within a switch statement\");\n+\t\t      else if (success == 2)\n+\t\t\t{\n+\t\t\t  error (\"duplicate case value\");\n+\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n+\t\t\t}\n+\t\t      else if (success == 3)\n+\t\t\twarning (\"case value out of range\");\n+\t\t      else if (success == 5)\n+\t\t\terror (\"case label within scope of cleanup or variable array\");\n+\t\t    }\n+\t\t  position_after_white_space (); }\n+\t| CASE expr_no_commas ELLIPSIS expr_no_commas ':'\n+\t\t{ register tree value1 = check_case_value ($2);\n+\t\t  register tree value2 = check_case_value ($4);\n+\t\t  register tree label\n+\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n+\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids case ranges\");\n+\t\t  stmt_count++;\n+\n+\t\t  if (value1 != error_mark_node && value2 != error_mark_node)\n+\t\t    {\n+\t\t      tree duplicate;\n+\t\t      int success = pushcase_range (value1, value2,\n+\t\t\t\t\t\t    convert_and_check, label,\n+\t\t\t\t\t\t    &duplicate);\n+\t\t      if (success == 1)\n+\t\t\terror (\"case label not within a switch statement\");\n+\t\t      else if (success == 2)\n+\t\t\t{\n+\t\t\t  error (\"duplicate case value\");\n+\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n+\t\t\t}\n+\t\t      else if (success == 3)\n+\t\t\twarning (\"case value out of range\");\n+\t\t      else if (success == 4)\n+\t\t\twarning (\"empty case range\");\n+\t\t      else if (success == 5)\n+\t\t\terror (\"case label within scope of cleanup or variable array\");\n+\t\t    }\n+\t\t  position_after_white_space (); }\n+\t| DEFAULT ':'\n+\t\t{\n+\t\t  tree duplicate;\n+\t\t  register tree label\n+\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n+\t\t  int success = pushcase (NULL_TREE, 0, label, &duplicate);\n+\t\t  stmt_count++;\n+\t\t  if (success == 1)\n+\t\t    error (\"default label not within a switch statement\");\n+\t\t  else if (success == 2)\n+\t\t    {\n+\t\t      error (\"multiple default labels in one switch\");\n+\t\t      error_with_decl (duplicate, \"this is the first default label\");\n+\t\t    }\n+\t\t  position_after_white_space (); }\n+\t| identifier ':'\n+\t\t{ tree label = define_label (input_filename, lineno, $1);\n+\t\t  stmt_count++;\n+\t\t  emit_nop ();\n+\t\t  if (label)\n+\t\t    expand_label (label);\n+\t\t  position_after_white_space (); }\n+\t;\n+\n+/* Either a type-qualifier or nothing.  First thing in an `asm' statement.  */\n+\n+maybe_type_qual:\n+\t/* empty */\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  $$ = NULL_TREE; }\n+\t| TYPE_QUAL\n+\t\t{ emit_line_note (input_filename, lineno); }\n+\t;\n+\n+xexpr:\n+\t/* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| expr\n+\t;\n+\n+/* These are the operands other than the first string and colon\n+   in  asm (\"addextend %2,%1\": \"=dm\" (x), \"0\" (y), \"g\" (*x))  */\n+asm_operands: /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| nonnull_asm_operands\n+\t;\n+\n+nonnull_asm_operands:\n+\t  asm_operand\n+\t| nonnull_asm_operands ',' asm_operand\n+\t\t{ $$ = chainon ($1, $3); }\n+\t;\n+\n+asm_operand:\n+\t  STRING '(' expr ')'\n+\t\t{ $$ = build_tree_list ($1, $3); }\n+\t;\n+\n+asm_clobbers:\n+\t  string\n+\t\t{ $$ = tree_cons (NULL_TREE, combine_strings ($1), NULL_TREE); }\n+\t| asm_clobbers ',' string\n+\t\t{ $$ = tree_cons (NULL_TREE, combine_strings ($3), $1); }\n+\t;\n+\f\n+/* This is what appears inside the parens in a function declarator.\n+   Its value is a list of ..._TYPE nodes.  */\n+parmlist:\n+\t\t{ pushlevel (0);\n+\t\t  clear_parm_order ();\n+\t\t  declare_parm_level (0); }\n+\t  parmlist_1\n+\t\t{ $$ = $2;\n+\t\t  parmlist_tags_warning ();\n+\t\t  poplevel (0, 0, 0); }\n+\t;\n+\n+parmlist_1:\n+\t  parmlist_2 ')'\n+\t| parms ';'\n+\t\t{ tree parm;\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n+\t\t  /* Mark the forward decls as such.  */\n+\t\t  for (parm = getdecls (); parm; parm = TREE_CHAIN (parm))\n+\t\t    TREE_ASM_WRITTEN (parm) = 1;\n+\t\t  clear_parm_order (); }\n+\t  parmlist_1\n+\t\t{ $$ = $4; }\n+\t| error ')'\n+\t\t{ $$ = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); }\n+\t;\n+\n+/* This is what appears inside the parens in a function declarator.\n+   Is value is represented in the format that grokdeclarator expects.  */\n+parmlist_2:  /* empty */\n+\t\t{ $$ = get_parm_info (0); }\n+\t| ELLIPSIS\n+\t\t{ $$ = get_parm_info (0);\n+\t\t  /* Gcc used to allow this as an extension.  However, it does\n+\t\t     not work for all targets, and thus has been disabled.\n+\t\t     Also, since func (...) and func () are indistinguishable,\n+\t\t     it caused problems with the code in expand_builtin which\n+\t\t     tries to verify that BUILT_IN_NEXT_ARG is being used\n+\t\t     correctly.  */\n+\t\t  error (\"ANSI C requires a named argument before `...'\");\n+\t\t}\n+\t| parms\n+\t\t{ $$ = get_parm_info (1); }\n+\t| parms ',' ELLIPSIS\n+\t\t{ $$ = get_parm_info (0); }\n+\t;\n+\n+parms:\n+\tparm\n+\t\t{ push_parm_decl ($1); }\n+\t| parms ',' parm\n+\t\t{ push_parm_decl ($3); }\n+\t;\n+\n+/* A single parameter declaration or parameter type name,\n+   as found in a parmlist.  */\n+parm:\n+\t  typed_declspecs setspecs parm_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs notype_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4)); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs absdcl maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2);  }\n+\n+\t| declmods setspecs absdcl maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2);  }\n+\t;\n+\n+/* This is used in a function definition\n+   where either a parmlist or an identifier list is ok.\n+   Its value is a list of ..._TYPE nodes or a list of identifiers.  */\n+parmlist_or_identifiers:\n+\t\t{ pushlevel (0);\n+\t\t  clear_parm_order ();\n+\t\t  declare_parm_level (1); }\n+\t  parmlist_or_identifiers_1\n+\t\t{ $$ = $2;\n+\t\t  parmlist_tags_warning ();\n+\t\t  poplevel (0, 0, 0); }\n+\t;\n+\n+parmlist_or_identifiers_1:\n+\t  parmlist_1\n+\t| identifiers ')'\n+\t\t{ tree t;\n+\t\t  for (t = $1; t; t = TREE_CHAIN (t))\n+\t\t    if (TREE_VALUE (t) == NULL_TREE)\n+\t\t      error (\"`...' in old-style identifier list\");\n+\t\t  $$ = tree_cons (NULL_TREE, NULL_TREE, $1); }\n+\t;\n+\n+/* A nonempty list of identifiers.  */\n+identifiers:\n+\tIDENTIFIER\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| identifiers ',' IDENTIFIER\n+\t\t{ $$ = chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+/* A nonempty list of identifiers, including typenames.  */\n+identifiers_or_typenames:\n+\tidentifier\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| identifiers_or_typenames ',' identifier\n+\t\t{ $$ = chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+extension:\n+\tEXTENSION\n+\t\t{ $<itype>$ = pedantic;\n+\t\t  pedantic = 0; }\n+\t;\n+\f\n+%%"}, {"sha": "84eb19ede54e7dc3f00945720738475107e01f62", "filename": "gcc/cccp.1", "status": "added", "additions": 674, "deletions": 0, "changes": 674, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcccp.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcccp.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.1?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,674 @@\n+.\\\" Copyright (c) 1991, 1992, 1993 Free Software Foundation       \\-*-Text-*-\n+.\\\" See section COPYING for conditions for redistribution\n+.TH cpp 1 \"30apr1993\" \"GNU Tools\" \"GNU Tools\"\n+.SH NAME\n+cccp, cpp \\- The GNU C-Compatible Compiler Preprocessor.\n+.SH SYNOPSIS\n+.hy 0\n+.na\n+.TP\n+.B cccp\n+.RB \"[\\|\" \\-$ \"\\|]\"\n+.RB \"[\\|\" \\-A \\c\n+.I predicate\\c\n+.RB [ (\\c\n+.I value\\c\n+.BR ) ]\\|]\n+.RB \"[\\|\" \\-C \"\\|]\" \n+.RB \"[\\|\" \\-D \\c\n+.I name\\c\n+.RB [ =\\c\n+.I definition\\c\n+\\&]\\|]\n+.RB \"[\\|\" \\-dD \"\\|]\"\n+.RB \"[\\|\" \\-dM \"\\|]\"\n+.RB \"[\\|\" \"\\-I\\ \"\\c\n+.I directory\\c\n+\\&\\|]\n+.RB \"[\\|\" \\-H \"\\|]\"\n+.RB \"[\\|\" \\-I\\- \"\\|]\" \n+.RB \"[\\|\" \"\\-imacros\\ \"\\c\n+.I file\\c\n+\\&\\|]\n+.RB \"[\\|\" \"\\-include\\ \"\\c\n+.I file\\c\n+\\&\\|]\n+.RB \"[\\|\" \"\\-idirafter\\ \"\\c\n+.I dir\\c\n+\\&\\|]\n+.RB \"[\\|\" \"\\-iprefix\\ \"\\c\n+.I prefix\\c\n+\\&\\|]\n+.RB \"[\\|\" \"\\-iwithprefix\\ \"\\c\n+.I dir\\c\n+\\&\\|]\n+.RB \"[\\|\" \\-lang\\-c \"\\|]\"\n+.RB \"[\\|\" \\-lang\\-c++ \"\\|]\"\n+.RB \"[\\|\" \\-lang\\-objc \"\\|]\"\n+.RB \"[\\|\" \\-lang\\-objc++ \"\\|]\"\n+.RB \"[\\|\" \\-lint \"\\|]\"\n+.RB \"[\\|\" \\-M\\  [ \\-MG \"\\|]]\"\n+.RB \"[\\|\" \\-MM\\  [ \\-MG \"\\|]]\"\n+.RB \"[\\|\" \\-MD\\  \\c\n+.I file\\ \\c\n+\\&\\|]\n+.RB \"[\\|\" \\-MMD\\  \\c\n+.I file\\ \\c\n+\\&\\|]\n+.RB \"[\\|\" \\-nostdinc \"\\|]\" \n+.RB \"[\\|\" \\-nostdinc++ \"\\|]\" \n+.RB \"[\\|\" \\-P \"\\|]\" \n+.RB \"[\\|\" \\-pedantic \"\\|]\"\n+.RB \"[\\|\" \\-pedantic\\-errors \"\\|]\"\n+.RB \"[\\|\" \\-traditional \"\\|]\" \n+.RB \"[\\|\" \\-trigraphs \"\\|]\" \n+.RB \"[\\|\" \\-U \\c\n+.I name\\c\n+\\&\\|]\n+.RB \"[\\|\" \\-undef \"\\|]\"\n+.RB \"[\\|\" \\-Wtrigraphs \"\\|]\"\n+.RB \"[\\|\" \\-Wcomment \"\\|]\"\n+.RB \"[\\|\" \\-Wall \"\\|]\"\n+.RB \"[\\|\" \\-Wtraditional \"\\|]\"\n+.br\n+.RB \"[\\|\" \\c\n+.I infile\\c\n+.RB | \\- \"\\|]\" \n+.RB \"[\\|\" \\c\n+.I outfile\\c\n+.RB | \\- \"\\|]\"  \n+.ad b\n+.hy 1\n+.SH DESCRIPTION\n+The C preprocessor is a \\c\n+.I macro processor\\c\n+\\& that is used automatically by\n+the C compiler to transform your program before actual compilation.  It is\n+called a macro processor because it allows you to define \\c\n+.I macros\\c\n+\\&,\n+which are brief abbreviations for longer constructs.\n+\n+The C preprocessor provides four separate facilities that you can use as\n+you see fit:\n+.TP\n+\\(bu\n+Inclusion of header files.  These are files of declarations that can be\n+substituted into your program.\n+.TP\n+\\(bu\n+Macro expansion.  You can define \\c\n+.I macros\\c\n+\\&, which are abbreviations\n+for arbitrary fragments of C code, and then the C preprocessor will\n+replace the macros with their definitions throughout the program.\n+.TP\n+\\(bu\n+Conditional compilation.  Using special preprocessing directives, you\n+can include or exclude parts of the program according to various\n+conditions.\n+.TP\n+\\(bu\n+Line control.  If you use a program to combine or rearrange source files into\n+an intermediate file which is then compiled, you can use line control\n+to inform the compiler of where each source line originally came from.\n+.PP\n+C preprocessors vary in some details.  For a full explanation of the\n+GNU C preprocessor, see the\n+.B info\n+file `\\|\\c\n+.B cpp.info\\c\n+\\&\\|', or the manual\n+.I The C Preprocessor\\c\n+\\&.  Both of these are built from the same documentation source file, `\\|\\c\n+.B cpp.texinfo\\c\n+\\&\\|'.  The GNU C\n+preprocessor provides a superset of the features of ANSI Standard C.\n+\n+ANSI Standard C requires the rejection of many harmless constructs commonly\n+used by today's C programs.  Such incompatibility would be inconvenient for\n+users, so the GNU C preprocessor is configured to accept these constructs\n+by default.  Strictly speaking, to get ANSI Standard C, you must use the\n+options `\\|\\c\n+.B \\-trigraphs\\c\n+\\&\\|', `\\|\\c\n+.B \\-undef\\c\n+\\&\\|' and `\\|\\c\n+.B \\-pedantic\\c\n+\\&\\|', but in\n+practice the consequences of having strict ANSI Standard C make it\n+undesirable to do this.  \n+\n+Most often when you use the C preprocessor you will not have to invoke it\n+explicitly: the C compiler will do so automatically.  However, the\n+preprocessor is sometimes useful individually.\n+\n+When you call the preprocessor individually, either name\n+(\\c\n+.B cpp\\c\n+\\& or \\c\n+.B cccp\\c\n+\\&) will do\\(em\\&they are completely synonymous.\n+\n+The C preprocessor expects two file names as arguments, \\c\n+.I infile\\c\n+\\& and\n+\\c\n+.I outfile\\c\n+\\&.  The preprocessor reads \\c\n+.I infile\\c\n+\\& together with any other\n+files it specifies with `\\|\\c\n+.B #include\\c\n+\\&\\|'.  All the output generated by the\n+combined input files is written in \\c\n+.I outfile\\c\n+\\&.\n+\n+Either \\c\n+.I infile\\c\n+\\& or \\c\n+.I outfile\\c\n+\\& may be `\\|\\c\n+.B \\-\\c\n+\\&\\|', which as \\c\n+.I infile\\c\n+\\&\n+means to read from standard input and as \\c\n+.I outfile\\c\n+\\& means to write to\n+standard output.  Also, if \\c\n+.I outfile\\c\n+\\& or both file names are omitted,\n+the standard output and standard input are used for the omitted file names.\n+.SH OPTIONS\n+Here is a table of command options accepted by the C preprocessor.  \n+These options can also be given when compiling a C program; they are\n+passed along automatically to the preprocessor when it is invoked by\n+the compiler. \n+.TP\n+.B \\-P\n+Inhibit generation of `\\|\\c\n+.B #\\c\n+\\&\\|'-lines with line-number information in\n+the output from the preprocessor.  This might be\n+useful when running the preprocessor on something that is not C code\n+and will be sent to a program which might be confused by the\n+`\\|\\c\n+.B #\\c\n+\\&\\|'-lines.\n+.TP\n+.B \\-C\n+Do not discard comments: pass them through to the output file.\n+Comments appearing in arguments of a macro call will be copied to the\n+output before the expansion of the macro call.\n+.TP\n+.B \\-traditional\n+Try to imitate the behavior of old-fashioned C, as opposed to ANSI C.\n+.TP\n+.B \\-trigraphs\n+Process ANSI standard trigraph sequences.  These are three-character\n+sequences, all starting with `\\|\\c\n+.B ??\\c\n+\\&\\|', that are defined by ANSI C to\n+stand for single characters.  For example, `\\|\\c\n+.B ??/\\c\n+\\&\\|' stands for\n+`\\|\\c\n+.BR \"\\e\" \"\\|',\"\n+so `\\|\\c\n+.B '??/n'\\c\n+\\&\\|' is a character constant for a newline.\n+Strictly speaking, the GNU C preprocessor does not support all\n+programs in ANSI Standard C unless `\\|\\c\n+.B \\-trigraphs\\c\n+\\&\\|' is used, but if\n+you ever notice the difference it will be with relief.\n+\n+You don't want to know any more about trigraphs.\n+.TP\n+.B \\-pedantic\n+Issue warnings required by the ANSI C standard in certain cases such\n+as when text other than a comment follows `\\|\\c\n+.B #else\\c\n+\\&\\|' or `\\|\\c\n+.B #endif\\c\n+\\&\\|'.\n+.TP\n+.B \\-pedantic\\-errors\n+Like `\\|\\c\n+.B \\-pedantic\\c\n+\\&\\|', except that errors are produced rather than\n+warnings.\n+.TP\n+.B \\-Wtrigraphs\n+Warn if any trigraphs are encountered (assuming they are enabled).\n+.TP\n+.B \\-Wcomment\n+.TP\n+.B \\-Wcomments\n+Warn whenever a comment-start sequence `\\|\\c\n+.B /*\\c\n+\\&\\|' appears in a comment.\n+(Both forms have the same effect).\n+.TP\n+.B \\-Wall\n+Requests both `\\|\\c\n+.B \\-Wtrigraphs\\c\n+\\&\\|' and `\\|\\c\n+.B \\-Wcomment\\c\n+\\&\\|' (but not\n+`\\|\\c\n+.B \\-Wtraditional\\c\n+\\&\\|'). \n+.TP\n+.B \\-Wtraditional\n+Warn about certain constructs that behave differently in traditional and\n+ANSI C.\n+.TP\n+.BI \"\\-I \" directory\\c\n+\\&\n+Add the directory \\c\n+.I directory\\c\n+\\& to the end of the list of\n+directories to be searched for header files.\n+This can be used to override a system header file, substituting your\n+own version, since these directories are searched before the system\n+header file directories.  If you use more than one `\\|\\c\n+.B \\-I\\c\n+\\&\\|' option,\n+the directories are scanned in left-to-right order; the standard\n+system directories come after.\n+.TP\n+.B \\-I\\-\n+Any directories specified with `\\|\\c\n+.B \\-I\\c\n+\\&\\|' options before the `\\|\\c\n+.B \\-I\\-\\c\n+\\&\\|'\n+option are searched only for the case of `\\|\\c\n+.B #include \"\\c\n+.I file\\c\n+\\&\"\\c\n+\\&\\|';\n+they are not searched for `\\|\\c\n+.B #include <\\c\n+.I file\\c\n+\\&>\\c\n+\\&\\|'.\n+\n+If additional directories are specified with `\\|\\c\n+.B \\-I\\c\n+\\&\\|' options after\n+the `\\|\\c\n+.B \\-I\\-\\c\n+\\&\\|', these directories are searched for all `\\|\\c\n+.B #include\\c\n+\\&\\|'\n+directives.\n+\n+In addition, the `\\|\\c\n+.B \\-I\\-\\c\n+\\&\\|' option inhibits the use of the current\n+directory as the first search directory for `\\|\\c\n+.B #include \"\\c\n+.I file\\c\n+\\&\"\\c\n+\\&\\|'.\n+Therefore, the current directory is searched only if it is requested\n+explicitly with `\\|\\c\n+.B \\-I.\\c\n+\\&\\|'.  Specifying both `\\|\\c\n+.B \\-I\\-\\c\n+\\&\\|' and `\\|\\c\n+.B \\-I.\\c\n+\\&\\|'\n+allows you to control precisely which directories are searched before\n+the current one and which are searched after.\n+.TP\n+.B \\-nostdinc\n+Do not search the standard system directories for header files.\n+Only the directories you have specified with `\\|\\c\n+.B \\-I\\c\n+\\&\\|' options\n+(and the current directory, if appropriate) are searched.\n+.TP\n+.B \\-nostdinc++\n+Do not search for header files in the C++ specific standard\n+directories, but do still search the other standard directories.\n+(This option is used when building libg++.)\n+.TP\n+.BI \"\\-D \" \"name\"\\c\n+\\&\n+Predefine \\c\n+.I name\\c\n+\\& as a macro, with definition `\\|\\c\n+.B 1\\c\n+\\&\\|'.\n+.TP\n+.BI \"\\-D \" \"name\" = definition\n+\\&\n+Predefine \\c\n+.I name\\c\n+\\& as a macro, with definition \\c\n+.I definition\\c\n+\\&.\n+There are no restrictions on the contents of \\c\n+.I definition\\c\n+\\&, but if\n+you are invoking the preprocessor from a shell or shell-like program\n+you may need to use the shell's quoting syntax to protect characters\n+such as spaces that have a meaning in the shell syntax.  If you use more than\n+one `\\|\\c\n+.B \\-D\\c\n+\\&\\|' for the same\n+.I name\\c\n+\\&, the rightmost definition takes effect.\n+.TP\n+.BI \"\\-U \" \"name\"\\c\n+\\&\n+Do not predefine \\c\n+.I name\\c\n+\\&.  If both `\\|\\c\n+.B \\-U\\c\n+\\&\\|' and `\\|\\c\n+.B \\-D\\c\n+\\&\\|' are\n+specified for one name, the `\\|\\c\n+.B \\-U\\c\n+\\&\\|' beats the `\\|\\c\n+.B \\-D\\c\n+\\&\\|' and the name\n+is not predefined.\n+.TP\n+.B \\-undef\n+Do not predefine any nonstandard macros.\n+.TP\n+.BI \"\\-A \" \"name(\" value )\n+Assert (in the same way as the \\c\n+.B #assert\\c\n+\\& directive)\n+the predicate \\c\n+.I name\\c\n+\\& with tokenlist \\c\n+.I value\\c\n+\\&.  Remember to escape or quote the parentheses on\n+shell command lines.\n+\n+You can use `\\|\\c\n+.B \\-A-\\c\n+\\&\\|' to disable all predefined assertions; it also\n+undefines all predefined macros.\n+.TP\n+.B \\-dM\n+Instead of outputting the result of preprocessing, output a list of\n+`\\|\\c\n+.B #define\\c\n+\\&\\|' directives for all the macros defined during the\n+execution of the preprocessor, including predefined macros.  This gives\n+you a way of finding out what is predefined in your version of the\n+preprocessor; assuming you have no file `\\|\\c\n+.B foo.h\\c\n+\\&\\|', the command\n+.sp\n+.br\n+touch\\ foo.h;\\ cpp\\ \\-dM\\ foo.h\n+.br\n+.sp\n+will show the values of any predefined macros.\n+.TP\n+.B \\-dD\n+Like `\\|\\c\n+.B \\-dM\\c\n+\\&\\|' except in two respects: it does \\c\n+.I not\\c\n+\\& include the\n+predefined macros, and it outputs \\c\n+.I both\\c\n+\\& the `\\|\\c\n+.B #define\\c\n+\\&\\|'\n+directives and the result of preprocessing.  Both kinds of output go to\n+the standard output file.\n+.PP\n+.TP\n+.BR \\-M\\  [ \\-MG ]\n+Instead of outputting the result of preprocessing, output a rule\n+suitable for \\c\n+.B make\\c\n+\\& describing the dependencies of the main\n+source file.  The preprocessor outputs one \\c\n+.B make\\c\n+\\& rule containing\n+the object file name for that source file, a colon, and the names of\n+all the included files.  If there are many included files then the\n+rule is split into several lines using `\\|\\c\n+.B \\\\\\\\\\c\n+\\&\\|'-newline.\n+\n+`\\|\\c\n+.B \\-MG\\c\n+\\&\\|' says to treat missing header files as generated files and assume \\c\n+they live in the same directory as the source file.  It must be specified \\c\n+in addition to `\\|\\c\n+.B \\-M\\c\n+\\&\\|'.\n+\n+This feature is used in automatic updating of makefiles.\n+.TP\n+.BR \\-MM\\  [ \\-MG ]\n+Like `\\|\\c\n+.B \\-M\\c\n+\\&\\|' but mention only the files included with `\\|\\c\n+.B #include\n+\"\\c\n+.I file\\c\n+\\&\"\\c\n+\\&\\|'.  System header files included with `\\|\\c\n+.B #include\n+<\\c\n+.I file\\c\n+\\&>\\c\n+\\&\\|' are omitted.\n+.TP\n+.BI \\-MD\\  file\n+Like `\\|\\c\n+.B \\-M\\c\n+\\&\\|' but the dependency information is written to `\\|\\c\n+.I file\\c\n+\\&\\|'.  This is in addition to compiling the file as\n+specified\\(em\\&`\\|\\c\n+.B \\-MD\\c\n+\\&\\|' does not inhibit ordinary compilation the way\n+`\\|\\c\n+.B \\-M\\c\n+\\&\\|' does.\n+\n+When invoking gcc, do not specify the `\\|\\c\n+.I file\\c\n+\\&\\|' argument.  Gcc will create file names made by replacing `\\|\\c\n+.B .c\\c\n+\\&\\|' with `\\|\\c\n+.B .d\\c\n+\\&\\|' at the end of the input file names.\n+\n+In Mach, you can use the utility \\c\n+.B md\\c\n+\\& to merge multiple files\n+into a single dependency file suitable for using with the `\\|\\c\n+.B make\\c\n+\\&\\|'\n+command.\n+.TP\n+.BI \\-MMD\\  file\n+Like `\\|\\c\n+.B \\-MD\\c\n+\\&\\|' except mention only user header files, not system\n+header files.\n+.TP\n+.B \\-H\n+Print the name of each header file used, in addition to other normal\n+activities.\n+.TP\n+.BI \"\\-imacros \" \"file\"\\c\n+\\&\n+Process \\c\n+.I file\\c\n+\\& as input, discarding the resulting output, before\n+processing the regular input file.  Because the output generated from\n+\\c\n+.I file\\c\n+\\& is discarded, the only effect of `\\|\\c\n+.B \\-imacros \\c\n+.I file\\c\n+\\&\\c\n+\\&\\|' is to\n+make the macros defined in \\c\n+.I file\\c\n+\\& available for use in the main\n+input.  The preprocessor evaluates any `\\|\\c\n+.B \\-D\\c\n+\\&\\|' and `\\|\\c\n+.B \\-U\\c\n+\\&\\|' options\n+on the command line before processing `\\|\\c\n+.B \\-imacros \\c\n+.I file\\c\n+\\&\\|' \\c\n+\\&.\n+.TP\n+.BI \"\\-include \" \"file\"\n+Process \n+.I file\n+as input, and include all the resulting output,\n+before processing the regular input file.  \n+.TP\n+.BI \"-idirafter \" \"dir\"\\c\n+\\&\n+Add the directory \\c\n+.I dir\\c\n+\\& to the second include path.  The directories\n+on the second include path are searched when a header file is not found\n+in any of the directories in the main include path (the one that\n+`\\|\\c\n+.B \\-I\\c\n+\\&\\|' adds to).\n+.TP\n+.BI \"-iprefix \" \"prefix\"\\c\n+\\&\n+Specify \\c\n+.I prefix\\c\n+\\& as the prefix for subsequent `\\|\\c\n+.B \\-iwithprefix\\c\n+\\&\\|'\n+options.\n+.TP\n+.BI \"-iwithprefix \" \"dir\"\\c\n+\\&\n+Add a directory to the second include path.  The directory's name is\n+made by concatenating \\c\n+.I prefix\\c\n+\\& and \\c\n+.I dir\\c\n+\\&, where \\c\n+.I prefix\\c\n+\\&\n+was specified previously with `\\|\\c\n+.B \\-iprefix\\c\n+\\&\\|'.\n+.TP\n+.B \\-lang-c\n+.TP\n+.B \\-lang-c++\n+.TP\n+.B \\-lang-objc\n+.TP\n+.B \\-lang-objc++\n+Specify the source language.  `\\|\\c\n+.B \\-lang-c++\\c\n+\\&\\|' makes the preprocessor\n+handle C++ comment syntax, and includes extra default include\n+directories for C++, and `\\|\\c\n+.B \\-lang-objc\\c\n+\\&\\|' enables the Objective C\n+`\\|\\c\n+.B #import\\c\n+\\&\\|' directive.  `\\|\\c\n+.B \\-lang-c\\c\n+\\&\\|' explicitly turns off both of\n+these extensions, and `\\|\\c\n+.B \\-lang-objc++\\c\n+\\&\\|' enables both.\n+\n+These options are generated by the compiler driver \\c\n+.B gcc\\c\n+\\&, but not\n+passed from the `\\|\\c\n+.B gcc\\c\n+\\&\\|' command line.\n+.TP\n+.B \\-lint\n+Look for commands to the program checker \\c\n+.B lint\\c\n+\\& embedded in\n+comments, and emit them preceded by `\\|\\c\n+.B #pragma lint\\c\n+\\&\\|'.  For example,\n+the comment `\\|\\c\n+.B /* NOTREACHED */\\c\n+\\&\\|' becomes `\\|\\c\n+.B #pragma lint\n+NOTREACHED\\c\n+\\&\\|'.\n+\n+This option is available only when you call \\c\n+.B cpp\\c\n+\\& directly;\n+\\c\n+.B gcc\\c\n+\\& will not pass it from its command line.\n+.TP\n+.B \\-$\n+Forbid the use of `\\|\\c\n+.B $\\c\n+\\&\\|' in identifiers.  This was formerly required for strict conformance\n+to the C Standard before the standard was corrected.  \\c\n+\n+This option is available only when you call \\c\n+.B cpp\\c\n+\\& directly;\n+.B gcc\\c\n+\\& will not pass it from its command line.\n+.SH \"SEE ALSO\"\n+.RB \"`\\|\" Cpp \"\\|'\"\n+entry in\n+.B info\\c\n+\\&;\n+.I The C Preprocessor\\c\n+, Richard M. Stallman.\n+.br\n+.BR gcc \"(\" 1 \");\"\n+.RB \"`\\|\" Gcc \"\\|'\"\n+entry in \n+.B info\\c\n+\\&;\n+.I \n+Using and Porting GNU CC (for version 2.0)\\c\n+, Richard M. Stallman.\n+.SH COPYING\n+Copyright (c) 1991, 1992, 1993 Free Software Foundation, Inc.\n+.PP\n+Permission is granted to make and distribute verbatim copies of\n+this manual provided the copyright notice and this permission notice\n+are preserved on all copies.\n+.PP\n+Permission is granted to copy and distribute modified versions of this\n+manual under the conditions for verbatim copying, provided that the\n+entire resulting derived work is distributed under the terms of a\n+permission notice identical to this one.\n+.PP\n+Permission is granted to copy and distribute translations of this\n+manual into another language, under the above conditions for modified\n+versions, except that this permission notice may be included in\n+translations approved by the Free Software Foundation instead of in\n+the original English."}, {"sha": "a4f2cc530292b696e485e5d2721b1e444dde9946", "filename": "gcc/cexp.c", "status": "added", "additions": 2142, "deletions": 0, "changes": 2142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,2142 @@\n+\n+/*  A Bison parser, made from cexp.y with Bison version GNU Bison version 1.24\n+  */\n+\n+#define YYBISON 1  /* Identify Bison output.  */\n+\n+#define\tINT\t258\n+#define\tCHAR\t259\n+#define\tNAME\t260\n+#define\tERROR\t261\n+#define\tOR\t262\n+#define\tAND\t263\n+#define\tEQUAL\t264\n+#define\tNOTEQUAL\t265\n+#define\tLEQ\t266\n+#define\tGEQ\t267\n+#define\tLSH\t268\n+#define\tRSH\t269\n+#define\tUNARY\t270\n+\n+#line 27 \"cexp.y\"\n+\n+#include \"config.h\"\n+#include <setjmp.h>\n+/* #define YYDEBUG 1 */\n+\n+/* The following symbols should be autoconfigured:\n+\tHAVE_STDLIB_H\n+\tSTDC_HEADERS\n+   In the mean time, we'll get by with approximations based\n+   on existing GCC configuration symbols.  */\n+\n+#ifdef POSIX\n+# ifndef HAVE_STDLIB_H\n+# define HAVE_STDLIB_H 1\n+# endif\n+# ifndef STDC_HEADERS\n+# define STDC_HEADERS 1\n+# endif\n+#endif /* defined (POSIX) */\n+\n+#if STDC_HEADERS\n+# include <string.h>\n+#endif\n+\n+#if HAVE_STDLIB_H || defined (MULTIBYTE_CHARS)\n+# include <stdlib.h>\n+#endif\n+\n+#ifdef MULTIBYTE_CHARS\n+#include <locale.h>\n+#endif\n+\n+#include <stdio.h>\n+\n+typedef unsigned char U_CHAR;\n+\n+/* This is used for communicating lists of keywords with cccp.c.  */\n+struct arglist {\n+  struct arglist *next;\n+  U_CHAR *name;\n+  int length;\n+  int argno;\n+};\n+\n+/* Define a generic NULL if one hasn't already been defined.  */\n+\n+#ifndef NULL\n+#define NULL 0\n+#endif\n+\n+#ifndef GENERIC_PTR\n+#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+#define GENERIC_PTR void *\n+#else\n+#define GENERIC_PTR char *\n+#endif\n+#endif\n+\n+#ifndef NULL_PTR\n+#define NULL_PTR ((GENERIC_PTR) 0)\n+#endif\n+\n+/* Find the largest host integer type and set its size and type.\n+   Don't blindly use `long'; on some crazy hosts it is shorter than `int'.  */\n+\n+#ifndef HOST_BITS_PER_WIDE_INT\n+\n+#if HOST_BITS_PER_LONG > HOST_BITS_PER_INT\n+#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG\n+#define HOST_WIDE_INT long\n+#else\n+#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT\n+#define HOST_WIDE_INT int\n+#endif\n+\n+#endif\n+\n+#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n+# define __attribute__(x)\n+#endif\n+\n+#ifndef PROTO\n+# if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+#  define PROTO(ARGS) ARGS\n+# else\n+#  define PROTO(ARGS) ()\n+# endif\n+#endif\n+\n+#if defined (__STDC__) && defined (HAVE_VPRINTF)\n+# include <stdarg.h>\n+# define VA_START(va_list, var) va_start (va_list, var)\n+# define PRINTF_ALIST(msg) char *msg, ...\n+# define PRINTF_DCL(msg)\n+# define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))\n+#else\n+# include <varargs.h>\n+# define VA_START(va_list, var) va_start (va_list)\n+# define PRINTF_ALIST(msg) msg, va_alist\n+# define PRINTF_DCL(msg) char *msg; va_dcl\n+# define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))\n+# define vfprintf(file, msg, args) \\\n+    { \\\n+      char *a0 = va_arg(args, char *); \\\n+      char *a1 = va_arg(args, char *); \\\n+      char *a2 = va_arg(args, char *); \\\n+      char *a3 = va_arg(args, char *); \\\n+      fprintf (file, msg, a0, a1, a2, a3); \\\n+    }\n+#endif\n+\n+#define PRINTF_PROTO_1(ARGS) PRINTF_PROTO(ARGS, 1, 2)\n+\n+HOST_WIDE_INT parse_c_expression PROTO((char *));\n+\n+static int yylex PROTO((void));\n+static void yyerror PROTO((char *)) __attribute__ ((noreturn));\n+static HOST_WIDE_INT expression_value;\n+\n+static jmp_buf parse_return_error;\n+\n+/* Nonzero means count most punctuation as part of a name.  */\n+static int keyword_parsing = 0;\n+\n+/* Nonzero means do not evaluate this expression.\n+   This is a count, since unevaluated expressions can nest.  */\n+static int skip_evaluation;\n+\n+/* some external tables of character types */\n+extern unsigned char is_idstart[], is_idchar[], is_space[];\n+\n+/* Flag for -pedantic.  */\n+extern int pedantic;\n+\n+/* Flag for -traditional.  */\n+extern int traditional;\n+\n+/* Flag for -lang-c89.  */\n+extern int c89;\n+\n+/* Flag for -Wundef.  */\n+extern int warn_undef;\n+\n+#ifndef CHAR_TYPE_SIZE\n+#define CHAR_TYPE_SIZE BITS_PER_UNIT\n+#endif\n+\n+#ifndef INT_TYPE_SIZE\n+#define INT_TYPE_SIZE BITS_PER_WORD\n+#endif\n+\n+#ifndef LONG_TYPE_SIZE\n+#define LONG_TYPE_SIZE BITS_PER_WORD\n+#endif\n+\n+#ifndef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE INT_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_CHAR_TYPE_SIZE\n+#define MAX_CHAR_TYPE_SIZE CHAR_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_INT_TYPE_SIZE\n+#define MAX_INT_TYPE_SIZE INT_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_LONG_TYPE_SIZE\n+#define MAX_LONG_TYPE_SIZE LONG_TYPE_SIZE\n+#endif\n+\n+#ifndef MAX_WCHAR_TYPE_SIZE\n+#define MAX_WCHAR_TYPE_SIZE WCHAR_TYPE_SIZE\n+#endif\n+\n+#if MAX_CHAR_TYPE_SIZE < HOST_BITS_PER_WIDE_INT\n+#define MAX_CHAR_TYPE_MASK (~ (~ (HOST_WIDE_INT) 0 << MAX_CHAR_TYPE_SIZE))\n+#else\n+#define MAX_CHAR_TYPE_MASK (~ (HOST_WIDE_INT) 0)\n+#endif\n+\n+#if MAX_WCHAR_TYPE_SIZE < HOST_BITS_PER_WIDE_INT\n+#define MAX_WCHAR_TYPE_MASK (~ (~ (HOST_WIDE_INT) 0 << MAX_WCHAR_TYPE_SIZE))\n+#else\n+#define MAX_WCHAR_TYPE_MASK (~ (HOST_WIDE_INT) 0)\n+#endif\n+\n+/* Suppose A1 + B1 = SUM1, using 2's complement arithmetic ignoring overflow.\n+   Suppose A, B and SUM have the same respective signs as A1, B1, and SUM1.\n+   Suppose SIGNEDP is negative if the result is signed, zero if unsigned.\n+   Then this yields nonzero if overflow occurred during the addition.\n+   Overflow occurs if A and B have the same sign, but A and SUM differ in sign,\n+   and SIGNEDP is negative.\n+   Use `^' to test whether signs differ, and `< 0' to isolate the sign.  */\n+#define overflow_sum_sign(a, b, sum, signedp) \\\n+\t((~((a) ^ (b)) & ((a) ^ (sum)) & (signedp)) < 0)\n+\n+struct constant;\n+\n+GENERIC_PTR xmalloc PROTO((size_t));\n+HOST_WIDE_INT parse_escape PROTO((char **, HOST_WIDE_INT));\n+int check_assertion PROTO((U_CHAR *, int, int, struct arglist *));\n+struct hashnode *lookup PROTO((U_CHAR *, int, int));\n+void error PRINTF_PROTO_1((char *, ...));\n+void pedwarn PRINTF_PROTO_1((char *, ...));\n+void warning PRINTF_PROTO_1((char *, ...));\n+\n+static int parse_number PROTO((int));\n+static HOST_WIDE_INT left_shift PROTO((struct constant *, unsigned HOST_WIDE_INT));\n+static HOST_WIDE_INT right_shift PROTO((struct constant *, unsigned HOST_WIDE_INT));\n+static void integer_overflow PROTO((void));\n+\n+/* `signedp' values */\n+#define SIGNED (~0)\n+#define UNSIGNED 0\n+\n+#line 244 \"cexp.y\"\n+typedef union {\n+  struct constant {HOST_WIDE_INT value; int signedp;} integer;\n+  struct name {U_CHAR *address; int length;} name;\n+  struct arglist *keywords;\n+} YYSTYPE;\n+\n+#ifndef YYLTYPE\n+typedef\n+  struct yyltype\n+    {\n+      int timestamp;\n+      int first_line;\n+      int first_column;\n+      int last_line;\n+      int last_column;\n+      char *text;\n+   }\n+  yyltype;\n+\n+#define YYLTYPE yyltype\n+#endif\n+\n+#include <stdio.h>\n+\n+#ifndef __cplusplus\n+#ifndef __STDC__\n+#define const\n+#endif\n+#endif\n+\n+\n+\n+#define\tYYFINAL\t\t77\n+#define\tYYFLAG\t\t-32768\n+#define\tYYNTBASE\t34\n+\n+#define YYTRANSLATE(x) ((unsigned)(x) <= 270 ? yytranslate[x] : 43)\n+\n+static const char yytranslate[] = {     0,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,    29,     2,    31,     2,    27,    14,     2,    32,\n+    33,    25,    23,     9,    24,     2,    26,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     8,     2,    17,\n+     2,    18,     7,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,    13,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,    12,     2,    30,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,\n+     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,\n+     6,    10,    11,    15,    16,    19,    20,    21,    22,    28\n+};\n+\n+#if YYDEBUG != 0\n+static const short yyprhs[] = {     0,\n+     0,     2,     4,     8,    11,    14,    17,    20,    23,    24,\n+    31,    35,    39,    43,    47,    51,    55,    59,    63,    67,\n+    71,    75,    79,    83,    87,    91,    95,    99,   100,   105,\n+   106,   111,   112,   113,   121,   123,   125,   127,   128,   133\n+};\n+\n+static const short yyrhs[] = {    35,\n+     0,    36,     0,    35,     9,    36,     0,    24,    36,     0,\n+    29,    36,     0,    23,    36,     0,    30,    36,     0,    31,\n+     5,     0,     0,    31,     5,    37,    32,    42,    33,     0,\n+    32,    35,    33,     0,    36,    25,    36,     0,    36,    26,\n+    36,     0,    36,    27,    36,     0,    36,    23,    36,     0,\n+    36,    24,    36,     0,    36,    21,    36,     0,    36,    22,\n+    36,     0,    36,    15,    36,     0,    36,    16,    36,     0,\n+    36,    19,    36,     0,    36,    20,    36,     0,    36,    17,\n+    36,     0,    36,    18,    36,     0,    36,    14,    36,     0,\n+    36,    13,    36,     0,    36,    12,    36,     0,     0,    36,\n+    11,    38,    36,     0,     0,    36,    10,    39,    36,     0,\n+     0,     0,    36,     7,    40,    36,     8,    41,    36,     0,\n+     3,     0,     4,     0,     5,     0,     0,    32,    42,    33,\n+    42,     0,     5,    42,     0\n+};\n+\n+#endif\n+\n+#if YYDEBUG != 0\n+static const short yyrline[] = { 0,\n+   274,   279,   280,   287,   292,   295,   297,   300,   304,   306,\n+   311,   316,   329,   346,   359,   365,   371,   377,   383,   386,\n+   389,   396,   403,   410,   417,   420,   423,   426,   429,   432,\n+   435,   438,   440,   443,   446,   448,   450,   458,   460,   473\n+};\n+\n+static const char * const yytname[] = {   \"$\",\"error\",\"$undefined.\",\"INT\",\"CHAR\",\n+\"NAME\",\"ERROR\",\"'?'\",\"':'\",\"','\",\"OR\",\"AND\",\"'|'\",\"'^'\",\"'&'\",\"EQUAL\",\"NOTEQUAL\",\n+\"'<'\",\"'>'\",\"LEQ\",\"GEQ\",\"LSH\",\"RSH\",\"'+'\",\"'-'\",\"'*'\",\"'/'\",\"'%'\",\"UNARY\",\"'!'\",\n+\"'~'\",\"'#'\",\"'('\",\"')'\",\"start\",\"exp1\",\"exp\",\"@1\",\"@2\",\"@3\",\"@4\",\"@5\",\"keywords\",\n+\"\"\n+};\n+#endif\n+\n+static const short yyr1[] = {     0,\n+    34,    35,    35,    36,    36,    36,    36,    36,    37,    36,\n+    36,    36,    36,    36,    36,    36,    36,    36,    36,    36,\n+    36,    36,    36,    36,    36,    36,    36,    38,    36,    39,\n+    36,    40,    41,    36,    36,    36,    36,    42,    42,    42\n+};\n+\n+static const short yyr2[] = {     0,\n+     1,     1,     3,     2,     2,     2,     2,     2,     0,     6,\n+     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,\n+     3,     3,     3,     3,     3,     3,     3,     0,     4,     0,\n+     4,     0,     0,     7,     1,     1,     1,     0,     4,     2\n+};\n+\n+static const short yydefact[] = {     0,\n+    35,    36,    37,     0,     0,     0,     0,     0,     0,     1,\n+     2,     6,     4,     5,     7,     8,     0,     0,    32,    30,\n+    28,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n+     0,     0,     0,     0,     0,     0,     0,     0,    11,     3,\n+     0,     0,     0,    27,    26,    25,    19,    20,    23,    24,\n+    21,    22,    17,    18,    15,    16,    12,    13,    14,    38,\n+     0,    31,    29,    38,    38,     0,    33,    40,     0,    10,\n+     0,    38,    34,    39,     0,     0,     0\n+};\n+\n+static const short yydefgoto[] = {    75,\n+    10,    11,    38,    43,    42,    41,    71,    66\n+};\n+\n+static const short yypact[] = {    12,\n+-32768,-32768,-32768,    12,    12,    12,    12,     1,    12,     4,\n+    79,-32768,-32768,-32768,-32768,   -21,    31,    12,-32768,-32768,\n+-32768,    12,    12,    12,    12,    12,    12,    12,    12,    12,\n+    12,    12,    12,    12,    12,    12,    12,    30,-32768,    79,\n+    12,    12,    12,   110,   124,   137,   148,   148,   155,   155,\n+   155,   155,   160,   160,   -17,   -17,-32768,-32768,-32768,     2,\n+    58,    34,    95,     2,     2,    54,-32768,-32768,    55,-32768,\n+    12,     2,    79,-32768,    63,   188,-32768\n+};\n+\n+static const short yypgoto[] = {-32768,\n+   180,    -4,-32768,-32768,-32768,-32768,-32768,   -60\n+};\n+\n+\n+#define\tYYLAST\t\t189\n+\n+\n+static const short yytable[] = {    12,\n+    13,    14,    15,    68,    69,    16,    64,    35,    36,    37,\n+    -9,    74,    18,    40,     1,     2,     3,    44,    45,    46,\n+    47,    48,    49,    50,    51,    52,    53,    54,    55,    56,\n+    57,    58,    59,    65,     4,     5,    61,    62,    63,    18,\n+     6,     7,     8,     9,    21,    22,    23,    24,    25,    26,\n+    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,\n+    37,    60,    76,    39,    19,    67,    73,    20,    21,    22,\n+    23,    24,    25,    26,    27,    28,    29,    30,    31,    32,\n+    33,    34,    35,    36,    37,    19,    70,    72,    20,    21,\n+    22,    23,    24,    25,    26,    27,    28,    29,    30,    31,\n+    32,    33,    34,    35,    36,    37,    22,    23,    24,    25,\n+    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,\n+    36,    37,    23,    24,    25,    26,    27,    28,    29,    30,\n+    31,    32,    33,    34,    35,    36,    37,    24,    25,    26,\n+    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,\n+    37,    25,    26,    27,    28,    29,    30,    31,    32,    33,\n+    34,    35,    36,    37,    27,    28,    29,    30,    31,    32,\n+    33,    34,    35,    36,    37,    31,    32,    33,    34,    35,\n+    36,    37,    33,    34,    35,    36,    37,    77,    17\n+};\n+\n+static const short yycheck[] = {     4,\n+     5,     6,     7,    64,    65,     5,     5,    25,    26,    27,\n+    32,    72,     9,    18,     3,     4,     5,    22,    23,    24,\n+    25,    26,    27,    28,    29,    30,    31,    32,    33,    34,\n+    35,    36,    37,    32,    23,    24,    41,    42,    43,     9,\n+    29,    30,    31,    32,    11,    12,    13,    14,    15,    16,\n+    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,\n+    27,    32,     0,    33,     7,     8,    71,    10,    11,    12,\n+    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,\n+    23,    24,    25,    26,    27,     7,    33,    33,    10,    11,\n+    12,    13,    14,    15,    16,    17,    18,    19,    20,    21,\n+    22,    23,    24,    25,    26,    27,    12,    13,    14,    15,\n+    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,\n+    26,    27,    13,    14,    15,    16,    17,    18,    19,    20,\n+    21,    22,    23,    24,    25,    26,    27,    14,    15,    16,\n+    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,\n+    27,    15,    16,    17,    18,    19,    20,    21,    22,    23,\n+    24,    25,    26,    27,    17,    18,    19,    20,    21,    22,\n+    23,    24,    25,    26,    27,    21,    22,    23,    24,    25,\n+    26,    27,    23,    24,    25,    26,    27,     0,     9\n+};\n+/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n+#line 3 \"/usr/local/share/bison.simple\"\n+\n+/* Skeleton output parser for bison,\n+   Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* As a special exception, when this file is copied by Bison into a\n+   Bison output file, you may use that output file without restriction.\n+   This special exception was added by the Free Software Foundation\n+   in version 1.24 of Bison.  */\n+\n+#ifndef alloca\n+#ifdef __GNUC__\n+#define alloca __builtin_alloca\n+#else /* not GNU C.  */\n+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n+#include <alloca.h>\n+#else /* not sparc */\n+#if defined (MSDOS) && !defined (__TURBOC__)\n+#include <malloc.h>\n+#else /* not MSDOS, or __TURBOC__ */\n+#if defined(_AIX)\n+#include <malloc.h>\n+ #pragma alloca\n+#else /* not MSDOS, __TURBOC__, or _AIX */\n+#ifdef __hpux\n+#ifdef __cplusplus\n+extern \"C\" {\n+void *alloca (unsigned int);\n+};\n+#else /* not __cplusplus */\n+void *alloca ();\n+#endif /* not __cplusplus */\n+#endif /* __hpux */\n+#endif /* not _AIX */\n+#endif /* not MSDOS, or __TURBOC__ */\n+#endif /* not sparc.  */\n+#endif /* not GNU C.  */\n+#endif /* alloca not defined.  */\n+\n+/* This is the parser code that is written into each bison parser\n+  when the %semantic_parser declaration is not specified in the grammar.\n+  It was written by Richard Stallman by simplifying the hairy parser\n+  used when %semantic_parser is specified.  */\n+\n+/* Note: there must be only one dollar sign in this file.\n+   It is replaced by the list of actions, each action\n+   as one case of the switch.  */\n+\n+#define yyerrok\t\t(yyerrstatus = 0)\n+#define yyclearin\t(yychar = YYEMPTY)\n+#define YYEMPTY\t\t-2\n+#define YYEOF\t\t0\n+#define YYACCEPT\treturn(0)\n+#define YYABORT \treturn(1)\n+#define YYERROR\t\tgoto yyerrlab1\n+/* Like YYERROR except do call yyerror.\n+   This remains here temporarily to ease the\n+   transition to the new meaning of YYERROR, for GCC.\n+   Once GCC version 2 has supplanted version 1, this can go.  */\n+#define YYFAIL\t\tgoto yyerrlab\n+#define YYRECOVERING()  (!!yyerrstatus)\n+#define YYBACKUP(token, value) \\\n+do\t\t\t\t\t\t\t\t\\\n+  if (yychar == YYEMPTY && yylen == 1)\t\t\t\t\\\n+    { yychar = (token), yylval = (value);\t\t\t\\\n+      yychar1 = YYTRANSLATE (yychar);\t\t\t\t\\\n+      YYPOPSTACK;\t\t\t\t\t\t\\\n+      goto yybackup;\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\\\n+    { yyerror (\"syntax error: cannot back up\"); YYERROR; }\t\\\n+while (0)\n+\n+#define YYTERROR\t1\n+#define YYERRCODE\t256\n+\n+#ifndef YYPURE\n+#define YYLEX\t\tyylex()\n+#endif\n+\n+#ifdef YYPURE\n+#ifdef YYLSP_NEEDED\n+#ifdef YYLEX_PARAM\n+#define YYLEX\t\tyylex(&yylval, &yylloc, YYLEX_PARAM)\n+#else\n+#define YYLEX\t\tyylex(&yylval, &yylloc)\n+#endif\n+#else /* not YYLSP_NEEDED */\n+#ifdef YYLEX_PARAM\n+#define YYLEX\t\tyylex(&yylval, YYLEX_PARAM)\n+#else\n+#define YYLEX\t\tyylex(&yylval)\n+#endif\n+#endif /* not YYLSP_NEEDED */\n+#endif\n+\n+/* If nonreentrant, generate the variables here */\n+\n+#ifndef YYPURE\n+\n+int\tyychar;\t\t\t/*  the lookahead symbol\t\t*/\n+YYSTYPE\tyylval;\t\t\t/*  the semantic value of the\t\t*/\n+\t\t\t\t/*  lookahead symbol\t\t\t*/\n+\n+#ifdef YYLSP_NEEDED\n+YYLTYPE yylloc;\t\t\t/*  location data for the lookahead\t*/\n+\t\t\t\t/*  symbol\t\t\t\t*/\n+#endif\n+\n+int yynerrs;\t\t\t/*  number of parse errors so far       */\n+#endif  /* not YYPURE */\n+\n+#if YYDEBUG != 0\n+int yydebug;\t\t\t/*  nonzero means print parse trace\t*/\n+/* Since this is uninitialized, it does not stop multiple parsers\n+   from coexisting.  */\n+#endif\n+\n+/*  YYINITDEPTH indicates the initial size of the parser's stacks\t*/\n+\n+#ifndef\tYYINITDEPTH\n+#define YYINITDEPTH 200\n+#endif\n+\n+/*  YYMAXDEPTH is the maximum size the stacks can grow to\n+    (effective only if the built-in stack extension method is used).  */\n+\n+#if YYMAXDEPTH == 0\n+#undef YYMAXDEPTH\n+#endif\n+\n+#ifndef YYMAXDEPTH\n+#define YYMAXDEPTH 10000\n+#endif\n+\n+/* Prevent warning if -Wstrict-prototypes.  */\n+#ifdef __GNUC__\n+int yyparse (void);\n+#endif\n+\f\n+#if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n+#define __yy_memcpy(FROM,TO,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n+#else\t\t\t\t/* not GNU C or C++ */\n+#ifndef __cplusplus\n+\n+/* This is the most reliable way to avoid incompatibilities\n+   in available built-in functions on various systems.  */\n+static void\n+__yy_memcpy (from, to, count)\n+     char *from;\n+     char *to;\n+     int count;\n+{\n+  register char *f = from;\n+  register char *t = to;\n+  register int i = count;\n+\n+  while (i-- > 0)\n+    *t++ = *f++;\n+}\n+\n+#else /* __cplusplus */\n+\n+/* This is the most reliable way to avoid incompatibilities\n+   in available built-in functions on various systems.  */\n+static void\n+__yy_memcpy (char *from, char *to, int count)\n+{\n+  register char *f = from;\n+  register char *t = to;\n+  register int i = count;\n+\n+  while (i-- > 0)\n+    *t++ = *f++;\n+}\n+\n+#endif\n+#endif\n+\f\n+#line 192 \"/usr/local/share/bison.simple\"\n+\n+/* The user can define YYPARSE_PARAM as the name of an argument to be passed\n+   into yyparse.  The argument should have type void *.\n+   It should actually point to an object.\n+   Grammar actions can access the variable by casting it\n+   to the proper pointer type.  */\n+\n+#ifdef YYPARSE_PARAM\n+#define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;\n+#else\n+#define YYPARSE_PARAM\n+#define YYPARSE_PARAM_DECL\n+#endif\n+\n+int\n+yyparse(YYPARSE_PARAM)\n+     YYPARSE_PARAM_DECL\n+{\n+  register int yystate;\n+  register int yyn;\n+  register short *yyssp;\n+  register YYSTYPE *yyvsp;\n+  int yyerrstatus;\t/*  number of tokens to shift before error messages enabled */\n+  int yychar1 = 0;\t\t/*  lookahead token as an internal (translated) token number */\n+\n+  short\tyyssa[YYINITDEPTH];\t/*  the state stack\t\t\t*/\n+  YYSTYPE yyvsa[YYINITDEPTH];\t/*  the semantic value stack\t\t*/\n+\n+  short *yyss = yyssa;\t\t/*  refer to the stacks thru separate pointers */\n+  YYSTYPE *yyvs = yyvsa;\t/*  to allow yyoverflow to reallocate them elsewhere */\n+\n+#ifdef YYLSP_NEEDED\n+  YYLTYPE yylsa[YYINITDEPTH];\t/*  the location stack\t\t\t*/\n+  YYLTYPE *yyls = yylsa;\n+  YYLTYPE *yylsp;\n+\n+#define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)\n+#else\n+#define YYPOPSTACK   (yyvsp--, yyssp--)\n+#endif\n+\n+  int yystacksize = YYINITDEPTH;\n+\n+#ifdef YYPURE\n+  int yychar;\n+  YYSTYPE yylval;\n+  int yynerrs;\n+#ifdef YYLSP_NEEDED\n+  YYLTYPE yylloc;\n+#endif\n+#endif\n+\n+  YYSTYPE yyval;\t\t/*  the variable used to return\t\t*/\n+\t\t\t\t/*  semantic values from the action\t*/\n+\t\t\t\t/*  routines\t\t\t\t*/\n+\n+  int yylen;\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Starting parse\\n\");\n+#endif\n+\n+  yystate = 0;\n+  yyerrstatus = 0;\n+  yynerrs = 0;\n+  yychar = YYEMPTY;\t\t/* Cause a token to be read.  */\n+\n+  /* Initialize stack pointers.\n+     Waste one element of value and location stack\n+     so that they stay on the same level as the state stack.\n+     The wasted elements are never initialized.  */\n+\n+  yyssp = yyss - 1;\n+  yyvsp = yyvs;\n+#ifdef YYLSP_NEEDED\n+  yylsp = yyls;\n+#endif\n+\n+/* Push a new state, which is found in  yystate  .  */\n+/* In all cases, when you get here, the value and location stacks\n+   have just been pushed. so pushing a state here evens the stacks.  */\n+yynewstate:\n+\n+  *++yyssp = yystate;\n+\n+  if (yyssp >= yyss + yystacksize - 1)\n+    {\n+      /* Give user a chance to reallocate the stack */\n+      /* Use copies of these so that the &'s don't force the real ones into memory. */\n+      YYSTYPE *yyvs1 = yyvs;\n+      short *yyss1 = yyss;\n+#ifdef YYLSP_NEEDED\n+      YYLTYPE *yyls1 = yyls;\n+#endif\n+\n+      /* Get the current used size of the three stacks, in elements.  */\n+      int size = yyssp - yyss + 1;\n+\n+#ifdef yyoverflow\n+      /* Each stack pointer address is followed by the size of\n+\t the data in use in that stack, in bytes.  */\n+#ifdef YYLSP_NEEDED\n+      /* This used to be a conditional around just the two extra args,\n+\t but that might be undefined if yyoverflow is a macro.  */\n+      yyoverflow(\"parser stack overflow\",\n+\t\t &yyss1, size * sizeof (*yyssp),\n+\t\t &yyvs1, size * sizeof (*yyvsp),\n+\t\t &yyls1, size * sizeof (*yylsp),\n+\t\t &yystacksize);\n+#else\n+      yyoverflow(\"parser stack overflow\",\n+\t\t &yyss1, size * sizeof (*yyssp),\n+\t\t &yyvs1, size * sizeof (*yyvsp),\n+\t\t &yystacksize);\n+#endif\n+\n+      yyss = yyss1; yyvs = yyvs1;\n+#ifdef YYLSP_NEEDED\n+      yyls = yyls1;\n+#endif\n+#else /* no yyoverflow */\n+      /* Extend the stack our own way.  */\n+      if (yystacksize >= YYMAXDEPTH)\n+\t{\n+\t  yyerror(\"parser stack overflow\");\n+\t  return 2;\n+\t}\n+      yystacksize *= 2;\n+      if (yystacksize > YYMAXDEPTH)\n+\tyystacksize = YYMAXDEPTH;\n+      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss1, (char *)yyss, size * sizeof (*yyssp));\n+      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs1, (char *)yyvs, size * sizeof (*yyvsp));\n+#ifdef YYLSP_NEEDED\n+      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls1, (char *)yyls, size * sizeof (*yylsp));\n+#endif\n+#endif /* no yyoverflow */\n+\n+      yyssp = yyss + size - 1;\n+      yyvsp = yyvs + size - 1;\n+#ifdef YYLSP_NEEDED\n+      yylsp = yyls + size - 1;\n+#endif\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Stack size increased to %d\\n\", yystacksize);\n+#endif\n+\n+      if (yyssp >= yyss + yystacksize - 1)\n+\tYYABORT;\n+    }\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Entering state %d\\n\", yystate);\n+#endif\n+\n+  goto yybackup;\n+ yybackup:\n+\n+/* Do appropriate processing given the current state.  */\n+/* Read a lookahead token if we need one and don't already have one.  */\n+/* yyresume: */\n+\n+  /* First try to decide what to do without reference to lookahead token.  */\n+\n+  yyn = yypact[yystate];\n+  if (yyn == YYFLAG)\n+    goto yydefault;\n+\n+  /* Not known => get a lookahead token if don't already have one.  */\n+\n+  /* yychar is either YYEMPTY or YYEOF\n+     or a valid token in external form.  */\n+\n+  if (yychar == YYEMPTY)\n+    {\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Reading a token: \");\n+#endif\n+      yychar = YYLEX;\n+    }\n+\n+  /* Convert token to internal form (in yychar1) for indexing tables with */\n+\n+  if (yychar <= 0)\t\t/* This means end of input. */\n+    {\n+      yychar1 = 0;\n+      yychar = YYEOF;\t\t/* Don't call YYLEX any more */\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Now at end of input.\\n\");\n+#endif\n+    }\n+  else\n+    {\n+      yychar1 = YYTRANSLATE(yychar);\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\t{\n+\t  fprintf (stderr, \"Next token is %d (%s\", yychar, yytname[yychar1]);\n+\t  /* Give the individual parser a way to print the precise meaning\n+\t     of a token, for further debugging info.  */\n+#ifdef YYPRINT\n+\t  YYPRINT (stderr, yychar, yylval);\n+#endif\n+\t  fprintf (stderr, \")\\n\");\n+\t}\n+#endif\n+    }\n+\n+  yyn += yychar1;\n+  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)\n+    goto yydefault;\n+\n+  yyn = yytable[yyn];\n+\n+  /* yyn is what to do for this token type in this state.\n+     Negative => reduce, -yyn is rule number.\n+     Positive => shift, yyn is new state.\n+       New state is final state => don't bother to shift,\n+       just return success.\n+     0, or most negative number => error.  */\n+\n+  if (yyn < 0)\n+    {\n+      if (yyn == YYFLAG)\n+\tgoto yyerrlab;\n+      yyn = -yyn;\n+      goto yyreduce;\n+    }\n+  else if (yyn == 0)\n+    goto yyerrlab;\n+\n+  if (yyn == YYFINAL)\n+    YYACCEPT;\n+\n+  /* Shift the lookahead token.  */\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Shifting token %d (%s), \", yychar, yytname[yychar1]);\n+#endif\n+\n+  /* Discard the token being shifted unless it is eof.  */\n+  if (yychar != YYEOF)\n+    yychar = YYEMPTY;\n+\n+  *++yyvsp = yylval;\n+#ifdef YYLSP_NEEDED\n+  *++yylsp = yylloc;\n+#endif\n+\n+  /* count tokens shifted since error; after three, turn off error status.  */\n+  if (yyerrstatus) yyerrstatus--;\n+\n+  yystate = yyn;\n+  goto yynewstate;\n+\n+/* Do the default action for the current state.  */\n+yydefault:\n+\n+  yyn = yydefact[yystate];\n+  if (yyn == 0)\n+    goto yyerrlab;\n+\n+/* Do a reduction.  yyn is the number of a rule to reduce with.  */\n+yyreduce:\n+  yylen = yyr2[yyn];\n+  if (yylen > 0)\n+    yyval = yyvsp[1-yylen]; /* implement default value of the action */\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    {\n+      int i;\n+\n+      fprintf (stderr, \"Reducing via rule %d (line %d), \",\n+\t       yyn, yyrline[yyn]);\n+\n+      /* Print the symbols being reduced, and their result.  */\n+      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)\n+\tfprintf (stderr, \"%s \", yytname[yyrhs[i]]);\n+      fprintf (stderr, \" -> %s\\n\", yytname[yyr1[yyn]]);\n+    }\n+#endif\n+\n+\n+  switch (yyn) {\n+\n+case 1:\n+#line 275 \"cexp.y\"\n+{ expression_value = yyvsp[0].integer.value; ;\n+    break;}\n+case 3:\n+#line 281 \"cexp.y\"\n+{ if (pedantic)\n+\t\t\t    pedwarn (\"comma operator in operand of `#if'\");\n+\t\t\t  yyval.integer = yyvsp[0].integer; ;\n+    break;}\n+case 4:\n+#line 288 \"cexp.y\"\n+{ yyval.integer.value = - yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp;\n+\t\t\t  if ((yyval.integer.value & yyvsp[0].integer.value & yyval.integer.signedp) < 0)\n+\t\t\t    integer_overflow (); ;\n+    break;}\n+case 5:\n+#line 293 \"cexp.y\"\n+{ yyval.integer.value = ! yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 6:\n+#line 296 \"cexp.y\"\n+{ yyval.integer = yyvsp[0].integer; ;\n+    break;}\n+case 7:\n+#line 298 \"cexp.y\"\n+{ yyval.integer.value = ~ yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp; ;\n+    break;}\n+case 8:\n+#line 301 \"cexp.y\"\n+{ yyval.integer.value = check_assertion (yyvsp[0].name.address, yyvsp[0].name.length,\n+\t\t\t\t\t\t      0, NULL_PTR);\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 9:\n+#line 305 \"cexp.y\"\n+{ keyword_parsing = 1; ;\n+    break;}\n+case 10:\n+#line 307 \"cexp.y\"\n+{ yyval.integer.value = check_assertion (yyvsp[-4].name.address, yyvsp[-4].name.length,\n+\t\t\t\t\t\t      1, yyvsp[-1].keywords);\n+\t\t\t  keyword_parsing = 0;\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 11:\n+#line 312 \"cexp.y\"\n+{ yyval.integer = yyvsp[-1].integer; ;\n+    break;}\n+case 12:\n+#line 317 \"cexp.y\"\n+{ yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n+\t\t\t  if (yyval.integer.signedp)\n+\t\t\t    {\n+\t\t\t      yyval.integer.value = yyvsp[-2].integer.value * yyvsp[0].integer.value;\n+\t\t\t      if (yyvsp[-2].integer.value\n+\t\t\t\t  && (yyval.integer.value / yyvsp[-2].integer.value != yyvsp[0].integer.value\n+\t\t\t\t      || (yyval.integer.value & yyvsp[-2].integer.value & yyvsp[0].integer.value) < 0))\n+\t\t\t\tinteger_overflow ();\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t* yyvsp[0].integer.value); ;\n+    break;}\n+case 13:\n+#line 330 \"cexp.y\"\n+{ if (yyvsp[0].integer.value == 0)\n+\t\t\t    {\n+\t\t\t      if (!skip_evaluation)\n+\t\t\t\terror (\"division by zero in #if\");\n+\t\t\t      yyvsp[0].integer.value = 1;\n+\t\t\t    }\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n+\t\t\t  if (yyval.integer.signedp)\n+\t\t\t    {\n+\t\t\t      yyval.integer.value = yyvsp[-2].integer.value / yyvsp[0].integer.value;\n+\t\t\t      if ((yyval.integer.value & yyvsp[-2].integer.value & yyvsp[0].integer.value) < 0)\n+\t\t\t\tinteger_overflow ();\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t/ yyvsp[0].integer.value); ;\n+    break;}\n+case 14:\n+#line 347 \"cexp.y\"\n+{ if (yyvsp[0].integer.value == 0)\n+\t\t\t    {\n+\t\t\t      if (!skip_evaluation)\n+\t\t\t\terror (\"division by zero in #if\");\n+\t\t\t      yyvsp[0].integer.value = 1;\n+\t\t\t    }\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n+\t\t\t  if (yyval.integer.signedp)\n+\t\t\t    yyval.integer.value = yyvsp[-2].integer.value % yyvsp[0].integer.value;\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t% yyvsp[0].integer.value); ;\n+    break;}\n+case 15:\n+#line 360 \"cexp.y\"\n+{ yyval.integer.value = yyvsp[-2].integer.value + yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n+\t\t\t  if (overflow_sum_sign (yyvsp[-2].integer.value, yyvsp[0].integer.value,\n+\t\t\t\t\t\t yyval.integer.value, yyval.integer.signedp))\n+\t\t\t    integer_overflow (); ;\n+    break;}\n+case 16:\n+#line 366 \"cexp.y\"\n+{ yyval.integer.value = yyvsp[-2].integer.value - yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n+\t\t\t  if (overflow_sum_sign (yyval.integer.value, yyvsp[0].integer.value,\n+\t\t\t\t\t\t yyvsp[-2].integer.value, yyval.integer.signedp))\n+\t\t\t    integer_overflow (); ;\n+    break;}\n+case 17:\n+#line 372 \"cexp.y\"\n+{ yyval.integer.signedp = yyvsp[-2].integer.signedp;\n+\t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n+\t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n+    break;}\n+case 18:\n+#line 378 \"cexp.y\"\n+{ yyval.integer.signedp = yyvsp[-2].integer.signedp;\n+\t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n+\t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n+    break;}\n+case 19:\n+#line 384 \"cexp.y\"\n+{ yyval.integer.value = (yyvsp[-2].integer.value == yyvsp[0].integer.value);\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 20:\n+#line 387 \"cexp.y\"\n+{ yyval.integer.value = (yyvsp[-2].integer.value != yyvsp[0].integer.value);\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 21:\n+#line 390 \"cexp.y\"\n+{ yyval.integer.signedp = SIGNED;\n+\t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n+\t\t\t    yyval.integer.value = yyvsp[-2].integer.value <= yyvsp[0].integer.value;\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t<= yyvsp[0].integer.value); ;\n+    break;}\n+case 22:\n+#line 397 \"cexp.y\"\n+{ yyval.integer.signedp = SIGNED;\n+\t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n+\t\t\t    yyval.integer.value = yyvsp[-2].integer.value >= yyvsp[0].integer.value;\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t>= yyvsp[0].integer.value); ;\n+    break;}\n+case 23:\n+#line 404 \"cexp.y\"\n+{ yyval.integer.signedp = SIGNED;\n+\t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n+\t\t\t    yyval.integer.value = yyvsp[-2].integer.value < yyvsp[0].integer.value;\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t< yyvsp[0].integer.value); ;\n+    break;}\n+case 24:\n+#line 411 \"cexp.y\"\n+{ yyval.integer.signedp = SIGNED;\n+\t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n+\t\t\t    yyval.integer.value = yyvsp[-2].integer.value > yyvsp[0].integer.value;\n+\t\t\t  else\n+\t\t\t    yyval.integer.value = ((unsigned HOST_WIDE_INT) yyvsp[-2].integer.value\n+\t\t\t\t\t> yyvsp[0].integer.value); ;\n+    break;}\n+case 25:\n+#line 418 \"cexp.y\"\n+{ yyval.integer.value = yyvsp[-2].integer.value & yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n+    break;}\n+case 26:\n+#line 421 \"cexp.y\"\n+{ yyval.integer.value = yyvsp[-2].integer.value ^ yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n+    break;}\n+case 27:\n+#line 424 \"cexp.y\"\n+{ yyval.integer.value = yyvsp[-2].integer.value | yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n+    break;}\n+case 28:\n+#line 427 \"cexp.y\"\n+{ skip_evaluation += !yyvsp[-1].integer.value; ;\n+    break;}\n+case 29:\n+#line 429 \"cexp.y\"\n+{ skip_evaluation -= !yyvsp[-3].integer.value;\n+\t\t\t  yyval.integer.value = (yyvsp[-3].integer.value && yyvsp[0].integer.value);\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 30:\n+#line 433 \"cexp.y\"\n+{ skip_evaluation += !!yyvsp[-1].integer.value; ;\n+    break;}\n+case 31:\n+#line 435 \"cexp.y\"\n+{ skip_evaluation -= !!yyvsp[-3].integer.value;\n+\t\t\t  yyval.integer.value = (yyvsp[-3].integer.value || yyvsp[0].integer.value);\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 32:\n+#line 439 \"cexp.y\"\n+{ skip_evaluation += !yyvsp[-1].integer.value; ;\n+    break;}\n+case 33:\n+#line 441 \"cexp.y\"\n+{ skip_evaluation += !!yyvsp[-4].integer.value - !yyvsp[-4].integer.value; ;\n+    break;}\n+case 34:\n+#line 443 \"cexp.y\"\n+{ skip_evaluation -= !!yyvsp[-6].integer.value;\n+\t\t\t  yyval.integer.value = yyvsp[-6].integer.value ? yyvsp[-3].integer.value : yyvsp[0].integer.value;\n+\t\t\t  yyval.integer.signedp = yyvsp[-3].integer.signedp & yyvsp[0].integer.signedp; ;\n+    break;}\n+case 35:\n+#line 447 \"cexp.y\"\n+{ yyval.integer = yylval.integer; ;\n+    break;}\n+case 36:\n+#line 449 \"cexp.y\"\n+{ yyval.integer = yylval.integer; ;\n+    break;}\n+case 37:\n+#line 451 \"cexp.y\"\n+{ if (warn_undef && !skip_evaluation)\n+\t\t\t    warning (\"`%.*s' is not defined\",\n+\t\t\t\t     yyvsp[0].name.length, yyvsp[0].name.address);\n+\t\t\t  yyval.integer.value = 0;\n+\t\t\t  yyval.integer.signedp = SIGNED; ;\n+    break;}\n+case 38:\n+#line 459 \"cexp.y\"\n+{ yyval.keywords = 0; ;\n+    break;}\n+case 39:\n+#line 461 \"cexp.y\"\n+{ struct arglist *temp;\n+\t\t\t  yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n+\t\t\t  yyval.keywords->next = yyvsp[-2].keywords;\n+\t\t\t  yyval.keywords->name = (U_CHAR *) \"(\";\n+\t\t\t  yyval.keywords->length = 1;\n+\t\t\t  temp = yyval.keywords;\n+\t\t\t  while (temp != 0 && temp->next != 0)\n+\t\t\t    temp = temp->next;\n+\t\t\t  temp->next = (struct arglist *) xmalloc (sizeof (struct arglist));\n+\t\t\t  temp->next->next = yyvsp[0].keywords;\n+\t\t\t  temp->next->name = (U_CHAR *) \")\";\n+\t\t\t  temp->next->length = 1; ;\n+    break;}\n+case 40:\n+#line 474 \"cexp.y\"\n+{ yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n+\t\t\t  yyval.keywords->name = yyvsp[-1].name.address;\n+\t\t\t  yyval.keywords->length = yyvsp[-1].name.length;\n+\t\t\t  yyval.keywords->next = yyvsp[0].keywords; ;\n+    break;}\n+}\n+   /* the action file gets copied in in place of this dollarsign */\n+#line 487 \"/usr/local/share/bison.simple\"\n+\f\n+  yyvsp -= yylen;\n+  yyssp -= yylen;\n+#ifdef YYLSP_NEEDED\n+  yylsp -= yylen;\n+#endif\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    {\n+      short *ssp1 = yyss - 1;\n+      fprintf (stderr, \"state stack now\");\n+      while (ssp1 != yyssp)\n+\tfprintf (stderr, \" %d\", *++ssp1);\n+      fprintf (stderr, \"\\n\");\n+    }\n+#endif\n+\n+  *++yyvsp = yyval;\n+\n+#ifdef YYLSP_NEEDED\n+  yylsp++;\n+  if (yylen == 0)\n+    {\n+      yylsp->first_line = yylloc.first_line;\n+      yylsp->first_column = yylloc.first_column;\n+      yylsp->last_line = (yylsp-1)->last_line;\n+      yylsp->last_column = (yylsp-1)->last_column;\n+      yylsp->text = 0;\n+    }\n+  else\n+    {\n+      yylsp->last_line = (yylsp+yylen-1)->last_line;\n+      yylsp->last_column = (yylsp+yylen-1)->last_column;\n+    }\n+#endif\n+\n+  /* Now \"shift\" the result of the reduction.\n+     Determine what state that goes to,\n+     based on the state we popped back to\n+     and the rule number reduced by.  */\n+\n+  yyn = yyr1[yyn];\n+\n+  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;\n+  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)\n+    yystate = yytable[yystate];\n+  else\n+    yystate = yydefgoto[yyn - YYNTBASE];\n+\n+  goto yynewstate;\n+\n+yyerrlab:   /* here on detecting error */\n+\n+  if (! yyerrstatus)\n+    /* If not already recovering from an error, report this error.  */\n+    {\n+      ++yynerrs;\n+\n+#ifdef YYERROR_VERBOSE\n+      yyn = yypact[yystate];\n+\n+      if (yyn > YYFLAG && yyn < YYLAST)\n+\t{\n+\t  int size = 0;\n+\t  char *msg;\n+\t  int x, count;\n+\n+\t  count = 0;\n+\t  /* Start X at -yyn if nec to avoid negative indexes in yycheck.  */\n+\t  for (x = (yyn < 0 ? -yyn : 0);\n+\t       x < (sizeof(yytname) / sizeof(char *)); x++)\n+\t    if (yycheck[x + yyn] == x)\n+\t      size += strlen(yytname[x]) + 15, count++;\n+\t  msg = (char *) malloc(size + 15);\n+\t  if (msg != 0)\n+\t    {\n+\t      strcpy(msg, \"parse error\");\n+\n+\t      if (count < 5)\n+\t\t{\n+\t\t  count = 0;\n+\t\t  for (x = (yyn < 0 ? -yyn : 0);\n+\t\t       x < (sizeof(yytname) / sizeof(char *)); x++)\n+\t\t    if (yycheck[x + yyn] == x)\n+\t\t      {\n+\t\t\tstrcat(msg, count == 0 ? \", expecting `\" : \" or `\");\n+\t\t\tstrcat(msg, yytname[x]);\n+\t\t\tstrcat(msg, \"'\");\n+\t\t\tcount++;\n+\t\t      }\n+\t\t}\n+\t      yyerror(msg);\n+\t      free(msg);\n+\t    }\n+\t  else\n+\t    yyerror (\"parse error; also virtual memory exceeded\");\n+\t}\n+      else\n+#endif /* YYERROR_VERBOSE */\n+\tyyerror(\"parse error\");\n+    }\n+\n+  goto yyerrlab1;\n+yyerrlab1:   /* here on error raised explicitly by an action */\n+\n+  if (yyerrstatus == 3)\n+    {\n+      /* if just tried and failed to reuse lookahead token after an error, discard it.  */\n+\n+      /* return failure if at end of input */\n+      if (yychar == YYEOF)\n+\tYYABORT;\n+\n+#if YYDEBUG != 0\n+      if (yydebug)\n+\tfprintf(stderr, \"Discarding token %d (%s).\\n\", yychar, yytname[yychar1]);\n+#endif\n+\n+      yychar = YYEMPTY;\n+    }\n+\n+  /* Else will try to reuse lookahead token\n+     after shifting the error token.  */\n+\n+  yyerrstatus = 3;\t\t/* Each real token shifted decrements this */\n+\n+  goto yyerrhandle;\n+\n+yyerrdefault:  /* current state does not do anything special for the error token. */\n+\n+#if 0\n+  /* This is wrong; only states that explicitly want error tokens\n+     should shift them.  */\n+  yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Otherwise pop it.*/\n+  if (yyn) goto yydefault;\n+#endif\n+\n+yyerrpop:   /* pop the current state because it cannot handle the error token */\n+\n+  if (yyssp == yyss) YYABORT;\n+  yyvsp--;\n+  yystate = *--yyssp;\n+#ifdef YYLSP_NEEDED\n+  yylsp--;\n+#endif\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    {\n+      short *ssp1 = yyss - 1;\n+      fprintf (stderr, \"Error: state stack now\");\n+      while (ssp1 != yyssp)\n+\tfprintf (stderr, \" %d\", *++ssp1);\n+      fprintf (stderr, \"\\n\");\n+    }\n+#endif\n+\n+yyerrhandle:\n+\n+  yyn = yypact[yystate];\n+  if (yyn == YYFLAG)\n+    goto yyerrdefault;\n+\n+  yyn += YYTERROR;\n+  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)\n+    goto yyerrdefault;\n+\n+  yyn = yytable[yyn];\n+  if (yyn < 0)\n+    {\n+      if (yyn == YYFLAG)\n+\tgoto yyerrpop;\n+      yyn = -yyn;\n+      goto yyreduce;\n+    }\n+  else if (yyn == 0)\n+    goto yyerrpop;\n+\n+  if (yyn == YYFINAL)\n+    YYACCEPT;\n+\n+#if YYDEBUG != 0\n+  if (yydebug)\n+    fprintf(stderr, \"Shifting error token, \");\n+#endif\n+\n+  *++yyvsp = yylval;\n+#ifdef YYLSP_NEEDED\n+  *++yylsp = yylloc;\n+#endif\n+\n+  yystate = yyn;\n+  goto yynewstate;\n+}\n+#line 479 \"cexp.y\"\n+\n+\f\n+/* During parsing of a C expression, the pointer to the next character\n+   is in this variable.  */\n+\n+static char *lexptr;\n+\n+/* Take care of parsing a number (anything that starts with a digit).\n+   Set yylval and return the token type; update lexptr.\n+   LEN is the number of characters in it.  */\n+\n+/* maybe needs to actually deal with floating point numbers */\n+\n+static int\n+parse_number (olen)\n+     int olen;\n+{\n+  register char *p = lexptr;\n+  register int c;\n+  register unsigned HOST_WIDE_INT n = 0, nd, max_over_base;\n+  register int base = 10;\n+  register int len = olen;\n+  register int overflow = 0;\n+  register int digit, largest_digit = 0;\n+  int spec_long = 0;\n+\n+  yylval.integer.signedp = SIGNED;\n+\n+  if (*p == '0') {\n+    base = 8;\n+    if (len >= 3 && (p[1] == 'x' || p[1] == 'X')) {\n+      p += 2;\n+      base = 16;\n+      len -= 2;\n+    }\n+  }\n+\n+  max_over_base = (unsigned HOST_WIDE_INT) -1 / base;\n+\n+  for (; len > 0; len--) {\n+    c = *p++;\n+\n+    if (c >= '0' && c <= '9')\n+      digit = c - '0';\n+    else if (base == 16 && c >= 'a' && c <= 'f')\n+      digit = c - 'a' + 10;\n+    else if (base == 16 && c >= 'A' && c <= 'F')\n+      digit = c - 'A' + 10;\n+    else {\n+      /* `l' means long, and `u' means unsigned.  */\n+      while (1) {\n+\tif (c == 'l' || c == 'L')\n+\t  {\n+\t    if (!pedantic < spec_long)\n+\t      yyerror (\"too many `l's in integer constant\");\n+\t    spec_long++;\n+\t  }\n+\telse if (c == 'u' || c == 'U')\n+\t  {\n+\t    if (! yylval.integer.signedp)\n+\t      yyerror (\"two `u's in integer constant\");\n+\t    yylval.integer.signedp = UNSIGNED;\n+\t  }\n+\telse {\n+\t  if (c == '.' || c == 'e' || c == 'E' || c == 'p' || c == 'P')\n+\t    yyerror (\"Floating point numbers not allowed in #if expressions\");\n+\t  else {\n+\t    char *buf = (char *) alloca (p - lexptr + 40);\n+\t    sprintf (buf, \"missing white space after number `%.*s'\",\n+\t\t     (int) (p - lexptr - 1), lexptr);\n+\t    yyerror (buf);\n+\t  }\n+\t}\n+\n+\tif (--len == 0)\n+\t  break;\n+\tc = *p++;\n+      }\n+      /* Don't look for any more digits after the suffixes.  */\n+      break;\n+    }\n+    if (largest_digit < digit)\n+      largest_digit = digit;\n+    nd = n * base + digit;\n+    overflow |= (max_over_base < n) | (nd < n);\n+    n = nd;\n+  }\n+\n+  if (base <= largest_digit)\n+    pedwarn (\"integer constant contains digits beyond the radix\");\n+\n+  if (overflow)\n+    pedwarn (\"integer constant out of range\");\n+\n+  /* If too big to be signed, consider it unsigned.  */\n+  if (((HOST_WIDE_INT) n & yylval.integer.signedp) < 0)\n+    {\n+      if (base == 10)\n+\twarning (\"integer constant is so large that it is unsigned\");\n+      yylval.integer.signedp = UNSIGNED;\n+    }\n+\n+  lexptr = p;\n+  yylval.integer.value = n;\n+  return INT;\n+}\n+\n+struct token {\n+  char *operator;\n+  int token;\n+};\n+\n+static struct token tokentab2[] = {\n+  {\"&&\", AND},\n+  {\"||\", OR},\n+  {\"<<\", LSH},\n+  {\">>\", RSH},\n+  {\"==\", EQUAL},\n+  {\"!=\", NOTEQUAL},\n+  {\"<=\", LEQ},\n+  {\">=\", GEQ},\n+  {\"++\", ERROR},\n+  {\"--\", ERROR},\n+  {NULL, ERROR}\n+};\n+\n+/* Read one token, getting characters through lexptr.  */\n+\n+static int\n+yylex ()\n+{\n+  register int c;\n+  register int namelen;\n+  register unsigned char *tokstart;\n+  register struct token *toktab;\n+  int wide_flag;\n+  HOST_WIDE_INT mask;\n+\n+ retry:\n+\n+  tokstart = (unsigned char *) lexptr;\n+  c = *tokstart;\n+  /* See if it is a special token of length 2.  */\n+  if (! keyword_parsing)\n+    for (toktab = tokentab2; toktab->operator != NULL; toktab++)\n+      if (c == *toktab->operator && tokstart[1] == toktab->operator[1]) {\n+\tlexptr += 2;\n+\tif (toktab->token == ERROR)\n+\t  {\n+\t    char *buf = (char *) alloca (40);\n+\t    sprintf (buf, \"`%s' not allowed in operand of `#if'\", toktab->operator);\n+\t    yyerror (buf);\n+\t  }\n+\treturn toktab->token;\n+      }\n+\n+  switch (c) {\n+  case '\\n':\n+    return 0;\n+    \n+  case ' ':\n+  case '\\t':\n+  case '\\r':\n+    lexptr++;\n+    goto retry;\n+    \n+  case 'L':\n+    /* Capital L may start a wide-string or wide-character constant.  */\n+    if (lexptr[1] == '\\'')\n+      {\n+\tlexptr++;\n+\twide_flag = 1;\n+\tmask = MAX_WCHAR_TYPE_MASK;\n+\tgoto char_constant;\n+      }\n+    if (lexptr[1] == '\"')\n+      {\n+\tlexptr++;\n+\twide_flag = 1;\n+\tmask = MAX_WCHAR_TYPE_MASK;\n+\tgoto string_constant;\n+      }\n+    break;\n+\n+  case '\\'':\n+    wide_flag = 0;\n+    mask = MAX_CHAR_TYPE_MASK;\n+  char_constant:\n+    lexptr++;\n+    if (keyword_parsing) {\n+      char *start_ptr = lexptr - 1;\n+      while (1) {\n+\tc = *lexptr++;\n+\tif (c == '\\\\')\n+\t  c = parse_escape (&lexptr, mask);\n+\telse if (c == '\\'')\n+\t  break;\n+      }\n+      yylval.name.address = tokstart;\n+      yylval.name.length = lexptr - start_ptr;\n+      return NAME;\n+    }\n+\n+    /* This code for reading a character constant\n+       handles multicharacter constants and wide characters.\n+       It is mostly copied from c-lex.c.  */\n+    {\n+      register HOST_WIDE_INT result = 0;\n+      register num_chars = 0;\n+      unsigned width = MAX_CHAR_TYPE_SIZE;\n+      int max_chars;\n+      char *token_buffer;\n+\n+      if (wide_flag)\n+\t{\n+\t  width = MAX_WCHAR_TYPE_SIZE;\n+#ifdef MULTIBYTE_CHARS\n+\t  max_chars = MB_CUR_MAX;\n+#else\n+\t  max_chars = 1;\n+#endif\n+\t}\n+      else\n+\tmax_chars = MAX_LONG_TYPE_SIZE / width;\n+\n+      token_buffer = (char *) alloca (max_chars + 1);\n+\n+      while (1)\n+\t{\n+\t  c = *lexptr++;\n+\n+\t  if (c == '\\'' || c == EOF)\n+\t    break;\n+\n+\t  if (c == '\\\\')\n+\t    {\n+\t      c = parse_escape (&lexptr, mask);\n+\t    }\n+\n+\t  num_chars++;\n+\n+\t  /* Merge character into result; ignore excess chars.  */\n+\t  if (num_chars <= max_chars)\n+\t    {\n+\t      if (width < HOST_BITS_PER_WIDE_INT)\n+\t\tresult = (result << width) | c;\n+\t      else\n+\t\tresult = c;\n+\t      token_buffer[num_chars - 1] = c;\n+\t    }\n+\t}\n+\n+      token_buffer[num_chars] = 0;\n+\n+      if (c != '\\'')\n+\terror (\"malformatted character constant\");\n+      else if (num_chars == 0)\n+\terror (\"empty character constant\");\n+      else if (num_chars > max_chars)\n+\t{\n+\t  num_chars = max_chars;\n+\t  error (\"character constant too long\");\n+\t}\n+      else if (num_chars != 1 && ! traditional)\n+\twarning (\"multi-character character constant\");\n+\n+      /* If char type is signed, sign-extend the constant.  */\n+      if (! wide_flag)\n+\t{\n+\t  int num_bits = num_chars * width;\n+\n+\t  if (lookup ((U_CHAR *) \"__CHAR_UNSIGNED__\",\n+\t\t      sizeof (\"__CHAR_UNSIGNED__\") - 1, -1)\n+\t      || ((result >> (num_bits - 1)) & 1) == 0)\n+\t    yylval.integer.value\n+\t      = result & (~ (unsigned HOST_WIDE_INT) 0\n+\t\t\t  >> (HOST_BITS_PER_WIDE_INT - num_bits));\n+\t  else\n+\t    yylval.integer.value\n+\t      = result | ~(~ (unsigned HOST_WIDE_INT) 0\n+\t\t\t   >> (HOST_BITS_PER_WIDE_INT - num_bits));\n+\t}\n+      else\n+\t{\n+#ifdef MULTIBYTE_CHARS\n+\t  /* Set the initial shift state and convert the next sequence.  */\n+\t  result = 0;\n+\t  /* In all locales L'\\0' is zero and mbtowc will return zero,\n+\t     so don't use it.  */\n+\t  if (num_chars > 1\n+\t      || (num_chars == 1 && token_buffer[0] != '\\0'))\n+\t    {\n+\t      wchar_t wc;\n+\t      (void) mbtowc (NULL_PTR, NULL_PTR, 0);\n+\t      if (mbtowc (& wc, token_buffer, num_chars) == num_chars)\n+\t\tresult = wc;\n+\t      else\n+\t\tpedwarn (\"Ignoring invalid multibyte character\");\n+\t    }\n+#endif\n+\t  yylval.integer.value = result;\n+\t}\n+    }\n+\n+    /* This is always a signed type.  */\n+    yylval.integer.signedp = SIGNED;\n+    \n+    return CHAR;\n+\n+    /* some of these chars are invalid in constant expressions;\n+       maybe do something about them later */\n+  case '/':\n+  case '+':\n+  case '-':\n+  case '*':\n+  case '%':\n+  case '|':\n+  case '&':\n+  case '^':\n+  case '~':\n+  case '!':\n+  case '@':\n+  case '<':\n+  case '>':\n+  case '[':\n+  case ']':\n+  case '.':\n+  case '?':\n+  case ':':\n+  case '=':\n+  case '{':\n+  case '}':\n+  case ',':\n+  case '#':\n+    if (keyword_parsing)\n+      break;\n+  case '(':\n+  case ')':\n+    lexptr++;\n+    return c;\n+\n+  case '\"':\n+    mask = MAX_CHAR_TYPE_MASK;\n+  string_constant:\n+    if (keyword_parsing) {\n+      char *start_ptr = lexptr;\n+      lexptr++;\n+      while (1) {\n+\tc = *lexptr++;\n+\tif (c == '\\\\')\n+\t  c = parse_escape (&lexptr, mask);\n+\telse if (c == '\"')\n+\t  break;\n+      }\n+      yylval.name.address = tokstart;\n+      yylval.name.length = lexptr - start_ptr;\n+      return NAME;\n+    }\n+    yyerror (\"string constants not allowed in #if expressions\");\n+    return ERROR;\n+  }\n+\n+  if (c >= '0' && c <= '9' && !keyword_parsing) {\n+    /* It's a number */\n+    for (namelen = 1; ; namelen++) {\n+      int d = tokstart[namelen];\n+      if (! ((is_idchar[d] || d == '.')\n+\t     || ((d == '-' || d == '+')\n+\t\t && (c == 'e' || c == 'E'\n+\t\t     || ((c == 'p' || c == 'P') && ! c89))\n+\t\t && ! traditional)))\n+\tbreak;\n+      c = d;\n+    }\n+    return parse_number (namelen);\n+  }\n+\n+  /* It is a name.  See how long it is.  */\n+\n+  if (keyword_parsing) {\n+    for (namelen = 0;; namelen++) {\n+      if (is_space[tokstart[namelen]])\n+\tbreak;\n+      if (tokstart[namelen] == '(' || tokstart[namelen] == ')')\n+\tbreak;\n+      if (tokstart[namelen] == '\"' || tokstart[namelen] == '\\'')\n+\tbreak;\n+    }\n+  } else {\n+    if (!is_idstart[c]) {\n+      yyerror (\"Invalid token in expression\");\n+      return ERROR;\n+    }\n+\n+    for (namelen = 0; is_idchar[tokstart[namelen]]; namelen++)\n+      ;\n+  }\n+  \n+  lexptr += namelen;\n+  yylval.name.address = tokstart;\n+  yylval.name.length = namelen;\n+  return NAME;\n+}\n+\n+\n+/* Parse a C escape sequence.  STRING_PTR points to a variable\n+   containing a pointer to the string to parse.  That pointer\n+   is updated past the characters we use.  The value of the\n+   escape sequence is returned.\n+\n+   RESULT_MASK is used to mask out the result;\n+   an error is reported if bits are lost thereby.\n+\n+   A negative value means the sequence \\ newline was seen,\n+   which is supposed to be equivalent to nothing at all.\n+\n+   If \\ is followed by a null character, we return a negative\n+   value and leave the string pointer pointing at the null character.\n+\n+   If \\ is followed by 000, we return 0 and leave the string pointer\n+   after the zeros.  A value of 0 does not mean end of string.  */\n+\n+HOST_WIDE_INT\n+parse_escape (string_ptr, result_mask)\n+     char **string_ptr;\n+     HOST_WIDE_INT result_mask;\n+{\n+  register int c = *(*string_ptr)++;\n+  switch (c)\n+    {\n+    case 'a':\n+      return TARGET_BELL;\n+    case 'b':\n+      return TARGET_BS;\n+    case 'e':\n+    case 'E':\n+      if (pedantic)\n+\tpedwarn (\"non-ANSI-standard escape sequence, `\\\\%c'\", c);\n+      return 033;\n+    case 'f':\n+      return TARGET_FF;\n+    case 'n':\n+      return TARGET_NEWLINE;\n+    case 'r':\n+      return TARGET_CR;\n+    case 't':\n+      return TARGET_TAB;\n+    case 'v':\n+      return TARGET_VT;\n+    case '\\n':\n+      return -2;\n+    case 0:\n+      (*string_ptr)--;\n+      return 0;\n+      \n+    case '0':\n+    case '1':\n+    case '2':\n+    case '3':\n+    case '4':\n+    case '5':\n+    case '6':\n+    case '7':\n+      {\n+\tregister HOST_WIDE_INT i = c - '0';\n+\tregister int count = 0;\n+\twhile (++count < 3)\n+\t  {\n+\t    c = *(*string_ptr)++;\n+\t    if (c >= '0' && c <= '7')\n+\t      i = (i << 3) + c - '0';\n+\t    else\n+\t      {\n+\t\t(*string_ptr)--;\n+\t\tbreak;\n+\t      }\n+\t  }\n+\tif (i != (i & result_mask))\n+\t  {\n+\t    i &= result_mask;\n+\t    pedwarn (\"octal escape sequence out of range\");\n+\t  }\n+\treturn i;\n+      }\n+    case 'x':\n+      {\n+\tregister unsigned HOST_WIDE_INT i = 0, overflow = 0;\n+\tregister int digits_found = 0, digit;\n+\tfor (;;)\n+\t  {\n+\t    c = *(*string_ptr)++;\n+\t    if (c >= '0' && c <= '9')\n+\t      digit = c - '0';\n+\t    else if (c >= 'a' && c <= 'f')\n+\t      digit = c - 'a' + 10;\n+\t    else if (c >= 'A' && c <= 'F')\n+\t      digit = c - 'A' + 10;\n+\t    else\n+\t      {\n+\t\t(*string_ptr)--;\n+\t\tbreak;\n+\t      }\n+\t    overflow |= i ^ (i << 4 >> 4);\n+\t    i = (i << 4) + digit;\n+\t    digits_found = 1;\n+\t  }\n+\tif (!digits_found)\n+\t  yyerror (\"\\\\x used with no following hex digits\");\n+\tif (overflow | (i != (i & result_mask)))\n+\t  {\n+\t    i &= result_mask;\n+\t    pedwarn (\"hex escape sequence out of range\");\n+\t  }\n+\treturn i;\n+      }\n+    default:\n+      return c;\n+    }\n+}\n+\n+static void\n+yyerror (s)\n+     char *s;\n+{\n+  error (\"%s\", s);\n+  skip_evaluation = 0;\n+  longjmp (parse_return_error, 1);\n+}\n+\n+static void\n+integer_overflow ()\n+{\n+  if (!skip_evaluation && pedantic)\n+    pedwarn (\"integer overflow in preprocessor expression\");\n+}\n+\n+static HOST_WIDE_INT\n+left_shift (a, b)\n+     struct constant *a;\n+     unsigned HOST_WIDE_INT b;\n+{\n+   /* It's unclear from the C standard whether shifts can overflow.\n+      The following code ignores overflow; perhaps a C standard\n+      interpretation ruling is needed.  */\n+  if (b >= HOST_BITS_PER_WIDE_INT)\n+    return 0;\n+  else\n+    return (unsigned HOST_WIDE_INT) a->value << b;\n+}\n+\n+static HOST_WIDE_INT\n+right_shift (a, b)\n+     struct constant *a;\n+     unsigned HOST_WIDE_INT b;\n+{\n+  if (b >= HOST_BITS_PER_WIDE_INT)\n+    return a->signedp ? a->value >> (HOST_BITS_PER_WIDE_INT - 1) : 0;\n+  else if (a->signedp)\n+    return a->value >> b;\n+  else\n+    return (unsigned HOST_WIDE_INT) a->value >> b;\n+}\n+\f\n+/* This page contains the entry point to this file.  */\n+\n+/* Parse STRING as an expression, and complain if this fails\n+   to use up all of the contents of STRING.  */\n+/* STRING may contain '\\0' bytes; it is terminated by the first '\\n'\n+   outside a string constant, so that we can diagnose '\\0' properly.  */\n+/* We do not support C comments.  They should be removed before\n+   this function is called.  */\n+\n+HOST_WIDE_INT\n+parse_c_expression (string)\n+     char *string;\n+{\n+  lexptr = string;\n+\n+  /* if there is some sort of scanning error, just return 0 and assume\n+     the parsing routine has printed an error message somewhere.\n+     there is surely a better thing to do than this.     */\n+  if (setjmp (parse_return_error))\n+    return 0;\n+\n+  if (yyparse () != 0)\n+    abort ();\n+\n+  if (*lexptr != '\\n')\n+    error (\"Junk after end of expression.\");\n+\n+  return expression_value;\t/* set by yyparse () */\n+}\n+\f\n+#ifdef TEST_EXP_READER\n+\n+#if YYDEBUG\n+extern int yydebug;\n+#endif\n+\n+int pedantic;\n+int traditional;\n+\n+int main PROTO((int, char **));\n+static void initialize_random_junk PROTO((void));\n+\n+/* Main program for testing purposes.  */\n+int\n+main (argc, argv)\n+     int argc;\n+     char **argv;\n+{\n+  int n, c;\n+  char buf[1024];\n+\n+  pedantic = 1 < argc;\n+  traditional = 2 < argc;\n+#if YYDEBUG\n+  yydebug = 3 < argc;\n+#endif\n+  initialize_random_junk ();\n+\n+  for (;;) {\n+    printf (\"enter expression: \");\n+    n = 0;\n+    while ((buf[n] = c = getchar ()) != '\\n' && c != EOF)\n+      n++;\n+    if (c == EOF)\n+      break;\n+    printf (\"parser returned %ld\\n\", (long) parse_c_expression (buf));\n+  }\n+\n+  return 0;\n+}\n+\n+/* table to tell if char can be part of a C identifier. */\n+unsigned char is_idchar[256];\n+/* table to tell if char can be first char of a c identifier. */\n+unsigned char is_idstart[256];\n+/* table to tell if c is horizontal or vertical space.  */\n+unsigned char is_space[256];\n+\n+/*\n+ * initialize random junk in the hash table and maybe other places\n+ */\n+static void\n+initialize_random_junk ()\n+{\n+  register int i;\n+\n+  /*\n+   * Set up is_idchar and is_idstart tables.  These should be\n+   * faster than saying (is_alpha (c) || c == '_'), etc.\n+   * Must do set up these things before calling any routines tthat\n+   * refer to them.\n+   */\n+  for (i = 'a'; i <= 'z'; i++) {\n+    ++is_idchar[i - 'a' + 'A'];\n+    ++is_idchar[i];\n+    ++is_idstart[i - 'a' + 'A'];\n+    ++is_idstart[i];\n+  }\n+  for (i = '0'; i <= '9'; i++)\n+    ++is_idchar[i];\n+  ++is_idchar['_'];\n+  ++is_idstart['_'];\n+  ++is_idchar['$'];\n+  ++is_idstart['$'];\n+\n+  ++is_space[' '];\n+  ++is_space['\\t'];\n+  ++is_space['\\v'];\n+  ++is_space['\\f'];\n+  ++is_space['\\n'];\n+  ++is_space['\\r'];\n+}\n+\n+void\n+error (PRINTF_ALIST (msg))\n+     PRINTF_DCL (msg)\n+{\n+  va_list args;\n+\n+  VA_START (args, msg);\n+  fprintf (stderr, \"error: \");\n+  vfprintf (stderr, msg, args);\n+  fprintf (stderr, \"\\n\");\n+  va_end (args);\n+}\n+\n+void\n+pedwarn (PRINTF_ALIST (msg))\n+     PRINTF_DCL (msg)\n+{\n+  va_list args;\n+\n+  VA_START (args, msg);\n+  fprintf (stderr, \"pedwarn: \");\n+  vfprintf (stderr, msg, args);\n+  fprintf (stderr, \"\\n\");\n+  va_end (args);\n+}\n+\n+void\n+warning (PRINTF_ALIST (msg))\n+     PRINTF_DCL (msg)\n+{\n+  va_list args;\n+\n+  VA_START (args, msg);\n+  fprintf (stderr, \"warning: \");\n+  vfprintf (stderr, msg, args);\n+  fprintf (stderr, \"\\n\");\n+  va_end (args);\n+}\n+\n+int\n+check_assertion (name, sym_length, tokens_specified, tokens)\n+     U_CHAR *name;\n+     int sym_length;\n+     int tokens_specified;\n+     struct arglist *tokens;\n+{\n+  return 0;\n+}\n+\n+struct hashnode *\n+lookup (name, len, hash)\n+     U_CHAR *name;\n+     int len;\n+     int hash;\n+{\n+  return (DEFAULT_SIGNED_CHAR) ? 0 : ((struct hashnode *) -1);\n+}\n+\n+GENERIC_PTR\n+xmalloc (size)\n+     size_t size;\n+{\n+  return (GENERIC_PTR) malloc (size);\n+}\n+#endif"}, {"sha": "8a04e60e64740735d5eb4ec2178134a4ecac2a5d", "filename": "gcc/config.in", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,32 @@\n+/* config.in.  Generated automatically from configure.in by autoheader.  */\n+\n+/* Include the old config.h as config2.h to simplify the transition\n+   to autoconf.  */\n+#include \"config2.h\"\n+\n+/* Whether malloc must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_MALLOC\n+\n+/* Whether realloc must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_REALLOC\n+\n+/* Whether free must be declared even if <stdlib.h> is included.  */\n+#undef NEED_DECLARATION_FREE\n+\n+/* Define if you have the <stddef.h> header file.  */\n+#undef HAVE_STDDEF_H\n+\n+/* Define if you have the <stdlib.h> header file.  */\n+#undef HAVE_STDLIB_H\n+\n+/* Define if you have the <string.h> header file.  */\n+#undef HAVE_STRING_H\n+\n+/* Define if you have the <strings.h> header file.  */\n+#undef HAVE_STRINGS_H\n+\n+/* Define if you have the <time.h> header file.  */\n+#undef HAVE_TIME_H\n+\n+/* Define if you have the <unistd.h> header file.  */\n+#undef HAVE_UNISTD_H"}, {"sha": "206d8fdc41d082475407abe46f87e329081eee09", "filename": "gcc/config/a29k/xm-unix.h", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fa29k%2Fxm-unix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fa29k%2Fxm-unix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fxm-unix.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,43 @@\n+/* Configuration for GNU C-compiler for AMD Am29000 processor. \n+   Copyright (C) 1987, 1988, 1993 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* #defines that need visibility everywhere.  */\n+#define FALSE 0\n+#define TRUE 1\n+\n+/* This describes the machine the compiler is hosted on.  */\n+#define HOST_BITS_PER_CHAR 8\n+#define HOST_BITS_PER_SHORT 16\n+#define HOST_BITS_PER_INT 32\n+#define HOST_BITS_PER_LONG 32\n+#define HOST_BITS_PER_LONGLONG 64\n+\n+#define HOST_WORDS_BIG_ENDIAN\n+\n+/* target machine dependencies.\n+   tm.h is a symbolic link to the actual target specific file.   */\n+#include \"tm.h\"\n+\n+/* Arguments to use with `exit'.  */\n+#define SUCCESS_EXIT_CODE 0\n+#define FATAL_EXIT_CODE 33\n+\n+/* Ultra is V7, which is closest to USG.  */\n+#define USG"}, {"sha": "3109b5c26964d44e64ae1239c4f06f5a396006e0", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -267,6 +267,23 @@ extern void override_options ();\n /* Define to enable software floating point emulation. */\n #define REAL_ARITHMETIC\n \n+/* The following #defines are used when compiling the routines in\n+   libgcc1.c.  Since the Alpha calling conventions require single\n+   precision floats to be passed in the floating-point registers\n+   (rather than in the general registers) we have to build the\n+   libgcc1.c routines in such a way that they know the actual types\n+   of their formal arguments and the actual types of their return\n+   values.  Otherwise, gcc will generate calls to the libgcc1.c\n+   routines, passing arguments in the floating-point registers,\n+   but the libgcc1.c routines will expect their arguments on the\n+   stack (where the Alpha calling conventions require structs &\n+   unions to be passed).  */\n+\n+#define FLOAT_VALUE_TYPE\tdouble\n+#define INTIFY(FLOATVAL)\t(FLOATVAL)\n+#define FLOATIFY(INTVAL)\t(INTVAL)\n+#define FLOAT_ARG_TYPE\t\tdouble\n+\n /* Define the size of `int'.  The default is the same as the word size.  */\n #define INT_TYPE_SIZE 32\n "}, {"sha": "9426c4ee5a71d3f00f89ac4cc3d0ee35b823b015", "filename": "gcc/config/alpha/xm-linux.h", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Falpha%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Falpha%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-linux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,3 @@\n+#define HAVE_STRERROR\n+#define DONT_DECLARE_SYS_SIGLIST\n+#define USE_BFD"}, {"sha": "955379dab164fc628173874ce66034bbf5147679", "filename": "gcc/config/arm/xm-linux.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Farm%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Farm%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxm-linux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,24 @@\n+/* Configuration for GCC for Intel i386 running Linux.\n+   Copyright (C) 1993, 1994, 1995, 1997 Free Software Foundation, Inc.\n+   Contributed by H.J. Lu (hjl@nynexst.com)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include <arm/xm-arm.h>\n+#include <xm-linux.h>\n+"}, {"sha": "1c7a656486ce76c4e736467ea9a3f2e572cce9d4", "filename": "gcc/config/arm/xm-netbsd.h", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Farm%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Farm%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,10 @@\n+/* Configuration for GCC for ARM running NetBSD as host.  */\n+\n+#include <arm/xm-arm.h>\n+\n+/* xm-netbsd.h defines this */\n+#ifdef HAVE_VPRINTF\n+#undef HAVE_VPRINTF\n+#endif\n+\n+#include <xm-netbsd.h>"}, {"sha": "4a923fca67985b01db410eeba2bd31fb3145f2d2", "filename": "gcc/config/i386/dgux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -25,7 +25,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"i386/sysv4.h\"\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.5 $\"\n+#define VERSION_INFO2   \"$Revision: 1.1 $\"\n #endif\n \n #ifndef VERSION_STRING"}, {"sha": "7a823b96032638c4dc49ede01e77499d4f26e0bb", "filename": "gcc/config/i386/xm-bsd386.h", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-bsd386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-bsd386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-bsd386.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,11 @@\n+/* Configuration for GCC for Intel i386 running BSDI's BSD/386 as host.  */\n+\n+#include \"i386/xm-i386.h\"\n+\n+#define HAVE_STRERROR\n+\n+/* We have _sys_siglist, but the declaration in <signal.h> conflicts with\n+   the declarations in collect2.c so disable the declarations\n+   in those files.  */\n+\n+#define DONT_DECLARE_SYS_SIGLIST"}, {"sha": "5bdb9be0ebb4df0cae9092d24964d9e9c4947270", "filename": "gcc/config/i386/xm-dgux.h", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-dgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-dgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-dgux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,12 @@\n+\n+/* Configuration for GCC for Intel i386 running DG/ux */\n+\n+/* looks just like sysv4 for now */\n+\n+#include \"i386/xm-i386.h\"\n+#include \"xm-svr4.h\"\n+\n+/* If not compiled with GNU C, use the portable alloca.  */\n+#ifndef __GNUC__\n+#define USE_C_ALLOCA\n+#endif"}, {"sha": "007a609f263fb5e3a762cd73cf743d19ad0e0c14", "filename": "gcc/config/i386/xm-freebsd.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-freebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-freebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-freebsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+/* Configuration for GCC for Intel i386 running FreeBSD as host.  */\n+\n+#include <i386/xm-i386.h>\n+#include <xm-freebsd.h>"}, {"sha": "0b5985f9065cc5a346522deaee61e6206b558f53", "filename": "gcc/config/i386/xm-gnu.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-gnu.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,5 @@\n+/* Configuration for GCC for Intel i386 running GNU as host.  */\n+\n+#include <i386/xm-i386.h>\n+#include <xm-gnu.h>\n+"}, {"sha": "42f097ddc6cc247a3c24b461dad3d6a04e153482", "filename": "gcc/config/i386/xm-linux.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-linux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,24 @@\n+/* Configuration for GCC for Intel i386 running Linux.\n+   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n+   Contributed by H.J. Lu (hjl@nynexst.com)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include <i386/xm-i386.h>\n+#include <xm-linux.h>\n+"}, {"sha": "3a9f324199079b88d280ff23cf4baa9a58a75fee", "filename": "gcc/config/i386/xm-netbsd.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+/* Configuration for GCC for Intel i386 running NetBSD as host.  */\n+\n+#include <i386/xm-i386.h>\n+#include <xm-netbsd.h>"}, {"sha": "d2e714ecf5cddb0a8fbba76130959eb746ebda3e", "filename": "gcc/config/i386/xm-sun.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-sun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-sun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-sun.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,27 @@\n+/* Configuration for GNU C-compiler for Intel 80386 running SunOS 4.0.\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define USG\n+\n+#include \"i386/xm-i386.h\"\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "72078bb1febe81f8cb167132e56bcec1e942d85d", "filename": "gcc/config/i386/xm-sysv3.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-sysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-sysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-sysv3.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+/* Configuration for GCC for Intel i386 running System V Release 3.  */\n+\n+#include \"i386/xm-i386.h\"\n+#include \"xm-svr3.h\""}, {"sha": "d36d2cdb11edf744061f8ee212800910aeaf61a4", "filename": "gcc/config/i386/xm-winnt.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-winnt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi386%2Fxm-winnt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-winnt.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,24 @@\n+/* Configuration for GNU compiler\n+   for an Intel i386 or later processor running Windows NT 3.x.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"winnt/xm-winnt.h\"\n+#include \"i386/xm-i386.h\""}, {"sha": "47eb7dcfd1d1092c01f48c1a28ca6a08798eb628", "filename": "gcc/config/i860/i860.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi860%2Fi860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi860%2Fi860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for Intel 860.\n-   Copyright (C) 1989, 1991, 1993, 1995, 1996 Free Software Foundation, Inc.\n-   Hacked substantially by Ron Guilmette (rfg@segfault.us.com) to cater to\n+   Copyright (C) 1989, 91, 93, 95, 96, 1997 Free Software Foundation, Inc.\n+   Hacked substantially by Ron Guilmette (rfg@monkeys.com) to cater to\n    the whims of the System V Release 4 assembler.\n \n This file is part of GNU CC.\n@@ -1369,7 +1369,7 @@ extern unsigned long sfmode_constant_to_ulong ();\n    stack (where the i860 calling conventions require structs &\n    unions to be passed).  */\n \n-#define FLOAT_TYPE_VALUE\tfloat\n+#define FLOAT_VALUE_TYPE\tfloat\n #define INTIFY(FLOATVAL)\t(FLOATVAL)\n #define FLOATIFY(INTVAL)\t(INTVAL)\n #define FLOAT_ARG_TYPE\t\tfloat"}, {"sha": "f1ab6d8c9c5c5fbe8f49a95475d0e65abfbd242e", "filename": "gcc/config/i860/xm-fx2800.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi860%2Fxm-fx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fi860%2Fxm-fx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fxm-fx2800.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,7 @@\n+/* Alliant FX/2800 running Concentrix 2.x. */\n+\n+/* vfprintf is not present prior to Concentrix 2.2. Unfortunately, there\n+   does not seem to be a cpp symbol that identifies OS revision. Undefine\n+   the following if running 2.1 or older.  */\n+\n+#define HAVE_VPRINTF"}, {"sha": "e9fc1d463b5df9fe1273bd974d3873c585aab0b9", "filename": "gcc/config/m68k/mot3300-crt0.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fmot3300-crt0.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fmot3300-crt0.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300-crt0.S?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -97,7 +97,7 @@ LOCAL_LABEL(isatty):\n \n #ifdef STRING\n \tSECTION (.comment)\n-\tSTRING (\"$Id: crt0.S,v 1.6 1995/12/07 17:17:47 manfred Exp $\\n\")\n+\tSTRING (\"$Id: mot3300-crt0.S,v 1.1 1997/08/11 15:57:32 law Exp $\\n\")\n \tSTRING (\"Contributed by manfred@lts.sel.alcatel.de (Manfred Hollstein, Germany)\\n\")\n #else\n \tbyte\t'C,'o,'n,'t,'r,'i,'b,'u,'t,'e,'d,' ,'b,'y"}, {"sha": "acb317c92fecaff9a62860b63ed3a58170338788", "filename": "gcc/config/m68k/mot3300Mcrt0.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fmot3300Mcrt0.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fmot3300Mcrt0.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300Mcrt0.S?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -143,7 +143,7 @@ LOCAL_LABEL(endofstart):\n \n #ifdef STRING\n \tSECTION (.comment)\n-\tSTRING (\"$Id: mcrt0.S,v 1.5 1995/12/07 17:23:39 manfred Exp $\\n\")\n+\tSTRING (\"$Id: mot3300Mcrt0.S,v 1.1 1997/08/11 15:57:32 law Exp $\\n\")\n \tSTRING (\"Contributed by manfred@lts.sel.alcatel.de (Manfred Hollstein, Germany)\\n\")\n #else\n \tbyte\t'C,'o,'n,'t,'r,'i,'b,'u,'t,'e,'d,' ,'b,'y"}, {"sha": "294f5645b5e6eff498a24a19f12f9a22dcec9cce", "filename": "gcc/config/m68k/xm-altos3068.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-altos3068.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-altos3068.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-altos3068.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,7 @@\n+#define USG\n+\n+#include \"m68k/xm-m68k.h\"\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "69b4bd17c7474155dd378c504be5f5879e93ece0", "filename": "gcc/config/m68k/xm-amix.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-amix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-amix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-amix.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,47 @@\n+/* Definitions of host machine for GNU compiler.\n+   Commodore Amiga A3000UX version.\n+\n+   Copyright (C) 1991 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 1, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"m68k/xm-m68kv.h\"\t/* Use the System V flavor of m68k host */\n+\n+#define HAVE_VPRINTF\t\t/* Host has vprintf() in library */\n+#define rindex strrchr\n+#define index strchr\n+\n+/* Define FULL_PROTOTYPES for protoize.c, to get <unistd.h> included.\n+   We need this file for things like R_OK, not necessarily prototypes. */\n+\n+#define FULL_PROTOTYPES\n+\n+#if defined (__GNUC__) && __GNUC__ == 1\n+#define alloca __builtin_alloca\n+#endif\n+\n+#if 0 /* I don't want individual ports to be inconsistent about this.\n+\t I regard fancy_abort as a half-solution and not the right way\n+\t to do things. --rms.  */\n+/* The m88k and mips ports make use of fancy_abort to give possibly helpful\n+   abort information rather than just dumping core.  They do it in their\n+   tm-* files.  It seems more logical that this is a characteristic of\n+   the host machine and not the target machine, so we do it here. */\n+\n+#define abort fancy_abort\t/* give possibly helpful abort info */\n+#endif"}, {"sha": "5ac1f4654d85bb983033a8b9b7a74f54f4cdfb1f", "filename": "gcc/config/m68k/xm-aux.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-aux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-aux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-aux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,9 @@\n+#ifndef USG\n+#define USG\n+#endif\n+\n+#ifndef AUX\n+#define AUX\n+#endif\n+\n+#include \"m68k/xm-m68k.h\""}, {"sha": "d724c3a26c84096de8e2d31027e4fe22397506fc", "filename": "gcc/config/m68k/xm-hp320.h", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-hp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-hp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-hp320.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,19 @@\n+/* USG is needed to prevent trying to use getrusage and getwd.  */\n+#define USG\n+\n+#include \"m68k/xm-m68k.h\"\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+#define rindex strrchr\n+#define index strchr\n+\n+/* If compiling with HPUX compiler, we are probably using alloca.c,\n+   so help it work right.  */\n+#ifndef __GNUC__\n+#define USE_C_ALLOCA\n+#endif\n+\n+/* Don't try to use sys_siglist.  */\n+#define NO_SYS_SIGLIST"}, {"sha": "3b1050673fae47e3c5553c937bb19c2a277a3649", "filename": "gcc/config/m68k/xm-linux.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-linux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+/* Configuration for GCC for Motorola m68k running Linux. */\n+\n+#include <m68k/xm-m68k.h>\n+#include <xm-linux.h>"}, {"sha": "ce3cf665e817077c7004200a028797d3d07ab3aa", "filename": "gcc/config/m68k/xm-m68kv.h", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-m68kv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-m68kv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-m68kv.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,15 @@\n+/* Host environment for 68000's running System V.  */\n+\n+#include \"m68k/xm-m68k.h\"\n+\n+#define USG\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+\n+#define rindex strrchr\n+#define index strchr\n+\n+#ifndef __GNUC__\n+#define USE_C_ALLOCA\n+#endif"}, {"sha": "27a33cd5b833f1d90c0b38f437748a321b29f39d", "filename": "gcc/config/m68k/xm-netbsd.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+/* Configuration for GCC for Motorola 68k running NetBSD as host.  */\n+\n+#include <m68k/xm-m68k.h>\n+#include <xm-netbsd.h>"}, {"sha": "eafe716e93b403d817e2342ed930237e76b3c031", "filename": "gcc/config/m68k/xm-sun3.h", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-sun3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-sun3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-sun3.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,5 @@\n+/* Configuration for GCC for Motorola m68k on sun3. */\n+\n+#define HAVE_POPEN\n+\n+#include \"m68k/xm-m68k.h\""}, {"sha": "fcb456fa62190b777608fcf033df3541202b3d5a", "filename": "gcc/config/m68k/xm-tower.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-tower.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm68k%2Fxm-tower.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fxm-tower.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+#include \"m68k/xm-m68k.h\"\n+#include \"xm-svr3.h\"\n+\n+#define HAVE_VPRINTF"}, {"sha": "6a3c41020bc207dea552fb9482154d0034dba42b", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -30,7 +30,7 @@ Boston, MA 02111-1307, USA.  */\n   (TARGET_SVR4 ? DWARF_DEBUG : SDB_DEBUG)\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.23 $\"\n+#define VERSION_INFO2   \"$Revision: 1.24 $\"\n #endif\n #ifndef NO_BUGS\n #define AS_BUG_IMMEDIATE_LABEL"}, {"sha": "7fc8ed987933f04f3535106e70c760ee33832975", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -198,13 +198,13 @@ extern char * reg_names[];\n    Redefined in sysv4.h, and luna.h.  */\n #define VERSION_INFO1\t\"m88k, \"\n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.72 $\"\n+#define VERSION_INFO2   \"$Revision: 1.1 $\"\n #endif\n \n #ifndef VERSION_STRING\n #define VERSION_STRING  version_string\n #ifdef __STDC__\n-#define TM_RCS_ID      \"@(#)\" __FILE__ \" $Revision: 1.72 $ \" __DATE__\n+#define TM_RCS_ID      \"@(#)\" __FILE__ \" $Revision: 1.1 $ \" __DATE__\n #else\n #define TM_RCS_ID      \"$What: <@(#) m88k.h,v\t1.1.1.2.2.2> $\"\n #endif  /* __STDC__ */"}, {"sha": "4b7f111873ff47bdb871b48d951a93cd101fc8a5", "filename": "gcc/config/mips/elflorion.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Felflorion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Felflorion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felflorion.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,24 @@\n+/* Definitions of target machine for GNU compiler.  MIPS ORION version with\n+   GOFAST floating point library.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define MIPS_CPU_STRING_DEFAULT \"orion\"\n+\n+#include \"mips/elfl64.h\""}, {"sha": "611effe02a16d4fe9f5191b28f43942ffabd2541", "filename": "gcc/config/mips/nws3250v4.h", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fnws3250v4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fnws3250v4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnws3250v4.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,36 @@\n+/* Definitions of target machine for GNU compiler.  Sony RISC NEWS (mips)\n+   Copyright (C) 1991 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define MIPS_NEWS\n+\n+#define CPP_PREDEFINES \"\\\n+-Dmips -Dhost_mips -Dsony -Dsonyrisc -Dunix \\\n+-DLANGUAGE_C -DMIPSEB -DSYSTYPE_SYSV \\\n+-Asystem(unix) -Asystem(svr3) -Acpu(mips) -Amachine(mips)\"\n+\n+#define MD_STARTFILE_PREFIX \"/usr/ccs/lib/\"\n+\n+#define LIB_SPEC \"%{p:-lprof1} %{pg:-lprof1} -lc crtn.o%s values-Xt.o%s\"\n+\n+#define STARTFILE_SPEC \"%{pg:gcrt0.o%s}%{!pg:%{p:mcrt0.o%s}%{!p:crt1.o%s}}\"\n+\n+#define MACHINE_TYPE \"RISC NEWS-OS SVr4\"\n+\n+#include \"mips/mips.h\""}, {"sha": "3d2a59a14477ad8477fae9ab1aef6e415e4a99b3", "filename": "gcc/config/mips/xm-iris3.h", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-iris3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-iris3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-iris3.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,8 @@\n+#include \"mips/xm-mips.h\"\n+\n+#define USG\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+"}, {"sha": "e12c226614e32df4c6af72b712e14bb255573e9c", "filename": "gcc/config/mips/xm-iris4.h", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-iris4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-iris4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-iris4.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,18 @@\n+#include \"mips/xm-mips.h\"\n+\n+#define USG\n+#define HAVE_VPRINTF\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+\n+#if 0\n+#ifdef __GNUC__\n+/* The normal irix compiler requires alloca.h or alloca doesn't work.\n+   However, the IRIX compiler doesn't allow alloca to be stored in\n+   something like ptr->field = alloca(), so we just use the normal\n+   C alloca.  */\n+#include <alloca.h>\n+#endif\n+#endif"}, {"sha": "b9d3c709d9d8dc5d5f2189b8144ddff3a3fe4f06", "filename": "gcc/config/mips/xm-netbsd.h", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,2 @@\n+#include \"mips/xm-mips.h\"\n+#include \"config/xm-netbsd.h\""}, {"sha": "9409d7fe0a6d84b675aa9d529b6efb9c0c7a9bd9", "filename": "gcc/config/mips/xm-news.h", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-news.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-news.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-news.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,6 @@\n+/* This file is for the Sony Mips News running \"NewsOS Version 5\",\n+   which is really System V.  */\n+#include \"mips/xm-sysv.h\"\n+\n+/* Sony has a funny name for this symbol.  */\n+#define sys_siglist _sys_siglist"}, {"sha": "34ab631acb4874dbaad95f69669385b042e805b8", "filename": "gcc/config/mips/xm-nws3250v4.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-nws3250v4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-nws3250v4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-nws3250v4.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,9 @@\n+#define USG\n+\n+#include \"xm-mips.h\"\n+\n+/* If compiling with mips compiler, we are probably using alloca.c,\n+   so help it work right.  */\n+#ifndef __GNUC__\n+#define USE_C_ALLOCA\n+#endif"}, {"sha": "170538fb682791e7e345f800018cbd220ad4399e", "filename": "gcc/config/mips/xm-sysv.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-sysv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-sysv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-sysv.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,38 @@\n+/* Configuration for GNU C-compiler for UMIPS operating system\n+   Copyright (C) 1989, 1990, 1991 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/*\n+ *  Notes for compiling gcc on umips (v3.0)\n+ *\t- change the -g in the CFLAGS to a -g3 or take it out all together.\n+ *\t- do not define DBX_DEBUGGING_INFO in tm.h, it doesn't exist (unless\n+ *\tyou get one from a bsd system)\n+ */\n+\n+#define USG\n+\n+#include \"mips/xm-mips.h\"\n+\n+#define bcopy(a,b,c)\tmemcpy((b),(a),(c))\n+#define bzero(a,b)\tmemset((a),0,(b))\n+#define bcmp(a,b,c)\tmemcmp((a),(b),(c))\n+\n+#define rindex strrchr\n+#define index strchr\n+"}, {"sha": "490a7722995d9a1ca4a30368ce3aecc35eac45e0", "filename": "gcc/config/mips/xm-sysv4.h", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-sysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fmips%2Fxm-sysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxm-sysv4.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,11 @@\n+#include \"mips/xm-sysv.h\"\n+\n+/* SVR4 provides no sys_siglist,\n+   but does offer the same data under another name.  */\n+#define sys_siglist _sys_siglist\n+\n+/* There is a declaration in /usr/include/signal.h that conflicts with the\n+   declarations in collect2.c and mips-tfile.c, so disable gcc's declarations.\n+   This is at least true for CDC's EP/IX 2.1.1.  It is suspected to be true\n+   for RISC/OS 5.x also.  */\n+#define DONT_DECLARE_SYS_SIGLIST"}, {"sha": "76be3b76fc84f9af05f4e30959ca9e83961154c8", "filename": "gcc/config/ns32k/xm-genix.h", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fns32k%2Fxm-genix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fns32k%2Fxm-genix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fxm-genix.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,9 @@\n+/* Config file for ns32k running system V.  */\n+\n+#include \"ns32k/xm-ns32k.h\"\n+\n+#define USG\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "4040751d1d90ac16ede81b566377d469b3290565", "filename": "gcc/config/ns32k/xm-netbsd.h", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fns32k%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fns32k%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,10 @@\n+/* Configuration for GCC for ns32k running NetBSD as host.  */\n+\n+#include <ns32k/xm-ns32k.h>\n+\n+/* ns32k/xm-ns32k.h defines these macros, but we don't need them */\n+#undef memcmp\n+#undef memcpy\n+#undef memset\n+\n+#include <xm-netbsd.h>"}, {"sha": "5f11b8d2f480c3b1864740ef08101601ffb022f4", "filename": "gcc/config/sparc/xm-netbsd.h", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fsparc%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fsparc%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,4 @@\n+/* Configuration for GCC for Sun SPARC running NetBSD as host.  */\n+\n+#include <sparc/xm-sparc.h>\n+#include <xm-netbsd.h>"}, {"sha": "dad9fdc6b349f9984bf2bd032c42ffb51f74c568", "filename": "gcc/config/sparc/xm-pbd.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fsparc%2Fxm-pbd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fsparc%2Fxm-pbd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fxm-pbd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,13 @@\n+/* Host environment for the tti \"Unicom\" PBB 68020 boards */\n+\n+#include \"sparc/xm-sparc.h\"\n+\n+#define USG\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+\n+#ifndef __GNUC__\n+#define USE_C_ALLOCA\n+#endif\n+"}, {"sha": "bb58a6a1df35031ad51fb7f514d009ba1c1ca04e", "filename": "gcc/config/vax/x-vax", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fvax%2Fx-vax", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fvax%2Fx-vax", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fx-vax?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,3 @@\n+# If compiling GCC with the Unix assembler, -J will handle a large function.\n+# With GAS, it should have no effect.\n+X_CPPFLAGS = -J"}, {"sha": "18a1d73ac985b5bc7ff6a23d40427123042ce8a4", "filename": "gcc/config/vax/xm-vaxv.h", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fvax%2Fxm-vaxv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fvax%2Fxm-vaxv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fxm-vaxv.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,7 @@\n+/* Config file for Vax running system V.  */\n+\n+#define USG\n+\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define bcmp(a,b,c) memcmp (a,b,c)"}, {"sha": "f73c9aa60fa8423ba0cf0853c607fe483f2178ac", "filename": "gcc/config/xm-freebsd.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-freebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-freebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-freebsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,33 @@\n+/* Configuration for GNU C-compiler for hosts running FreeBSD.\n+   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This file defines machine-independent things specific to a host\n+   running FreeBSD.  This file should not be specified as $xm_file itself;\n+   instead $xm_file should be CPU/xm-freebsd.h, which should include both\n+   CPU/xm-CPU.h and this file xm-freebsd.h.  */\n+   \n+/* FreeBSD has strerror.  */\n+#define HAVE_STRERROR\n+\n+/* We have _sys_siglist, but the declaration in <signal.h> conflicts with\n+   the declarations in collect2.c and mips-tfile.c, so disable the declarations\n+   in those files.  */\n+\n+#define DONT_DECLARE_SYS_SIGLIST"}, {"sha": "88b558cc5bf4c96f6eb2dd196b15e8cfd205ad20", "filename": "gcc/config/xm-linux.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-linux.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,47 @@\n+/* Configuration for GCC for Intel i386 running Linux.\n+   Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.\n+   Contributed by H.J. Lu (hjl@nynexst.com)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef  HAVE_VPRINTF\n+#define HAVE_VPRINTF\n+\n+#undef  HAVE_STRERROR\n+#define HAVE_STRERROR\n+\n+#undef  HAVE_POPEN\n+#define HAVE_POPEN\n+\n+#undef  POSIX\n+#define POSIX\n+\n+#undef  DONT_DECLARE_SYS_SIGLIST\n+#define DONT_DECLARE_SYS_SIGLIST\n+\n+/* We do have one, but I'd like to use the one come with gcc since\n+   we have been doing that for a long time with USG defined.  H.J. */\n+#define NO_STAB_H\n+\n+#undef BSTRING\n+#define BSTRING\n+#undef bcmp\n+#undef bcopy\n+#undef bzero\n+#undef index\n+#undef rindex"}, {"sha": "00000ce9706b1b62beabb7983b25020e5635d064", "filename": "gcc/config/xm-netbsd.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-netbsd.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,27 @@\n+/* Configuration for GNU C-compiler for hosts running NetBSD.\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This file defines machine-independent things specific to a host\n+   running NetBSD.  This file should not be specified as $xm_file itself;\n+   instead $xm_file should be CPU/xm-netbsd.h, which should include both\n+   CPU/xm-CPU.h and this file xm-netbsd.h.  */\n+   \n+#define HAVE_STRERROR\n+#define HAVE_VPRINTF"}, {"sha": "ac1000fb1cb46f4de24a5ce90eee97ba78165841", "filename": "gcc/config/xm-svr3.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-svr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-svr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-svr3.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,33 @@\n+/* Configuration for GNU C-compiler for hosts running System V Release 3\n+   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define bcopy(src,dst,len) memcpy ((dst),(src),(len))\n+#define bzero(dst,len) memset ((dst),0,(len))\n+#define bcmp(left,right,len) memcmp ((left),(right),(len))\n+\n+#define rindex strrchr\n+#define index strchr\n+\n+#define USG\n+#define HAVE_VPRINTF\n+\n+#ifndef SVR3\n+#define SVR3\n+#endif"}, {"sha": "3008432251084a65dc79efec0d31271931756ce5", "filename": "gcc/config/xm-svr4.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-svr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfig%2Fxm-svr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-svr4.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,35 @@\n+/* Configuration for GNU C-compiler for hosts running System V Release 4\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define bcopy(src,dst,len) memcpy ((dst),(src),(len))\n+#define bzero(dst,len) memset ((dst),0,(len))\n+#define bcmp(left,right,len) memcmp ((left),(right),(len))\n+\n+#define rindex strrchr\n+#define index strchr\n+\n+#define USG\n+#define HAVE_VPRINTF\n+\n+#define POSIX\n+\n+/* SVR4 provides no sys_siglist,\n+   but does offer the same data under another name.  */\n+#define sys_siglist _sys_siglist"}, {"sha": "b3181529acc3f745827baad3c8b233cf34c96a11", "filename": "gcc/configure", "status": "added", "additions": 4911, "deletions": 0, "changes": 4911, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "9119e6485d70197899644d3dbd75106d6dd4d97d", "filename": "gcc/cp/parse.c", "status": "added", "additions": 8338, "deletions": 0, "changes": 8338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "432766b00f28e98d35c5478281b2722759924745", "filename": "gcc/cp/parse.h", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcp%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcp%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,91 @@\n+typedef union {long itype; tree ttype; char *strtype; enum tree_code code; flagged_type_tree ftype; } YYSTYPE;\n+#define\tIDENTIFIER\t258\n+#define\tTYPENAME\t259\n+#define\tSELFNAME\t260\n+#define\tSCSPEC\t261\n+#define\tTYPESPEC\t262\n+#define\tCV_QUALIFIER\t263\n+#define\tCONSTANT\t264\n+#define\tSTRING\t265\n+#define\tELLIPSIS\t266\n+#define\tSIZEOF\t267\n+#define\tENUM\t268\n+#define\tIF\t269\n+#define\tELSE\t270\n+#define\tWHILE\t271\n+#define\tDO\t272\n+#define\tFOR\t273\n+#define\tSWITCH\t274\n+#define\tCASE\t275\n+#define\tDEFAULT\t276\n+#define\tBREAK\t277\n+#define\tCONTINUE\t278\n+#define\tRETURN\t279\n+#define\tGOTO\t280\n+#define\tASM_KEYWORD\t281\n+#define\tGCC_ASM_KEYWORD\t282\n+#define\tTYPEOF\t283\n+#define\tALIGNOF\t284\n+#define\tSIGOF\t285\n+#define\tATTRIBUTE\t286\n+#define\tEXTENSION\t287\n+#define\tLABEL\t288\n+#define\tREALPART\t289\n+#define\tIMAGPART\t290\n+#define\tAGGR\t291\n+#define\tVISSPEC\t292\n+#define\tDELETE\t293\n+#define\tNEW\t294\n+#define\tTHIS\t295\n+#define\tOPERATOR\t296\n+#define\tCXX_TRUE\t297\n+#define\tCXX_FALSE\t298\n+#define\tNAMESPACE\t299\n+#define\tTYPENAME_KEYWORD\t300\n+#define\tUSING\t301\n+#define\tLEFT_RIGHT\t302\n+#define\tTEMPLATE\t303\n+#define\tTYPEID\t304\n+#define\tDYNAMIC_CAST\t305\n+#define\tSTATIC_CAST\t306\n+#define\tREINTERPRET_CAST\t307\n+#define\tCONST_CAST\t308\n+#define\tSCOPE\t309\n+#define\tEMPTY\t310\n+#define\tPTYPENAME\t311\n+#define\tNSNAME\t312\n+#define\tTHROW\t313\n+#define\tASSIGN\t314\n+#define\tOROR\t315\n+#define\tANDAND\t316\n+#define\tMIN_MAX\t317\n+#define\tEQCOMPARE\t318\n+#define\tARITHCOMPARE\t319\n+#define\tLSHIFT\t320\n+#define\tRSHIFT\t321\n+#define\tPOINTSAT_STAR\t322\n+#define\tDOT_STAR\t323\n+#define\tUNARY\t324\n+#define\tPLUSPLUS\t325\n+#define\tMINUSMINUS\t326\n+#define\tHYPERUNARY\t327\n+#define\tPAREN_STAR_PAREN\t328\n+#define\tPOINTSAT\t329\n+#define\tTRY\t330\n+#define\tCATCH\t331\n+#define\tTYPENAME_ELLIPSIS\t332\n+#define\tPRE_PARSED_FUNCTION_DECL\t333\n+#define\tEXTERN_LANG_STRING\t334\n+#define\tALL\t335\n+#define\tPRE_PARSED_CLASS_DECL\t336\n+#define\tDEFARG\t337\n+#define\tDEFARG_MARKER\t338\n+#define\tTYPENAME_DEFN\t339\n+#define\tIDENTIFIER_DEFN\t340\n+#define\tPTYPENAME_DEFN\t341\n+#define\tEND_OF_LINE\t342\n+#define\tEND_OF_SAVED_INPUT\t343\n+\n+\n+extern YYSTYPE yylval;\n+#define YYEMPTY\t\t-2"}, {"sha": "9788f70238c91894045d22366fa941580826c3c1", "filename": "gcc/cstamp-h.in", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcstamp-h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fcstamp-h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcstamp-h.in?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1 @@\n+timestamp"}, {"sha": "b09c8b741e8b00651643cb95c170ca7e4e8a5432", "filename": "gcc/gcc.1", "status": "added", "additions": 4167, "deletions": 0, "changes": 4167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "2027d28c5133e08d1801a3fe258b3f2799839704", "filename": "gcc/gcc.c", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -4302,6 +4302,11 @@ main (argc, argv)\n     signal (SIGPIPE, fatal_error);\n #endif\n \n+  { /* Warn users they are using developmental software.  */\n+    static void snapshot_warning ();\n+    snapshot_warning ();\n+  }\n+\n   argbuf_length = 10;\n   argbuf = (char **) xmalloc (argbuf_length * sizeof (char *));\n \n@@ -5441,3 +5446,58 @@ print_multilib_info ()\n       ++p;\n     }\n }\n+\f\n+/* For snapshots only.\n+   Warn the user that this version of gcc is for testing and developing only.\n+   If this is unix, we can restrict the warning to once per day.\n+   Otherwise always issue it.  */\n+\n+#define TIMESTAMP_FILE \".gcc-test-time\"\n+#define ONE_DAY (24*60*60)\n+\n+static void\n+snapshot_warning ()\n+{\n+  char *home;\n+  int print_p = 1;\n+\n+#ifdef unix\n+  home = getenv (\"HOME\");\n+  if (home != NULL)\n+    {\n+      char *file_name = (char *) alloca (strlen (home) + 1 + sizeof (TIMESTAMP_FILE));\n+      struct stat statbuf;\n+      time_t now = time (NULL);\n+      int s;\n+\n+      sprintf (file_name, \"%s/%s\", home, TIMESTAMP_FILE);\n+      s = stat (file_name, &statbuf);\n+      if (s == 0\n+\t  && (statbuf.st_mtime + ONE_DAY > now))\n+\tprint_p = 0;\n+      else\n+\t{\n+\t  FILE *f;\n+\n+\t  if ((f = fopen (file_name, \"w\")) == NULL)\n+\t    {\n+\t      /* Ensure we have write access.  */\n+\t      chmod (file_name, s == 0 ? (statbuf.st_mode + 0200) : 0644);\n+\t      f = fopen (file_name, \"w\");\n+\t    }\n+\t  if (f != NULL)\n+\t    {\n+\t      fputc ('\\n', f);\n+\t      fclose (f);\n+\t    }\n+\t}\n+    }\n+#endif\n+\n+  if (print_p)\n+    {\n+      fprintf (stderr, \"*** This is a development snapshot of GCC.\\n\");\n+      fprintf (stderr, \"*** It is not reliable release, and the GCC developers\\n\");\n+      fprintf (stderr, \"*** warn you not to use it for anything except to test it.\\n\");\n+    }\n+}"}, {"sha": "7ba1264a23455d5327d9a39c3f12aabf640484df", "filename": "gcc/gcc.hlp", "status": "added", "additions": 406, "deletions": 0, "changes": 406, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.hlp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.hlp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.hlp?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,406 @@\n+1 GCC\n+\n+ The GCC command invokes the GNU C compiler.\n+\n+       GCC file-spec\n+\n+2 Parameters\n+\n+ file-spec\n+\n+ A C source file.  If no input file  extension  is  specified,  GNU  C\n+ assumes  .C  as  the  default extension unless the /PLUS qualifier is\n+ given, in which case .CC is assumed as the default extension.\n+\n+ If an extension of .CPP is given, then the source file is assumed  to\n+ be  the  output of the preprocessor, and thus the preprocessor is not\n+ executed.\n+\n+ If an extension of .S is given, then the source file is assumed to be\n+ the  assembly  code output of the compiler, and only the assembler is\n+ called to generate an object file.\n+\n+2 Qualifiers\n+\n+ GNU C command qualifiers modify the  way  the  compiler  handles  the\n+ compilation.\n+\n+ The following is the list of available qualifiers for GNU C:\n+\n+       /CASE_HACK\n+       /CC1_OPTIONS=(option [,option...]])\n+       /DEBUG\n+       /DEFINE=(identifier[=definition][,...])\n+       /G_FLOAT\n+       /INCLUDE_DIRECTORY=(path [,path...]])\n+       /LIST[=filename]\n+       /MACHINE_CODE\n+       /OBJECT[=filename]\n+       /OPTIMIZE\n+       /PLUS\n+       /PROFILE[=identifier]\n+       /SCAN=(file[,file...])\n+       /SHOW[=option]\n+       /UNDEFINE=(identifier[,identifier,...])\n+       /VERBOSE\n+       /VERSION\n+       /WARNING\n+\n+2 Linking\n+\n+ When linking programs compiled with GNU C, you should include the GNU\n+ C library before the VAX C library.  For example,\n+\n+   LINK object-file,GNU_CC:[000000]GCCLIB/LIB,SYS$LIBRARY:VAXCRTL/LIB\n+\n+ You can also link your program with the shared VAX C  library.   This\n+ can reduce the size of the .EXE file, as well as make it smaller when\n+ it's running.  For example,\n+\n+   $ LINK object-file, GNU_CC:[000000]GCCLIB/LIB,SYS$INPUT/OPT\n+   SYS$SHARE:VAXCRTL/SHARE\n+\n+ (If you use the second example and type it in by  hand,  be  sure  to\n+ type ^Z after the last carriage return).  A simpler alternative would\n+ be to place the single line:\n+\n+   SYS$SHARE:VAXCRTL/SHARE\n+\n+ into a file called VAXCRTL.OPT, and then use the link command:\n+\n+   $ LINK object-file, GNU_CC:[000000]GCCLIB/LIB,VAXCRTL.OPT/OPT\n+\n+ If a program has  been  compiled  with  /G_FLOAT,  then  the  linking\n+ instructions  are  slightly  different.   If you are linking with the\n+ non-shared library, then the command that you should use would be:\n+\n+   LINK object-file,GNU_CC:[000000]GCCLIB/LIB,SYS$LIBRARY:VAXCRTLG/LIB -\n+                                ,SYS$LIBRARY:VAXCRTL/LIB\n+\n+ Note that both VAXCRTL and VAXCRTLG must be linked to.   If  you  are\n+ using the shared VAX C library, then you should use a command like:\n+\n+   $ LINK object-file, GNU_CC:[000000]GCCLIB/LIB,SYS$INPUT:/OPTIONS\n+   SYS$SHARE:VAXCRTLG/SHARE\n+\n+ In the case of the sharable library, only one  library  needs  to  be\n+ linked to.\n+\n+ If you need to link to libg++, it  is  easiest  to  use  the  command\n+ procedure supplied with libg++ to link your program.\n+\n+2 /CASE_HACK\n+\n+   /[NO]CASE_HACK      D=/CASE_HACK\n+\n+ Since the VMS Linker  and  Librarian  are  not  case  sensitive  with\n+ respect  to  symbol names, a \"case-hack\" is appended to a symbol name\n+ when the symbol contains upper case characters.\n+\n+ There are cases where this is undesirable, (mainly when using certain\n+ applications  where modules have been precompiled, perhaps in another\n+ language) and we want to compile  without  case  hacking.   In  these\n+ cases the /NOCASE_HACK switch disables case hacking.\n+\n+2 /CC1_OPTIONS\n+\n+ This specifies additional  switches  to  the  compiler  itself  which\n+ cannot be set by means of the compiler driver.\n+\n+2 /DEBUG\n+\n+ /DEBUG includes additional information in the object file  output  so\n+ that the program can be debugged with the VAX Symbolic Debugger.\n+\n+ To use the debugger it is also necessary to link the debugger to your\n+ program, which is done by specifying the /DEBUG qualifier to the link\n+ command.  With the  debugger  it  is  possible  to  set  breakpoints,\n+ examine  variables,  and  set  variables  to new values.  See the VAX\n+ Symbolic Debugger manual for more information, or  type  \"HELP\"  from\n+ the debugger prompt.\n+\n+2 /DEFINE\n+\n+ /DEFINE=(identifier[=definition][,...])\n+\n+ /DEFINE defines a string or macro ('definition')  to  be  substituted\n+ for  every  occurrence of a given string ('identifier') in a program.\n+ It is equivalent to the #define preprocessor directive.\n+\n+ All definitions and identifiers are  converted  to  uppercase  unless\n+ they are in quotation marks.\n+\n+ The simple form of the /DEFINE qualifier:\n+\n+    /DEFINE=vms\n+\n+ results in a definition equivalent to the preprocessor directive:\n+\n+  #define VMS 1\n+\n+ You must enclose macro definitions in quotation  marks,  as  in  this\n+ example:\n+\n+  /DEFINE=\"C(x)=((x) & 0xff)\"\n+\n+ This definition is the same as the preprocessor definition:\n+\n+  #define C(x) ((x) & 0xff)\n+\n+ If more than one /DEFINE is present on the GCC command line, only the\n+ last /DEFINE is used.\n+\n+ If both /DEFINE and /UNDEFINE are present on a command line,  /DEFINE\n+ is evaluated before /UNDEFINE.\n+\n+2 /G_FLOAT\n+\n+ Instructs the compiler to use \"G\" floating point  arithmetic  instead\n+ of  \"D\".   The  difference  is  that  double precision has a range of\n+ approximately +/-0.56e-308 to +/-0.9  e+308,  with  approximately  15\n+ decimal digits precision.\n+\n+ \"D\" floating point has the same range as  single  precision  floating\n+ point, with approximately 17 decimal digits precision.\n+\n+ If you use the  /G_FLOAT  qualifier,  the  linking  instructions  are\n+ different.  See \"Linking\" for further details.\n+\n+2 /LIST\n+\n+ /LIST[=list_file_name]\n+\n+ This does not generate a listing file in the usual sense, however  it\n+ does  direct the compiler to save the preprocessor output.  If a file\n+ is not specified, then this output is written into a  file  with  the\n+ same name as the source file and an extension of .CPP.\n+\n+2 /INCLUDE_DIRECTORY\n+\n+  /INCLUDE_DIRECTORY=(path [,path...])\n+\n+ The /INCLUDE_DIRECTORY qualifier provides additional  directories  to\n+ search  for  user-defined  include  files.   'path'  can  be either a\n+ logical name or a directory specification.\n+\n+ There  are  two  forms  for  specifying  include  files  -   #include\n+ \"file-spec\"  and  #include <file-spec>.  For the #include \"file-spec\"\n+ form, the search order is:\n+\n+  1.  The directory containing the source file.\n+\n+  2.  The directories in the /INCLUDE qualifier (if any).\n+\n+  3.  The directory (or directories) specified in the logical name\n+      GNU_CC_INCLUDE.\n+\n+  4.  The directory (or directories) specified in the logical name\n+      SYS$LIBRARY.\n+\n+  For the #include <file-spec> form, the search order is:\n+\n+  1.  The directories specified in the /INCLUDE qualifier (if any).\n+\n+  2.  The directory (or directories) specified in the logical name\n+      GNU_CC_INCLUDE.\n+\n+  3.  The directory (or directories) specified in the logical name\n+      SYS$LIBRARY.\n+\n+2 /MACHINE_CODE\n+\n+ Tells GNU C to output the machine code  generated  by  the  compiler.\n+ The  machine code is output to a file with the same name as the input\n+ file, with the extension .S.  An  object  file  is  still  generated,\n+ unless /NOOBJ is also specified.\n+\n+2 /OBJECT\n+\n+   /OBJECT[=filename]\n+   /NOOBJECT\n+\n+        Controls whether or not an object file  is  generated  by  the\n+ compiler.\n+\n+2 /OPTIMIZE\n+\n+ /[NO]OPTIMIZE\n+\n+ Controls whether optimization  is  performed  by  the  compiler.   By\n+ default, optimization is on.  /NOOPTIMIZE turns optimization off.\n+\n+2 /PLUS\n+\n+ Instructs the compiler driver to use the GNU-C++ compiler instead  of\n+ the  GNU-C compiler.  Note that the default extension of source files\n+ is .CC when this qualifier is in effect.\n+\n+2 /PROFILE\n+\n+ /PROFILE[=identifier]\n+\n+ Instructs the compiler to generate function profiling code.  You must\n+ link  your  program  to  the profiler when you use this options.  The\n+ profile statistics are automatically  printed  out  on  the  terminal\n+ during  image  exit.  (i.e.  no modifications to your source file are\n+ required in order to use the profiler).\n+\n+ There are three identifiers  that  can  be  used  with  the  /PROFILE\n+ switch.   These  are  ALL, FUNCTION, and BLOCK.  If /PROFILE is given\n+ without an identifier, then FUNCTION is assumed.\n+\n+3 Block_Profiler\n+\n+ The block profiler counts how  many  times  control  of  the  program\n+ passes certain points in your program.  This is useful in determining\n+ which  portions  of  a  program  would  benefit  from  recoding   for\n+ optimization.\n+\n+ The report for the block profiler contains the  function  name,  file\n+ name, PC, and the source file line number as well as the count of how\n+ many times control has passed through the specified source line.\n+\n+3 Function_Profiler\n+\n+ The function profiler counts how many times each function is entered,\n+ and keeps track of how much CPU time is used within each function.\n+\n+ You should be careful about  interpreting  the  results  of  profiles\n+ where  there  are  inline  functions.  When a function is included as\n+ inline, then there is no call to the internal data collection routine\n+ used  by  the  profiler,  and  thus  there  will be no record of this\n+ function being called.  The compiler does generate a callable version\n+ of each inline function, and if this called version is used, then the\n+ profiler's data collection routine will be called.\n+\n+2 /SCAN\n+\n+ /SCAN=(file[,file...])\n+\n+ This qualifier supplies a list of files that will be read  as  input,\n+ and  the output will be discarded before processing the regular input\n+ file.  Because the output generated from the files is discarded,  the\n+ only  effect  of  this qualifier is to make the macros defined in the\n+ files available for use in the main input.\n+\n+2 /SHOW\n+\n+ /SHOW[=option]\n+\n+ This causes the preprocessor to generate information other  than  the\n+ preprocessed  input  file.   When this qualifier is used, no assembly\n+ code and no object file is generated.\n+\n+ The output of the preprocessor is placed in the file specified by the\n+ /LIST  qualifier, if present.  If the /LIST qualifier is not present,\n+ then the output is placed in a file with the same name as  the  input\n+ file  with  an  extension  that  depends  upon  which  option that is\n+ selected.\n+\n+3 DEFINITIONS\n+\n+ This option causes the preprocessor to dump a  list  of  all  of  the\n+ definitions  to  the  output  file.   This  is  useful  for debugging\n+ purposes, since it lets you determine whether or not  everything  has\n+ been defined properly.\n+\n+ If the default file name is used for the output, the  extension  will\n+ be .DEF.\n+\n+3 RULES\n+\n+ This option causes the preprocessor to output  a  rule  suitable  for\n+ MAKE,  describing  the  dependencies  of  the  main source file.  The\n+ preprocessor outputs one MAKE rule containing the  object  file  name\n+ for  that  source  file,  a colon, and the names of all the concluded\n+ files.  If there are many included files then the rule is split  into\n+ several lines using the '\\'-newline.\n+\n+ When using this option, only files included with the \"#include \"file\"\n+ directive are mentioned.\n+\n+ If the default file name is used for the  output,  a  null  extension\n+ will be used.\n+\n+3 ALL\n+\n+ This option is similar to RULES, except that it also  mentions  files\n+ included with the \"#include <file.h>\" directive.\n+\n+ If the default file name is used for the  output,  a  null  extension\n+ will be used.\n+\n+2 /UNDEFINE\n+\n+ /UNDEFINE cancels a macro definition.  Thus, it is the  same  as  the\n+ #undef preprocessor directive.\n+\n+ If more than one /UNDEFINE is present on the GCC command  line,  only\n+ the last /UNDEFINE is used.\n+\n+ If both /DEFINE and /UNDEFINE are present on a command line,  /DEFINE\n+ is evaluated before /UNDEFINE.\n+\n+2 /VERBOSE\n+\n+ Controls whether the user sees the invocation command strings for the\n+ preprocessor,  compiler,  and  assembler.   The compiler also outputs\n+ some statistics on time spent in its various phases.\n+\n+2 /VERSION\n+\n+ Causes the preprocessor and the compiler to  identify  themselves  by\n+ their  version  numbers, and in the case of the compiler, the version\n+ number of the compiler that built it.\n+\n+2 /WARNING\n+\n+ When this qualifier is present, warnings about usage that  should  be\n+ avoided  are given by the compiler.  For more information, see \"Using\n+ and Porting GNU CC\", in the section on command  line  options,  under\n+ \"-Wall\".\n+\n+ Warnings are also generated by the preprocessor when  this  qualifier\n+ is given.\n+\n+2 Known_Incompatibilities_with_VAX-C\n+\n+ There are several known incompatibilities between  GNU-C  and  VAX-C.\n+ Some  common  ones  will  be  briefly  described  here.   A  complete\n+ description can be found in \"Using and Porting GNU CC\" in the chapter\n+ entitled \"Using GNU CC on VMS\".\n+\n+     GNU-C provides case hacking as a means of giving case sensitivity\n+ to  symbol  names.  The case hack is a hexadecimal number appended to\n+ the symbol name, with a bit being set for  each  upper  case  letter.\n+ Symbols with all lower case, or symbols that have a dollar sign (\"$\")\n+ are not case hacked.  There  are  times  that  this  is  undesirable,\n+ namely  when  you  wish  to  link  your program against a precompiled\n+ library which was compiled with a non-GNU-C compiler.  X-windows  (or\n+ DECWindows)   is  an  example  of  this.   In  these  instances,  the\n+ /NOCASE_HACK switch should be used.\n+\n+ If you require case hacking in some cases, but not  in  others  (i.e.\n+ Libg++  with  DECWindows),  then it is recommended that you develop a\n+ header file which will define all mixed case  functions  that  should\n+ not have a case hack as the lower case equivalents.\n+\n+     GNU-C does not provide  the  globaldef  and  globalref  mechanism\n+ which  is  used  by VAX-C to coerce the VMS linker to include certain\n+ object modules from a library.  There are assembler hacks, which  are\n+ available  to  the  user  through  the macros defined in gnu_hacks.h,\n+ which effectively give you the ability to  perform  these  functions.\n+ While  not  syntactically  identical,  they  do  provide  most of the\n+ functionality.\n+\n+ Note that globaldefs of enums is not supported in the way that it  is\n+ under  VAX-C.  This can be easily simulated, however, by globaldefing\n+ an integer variable, and then globalvaluing  all  of  the  enumerated\n+ states.\n+\n+ Furthermore, the way that globalvalue is currently  implemented,  the\n+ data type of the globalvalue variable is seen to the compiler to be a\n+ pointer to the data type that you  specify.   This  is  necessary  in\n+ order   to  make  the  compiler  correctly  address  the  globalvalue\n+ variables.\n+"}, {"sha": "418dcbc57d022a3ac4278d90df5028ad830c93c3", "filename": "gcc/gcc.texi", "status": "added", "additions": 4793, "deletions": 0, "changes": 4793, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "300f86de3ebd98045ee611d537a84387df4c10fd", "filename": "gcc/getopt.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgetopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgetopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetopt.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -6,23 +6,23 @@\n    Copyright (C) 1987, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97\n    \tFree Software Foundation, Inc.\n \n-   NOTE: The canonical source of this file is maintained with the GNU C Library.\n-   Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n-\n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-   USA.  */\n+NOTE: The canonical source of this file is maintained with the GNU C Library.\n+Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+USA.  */\n \f\n /* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.\n    Ditto for AIX 3.2 and <stdlib.h>.  */"}, {"sha": "69256fd3864782dd4f5074ba87a3269217085e8c", "filename": "gcc/getopt.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgetopt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgetopt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetopt.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,23 +1,23 @@\n /* Declarations for getopt.\n    Copyright (C) 1989,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n \n-   NOTE: The canonical source of this file is maintained with the GNU C Library.\n-   Bugs can be reported to bug-glibc@gnu.org.\n+NOTE: The canonical source of this file is maintained with the GNU C Library.\n+Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n \n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n \n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n \n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-   USA.  */\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+USA.  */\n \n #ifndef _GETOPT_H\n #define _GETOPT_H 1\n@@ -130,4 +130,4 @@ extern int _getopt_internal ();\n }\n #endif\n \n-#endif /* getopt.h */\n+#endif /* _GETOPT_H */"}, {"sha": "6507ba1b1f63c2520c285960b5f83e968659f177", "filename": "gcc/getopt1.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgetopt1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgetopt1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgetopt1.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,23 +1,23 @@\n /* getopt_long and getopt_long_only entry points for GNU getopt.\n    Copyright (C) 1987,88,89,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n \n-   NOTE: The canonical source of this file is maintained with the GNU C Library.\n-   Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n-\n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-   USA.  */\n+NOTE: The canonical source of this file is maintained with the GNU C Library.\n+Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n+\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+USA.  */\n \f\n #ifdef HAVE_CONFIG_H\n #include <config.h>"}, {"sha": "80bd594a36aa19839ded47735a8f7ee95446346d", "filename": "gcc/gstab.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgstab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fgstab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgstab.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,17 @@\n+#ifndef __GNU_STAB__\n+\n+/* Indicate the GNU stab.h is in use.  */\n+\n+#define __GNU_STAB__\n+\n+#define __define_stab(NAME, CODE, STRING) NAME=CODE,\n+\n+enum __stab_debug_code\n+{\n+#include \"stab.def\"\n+LAST_UNUSED_STAB_CODE\n+};\n+\n+#undef __define_stab\n+\n+#endif /* __GNU_STAB_ */"}, {"sha": "9f0238585382955123184d24632df635562d71dd", "filename": "gcc/install.texi", "status": "modified", "additions": 31, "deletions": 24, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -179,13 +179,13 @@ make a difference.\n @cindex Objective C threads\n @cindex threads, Objective C\n @item --enable-objcthreads=@var{type}\n-Certain systems, notably Linux, can't be relied on to supply a threads\n-facility for the Objective C runtime and so will default to\n-single-threaded runtime.  They may, however, have a library threads\n-implementation available, in which case threads can be enabled with this\n-option by supplying a suitable @var{type}, probably @samp{posix}.\n-The possibilities for @var{type} are @samp{single}, @samp{posix},\n-@samp{win32}, @samp{solaris}, @samp{irix} and @samp{mach}.\n+Certain systems, notably Linux-based GNU systems, can't be relied on to\n+supply a threads facility for the Objective C runtime and so will\n+default to single-threaded runtime.  They may, however, have a library\n+threads implementation available, in which case threads can be enabled\n+with this option by supplying a suitable @var{type}, probably\n+@samp{posix}.  The possibilities for @var{type} are @samp{single},\n+@samp{posix}, @samp{win32}, @samp{solaris}, @samp{irix} and @samp{mach}.\n @end table\n \n The @file{configure} script searches subdirectories of the source\n@@ -610,7 +610,7 @@ Here is a list of system types:\n \n @quotation\n 386bsd, aix, acis, amigados, aos, aout, aux, bosx, bsd, clix, coff, ctix, cxux,\n-dgux, dynix, ebmon, ecoff, elf, esix, freebsd, hms, genix, gnu, gnu/linux,\n+dgux, dynix, ebmon, ecoff, elf, esix, freebsd, hms, genix, gnu, linux-gnu,\n hiux, hpux, iris, irix, isc, luna, lynxos, mach, minix, msdos, mvs,\n netbsd, newsos, nindy, ns, osf, osfrose, ptx, riscix, riscos, rtu, sco, sim,\n solaris, sunos, sym, sysv, udi, ultrix, unicos, uniplus, unos, vms, vsta,\n@@ -759,15 +759,22 @@ To avoid this behavior, specify @samp{-gstabs+} and use GDB instead of\n DBX.  DEC is now aware of this problem with the assembler and hopes to\n provide a fix shortly.\n \n-@item arm\n+@item arm-*-aout\n Advanced RISC Machines ARM-family processors.  These are often used in\n embedded applications.  There are no standard Unix configurations.\n This configuration corresponds to the basic instruction sequences and will\n-produce a.out format object modules.\n+produce @file{a.out} format object modules.\n \n You may need to make a variant of the file @file{arm.h} for your particular\n configuration.\n \n+@item arm-*-linuxaout\n+Any of the ARM family processors running the Linux-based GNU system with\n+the @file{a.out} binary format (ELF is not yet supported).  You must use\n+version 2.8.1.0.7 or later of the Linux binutils, which you can download\n+from @file{sunsite.unc.edu:/pub/Linux/GCC} and other mirror sites for\n+Linux-based GNU systems.\n+\n @item arm-*-riscix\n The ARM2 or ARM3 processor running RISC iX, Acorn's port of BSD Unix.  If\n you are running a version of RISC iX prior to 1.2 then you must specify\n@@ -880,19 +887,19 @@ option before building.\n This port is very preliminary and has many known bugs.  We hope to\n have a higher-quality port for this machine soon.\n \n-@item i386-*-linuxoldld\n-Use this configuration to generate a.out binaries on Linux if you do not\n-have gas/binutils version 2.5.2 or later installed. This is an obsolete\n-configuration.\n+@item i386-*-linux-gnuoldld\n+Use this configuration to generate @file{a.out} binaries on Linux-based\n+GNU systems if you do not have gas/binutils version 2.5.2 or later\n+installed. This is an obsolete configuration.\n \n-@item i386-*-linuxaout\n-Use this configuration to generate a.out binaries on Linux. This configuration\n-is being superseded. You must use gas/binutils version 2.5.2 or\n-later.\n+@item i386-*-linux-gnuaout\n+Use this configuration to generate @file{a.out} binaries on Linux-based\n+GNU systems. This configuration is being superseded. You must use\n+gas/binutils version 2.5.2 or later.\n \n-@item i386-*-linux\n-Use this configuration to generate ELF binaries on Linux.  You must\n-use gas/binutils version 2.5.2 or later.\n+@item i386-*-linux-gnu\n+Use this configuration to generate ELF binaries on Linux-based GNU\n+systems.  You must use gas/binutils version 2.5.2 or later.\n \n @item i386-*-sco\n Compilation with RCC is recommended.  Also, it may be a good idea to\n@@ -1017,7 +1024,7 @@ LynxOS 2.2 and earlier comes with GNU CC 1.x already installed as\n You can tell GNU CC to use the GNU assembler and linker, by specifying\n @samp{--with-gnu-as --with-gnu-ld} when configuring.  These will produce\n COFF format object files and executables;  otherwise GNU CC will use the\n-installed tools, which produce a.out format executables.\n+installed tools, which produce @file{a.out} format executables.\n \n @item m32r-*-elf\n Embedded M32R system.\n@@ -1378,8 +1385,8 @@ PowerPC system in big endian mode, running System V.4.\n You can specify a default version for the @samp{-mcpu=}@var{cpu_type}\n switch by using the configure option @samp{--with-cpu-}@var{cpu_type}.\n \n-@item powerpc-*-linux\n-PowerPC system in big endian mode, running Linux.\n+@item powerpc-*-linux-gnu\n+PowerPC system in big endian mode, running the Linux-based GNU system.\n \n You can specify a default version for the @samp{-mcpu=}@var{cpu_type}\n switch by using the configure option @samp{--with-cpu-}@var{cpu_type}."}, {"sha": "82ef9b6ba670a756494da06c3500b19734c7d5f0", "filename": "gcc/install1.texi", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Finstall1.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Finstall1.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall1.texi?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,15 @@\n+@setfilename INSTALL\n+@set INSTALLONLY\n+\n+@c This file itself, install1.texi, does not apear in the GCC distribution.\n+@c The immediately following lines apply to the INSTALL file\n+@c which is generated using this file.\n+This file documents the installation of the GNU compiler.\n+Copyright (C) 1988, 1989, 1992, 1994, 1995 Free Software Foundation, Inc.\n+You may copy, distribute, and modify it freely as long as you preserve\n+this copyright notice and permission notice.\n+\n+@node Installation,,, (dir)\n+@chapter Installing GNU CC\n+@include install.texi\n+@bye"}, {"sha": "7a643d60aa15711a5f50f328aaf21d411f40c91a", "filename": "gcc/invoke.texi", "status": "modified", "additions": 377, "deletions": 67, "changes": 444, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1988, 89, 92, 93, 94, 1995, 1996 Free Software Foundation, Inc.\n+@c Copyright (C) 1988,89,92,93,94,95,96,1997 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -93,8 +93,8 @@ in the following sections.\n @item C Language Options\n @xref{C Dialect Options,,Options Controlling C Dialect}.\n @smallexample\n--ansi  -fallow-single-precision -fcond-mismatch  -fno-asm\n--fno-builtin  -fsigned-bitfields  -fsigned-char\n+-ansi  -fallow-single-precision  -fcond-mismatch  -fno-asm\n+-fno-builtin  -ffreestanding - fhosted  -fsigned-bitfields  -fsigned-char\n -funsigned-bitfields  -funsigned-char  -fwritable-strings\n -traditional  -traditional-cpp  -trigraphs\n @end smallexample\n@@ -105,8 +105,8 @@ in the following sections.\n -fall-virtual  -fdollars-in-identifiers  -felide-constructors\n -fenum-int-equiv -fexternal-templates  -ffor-scope -fno-for-scope\n -fhandle-signatures -fmemoize-lookups  -fno-default-inline -fno-gnu-keywords\n--fnonnull-objects  -foperator-names  -fstrict-prototype\n--fthis-is-variable -nostdinc++ -traditional  +e@var{n}\n+-fnonnull-objects  -foperator-names  -fstrict-prototype -fthis-is-variable\n+-ftemplate-depth-@var{n} -nostdinc++ -traditional  +e@var{n}\n @end smallexample\n \n @item Warning Options\n@@ -117,20 +117,21 @@ in the following sections.\n -Wcast-align -Wcast-qual  -Wchar-subscript  -Wcomment\n -Wconversion  -Werror  -Wformat\n -Wid-clash-@var{len}  -Wimplicit  -Wimport  -Winline\n--Wlarger-than-@var{len}  -Wmissing-declarations\n+-Wlarger-than-@var{len}  -Wmain  -Wmissing-declarations\n -Wmissing-prototypes  -Wnested-externs\n -Wno-import  -Woverloaded-virtual -Wparentheses\n -Wpointer-arith  -Wredundant-decls -Wreorder -Wreturn-type -Wshadow\n -Wsign-compare -Wstrict-prototypes  -Wswitch  -Wsynth\n -Wtemplate-debugging  -Wtraditional  -Wtrigraphs\n--Wuninitialized  -Wunused  -Wwrite-strings\n+-Wundef -Wuninitialized  -Wunused  -Wwrite-strings\n @end smallexample\n \n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program or GCC}.\n @smallexample\n -a  -ax  -d@var{letters}  -fpretend-float\n--g  -g@var{level} -gcoff  -gdwarf  -gdwarf+\n+-fprofile-arcs  -ftest-coverage\n+-g  -g@var{level} -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2\n -ggdb  -gstabs  -gstabs+  -gxcoff  -gxcoff+\n -p  -pg  -print-file-name=@var{library}  -print-libgcc-file-name\n -print-prog-name=@var{program}  -print-search-dirs  -save-temps\n@@ -139,6 +140,7 @@ in the following sections.\n @item Optimization Options\n @xref{Optimize Options,,Options that Control Optimization}.\n @smallexample\n+-fbranch-probabilities\n -fcaller-saves  -fcse-follow-jumps  -fcse-skip-blocks\n -fdelayed-branch   -fexpensive-optimizations\n -ffast-math  -ffloat-store  -fforce-addr  -fforce-mem\n@@ -184,7 +186,7 @@ in the following sections.\n @item Directory Options\n @xref{Directory Options,,Options for Directory Search}.\n @smallexample\n--B@var{prefix}  -I@var{dir}  -I-  -L@var{dir}\n+-B@var{prefix}  -I@var{dir}  -I-  -L@var{dir} -specs=@var{file}\n @end smallexample\n \n @item Target Options\n@@ -198,9 +200,9 @@ in the following sections.\n @xref{Submodel Options,,Hardware Models and Configurations}.\n @smallexample\n @emph{M680x0 Options}\n--m68000  -m68020  -m68020-40  -m68030  -m68040  -m68060\n--m5200  -m68881 -mbitfield  -mc68000  -mc68020  -mfpa\n--mnobitfield  -mrtd  -mshort  -msoft-float\n+-m68000  -m68020  -m68020-40  -m68020-60 -m68030  -m68040\n+-m68060  -m5200  -m68881 -mbitfield  -mc68000  -mc68020  -mfpa\n+-mnobitfield  -mrtd  -mshort  -msoft-float  -malign-int\n \n @emph{VAX Options}\n -mg  -mgnu  -munix\n@@ -239,6 +241,10 @@ in the following sections.\n -msoft-float -mhard-float\n -mbsd -mxopen -mno-symrename\n \n+@emph{M32R/D Options}\n+-mcode-model=@var{model type}  -msdata=@var{sdata type}\n+-G @var{num}\n+\n @emph{M88K Options}\n -m88000  -m88100  -m88110  -mbig-pic\n -mcheck-zero-division  -mhandle-large-shift\n@@ -260,9 +266,10 @@ in the following sections.\n -mpowerpc-gfxopt  -mno-powerpc-gfxopt\n -mnew-mnemonics  -mno-new-mnemonics\n -mfull-toc   -mminimal-toc  -mno-fop-in-toc  -mno-sum-in-toc\n--mxl-call  -mno-xl-call\n+-mxl-call  -mno-xl-call  -mthreads  -mpe\n -msoft-float  -mhard-float  -mmultiple  -mno-multiple\n--mstring  -mno-string  -mbit-align  -mno-bit-align\n+-mstring  -mno-string  -mupdate  -mno-update\n+-mfused-madd  -mno-fused-madd  -mbit-align  -mno-bit-align\n -mstrict-align  -mno-strict-align  -mrelocatable\n -mno-relocatable  -mrelocatable-lib  -mno-relocatable-lib\n -mtoc  -mno-toc  -mtraceback  -mno-traceback\n@@ -297,8 +304,8 @@ in the following sections.\n -malign-functions=@var{num}\n \n @emph{HPPA Options}\n--mdisable-fpregs  -mdisable-indexing -mfast-indirect-calls\n--mgas  -mjump-in-delay -mlong-load-store -mno-disable-fpregs\n+-mbig-switch -mdisable-fpregs  -mdisable-indexing -mfast-indirect-calls\n+-mgas  -mjump-in-delay -mlong-load-store -mno-big-switch -mno-disable-fpregs\n -mno-disable-indexing -mno-fast-indirect-calls -mno-gas\n -mno-jump-in-delay\n -mno-long-load-store\n@@ -341,11 +348,12 @@ in the following sections.\n @smallexample\n -fcall-saved-@var{reg}  -fcall-used-@var{reg}\n -ffixed-@var{reg}  -finhibit-size-directive\n+-fcheck-memory-usage  -fprefix-function-name\n -fno-common  -fno-ident  -fno-gnu-linker\n -fpcc-struct-return  -fpic  -fPIC\n -freg-struct-return  -fshared-data  -fshort-enums\n -fshort-double  -fvolatile  -fvolatile-global\n--fverbose-asm -fpack-struct  +e0  +e1\n+-fverbose-asm -fpack-struct  -fstack-check  +e0  +e1\n @end smallexample\n @end table\n \n@@ -558,8 +566,8 @@ This turns off certain features of GNU C that are incompatible with ANSI\n C, such as the @code{asm}, @code{inline} and @code{typeof} keywords, and\n predefined macros such as @code{unix} and @code{vax} that identify the\n type of system you are using.  It also enables the undesirable and\n-rarely used ANSI trigraph feature, disallows @samp{$} as part of\n-identifiers, and disables recognition of C++ style @samp{//} comments.\n+rarely used ANSI trigraph feature, and it disables recognition of C++\n+style @samp{//} comments.\n \n The alternate keywords @code{__asm__}, @code{__extension__},\n @code{__inline__} and @code{__typeof__} continue to work despite\n@@ -628,6 +636,24 @@ The @samp{-ansi} option prevents @code{alloca} and @code{ffs} from being\n builtin functions, since these functions do not have an ANSI standard\n meaning.\n \n+@item -fhosted\n+@cindex hosted environment\n+\n+Assert that compilation takes place in a hosted environment.  This implies\n+@samp{-fbuiltin}.  A hosted environment is one in which the\n+entire standard library is available, and in which @code{main} has a return\n+type of @code{int}.  Examples are nearly everything except a kernel.\n+This is equivalent to @samp{-fno-freestanding}.\n+\n+@item -ffreestanding\n+@cindex hosted environment\n+\n+Assert that compilation takes place in a freestanding environment.  This\n+implies @samp{-fno-builtin}.  A freestanding environment\n+is one in which the standard library may not exist, and program startup may\n+not necessarily be at @code{main}.  The most obvious example is an OS kernel.\n+This is equivalent to @samp{-fno-hosted}.\n+\n @item -trigraphs\n Support ANSI C trigraphs.  You don't want to know about this\n brain-damage.  The @samp{-ansi} option implies @samp{-trigraphs}.\n@@ -1029,6 +1055,12 @@ vtables; if a class has any non-inline virtual functions, the vtable\n will be emitted in the translation unit containing the first one of\n those.\n \n+@item -ftemplate-depth-@var{n}\n+Set the maximum instantiation depth for template classes to @var{n}.\n+A limit on the template instantiation depth is needed to detect\n+endless recursions during template class instantiation. ANSI/ISO C++\n+conforming programs must not rely on a maximum depth greater than 17.\n+\n @item -nostdinc++\n Do not search for header files in the standard directories specific to\n C++, but do still search the other standard directories.  (This option\n@@ -1053,6 +1085,9 @@ Do not assume @samp{inline} for functions defined inside a class scope.\n Warnings that apply only to C++ programs.  @xref{Warning\n Options,,Options to Request or Suppress Warnings}.\n \n+@item -Weffc++\n+Warn about violation of some style rules from Effective C++ by Scott Myers.\n+\n @item +e@var{n}\n Control how virtual function definitions are used, in a fashion\n compatible with @code{cfront} 1.x.  @xref{Code Gen Options,,Options for\n@@ -1143,8 +1178,14 @@ the arguments supplied have types appropriate to the format string\n specified.\n \n @item -Wimplicit\n-Warn whenever a function or parameter is implicitly declared.\n-\n+Warn whenever a function or parameter is implicitly declared,\n+or when a type implicitly defaults to @code{int}.\n+\n+@item -Wmain\n+Warn if the type of @samp{main} is suspicious.  @samp{main} should be a\n+function with external linkage, returning int, taking either zero\n+arguments, two, or three arguments of appropriate types.\n+  \n @item -Wparentheses\n Warn if parentheses are omitted in certain contexts, such\n as when there is an assignment in a context where a truth value\n@@ -1366,6 +1407,9 @@ the block.\n A @code{switch} statement has an operand of type @code{long}.\n @end itemize\n \n+@item -Wundef\n+Warn if an undefined identifier is evaluated in an @samp{#if} directive.\n+\n @item -Wshadow\n Warn whenever a local variable shadows another local variable.\n \n@@ -1510,7 +1554,7 @@ makes debugging work better in GDB but will probably make other debuggers\n crash or\n refuse to read the program.  If you want to control for certain whether\n to generate the extra information, use @samp{-gstabs+}, @samp{-gstabs},\n-@samp{-gxcoff+}, @samp{-gxcoff}, @samp{-gdwarf+}, or @samp{-gdwarf}\n+@samp{-gxcoff+}, @samp{-gxcoff}, @samp{-gdwarf-1+}, or @samp{-gdwarf-1}\n (see below).\n \n Unlike most other C compilers, GNU CC allows you to use @samp{-g} with\n@@ -1528,8 +1572,10 @@ The following options are useful when GNU CC is generated with the\n capability for more than one debugging format.\n \n @item -ggdb\n-Produce debugging information in the native format (if that is supported),\n-including GDB extensions if at all possible.\n+Produce debugging information for use by GDB.  This means to use the\n+most expressive format available (DWARF 2, stabs, or the native format\n+if neither of those are supported), including GDB extensions if at all\n+possible.\n \n @item -gstabs\n Produce debugging information in stabs format (if that is supported),\n@@ -1561,21 +1607,27 @@ refuse to read the program, and may cause assemblers other than the GNU\n assembler (GAS) to fail with an error.\n \n @item -gdwarf\n-Produce debugging information in DWARF format (if that is supported).\n-This is the format used by SDB on most System V Release 4 systems.\n+Produce debugging information in DWARF version 1 format (if that is\n+supported).  This is the format used by SDB on most System V Release 4\n+systems.\n \n @item -gdwarf+\n-Produce debugging information in DWARF format (if that is supported),\n-using GNU extensions understood only by the GNU debugger (GDB).  The\n-use of these extensions is likely to make other debuggers crash or\n-refuse to read the program.\n+Produce debugging information in DWARF version 1 format (if that is\n+supported), using GNU extensions understood only by the GNU debugger\n+(GDB).  The use of these extensions is likely to make other debuggers\n+crash or refuse to read the program.\n+\n+@item -gdwarf-2\n+Produce debugging information in DWARF version 2 format (if that is\n+supported).  This is the format used by DBX on IRIX 6.\n \n @item -g@var{level}\n @itemx -ggdb@var{level}\n @itemx -gstabs@var{level}\n @itemx -gcoff@var{level}\n @itemx -gxcoff@var{level}\n @itemx -gdwarf@var{level}\n+@itemx -gdwarf-2@var{level}\n Request debugging information and also use @var{level} to specify how\n much information.  The default level is 2.\n \n@@ -1688,6 +1740,54 @@ to return instructions is added to the trace.  The trace becomes: 0 3 1\n written to @file{bbtrace.gz}.  It is solely used for counting jump\n frequencies.\n \n+@item -fprofile-arcs\n+Instrument @dfn{arcs} during compilation.  For each function of your\n+program, GNU CC creates a program flow graph, then finds a spanning tree\n+for the graph.  Only arcs that are not on the spanning tree have to be\n+instrumented: the compiler adds code to count the number of times that these\n+arcs are executed.  When an arc is the only exit or only entrance to a\n+block, the instrumentation code can be added to the block; otherwise, a\n+new basic block must be created to hold the instrumentation code.\n+\n+Since not every arc in the program must be instrumented, programs\n+compiled with this option run faster than programs compiled with\n+@samp{-a}, which adds instrumentation code to every basic block in the\n+program.  The tradeoff: since @code{gcov} does not have\n+execution counts for all branches, it must start with the execution\n+counts for the instrumented branches, and then iterate over the program\n+flow graph until the entire graph has been solved.  Hence, @code{gcov}\n+runs a little more slowly than a program which uses information from\n+@samp{-a}.\n+\n+@samp{-fprofile-arcs} also makes it possible to estimate branch\n+probabilities, and to calculate basic block execution counts.  In\n+general, basic block execution counts do not give enough information to\n+estimate all branch probabilities.  When the compiled program exits, it\n+saves the arc execution counts to a file called\n+@file{@var{sourcename}.da}.  Use the compiler option\n+@samp{-fbranch-probabilities} (@pxref{Optimize Options,,Options that\n+Control Optimization}) when recompiling, to optimize using estimated\n+branch probabilities.\n+\n+@need 2000\n+@item -ftest-coverage\n+Create data files for the @code{gcov} code-coverage utility\n+(@pxref{Gcov,, @code{gcov}: a GNU CC Test Coverage Program}).\n+The data file names begin with the name of your source file:\n+\n+@table @code\n+@item @var{sourcename}.bb\n+A mapping from basic blocks to line numbers, which @code{gcov} uses to\n+associate basic block execution counts with line numbers.\n+\n+@item @var{sourcename}.bbg\n+A list of all arcs in the program flow graph.  This allows @code{gcov}\n+to reconstruct the program flow graph, so that it can compute all basic\n+block and arc execution counts from the information in the\n+@code{@var{sourcename}.da} file (this last file is the output from\n+@samp{-fprofile-arcs}).\n+@end table\n+\n @item -d@var{letters}\n Says to make debugging dumps during compilation at times specified by\n @var{letters}.  This is used for debugging the compiler.  The file names\n@@ -2078,6 +2178,23 @@ implies @samp{-fstrength-reduce} as well as @samp{-frerun-cse-after-loop}.\n \n @item -fno-peephole\n Disable any machine-specific peephole optimizations.\n+\n+@item -fbranch-probabilities\n+After running a program compiled with @samp{-fprofile-arcs}\n+(@pxref{Debugging Options,, Options for Debugging Your Program or\n+@code{gcc}}), you can compile it a second time using\n+@samp{-fbranch-probabilities}, to improve optimizations based on\n+guessing the path a branch might take.\n+\n+@ifset INTERNALS\n+With @samp{-fbranch-probabilities}, GNU CC puts a @samp{REG_EXEC_COUNT}\n+note on the first instruction of each basic block, and a\n+@samp{REG_BR_PROB} note on each @samp{JUMP_INSN} and @samp{CALL_INSN}.\n+These can be used to improve optimization.  Currently, they are only\n+used in one place: in @file{reorg.c}, instead of guessing which path a\n+branch is mostly to take, the @samp{REG_BR_PROB} values are used to\n+exactly determine which path is taken more often.\n+@end ifset\n @end table\n \n @node Preprocessor Options\n@@ -2412,9 +2529,9 @@ libraries and for parts of the compiler:\n \n @table @code\n @item -I@var{dir}\n-Add the directory @var{directory} to the head of the list of directories\n-to be searched for header files.  This can be used to override a system\n-header file, substituting your own version, since these directories are\n+Add the directory @var{dir} to the head of the list of directories to be\n+searched for header files.  This can be used to override a system header\n+file, substituting your own version, since these directories are\n searched before the system header file directories.  If you use more\n than one @samp{-I} option, the directories are scanned in left-to-right\n order; the standard system directories come after.\n@@ -2477,6 +2594,14 @@ out of the link if it is not found by those means.\n Another way to specify a prefix much like the @samp{-B} prefix is to use\n the environment variable @code{GCC_EXEC_PREFIX}.  @xref{Environment\n Variables}.\n+\n+@item -specs=@var{file}\n+Process @var{file} after the compiler reads in the standard @file{specs}\n+file, in order to override the defaults that the @file{gcc} driver\n+program uses when determining what switches to pass to @file{cc1},\n+@file{cc1plus}, @file{as}, @file{ld}, etc.  More than one\n+@samp{-specs=}@var{file} can be specified on the command line, and they\n+are processed in order, from left to right.\n @end table\n \n @node Target Options\n@@ -2594,6 +2719,7 @@ that macro, which enables you to change the defaults.\n * Convex Options::\n * AMD29K Options::\n * ARM Options::\n+* M32R/D Options::\n * M88K Options::\n * RS/6000 and PowerPC Options::\n * RT Options::\n@@ -2664,6 +2790,12 @@ This results in code which can run relatively efficiently on either a\n 68020/68881 or a 68030 or a 68040.  The generated code does use the\n 68881 instructions that are emulated on the 68040.\n \n+@item -m68020-60\n+Generate output for a 68060, without using any of the new instructions.\n+This results in code which can run relatively efficiently on either a\n+68020/68881 or a 68030 or a 68040.  The generated code does use the\n+68881 instructions that are emulated on the 68060.\n+\n @item -mfpa\n Generate output containing Sun FPA instructions for floating point.\n \n@@ -2710,6 +2842,19 @@ harmlessly ignored.)\n \n The @code{rtd} instruction is supported by the 68010, 68020, 68030,\n 68040, and 68060 processors, but not by the 68000 or 5200.\n+\n+@item -malign-int\n+@itemx -mno-align-int\n+Control whether GNU CC aligns @code{int}, @code{long}, @code{long long}, \n+@code{float}, @code{double}, and @code{long double} variables on a 32-bit\n+boundary (@samp{-malign-int}) or a 16-bit boundary (@samp{-mno-align-int}).\n+Aligning variables on 32-bit boundaries produces code that runs somewhat\n+faster on processors with 32-bit busses at the expense of more memory.\n+\n+@strong{Warning:} if you use the @samp{-malign-int} switch, GNU CC will\n+align structures containing the above types  differently than\n+most published application binary interface specifications for the m68k.\n+\n @end table\n \n @node VAX Options\n@@ -3090,6 +3235,12 @@ to date, but not the 29050).\n registers for copying out arguments.  This helps detect calling a function\n with fewer arguments than it was declared with.\n \n+@item -mno-impure-text\n+@itemx -mimpure-text\n+@kindex -mimpure-text\n+@samp{-mimpure-text}, used in addition to @samp{-shared}, tells the compiler to\n+not pass @samp{-assert pure-text} to the linker when linking a shared object.\n+\n @item -msoft-float\n @kindex -msoft-float\n Generate output containing library calls for floating point.\n@@ -3195,6 +3346,67 @@ suppresses this pass.  The post-processor is never run when the\n compiler is built for cross-compilation.\n @end table\n \n+@node M32R/D Options\n+@subsection M32R/D Options\n+@cindex M32R/D options\n+\n+These @samp{-m} options are defined for Mitsubishi M32R/D architectures:\n+\n+@table @code\n+@item -mcode-model=small\n+Assume all objects live in the lower 16MB of memory (so that their addresses\n+can be loaded with the @code{ld24} instruction), and assume all subroutines\n+are reachable with the @code{bl} instruction.\n+This is the default.\n+\n+The addressability of a particular object can be set with the\n+@code{model} attribute.\n+\n+@item -mcode-model=medium\n+Assume objects may be anywhere in the 32 bit address space (the compiler\n+will generate @code{seth/add3} instructions to load their addresses), and\n+assume all subroutines are reachable with the @code{bl} instruction.\n+\n+@item -mcode-model=large\n+Assume objects may be anywhere in the 32 bit address space (the compiler\n+will generate @code{seth/add3} instructions to load their addresses), and\n+assume subroutines may not be reachable with the @code{bl} instruction\n+(the compiler will generate the much slower @code{seth/add3/jl}\n+instruction sequence).\n+\n+@item -msdata=none\n+Disable use of the small data area.  Variables will be put into\n+one of @samp{.data}, @samp{bss}, or @samp{.rodata} (unless the\n+@code{section} attribute has been specified).\n+This is the default.\n+\n+The small data area consists of sections @samp{.sdata} and @samp{.sbss}.\n+Objects may be explicitly put in the small data area with the\n+@code{section} attribute using one of these sections.\n+\n+@item -msdata=sdata\n+Put small global and static data in the small data area, but do not\n+generate special code to reference them.\n+\n+@item -msdata=use\n+Put small global and static data in the small data area, and generate\n+special instructions to reference them.\n+\n+@item -G @var{num}\n+@cindex smaller data references\n+Put global and static objects less than or equal to @var{num} bytes\n+into the small data or bss sections instead of the normal data or bss\n+sections.  The default value of @var{num} is 8.\n+The @samp{-msdata} option must be set to one of @samp{sdata} or @samp{use}\n+for this option to have any effect.\n+\n+All modules should be compiled with the same @samp{-G @var{num}} value.\n+Compiling with different values of @var{num} may or may not work; if it\n+doesn't the linker will give an error message - incorrect code will not be\n+generated.\n+\n+@end table\n+\n @node M88K Options\n @subsection M88K Options\n @cindex M88k options\n@@ -3448,8 +3660,7 @@ RS/6000 and PowerPC.  The @dfn{POWER} instruction set are those\n instructions supported by the @samp{rios} chip set used in the original\n RS/6000 systems and the @dfn{PowerPC} instruction set is the\n architecture of the Motorola MPC5xx, MPC6xx, MPC8xx microprocessors, and\n-the IBM 40x microprocessors.  The PowerPC architecture defines 64-bit\n-instructions, but they are not supported by any current processors.\n+the IBM 4xx microprocessors.\n \n Neither architecture is a subset of the other.  However there is a\n large common subset of instructions supported by both.  An MQ\n@@ -3512,25 +3723,28 @@ Set architecture type, register usage, choice of mnemonics, and\n instruction scheduling parameters for machine type @var{cpu_type}.\n Supported values for @var{cpu_type} are @samp{rs6000}, @samp{rios1},\n @samp{rios2}, @samp{rsc}, @samp{601}, @samp{602}, @samp{603},\n-@samp{603e}, @samp{604}, @samp{620}, @samp{power}, @samp{power2},\n-@samp{powerpc}, @samp{403}, @samp{505}, @samp{821}, and @samp{860} and\n-@samp{common}.  @samp{-mcpu=power}, @samp{-mcpu=power2}, and\n-@samp{-mcpu=powerpc} specify generic POWER, POWER2 and pure PowerPC\n-(i.e., not MPC601) architecture machine types, with an appropriate,\n-generic processor model assumed for scheduling purposes.@refill\n+@samp{603e}, @samp{604}, @samp{604e}, @samp{620}, @samp{power},\n+@samp{power2}, @samp{powerpc}, @samp{403}, @samp{505}, @samp{801},\n+@samp{821}, @samp{823}, and @samp{860} and @samp{common}.\n+@samp{-mcpu=power}, @samp{-mcpu=power2}, and @samp{-mcpu=powerpc}\n+specify generic POWER, POWER2 and pure PowerPC (i.e., not MPC601)\n+architecture machine types, with an appropriate, generic processor model\n+assumed for scheduling purposes.@refill\n \n @c overfull hbox here --bob 22 jul96\n @c original text between ignore ... end ignore\n @ignore\n-Specifying any of the @samp{-mcpu=rios1}, @samp{-mcpu=rios2}, @samp{-mcpu=rsc},\n-@samp{-mcpu=power}, or @samp{-mcpu=power2} options enables the @samp{-mpower}\n-option and disables the @samp{-mpowerpc} option; @samp{-mcpu=601}\n-enables both the @samp{-mpower} and @samp{-mpowerpc} options;\n-all of @samp{-mcpu=602}, @samp{-mcpu=603}, @samp{-mcpu=603e}, @samp{-mcpu=604},\n-@samp{-mcpu=620}, @samp{-mcpu=403}, @samp{-mcpu=505}, @samp{-mcpu=821},\n-@samp{-mcpu=860} and @samp{-mcpu=powerpc} enable the @samp{-mpowerpc}\n-option and disable the @samp{-mpower} option; @samp{-mcpu=common}\n-disables both the @samp{-mpower} and @samp{-mpowerpc} options.@refill\n+Specifying any of the @samp{-mcpu=rios1}, @samp{-mcpu=rios2},\n+@samp{-mcpu=rsc}, @samp{-mcpu=power}, or @samp{-mcpu=power2} options\n+enables the @samp{-mpower} option and disables the @samp{-mpowerpc}\n+option; @samp{-mcpu=601} enables both the @samp{-mpower} and\n+@samp{-mpowerpc} options; all of @samp{-mcpu=602}, @samp{-mcpu=603},\n+@samp{-mcpu=603e}, @samp{-mcpu=604}, @samp{-mcpu=604e},\n+@samp{-mcpu=620}, @samp{-mcpu=403}, @samp{-mcpu=505}, @samp{-mcpu=801},\n+@samp{-mcpu=821}, @samp{-mcpu=823}, @samp{-mcpu=860} and\n+@samp{-mcpu=powerpc} enable the @samp{-mpowerpc} option and disable the\n+@samp{-mpower} option; @samp{-mcpu=common} disables both the\n+@samp{-mpower} and @samp{-mpowerpc} options.@refill\n @end ignore\n @c            changed paragraph\n Specifying any of the following options: \n@@ -3616,6 +3830,21 @@ stack is inefficient and rarely needed, this option is not enabled by\n default and only is necessary when calling subroutines compiled by AIX\n XL compilers without optimization.\n \n+@item -mthreads\n+Support @dfn{AIX Threads}.  Link an application written to use\n+@dfn{pthreads} with special libraries and startup code to enable the\n+application to run.\n+\n+@item -mpe\n+Support @dfn{IBM RS/6000 SP} @dfn{Parallel Environment} (PE).  Link an\n+application written to use message passing with special startup code to\n+enable the application to run.  The system must have PE installed in the\n+standard location (@file{/usr/lpp/ppe.poe/}), or the @file{specs} file\n+must be overridden with the @samp{-specs=} option to specify the\n+appropriate directory location.  The Parallel Environment does not\n+support threads, so the @samp{-mpe} option and the @samp{-mthreads}\n+option are incompatible.\n+\n @item -msoft-float\n @itemx -mhard-float\n Generate code that does not use (uses) the floating-point register set.\n@@ -3635,11 +3864,27 @@ processor is in little endian mode.\n @itemx -mno-string\n Generate code that uses (does not use) the load string instructions and the\n store string word instructions to save multiple registers and do small block\n-moves.  These instructions are generated by default on POWER systems, anod not\n+moves.  These instructions are generated by default on POWER systems, and not\n generated on PowerPC systems.  Do not use @samp{-mstring} on little endian\n PowerPC systems, since those instructions do not work when the processor is in\n little endian mode.\n \n+@item -mupdate\n+@itemx -mno-update\n+Generate code that uses (does not use) the load or store instructions\n+that update the base register to the address of the calculated memory\n+location.  These instructions are generated by default.  If you use\n+@samp{-mno-update}, there is a small window between the time that the\n+stack pointer is updated and the address of the previous frame is\n+stored, which means code that walks the stack frame across interrupts or\n+signals may get corrupted data.\n+\n+@item -mfused-madd\n+@itemx -mno-fused-madd\n+Generate code that uses (does not use) the floating point multiply and\n+accumulate instructions.  These instructions are generated by default if\n+hardware floating is used.\n+\n @item -mno-bit-align\n @itemx -mbit-align\n On System V.4 and embedded PowerPC systems do not (do) force structures\n@@ -3718,8 +3963,8 @@ On System V.4 and embedded PowerPC systems compile code for the Solaris\n operating system.\n \n @item -mcall-linux\n-On System V.4 and embedded PowerPC systems compile code for the Linux\n-operating system.\n+On System V.4 and embedded PowerPC systems compile code for the\n+Linux-based GNU system.\n \n @item -mprototype\n @item -mno-prototype\n@@ -3927,7 +4172,16 @@ stabs within MIPS ECOFF.\n \n @item -mgas\n Generate code for the GNU assembler.  This is the default on the OSF/1\n-reference platform, using the OSF/rose object format.\n+reference platform, using the OSF/rose object format.  Also, this is\n+the default if the configure option @samp{--with-gnu-as} is used.\n+\n+@item -msplit-addresses\n+@itemx -mno-split-addresses\n+Generate code to load the high and low parts of address constants separately.\n+This allows @code{gcc} to optimize away redundant loads of the high order\n+bits of addresses.  This optimization requires GNU as and GNU ld.\n+This optimization is enabled by default for some embedded targets where\n+GNU as and GNU ld are standard.\n \n @item -mrnames\n @itemx -mno-rnames\n@@ -4206,6 +4460,11 @@ Generate code for a PA 1.0 processor.\n @item -mpa-risc-1-1\n Generate code for a PA 1.1 processor.\n \n+@item -mbig-switch\n+Generate code suitable for big switch tables.  Use this option only if\n+the assembler/linker complain about out of range branches within a switch\n+table.\n+\n @item -mjump-in-delay\n Fill delay slots of function calls with unconditional jump instructions\n by modifying the return pointer for the function call to be the target\n@@ -4353,8 +4612,7 @@ Do not permit (do permit) unaligned accesses.\n \n @item -mold-align\n Enable structure-alignment compatibility with Intel's gcc release version\n-1.3 (based on gcc 1.37).  Currently this is buggy in that @samp{#pragma\n-align 1} is always assumed as well, and cannot be turned off.\n+1.3 (based on gcc 1.37).  This option implies @samp{-mstrict-align}.\n @end table\n \n @node DEC Alpha Options\n@@ -4733,23 +4991,20 @@ be volatile.\n @cindex PIC\n Generate position-independent code (PIC) suitable for use in a shared\n library, if supported for the target machine.  Such code accesses all\n-constant addresses through a global offset table (GOT).  If the GOT size\n-for the linked executable exceeds a machine-specific maximum size, you\n-get an error message from the linker indicating that @samp{-fpic} does\n-not work; in that case, recompile with @samp{-fPIC} instead.  (These\n-maximums are 16k on the m88k, 8k on the Sparc, and 32k on the m68k and\n-RS/6000.  The 386 has no such limit.)\n+constant addresses through a global offset table (GOT).  The dynamic\n+loader resolves the GOT entries when the program starts (the dynamic\n+loader is not part of GNU CC; it is part of the operating system).  If\n+the GOT size for the linked executable exceeds a machine-specific\n+maximum size, you get an error message from the linker indicating that\n+@samp{-fpic} does not work; in that case, recompile with @samp{-fPIC}\n+instead.  (These maximums are 16k on the m88k, 8k on the Sparc, and 32k\n+on the m68k and RS/6000.  The 386 has no such limit.)\n \n Position-independent code requires special support, and therefore works\n only on certain machines.  For the 386, GNU CC supports PIC for System V\n but not for the Sun 386i.  Code generated for the IBM RS/6000 is always\n position-independent.\n \n-The GNU assembler does not fully support PIC.  Currently, you must use\n-some other assembler in order for PIC to work.  We would welcome\n-volunteers to upgrade GAS to handle this; the first part of the job is\n-to figure out what the assembler must do differently.\n-\n @item -fPIC\n If supported for the target machine, emit position-independent code,\n suitable for dynamic linking and avoiding any limit on the size of the\n@@ -4805,6 +5060,61 @@ Pack all structure members together without holes.  Usually you would\n not want to use this option, since it makes the code suboptimal, and\n the offsets of structure members won't agree with system libraries.\n \n+@item -fcheck-memory-usage\n+Generate extra code to check each memory access.  GNU CC will generate\n+code that is suitable for a detector of bad memory accesses such as\n+@file{Checker}.  If you specify this option, you can not use the\n+@code{asm} or @code{__asm__} keywords.\n+\n+You must also specify this option when you compile functions you call that\n+have side effects.  If you do not, you may get erronous messages from\n+the detector.  Normally,  you should compile all your code with this option.\n+If you use functions from a library that have side-effects (such as\n+@code{read}), you may not be able to recompile the library and\n+specify this option.  In that case, you can enable the\n+@samp{-fprefix-function-name} option, which requests GNU CC to encapsulate\n+your code and make other functions look as if they were compiled with\n+@samp{-fcheck-memory-usage}.  This is done by calling ``stubs'',\n+which are provided by the detector.  If you cannot find or build\n+stubs for every function you call, you may have to specify\n+@samp{-fcheck-memory-usage} without @samp{-fprefix-function-name}.\n+\n+@item -fprefix-function-name\n+Request GNU CC to add a prefix to the symbols generated for function names.\n+GNU CC adds a prefix to the names of functions defined as well as\n+functions called.  Code compiled with this option and code compiled\n+without the option can't be linked together, unless or stubs are used.\n+\n+If you compile the following code with @samp{-fprefix-function-name}\n+@example\n+extern void bar (int);\n+void\n+foo (int a)\n+@{\n+  return bar (a + 5);\n+\n+@}\n+@end example\n+\n+@noindent\n+GNU CC will compile the code as if it was written:\n+@example\n+extern void prefix_bar (int);\n+void\n+prefix_foo (int a)\n+@{\n+  return prefix_bar (a + 5);\n+@}\n+@end example\n+This option is designed to be used with @samp{-fcheck-memory-usage}.\n+\n+@item -fstack-check\n+Generate code to verify that you do not go beyond the boundary of the\n+stack.  You should specify this flag if you are running in an\n+environment with multiple threads, but only rarely need to specify it in\n+a single-threaded environment since stack overflow is automatically\n+detected on nearly all systems if there is only one stack.\n+\n @item +e0\n @itemx +e1\n Control whether virtual function definitions in classes are used to"}, {"sha": "06cf99645d778b30f5503f7bca6615d2a7b71bf2", "filename": "gcc/just-fixinc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fjust-fixinc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fjust-fixinc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjust-fixinc?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# $Id$\n+# $Id: just-fixinc,v 1.1 1997/08/11 15:57:11 law Exp $\n # This script exists for use after installing\n # the GCC binaries from a distribution tape/CD-ROM.\n # Use it *after* copying the directory of binaries"}, {"sha": "1d5d53d939863ae2569b50ea4c3e8cb22aa8abb7", "filename": "gcc/md.texi", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -2410,6 +2410,16 @@ this pattern to emit the required instructions.\n \n No operands are provided.\n \n+@cindex @code{check_stack} instruction pattern\n+@item @samp{check_stack}\n+If stack checking cannot be done on your system by probing the stack with\n+a load or store instruction (@pxref{Stack Checking}), define this pattern\n+to perform the needed check and signaling an error if the stack\n+has overflowed.  The single operand is the location in the stack furthest\n+from the current stack pointer that you need to validate.  Normally,\n+on machines where this pattern is needed, you would obtain the stack\n+limit from a global or thread-specific variable or register.\n+\n @cindex @code{nonlocal_goto} instruction pattern\n @item @samp{nonlocal_goto}\n Emit code to generate a non-local goto, e.g., a jump from one function\n@@ -2436,6 +2446,15 @@ normally need to define this pattern.  A typical reason why you might\n need this pattern is if some value, such as a pointer to a global table,\n must be restored when the frame pointer is restored.  There are no\n arguments.\n+\n+@cindex @code{exception_receiver} instruction pattern\n+@item @samp{exception_receiver}\n+This pattern, if defined, contains code needed at the site of an\n+exception handler that isn't needed at the site of a nonlocal goto.  You\n+will not normally need to define this pattern.  A typical reason why you\n+might need this pattern is if some value, such as a pointer to a global\n+table, must be restored after control flow is branched to the handler of\n+an exception.  There are no arguments.\n @end table\n \n @node Pattern Ordering"}, {"sha": "66d8b8adc7fbcada50bc93f3b1f0390c39d73135", "filename": "gcc/move-if-change", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fmove-if-change", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fmove-if-change", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmove-if-change?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,17 @@\n+#!/bin/sh\n+# Like mv $1 $2, but if the files are the same, just delete $1.\n+# Status is 0 if $2 is changed, 1 otherwise.\n+if\n+test -r $2\n+then\n+if\n+cmp -s $1 $2\n+then\n+echo $2 is unchanged\n+rm -f $1\n+else\n+mv -f $1 $2\n+fi\n+else\n+mv -f $1 $2\n+fi"}, {"sha": "6a04682d3418f6c48564a51f34888e0d7195d085", "filename": "gcc/objc/objc-parse.c", "status": "added", "additions": 5103, "deletions": 0, "changes": 5103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09"}, {"sha": "e06359919fb06cd77f309ebe734421ab9e75d6d0", "filename": "gcc/objc/objc-parse.y", "status": "added", "additions": 2938, "deletions": 0, "changes": 2938, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1,2938 @@\n+/*WARNING: This file is automatically generated!*/\n+/* YACC parser for C syntax and for Objective C.  -*-c-*-\n+   Copyright (C) 1987, 88, 89, 92-6, 1997 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* This file defines the grammar of C and that of Objective C.\n+   ifobjc ... end ifobjc  conditionals contain code for Objective C only.\n+   ifc ... end ifc  conditionals contain code for C only.\n+   Sed commands in Makefile.in are used to convert this file into\n+   c-parse.y and into objc-parse.y.  */\n+\n+/* To whomever it may concern: I have heard that such a thing was once\n+   written by AT&T, but I have never seen it.  */\n+\n+%expect 66\n+\n+%{\n+#include <stdio.h>\n+#include <errno.h>\n+#include <setjmp.h>\n+\n+#include \"config.h\"\n+#include \"tree.h\"\n+#include \"input.h\"\n+#include \"c-lex.h\"\n+#include \"c-tree.h\"\n+#include \"flags.h\"\n+\n+#ifdef MULTIBYTE_CHARS\n+#include <stdlib.h>\n+#include <locale.h>\n+#endif\n+\n+#include \"objc-act.h\"\n+\n+/* Since parsers are distinct for each language, put the language string\n+   definition here.  */\n+char *language_string = \"GNU Obj-C\";\n+\n+#ifndef errno\n+extern int errno;\n+#endif\n+\n+void yyerror ();\n+\n+/* Like YYERROR but do call yyerror.  */\n+#define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n+\n+/* Cause the `yydebug' variable to be defined.  */\n+#define YYDEBUG 1\n+%}\n+\n+%start program\n+\n+%union {long itype; tree ttype; enum tree_code code;\n+\tchar *filename; int lineno; int ends_in_label; }\n+\n+/* All identifiers that are not reserved words\n+   and are not declared typedefs in the current block */\n+%token IDENTIFIER\n+\n+/* All identifiers that are declared typedefs in the current block.\n+   In some contexts, they are treated just like IDENTIFIER,\n+   but they can also serve as typespecs in declarations.  */\n+%token TYPENAME\n+\n+/* Reserved words that specify storage class.\n+   yylval contains an IDENTIFIER_NODE which indicates which one.  */\n+%token SCSPEC\n+\n+/* Reserved words that specify type.\n+   yylval contains an IDENTIFIER_NODE which indicates which one.  */\n+%token TYPESPEC\n+\n+/* Reserved words that qualify type: \"const\" or \"volatile\".\n+   yylval contains an IDENTIFIER_NODE which indicates which one.  */\n+%token TYPE_QUAL\n+\n+/* Character or numeric constants.\n+   yylval is the node for the constant.  */\n+%token CONSTANT\n+\n+/* String constants in raw form.\n+   yylval is a STRING_CST node.  */\n+%token STRING\n+\n+/* \"...\", used for functions with variable arglists.  */\n+%token ELLIPSIS\n+\n+/* the reserved words */\n+/* SCO include files test \"ASM\", so use something else. */\n+%token SIZEOF ENUM STRUCT UNION IF ELSE WHILE DO FOR SWITCH CASE DEFAULT\n+%token BREAK CONTINUE RETURN GOTO ASM_KEYWORD TYPEOF ALIGNOF\n+%token ATTRIBUTE EXTENSION LABEL\n+%token REALPART IMAGPART\n+\n+/* Add precedence rules to solve dangling else s/r conflict */\n+%nonassoc IF\n+%nonassoc ELSE\n+\n+/* Define the operator tokens and their precedences.\n+   The value is an integer because, if used, it is the tree code\n+   to use in the expression made from the operator.  */\n+\n+%right <code> ASSIGN '='\n+%right <code> '?' ':'\n+%left <code> OROR\n+%left <code> ANDAND\n+%left <code> '|'\n+%left <code> '^'\n+%left <code> '&'\n+%left <code> EQCOMPARE\n+%left <code> ARITHCOMPARE\n+%left <code> LSHIFT RSHIFT\n+%left <code> '+' '-'\n+%left <code> '*' '/' '%'\n+%right <code> UNARY PLUSPLUS MINUSMINUS\n+%left HYPERUNARY\n+%left <code> POINTSAT '.' '(' '['\n+\n+/* The Objective-C keywords.  These are included in C and in\n+   Objective C, so that the token codes are the same in both.  */\n+%token INTERFACE IMPLEMENTATION END SELECTOR DEFS ENCODE\n+%token CLASSNAME PUBLIC PRIVATE PROTECTED PROTOCOL OBJECTNAME CLASS ALIAS\n+\n+/* Objective-C string constants in raw form.\n+   yylval is an OBJC_STRING_CST node.  */\n+%token OBJC_STRING\n+\n+\n+%type <code> unop\n+\n+%type <ttype> identifier IDENTIFIER TYPENAME CONSTANT expr nonnull_exprlist exprlist\n+%type <ttype> expr_no_commas cast_expr unary_expr primary string STRING\n+%type <ttype> typed_declspecs reserved_declspecs\n+%type <ttype> typed_typespecs reserved_typespecquals\n+%type <ttype> declmods typespec typespecqual_reserved\n+%type <ttype> typed_declspecs_no_prefix_attr reserved_declspecs_no_prefix_attr\n+%type <ttype> declmods_no_prefix_attr\n+%type <ttype> SCSPEC TYPESPEC TYPE_QUAL nonempty_type_quals maybe_type_qual\n+%type <ttype> initdecls notype_initdecls initdcl notype_initdcl\n+%type <ttype> init maybeasm\n+%type <ttype> asm_operands nonnull_asm_operands asm_operand asm_clobbers\n+%type <ttype> maybe_attribute attributes attribute attribute_list attrib\n+%type <ttype> any_word\n+\n+%type <ttype> compstmt\n+\n+%type <ttype> declarator\n+%type <ttype> notype_declarator after_type_declarator\n+%type <ttype> parm_declarator\n+\n+%type <ttype> structsp component_decl_list component_decl_list2\n+%type <ttype> component_decl components component_declarator\n+%type <ttype> enumlist enumerator\n+%type <ttype> typename absdcl absdcl1 type_quals\n+%type <ttype> xexpr parms parm identifiers\n+\n+%type <ttype> parmlist parmlist_1 parmlist_2\n+%type <ttype> parmlist_or_identifiers parmlist_or_identifiers_1\n+%type <ttype> identifiers_or_typenames\n+\n+%type <itype> setspecs\n+\n+%type <ends_in_label> lineno_stmt_or_label lineno_stmt_or_labels stmt_or_label\n+\n+%type <filename> save_filename\n+%type <lineno> save_lineno\n+\f\n+/* the Objective-C nonterminals */\n+\n+%type <ttype> ivar_decl_list ivar_decls ivar_decl ivars ivar_declarator\n+%type <ttype> methoddecl unaryselector keywordselector selector\n+%type <ttype> keyworddecl receiver objcmessageexpr messageargs\n+%type <ttype> keywordexpr keywordarglist keywordarg\n+%type <ttype> myparms myparm optparmlist reservedwords objcselectorexpr\n+%type <ttype> selectorarg keywordnamelist keywordname objcencodeexpr\n+%type <ttype> objc_string non_empty_protocolrefs protocolrefs identifier_list objcprotocolexpr\n+\n+%type <ttype> CLASSNAME OBJC_STRING OBJECTNAME\n+\f\n+%{\n+/* Number of statements (loosely speaking) seen so far.  */\n+static int stmt_count;\n+\n+/* Input file and line number of the end of the body of last simple_if;\n+   used by the stmt-rule immediately after simple_if returns.  */\n+static char *if_stmt_file;\n+static int if_stmt_line;\n+\n+/* List of types and structure classes of the current declaration.  */\n+static tree current_declspecs = NULL_TREE;\n+static tree prefix_attributes = NULL_TREE;\n+\n+/* Stack of saved values of current_declspecs and prefix_attributes.  */\n+static tree declspec_stack;\n+\n+/* 1 if we explained undeclared var errors.  */\n+static int undeclared_variable_notice;\n+\n+/* Objective-C specific information */\n+\n+tree objc_interface_context;\n+tree objc_implementation_context;\n+tree objc_method_context;\n+tree objc_ivar_chain;\n+tree objc_ivar_context;\n+enum tree_code objc_inherit_code;\n+int objc_receiver_context;\n+int objc_public_flag;\n+\n+\n+/* Tell yyparse how to print a token's value, if yydebug is set.  */\n+\n+#define YYPRINT(FILE,YYCHAR,YYLVAL) yyprint(FILE,YYCHAR,YYLVAL)\n+extern void yyprint ();\n+%}\n+\f\n+%%\n+program: /* empty */\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids an empty source file\");\n+\t\t  finish_file ();\n+\t\t}\n+\t| extdefs\n+\t\t{\n+\t\t  /* In case there were missing closebraces,\n+\t\t     get us back to the global binding level.  */\n+\t\t  while (! global_bindings_p ())\n+\t\t    poplevel (0, 0, 0);\n+\t\t  finish_file ();\n+\t\t}\n+\t;\n+\n+/* the reason for the strange actions in this rule\n+ is so that notype_initdecls when reached via datadef\n+ can find a valid list of type and sc specs in $0. */\n+\n+extdefs:\n+\t{$<ttype>$ = NULL_TREE; } extdef\n+\t| extdefs {$<ttype>$ = NULL_TREE; } extdef\n+\t;\n+\n+extdef:\n+\tfndef\n+\t| datadef\n+\t| objcdef\n+\t| ASM_KEYWORD '(' expr ')' ';'\n+\t\t{ STRIP_NOPS ($3);\n+\t\t  if ((TREE_CODE ($3) == ADDR_EXPR\n+\t\t       && TREE_CODE (TREE_OPERAND ($3, 0)) == STRING_CST)\n+\t\t      || TREE_CODE ($3) == STRING_CST)\n+\t\t    assemble_asm ($3);\n+\t\t  else\n+\t\t    error (\"argument of `asm' is not a constant string\"); }\n+\t| extension extdef\n+\t\t{ pedantic = $<itype>1; }\n+\t;\n+\n+datadef:\n+\t  setspecs notype_initdecls ';'\n+\t\t{ if (pedantic)\n+\t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n+\t\t  else if (!flag_traditional)\n+\t\t    warning (\"data definition has no type or storage class\"); \n+\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($1); }\n+        | declmods setspecs notype_initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2);  }\n+        | declmods ';'\n+\t  { pedwarn (\"empty declaration\"); }\n+\t| typed_declspecs ';'\n+\t  { shadow_tag ($1); }\n+\t| error ';'\n+\t| error '}'\n+\t| ';'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); }\n+\t;\n+\f\n+fndef:\n+\t  typed_declspecs setspecs declarator\n+\t\t{ if (! start_function (current_declspecs, $3,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n+\t\t    YYERROR1;\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+\t  compstmt_or_error\n+\t\t{ finish_function (0); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs declarator error\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_declarator\n+\t\t{ if (! start_function (current_declspecs, $3,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n+\t\t    YYERROR1;\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+\t  compstmt_or_error\n+\t\t{ finish_function (0); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_declarator error\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| setspecs notype_declarator\n+\t\t{ if (! start_function (NULL_TREE, $2,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n+\t\t    YYERROR1;\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+\t  compstmt_or_error\n+\t\t{ finish_function (0); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($1); }\n+\t| setspecs notype_declarator error\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($1); }\n+\t;\n+\n+identifier:\n+\tIDENTIFIER\n+\t| TYPENAME\n+\t| OBJECTNAME\n+        | CLASSNAME\n+\t;\n+\n+unop:     '&'\n+\t\t{ $$ = ADDR_EXPR; }\n+\t| '-'\n+\t\t{ $$ = NEGATE_EXPR; }\n+\t| '+'\n+\t\t{ $$ = CONVERT_EXPR; }\n+\t| PLUSPLUS\n+\t\t{ $$ = PREINCREMENT_EXPR; }\n+\t| MINUSMINUS\n+\t\t{ $$ = PREDECREMENT_EXPR; }\n+\t| '~'\n+\t\t{ $$ = BIT_NOT_EXPR; }\n+\t| '!'\n+\t\t{ $$ = TRUTH_NOT_EXPR; }\n+\t;\n+\n+expr:\tnonnull_exprlist\n+\t\t{ $$ = build_compound_expr ($1); }\n+\t;\n+\n+exprlist:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| nonnull_exprlist\n+\t;\n+\n+nonnull_exprlist:\n+\texpr_no_commas\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| nonnull_exprlist ',' expr_no_commas\n+\t\t{ chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+unary_expr:\n+\tprimary\n+\t| '*' cast_expr   %prec UNARY\n+\t\t{ $$ = build_indirect_ref ($2, \"unary *\"); }\n+\t/* __extension__ turns off -pedantic for following primary.  */\n+\t| extension cast_expr\t  %prec UNARY\n+\t\t{ $$ = $2;\n+\t\t  pedantic = $<itype>1; }\n+\t| unop cast_expr  %prec UNARY\n+\t\t{ $$ = build_unary_op ($1, $2, 0);\n+\t\t  overflow_warning ($$); }\n+\t/* Refer to the address of a label as a pointer.  */\n+\t| ANDAND identifier\n+\t\t{ tree label = lookup_label ($2);\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids `&&'\");\n+\t\t  if (label == 0)\n+\t\t    $$ = null_pointer_node;\n+\t\t  else\n+\t\t    {\n+\t\t      TREE_USED (label) = 1;\n+\t\t      $$ = build1 (ADDR_EXPR, ptr_type_node, label);\n+\t\t      TREE_CONSTANT ($$) = 1;\n+\t\t    }\n+\t\t}\n+/* This seems to be impossible on some machines, so let's turn it off.\n+   You can use __builtin_next_arg to find the anonymous stack args.\n+\t| '&' ELLIPSIS\n+\t\t{ tree types = TYPE_ARG_TYPES (TREE_TYPE (current_function_decl));\n+\t\t  $$ = error_mark_node;\n+\t\t  if (TREE_VALUE (tree_last (types)) == void_type_node)\n+\t\t    error (\"`&...' used in function with fixed number of arguments\");\n+\t\t  else\n+\t\t    {\n+\t\t      if (pedantic)\n+\t\t\tpedwarn (\"ANSI C forbids `&...'\");\n+\t\t      $$ = tree_last (DECL_ARGUMENTS (current_function_decl));\n+\t\t      $$ = build_unary_op (ADDR_EXPR, $$, 0);\n+\t\t    } }\n+*/\n+\t| sizeof unary_expr  %prec UNARY\n+\t\t{ skip_evaluation--;\n+\t\t  if (TREE_CODE ($2) == COMPONENT_REF\n+\t\t      && DECL_BIT_FIELD (TREE_OPERAND ($2, 1)))\n+\t\t    error (\"`sizeof' applied to a bit-field\");\n+\t\t  $$ = c_sizeof (TREE_TYPE ($2)); }\n+\t| sizeof '(' typename ')'  %prec HYPERUNARY\n+\t\t{ skip_evaluation--;\n+\t\t  $$ = c_sizeof (groktypename ($3)); }\n+\t| alignof unary_expr  %prec UNARY\n+\t\t{ skip_evaluation--;\n+\t\t  $$ = c_alignof_expr ($2); }\n+\t| alignof '(' typename ')'  %prec HYPERUNARY\n+\t\t{ skip_evaluation--;\n+\t\t  $$ = c_alignof (groktypename ($3)); }\n+\t| REALPART cast_expr %prec UNARY\n+\t\t{ $$ = build_unary_op (REALPART_EXPR, $2, 0); }\n+\t| IMAGPART cast_expr %prec UNARY\n+\t\t{ $$ = build_unary_op (IMAGPART_EXPR, $2, 0); }\n+\t;\n+\n+sizeof:\n+\tSIZEOF { skip_evaluation++; }\n+\t;\n+\n+alignof:\n+\tALIGNOF { skip_evaluation++; }\n+\t;\n+\n+cast_expr:\n+\tunary_expr\n+\t| '(' typename ')' cast_expr  %prec UNARY\n+\t\t{ tree type = groktypename ($2);\n+\t\t  $$ = build_c_cast (type, $4); }\n+\t| '(' typename ')' '{' \n+\t\t{ start_init (NULL_TREE, NULL, 0);\n+\t\t  $2 = groktypename ($2);\n+\t\t  really_start_incremental_init ($2); }\n+\t  initlist_maybe_comma '}'  %prec UNARY\n+\t\t{ char *name;\n+\t\t  tree result = pop_init_level (0);\n+\t\t  tree type = $2;\n+\t\t  finish_init ();\n+\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids constructor expressions\");\n+\t\t  if (TYPE_NAME (type) != 0)\n+\t\t    {\n+\t\t      if (TREE_CODE (TYPE_NAME (type)) == IDENTIFIER_NODE)\n+\t\t\tname = IDENTIFIER_POINTER (TYPE_NAME (type));\n+\t\t      else\n+\t\t\tname = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type)));\n+\t\t    }\n+\t\t  else\n+\t\t    name = \"\";\n+\t\t  $$ = result;\n+\t\t  if (TREE_CODE (type) == ARRAY_TYPE && TYPE_SIZE (type) == 0)\n+\t\t    {\n+\t\t      int failure = complete_array_type (type, $$, 1);\n+\t\t      if (failure)\n+\t\t\tabort ();\n+\t\t    }\n+\t\t}\n+\t;\n+\n+expr_no_commas:\n+\t  cast_expr\n+\t| expr_no_commas '+' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '-' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '*' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '/' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '%' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas LSHIFT expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas RSHIFT expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas ARITHCOMPARE expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas EQCOMPARE expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '&' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '|' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas '^' expr_no_commas\n+\t\t{ $$ = parser_build_binary_op ($2, $1, $3); }\n+\t| expr_no_commas ANDAND\n+\t\t{ $1 = truthvalue_conversion (default_conversion ($1));\n+\t\t  skip_evaluation += $1 == boolean_false_node; }\n+\t  expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_false_node;\n+\t\t  $$ = parser_build_binary_op (TRUTH_ANDIF_EXPR, $1, $4); }\n+\t| expr_no_commas OROR\n+\t\t{ $1 = truthvalue_conversion (default_conversion ($1));\n+\t\t  skip_evaluation += $1 == boolean_true_node; }\n+\t  expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_true_node;\n+\t\t  $$ = parser_build_binary_op (TRUTH_ORIF_EXPR, $1, $4); }\n+\t| expr_no_commas '?'\n+\t\t{ $1 = truthvalue_conversion (default_conversion ($1));\n+\t\t  skip_evaluation += $1 == boolean_false_node; }\n+          expr ':'\n+\t\t{ skip_evaluation += (($1 == boolean_true_node)\n+\t\t\t\t      - ($1 == boolean_false_node)); }\n+\t  expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_true_node;\n+\t\t  $$ = build_conditional_expr ($1, $4, $7); }\n+\t| expr_no_commas '?'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n+\t\t  /* Make sure first operand is calculated only once.  */\n+\t\t  $<ttype>2 = save_expr ($1);\n+\t\t  $1 = truthvalue_conversion (default_conversion ($<ttype>2));\n+\t\t  skip_evaluation += $1 == boolean_true_node; }\n+\t  ':' expr_no_commas\n+\t\t{ skip_evaluation -= $1 == boolean_true_node;\n+\t\t  $$ = build_conditional_expr ($1, $<ttype>2, $5); }\n+\t| expr_no_commas '=' expr_no_commas\n+\t\t{ $$ = build_modify_expr ($1, NOP_EXPR, $3);\n+\t\t  C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR); }\n+\t| expr_no_commas ASSIGN expr_no_commas\n+\t\t{ $$ = build_modify_expr ($1, $2, $3);\n+\t\t  /* This inhibits warnings in truthvalue_conversion.  */\n+\t\t  C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK); }\n+\t;\n+\n+primary:\n+\tIDENTIFIER\n+\t\t{\n+\t\t  $$ = lastiddecl;\n+\t\t  if (!$$ || $$ == error_mark_node)\n+\t\t    {\n+\t\t      if (yychar == YYEMPTY)\n+\t\t\tyychar = YYLEX;\n+\t\t      if (yychar == '(')\n+\t\t\t{\n+\t\t\t  tree decl;\n+\n+\t\t\t  if (objc_receiver_context\n+\t\t\t      && ! (objc_receiver_context\n+\t\t\t\t    && strcmp (IDENTIFIER_POINTER ($1), \"super\")))\n+\t\t\t    /* we have a message to super */\n+\t\t\t    $$ = get_super_receiver ();\n+\t\t\t  else if (objc_method_context\n+\t\t\t\t   && (decl = is_ivar (objc_ivar_chain, $1)))\n+\t\t\t    {\n+\t\t\t      if (is_private (decl))\n+\t\t\t\t$$ = error_mark_node;\n+\t\t\t      else\n+\t\t\t\t$$ = build_ivar_reference ($1);\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    {\n+\t\t\t      /* Ordinary implicit function declaration.  */\n+\t\t\t      $$ = implicitly_declare ($1);\n+\t\t\t      assemble_external ($$);\n+\t\t\t      TREE_USED ($$) = 1;\n+\t\t\t    }\n+\t\t\t}\n+\t\t      else if (current_function_decl == 0)\n+\t\t\t{\n+\t\t\t  error (\"`%s' undeclared here (not in a function)\",\n+\t\t\t\t IDENTIFIER_POINTER ($1));\n+\t\t\t  $$ = error_mark_node;\n+\t\t\t}\n+\t\t      else\n+\t\t\t{\n+\t\t\t  tree decl;\n+\n+\t\t          if (objc_receiver_context\n+\t\t\t      && ! strcmp (IDENTIFIER_POINTER ($1), \"super\"))\n+\t\t\t    /* we have a message to super */\n+\t\t\t    $$ = get_super_receiver ();\n+\t\t\t  else if (objc_method_context\n+\t\t\t\t   && (decl = is_ivar (objc_ivar_chain, $1)))\n+\t\t\t    {\n+\t\t\t      if (is_private (decl))\n+\t\t\t\t$$ = error_mark_node;\n+\t\t\t      else\n+\t\t\t\t$$ = build_ivar_reference ($1);\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    {\n+\t\t\t      if (IDENTIFIER_GLOBAL_VALUE ($1) != error_mark_node\n+\t\t\t\t  || IDENTIFIER_ERROR_LOCUS ($1) != current_function_decl)\n+\t\t\t\t{\n+\t\t\t\t  error (\"`%s' undeclared (first use this function)\",\n+\t\t\t\t\t IDENTIFIER_POINTER ($1));\n+\n+\t\t\t\t  if (! undeclared_variable_notice)\n+\t\t\t\t    {\n+\t\t\t\t      error (\"(Each undeclared identifier is reported only once\");\n+\t\t\t\t      error (\"for each function it appears in.)\");\n+\t\t\t\t      undeclared_variable_notice = 1;\n+\t\t\t\t    }\n+\t\t\t\t}\n+\t\t\t      $$ = error_mark_node;\n+\t\t\t      /* Prevent repeated error messages.  */\n+\t\t\t      IDENTIFIER_GLOBAL_VALUE ($1) = error_mark_node;\n+\t\t\t      IDENTIFIER_ERROR_LOCUS ($1) = current_function_decl;\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n+\t\t  else if (TREE_TYPE ($$) == error_mark_node)\n+\t\t    $$ = error_mark_node;\n+\t\t  else if (C_DECL_ANTICIPATED ($$))\n+\t\t    {\n+\t\t      /* The first time we see a build-in function used,\n+\t\t\t if it has not been declared.  */\n+\t\t      C_DECL_ANTICIPATED ($$) = 0;\n+\t\t      if (yychar == YYEMPTY)\n+\t\t\tyychar = YYLEX;\n+\t\t      if (yychar == '(')\n+\t\t\t{\n+\t\t\t  /* Omit the implicit declaration we\n+\t\t\t     would ordinarily do, so we don't lose\n+\t\t\t     the actual built in type.\n+\t\t\t     But print a diagnostic for the mismatch.  */\n+\t\t\t  if (objc_method_context\n+\t\t\t      && is_ivar (objc_ivar_chain, $1))\n+\t\t\t    error (\"Instance variable `%s' implicitly declared as function\",\n+\t\t\t\t   IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\t\t\t  else\n+\t\t\t    if (TREE_CODE ($$) != FUNCTION_DECL)\n+\t\t\t      error (\"`%s' implicitly declared as function\",\n+\t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\t\t\t  else if ((TYPE_MODE (TREE_TYPE (TREE_TYPE ($$)))\n+\t\t\t\t    != TYPE_MODE (integer_type_node))\n+\t\t\t\t   && (TREE_TYPE (TREE_TYPE ($$))\n+\t\t\t\t       != void_type_node))\n+\t\t\t    pedwarn (\"type mismatch in implicit declaration for built-in function `%s'\",\n+\t\t\t\t     IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\t\t\t  /* If it really returns void, change that to int.  */\n+\t\t\t  if (TREE_TYPE (TREE_TYPE ($$)) == void_type_node)\n+\t\t\t    TREE_TYPE ($$)\n+\t\t\t      = build_function_type (integer_type_node,\n+\t\t\t\t\t\t     TYPE_ARG_TYPES (TREE_TYPE ($$)));\n+\t\t\t}\n+\t\t      else\n+\t\t\tpedwarn (\"built-in function `%s' used without declaration\",\n+\t\t\t\t IDENTIFIER_POINTER (DECL_NAME ($$)));\n+\n+\t\t      /* Do what we would ordinarily do when a fn is used.  */\n+\t\t      assemble_external ($$);\n+\t\t      TREE_USED ($$) = 1;\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      assemble_external ($$);\n+\t\t      TREE_USED ($$) = 1;\n+\t\t      /* we have a definition - still check if iVariable */\n+\n+\t\t      if (!objc_receiver_context\n+\t\t\t  || (objc_receiver_context\n+\t\t\t      && strcmp (IDENTIFIER_POINTER ($1), \"super\")))\n+                        {\n+\t\t\t  tree decl;\n+\n+\t\t\t  if (objc_method_context\n+\t\t\t      && (decl = is_ivar (objc_ivar_chain, $1)))\n+                            {\n+                              if (IDENTIFIER_LOCAL_VALUE ($1))\n+                                warning (\"local declaration of `%s' hides instance variable\",\n+\t                                 IDENTIFIER_POINTER ($1));\n+                              else\n+ \t\t\t\t{\n+ \t\t\t\t  if (is_private (decl))\n+ \t\t\t\t    $$ = error_mark_node;\n+ \t\t\t\t  else\n+ \t\t\t\t    $$ = build_ivar_reference ($1);\n+ \t\t\t\t}\n+                            }\n+\t\t\t}\n+                      else /* we have a message to super */\n+\t\t        $$ = get_super_receiver ();\n+\t\t    }\n+\n+\t\t  if (TREE_CODE ($$) == CONST_DECL)\n+\t\t    {\n+\t\t      $$ = DECL_INITIAL ($$);\n+\t\t      /* This is to prevent an enum whose value is 0\n+\t\t\t from being considered a null pointer constant.  */\n+\t\t      $$ = build1 (NOP_EXPR, TREE_TYPE ($$), $$);\n+\t\t      TREE_CONSTANT ($$) = 1;\n+\t\t    }\n+\t\t}\n+\t| CONSTANT\n+\t| string\n+\t\t{ $$ = combine_strings ($1); }\n+\t| '(' expr ')'\n+\t\t{ char class = TREE_CODE_CLASS (TREE_CODE ($2));\n+\t\t  if (class == 'e' || class == '1'\n+\t\t      || class == '2' || class == '<')\n+\t\t    C_SET_EXP_ORIGINAL_CODE ($2, ERROR_MARK);\n+\t\t  $$ = $2; }\n+\t| '(' error ')'\n+\t\t{ $$ = error_mark_node; }\n+\t| '('\n+\t\t{ if (current_function_decl == 0)\n+\t\t    {\n+\t\t      error (\"braced-group within expression allowed only inside a function\");\n+\t\t      YYERROR;\n+\t\t    }\n+\t\t  /* We must force a BLOCK for this level\n+\t\t     so that, if it is not expanded later,\n+\t\t     there is a way to turn off the entire subtree of blocks\n+\t\t     that are contained in it.  */\n+\t\t  keep_next_level ();\n+\t\t  push_iterator_stack ();\n+\t\t  push_label_level ();\n+\t\t  $<ttype>$ = expand_start_stmt_expr (); }\n+\t  compstmt ')'\n+\t\t{ tree rtl_exp;\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n+\t\t  pop_iterator_stack ();\n+\t\t  pop_label_level ();\n+\t\t  rtl_exp = expand_end_stmt_expr ($<ttype>2);\n+\t\t  /* The statements have side effects, so the group does.  */\n+\t\t  TREE_SIDE_EFFECTS (rtl_exp) = 1;\n+\n+\t\t  if (TREE_CODE ($3) == BLOCK)\n+\t\t    {\n+\t\t      /* Make a BIND_EXPR for the BLOCK already made.  */\n+\t\t      $$ = build (BIND_EXPR, TREE_TYPE (rtl_exp),\n+\t\t\t\t  NULL_TREE, rtl_exp, $3);\n+\t\t      /* Remove the block from the tree at this point.\n+\t\t\t It gets put back at the proper place\n+\t\t\t when the BIND_EXPR is expanded.  */\n+\t\t      delete_block ($3);\n+\t\t    }\n+\t\t  else\n+\t\t    $$ = $3;\n+\t\t}\n+\t| primary '(' exprlist ')'   %prec '.'\n+\t\t{ $$ = build_function_call ($1, $3); }\n+\t| primary '[' expr ']'   %prec '.'\n+\t\t{ $$ = build_array_ref ($1, $3); }\n+\t| primary '.' identifier\n+\t\t{\n+                  if (doing_objc_thang)\n+                    {\n+\t\t      if (is_public ($1, $3))\n+\t\t\t$$ = build_component_ref ($1, $3);\n+\t\t      else\n+\t\t\t$$ = error_mark_node;\n+\t\t    }\n+                  else\n+\t\t    $$ = build_component_ref ($1, $3);\n+\t\t}\n+\t| primary POINTSAT identifier\n+\t\t{\n+                  tree expr = build_indirect_ref ($1, \"->\");\n+\n+                  if (doing_objc_thang)\n+                    {\n+\t\t      if (is_public (expr, $3))\n+\t\t\t$$ = build_component_ref (expr, $3);\n+\t\t      else\n+\t\t\t$$ = error_mark_node;\n+\t\t    }\n+                  else\n+                    $$ = build_component_ref (expr, $3);\n+\t\t}\n+\t| primary PLUSPLUS\n+\t\t{ $$ = build_unary_op (POSTINCREMENT_EXPR, $1, 0); }\n+\t| primary MINUSMINUS\n+\t\t{ $$ = build_unary_op (POSTDECREMENT_EXPR, $1, 0); }\n+\t| objcmessageexpr\n+\t\t{ $$ = build_message_expr ($1); }\n+\t| objcselectorexpr\n+\t\t{ $$ = build_selector_expr ($1); }\n+\t| objcprotocolexpr\n+\t\t{ $$ = build_protocol_expr ($1); }\n+\t| objcencodeexpr\n+\t\t{ $$ = build_encode_expr ($1); }\n+\t| objc_string\n+\t\t{ $$ = build_objc_string_object ($1); }\n+\t;\n+\n+/* Produces a STRING_CST with perhaps more STRING_CSTs chained onto it.  */\n+string:\n+\t  STRING\n+\t| string STRING\n+\t\t{ $$ = chainon ($1, $2); }\n+\t;\n+\n+/* Produces an OBJC_STRING_CST with perhaps more OBJC_STRING_CSTs chained\n+   onto it.  */\n+objc_string:\n+\t  OBJC_STRING\n+\t| objc_string OBJC_STRING\n+\t\t{ $$ = chainon ($1, $2); }\n+\t;\n+\n+old_style_parm_decls:\n+\t/* empty */\n+\t| datadecls\n+\t| datadecls ELLIPSIS\n+\t\t/* ... is used here to indicate a varargs function.  */\n+\t\t{ c_mark_varargs ();\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); }\n+\t;\n+\n+/* The following are analogous to lineno_decl, decls and decl\n+   except that they do not allow nested functions.\n+   They are used for old-style parm decls.  */\n+lineno_datadecl:\n+\t  save_filename save_lineno datadecl\n+\t\t{ }\n+\t;\n+\n+datadecls:\n+\tlineno_datadecl\n+\t| errstmt\n+\t| datadecls lineno_datadecl\n+\t| lineno_datadecl errstmt\n+\t;\n+\n+/* We don't allow prefix attributes here because they cause reduce/reduce\n+   conflicts: we can't know whether we're parsing a function decl with\n+   attribute suffix, or function defn with attribute prefix on first old\n+   style parm.  */\n+datadecl:\n+\ttyped_declspecs_no_prefix_attr setspecs initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods_no_prefix_attr setspecs notype_initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\t\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs_no_prefix_attr ';'\n+\t\t{ shadow_tag_warned ($1, 1);\n+\t\t  pedwarn (\"empty declaration\"); }\n+\t| declmods_no_prefix_attr ';'\n+\t\t{ pedwarn (\"empty declaration\"); }\n+\t;\n+\n+/* This combination which saves a lineno before a decl\n+   is the normal thing to use, rather than decl itself.\n+   This is to avoid shift/reduce conflicts in contexts\n+   where statement labels are allowed.  */\n+lineno_decl:\n+\t  save_filename save_lineno decl\n+\t\t{ }\n+\t;\n+\n+decls:\n+\tlineno_decl\n+\t| errstmt\n+\t| decls lineno_decl\n+\t| lineno_decl errstmt\n+\t;\n+\n+/* records the type and storage class specs to use for processing\n+   the declarators that follow.\n+   Maintains a stack of outer-level values of current_declspecs,\n+   for the sake of parm declarations nested in function declarators.  */\n+setspecs: /* empty */\n+\t\t{ $$ = suspend_momentary ();\n+\t\t  pending_xref_error ();\n+\t\t  declspec_stack = tree_cons (prefix_attributes,\n+\t\t\t\t\t      current_declspecs,\n+\t\t\t\t\t      declspec_stack);\n+\t\t  split_specs_attrs ($<ttype>0,\n+\t\t\t\t     &current_declspecs, &prefix_attributes); }\n+\t;\n+\n+/* ??? Yuck.  See after_type_declarator.  */\n+setattrs: /* empty */\n+\t\t{ prefix_attributes = chainon (prefix_attributes, $<ttype>0); }\n+\t;\n+\n+decl:\n+\ttyped_declspecs setspecs initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_initdecls ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs nested_function\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_nested_function\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs ';'\n+\t\t{ shadow_tag ($1); }\n+\t| declmods ';'\n+\t\t{ pedwarn (\"empty declaration\"); }\n+\t| extension decl\n+\t\t{ pedantic = $<itype>1; }\n+\t;\n+\n+/* Declspecs which contain at least one type specifier or typedef name.\n+   (Just `const' or `volatile' is not enough.)\n+   A typedef'd name following these is taken as a name to be declared.\n+   Declspecs have a non-NULL TREE_VALUE, attributes do not.  */\n+\n+typed_declspecs:\n+\t  typespec reserved_declspecs\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, $2); }\n+\t| declmods typespec reserved_declspecs\n+\t\t{ $$ = chainon ($3, tree_cons (NULL_TREE, $2, $1)); }\n+\t;\n+\n+reserved_declspecs:  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| reserved_declspecs typespecqual_reserved\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t| reserved_declspecs SCSPEC\n+\t\t{ if (extra_warnings)\n+\t\t    warning (\"`%s' is not at beginning of declaration\",\n+\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t| reserved_declspecs attributes\n+\t\t{ $$ = tree_cons ($2, NULL_TREE, $1); }\n+\t;\n+\n+typed_declspecs_no_prefix_attr:\n+\t  typespec reserved_declspecs_no_prefix_attr\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, $2); }\n+\t| declmods_no_prefix_attr typespec reserved_declspecs_no_prefix_attr\n+\t\t{ $$ = chainon ($3, tree_cons (NULL_TREE, $2, $1)); }\n+\t;\n+\n+reserved_declspecs_no_prefix_attr:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| reserved_declspecs_no_prefix_attr typespecqual_reserved\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t| reserved_declspecs_no_prefix_attr SCSPEC\n+\t\t{ if (extra_warnings)\n+\t\t    warning (\"`%s' is not at beginning of declaration\",\n+\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+/* List of just storage classes, type modifiers, and prefix attributes.\n+   A declaration can start with just this, but then it cannot be used\n+   to redeclare a typedef-name.\n+   Declspecs have a non-NULL TREE_VALUE, attributes do not.  */\n+\n+declmods:\n+\t  declmods_no_prefix_attr\n+\t\t{ $$ = $1; }\n+\t| attributes\n+\t\t{ $$ = tree_cons ($1, NULL_TREE, NULL_TREE); }\n+\t| declmods declmods_no_prefix_attr\n+\t\t{ $$ = chainon ($2, $1); }\n+\t| declmods attributes\n+\t\t{ $$ = tree_cons ($2, NULL_TREE, $1); }\n+\t;\n+\n+declmods_no_prefix_attr:\n+\t  TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE);\n+\t\t  TREE_STATIC ($$) = 1; }\n+\t| SCSPEC\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE); }\n+\t| declmods_no_prefix_attr TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1);\n+\t\t  TREE_STATIC ($$) = 1; }\n+\t| declmods_no_prefix_attr SCSPEC\n+\t\t{ if (extra_warnings && TREE_STATIC ($1))\n+\t\t    warning (\"`%s' is not at beginning of declaration\",\n+\t\t\t     IDENTIFIER_POINTER ($2));\n+\t\t  $$ = tree_cons (NULL_TREE, $2, $1);\n+\t\t  TREE_STATIC ($$) = TREE_STATIC ($1); }\n+\t;\n+\n+\n+/* Used instead of declspecs where storage classes are not allowed\n+   (that is, for typenames and structure components).\n+   Don't accept a typedef-name if anything but a modifier precedes it.  */\n+\n+typed_typespecs:\n+\t  typespec reserved_typespecquals\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, $2); }\n+\t| nonempty_type_quals typespec reserved_typespecquals\n+\t\t{ $$ = chainon ($3, tree_cons (NULL_TREE, $2, $1)); }\n+\t;\n+\n+reserved_typespecquals:  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| reserved_typespecquals typespecqual_reserved\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+/* A typespec (but not a type qualifier).\n+   Once we have seen one of these in a declaration,\n+   if a typedef name appears then it is being redeclared.  */\n+\n+typespec: TYPESPEC\n+\t| structsp\n+\t| TYPENAME\n+\t\t{ /* For a typedef name, record the meaning, not the name.\n+\t\t     In case of `foo foo, bar;'.  */\n+\t\t  $$ = lookup_name ($1); }\n+\t| CLASSNAME protocolrefs\n+\t\t{ $$ = get_static_reference ($1, $2); }\n+\t| OBJECTNAME protocolrefs\n+\t\t{ $$ = get_object_reference ($2); }\n+\n+/* Make \"<SomeProtocol>\" equivalent to \"id <SomeProtocol>\"\n+   - nisse@lysator.liu.se */\n+        | non_empty_protocolrefs\n+                { $$ = get_object_reference ($1); }\n+\t| TYPEOF '(' expr ')'\n+\t\t{ $$ = TREE_TYPE ($3); }\n+\t| TYPEOF '(' typename ')'\n+\t\t{ $$ = groktypename ($3); }\n+\t;\n+\n+/* A typespec that is a reserved word, or a type qualifier.  */\n+\n+typespecqual_reserved: TYPESPEC\n+\t| TYPE_QUAL\n+\t| structsp\n+\t;\n+\n+initdecls:\n+\tinitdcl\n+\t| initdecls ',' initdcl\n+\t;\n+\n+notype_initdecls:\n+\tnotype_initdcl\n+\t| notype_initdecls ',' initdcl\n+\t;\n+\n+maybeasm:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| ASM_KEYWORD '(' string ')'\n+\t\t{ if (TREE_CHAIN ($3)) $3 = combine_strings ($3);\n+\t\t  $$ = $3;\n+\t\t}\n+\t;\n+\n+initdcl:\n+\t  declarator maybeasm maybe_attribute '='\n+\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1,\n+\t\t\t\t\t  $3, prefix_attributes);\n+\t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n+\t  init\n+/* Note how the declaration of the variable is in effect while its init is parsed! */\n+\t\t{ finish_init ();\n+\t\t  finish_decl ($<ttype>5, $6, $2); }\n+\t| declarator maybeasm maybe_attribute\n+\t\t{ tree d = start_decl ($1, current_declspecs, 0,\n+\t\t\t\t       $3, prefix_attributes);\n+\t\t  finish_decl (d, NULL_TREE, $2); \n+                }\n+\t;\n+\n+notype_initdcl:\n+\t  notype_declarator maybeasm maybe_attribute '='\n+\t\t{ $<ttype>$ = start_decl ($1, current_declspecs, 1,\n+\t\t\t\t\t  $3, prefix_attributes);\n+\t\t  start_init ($<ttype>$, $2, global_bindings_p ()); }\n+\t  init\n+/* Note how the declaration of the variable is in effect while its init is parsed! */\n+\t\t{ finish_init ();\n+\t\t  decl_attributes ($<ttype>5, $3, prefix_attributes);\n+\t\t  finish_decl ($<ttype>5, $6, $2); }\n+\t| notype_declarator maybeasm maybe_attribute\n+\t\t{ tree d = start_decl ($1, current_declspecs, 0,\n+\t\t\t\t       $3, prefix_attributes);\n+\t\t  finish_decl (d, NULL_TREE, $2); }\n+\t;\n+/* the * rules are dummies to accept the Apollo extended syntax\n+   so that the header files compile. */\n+maybe_attribute:\n+      /* empty */\n+  \t\t{ $$ = NULL_TREE; }\n+\t| attributes\n+\t\t{ $$ = $1; }\n+\t;\n+ \n+attributes:\n+      attribute\n+\t\t{ $$ = $1; }\n+\t| attributes attribute\n+\t\t{ $$ = chainon ($1, $2); }\n+\t;\n+\n+attribute:\n+      ATTRIBUTE '(' '(' attribute_list ')' ')'\n+\t\t{ $$ = $4; }\n+\t;\n+\n+attribute_list:\n+      attrib\n+\t\t{ $$ = $1; }\n+\t| attribute_list ',' attrib\n+\t\t{ $$ = chainon ($1, $3); }\n+\t;\n+ \n+attrib:\n+    /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| any_word\n+\t\t{ $$ = build_tree_list ($1, NULL_TREE); }\n+\t| any_word '(' IDENTIFIER ')'\n+\t\t{ $$ = build_tree_list ($1, build_tree_list (NULL_TREE, $3)); }\n+\t| any_word '(' IDENTIFIER ',' nonnull_exprlist ')'\n+\t\t{ $$ = build_tree_list ($1, tree_cons (NULL_TREE, $3, $5)); }\n+\t| any_word '(' exprlist ')'\n+\t\t{ $$ = build_tree_list ($1, $3); }\n+\t;\n+\n+/* This still leaves out most reserved keywords,\n+   shouldn't we include them?  */\n+\n+any_word:\n+\t  identifier\n+\t| SCSPEC\n+\t| TYPESPEC\n+\t| TYPE_QUAL\n+\t;\n+\f\n+/* Initializers.  `init' is the entry point.  */\n+\n+init:\n+\texpr_no_commas\n+\t| '{'\n+\t\t{ really_start_incremental_init (NULL_TREE);\n+\t\t  /* Note that the call to clear_momentary\n+\t\t     is in process_init_element.  */\n+\t\t  push_momentary (); }\n+\t  initlist_maybe_comma '}'\n+\t\t{ $$ = pop_init_level (0);\n+\t\t  if ($$ == error_mark_node\n+\t\t      && ! (yychar == STRING || yychar == CONSTANT))\n+\t\t    pop_momentary ();\n+\t\t  else\n+\t\t    pop_momentary_nofree (); }\n+\n+\t| error\n+\t\t{ $$ = error_mark_node; }\n+\t;\n+\n+/* `initlist_maybe_comma' is the guts of an initializer in braces.  */\n+initlist_maybe_comma:\n+\t  /* empty */\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); }\n+\t| initlist1 maybecomma\n+\t;\n+\n+initlist1:\n+\t  initelt\n+\t| initlist1 ',' initelt\n+\t;\n+\n+/* `initelt' is a single element of an initializer.\n+   It may use braces.  */\n+initelt:\n+\texpr_no_commas\n+\t\t{ process_init_element ($1); }\n+\t| '{' \n+\t\t{ push_init_level (0); }\n+\t  initlist_maybe_comma '}'\n+\t\t{ process_init_element (pop_init_level (0)); }\n+\t| error\n+\t/* These are for labeled elements.  The syntax for an array element\n+\t   initializer conflicts with the syntax for an Objective-C message,\n+\t   so don't include these productions in the Objective-C grammar.  */\n+\t| identifier ':'\n+\t\t{ set_init_label ($1); }\n+\t  initelt\n+\t| '.' identifier '='\n+\t\t{ set_init_label ($2); }\n+\t  initelt\n+\t;\n+\f\n+nested_function:\n+\t  declarator\n+\t\t{ push_c_function_context ();\n+\t\t  if (! start_function (current_declspecs, $1,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n+\t\t    {\n+\t\t      pop_c_function_context ();\n+\t\t      YYERROR1;\n+\t\t    }\n+\t\t  reinit_parse_for_function (); }\n+\t   old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+/* This used to use compstmt_or_error.\n+   That caused a bug with input `f(g) int g {}',\n+   where the use of YYERROR1 above caused an error\n+   which then was handled by compstmt_or_error.\n+   There followed a repeated execution of that same rule,\n+   which called YYERROR1 again, and so on.  */\n+\t  compstmt\n+\t\t{ finish_function (1);\n+\t\t  pop_c_function_context (); }\n+\t;\n+\n+notype_nested_function:\n+\t  notype_declarator\n+\t\t{ push_c_function_context ();\n+\t\t  if (! start_function (current_declspecs, $1,\n+\t\t\t\t\tprefix_attributes, NULL_TREE, 1))\n+\t\t    {\n+\t\t      pop_c_function_context ();\n+\t\t      YYERROR1;\n+\t\t    }\n+\t\t  reinit_parse_for_function (); }\n+\t  old_style_parm_decls\n+\t\t{ store_parm_decls (); }\n+/* This used to use compstmt_or_error.\n+   That caused a bug with input `f(g) int g {}',\n+   where the use of YYERROR1 above caused an error\n+   which then was handled by compstmt_or_error.\n+   There followed a repeated execution of that same rule,\n+   which called YYERROR1 again, and so on.  */\n+\t  compstmt\n+\t\t{ finish_function (1);\n+\t\t  pop_c_function_context (); }\n+\t;\n+\n+/* Any kind of declarator (thus, all declarators allowed\n+   after an explicit typespec).  */\n+\n+declarator:\n+\t  after_type_declarator\n+\t| notype_declarator\n+\t;\n+\n+/* A declarator that is allowed only after an explicit typespec.  */\n+\n+after_type_declarator:\n+\t  '(' after_type_declarator ')'\n+\t\t{ $$ = $2; }\n+\t| after_type_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| after_type_declarator '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+\t| after_type_declarator '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| after_type_declarator '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '*' type_quals after_type_declarator  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t/* ??? Yuck.  setattrs is a quick hack.  We can't use\n+\t   prefix_attributes because $1 only applies to this\n+\t   declarator.  We assume setspecs has already been done.\n+\t   setattrs also avoids 5 reduce/reduce conflicts (otherwise multiple\n+\t   attributes could be recognized here or in `attributes').  */\n+\t| attributes setattrs after_type_declarator\n+\t\t{ $$ = $3; }\n+\t| TYPENAME\n+\t| OBJECTNAME\n+\t;\n+\n+/* Kinds of declarator that can appear in a parameter list\n+   in addition to notype_declarator.  This is like after_type_declarator\n+   but does not allow a typedef name in parentheses as an identifier\n+   (because it would conflict with a function with that typedef as arg).  */\n+\n+parm_declarator:\n+\t  parm_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| parm_declarator '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+\t| parm_declarator '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| parm_declarator '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '*' type_quals parm_declarator  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t/* ??? Yuck.  setattrs is a quick hack.  We can't use\n+\t   prefix_attributes because $1 only applies to this\n+\t   declarator.  We assume setspecs has already been done.\n+\t   setattrs also avoids 5 reduce/reduce conflicts (otherwise multiple\n+\t   attributes could be recognized here or in `attributes').  */\n+\t| attributes setattrs parm_declarator\n+\t\t{ $$ = $3; }\n+\t| TYPENAME\n+\t;\n+\n+/* A declarator allowed whether or not there has been\n+   an explicit typespec.  These cannot redeclare a typedef-name.  */\n+\n+notype_declarator:\n+\t  notype_declarator '(' parmlist_or_identifiers  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+/*\t| notype_declarator '(' error ')'  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, NULL_TREE, NULL_TREE);\n+\t\t  poplevel (0, 0, 0); }  */\n+\t| '(' notype_declarator ')'\n+\t\t{ $$ = $2; }\n+\t| '*' type_quals notype_declarator  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t| notype_declarator '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| notype_declarator '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t/* ??? Yuck.  setattrs is a quick hack.  We can't use\n+\t   prefix_attributes because $1 only applies to this\n+\t   declarator.  We assume setspecs has already been done.\n+\t   setattrs also avoids 5 reduce/reduce conflicts (otherwise multiple\n+\t   attributes could be recognized here or in `attributes').  */\n+\t| attributes setattrs notype_declarator\n+\t\t{ $$ = $3; }\n+\t| IDENTIFIER\n+\t;\n+\n+structsp:\n+\t  STRUCT identifier '{'\n+\t\t{ $$ = start_struct (RECORD_TYPE, $2);\n+\t\t  /* Start scope of tag before parsing components.  */\n+\t\t}\n+\t  component_decl_list '}' maybe_attribute \n+\t\t{ $$ = finish_struct ($<ttype>4, $5, $7); }\n+\t| STRUCT '{' component_decl_list '}' maybe_attribute\n+\t\t{ $$ = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n+\t\t\t\t      $3, $5);\n+\t\t}\n+\t| STRUCT identifier\n+\t\t{ $$ = xref_tag (RECORD_TYPE, $2); }\n+\t| UNION identifier '{'\n+\t\t{ $$ = start_struct (UNION_TYPE, $2); }\n+\t  component_decl_list '}' maybe_attribute\n+\t\t{ $$ = finish_struct ($<ttype>4, $5, $7); }\n+\t| UNION '{' component_decl_list '}' maybe_attribute\n+\t\t{ $$ = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n+\t\t\t\t      $3, $5);\n+\t\t}\n+\t| UNION identifier\n+\t\t{ $$ = xref_tag (UNION_TYPE, $2); }\n+\t| ENUM identifier '{'\n+\t\t{ $<itype>3 = suspend_momentary ();\n+\t\t  $$ = start_enum ($2); }\n+\t  enumlist maybecomma_warn '}' maybe_attribute\n+\t\t{ $$ = finish_enum ($<ttype>4, nreverse ($5), $8);\n+\t\t  resume_momentary ($<itype>3); }\n+\t| ENUM '{'\n+\t\t{ $<itype>2 = suspend_momentary ();\n+\t\t  $$ = start_enum (NULL_TREE); }\n+\t  enumlist maybecomma_warn '}' maybe_attribute\n+\t\t{ $$ = finish_enum ($<ttype>3, nreverse ($4), $7);\n+\t\t  resume_momentary ($<itype>2); }\n+\t| ENUM identifier\n+\t\t{ $$ = xref_tag (ENUMERAL_TYPE, $2); }\n+\t;\n+\n+maybecomma:\n+\t  /* empty */\n+\t| ','\n+\t;\n+\n+maybecomma_warn:\n+\t  /* empty */\n+\t| ','\n+\t\t{ if (pedantic) pedwarn (\"comma at end of enumerator list\"); }\n+\t;\n+\n+component_decl_list:\n+\t  component_decl_list2\n+\t\t{ $$ = $1; }\n+\t| component_decl_list2 component_decl\n+\t\t{ $$ = chainon ($1, $2);\n+\t\t  pedwarn (\"no semicolon at end of struct or union\"); }\n+\t;\n+\n+component_decl_list2:\t/* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| component_decl_list2 component_decl ';'\n+\t\t{ $$ = chainon ($1, $2); }\n+\t| component_decl_list2 ';'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"extra semicolon in struct or union specified\"); }\n+\t/* foo(sizeof(struct{ @defs(ClassName)})); */\n+\t| DEFS '(' CLASSNAME ')'\n+\t\t{\n+\t\t  tree interface = lookup_interface ($3);\n+\n+\t\t  if (interface)\n+\t\t    $$ = get_class_ivars (interface);\n+\t\t  else\n+\t\t    {\n+\t\t      error (\"Cannot find interface declaration for `%s'\",\n+\t\t\t     IDENTIFIER_POINTER ($3));\n+\t\t      $$ = NULL_TREE;\n+\t\t    }\n+\t\t}\n+\t;\n+\n+/* There is a shift-reduce conflict here, because `components' may\n+   start with a `typename'.  It happens that shifting (the default resolution)\n+   does the right thing, because it treats the `typename' as part of\n+   a `typed_typespecs'.\n+\n+   It is possible that this same technique would allow the distinction\n+   between `notype_initdecls' and `initdecls' to be eliminated.\n+   But I am being cautious and not trying it.  */\n+\n+component_decl:\n+\t  typed_typespecs setspecs components\n+\t\t{ $$ = $3;\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_typespecs\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n+\t\t  shadow_tag($1);\n+\t\t  $$ = NULL_TREE; }\n+\t| nonempty_type_quals setspecs components\n+\t\t{ $$ = $3;\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| nonempty_type_quals\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n+\t\t  shadow_tag($1);\n+\t\t  $$ = NULL_TREE; }\n+\t| error\n+\t\t{ $$ = NULL_TREE; }\n+\t| extension component_decl\n+\t\t{ $$ = $2;\n+\t\t  pedantic = $<itype>1; }\n+\t;\n+\n+components:\n+\t  component_declarator\n+\t| components ',' component_declarator\n+\t\t{ $$ = chainon ($1, $3); }\n+\t;\n+\n+component_declarator:\n+\t  save_filename save_lineno declarator maybe_attribute\n+\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, NULL_TREE);\n+\t\t  decl_attributes ($$, $4, prefix_attributes); }\n+\t| save_filename save_lineno\n+\t  declarator ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield ($1, $2, $3, current_declspecs, $5);\n+\t\t  decl_attributes ($$, $6, prefix_attributes); }\n+\t| save_filename save_lineno ':' expr_no_commas maybe_attribute\n+\t\t{ $$ = grokfield ($1, $2, NULL_TREE, current_declspecs, $4);\n+\t\t  decl_attributes ($$, $5, prefix_attributes); }\n+\t;\n+\n+/* We chain the enumerators in reverse order.\n+   They are put in forward order where enumlist is used.\n+   (The order used to be significant, but no longer is so.\n+   However, we still maintain the order, just to be clean.)  */\n+\n+enumlist:\n+\t  enumerator\n+\t| enumlist ',' enumerator\n+\t\t{ if ($1 == error_mark_node)\n+\t\t    $$ = $1;\n+\t\t  else\n+\t\t    $$ = chainon ($3, $1); }\n+\t| error\n+\t\t{ $$ = error_mark_node; }\n+\t;\n+\n+\n+enumerator:\n+\t  identifier\n+\t\t{ $$ = build_enumerator ($1, NULL_TREE); }\n+\t| identifier '=' expr_no_commas\n+\t\t{ $$ = build_enumerator ($1, $3); }\n+\t;\n+\n+typename:\n+\ttyped_typespecs absdcl\n+\t\t{ $$ = build_tree_list ($1, $2); }\n+\t| nonempty_type_quals absdcl\n+\t\t{ $$ = build_tree_list ($1, $2); }\n+\t;\n+\n+absdcl:   /* an absolute declarator */\n+\t/* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| absdcl1\n+\t;\n+\n+nonempty_type_quals:\n+\t  TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $1, NULL_TREE); }\n+\t| nonempty_type_quals TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+type_quals:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| type_quals TYPE_QUAL\n+\t\t{ $$ = tree_cons (NULL_TREE, $2, $1); }\n+\t;\n+\n+absdcl1:  /* a nonempty absolute declarator */\n+\t  '(' absdcl1 ')'\n+\t\t{ $$ = $2; }\n+\t  /* `(typedef)1' is `int'.  */\n+\t| '*' type_quals absdcl1  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, $3); }\n+\t| '*' type_quals  %prec UNARY\n+\t\t{ $$ = make_pointer_declarator ($2, NULL_TREE); }\n+\t| absdcl1 '(' parmlist  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, $1, $3, NULL_TREE); }\n+\t| absdcl1 '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, $3); }\n+\t| absdcl1 '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, $1, NULL_TREE); }\n+\t| '(' parmlist  %prec '.'\n+\t\t{ $$ = build_nt (CALL_EXPR, NULL_TREE, $2, NULL_TREE); }\n+\t| '[' expr ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, NULL_TREE, $2); }\n+\t| '[' ']'  %prec '.'\n+\t\t{ $$ = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); }\n+\t/* ??? It appears we have to support attributes here, however\n+\t   using prefix_attributes is wrong.  */\n+\t;\n+\n+/* at least one statement, the first of which parses without error.  */\n+/* stmts is used only after decls, so an invalid first statement\n+   is actually regarded as an invalid decl and part of the decls.  */\n+\n+stmts:\n+\tlineno_stmt_or_labels\n+\t\t{\n+\t\t  if (pedantic && $1)\n+\t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n+\t\t}\n+\t;\n+\n+lineno_stmt_or_labels:\n+\t  lineno_stmt_or_label\n+\t| lineno_stmt_or_labels lineno_stmt_or_label\n+\t\t{ $$ = $2; }\n+\t| lineno_stmt_or_labels errstmt\n+\t\t{ $$ = 0; }\n+\t;\n+\n+xstmts:\n+\t/* empty */\n+\t| stmts\n+\t;\n+\n+errstmt:  error ';'\n+\t;\n+\n+pushlevel:  /* empty */\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  pushlevel (0);\n+\t\t  clear_last_expr ();\n+\t\t  push_momentary ();\n+\t\t  expand_start_bindings (0);\n+\t\t  if (objc_method_context)\n+\t\t    add_objc_decls ();\n+\t\t}\n+\t;\n+\n+/* Read zero or more forward-declarations for labels\n+   that nested functions can jump to.  */\n+maybe_label_decls:\n+\t  /* empty */\n+\t| label_decls\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids label declarations\"); }\n+\t;\n+\n+label_decls:\n+\t  label_decl\n+\t| label_decls label_decl\n+\t;\n+\n+label_decl:\n+\t  LABEL identifiers_or_typenames ';'\n+\t\t{ tree link;\n+\t\t  for (link = $2; link; link = TREE_CHAIN (link))\n+\t\t    {\n+\t\t      tree label = shadow_label (TREE_VALUE (link));\n+\t\t      C_DECLARED_LABEL_FLAG (label) = 1;\n+\t\t      declare_nonlocal_label (label);\n+\t\t    }\n+\t\t}\n+\t;\n+\n+/* This is the body of a function definition.\n+   It causes syntax errors to ignore to the next openbrace.  */\n+compstmt_or_error:\n+\t  compstmt\n+\t\t{}\n+\t| error compstmt\n+\t;\n+\n+compstmt: '{' '}'\n+\t\t{ $$ = convert (void_type_node, integer_zero_node); }\n+\t| '{' pushlevel maybe_label_decls decls xstmts '}'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_end_bindings (getdecls (), 1, 0);\n+\t\t  $$ = poplevel (1, 1, 0);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t| '{' pushlevel maybe_label_decls error '}'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n+\t\t  $$ = poplevel (kept_level_p (), 0, 0);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t| '{' pushlevel maybe_label_decls stmts '}'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n+\t\t  $$ = poplevel (kept_level_p (), 0, 0);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t;\n+\n+/* Value is number of statements counted as of the closeparen.  */\n+simple_if:\n+\t  if_prefix lineno_labeled_stmt\n+/* Make sure expand_end_cond is run once\n+   for each call to expand_start_cond.\n+   Otherwise a crash is likely.  */\n+\t| if_prefix error\n+\t;\n+\n+if_prefix:\n+\t  IF '(' expr ')'\n+\t\t{ emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  expand_start_cond (truthvalue_conversion ($3), 0);\n+\t\t  $<itype>$ = stmt_count;\n+\t\t  if_stmt_file = $<filename>-1;\n+\t\t  if_stmt_line = $<lineno>0;\n+\t\t  position_after_white_space (); }\n+\t;\n+\n+/* This is a subroutine of stmt.\n+   It is used twice, once for valid DO statements\n+   and once for catching errors in parsing the end test.  */\n+do_stmt_start:\n+\t  DO\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* See comment in `while' alternative, above.  */\n+\t\t  emit_nop ();\n+\t\t  expand_start_loop_continue_elsewhere (1);\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt WHILE\n+\t\t{ expand_loop_continue_here (); }\n+\t;\n+\n+save_filename:\n+\t\t{ $$ = input_filename; }\n+\t;\n+\n+save_lineno:\n+\t\t{ $$ = lineno; }\n+\t;\n+\n+lineno_labeled_stmt:\n+\t  save_filename save_lineno stmt\n+\t\t{ }\n+/*\t| save_filename save_lineno error\n+\t\t{ }\n+*/\n+\t| save_filename save_lineno label lineno_labeled_stmt\n+\t\t{ }\n+\t;\n+\n+lineno_stmt_or_label:\n+\t  save_filename save_lineno stmt_or_label\n+\t\t{ $$ = $3; }\n+\t;\n+\n+stmt_or_label:\n+\t  stmt\n+\t\t{ $$ = 0; }\n+\t| label\n+\t\t{ $$ = 1; }\n+\t;\n+\n+/* Parse a single real statement, not including any labels.  */\n+stmt:\n+\t  compstmt\n+\t\t{ stmt_count++; }\n+        | all_iter_stmt \n+\t| expr ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+/* It appears that this should not be done--that a non-lvalue array\n+   shouldn't get an error if the value isn't used.\n+   Section 3.2.2.1 says that an array lvalue gets converted to a pointer\n+   if it appears as a top-level expression,\n+   but says nothing about non-lvalue arrays.  */\n+#if 0\n+\t\t  /* Call default_conversion to get an error\n+\t\t     on referring to a register array if pedantic.  */\n+\t\t  if (TREE_CODE (TREE_TYPE ($1)) == ARRAY_TYPE\n+\t\t      || TREE_CODE (TREE_TYPE ($1)) == FUNCTION_TYPE)\n+\t\t    $1 = default_conversion ($1);\n+#endif\n+\t\t  iterator_expand ($1);\n+\t\t  clear_momentary (); }\n+\t| simple_if ELSE\n+\t\t{ expand_start_else ();\n+\t\t  $<itype>1 = stmt_count;\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ expand_end_cond ();\n+\t\t  if (extra_warnings && stmt_count == $<itype>1)\n+\t\t    warning (\"empty body in an else-statement\"); }\n+\t| simple_if %prec IF\n+\t\t{ expand_end_cond ();\n+\t\t  /* This warning is here instead of in simple_if, because we\n+\t\t     do not want a warning if an empty if is followed by an\n+\t\t     else statement.  Increment stmt_count so we don't\n+\t\t     give a second error if this is a nested `if'.  */\n+\t\t  if (extra_warnings && stmt_count++ == $<itype>1)\n+\t\t    warning_with_file_and_line (if_stmt_file, if_stmt_line,\n+\t\t\t\t\t\t\"empty body in an if-statement\"); }\n+/* Make sure expand_end_cond is run once\n+   for each call to expand_start_cond.\n+   Otherwise a crash is likely.  */\n+\t| simple_if ELSE error\n+\t\t{ expand_end_cond (); }\n+\t| WHILE\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* The emit_nop used to come before emit_line_note,\n+\t\t     but that made the nop seem like part of the preceding line.\n+\t\t     And that was confusing when the preceding line was\n+\t\t     inside of an if statement and was not really executed.\n+\t\t     I think it ought to work to put the nop after the line number.\n+\t\t     We will see.  --rms, July 15, 1991.  */\n+\t\t  emit_nop (); }\n+\t  '(' expr ')'\n+\t\t{ /* Don't start the loop till we have succeeded\n+\t\t     in parsing the end test.  This is to make sure\n+\t\t     that we end every loop we start.  */\n+\t\t  expand_start_loop (1);\n+\t\t  emit_line_note (input_filename, lineno);\n+\t\t  expand_exit_loop_if_false (NULL_PTR,\n+\t\t\t\t\t     truthvalue_conversion ($4));\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ expand_end_loop (); }\n+\t| do_stmt_start\n+\t  '(' expr ')' ';'\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  expand_exit_loop_if_false (NULL_PTR,\n+\t\t\t\t\t     truthvalue_conversion ($3));\n+\t\t  expand_end_loop ();\n+\t\t  clear_momentary (); }\n+/* This rule is needed to make sure we end every loop we start.  */\n+\t| do_stmt_start error\n+\t\t{ expand_end_loop ();\n+\t\t  clear_momentary (); }\n+\t| FOR\n+\t  '(' xexpr ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* See comment in `while' alternative, above.  */\n+\t\t  emit_nop ();\n+\t\t  if ($3) c_expand_expr_stmt ($3);\n+\t\t  /* Next step is to call expand_start_loop_continue_elsewhere,\n+\t\t     but wait till after we parse the entire for (...).\n+\t\t     Otherwise, invalid input might cause us to call that\n+\t\t     fn without calling expand_end_loop.  */\n+\t\t}\n+\t  xexpr ';'\n+\t\t/* Can't emit now; wait till after expand_start_loop...  */\n+\t\t{ $<lineno>7 = lineno;\n+\t\t  $<filename>$ = input_filename; }\n+\t  xexpr ')'\n+\t\t{ \n+\t\t  /* Start the loop.  Doing this after parsing\n+\t\t     all the expressions ensures we will end the loop.  */\n+\t\t  expand_start_loop_continue_elsewhere (1);\n+\t\t  /* Emit the end-test, with a line number.  */\n+\t\t  emit_line_note ($<filename>8, $<lineno>7);\n+\t\t  if ($6)\n+\t\t    expand_exit_loop_if_false (NULL_PTR,\n+\t\t\t\t\t       truthvalue_conversion ($6));\n+\t\t  /* Don't let the tree nodes for $9 be discarded by\n+\t\t     clear_momentary during the parsing of the next stmt.  */\n+\t\t  push_momentary ();\n+\t\t  $<lineno>7 = lineno;\n+\t\t  $<filename>8 = input_filename;\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ /* Emit the increment expression, with a line number.  */\n+\t\t  emit_line_note ($<filename>8, $<lineno>7);\n+\t\t  expand_loop_continue_here ();\n+\t\t  if ($9)\n+\t\t    c_expand_expr_stmt ($9);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary ();\n+\t\t  expand_end_loop (); }\n+\t| SWITCH '(' expr ')'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_start_case ($3);\n+\t\t  /* Don't let the tree nodes for $3 be discarded by\n+\t\t     clear_momentary during the parsing of the next stmt.  */\n+\t\t  push_momentary ();\n+\t\t  position_after_white_space (); }\n+\t  lineno_labeled_stmt\n+\t\t{ expand_end_case ($3);\n+\t\t  if (yychar == CONSTANT || yychar == STRING)\n+\t\t    pop_momentary_nofree ();\n+\t\t  else\n+\t\t    pop_momentary (); }\n+\t| BREAK ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  if ( ! expand_exit_something ())\n+\t\t    error (\"break statement not within loop or switch\"); }\n+\t| CONTINUE ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  if (! expand_continue_loop (NULL_PTR))\n+\t\t    error (\"continue statement not within a loop\"); }\n+\t| RETURN ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_return (NULL_TREE); }\n+\t| RETURN expr ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_return ($2); }\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  STRIP_NOPS ($4);\n+\t\t  if ((TREE_CODE ($4) == ADDR_EXPR\n+\t\t       && TREE_CODE (TREE_OPERAND ($4, 0)) == STRING_CST)\n+\t\t      || TREE_CODE ($4) == STRING_CST)\n+\t\t    expand_asm ($4);\n+\t\t  else\n+\t\t    error (\"argument of `asm' is not a constant string\"); }\n+\t/* This is the case with just output operands.  */\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_asm_operands ($4, $6, NULL_TREE, NULL_TREE,\n+\t\t\t\t\t $2 == ridpointers[(int)RID_VOLATILE],\n+\t\t\t\t\t input_filename, lineno); }\n+\t/* This is the case with input operands as well.  */\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':' asm_operands ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_asm_operands ($4, $6, $8, NULL_TREE,\n+\t\t\t\t\t $2 == ridpointers[(int)RID_VOLATILE],\n+\t\t\t\t\t input_filename, lineno); }\n+\t/* This is the case with clobbered registers as well.  */\n+\t| ASM_KEYWORD maybe_type_qual '(' expr ':' asm_operands ':'\n+  \t  asm_operands ':' asm_clobbers ')' ';'\n+\t\t{ stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  c_expand_asm_operands ($4, $6, $8, $10,\n+\t\t\t\t\t $2 == ridpointers[(int)RID_VOLATILE],\n+\t\t\t\t\t input_filename, lineno); }\n+\t| GOTO identifier ';'\n+\t\t{ tree decl;\n+\t\t  stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  decl = lookup_label ($2);\n+\t\t  if (decl != 0)\n+\t\t    {\n+\t\t      TREE_USED (decl) = 1;\n+\t\t      expand_goto (decl);\n+\t\t    }\n+\t\t}\n+\t| GOTO '*' expr ';'\n+\t\t{ if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n+\t\t  stmt_count++;\n+\t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  expand_computed_goto (convert (ptr_type_node, $3)); }\n+\t| ';'\n+\t;\n+\n+all_iter_stmt:\n+\t  all_iter_stmt_simple\n+/*\t| all_iter_stmt_with_decl */\n+\t;\n+\n+all_iter_stmt_simple:\n+\t  FOR '(' primary ')' \n+\t  {\n+\t    /* The value returned by this action is  */\n+\t    /*      1 if everything is OK */ \n+\t    /*      0 in case of error or already bound iterator */\n+\n+\t    $<itype>$ = 0;\n+\t    if (TREE_CODE ($3) != VAR_DECL)\n+\t      error (\"invalid `for (ITERATOR)' syntax\");\n+\t    else if (! ITERATOR_P ($3))\n+\t      error (\"`%s' is not an iterator\",\n+\t\t     IDENTIFIER_POINTER (DECL_NAME ($3)));\n+\t    else if (ITERATOR_BOUND_P ($3))\n+\t      error (\"`for (%s)' inside expansion of same iterator\",\n+\t\t     IDENTIFIER_POINTER (DECL_NAME ($3)));\n+\t    else\n+\t      {\n+\t\t$<itype>$ = 1;\n+\t\titerator_for_loop_start ($3);\n+\t      }\n+\t  }\n+\t  lineno_labeled_stmt\n+\t  {\n+\t    if ($<itype>5)\n+\t      iterator_for_loop_end ($3);\n+\t  }\n+\n+/*  This really should allow any kind of declaration,\n+    for generality.  Fix it before turning it back on.\n+\n+all_iter_stmt_with_decl:\n+\t  FOR '(' ITERATOR pushlevel setspecs iterator_spec ')' \n+\t  {\n+*/\t    /* The value returned by this action is  */\n+\t    /*      1 if everything is OK */ \n+\t    /*      0 in case of error or already bound iterator */\n+/*\n+\t    iterator_for_loop_start ($6);\n+\t  }\n+\t  lineno_labeled_stmt\n+\t  {\n+\t    iterator_for_loop_end ($6);\n+\t    emit_line_note (input_filename, lineno);\n+\t    expand_end_bindings (getdecls (), 1, 0);\n+\t    $<ttype>$ = poplevel (1, 1, 0);\n+\t    if (yychar == CONSTANT || yychar == STRING)\n+\t      pop_momentary_nofree ();\n+\t    else\n+\t      pop_momentary ();\t    \n+\t  }\n+*/\n+\n+/* Any kind of label, including jump labels and case labels.\n+   ANSI C accepts labels only before statements, but we allow them\n+   also at the end of a compound statement.  */\n+\n+label:\t  CASE expr_no_commas ':'\n+\t\t{ register tree value = check_case_value ($2);\n+\t\t  register tree label\n+\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n+\n+\t\t  stmt_count++;\n+\n+\t\t  if (value != error_mark_node)\n+\t\t    {\n+\t\t      tree duplicate;\n+\t\t      int success = pushcase (value, convert_and_check,\n+\t\t\t\t\t      label, &duplicate);\n+\t\t      if (success == 1)\n+\t\t\terror (\"case label not within a switch statement\");\n+\t\t      else if (success == 2)\n+\t\t\t{\n+\t\t\t  error (\"duplicate case value\");\n+\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n+\t\t\t}\n+\t\t      else if (success == 3)\n+\t\t\twarning (\"case value out of range\");\n+\t\t      else if (success == 5)\n+\t\t\terror (\"case label within scope of cleanup or variable array\");\n+\t\t    }\n+\t\t  position_after_white_space (); }\n+\t| CASE expr_no_commas ELLIPSIS expr_no_commas ':'\n+\t\t{ register tree value1 = check_case_value ($2);\n+\t\t  register tree value2 = check_case_value ($4);\n+\t\t  register tree label\n+\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n+\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids case ranges\");\n+\t\t  stmt_count++;\n+\n+\t\t  if (value1 != error_mark_node && value2 != error_mark_node)\n+\t\t    {\n+\t\t      tree duplicate;\n+\t\t      int success = pushcase_range (value1, value2,\n+\t\t\t\t\t\t    convert_and_check, label,\n+\t\t\t\t\t\t    &duplicate);\n+\t\t      if (success == 1)\n+\t\t\terror (\"case label not within a switch statement\");\n+\t\t      else if (success == 2)\n+\t\t\t{\n+\t\t\t  error (\"duplicate case value\");\n+\t\t\t  error_with_decl (duplicate, \"this is the first entry for that value\");\n+\t\t\t}\n+\t\t      else if (success == 3)\n+\t\t\twarning (\"case value out of range\");\n+\t\t      else if (success == 4)\n+\t\t\twarning (\"empty case range\");\n+\t\t      else if (success == 5)\n+\t\t\terror (\"case label within scope of cleanup or variable array\");\n+\t\t    }\n+\t\t  position_after_white_space (); }\n+\t| DEFAULT ':'\n+\t\t{\n+\t\t  tree duplicate;\n+\t\t  register tree label\n+\t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n+\t\t  int success = pushcase (NULL_TREE, 0, label, &duplicate);\n+\t\t  stmt_count++;\n+\t\t  if (success == 1)\n+\t\t    error (\"default label not within a switch statement\");\n+\t\t  else if (success == 2)\n+\t\t    {\n+\t\t      error (\"multiple default labels in one switch\");\n+\t\t      error_with_decl (duplicate, \"this is the first default label\");\n+\t\t    }\n+\t\t  position_after_white_space (); }\n+\t| identifier ':'\n+\t\t{ tree label = define_label (input_filename, lineno, $1);\n+\t\t  stmt_count++;\n+\t\t  emit_nop ();\n+\t\t  if (label)\n+\t\t    expand_label (label);\n+\t\t  position_after_white_space (); }\n+\t;\n+\n+/* Either a type-qualifier or nothing.  First thing in an `asm' statement.  */\n+\n+maybe_type_qual:\n+\t/* empty */\n+\t\t{ emit_line_note (input_filename, lineno);\n+\t\t  $$ = NULL_TREE; }\n+\t| TYPE_QUAL\n+\t\t{ emit_line_note (input_filename, lineno); }\n+\t;\n+\n+xexpr:\n+\t/* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| expr\n+\t;\n+\n+/* These are the operands other than the first string and colon\n+   in  asm (\"addextend %2,%1\": \"=dm\" (x), \"0\" (y), \"g\" (*x))  */\n+asm_operands: /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| nonnull_asm_operands\n+\t;\n+\n+nonnull_asm_operands:\n+\t  asm_operand\n+\t| nonnull_asm_operands ',' asm_operand\n+\t\t{ $$ = chainon ($1, $3); }\n+\t;\n+\n+asm_operand:\n+\t  STRING '(' expr ')'\n+\t\t{ $$ = build_tree_list ($1, $3); }\n+\t;\n+\n+asm_clobbers:\n+\t  string\n+\t\t{ $$ = tree_cons (NULL_TREE, combine_strings ($1), NULL_TREE); }\n+\t| asm_clobbers ',' string\n+\t\t{ $$ = tree_cons (NULL_TREE, combine_strings ($3), $1); }\n+\t;\n+\f\n+/* This is what appears inside the parens in a function declarator.\n+   Its value is a list of ..._TYPE nodes.  */\n+parmlist:\n+\t\t{ pushlevel (0);\n+\t\t  clear_parm_order ();\n+\t\t  declare_parm_level (0); }\n+\t  parmlist_1\n+\t\t{ $$ = $2;\n+\t\t  parmlist_tags_warning ();\n+\t\t  poplevel (0, 0, 0); }\n+\t;\n+\n+parmlist_1:\n+\t  parmlist_2 ')'\n+\t| parms ';'\n+\t\t{ tree parm;\n+\t\t  if (pedantic)\n+\t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n+\t\t  /* Mark the forward decls as such.  */\n+\t\t  for (parm = getdecls (); parm; parm = TREE_CHAIN (parm))\n+\t\t    TREE_ASM_WRITTEN (parm) = 1;\n+\t\t  clear_parm_order (); }\n+\t  parmlist_1\n+\t\t{ $$ = $4; }\n+\t| error ')'\n+\t\t{ $$ = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); }\n+\t;\n+\n+/* This is what appears inside the parens in a function declarator.\n+   Is value is represented in the format that grokdeclarator expects.  */\n+parmlist_2:  /* empty */\n+\t\t{ $$ = get_parm_info (0); }\n+\t| ELLIPSIS\n+\t\t{ $$ = get_parm_info (0);\n+\t\t  /* Gcc used to allow this as an extension.  However, it does\n+\t\t     not work for all targets, and thus has been disabled.\n+\t\t     Also, since func (...) and func () are indistinguishable,\n+\t\t     it caused problems with the code in expand_builtin which\n+\t\t     tries to verify that BUILT_IN_NEXT_ARG is being used\n+\t\t     correctly.  */\n+\t\t  error (\"ANSI C requires a named argument before `...'\");\n+\t\t}\n+\t| parms\n+\t\t{ $$ = get_parm_info (1); }\n+\t| parms ',' ELLIPSIS\n+\t\t{ $$ = get_parm_info (0); }\n+\t;\n+\n+parms:\n+\tparm\n+\t\t{ push_parm_decl ($1); }\n+\t| parms ',' parm\n+\t\t{ push_parm_decl ($3); }\n+\t;\n+\n+/* A single parameter declaration or parameter type name,\n+   as found in a parmlist.  */\n+parm:\n+\t  typed_declspecs setspecs parm_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs notype_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4)); \n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs setspecs absdcl maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| declmods setspecs notype_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2);  }\n+\n+\t| declmods setspecs absdcl maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $3),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $4));\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2);  }\n+\t;\n+\n+/* This is used in a function definition\n+   where either a parmlist or an identifier list is ok.\n+   Its value is a list of ..._TYPE nodes or a list of identifiers.  */\n+parmlist_or_identifiers:\n+\t\t{ pushlevel (0);\n+\t\t  clear_parm_order ();\n+\t\t  declare_parm_level (1); }\n+\t  parmlist_or_identifiers_1\n+\t\t{ $$ = $2;\n+\t\t  parmlist_tags_warning ();\n+\t\t  poplevel (0, 0, 0); }\n+\t;\n+\n+parmlist_or_identifiers_1:\n+\t  parmlist_1\n+\t| identifiers ')'\n+\t\t{ tree t;\n+\t\t  for (t = $1; t; t = TREE_CHAIN (t))\n+\t\t    if (TREE_VALUE (t) == NULL_TREE)\n+\t\t      error (\"`...' in old-style identifier list\");\n+\t\t  $$ = tree_cons (NULL_TREE, NULL_TREE, $1); }\n+\t;\n+\n+/* A nonempty list of identifiers.  */\n+identifiers:\n+\tIDENTIFIER\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| identifiers ',' IDENTIFIER\n+\t\t{ $$ = chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+/* A nonempty list of identifiers, including typenames.  */\n+identifiers_or_typenames:\n+\tidentifier\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| identifiers_or_typenames ',' identifier\n+\t\t{ $$ = chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+extension:\n+\tEXTENSION\n+\t\t{ $<itype>$ = pedantic;\n+\t\t  pedantic = 0; }\n+\t;\n+\f\n+/* Objective-C productions.  */\n+\n+objcdef:\n+\t  classdef\n+\t| classdecl\n+\t| aliasdecl\n+\t| protocoldef\n+\t| methoddef\n+\t| END\n+\t\t{\n+\t\t  if (objc_implementation_context)\n+                    {\n+\t\t      finish_class (objc_implementation_context);\n+\t\t      objc_ivar_chain = NULL_TREE;\n+\t\t      objc_implementation_context = NULL_TREE;\n+\t\t    }\n+\t\t  else\n+\t\t    warning (\"`@end' must appear in an implementation context\");\n+\t\t}\n+\t;\n+\n+/* A nonempty list of identifiers.  */\n+identifier_list:\n+\tidentifier\n+\t\t{ $$ = build_tree_list (NULL_TREE, $1); }\n+\t| identifier_list ',' identifier\n+\t\t{ $$ = chainon ($1, build_tree_list (NULL_TREE, $3)); }\n+\t;\n+\n+classdecl:\n+\t  CLASS identifier_list ';'\n+\t\t{\n+\t\t  objc_declare_class ($2);\n+\t\t}\n+\n+aliasdecl:\n+\t  ALIAS identifier identifier ';'\n+\t\t{\n+\t\t  objc_declare_alias ($2, $3);\n+\t\t}\n+\n+classdef:\n+\t  INTERFACE identifier protocolrefs '{'\n+\t\t{\n+\t\t  objc_interface_context = objc_ivar_context\n+\t\t    = start_class (CLASS_INTERFACE_TYPE, $2, NULL_TREE, $3);\n+                  objc_public_flag = 0;\n+\t\t}\n+\t  ivar_decl_list '}'\n+\t\t{\n+                  continue_class (objc_interface_context);\n+\t\t}\n+\t  methodprotolist\n+\t  END\n+\t\t{\n+\t\t  finish_class (objc_interface_context);\n+\t\t  objc_interface_context = NULL_TREE;\n+\t\t}\n+\n+\t| INTERFACE identifier protocolrefs\n+\t\t{\n+\t\t  objc_interface_context\n+\t\t    = start_class (CLASS_INTERFACE_TYPE, $2, NULL_TREE, $3);\n+                  continue_class (objc_interface_context);\n+\t\t}\n+\t  methodprotolist\n+\t  END\n+\t\t{\n+\t\t  finish_class (objc_interface_context);\n+\t\t  objc_interface_context = NULL_TREE;\n+\t\t}\n+\n+\t| INTERFACE identifier ':' identifier protocolrefs '{'\n+\t\t{\n+\t\t  objc_interface_context = objc_ivar_context\n+\t\t    = start_class (CLASS_INTERFACE_TYPE, $2, $4, $5);\n+                  objc_public_flag = 0;\n+\t\t}\n+\t  ivar_decl_list '}'\n+\t\t{\n+                  continue_class (objc_interface_context);\n+\t\t}\n+\t  methodprotolist\n+\t  END\n+\t\t{\n+\t\t  finish_class (objc_interface_context);\n+\t\t  objc_interface_context = NULL_TREE;\n+\t\t}\n+\n+\t| INTERFACE identifier ':' identifier protocolrefs\n+\t\t{\n+\t\t  objc_interface_context\n+\t\t    = start_class (CLASS_INTERFACE_TYPE, $2, $4, $5);\n+                  continue_class (objc_interface_context);\n+\t\t}\n+\t  methodprotolist\n+\t  END\n+\t\t{\n+\t\t  finish_class (objc_interface_context);\n+\t\t  objc_interface_context = NULL_TREE;\n+\t\t}\n+\n+\t| IMPLEMENTATION identifier '{'\n+\t\t{\n+\t\t  objc_implementation_context = objc_ivar_context\n+\t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, $2, NULL_TREE, NULL_TREE);\n+                  objc_public_flag = 0;\n+\t\t}\n+\t  ivar_decl_list '}'\n+\t\t{\n+                  objc_ivar_chain\n+\t\t    = continue_class (objc_implementation_context);\n+\t\t}\n+\n+\t| IMPLEMENTATION identifier\n+\t\t{\n+\t\t  objc_implementation_context\n+\t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, $2, NULL_TREE, NULL_TREE);\n+                  objc_ivar_chain\n+\t\t    = continue_class (objc_implementation_context);\n+\t\t}\n+\n+\t| IMPLEMENTATION identifier ':' identifier '{'\n+\t\t{\n+\t\t  objc_implementation_context = objc_ivar_context\n+\t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, $2, $4, NULL_TREE);\n+                  objc_public_flag = 0;\n+\t\t}\n+\t  ivar_decl_list '}'\n+\t\t{\n+                  objc_ivar_chain\n+\t\t    = continue_class (objc_implementation_context);\n+\t\t}\n+\n+\t| IMPLEMENTATION identifier ':' identifier\n+\t\t{\n+\t\t  objc_implementation_context\n+\t\t    = start_class (CLASS_IMPLEMENTATION_TYPE, $2, $4, NULL_TREE);\n+                  objc_ivar_chain\n+\t\t    = continue_class (objc_implementation_context);\n+\t\t}\n+\n+\t| INTERFACE identifier '(' identifier ')' protocolrefs\n+\t\t{\n+\t\t  objc_interface_context\n+\t\t    = start_class (CATEGORY_INTERFACE_TYPE, $2, $4, $6);\n+                  continue_class (objc_interface_context);\n+\t\t}\n+\t  methodprotolist\n+\t  END\n+\t\t{\n+\t\t  finish_class (objc_interface_context);\n+\t\t  objc_interface_context = NULL_TREE;\n+\t\t}\n+\n+\t| IMPLEMENTATION identifier '(' identifier ')'\n+\t\t{\n+\t\t  objc_implementation_context\n+\t\t    = start_class (CATEGORY_IMPLEMENTATION_TYPE, $2, $4, NULL_TREE);\n+                  objc_ivar_chain\n+\t\t    = continue_class (objc_implementation_context);\n+\t\t}\n+\t;\n+\n+protocoldef:\n+\t  PROTOCOL identifier protocolrefs\n+\t\t{\n+\t\t  remember_protocol_qualifiers ();\n+\t\t  objc_interface_context\n+\t\t    = start_protocol(PROTOCOL_INTERFACE_TYPE, $2, $3);\n+\t\t}\n+\t  methodprotolist END\n+\t\t{\n+\t\t  forget_protocol_qualifiers();\n+\t\t  finish_protocol(objc_interface_context);\n+\t\t  objc_interface_context = NULL_TREE;\n+\t\t}\n+\t;\n+\n+protocolrefs:\n+\t  /* empty */\n+\t\t{\n+\t\t  $$ = NULL_TREE;\n+\t\t}\n+\t| non_empty_protocolrefs\n+\t;\n+\n+non_empty_protocolrefs:\n+\t  ARITHCOMPARE identifier_list ARITHCOMPARE\n+\t\t{\n+\t\t  if ($1 == LT_EXPR && $3 == GT_EXPR)\n+\t\t    $$ = $2;\n+\t\t  else\n+\t\t    YYERROR1;\n+\t\t}\n+\t;\n+\n+ivar_decl_list:\n+          ivar_decl_list visibility_spec ivar_decls\n+        | ivar_decls\n+        ;\n+\n+visibility_spec:\n+\t  PRIVATE { objc_public_flag = 2; }\n+\t| PROTECTED { objc_public_flag = 0; }\n+\t| PUBLIC { objc_public_flag = 1; }\n+\t;\n+\n+ivar_decls:\n+          /* empty */\n+\t\t{\n+                  $$ = NULL_TREE;\n+                }\n+\t| ivar_decls ivar_decl ';'\n+\t| ivar_decls ';'\n+\t\t{\n+                  if (pedantic)\n+\t\t    pedwarn (\"extra semicolon in struct or union specified\");\n+                }\n+\t;\n+\n+\n+/* There is a shift-reduce conflict here, because `components' may\n+   start with a `typename'.  It happens that shifting (the default resolution)\n+   does the right thing, because it treats the `typename' as part of\n+   a `typed_typespecs'.\n+\n+   It is possible that this same technique would allow the distinction\n+   between `notype_initdecls' and `initdecls' to be eliminated.\n+   But I am being cautious and not trying it.  */\n+\n+ivar_decl:\n+\ttyped_typespecs setspecs ivars\n+\t        { $$ = $3;\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| nonempty_type_quals setspecs ivars\n+\t\t{ $$ = $3;\n+\t\t  current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| error\n+\t\t{ $$ = NULL_TREE; }\n+\t;\n+\n+ivars:\n+\t  /* empty */\n+\t\t{ $$ = NULL_TREE; }\n+\t| ivar_declarator\n+\t| ivars ',' ivar_declarator\n+\t;\n+\n+ivar_declarator:\n+\t  declarator\n+\t\t{\n+\t\t  $$ = add_instance_variable (objc_ivar_context,\n+\t\t\t\t\t      objc_public_flag,\n+\t\t\t\t\t      $1, current_declspecs,\n+\t\t\t\t\t      NULL_TREE);\n+                }\n+\t| declarator ':' expr_no_commas\n+\t\t{\n+\t\t  $$ = add_instance_variable (objc_ivar_context,\n+\t\t\t\t\t      objc_public_flag,\n+\t\t\t\t\t      $1, current_declspecs, $3);\n+                }\n+\t| ':' expr_no_commas\n+\t\t{\n+\t\t  $$ = add_instance_variable (objc_ivar_context,\n+\t\t\t\t\t      objc_public_flag,\n+\t\t\t\t\t      NULL_TREE,\n+\t\t\t\t\t      current_declspecs, $2);\n+                }\n+\t;\n+\n+methoddef:\n+\t  '+'\n+\t\t{\n+\t\t  remember_protocol_qualifiers ();\n+\t\t  if (objc_implementation_context)\n+\t\t    objc_inherit_code = CLASS_METHOD_DECL;\n+                  else\n+\t\t    fatal (\"method definition not in class context\");\n+\t\t}\n+\t  methoddecl\n+\t\t{\n+\t\t  forget_protocol_qualifiers ();\n+\t\t  add_class_method (objc_implementation_context, $3);\n+\t\t  start_method_def ($3);\n+\t\t  objc_method_context = $3;\n+\t\t}\n+\t  optarglist\n+\t\t{\n+\t\t  continue_method_def ();\n+\t\t}\n+\t  compstmt_or_error\n+\t\t{\n+\t\t  finish_method_def ();\n+\t\t  objc_method_context = NULL_TREE;\n+\t\t}\n+\n+\t| '-'\n+\t\t{\n+\t\t  remember_protocol_qualifiers ();\n+\t\t  if (objc_implementation_context)\n+\t\t    objc_inherit_code = INSTANCE_METHOD_DECL;\n+                  else\n+\t\t    fatal (\"method definition not in class context\");\n+\t\t}\n+\t  methoddecl\n+\t\t{\n+\t\t  forget_protocol_qualifiers ();\n+\t\t  add_instance_method (objc_implementation_context, $3);\n+\t\t  start_method_def ($3);\n+\t\t  objc_method_context = $3;\n+\t\t}\n+\t  optarglist\n+\t\t{\n+\t\t  continue_method_def ();\n+\t\t}\n+\t  compstmt_or_error\n+\t\t{\n+\t\t  finish_method_def ();\n+\t\t  objc_method_context = NULL_TREE;\n+\t\t}\n+\t;\n+\n+/* the reason for the strange actions in this rule\n+ is so that notype_initdecls when reached via datadef\n+ can find a valid list of type and sc specs in $0. */\n+\n+methodprotolist:\n+\t  /* empty  */\n+\t| {$<ttype>$ = NULL_TREE; } methodprotolist2\n+\t;\n+\n+methodprotolist2:\t\t /* eliminates a shift/reduce conflict */\n+\t   methodproto\n+\t|  datadef\n+\t| methodprotolist2 methodproto\n+\t| methodprotolist2 {$<ttype>$ = NULL_TREE; } datadef\n+\t;\n+\n+semi_or_error:\n+\t  ';'\n+\t| error\n+\t;\n+\n+methodproto:\n+\t  '+'\n+\t\t{\n+\t\t  objc_inherit_code = CLASS_METHOD_DECL;\n+\t\t}\n+\t  methoddecl\n+\t\t{\n+\t\t  add_class_method (objc_interface_context, $3);\n+\t\t}\n+\t  semi_or_error\n+\n+\t| '-'\n+\t\t{\n+\t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n+\t\t}\n+\t  methoddecl\n+\t\t{\n+\t\t  add_instance_method (objc_interface_context, $3);\n+\t\t}\n+\t  semi_or_error\n+\t;\n+\n+methoddecl:\n+\t  '(' typename ')' unaryselector\n+\t\t{\n+\t\t  $$ = build_method_decl (objc_inherit_code, $2, $4, NULL_TREE);\n+\t\t}\n+\n+\t| unaryselector\n+\t\t{\n+\t\t  $$ = build_method_decl (objc_inherit_code, NULL_TREE, $1, NULL_TREE);\n+\t\t}\n+\n+\t| '(' typename ')' keywordselector optparmlist\n+\t\t{\n+\t\t  $$ = build_method_decl (objc_inherit_code, $2, $4, $5);\n+\t\t}\n+\n+\t| keywordselector optparmlist\n+\t\t{\n+\t\t  $$ = build_method_decl (objc_inherit_code, NULL_TREE, $1, $2);\n+\t\t}\n+\t;\n+\n+/* \"optarglist\" assumes that start_method_def has already been called...\n+   if it is not, the \"xdecls\" will not be placed in the proper scope */\n+\n+optarglist:\n+\t  /* empty */\n+\t| ';' myxdecls\n+\t;\n+\n+/* to get around the following situation: \"int foo (int a) int b; {}\" that\n+   is synthesized when parsing \"- a:a b:b; id c; id d; { ... }\" */\n+\n+myxdecls:\n+\t  /* empty */\n+\t| mydecls\n+\t;\n+\n+mydecls:\n+\tmydecl\n+\t| errstmt\n+\t| mydecls mydecl\n+\t| mydecl errstmt\n+\t;\n+\n+mydecl:\n+\ttyped_declspecs setspecs myparms ';'\n+\t\t{ current_declspecs = TREE_VALUE (declspec_stack);\n+\t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n+\t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n+\t\t  resume_momentary ($2); }\n+\t| typed_declspecs ';'\n+\t\t{ shadow_tag ($1); }\n+\t| declmods ';'\n+\t\t{ pedwarn (\"empty declaration\"); }\n+\t;\n+\n+myparms:\n+\tmyparm\n+\t\t{ push_parm_decl ($1); }\n+\t| myparms ',' myparm\n+\t\t{ push_parm_decl ($3); }\n+\t;\n+\n+/* A single parameter declaration or parameter type name,\n+   as found in a parmlist. DOES NOT ALLOW AN INITIALIZER OR ASMSPEC */\n+\n+myparm:\n+\t  parm_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $1),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $2)); }\n+\t| notype_declarator maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $1),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $2)); }\n+\t| absdcl maybe_attribute\n+\t\t{ $$ = build_tree_list (build_tree_list (current_declspecs,\n+\t\t\t\t\t\t\t $1),\n+\t\t\t\t\tbuild_tree_list (prefix_attributes,\n+\t\t\t\t\t\t\t $2)); }\n+\t;\n+\n+optparmlist:\n+\t  /* empty */\n+\t\t{\n+\t    \t  $$ = NULL_TREE;\n+\t\t}\n+\t| ',' ELLIPSIS\n+\t\t{\n+\t\t  /* oh what a kludge! */\n+\t\t  $$ = (tree)1;\n+\t\t}\n+\t| ','\n+\t\t{\n+\t\t  pushlevel (0);\n+\t\t}\n+\t  parmlist_2\n+\t\t{\n+\t  \t  /* returns a tree list node generated by get_parm_info */\n+\t\t  $$ = $3;\n+\t\t  poplevel (0, 0, 0);\n+\t\t}\n+\t;\n+\n+unaryselector:\n+\t  selector\n+\t;\n+\n+keywordselector:\n+\t  keyworddecl\n+\n+\t| keywordselector keyworddecl\n+\t\t{\n+\t\t  $$ = chainon ($1, $2);\n+\t\t}\n+\t;\n+\n+selector:\n+\t  IDENTIFIER\n+        | TYPENAME\n+  \t| OBJECTNAME\n+\t| reservedwords\n+\t;\n+\n+reservedwords:\n+\t  ENUM { $$ = get_identifier (token_buffer); }\n+\t| STRUCT { $$ = get_identifier (token_buffer); }\n+\t| UNION { $$ = get_identifier (token_buffer); }\n+\t| IF { $$ = get_identifier (token_buffer); }\n+\t| ELSE { $$ = get_identifier (token_buffer); }\n+\t| WHILE { $$ = get_identifier (token_buffer); }\n+\t| DO { $$ = get_identifier (token_buffer); }\n+\t| FOR { $$ = get_identifier (token_buffer); }\n+\t| SWITCH { $$ = get_identifier (token_buffer); }\n+\t| CASE { $$ = get_identifier (token_buffer); }\n+\t| DEFAULT { $$ = get_identifier (token_buffer); }\n+\t| BREAK { $$ = get_identifier (token_buffer); }\n+\t| CONTINUE { $$ = get_identifier (token_buffer); }\n+\t| RETURN  { $$ = get_identifier (token_buffer); }\n+\t| GOTO { $$ = get_identifier (token_buffer); }\n+\t| ASM_KEYWORD { $$ = get_identifier (token_buffer); }\n+        | SIZEOF { $$ = get_identifier (token_buffer); }\n+\t| TYPEOF { $$ = get_identifier (token_buffer); }\n+\t| ALIGNOF { $$ = get_identifier (token_buffer); }\n+\t| TYPESPEC | TYPE_QUAL\n+\t;\n+\n+keyworddecl:\n+\t  selector ':' '(' typename ')' identifier\n+\t\t{\n+\t\t  $$ = build_keyword_decl ($1, $4, $6);\n+\t\t}\n+\n+\t| selector ':' identifier\n+\t\t{\n+\t\t  $$ = build_keyword_decl ($1, NULL_TREE, $3);\n+\t\t}\n+\n+\t| ':' '(' typename ')' identifier\n+\t\t{\n+\t\t  $$ = build_keyword_decl (NULL_TREE, $3, $5);\n+\t\t}\n+\n+\t| ':' identifier\n+\t\t{\n+\t\t  $$ = build_keyword_decl (NULL_TREE, NULL_TREE, $2);\n+\t\t}\n+\t;\n+\n+messageargs:\n+\t  selector\n+        | keywordarglist\n+\t;\n+\n+keywordarglist:\n+\t  keywordarg\n+\t| keywordarglist keywordarg\n+\t\t{\n+\t\t  $$ = chainon ($1, $2);\n+\t\t}\n+\t;\n+\n+\n+keywordexpr:\n+\t  nonnull_exprlist\n+\t\t{\n+\t\t  if (TREE_CHAIN ($1) == NULL_TREE)\n+\t\t    /* just return the expr., remove a level of indirection */\n+\t\t    $$ = TREE_VALUE ($1);\n+                  else\n+\t\t    /* we have a comma expr., we will collapse later */\n+\t\t    $$ = $1;\n+\t\t}\n+\t;\n+\n+keywordarg:\n+\t  selector ':' keywordexpr\n+\t\t{\n+\t\t  $$ = build_tree_list ($1, $3);\n+\t\t}\n+\t| ':' keywordexpr\n+\t\t{\n+\t\t  $$ = build_tree_list (NULL_TREE, $2);\n+\t\t}\n+\t;\n+\n+receiver:\n+\t  expr\n+\t| CLASSNAME\n+\t\t{\n+\t\t  $$ = get_class_reference ($1);\n+\t\t}\n+\t;\n+\n+objcmessageexpr:\n+\t  '['\n+\t\t{ objc_receiver_context = 1; }\n+\t  receiver\n+\t\t{ objc_receiver_context = 0; }\n+\t  messageargs ']'\n+\t\t{\n+\t\t  $$ = build_tree_list ($3, $5);\n+\t\t}\n+\t;\n+\n+selectorarg:\n+\t  selector\n+        | keywordnamelist\n+\t;\n+\n+keywordnamelist:\n+\t  keywordname\n+\t| keywordnamelist keywordname\n+\t\t{\n+\t\t  $$ = chainon ($1, $2);\n+\t\t}\n+\t;\n+\n+keywordname:\n+\t  selector ':'\n+\t\t{\n+\t\t  $$ = build_tree_list ($1, NULL_TREE);\n+\t\t}\n+\t| ':'\n+\t\t{\n+\t\t  $$ = build_tree_list (NULL_TREE, NULL_TREE);\n+\t\t}\n+\t;\n+\n+objcselectorexpr:\n+\t  SELECTOR '(' selectorarg ')'\n+\t\t{\n+\t\t  $$ = $3;\n+\t\t}\n+\t;\n+\n+objcprotocolexpr:\n+\t  PROTOCOL '(' identifier ')'\n+\t\t{\n+\t\t  $$ = $3;\n+\t\t}\n+\t;\n+\n+/* extension to support C-structures in the archiver */\n+\n+objcencodeexpr:\n+\t  ENCODE '(' typename ')'\n+\t\t{\n+\t\t  $$ = groktypename ($3);\n+\t\t}\n+\t;\n+\n+%%"}, {"sha": "59b2eeea17e6475f6fc746fdc84f27a9c7c0a313", "filename": "gcc/obstack.c", "status": "modified", "additions": 27, "deletions": 124, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobstack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobstack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobstack.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,29 +1,19 @@\n /* obstack.c - subroutines used implicitly by object stack macros\n-   Copyright (C) 1988,89,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 89, 90, 91, 92, 93, 94 Free Software Foundation, Inc.\n \n-   the C library, however.  The master source lives in /gd/gnu/lib.\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n \n-   NOTE: The canonical source of this file is maintained with the GNU C Library.\n-   Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n \n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-   USA.  */\n-\n-#ifdef HAVE_CONFIG_H\n-#include <config.h>\n-#endif\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #include \"obstack.h\"\n \n@@ -77,28 +67,6 @@ union fooround {long x; double d;};\n #define COPYING_UNIT int\n #endif\n \n-\n-/* The functions allocating more room by calling `obstack_chunk_alloc'\n-   jump to the handler pointed to by `obstack_alloc_failed_handler'.\n-   This variable by default points to the internal function\n-   `print_and_abort'.  */\n-#if defined (__STDC__) && __STDC__\n-static void print_and_abort (void);\n-void (*obstack_alloc_failed_handler) (void) = print_and_abort;\n-#else\n-static void print_and_abort ();\n-void (*obstack_alloc_failed_handler) () = print_and_abort;\n-#endif\n-\n-/* Exit value used when `print_and_abort' is used.  */\n-#if defined __GNU_LIBRARY__ || defined HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-#ifndef EXIT_FAILURE\n-#define EXIT_FAILURE 1\n-#endif\n-int obstack_exit_failure = EXIT_FAILURE;\n-\n /* The non-GNU-C macros copy the obstack into this global variable\n    to avoid multiple evaluation.  */\n \n@@ -110,20 +78,6 @@ struct obstack *_obstack;\n    For free, do not use ?:, since some compilers, like the MIPS compilers,\n    do not allow (expr) ? void : void.  */\n \n-#if defined (__STDC__) && __STDC__\n-#define CALL_CHUNKFUN(h, size) \\\n-  (((h) -> use_extra_arg) \\\n-   ? (*(h)->chunkfun) ((h)->extra_arg, (size)) \\\n-   : (*(struct _obstack_chunk *(*) (long)) (h)->chunkfun) ((size)))\n-\n-#define CALL_FREEFUN(h, old_chunk) \\\n-  do { \\\n-    if ((h) -> use_extra_arg) \\\n-      (*(h)->freefun) ((h)->extra_arg, (old_chunk)); \\\n-    else \\\n-      (*(void (*) (void *)) (h)->freefun) ((old_chunk)); \\\n-  } while (0)\n-#else\n #define CALL_CHUNKFUN(h, size) \\\n   (((h) -> use_extra_arg) \\\n    ? (*(h)->chunkfun) ((h)->extra_arg, (size)) \\\n@@ -136,7 +90,6 @@ struct obstack *_obstack;\n     else \\\n       (*(void (*) ()) (h)->freefun) ((old_chunk)); \\\n   } while (0)\n-#endif\n \n \f\n /* Initialize an obstack H for use.  Specify chunk size SIZE (0 means default).\n@@ -153,13 +106,8 @@ _obstack_begin (h, size, alignment, chunkfun, freefun)\n      struct obstack *h;\n      int size;\n      int alignment;\n-#if defined (__STDC__) && __STDC__\n-     POINTER (*chunkfun) (long);\n-     void (*freefun) (void *);\n-#else\n      POINTER (*chunkfun) ();\n      void (*freefun) ();\n-#endif\n {\n   register struct _obstack_chunk *chunk; /* points to new chunk */\n \n@@ -182,27 +130,25 @@ _obstack_begin (h, size, alignment, chunkfun, freefun)\n       size = 4096 - extra;\n     }\n \n-#if defined (__STDC__) && __STDC__\n-  h->chunkfun = (struct _obstack_chunk * (*)(void *, long)) chunkfun;\n-  h->freefun = (void (*) (void *, struct _obstack_chunk *)) freefun;\n-#else\n   h->chunkfun = (struct _obstack_chunk * (*)()) chunkfun;\n   h->freefun = freefun;\n-#endif\n   h->chunk_size = size;\n   h->alignment_mask = alignment - 1;\n   h->use_extra_arg = 0;\n \n   chunk = h->chunk = CALL_CHUNKFUN (h, h -> chunk_size);\n   if (!chunk)\n-    (*obstack_alloc_failed_handler) ();\n+    {\n+      h->alloc_failed = 1;\n+      return 0;\n+    }\n+  h->alloc_failed = 0;\n   h->next_free = h->object_base = chunk->contents;\n   h->chunk_limit = chunk->limit\n     = (char *) chunk + h->chunk_size;\n   chunk->prev = 0;\n   /* The initial chunk now contains no empty object.  */\n   h->maybe_empty_object = 0;\n-  h->alloc_failed = 0;\n   return 1;\n }\n \n@@ -211,13 +157,8 @@ _obstack_begin_1 (h, size, alignment, chunkfun, freefun, arg)\n      struct obstack *h;\n      int size;\n      int alignment;\n-#if defined (__STDC__) && __STDC__\n-     POINTER (*chunkfun) (POINTER, long);\n-     void (*freefun) (POINTER, POINTER);\n-#else\n      POINTER (*chunkfun) ();\n      void (*freefun) ();\n-#endif\n      POINTER arg;\n {\n   register struct _obstack_chunk *chunk; /* points to new chunk */\n@@ -241,28 +182,26 @@ _obstack_begin_1 (h, size, alignment, chunkfun, freefun, arg)\n       size = 4096 - extra;\n     }\n \n-#if defined(__STDC__) && __STDC__\n-  h->chunkfun = (struct _obstack_chunk * (*)(void *,long)) chunkfun;\n-  h->freefun = (void (*) (void *, struct _obstack_chunk *)) freefun;\n-#else\n   h->chunkfun = (struct _obstack_chunk * (*)()) chunkfun;\n   h->freefun = freefun;\n-#endif\n   h->chunk_size = size;\n   h->alignment_mask = alignment - 1;\n   h->extra_arg = arg;\n   h->use_extra_arg = 1;\n \n   chunk = h->chunk = CALL_CHUNKFUN (h, h -> chunk_size);\n   if (!chunk)\n-    (*obstack_alloc_failed_handler) ();\n+    {\n+      h->alloc_failed = 1;\n+      return 0;\n+    }\n+  h->alloc_failed = 0;\n   h->next_free = h->object_base = chunk->contents;\n   h->chunk_limit = chunk->limit\n     = (char *) chunk + h->chunk_size;\n   chunk->prev = 0;\n   /* The initial chunk now contains no empty object.  */\n   h->maybe_empty_object = 0;\n-  h->alloc_failed = 0;\n   return 1;\n }\n \n@@ -292,7 +231,11 @@ _obstack_newchunk (h, length)\n   /* Allocate and initialize the new chunk.  */\n   new_chunk = CALL_CHUNKFUN (h, new_size);\n   if (!new_chunk)\n-    (*obstack_alloc_failed_handler) ();\n+    {\n+      h->alloc_failed = 1;\n+      return;\n+    }\n+  h->alloc_failed = 0;\n   h->chunk = new_chunk;\n   new_chunk->prev = old_chunk;\n   new_chunk->limit = h->chunk_limit = (char *) new_chunk + new_size;\n@@ -436,39 +379,6 @@ obstack_free (h, obj)\n     abort ();\n }\n \f\n-int\n-_obstack_memory_used (h)\n-     struct obstack *h;\n-{\n-  register struct _obstack_chunk* lp;\n-  register int nbytes = 0;\n-\n-  for (lp = h->chunk; lp != 0; lp = lp->prev)\n-    {\n-      nbytes += lp->limit - (char *) lp;\n-    }\n-  return nbytes;\n-}\n-\f\n-/* Define the error handler.  */\n-#ifndef _\n-# ifdef HAVE_LIBINTL_H\n-#  include <libintl.h>\n-#  ifndef _\n-#   define _(Str) gettext (Str)\n-#  endif\n-# else\n-#  define _(Str) (Str)\n-# endif\n-#endif\n-\n-static void\n-print_and_abort ()\n-{\n-  fputs (_(\"memory exhausted\\n\"), stderr);\n-  exit (obstack_exit_failure);\n-}\n-\f\n #if 0\n /* These are now turned off because the applications do not use it\n    and it uses bcopy via obstack_grow, which causes trouble on sysV.  */\n@@ -507,13 +417,6 @@ int (obstack_room) (obstack)\n   return obstack_room (obstack);\n }\n \n-int (obstack_make_room) (obstack, length)\n-     struct obstack *obstack;\n-     int length;\n-{\n-  return obstack_make_room (obstack, length);\n-}\n-\n void (obstack_grow) (obstack, pointer, length)\n      struct obstack *obstack;\n      POINTER pointer;"}, {"sha": "dd8e8612bea95ea9124eacab4a994a0a3409a563", "filename": "gcc/obstack.h", "status": "modified", "additions": 75, "deletions": 111, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fobstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobstack.h?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,25 +1,19 @@\n /* obstack.h - object stack macros\n-   Copyright (C) 1988,89,90,91,92,93,94,96,97 Free Software Foundation, Inc.\n+   Copyright (C) 1988,89,90,91,92,93,94,96 Free Software Foundation, Inc.\n \n-   the C library, however.  The master source lives in /gd/gnu/lib.\n+This program is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.\n \n-   NOTE: The canonical source of this file is maintained with the GNU C Library.\n-   Bugs can be reported to bug-glibc@prep.ai.mit.edu.\n+This program is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n \n-   This program is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published by the\n-   Free Software Foundation; either version 2, or (at your option) any\n-   later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-   USA.  */\n+You should have received a copy of the GNU General Public License\n+along with this program; if not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* Summary:\n \n@@ -106,12 +100,8 @@ break the ordinary 'growth' macro.\n \n /* Don't do the contents of this file more than once.  */\n \n-#ifndef _OBSTACK_H\n-#define _OBSTACK_H 1\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n+#ifndef __OBSTACK_H__\n+#define __OBSTACK_H__\n \f\n /* We use subtraction of (char *) 0 instead of casting to int\n    because on word-addressable machines a simple cast to int\n@@ -148,17 +138,6 @@ extern \"C\" {\n #define PTR_INT_TYPE long\n #endif\n \n-#if defined (_LIBC) || defined (HAVE_STRING_H)\n-#include <string.h>\n-#define _obstack_memcpy(To, From, N) memcpy ((To), (From), (N))\n-#else\n-#ifdef memcpy\n-#define _obstack_memcpy(To, From, N) memcpy ((To), (From), (N))\n-#else\n-#define _obstack_memcpy(To, From, N) bcopy ((From), (To), (N))\n-#endif\n-#endif\n-\n struct _obstack_chunk\t\t/* Lives at front of each chunk. */\n {\n   char  *limit;\t\t\t/* 1 past end of this chunk */\n@@ -192,9 +171,7 @@ struct obstack\t\t/* control current object in current chunk */\n \t\t\t\t   chunk contains a zero-length object.  This\n \t\t\t\t   prevents freeing the chunk if we allocate\n \t\t\t\t   a bigger chunk to replace it. */\n-  unsigned alloc_failed:1;\t/* No longer used, as we now call the failed\n-\t\t\t\t   handler on error, but retained for binary\n-\t\t\t\t   compatibility.  */\n+  unsigned alloc_failed:1;\t/* chunk alloc func returned 0 */\n };\n \n /* Declare the external functions we use; they are in obstack.c.  */\n@@ -207,13 +184,11 @@ extern int _obstack_begin (struct obstack *, int, int,\n extern int _obstack_begin_1 (struct obstack *, int, int,\n \t\t\t     void *(*) (void *, long),\n \t\t\t     void (*) (void *, void *), void *);\n-extern int _obstack_memory_used (struct obstack *);\n #else\n extern void _obstack_newchunk ();\n extern void _obstack_free ();\n extern int _obstack_begin ();\n extern int _obstack_begin_1 ();\n-extern int _obstack_memory_used ();\n #endif\n \f\n #if defined (__STDC__) && __STDC__\n@@ -244,7 +219,6 @@ void * obstack_finish (struct obstack *obstack);\n int obstack_object_size (struct obstack *obstack);\n \n int obstack_room (struct obstack *obstack);\n-void obstack_make_room (struct obstack *obstack, int size);\n void obstack_1grow_fast (struct obstack *obstack, int data_char);\n void obstack_ptr_grow_fast (struct obstack *obstack, void *data);\n void obstack_int_grow_fast (struct obstack *obstack, int data);\n@@ -254,38 +228,25 @@ void * obstack_base (struct obstack *obstack);\n void * obstack_next_free (struct obstack *obstack);\n int obstack_alignment_mask (struct obstack *obstack);\n int obstack_chunk_size (struct obstack *obstack);\n-int obstack_memory_used (struct obstack *obstack);\n \n #endif /* __STDC__ */\n \n /* Non-ANSI C cannot really support alternative functions for these macros,\n    so we do not declare them.  */\n-\n-/* Error handler called when `obstack_chunk_alloc' failed to allocate\n-   more memory.  This can be set to a user defined function.  The\n-   default action is to print a message and abort.  */\n-#if defined (__STDC__) && __STDC__\n-extern void (*obstack_alloc_failed_handler) (void);\n-#else\n-extern void (*obstack_alloc_failed_handler) ();\n-#endif\n-\n-/* Exit value used when `print_and_abort' is used.  */\n-extern int obstack_exit_failure;\n \f\n /* Pointer to beginning of object being allocated or to be allocated next.\n    Note that this might not be the final address of the object\n    because a new chunk might be needed to hold the final size.  */\n \n-#define obstack_base(h) ((h)->object_base)\n+#define obstack_base(h) ((h)->alloc_failed ? 0 : (h)->object_base)\n \n /* Size for allocating ordinary chunks.  */\n \n #define obstack_chunk_size(h) ((h)->chunk_size)\n \n /* Pointer to next byte not yet allocated in current chunk.  */\n \n-#define obstack_next_free(h)\t((h)->next_free)\n+#define obstack_next_free(h)\t((h)->alloc_failed ? 0 : (h)->next_free)\n \n /* Mask specifying low bits that should be clear in address of an object.  */\n \n@@ -309,14 +270,13 @@ extern int obstack_exit_failure;\n \n #define obstack_specify_allocation_with_arg(h, size, alignment, chunkfun, freefun, arg) \\\n   _obstack_begin_1 ((h), (size), (alignment), \\\n-\t\t    (void *(*) (void *, long)) (chunkfun), \\\n-\t\t    (void (*) (void *, void *)) (freefun), (arg))\n+\t\t    (void *(*) (long)) (chunkfun), (void (*) (void *)) (freefun), (arg))\n \n #define obstack_chunkfun(h, newchunkfun) \\\n-  ((h) -> chunkfun = (struct _obstack_chunk *(*)(void *, long)) (newchunkfun))\n+  ((h) -> chunkfun = (struct _obstack_chunk *(*)(long)) (newchunkfun))\n \n #define obstack_freefun(h, newfreefun) \\\n-  ((h) -> freefun = (void (*)(void *, struct _obstack_chunk *)) (newfreefun))\n+  ((h) -> freefun = (void (*)(void *)) (newfreefun))\n \n #else\n \n@@ -347,8 +307,6 @@ extern int obstack_exit_failure;\n #define obstack_1grow_fast(h,achar) (*((h)->next_free)++ = achar)\n \n #define obstack_blank_fast(h,n) ((h)->next_free += (n))\n-\n-#define obstack_memory_used(h) _obstack_memory_used (h)\n \f\n #if defined (__GNUC__) && defined (__STDC__) && __STDC__\n /* NextStep 2.0 cc is really gcc 1.93 but it defines __GNUC__ = 2 and\n@@ -366,29 +324,25 @@ extern int obstack_exit_failure;\n #define obstack_object_size(OBSTACK)\t\t\t\t\t\\\n   __extension__\t\t\t\t\t\t\t\t\\\n   ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n+     __o->alloc_failed ? 0 :\t\t\t\t\t\t\\\n      (unsigned) (__o->next_free - __o->object_base); })\n \n #define obstack_room(OBSTACK)\t\t\t\t\t\t\\\n   __extension__\t\t\t\t\t\t\t\t\\\n   ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n      (unsigned) (__o->chunk_limit - __o->next_free); })\n \n-#define obstack_make_room(OBSTACK,length)\t\t\t\t\\\n-__extension__\t\t\t\t\t\t\t\t\\\n-({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n-   int __len = (length);\t\t\t\t\t\t\\\n-   if (__o->chunk_limit - __o->next_free < __len)\t\t\t\\\n-     _obstack_newchunk (__o, __len);\t\t\t\t\t\\\n-   (void) 0; })\n-\n #define obstack_grow(OBSTACK,where,length)\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    int __len = (length);\t\t\t\t\t\t\\\n    if (__o->next_free + __len > __o->chunk_limit)\t\t\t\\\n      _obstack_newchunk (__o, __len);\t\t\t\t\t\\\n-   _obstack_memcpy (__o->next_free, (char *) (where), __len);\t\t\\\n-   __o->next_free += __len;\t\t\t\t\t\t\\\n+   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n+     {\t\t\t\t\t\t\t\t\t\\\n+        bcopy ((char *) (where), __o->next_free, __len);\t\t\\\n+\t__o->next_free += __len;\t\t\t\t\t\\\n+     }\t\t\t\t\t\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_grow0(OBSTACK,where,length)\t\t\t\t\\\n@@ -397,17 +351,21 @@ __extension__\t\t\t\t\t\t\t\t\\\n    int __len = (length);\t\t\t\t\t\t\\\n    if (__o->next_free + __len + 1 > __o->chunk_limit)\t\t\t\\\n      _obstack_newchunk (__o, __len + 1);\t\t\t\t\\\n-   _obstack_memcpy (__o->next_free, (char *) (where), __len);\t\t\\\n-   __o->next_free += __len;\t\t\t\t\t\t\\\n-   *(__o->next_free)++ = 0;\t\t\t\t\t\t\\\n+   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n+     {\t\t\t\t\t\t\t\t\t\\\n+       bcopy ((char *) (where), __o->next_free, __len);\t\t\t\\\n+       __o->next_free += __len;\t\t\t\t\t\t\\\n+       *(__o->next_free)++ = 0;\t\t\t\t\t\t\\\n+     }\t\t\t\t\t\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_1grow(OBSTACK,datum)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    if (__o->next_free + 1 > __o->chunk_limit)\t\t\t\t\\\n      _obstack_newchunk (__o, 1);\t\t\t\t\t\\\n-   *(__o->next_free)++ = (datum);\t\t\t\t\t\\\n+   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n+     *(__o->next_free)++ = (datum);\t\t\t\t\t\\\n    (void) 0; })\n \n /* These assume that the obstack alignment is good enough for pointers or ints,\n@@ -419,15 +377,17 @@ __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    if (__o->next_free + sizeof (void *) > __o->chunk_limit)\t\t\\\n      _obstack_newchunk (__o, sizeof (void *));\t\t\t\t\\\n-   *((void **)__o->next_free)++ = ((void *)datum);\t\t\t\\\n+   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n+     *((void **)__o->next_free)++ = ((void *)datum);\t\t\t\\\n    (void) 0; })\n \n #define obstack_int_grow(OBSTACK,datum)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o = (OBSTACK);\t\t\t\t\t\\\n    if (__o->next_free + sizeof (int) > __o->chunk_limit)\t\t\\\n      _obstack_newchunk (__o, sizeof (int));\t\t\t\t\\\n-   *((int *)__o->next_free)++ = ((int)datum);\t\t\t\t\\\n+   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n+     *((int *)__o->next_free)++ = ((int)datum);\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_ptr_grow_fast(h,aptr) (*((void **) (h)->next_free)++ = (void *)aptr)\n@@ -439,7 +399,8 @@ __extension__\t\t\t\t\t\t\t\t\\\n    int __len = (length);\t\t\t\t\t\t\\\n    if (__o->chunk_limit - __o->next_free < __len)\t\t\t\\\n      _obstack_newchunk (__o, __len);\t\t\t\t\t\\\n-   __o->next_free += __len;\t\t\t\t\t\t\\\n+   if (!__o->alloc_failed)\t\t\t\t\t\t\\\n+     __o->next_free += __len;\t\t\t\t\t\t\\\n    (void) 0; })\n \n #define obstack_alloc(OBSTACK,length)\t\t\t\t\t\\\n@@ -466,16 +427,21 @@ __extension__\t\t\t\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\t\\\n ({ struct obstack *__o1 = (OBSTACK);\t\t\t\t\t\\\n    void *value;\t\t\t\t\t\t\t\t\\\n-   value = (void *) __o1->object_base;\t\t\t\t\t\\\n-   if (__o1->next_free == value)\t\t\t\t\t\\\n-     __o1->maybe_empty_object = 1;\t\t\t\t\t\\\n-   __o1->next_free\t\t\t\t\t\t\t\\\n-     = __INT_TO_PTR ((__PTR_TO_INT (__o1->next_free)+__o1->alignment_mask)\\\n-\t\t     & ~ (__o1->alignment_mask));\t\t\t\\\n-   if (__o1->next_free - (char *)__o1->chunk\t\t\t\t\\\n-       > __o1->chunk_limit - (char *)__o1->chunk)\t\t\t\\\n-     __o1->next_free = __o1->chunk_limit;\t\t\t\t\\\n-   __o1->object_base = __o1->next_free;\t\t\t\t\t\\\n+   if (__o1->alloc_failed)\t\t\t\t\t\t\\\n+     value = 0;\t\t\t\t\t\t\t\t\\\n+   else\t\t\t\t\t\t\t\t\t\\\n+     {\t\t\t\t\t\t\t\t\t\\\n+       value = (void *) __o1->object_base;\t\t\t\t\\\n+       if (__o1->next_free == value)\t\t\t\t\t\\\n+         __o1->maybe_empty_object = 1;\t\t\t\t\t\\\n+       __o1->next_free\t\t\t\t\t\t\t\\\n+\t = __INT_TO_PTR ((__PTR_TO_INT (__o1->next_free)+__o1->alignment_mask)\\\n+\t\t\t & ~ (__o1->alignment_mask));\t\t\t\\\n+       if (__o1->next_free - (char *)__o1->chunk\t\t\t\\\n+\t   > __o1->chunk_limit - (char *)__o1->chunk)\t\t\t\\\n+\t __o1->next_free = __o1->chunk_limit;\t\t\t\t\\\n+       __o1->object_base = __o1->next_free;\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n    value; })\n \n #define obstack_free(OBSTACK, OBJ)\t\t\t\t\t\\\n@@ -489,7 +455,7 @@ __extension__\t\t\t\t\t\t\t\t\\\n #else /* not __GNUC__ or not __STDC__ */\n \n #define obstack_object_size(h) \\\n- (unsigned) ((h)->next_free - (h)->object_base)\n+ (unsigned) ((h)->alloc_failed ? 0 : (h)->next_free - (h)->object_base)\n \n #define obstack_room(h)\t\t\\\n  (unsigned) ((h)->chunk_limit - (h)->next_free)\n@@ -500,40 +466,40 @@ __extension__\t\t\t\t\t\t\t\t\\\n    Casting the third operand to void was tried before,\n    but some compilers won't accept it.  */\n \n-#define obstack_make_room(h,length)\t\t\t\t\t\\\n-( (h)->temp = (length),\t\t\t\t\t\t\t\\\n-  (((h)->next_free + (h)->temp > (h)->chunk_limit)\t\t\t\\\n-   ? (_obstack_newchunk ((h), (h)->temp), 0) : 0))\n-\n #define obstack_grow(h,where,length)\t\t\t\t\t\\\n ( (h)->temp = (length),\t\t\t\t\t\t\t\\\n   (((h)->next_free + (h)->temp > (h)->chunk_limit)\t\t\t\\\n    ? (_obstack_newchunk ((h), (h)->temp), 0) : 0),\t\t\t\\\n-  _obstack_memcpy ((h)->next_free, (char *) (where), (h)->temp),\t\\\n-  (h)->next_free += (h)->temp)\n+  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  (bcopy ((char *) (where), (h)->next_free, (h)->temp),\t\t\t\\\n+  (h)->next_free += (h)->temp)))\n \n #define obstack_grow0(h,where,length)\t\t\t\t\t\\\n ( (h)->temp = (length),\t\t\t\t\t\t\t\\\n   (((h)->next_free + (h)->temp + 1 > (h)->chunk_limit)\t\t\t\\\n    ? (_obstack_newchunk ((h), (h)->temp + 1), 0) : 0),\t\t\t\\\n-  _obstack_memcpy ((h)->next_free, (char *) (where), (h)->temp),\t\\\n+  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  (bcopy ((char *) (where), (h)->next_free, (h)->temp),\t\t\t\\\n   (h)->next_free += (h)->temp,\t\t\t\t\t\t\\\n-  *((h)->next_free)++ = 0)\n+  *((h)->next_free)++ = 0)))\n \n #define obstack_1grow(h,datum)\t\t\t\t\t\t\\\n ( (((h)->next_free + 1 > (h)->chunk_limit)\t\t\t\t\\\n    ? (_obstack_newchunk ((h), 1), 0) : 0),\t\t\t\t\\\n-  (*((h)->next_free)++ = (datum)))\n+ ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  (*((h)->next_free)++ = (datum))))\n \n #define obstack_ptr_grow(h,datum)\t\t\t\t\t\\\n ( (((h)->next_free + sizeof (char *) > (h)->chunk_limit)\t\t\\\n    ? (_obstack_newchunk ((h), sizeof (char *)), 0) : 0),\t\t\\\n-  (*((char **) (((h)->next_free+=sizeof(char *))-sizeof(char *))) = ((char *) datum)))\n+  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  (*((char **) (((h)->next_free+=sizeof(char *))-sizeof(char *))) = ((char *) datum))))\n \n #define obstack_int_grow(h,datum)\t\t\t\t\t\\\n ( (((h)->next_free + sizeof (int) > (h)->chunk_limit)\t\t\t\\\n    ? (_obstack_newchunk ((h), sizeof (int)), 0) : 0),\t\t\t\\\n-  (*((int *) (((h)->next_free+=sizeof(int))-sizeof(int))) = ((int) datum)))\n+  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  (*((int *) (((h)->next_free+=sizeof(int))-sizeof(int))) = ((int) datum))))\n \n #define obstack_ptr_grow_fast(h,aptr) (*((char **) (h)->next_free)++ = (char *) aptr)\n #define obstack_int_grow_fast(h,aint) (*((int *) (h)->next_free)++ = (int) aint)\n@@ -542,7 +508,8 @@ __extension__\t\t\t\t\t\t\t\t\\\n ( (h)->temp = (length),\t\t\t\t\t\t\t\\\n   (((h)->chunk_limit - (h)->next_free < (h)->temp)\t\t\t\\\n    ? (_obstack_newchunk ((h), (h)->temp), 0) : 0),\t\t\t\\\n-  ((h)->next_free += (h)->temp))\n+  ((h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  ((h)->next_free += (h)->temp)))\n \n #define obstack_alloc(h,length)\t\t\t\t\t\t\\\n  (obstack_blank ((h), (length)), obstack_finish ((h)))\n@@ -554,18 +521,19 @@ __extension__\t\t\t\t\t\t\t\t\\\n  (obstack_grow0 ((h), (where), (length)), obstack_finish ((h)))\n \n #define obstack_finish(h)  \t\t\t\t\t\t\\\n-( ((h)->next_free == (h)->object_base\t\t\t\t\t\\\n+( (h)->alloc_failed ? 0 :\t\t\t\t\t\t\\\n+  (((h)->next_free == (h)->object_base\t\t\t\t\t\\\n    ? (((h)->maybe_empty_object = 1), 0)\t\t\t\t\t\\\n    : 0),\t\t\t\t\t\t\t\t\\\n   (h)->temp = __PTR_TO_INT ((h)->object_base),\t\t\t\t\\\n   (h)->next_free\t\t\t\t\t\t\t\\\n     = __INT_TO_PTR ((__PTR_TO_INT ((h)->next_free)+(h)->alignment_mask)\t\\\n \t\t    & ~ ((h)->alignment_mask)),\t\t\t\t\\\n-  (((h)->next_free - (char *) (h)->chunk\t\t\t\t\\\n+  (((h)->next_free - (char *) (h)->chunk\t\t\t\t\t\\\n     > (h)->chunk_limit - (char *) (h)->chunk)\t\t\t\t\\\n    ? ((h)->next_free = (h)->chunk_limit) : 0),\t\t\t\t\\\n   (h)->object_base = (h)->next_free,\t\t\t\t\t\\\n-  __INT_TO_PTR ((h)->temp))\n+  __INT_TO_PTR ((h)->temp)))\n \n #if defined (__STDC__) && __STDC__\n #define obstack_free(h,obj)\t\t\t\t\t\t\\\n@@ -585,8 +553,4 @@ __extension__\t\t\t\t\t\t\t\t\\\n \n #endif /* not __GNUC__ or not __STDC__ */\n \n-#ifdef __cplusplus\n-}\t/* C++ */\n-#endif\n-\n-#endif /* obstack.h */\n+#endif /* not __OBSTACK_H__ */"}, {"sha": "d8471daafeae178194e05c866a174b5bf744a0cb", "filename": "gcc/pself.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpself.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1 @@\n+main(){char*p=\"main(){char*p=%c%s%c;(void)printf(p,34,p,34,10);}%c\";(void)printf(p,34,p,34,10);}"}, {"sha": "acdfc650583dbb4f9d219d82d71a45d63beae9d0", "filename": "gcc/pself1.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpself1.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1 @@\n+main(a){a=\"main(a){a=%c%s%c;printf(a,34,a,34);}\";printf(a,34,a,34);}\n\\ No newline at end of file"}, {"sha": "c88a8c1046d8b8240791a04a4df3b4d70f4e9fd4", "filename": "gcc/pself2.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpself2.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1 @@\n+main(){char*a=\"main(){char*a=%c%s%c;int b='%c';printf(a,b,a,b,b);}\";int b='\"';printf(a,b,a,b,b);}"}, {"sha": "dbdeac6e410482c60e703cee670ccf9a12517b81", "filename": "gcc/pself3.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fpself3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpself3.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1 @@\n+main(a){printf(a,34,a=\"main(a){printf(a,34,a=%c%s%c,34);}\",34);}"}, {"sha": "dd4fbf0e8befed8b66ff8f5c4b7dfe6a18fd18f8", "filename": "gcc/stab.def", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fstab.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fstab.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstab.def?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,21 +1,19 @@\n /* Table of DBX symbol codes for the GNU system.\n-   Copyright (C) 1988, 1997 Free Software Foundation, Inc.\n-   This file is part of the GNU C Library.\n+   Copyright (C) 1988 Free Software Foundation, Inc.\n \n-   The GNU C Library is free software; you can redistribute it and/or\n-   modify it under the terms of the GNU Library General Public License as\n-   published by the Free Software Foundation; either version 2 of the\n-   License, or (at your option) any later version.\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 1, or (at your option)\n+   any later version.\n \n-   The GNU C Library is distributed in the hope that it will be useful,\n+   This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   Library General Public License for more details.\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n \n-   You should have received a copy of the GNU Library General Public\n-   License along with the GNU C Library; see the file COPYING.LIB.  If not,\n-   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n-   Boston, MA 02111-1307, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* This contains contribution from Cygnus Support.  */\n \f"}, {"sha": "b855a969a59b1ebf5dd80b6450a3f0d100c9d9ee", "filename": "gcc/texinfo.tex", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftexinfo.tex?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,5 +1,5 @@\n %% TeX macros to handle Texinfo files.\n-%% $Id: texinfo.tex,v 2.217 1997/07/14 17:43:41 karl Exp karl $\n+%% $Id: texinfo.tex,v 1.1 1997/08/11 15:57:14 law Exp $\n \n %  Copyright (C) 1985, 86, 88, 90, 91, 92, 93,\n %                94, 95, 96, 97 Free Software Foundation, Inc.\n@@ -36,7 +36,7 @@\n \n % This automatically updates the version number based on RCS.\n \\def\\deftexinfoversion$#1: #2 ${\\def\\texinfoversion{#2}}\n-\\deftexinfoversion$Revision: 2.217 $\n+\\deftexinfoversion$Revision: 1.1 $\n \\message{Loading texinfo package [Version \\texinfoversion]:}\n \n % If in a .fmt file, print the version number"}, {"sha": "7f66487d5d4761a3cdc7197d32569b54a4898532", "filename": "gcc/tm.texi", "status": "modified", "additions": 207, "deletions": 28, "changes": 235, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -1,4 +1,4 @@\n-@c Copyright (C) 1988,89,92,93,94,96 Free Software Foundation, Inc.\n+@c Copyright (C) 1988,89,92,93,94,96,1997 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -764,6 +764,13 @@ Alignment required for a function entry point, in bits.\n @item BIGGEST_ALIGNMENT\n Biggest alignment that any data type can require on this machine, in bits.\n \n+@findex MINIMUM_ATOMIC_ALIGNMENT\n+@item MINIMUM_ATOMIC_ALIGNMENT\n+If defined, the smallest alignment, in bits, that can be given to an\n+object that can be referenced in one operation, without disturbing any\n+nearby object.  Normally, this is @code{BITS_PER_UNIT}, but may be larger\n+on machines that don't have byte or half-word store operations.\n+\n @findex BIGGEST_FIELD_ALIGNMENT\n @item BIGGEST_FIELD_ALIGNMENT\n Biggest alignment that any structure field can require on this machine,\n@@ -1720,6 +1727,15 @@ suitable for use as a base register in operand addresses.  It may be\n either a suitable hard register or a pseudo register that has been\n allocated such a hard register.\n \n+@findex REGNO_MODE_OK_FOR_BASE_P\n+@item REGNO_MODE_OK_FOR_BASE_P (@var{num}, @var{mode})\n+A C expression that is just like @code{REGNO_OK_FOR_BASE_P}, except that\n+that expression may examine the mode of the memory reference in\n+@var{mode}.  You should define this macro if the mode of the memory\n+reference affects whether a register may be used as a base register.  If\n+you define this macro, the compiler will use it instead of\n+@code{REGNO_OK_FOR_BASE_P}.\n+\n @findex REGNO_OK_FOR_INDEX_P\n @item REGNO_OK_FOR_INDEX_P (@var{num})\n A C expression which is nonzero if register number @var{num} is\n@@ -1900,16 +1916,17 @@ some machines have so few registers of certain classes that there\n would not be enough registers to use as spill registers if this were\n done.\n \n-Define @code{SMALL_REGISTER_CLASSES} on these machines.  When it is\n-defined, the compiler allows registers explicitly used in the rtl to be\n-used as spill registers but avoids extending the lifetime of these\n-registers.\n+Define @code{SMALL_REGISTER_CLASSES} to be an expression with a non-zero\n+value on these machines.  When this macro has a non-zero value, the\n+compiler allows registers explicitly used in the rtl to be used as spill\n+registers but avoids extending the lifetime of these registers.\n \n-It is always safe to define this macro, but if you unnecessarily define\n-it, you will reduce the amount of optimizations that can be performed in\n-some cases.  If you do not define this macro when it is required, the\n-compiler will run out of spill registers and print a fatal error\n-message.  For most machines, you should not define this macro.\n+It is always safe to define this macro with a non-zero value, but if you\n+unnecessarily define it, you will reduce the amount of optimizations\n+that can be performed in some cases.  If you do not define this macro\n+with a non-zero value when it is required, the compiler will run out of\n+spill registers and print a fatal error message.  For most machines, you\n+should not define this macro at all.\n \n @findex CLASS_LIKELY_SPILLED_P\n @item CLASS_LIKELY_SPILLED_P (@var{class})\n@@ -2011,6 +2028,7 @@ This describes the stack layout and calling conventions.\n \n @menu\n * Frame Layout::\n+* Stack Checking::\n * Frame Registers::\n * Elimination::\n * Stack Arguments::\n@@ -2110,15 +2128,119 @@ This macro will seldom need to be defined.\n @findex RETURN_ADDR_RTX\n @item RETURN_ADDR_RTX (@var{count}, @var{frameaddr})\n A C expression whose value is RTL representing the value of the return\n-address for the frame @var{count} steps up from the current frame.\n-@var{frameaddr} is the frame pointer of the @var{count} frame, or\n-the frame pointer of the @var{count} @minus{} 1 frame if\n+address for the frame @var{count} steps up from the current frame, after\n+the prologue.  @var{frameaddr} is the frame pointer of the @var{count}\n+frame, or the frame pointer of the @var{count} @minus{} 1 frame if\n @code{RETURN_ADDR_IN_PREVIOUS_FRAME} is defined.\n \n @findex RETURN_ADDR_IN_PREVIOUS_FRAME\n @item RETURN_ADDR_IN_PREVIOUS_FRAME\n Define this if the return address of a particular stack frame is accessed\n from the frame pointer of the previous stack frame.\n+\n+@findex INCOMING_RETURN_ADDR_RTX\n+@item INCOMING_RETURN_ADDR_RTX\n+A C expression whose value is RTL representing the location of the\n+incoming return address at the beginning of any function, before the\n+prologue.  This RTL is either a @code{REG}, indicating that the return\n+value is saved in @samp{REG}, or a @code{MEM} representing a location in\n+the stack.\n+\n+You only need to define this macro if you want to support call frame\n+debugging information like that provided by DWARF 2.\n+\n+@findex INCOMING_FRAME_SP_OFFSET\n+@item INCOMING_FRAME_SP_OFFSET\n+A C expression whose value is an integer giving the offset, in bytes,\n+from the value of the stack pointer register to the top of the stack\n+frame at the beginning of any function, before the prologue.  The top of\n+the frame is defined to be the value of the stack pointer in the\n+previous frame, just before the call instruction.\n+\n+You only need to define this macro if you want to support call frame\n+debugging information like that provided by DWARF 2.\n+@end table\n+\n+@node Stack Checking\n+@subsection Specifying How Stack Checking is Done\n+\n+GNU CC will check that stack references are within the boundaries of\n+the stack, if the @samp{-fstack-check} is specified, in one of three ways:\n+\n+@enumerate\n+@item\n+If the value of the @code{STACK_CHECK_BUILTIN} macro is nonzero, GNU CC\n+will assume that you have arranged for stack checking to be done at\n+appropriate places in the configuration files, e.g., in\n+@code{FUNCTION_PROLOGUE}.  GNU CC will do not other special processing.\n+\n+@item\n+If @code{STACK_CHECK_BUILTIN} is zero and you defined a named pattern\n+called @code{check_stack} in your @file{md} file, GNU CC will call that\n+pattern with one argument which is the address to compare the stack\n+value against.  You must arrange for this pattern to report an error if\n+the stack pointer is out of range.\n+\n+@item\n+If neither of the above are true, GNU CC will generate code to periodically\n+``probe'' the stack pointer using the values of the macros defined below.\n+@end enumerate\n+\n+Normally, you will use the default values of these macros, so GNU CC\n+will use the third approach.\n+\n+@table @code\n+@findex STACK_CHECK_BUILTIN\n+@item STACK_CHECK_BUILTIN\n+A nonzero value if stack checking is done by the configuration files in a\n+machine-dependent manner.  You should define this macro if stack checking \n+is require by the ABI of your machine or if you would like to have to stack \n+checking in some more efficient way than GNU CC's portable approach.\n+The default value of this macro is zero.\n+\n+@findex STACK_CHECK_PROBE_INTERVAL\n+@item STACK_CHECK_PROBE_INTERVAL\n+An integer representing the interval at which GNU CC must generate stack\n+probe instructions.  You will normally define this macro to be no larger\n+than the size of the ``guard pages'' at the end of a stack area.  The\n+default value of 4096 is suitable for most systems.\n+\n+@findex STACK_CHECK_PROBE_LOAD\n+@item STACK_CHECK_PROBE_LOAD\n+A integer which is nonzero if GNU CC should perform the stack probe \n+as a load instruction and zero if GNU CC should use a store instruction.\n+The default is zero, which is the most efficient choice on most systems.\n+\n+@findex STACK_CHECK_PROTECT\n+@item STACK_CHECK_PROTECT\n+The number of bytes of stack needed to recover from a stack overflow,\n+for languages where such a recovery is supported.  The default value of\n+75 words should be adequate for most machines.\n+\n+@findex STACK_CHECK_MAX_FRAME_SIZE\n+@item STACK_CHECK_MAX_FRAME_SIZE\n+The maximum size of a stack frame, in bytes.  GNU CC will generate probe\n+instructions in non-leaf functions to ensure at least this many bytes of\n+stack are available.  If a stack frame is larger than this size, stack\n+checking will not be reliable and GNU CC will issue a warning.  The\n+default is chosen so that GNU CC only generates one instruction on most\n+systems.  You should normally not change the default value of this macro.\n+\n+@findex STACK_CHECK_FIXED_FRAME_SIZE\n+@item STACK_CHECK_FIXED_FRAME_SIZE\n+GNU CC uses this value to generate the above warning message.  It\n+represents the amount of fixed frame used by a function, not including\n+space for any callee-saved registers, temporaries and user variables.\n+You need only specify an upper bound for this amount and will normally\n+use the default of four words.\n+\n+@findex STACK_CHECK_MAX_VAR_SIZE\n+@item STACK_CHECK_MAX_VAR_SIZE\n+The maximum size, in bytes, of an object that GNU CC will place in the\n+fixed area of the stack frame when the user specifies\n+@samp{-fstack-check}.\n+GNU CC computed the default from the values of the above macros and you will\n+normally not need to override that default.\n @end table\n \n @need 2000\n@@ -2455,7 +2577,7 @@ describes the function in question.  Normally it is a node of type\n From this it is possible to obtain the data types of the value and\n arguments (if known).\n \n-When a call to a library function is being considered, @var{funtype}\n+When a call to a library function is being considered, @var{fundecl}\n will contain an identifier node for the library function.  Thus, if\n you need to distinguish among various library functions, you can do so\n by their names.  Note that ``library function'' in this context means\n@@ -3130,12 +3252,10 @@ The @var{thunk_fndecl} is redundant.  (@var{delta} and @var{function}\n have already been extracted from it.)  It might possibly be useful on\n some targets, but probably not.\n \n-For many targets, the target-independent code in the C++ frontend will\n-be sufficient and you can leave this macro undefined.  You need to\n-define this macro if the code generated by default would clobber any of\n-the incoming arguments; this is only likely if parameters can be passed\n-in registers.  You should also define this macro if the default code is\n-sub-optimal.\n+If you do not define this macro, the target-independent code in the C++\n+frontend will generate a less efficient heavyweight thunk that calls\n+@var{function} instead of jumping to it.  The generic approach does\n+not support varargs.\n @end table\n \n @node Profiling\n@@ -3985,6 +4105,15 @@ controlled by @code{REG_OK_STRICT} as described above.  This usually\n requires two variant definitions, of which @code{REG_OK_STRICT}\n controls the one actually used.\n \n+@findex REG_MODE_OK_FOR_BASE_P\n+@item REG_MODE_OK_FOR_BASE_P (@var{x}, @var{mode})\n+A C expression that is just like @code{REG_OK_FOR_BASE_P}, except that\n+that expression may examine the mode of the memory reference in\n+@var{mode}.  You should define this macro if the mode of the memory\n+reference affects whether a register may be used as a base register.  If\n+you define this macro, the compiler will use it instead of\n+@code{REG_OK_FOR_BASE_P}.\n+\n @findex REG_OK_FOR_INDEX_P\n @item REG_OK_FOR_INDEX_P (@var{x})\n A C expression that is nonzero if @var{x} (assumed to be a @code{reg}\n@@ -4549,13 +4678,21 @@ Decode @var{sym_name} and store the real name part in @var{var}, sans\n the characters that encode section info.  Define this macro if\n @code{ENCODE_SECTION_INFO} alters the symbol's name string.\n \n+@findex UNIQUE_SECTION_P (@var{decl})\n+@item UNIQUE_SECTION_P (@var{decl})\n+A C expression which evaluates to true if @var{decl} should be placed\n+into a unique section for some target-specific reason.  If you do not\n+define this macro, the default is @samp{0}.  Note that the flag\n+@samp{-ffunction-sections} will also cause functions to be placed into\n+unique sections.\n+\n @findex UNIQUE_SECTION\n-@item UNIQUE_SECTION (@var{decl})\n-For objects going into their own sections, a C expression of the name of the\n-section, expressed as a STRING_CST node, to put @var{decl} into.  The\n-STRING_CST node must be allocated in the saveable obstack.  Function\n-@code{build_string} can be used to do this.  If you do not define this macro,\n-GNU CC will use the symbol name as the section name.\n+@item UNIQUE_SECTION (@var{decl}, @var{reloc})\n+A C statement to build up a unique section name, expressed as a\n+STRING_CST node, and assign it to @samp{DECL_SECTION_NAME (@var{decl})}.\n+@var{reloc} indicates whether the initial value of @var{exp} requires\n+link-time relocations.  If you do not define this macro, GNU CC will use\n+the symbol name prefixed by @samp{.} as the section name.\n @end table\n \n @node PIC\n@@ -4737,10 +4874,12 @@ A C statement to output something to the assembler file to handle a\n macro is not defined, nothing is output for a @samp{#ident} directive.\n \n @findex ASM_OUTPUT_SECTION_NAME\n-@item ASM_OUTPUT_SECTION_NAME (@var{stream}, @var{decl}, @var{name})\n+@item ASM_OUTPUT_SECTION_NAME (@var{stream}, @var{decl}, @var{name}, @var{reloc})\n A C statement to output something to the assembler file to switch to section\n @var{name} for object @var{decl} which is either a @code{FUNCTION_DECL}, a\n-@code{VAR_DECL} or @code{NULL_TREE}.  Some target formats do not support\n+@code{VAR_DECL} or @code{NULL_TREE}.  @var{reloc}\n+indicates whether the initial value of @var{exp} requires link-time\n+relocations.  Some target formats do not support\n arbitrary sections.  Do not define this macro in such cases.\n \n At present this macro is only used to support section attributes.\n@@ -4823,6 +4962,15 @@ If the assembler has a @code{.ascii} pseudo-op as found in the\n Berkeley Unix assembler, do not define the macro\n @code{ASM_OUTPUT_ASCII}.\n \n+@findex CONSTANT_POOL_BEFORE_FUNCTION\n+@item CONSTANT_POOL_BEFORE_FUNCTION\n+You may define this macro as a C expression.  You should define the\n+expression to have a non-zero value if GNU CC should output the constant\n+pool for a function before the code for the function, or a zero value if\n+GNU CC should output the constant pool after the function.  If you do\n+not define this macro, the usual case, GNU CC will output the constant\n+pool before the function.\n+\n @findex ASM_OUTPUT_POOL_PROLOGUE\n @item ASM_OUTPUT_POOL_PROLOGUE (@var{file} @var{funname} @var{fundecl} @var{size})\n A C statement to output assembler commands to define the start of the\n@@ -4863,6 +5011,24 @@ entry from being output a second time in the usual manner.\n \n You need not define this macro if it would do nothing.\n \n+@findex CONSTANT_AFTER_FUNCTION_P\n+@item CONSTANT_AFTER_FUNCTION_P (@var{exp})\n+Define this macro as a C expression which is nonzero if the constant\n+@var{exp}, of type @code{tree}, should be output after the code for a\n+function.  The compiler will normally output all constants before the\n+function; you need not define this macro if this is OK.\n+\n+@findex ASM_OUTPUT_POOL_EPILOGUE\n+@item ASM_OUTPUT_POOL_EPILOGUE (@var{file} @var{funname} @var{fundecl} @var{size})\n+A C statement to output assembler commands to at the end of the constant\n+pool for a function.  @var{funname} is a string giving the name of the\n+function.  Should the return type of the function be required, you can\n+obtain it via @var{fundecl}.  @var{size} is the size, in bytes, of the\n+constant pool that GNU CC wrote immediately before this call.\n+\n+If no constant-pool epilogue is required, the usual case, you need not\n+define this macro.\n+\n @findex IS_ASM_LOGICAL_LINE_SEPARATOR\n @item IS_ASM_LOGICAL_LINE_SEPARATOR (@var{C})\n Define this macro as a C expression which is nonzero if @var{C} is\n@@ -6274,6 +6440,12 @@ in response to the @samp{-g} option.\n Define this macro if GNU CC should produce dwarf version 2 format\n debugging output in response to the @samp{-g} option.\n \n+To support optional call frame debugging information, you must also\n+define @code{INCOMING_RETURN_ADDR_RTX} and either set\n+@code{RTX_FRAME_RELATED_P} on the prologue insns if you use RTL for the\n+prologue, or call @code{dwarf2out_def_cfa} and @code{dwarf2out_reg_save}\n+as appropriate from @code{FUNCTION_PROLOGUE} if you don't.\n+\n @findex PUT_SDB_@dots{}\n @item PUT_SDB_@dots{}\n Define these macros to override the assembler syntax for the special\n@@ -6906,6 +7078,13 @@ dependent processing between the second jump optimization pass and\n delayed branch scheduling.  On those machines, define this macro as a C\n statement to act on the code starting at @var{insn}.\n \n+@findex MULTIPLE_SYMBOL_SPACES\n+@item MULTIPLE_SYMBOL_SPACES\n+Define this macro if in some cases global symbols from one translation\n+unit may not be bound to undefined symbols in another translation unit\n+without user intervention.  For instance, under Microsoft Windows\n+symbols must be explicitly imported from shared libraries (DLLs).\n+\n @findex GIV_SORT_CRITERION\n @item GIV_SORT_CRITERION (@var{giv1}, @var{giv2})\n In some cases, the strength reduction optimization pass can produce better"}, {"sha": "b1829cb7c8173b6b3c70ede367d3b11e841cfaa2", "filename": "gcc/version.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861bb6c1b0958236ad93717f98d347aa6152bd09/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=861bb6c1b0958236ad93717f98d347aa6152bd09", "patch": "@@ -0,0 +1 @@\n+char *version_string = \"testgcc-2.7.90 970802 experimental\";"}]}