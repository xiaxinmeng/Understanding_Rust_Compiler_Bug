{"sha": "3f1b33737d6392133cdc0f86100d1d0df977a984", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxYjMzNzM3ZDYzOTIxMzNjZGMwZjg2MTAwZDFkMGRmOTc3YTk4NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-08-11T13:40:37Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-08-11T13:40:37Z"}, "message": "mark_spam.py: mark attachments as obsolete and rename them\n\n\t* mark_spam.py: Mark attachments as obsolete and rename them.\n\nFrom-SVN: r239368", "tree": {"sha": "61286bc50375e7a72fd6e65164bf51c0c8037a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61286bc50375e7a72fd6e65164bf51c0c8037a8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f1b33737d6392133cdc0f86100d1d0df977a984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1b33737d6392133cdc0f86100d1d0df977a984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1b33737d6392133cdc0f86100d1d0df977a984", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1b33737d6392133cdc0f86100d1d0df977a984/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5953774463a728b111d685f9840ff6935229b8d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5953774463a728b111d685f9840ff6935229b8d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5953774463a728b111d685f9840ff6935229b8d6"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "6e1a0fc2d7b1d5ece16853d811572979e2d6312a", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1b33737d6392133cdc0f86100d1d0df977a984/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1b33737d6392133cdc0f86100d1d0df977a984/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=3f1b33737d6392133cdc0f86100d1d0df977a984", "patch": "@@ -1,3 +1,7 @@\n+2016-08-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* mark_spam.py: Mark attachments as obsolete and rename them.\n+\n 2016-08-03  Eric Gallager  <egall@gwmail.gwu.edu>\n \n \t* download_prerequisites: Explicitly remove existing symlinks"}, {"sha": "569a03dd9a78a361fc72910540bbbe4b5d2839f1", "filename": "contrib/mark_spam.py", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1b33737d6392133cdc0f86100d1d0df977a984/contrib%2Fmark_spam.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1b33737d6392133cdc0f86100d1d0df977a984/contrib%2Fmark_spam.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmark_spam.py?ref=3f1b33737d6392133cdc0f86100d1d0df977a984", "patch": "@@ -67,6 +67,18 @@ def mark_as_spam(id, api_key, verbose):\n         print(r)\n         print(r.text)\n \n+    # 4) mark all attachments as spam\n+    r = requests.get(u + '/attachment')\n+    response = json.loads(r.text)\n+    attachments = response['bugs'][str(id)]\n+    for a in attachments:\n+        attachment_id = a['id']\n+        url = '%sbug/attachment/%d' % (base_url, attachment_id)\n+        r = requests.put(url, json = {'ids': [attachment_id], 'summary': 'spam', 'comment': 'spam', 'is_obsolete': True, 'api_key': api_key})\n+        if verbose:\n+            print(r)\n+            print(r.text)\n+\n parser = argparse.ArgumentParser(description='Mark Bugzilla issues as spam.')\n parser.add_argument('api_key', help = 'API key')\n parser.add_argument('range', help = 'Range of IDs, e.g. 10-23,24,25,27')"}]}