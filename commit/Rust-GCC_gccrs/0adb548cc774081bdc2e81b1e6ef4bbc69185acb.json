{"sha": "0adb548cc774081bdc2e81b1e6ef4bbc69185acb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFkYjU0OGNjNzc0MDgxYmRjMmU4MWIxZTZlZjRiYmM2OTE4NWFjYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-06-20T17:29:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-06-20T17:29:49Z"}, "message": "haifa-sched.c (sched_analyze_1): Use free_list instead of zapping reg_last_uses directly.\n\n        * haifa-sched.c (sched_analyze_1): Use free_list instead of\n        zapping reg_last_uses directly.\n        (sched_analyze_2, sched_analyze_insn): Likewise.\n        (sched_analyze): Likewise.  Don't clear reg_last_uses on calls.\n\nFrom-SVN: r27622", "tree": {"sha": "c0fb7b7c9bc2bf7caf0e45841c5ce6fd08aac9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0fb7b7c9bc2bf7caf0e45841c5ce6fd08aac9c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0adb548cc774081bdc2e81b1e6ef4bbc69185acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adb548cc774081bdc2e81b1e6ef4bbc69185acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0adb548cc774081bdc2e81b1e6ef4bbc69185acb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0adb548cc774081bdc2e81b1e6ef4bbc69185acb/comments", "author": null, "committer": null, "parents": [{"sha": "2f76d42cf7ac1d8c7e38e4c46668dbf6be9ac3c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f76d42cf7ac1d8c7e38e4c46668dbf6be9ac3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f76d42cf7ac1d8c7e38e4c46668dbf6be9ac3c0"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "92370d3b30f57d1b0fef784a323d9245853ac707", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0adb548cc774081bdc2e81b1e6ef4bbc69185acb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0adb548cc774081bdc2e81b1e6ef4bbc69185acb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0adb548cc774081bdc2e81b1e6ef4bbc69185acb", "patch": "@@ -1,3 +1,10 @@\n+Sun Jun 20 17:27:20 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* haifa-sched.c (sched_analyze_1): Use free_list instead of \n+\tzapping reg_last_uses directly.\n+\t(sched_analyze_2, sched_analyze_insn): Likewise.\n+\t(sched_analyze): Likewise.  Don't clear reg_last_uses on calls.\n+\n Sun Jun 20 16:57:29 1999  David Edelsohn  <edelsohn@gnu.org>\n \n \t* rs6000.md (movdf_hardfloat32): Use worst case insn length"}, {"sha": "7af338aad9c33cc6d56e6c868b0824fad52cea13", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0adb548cc774081bdc2e81b1e6ef4bbc69185acb/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0adb548cc774081bdc2e81b1e6ef4bbc69185acb/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=0adb548cc774081bdc2e81b1e6ef4bbc69185acb", "patch": "@@ -3366,7 +3366,7 @@ sched_analyze_1 (x, insn)\n \t\t but sets must be ordered with respect to a pending clobber. */\n \t      if (code == SET)\n \t\t{\n-\t          reg_last_uses[regno + i] = 0;\n+\t\t  free_list (&reg_last_uses[regno + i], &unused_insn_list);\n \t          for (u = reg_last_clobbers[regno + i]; u; u = XEXP (u, 1))\n \t\t    add_dependence (insn, XEXP (u, 0), REG_DEP_OUTPUT);\n \t          SET_REGNO_REG_SET (reg_pending_sets, regno + i);\n@@ -3393,7 +3393,7 @@ sched_analyze_1 (x, insn)\n \n \t  if (code == SET)\n \t    {\n-\t      reg_last_uses[regno] = 0;\n+\t      free_list (&reg_last_uses[regno], &unused_insn_list);\n \t      for (u = reg_last_clobbers[regno]; u; u = XEXP (u, 1))\n \t\tadd_dependence (insn, XEXP (u, 0), REG_DEP_OUTPUT);\n \t      SET_REGNO_REG_SET (reg_pending_sets, regno);\n@@ -3659,7 +3659,7 @@ sched_analyze_2 (x, insn)\n \t      {\n \t\tfor (u = reg_last_uses[i]; u; u = XEXP (u, 1))\n \t\t  add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n-\t\treg_last_uses[i] = 0;\n+\t\tfree_list (&reg_last_uses[i], &unused_insn_list);\n \n \t\tfor (u = reg_last_sets[i]; u; u = XEXP (u, 1))\n \t\t  add_dependence (insn, XEXP (u, 0), 0);\n@@ -3792,7 +3792,7 @@ sched_analyze_insn (x, insn, loop_notes)\n \t      rtx u;\n \t      for (u = reg_last_uses[i]; u; u = XEXP (u, 1))\n \t\tadd_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n-\t      reg_last_uses[i] = 0;\n+\t      free_list (&reg_last_uses[i], &unused_insn_list);\n \n \t      for (u = reg_last_sets[i]; u; u = XEXP (u, 1))\n \t\tadd_dependence (insn, XEXP (u, 0), 0);\n@@ -3924,8 +3924,7 @@ sched_analyze (head, tail)\n \t\t{\n \t\t  for (u = reg_last_uses[i]; u; u = XEXP (u, 1))\n \t\t    add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n-\n-\t\t  reg_last_uses[i] = 0;\n+\t\t  free_list (&reg_last_uses[i], &unused_insn_list);\n \n \t\t  for (u = reg_last_sets[i]; u; u = XEXP (u, 1))\n \t\t    add_dependence (insn, XEXP (u, 0), 0);\n@@ -3952,7 +3951,6 @@ sched_analyze (head, tail)\n \t\t  {\n \t\t    for (u = reg_last_uses[i]; u; u = XEXP (u, 1))\n \t\t      add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);\n-\t\t    reg_last_uses[i] = 0;\n \n \t\t    for (u = reg_last_sets[i]; u; u = XEXP (u, 1))\n \t\t      add_dependence (insn, XEXP (u, 0), REG_DEP_ANTI);"}]}