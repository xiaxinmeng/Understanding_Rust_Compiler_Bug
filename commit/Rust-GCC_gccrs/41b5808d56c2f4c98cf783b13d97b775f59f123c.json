{"sha": "41b5808d56c2f4c98cf783b13d97b775f59f123c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiNTgwOGQ1NmMyZjRjOThjZjc4M2IxM2Q5N2I3NzVmNTlmMTIzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-04-16T08:24:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-04-16T08:24:47Z"}, "message": "re PR tree-optimization/90090 (ICE in mark_reachable_handlers, at tree-eh.c:3938 since r219202)\n\n\tPR tree-optimization/90090\n\t* tree-ssa-math-opts.c (is_division_by): Ignore divisions that can\n\tthrow internally.\n\t(is_division_by_square): Likewise.  Formatting fix.\n\n\t* g++.dg/opt/pr90090.C: New test.\n\nFrom-SVN: r270379", "tree": {"sha": "212872291e47b07d629097936e07b6e9f7822816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/212872291e47b07d629097936e07b6e9f7822816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b5808d56c2f4c98cf783b13d97b775f59f123c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b5808d56c2f4c98cf783b13d97b775f59f123c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b5808d56c2f4c98cf783b13d97b775f59f123c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b5808d56c2f4c98cf783b13d97b775f59f123c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8c996ec644d4dfa8d067f822ba63b3e4a3a17ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c996ec644d4dfa8d067f822ba63b3e4a3a17ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c996ec644d4dfa8d067f822ba63b3e4a3a17ef8"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "7e1e60ca86e31dda37789bc088bfce7d1acd59be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41b5808d56c2f4c98cf783b13d97b775f59f123c", "patch": "@@ -1,3 +1,10 @@\n+2019-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/90090\n+\t* tree-ssa-math-opts.c (is_division_by): Ignore divisions that can\n+\tthrow internally.\n+\t(is_division_by_square): Likewise.  Formatting fix.\n+\n 2019-04-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56049"}, {"sha": "d2e07721f6eb15af2a3e74310ebbdef67379e6d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41b5808d56c2f4c98cf783b13d97b775f59f123c", "patch": "@@ -1,3 +1,8 @@\n+2019-04-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/90090\n+\t* g++.dg/opt/pr90090.C: New test.\n+\n 2019-04-16  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56049"}, {"sha": "f60a888733f72c8643b6d9cc478dc9be1ad4f2cb", "filename": "gcc/testsuite/g++.dg/opt/pr90090.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr90090.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr90090.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr90090.C?ref=41b5808d56c2f4c98cf783b13d97b775f59f123c", "patch": "@@ -0,0 +1,19 @@\n+// PR tree-optimization/90090\n+// { dg-do compile }\n+// { dg-options \"-Ofast -fno-associative-math -fsignaling-nans -fno-tree-dce -fnon-call-exceptions\" }\n+\n+double bar (double, double, double, double, double);\n+double baz ();\n+\n+double\n+foo (double a)\n+{\n+  try\n+    {\n+      return bar (1.0/a, 2.0/a, 4.0/a, 8.0/a, 16.0/a);\n+    }\n+  catch (...)\n+    {\n+      return baz ();\n+    }\n+}"}, {"sha": "b7bbde4e40288c1a3f93e06273652454f7ed0899", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b5808d56c2f4c98cf783b13d97b775f59f123c/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=41b5808d56c2f4c98cf783b13d97b775f59f123c", "patch": "@@ -334,7 +334,8 @@ is_division_by (gimple *use_stmt, tree def)\n \t /* Do not recognize x / x as valid division, as we are getting\n \t    confused later by replacing all immediate uses x in such\n \t    a stmt.  */\n-\t && gimple_assign_rhs1 (use_stmt) != def;\n+\t && gimple_assign_rhs1 (use_stmt) != def\n+\t && !stmt_can_throw_internal (cfun, use_stmt);\n }\n \n /* Return TRUE if USE_STMT is a multiplication of DEF by A.  */\n@@ -367,13 +368,12 @@ is_division_by_square (gimple *use_stmt, tree def)\n {\n   if (gimple_code (use_stmt) == GIMPLE_ASSIGN\n       && gimple_assign_rhs_code (use_stmt) == RDIV_EXPR\n-      && gimple_assign_rhs1 (use_stmt) != gimple_assign_rhs2 (use_stmt))\n+      && gimple_assign_rhs1 (use_stmt) != gimple_assign_rhs2 (use_stmt)\n+      && !stmt_can_throw_internal (cfun, use_stmt))\n     {\n       tree denominator = gimple_assign_rhs2 (use_stmt);\n       if (TREE_CODE (denominator) == SSA_NAME)\n-\t{\n-\t  return is_square_of (SSA_NAME_DEF_STMT (denominator), def);\n-\t}\n+\treturn is_square_of (SSA_NAME_DEF_STMT (denominator), def);\n     }\n   return 0;\n }"}]}