{"sha": "adc840379952b3a5649417d1d20d68f0d65e60ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjODQwMzc5OTUyYjNhNTY0OTQxN2QxZDIwZDY4ZjBkNjVlNjBiYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-08-10T19:58:16Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-08-10T19:58:16Z"}, "message": "PR81738: Split vect-alias-check-6.c\n\nThe second loop in the testcase only vectorises if we can reverse\na vector and if aligned loads aren't required.\n\n2017-08-10  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/testsuite/\n\tPR testsuite/81738\n\t* gcc.dg/vect/vect-alias-check-6.c: Move second function to...\n\t* gcc.dg/vect/vect-alias-check-7.c: ...this new file.  Require\n\tvect_perm and vect_element_align for vectorization.\n\nFrom-SVN: r251037", "tree": {"sha": "0f420f962ebfee166515cae7953d64374200dda6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f420f962ebfee166515cae7953d64374200dda6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adc840379952b3a5649417d1d20d68f0d65e60ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc840379952b3a5649417d1d20d68f0d65e60ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc840379952b3a5649417d1d20d68f0d65e60ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc840379952b3a5649417d1d20d68f0d65e60ba/comments", "author": null, "committer": null, "parents": [{"sha": "339922f4e10dde8a09dadcb8af2099f8ee7d30d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/339922f4e10dde8a09dadcb8af2099f8ee7d30d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/339922f4e10dde8a09dadcb8af2099f8ee7d30d8"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "da63e03ae44d556fe4d1ad1c57e357e5b310dff3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc840379952b3a5649417d1d20d68f0d65e60ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc840379952b3a5649417d1d20d68f0d65e60ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=adc840379952b3a5649417d1d20d68f0d65e60ba", "patch": "@@ -1,3 +1,10 @@\n+2017-08-10  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR testsuite/81738\n+\t* gcc.dg/vect/vect-alias-check-6.c: Move second function to...\n+\t* gcc.dg/vect/vect-alias-check-7.c: ...this new file.  Require\n+\tvect_perm and vect_element_align for vectorization.\n+\n 2017-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/81736"}, {"sha": "5bb78f8ad5cf7912aff5284351e2ce0156aeaf94", "filename": "gcc/testsuite/gcc.dg/vect/vect-alias-check-6.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc840379952b3a5649417d1d20d68f0d65e60ba/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc840379952b3a5649417d1d20d68f0d65e60ba/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-6.c?ref=adc840379952b3a5649417d1d20d68f0d65e60ba", "patch": "@@ -12,12 +12,5 @@ f1 (struct s *a, struct s *b)\n     a->x[i + 1] += b->x[i];\n }\n \n-void\n-f2 (struct s *a, struct s *b)\n-{\n-  for (int i = 0; i < N; ++i)\n-    a->x[i] += b->x[N - i - 1];\n-}\n-\n-/* { dg-final { scan-tree-dump-times {checking that [^\\n]* and [^\\n]* have different addresses} 2 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"LOOP VECTORIZED\" 2 \"vect\" } } */\n+/* { dg-final { scan-tree-dump {checking that [^\\n]* and [^\\n]* have different addresses} \"vect\" } } */\n+/* { dg-final { scan-tree-dump \"LOOP VECTORIZED\" \"vect\" } } */"}, {"sha": "812349de914d56850cf55d594ccacdf77b108284", "filename": "gcc/testsuite/gcc.dg/vect/vect-alias-check-7.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc840379952b3a5649417d1d20d68f0d65e60ba/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc840379952b3a5649417d1d20d68f0d65e60ba/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-alias-check-7.c?ref=adc840379952b3a5649417d1d20d68f0d65e60ba", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+#define N 16\n+\n+struct s { int x[N]; };\n+\n+void\n+f1 (struct s *a, struct s *b)\n+{\n+  for (int i = 0; i < N; ++i)\n+    a->x[i] += b->x[N - i - 1];\n+}\n+\n+/* { dg-final { scan-tree-dump {checking that [^\\n]* and [^\\n]* have different addresses} \"vect\" } } */\n+/* { dg-final { scan-tree-dump \"LOOP VECTORIZED\" \"vect\" { target { vect_perm && vect_element_align } } } } */"}]}