{"sha": "f28e93a8a563dc2202264ffef34e129e8ce5eeef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4ZTkzYThhNTYzZGMyMjAyMjY0ZmZlZjM0ZTEyOWU4Y2U1ZWVlZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-10-26T13:56:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-10-26T13:56:42Z"}, "message": "Properly align parameters on stack for x86.\n\ngcc/\n\n2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44948\n\t* config/i386/i386.c (ix86_old_function_arg_boundary): New.\n\t(ix86_function_arg_boundary): Always align parameters on stack\n\tin 64bit and align parameters with alignment >= 16byte on stack \n\tin 32bit.  Warn alignment change.\n\ngcc/testsuite/\n\n2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44948\n\t* g++.dg/abi/param2.C: Add -Wno-psabi for ilp32 x86.\n\t* g++.dg/vect/pr33860a.cc: Likewise.\n\t* gcc.c-torture/compile/20070522-1.c: Likewise.\n\t* gcc.dg/compat/struct-align-1_x.c: Likewise.\n\t* gcc.dg/compat/struct-align-1_y.c: Likewise.\n\t* gcc.dg/compat/struct-align-2_x.c: Likewise.\n\t* gcc.dg/compat/struct-align-2_y.c: Likewise.\n\t* gcc.dg/pr44136.c: Likewise.\n\n\t* gcc.c-torture/compile/pr33617.c: Add -Wno-psabi for x86.\n\t* gcc.dg/compat/vector-1_x.c: Likewise.\n\t* gcc.dg/compat/vector-1_y.c: Likewise.\n\t* gcc.dg/compat/vector-2_x.c: Likewise.\n\t* gcc.dg/compat/vector-2_y.c: Likewise.\n\t* gcc.dg/pr43300.c: Likewise.\n\n\t* gcc.dg/compat/vector-1a_x.c: Add -Wno-psabi.\n\t* gcc.dg/compat/vector-1a_y.c: Likewise.\n\t* gcc.dg/compat/vector-1b_x.c: Likewise.\n\t* gcc.dg/compat/vector-1b_y.c: Likewise.\n\t* gcc.dg/compat/vector-2a_x.c: Likewise.\n\t* gcc.dg/compat/vector-2a_y.c: Likewise.\n\t* gcc.dg/compat/vector-2b_x.c: Likewise.\n\t* gcc.dg/compat/vector-2b_y.c: Likewise.\n\t* gcc.target/i386/pr39162.c: Likewise.\n\t* gcc.target/i386/pr40906-2.c: Likewise.\n\t* gcc.target/i386/sse-5.c: Likewise.\n\n\t* gcc.dg/pr35442.c: Prune ABI change warnings.\n\n\t* gcc.c-torture/execute/pr38151.x: New.\n\t* gcc.target/i386/pr44948-1a.c: Likewise.\n\t* gcc.target/i386/pr44948-1b.c: Likewise.\n\t* gcc.target/i386/pr44948-2a.c: Likewise.\n\t* gcc.target/i386/pr44948-2b.c: Likewise.\n\nFrom-SVN: r165965", "tree": {"sha": "2c78afba269a3dd635960b56f043f279eb00af53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c78afba269a3dd635960b56f043f279eb00af53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f28e93a8a563dc2202264ffef34e129e8ce5eeef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28e93a8a563dc2202264ffef34e129e8ce5eeef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28e93a8a563dc2202264ffef34e129e8ce5eeef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28e93a8a563dc2202264ffef34e129e8ce5eeef/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76d8a30aaf0a266709be00a9e01148e60d803f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d8a30aaf0a266709be00a9e01148e60d803f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d8a30aaf0a266709be00a9e01148e60d803f1e"}], "stats": {"total": 234, "additions": 202, "deletions": 32}, "files": [{"sha": "922b1958702e39164c6cc494b3e76bcdb0b32921", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,11 @@\n+2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44948\n+\t* config/i386/i386.c (ix86_old_function_arg_boundary): New.\n+\t(ix86_function_arg_boundary): Always align parameters on stack\n+\tin 64bit and align parameters with alignment >= 16byte on stack \n+\tin 32bit.  Warn alignment change.\n+\n 2010-10-26  Ian Lance Taylor  <iant@google.com>\n \n \tPR middle-end/45687"}, {"sha": "6f3a898ee3cdbc6bcfaa4c611909eb616f82b210", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 45, "deletions": 17, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -6600,24 +6600,10 @@ contains_aligned_value_p (const_tree type)\n   return false;\n }\n \n-/* Gives the alignment boundary, in bits, of an argument with the\n-   specified mode and type.  */\n-\n-int\n-ix86_function_arg_boundary (enum machine_mode mode, const_tree type)\n+static int\n+ix86_old_function_arg_boundary (enum machine_mode mode, const_tree type,\n+\t\t\t\tint align)\n {\n-  int align;\n-  if (type)\n-    {\n-      /* Since the main variant type is used for call, we convert it to\n-\t the main variant type.  */\n-      type = TYPE_MAIN_VARIANT (type);\n-      align = TYPE_ALIGN (type);\n-    }\n-  else\n-    align = GET_MODE_ALIGNMENT (mode);\n-  if (align < PARM_BOUNDARY)\n-    align = PARM_BOUNDARY;\n   /* In 32bit, only _Decimal128 and __float128 are aligned to their\n      natural boundaries.  */\n   if (!TARGET_64BIT && mode != TDmode && mode != TFmode)\n@@ -6645,6 +6631,48 @@ ix86_function_arg_boundary (enum machine_mode mode, const_tree type)\n   return align;\n }\n \n+/* Gives the alignment boundary, in bits, of an argument with the\n+   specified mode and type.  */\n+\n+int\n+ix86_function_arg_boundary (enum machine_mode mode, const_tree type)\n+{\n+  int align;\n+  if (type)\n+    {\n+      /* Since the main variant type is used for call, we convert it to\n+\t the main variant type.  */\n+      type = TYPE_MAIN_VARIANT (type);\n+      align = TYPE_ALIGN (type);\n+    }\n+  else\n+    align = GET_MODE_ALIGNMENT (mode);\n+  if (align < PARM_BOUNDARY)\n+    align = PARM_BOUNDARY;\n+  else\n+    {\n+      static bool warned;\n+      int saved_align = align;\n+\n+      if (!TARGET_64BIT && align < 128)\n+\talign = PARM_BOUNDARY;\n+\n+      if (warn_psabi\n+\t  && !warned\n+\t  && align != ix86_old_function_arg_boundary (mode, type,\n+\t\t\t\t\t\t      saved_align))\n+\t{\n+\t  warned = true;\n+\t  inform (input_location,\n+\t\t  \"The ABI of passing parameter with %dbyte\"\n+\t\t  \" alignment has changed in GCC 4.6\",\n+\t\t  align / BITS_PER_UNIT);\n+\t}\n+    }\n+\n+  return align;\n+}\n+\n /* Return true if N is a possible register number of function value.  */\n \n static bool"}, {"sha": "60655c387d5e4b8ccc3336ec0706cc50a359eaed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,42 @@\n+2010-10-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44948\n+\t* g++.dg/abi/param2.C: Add -Wno-psabi for ilp32 x86.\n+\t* g++.dg/vect/pr33860a.cc: Likewise.\n+\t* gcc.c-torture/compile/20070522-1.c: Likewise.\n+\t* gcc.dg/compat/struct-align-1_x.c: Likewise.\n+\t* gcc.dg/compat/struct-align-1_y.c: Likewise.\n+\t* gcc.dg/compat/struct-align-2_x.c: Likewise.\n+\t* gcc.dg/compat/struct-align-2_y.c: Likewise.\n+\t* gcc.dg/pr44136.c: Likewise.\n+\n+\t* gcc.c-torture/compile/pr33617.c: Add -Wno-psabi for x86.\n+\t* gcc.dg/compat/vector-1_x.c: Likewise.\n+\t* gcc.dg/compat/vector-1_y.c: Likewise.\n+\t* gcc.dg/compat/vector-2_x.c: Likewise.\n+\t* gcc.dg/compat/vector-2_y.c: Likewise.\n+\t* gcc.dg/pr43300.c: Likewise.\n+\n+\t* gcc.dg/compat/vector-1a_x.c: Add -Wno-psabi.\n+\t* gcc.dg/compat/vector-1a_y.c: Likewise.\n+\t* gcc.dg/compat/vector-1b_x.c: Likewise.\n+\t* gcc.dg/compat/vector-1b_y.c: Likewise.\n+\t* gcc.dg/compat/vector-2a_x.c: Likewise.\n+\t* gcc.dg/compat/vector-2a_y.c: Likewise.\n+\t* gcc.dg/compat/vector-2b_x.c: Likewise.\n+\t* gcc.dg/compat/vector-2b_y.c: Likewise.\n+\t* gcc.target/i386/pr39162.c: Likewise.\n+\t* gcc.target/i386/pr40906-2.c: Likewise.\n+\t* gcc.target/i386/sse-5.c: Likewise.\n+\n+\t* gcc.dg/pr35442.c: Prune ABI change warnings.\n+\n+\t* gcc.c-torture/execute/pr38151.x: New.\n+\t* gcc.target/i386/pr44948-1a.c: Likewise.\n+\t* gcc.target/i386/pr44948-1b.c: Likewise.\n+\t* gcc.target/i386/pr44948-2a.c: Likewise.\n+\t* gcc.target/i386/pr44948-2b.c: Likewise.\n+\n 2010-10-26  Ian Lance Taylor  <iant@google.com>\n \n \tPR middle-end/45687"}, {"sha": "d28387ab3ccfb7ea67be0fb4ebe6e0b3f6757978", "filename": "gcc/testsuite/g++.dg/abi/param2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fparam2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fparam2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fparam2.C?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,6 +1,7 @@\n // PR target/20795\n // Test passing aligned empty aggregate\n // { dg-do compile }\n+// { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n \n struct S { union {} a; } __attribute__((aligned));\n "}, {"sha": "77e28226a441a2c68a9d71e3acccf38a453572fd", "filename": "gcc/testsuite/g++.dg/vect/pr33860a.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr33860a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr33860a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr33860a.cc?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,4 +1,6 @@\n /* { dg-do compile } */\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n /* Testcase by Martin Michlmayr <tbm@cyrius.com> */\n \n class Matrix"}, {"sha": "1e1e8020d32384a1baa352bf6da381df45a57ad2", "filename": "gcc/testsuite/gcc.c-torture/compile/20070522-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20070522-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20070522-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20070522-1.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n /* This was PR 31606, we were trying to use TImode to expand the\n    struct copy in SRA but TImode is not support on ia32. */\n "}, {"sha": "51c6f14431e7a8fffd6c5696cda8b1415b256418", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33617.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33617.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33617.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33617.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-w -Wno-psabi\" { target { i?86-*-* x86_64-*-* } } } */\n+\n typedef float V8SF __attribute__ ((vector_size (32)));\n void bar (V8SF);\n void"}, {"sha": "cb7b119b8cb171c2882eb5f6f6073ebf806f1b71", "filename": "gcc/testsuite/gcc.c-torture/execute/pr38151.x", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38151.x?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -0,0 +1,2 @@\n+set additional_flags \"-Wno-psabi\"\n+return 0"}, {"sha": "939db9d21e045b864f9b5b835a93f14759767228", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-1_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n #include \"compat-common.h\"\n #include \"struct-align-1.h\"\n "}, {"sha": "77cb0988067615845e39a4ab864341970ba2690c", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-1_y.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-1_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n #include \"compat-common.h\"\n #include \"struct-align-1.h\"\n "}, {"sha": "6bfc2226889543b240a1b930c2bdbfcde5f8f066", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-2_x.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n /* Disable this test for 16-bit targets.  */\n \n #include <limits.h>"}, {"sha": "2727015a0b8bd3c20d367e36d07f1e23cc12cce2", "filename": "gcc/testsuite/gcc.dg/compat/struct-align-2_y.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-align-2_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n /* Disable this test for 16-bit targets.  */\n \n #include <limits.h>"}, {"sha": "29a8170d1843f17ab20b6f1680290333695496d9", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_x.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-w\" } */\n+/* { dg-options \"-w -Wno-psabi\" { target { i?86-*-* x86_64-*-* } } } */\n \n #ifndef SKIP_ATTRIBUTE\n "}, {"sha": "284b98c71b2a29297df42d21c7849ffba4b26b0a", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_y.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-w\" } */\n+/* { dg-options \"-w -Wno-psabi\" { target { i?86-*-* x86_64-*-* } } } */\n \n #ifndef SKIP_ATTRIBUTE\n "}, {"sha": "1d39cec31944a80c0cd113a0e969fd7749c29721", "filename": "gcc/testsuite/gcc.dg/compat/vector-1a_x.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -msse2\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -msse2\" } */\n \n #include \"vector-1_x.c\""}, {"sha": "53b1a7ffe55bc0c362ebbc35604ab0915780224b", "filename": "gcc/testsuite/gcc.dg/compat/vector-1a_y.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1a_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -msse2\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -msse2\" } */\n \n #include \"vector-1_y.c\""}, {"sha": "f3f76ec39b6336a147fc9f2cf9355a3af8ee1012", "filename": "gcc/testsuite/gcc.dg/compat/vector-1b_x.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -mavx\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -mavx\" } */\n \n #include \"vector-1_x.c\""}, {"sha": "105282cac77ebfbd1e1573730a9348efcf7d13ee", "filename": "gcc/testsuite/gcc.dg/compat/vector-1b_y.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1b_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -mavx\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -mavx\" } */\n \n #include \"vector-1_y.c\""}, {"sha": "899a3ab11f51da0d2df75aef5d772b0e3cd13f3e", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_x.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,5 +1,6 @@\n /* { dg-options \"-w\" } */\n-/* { dg-options \"-w -mno-mmx\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-w -mno-mmx -Wno-psabi\" { target { i?86-*-* x86_64-*-* } } } */\n+\n \n #ifndef SKIP_ATTRIBUTE\n "}, {"sha": "a5ab241af2efa4ef1594678afce8ac2e9aa911ed", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_y.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,5 +1,5 @@\n /* { dg-options \"-w\" } */\n-/* { dg-options \"-w -mno-mmx\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-w -mno-mmx -Wno-psabi\" { target { i?86-*-* x86_64-*-* } } } */\n \n #ifndef SKIP_ATTRIBUTE\n "}, {"sha": "fb62bb8c9332f22722bca841abb57a0a2c6f6203", "filename": "gcc/testsuite/gcc.dg/compat/vector-2a_x.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -msse2\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -msse2\" } */\n \n #include \"vector-2_x.c\""}, {"sha": "7cdd195c80ba3db639def0bd48d50010fe9279e8", "filename": "gcc/testsuite/gcc.dg/compat/vector-2a_y.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2a_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -msse2\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -msse2\" } */\n \n #include \"vector-2_y.c\""}, {"sha": "71b36bea7cb4890d5f81a325fb2112940d02055b", "filename": "gcc/testsuite/gcc.dg/compat/vector-2b_x.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_x.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -mavx\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -mavx\" } */\n \n #include \"vector-2_x.c\""}, {"sha": "9c114bb145d2fd9c92711dd96af9c4e99eb252f7", "filename": "gcc/testsuite/gcc.dg/compat/vector-2b_y.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2b_y.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,3 +1,3 @@\n-/* { dg-options \"-w -mno-mmx -mavx\" } */\n+/* { dg-options \"-w -Wno-psabi -mno-mmx -mavx\" } */\n \n #include \"vector-2_y.c\""}, {"sha": "875cb0b31b66e0c86994e1895ca08e0b479cb41b", "filename": "gcc/testsuite/gcc.dg/pr35442.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35442.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35442.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35442.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -11,4 +11,4 @@ foo (A a)\n }\n \n /* Ignore a warning that is irrelevant to the purpose of this test.  */\n-/* { dg-prune-output \".*GCC vector passed by reference.*\" } */\n+/* { dg-prune-output \"(.*GCC vector passed by reference.*|.*ABI of * passing parameter with.*)\" } */"}, {"sha": "a3d66fe70fa2f11f9300ed751d50e95c026b8c4c", "filename": "gcc/testsuite/gcc.dg/pr43300.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr43300.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-Os -w\" } */\n+/* { dg-options \"-Os -w -Wno-psabi\" { target { i?86-*-* x86_64-*-* } } } */\n+\n typedef float V2SF __attribute__ ((vector_size (128)));\n \n V2SF"}, {"sha": "e053cf81105b7ff014ace28be3648986d96b0f7c", "filename": "gcc/testsuite/gcc.dg/pr44136.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,7 +1,7 @@\n /* PR debug/44136 */\n /* { dg-do compile } */\n /* { dg-options \"-w -O2 -g\" } */\n-/* { dg-options \"-w -O2 -g -mno-sse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-w -Wno-psabi -O2 -g -mno-sse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n #define vector __attribute((vector_size(16)))\n vector float a;"}, {"sha": "09ea615e8f2c6b716fca94f11f45446744d007b3", "filename": "gcc/testsuite/gcc.target/i386/pr39162.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39162.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -msse2 -mno-avx\" } */\n+/* { dg-options \"-O2 -Wno-psabi -msse2 -mno-avx\" } */\n \n typedef long long __m256i __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "f0eda001cd7483049b06d6ec0bb5ee507e51914a", "filename": "gcc/testsuite/gcc.target/i386/pr40906-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-2.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-require-effective-target ilp32 } */\n-/* { dg-options \"-O2 -fomit-frame-pointer -fno-asynchronous-unwind-tables -mpush-args -mno-accumulate-outgoing-args -m128bit-long-double\" } */\n+/* { dg-options \"-O2 -Wno-psabi -fomit-frame-pointer -fno-asynchronous-unwind-tables -mpush-args -mno-accumulate-outgoing-args -m128bit-long-double\" } */\n \n void abort (void);\n "}, {"sha": "db58c04c44f5272aca1ee3debf4493583bd99f72", "filename": "gcc/testsuite/gcc.target/i386/pr44948-1a.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-1a.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/44948 */\n+/* { dg-do run } */\n+/* { dg-options \"-O -Wno-psabi -mtune=generic\" } */\n+/* { dg-require-effective-target avx_runtime } */\n+/* { dg-additional-sources pr44948-1b.c } */\n+\n+#pragma GCC target (\"avx\")\n+\n+struct A { long b[8] __attribute__((aligned (32))); };\n+void foo (long double, struct A);\n+\n+int\n+main (void)\n+{\n+  struct A a = { { 0, 1, 2, 3, 4, 5, 6, 7 } };\n+  foo (8.0L, a);\n+  return 0;\n+}"}, {"sha": "1e2d4d3c51087dd07c847e117bd8ee3e353ae8ec", "filename": "gcc/testsuite/gcc.target/i386/pr44948-1b.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-1b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-1b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-1b.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mno-avx -Wno-psabi -mtune=generic\" } */\n+\n+struct A { long b[8] __attribute__((aligned (32))); };\n+\n+void\n+foo (long double x, struct A y)\n+{\n+  int i;\n+  if (x != 8.0L)\n+    __builtin_abort ();\n+  for (i = 0; i < 8; i++)\n+    if (y.b[i] != i)\n+      __builtin_abort ();\n+}"}, {"sha": "120346e3ea4997d6020eec3ead8daf627b3dd311", "filename": "gcc/testsuite/gcc.target/i386/pr44948-2a.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/44948 */\n+/* { dg-do run } */\n+/* { dg-options \"-O -Wno-psabi -mno-sse -mtune=generic\" } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target sse2_runtime } */\n+/* { dg-additional-sources pr44948-2b.c } */\n+\n+#pragma GCC target (\"sse2\")\n+\n+struct A\n+{ \n+  float V4SF __attribute__ ((vector_size (16)));\n+};\n+\n+int\n+main (void)\n+{\n+  struct A a = { { 0, 1, 2, 3 } };\n+  foo (8.0L, a, 8.0L);\n+  return 0;\n+}"}, {"sha": "fa1769b62fbb3a62a7d35f8245b1ea38cc2d7c4f", "filename": "gcc/testsuite/gcc.target/i386/pr44948-2b.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2b.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mno-sse -Wno-psabi -mtune=generic\" } */\n+\n+struct A\n+{ \n+  float V4SF __attribute__ ((vector_size (16)));\n+};\n+\n+void\n+foo (long double x, struct A y, long double z)\n+{\n+  int i;\n+  struct A a = { { 0, 1, 2, 3 } };\n+\n+  if (x != 8.0L || z != 8.0L)\n+    __builtin_abort ();\n+  if (__builtin_memcmp (&a, &y, sizeof (a)))\n+    __builtin_abort ();\n+}"}, {"sha": "934fad51b960fce3929e6b27d6c6ad4b75494f7f", "filename": "gcc/testsuite/gcc.target/i386/sse-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f28e93a8a563dc2202264ffef34e129e8ce5eeef/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-5.c?ref=f28e93a8a563dc2202264ffef34e129e8ce5eeef", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i386\" } } */\n-/* { dg-options \"-Winline -O2 -march=i386\" } */\n+/* { dg-options \"-Winline -Wno-psabi -O2 -march=i386\" } */\n \n typedef double v2df __attribute__ ((vector_size (16)));\n v2df p;"}]}