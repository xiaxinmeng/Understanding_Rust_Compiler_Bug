{"sha": "4096bf82a0cda5f79d7e5921b73897f76e00a800", "node_id": "C_kwDOANBUbNoAKDQwOTZiZjgyYTBjZGE1Zjc5ZDdlNTkyMWI3Mzg5N2Y3NmUwMGE4MDA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-12T07:35:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-12T07:35:43Z"}, "message": "openmp: Add documentation for omp_{get_max, set_num}_threads and omp_{s, g}et_teams_thread_limit\n\nThis patch adds documentation for these new OpenMP 5.1 APIs as well as\ntwo new environment variables - OMP_NUM_TEAMS and OMP_TEAMS_THREAD_LIMIT.\n\n2021-10-12  Jakub Jelinek  <jakub@redhat.com>\n\n\t* libgomp.texi (omp_get_max_teams, omp_get_teams_thread_limit,\n\tomp_set_num_teams, omp_set_teams_thread_limit, OMP_NUM_TEAMS,\n\tOMP_TEAMS_THREAD_LIMIT): Document.", "tree": {"sha": "4c3fae379fb259e4eca2b42443f1cafcbcd8f131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c3fae379fb259e4eca2b42443f1cafcbcd8f131"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4096bf82a0cda5f79d7e5921b73897f76e00a800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4096bf82a0cda5f79d7e5921b73897f76e00a800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4096bf82a0cda5f79d7e5921b73897f76e00a800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4096bf82a0cda5f79d7e5921b73897f76e00a800/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de7fa7063e99d29b6cc2024a90a3755a1001a154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de7fa7063e99d29b6cc2024a90a3755a1001a154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de7fa7063e99d29b6cc2024a90a3755a1001a154"}], "stats": {"total": 154, "additions": 154, "deletions": 0}, "files": [{"sha": "bdd7e3ac442f4e1b07751e5d7e341595cd97d085", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4096bf82a0cda5f79d7e5921b73897f76e00a800/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4096bf82a0cda5f79d7e5921b73897f76e00a800/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=4096bf82a0cda5f79d7e5921b73897f76e00a800", "patch": "@@ -369,6 +369,7 @@ linkage, and do not throw exceptions.\n * omp_get_level::               Number of parallel regions\n * omp_get_max_active_levels::   Current maximum number of active regions\n * omp_get_max_task_priority::   Maximum task priority value that can be set\n+* omp_get_max_teams::           Maximum number of teams for teams region\n * omp_get_max_threads::         Maximum number of threads of parallel region\n * omp_get_nested::              Nested parallel regions\n * omp_get_num_devices::         Number of target devices\n@@ -380,6 +381,7 @@ linkage, and do not throw exceptions.\n * omp_get_supported_active_levels:: Maximum number of active regions supported\n * omp_get_team_num::            Get team number\n * omp_get_team_size::           Number of threads in a team\n+* omp_get_teams_thread_limit::  Maximum number of threads imposed by teams\n * omp_get_thread_limit::        Maximum number of threads\n * omp_get_thread_num::          Current thread ID\n * omp_in_parallel::             Whether a parallel region is active\n@@ -389,8 +391,10 @@ linkage, and do not throw exceptions.\n * omp_set_dynamic::             Enable/disable dynamic teams\n * omp_set_max_active_levels::   Limits the number of active parallel regions\n * omp_set_nested::              Enable/disable nested parallel regions\n+* omp_set_num_teams::           Set upper teams limit for teams region\n * omp_set_num_threads::         Set upper team size limit\n * omp_set_schedule::            Set the runtime scheduling method\n+* omp_set_teams_thread_limit::  Set upper thread limit for teams construct\n \n Initialize, set, test, unset and destroy simple and nested locks.\n \n@@ -684,6 +688,32 @@ This function obtains the maximum allowed priority number for tasks.\n @end table\n \n \n+@node omp_get_max_teams\n+@section @code{omp_get_max_teams} -- Maximum number of teams of teams region\n+@table @asis\n+@item @emph{Description}:\n+Return the maximum number of teams used for the teams region\n+that does not use the clause @code{num_teams}.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_max_teams(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_max_teams()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_set_num_teams}, @ref{omp_get_num_teams}\n+\n+@item @emph{Reference}:\n+@uref{https://www.openmp.org, OpenMP specification v5.1}, Section 3.4.4.\n+@end table\n+\n+\n+\n @node omp_get_max_threads\n @section @code{omp_get_max_threads} -- Maximum number of threads of parallel region\n @table @asis\n@@ -988,6 +1018,32 @@ to @code{omp_get_num_threads}.\n \n \n \n+@node omp_get_teams_thread_limit\n+@section @code{omp_get_teams_thread_limit} -- Maximum number of threads imposed by teams\n+@table @asis\n+@item @emph{Description}:\n+Return the maximum number of threads that will be able to participate in\n+each team created by a teams construct.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{int omp_get_teams_thread_limit(void);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{integer function omp_get_teams_thread_limit()}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{omp_set_teams_thread_limit}, @ref{OMP_TEAMS_THREAD_LIMIT}\n+\n+@item @emph{Reference}:\n+@uref{https://www.openmp.org, OpenMP specification v5.1}, Section 3.4.6.\n+@end table\n+\n+\n+\n @node omp_get_thread_limit\n @section @code{omp_get_thread_limit} -- Maximum number of threads\n @table @asis\n@@ -1232,6 +1288,34 @@ regions will set the maximum number of active nested regions to one.\n \n \n \n+@node omp_set_num_teams\n+@section @code{omp_set_num_teams} -- Set upper teams limit for teams construct\n+@table @asis\n+@item @emph{Description}:\n+Specifies the upper bound for number of teams created by the teams construct\n+which does not specify a @code{num_teams} clause.  The\n+argument of @code{omp_set_num_teams} shall be a positive integer.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{void omp_set_num_teams(int num_teams);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{subroutine omp_set_num_teams(num_teams)}\n+@item                   @tab @code{integer, intent(in) :: num_teams}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{OMP_NUM_TEAMS}, @ref{omp_get_num_teams}, @ref{omp_get_max_teams}\n+\n+@item @emph{Reference}:\n+@uref{https://www.openmp.org, OpenMP specification v5.1}, Section 3.4.3.\n+@end table\n+\n+\n+\n @node omp_set_num_threads\n @section @code{omp_set_num_threads} -- Set upper team size limit\n @table @asis\n@@ -1293,6 +1377,35 @@ For @code{omp_sched_auto} the @var{chunk_size} argument is ignored.\n \n \n \n+@node omp_set_teams_thread_limit\n+@section @code{omp_set_teams_thread_limit} -- Set upper thread limit for teams construct\n+@table @asis\n+@item @emph{Description}:\n+Specifies the upper bound for number of threads that will be available\n+for each team created by the teams construct which does not specify a\n+@code{thread_limit} clause.  The argument of\n+@code{omp_set_teams_thread_limit} shall be a positive integer.\n+\n+@item @emph{C/C++}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Prototype}: @tab @code{void omp_set_teams_thread_limit(int thread_limit);}\n+@end multitable\n+\n+@item @emph{Fortran}:\n+@multitable @columnfractions .20 .80\n+@item @emph{Interface}: @tab @code{subroutine omp_set_teams_thread_limit(thread_limit)}\n+@item                   @tab @code{integer, intent(in) :: thread_limit}\n+@end multitable\n+\n+@item @emph{See also}:\n+@ref{OMP_TEAMS_THREAD_LIMIT}, @ref{omp_get_teams_thread_limit}, @ref{omp_get_thread_limit}\n+\n+@item @emph{Reference}:\n+@uref{https://www.openmp.org, OpenMP specification v5.1}, Section 3.4.5.\n+@end table\n+\n+\n+\n @node omp_init_lock\n @section @code{omp_init_lock} -- Initialize simple lock\n @table @asis\n@@ -1682,12 +1795,14 @@ beginning with @env{GOMP_} are GNU extensions.\n * OMP_MAX_ACTIVE_LEVELS::   Set the maximum number of nested parallel regions\n * OMP_MAX_TASK_PRIORITY::   Set the maximum task priority value\n * OMP_NESTED::              Nested parallel regions\n+* OMP_NUM_TEAMS::           Specifies the number of teams to use by teams region\n * OMP_NUM_THREADS::         Specifies the number of threads to use\n * OMP_PROC_BIND::           Whether theads may be moved between CPUs\n * OMP_PLACES::              Specifies on which CPUs the theads should be placed\n * OMP_STACKSIZE::           Set default thread stack size\n * OMP_SCHEDULE::            How threads are scheduled\n * OMP_TARGET_OFFLOAD::      Controls offloading behaviour\n+* OMP_TEAMS_THREAD_LIMIT::  Set the maximum number of threads imposed by teams\n * OMP_THREAD_LIMIT::        Set the maximum number of threads\n * OMP_WAIT_POLICY::         How waiting threads are handled\n * GOMP_CPU_AFFINITY::       Bind threads to specific CPUs\n@@ -1840,6 +1955,25 @@ more than one item, otherwise they are disabled by default.\n \n \n \n+@node OMP_NUM_TEAMS\n+@section @env{OMP_NUM_TEAMS} -- Specifies the number of teams to use by teams region\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Specifies the upper bound for number of teams to use in teams regions\n+without explicit @code{num_teams} clause.  The value of this variable shall\n+be a positive integer.  If undefined it defaults to 0 which means\n+implementation defined upper bound.\n+\n+@item @emph{See also}:\n+@ref{omp_set_num_teams}\n+\n+@item @emph{Reference}: \n+@uref{https://www.openmp.org, OpenMP specification v5.1}, Section 6.23\n+@end table\n+\n+\n+\n @node OMP_NUM_THREADS\n @section @env{OMP_NUM_THREADS} -- Specifies the number of threads to use\n @cindex Environment Variable\n@@ -1998,6 +2132,26 @@ If undefined, then the program will behave as if @code{DEFAULT} was set.\n \n \n \n+@node OMP_TEAMS_THREAD_LIMIT\n+@section @env{OMP_TEAMS_THREAD_LIMIT} -- Set the maximum number of threads imposed by teams\n+@cindex Environment Variable\n+@table @asis\n+@item @emph{Description}:\n+Specifies an upper bound for the number of threads to use by each contention\n+group created by a teams construct without explicit @code{thread_limit}\n+clause.  The value of this variable shall be a positive integer.  If undefined,\n+the value of 0 is used which stands for an implementation defined upper\n+limit.\n+\n+@item @emph{See also}:\n+@ref{OMP_THREAD_LIMIT}, @ref{omp_set_teams_thread_limit}\n+\n+@item @emph{Reference}: \n+@uref{https://www.openmp.org, OpenMP specification v5.1}, Section 6.24\n+@end table\n+\n+\n+\n @node OMP_THREAD_LIMIT\n @section @env{OMP_THREAD_LIMIT} -- Set the maximum number of threads\n @cindex Environment Variable"}]}