{"sha": "ddcaa60983b50378bde1b7e327086fe0ce101795", "node_id": "C_kwDOANBUbNoAKGRkY2FhNjA5ODNiNTAzNzhiZGUxYjdlMzI3MDg2ZmUwY2UxMDE3OTU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-16T09:19:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-16T09:19:22Z"}, "message": "loop-invariant: Split preheader edge if the preheader bb ends with jump [PR106751]\n\nThe RTL loop passes only request simple preheaders, but don't require\nfallthru preheaders, while move_invariant_reg apparently assumes the\nlatter, that it can just append instruction(s) to the end of the preheader\nbasic block.\n\nThe following patch fixes that by splitting the preheader edge if\nthe preheader bb ends with a JUMP_INSN (asm goto in this case).\nWithout that we get control flow in the middle of a bb.\n\n2022-12-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/106751\n\t* loop-invariant.cc (move_invariant_reg): If preheader bb ends\n\twith a JUMP_INSN, split the preheader edge and emit invariants\n\tinto the new preheader basic block.\n\n\t* gcc.c-torture/compile/pr106751.c: New test.", "tree": {"sha": "dd51d1c19562c5344f193fdbd0d34ba48b25011a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd51d1c19562c5344f193fdbd0d34ba48b25011a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddcaa60983b50378bde1b7e327086fe0ce101795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddcaa60983b50378bde1b7e327086fe0ce101795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddcaa60983b50378bde1b7e327086fe0ce101795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddcaa60983b50378bde1b7e327086fe0ce101795/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/711e0acdbb2645f5a8aa89014488c24e89ccb0f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/711e0acdbb2645f5a8aa89014488c24e89ccb0f7"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "9b5f6cd3223c5105029b91417d5df3f206b1f003", "filename": "gcc/loop-invariant.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddcaa60983b50378bde1b7e327086fe0ce101795/gcc%2Floop-invariant.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddcaa60983b50378bde1b7e327086fe0ce101795/gcc%2Floop-invariant.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.cc?ref=ddcaa60983b50378bde1b7e327086fe0ce101795", "patch": "@@ -1837,6 +1837,8 @@ move_invariant_reg (class loop *loop, unsigned invno)\n       else if (dump_file)\n \tfprintf (dump_file, \"Invariant %d moved without introducing a new \"\n \t\t\t    \"temporary register\\n\", invno);\n+      if (JUMP_P (BB_END (preheader)))\n+\tpreheader = split_edge (loop_preheader_edge (loop));\n       reorder_insns (inv->insn, inv->insn, BB_END (preheader));\n       df_recompute_luids (preheader);\n "}, {"sha": "5fbf93bd332e83b8389e40375527da5b067c3a63", "filename": "gcc/testsuite/gcc.c-torture/compile/pr106751.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddcaa60983b50378bde1b7e327086fe0ce101795/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr106751.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddcaa60983b50378bde1b7e327086fe0ce101795/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr106751.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr106751.c?ref=ddcaa60983b50378bde1b7e327086fe0ce101795", "patch": "@@ -0,0 +1,17 @@\n+/* PR rtl-optimization/106751 */\n+\n+int *foo (void);\n+\n+void\n+bar (void)\n+{\n+  asm goto (\"\" : : : : lab);\n+  __builtin_unreachable ();\n+lab:\n+  while (1)\n+    {\n+      int o;\n+      asm (\"\" : \"=r\" (o) : \"g\" (1));\n+      *foo () = o;\n+    }\n+}"}]}