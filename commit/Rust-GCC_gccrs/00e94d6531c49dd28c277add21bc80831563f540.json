{"sha": "00e94d6531c49dd28c277add21bc80831563f540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBlOTRkNjUzMWM0OWRkMjhjMjc3YWRkMjFiYzgwODMxNTYzZjU0MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-21T22:20:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-21T22:20:06Z"}, "message": "(find_barrier): When hi_const returns true, increment count_si by two\nif found_si is true.\n\nFrom-SVN: r10495", "tree": {"sha": "f0d04bda36f876c83b13e0fe142fe6a0f0d7fb38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0d04bda36f876c83b13e0fe142fe6a0f0d7fb38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00e94d6531c49dd28c277add21bc80831563f540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e94d6531c49dd28c277add21bc80831563f540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e94d6531c49dd28c277add21bc80831563f540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e94d6531c49dd28c277add21bc80831563f540/comments", "author": null, "committer": null, "parents": [{"sha": "2ad79487e408912111b97d99e23b4a43905c7ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad79487e408912111b97d99e23b4a43905c7ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad79487e408912111b97d99e23b4a43905c7ab4"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "8d295156c5c4eaeaa0035cbccb12064d3456db69", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e94d6531c49dd28c277add21bc80831563f540/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e94d6531c49dd28c277add21bc80831563f540/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=00e94d6531c49dd28c277add21bc80831563f540", "patch": "@@ -1226,7 +1226,15 @@ find_barrier (from)\n \t  rtx src = SET_SRC (PATTERN (from));\n \n \t  if (hi_const (src))\n-\t    found_hi = 1;\n+\t    {\n+\t      found_hi = 1;\n+\t      /* We put the short constants before the long constants, so\n+\t\t we must count the length of short constants in the range\n+\t\t for the long constants.  */\n+\t      /* ??? This isn't optimal, but is easy to do.  */\n+\t      if (found_si)\n+\t\tcount_si += 2;\n+\t    }\n \t  else\n \t    found_si = 1;\n \t  inc = (GET_MODE_SIZE (GET_MODE (src)) > 4) ? 4 : 2;"}]}