{"sha": "28bc117f586fbb15b887e6517e2b08330fec91c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhiYzExN2Y1ODZmYmIxNWI4ODdlNjUxN2UyYjA4MzMwZmVjOTFjMA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-08T17:25:16Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-08T17:25:16Z"}, "message": "re PR fortran/68224 (ICE on referencing parameter array with dimension null)\n\n2015-11-08  Steven G. Kargl  <kargl@gc.gnu.org>\n\n\tPR fortran/68224\n\t* array.c (match_array_element_spec): Check of invalid NULL().\n\tWhile here, fix nearby comments.\n\n2015-11-08  Steven G. Kargl  <kargl@gc.gnu.org>\n\n\tPR fortran/68224\n\t* gfortran.dg/pr68224.f90: New test.\n\nFrom-SVN: r229955", "tree": {"sha": "33bd93fb2d8c3e55ff997e4e1fd14f6ff1b496e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33bd93fb2d8c3e55ff997e4e1fd14f6ff1b496e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28bc117f586fbb15b887e6517e2b08330fec91c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28bc117f586fbb15b887e6517e2b08330fec91c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28bc117f586fbb15b887e6517e2b08330fec91c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28bc117f586fbb15b887e6517e2b08330fec91c0/comments", "author": null, "committer": null, "parents": [{"sha": "57905c2bb3dc00409591f58a8e335cd16c2940ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57905c2bb3dc00409591f58a8e335cd16c2940ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57905c2bb3dc00409591f58a8e335cd16c2940ff"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "21534d286287cf3106a04ba61ef9211918a46403", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=28bc117f586fbb15b887e6517e2b08330fec91c0", "patch": "@@ -1,3 +1,9 @@\n+2015-11-08  Steven G. Kargl  <kargl@gc.gnu.org>\n+\n+\tPR fortran/68224\n+\t* array.c (match_array_element_spec): Check of invalid NULL().\n+\tWhile here, fix nearby comments.\n+\n 2015-11-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/68196"}, {"sha": "0b676af551e342335a4824f9c2b7fca277beb9db", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=28bc117f586fbb15b887e6517e2b08330fec91c0", "patch": "@@ -147,9 +147,9 @@ match_subscript (gfc_array_ref *ar, int init, bool match_star)\n }\n \n \n-/* Match an array reference, whether it is the whole array or a\n-   particular elements or a section. If init is set, the reference has\n-   to consist of init expressions.  */\n+/* Match an array reference, whether it is the whole array or particular\n+   elements or a section.  If init is set, the reference has to consist\n+   of init expressions.  */\n \n match\n gfc_match_array_ref (gfc_array_ref *ar, gfc_array_spec *as, int init,\n@@ -422,6 +422,13 @@ match_array_element_spec (gfc_array_spec *as)\n   if (!gfc_expr_check_typed (*upper, gfc_current_ns, false))\n     return AS_UNKNOWN;\n \n+  if ((*upper)->expr_type == EXPR_FUNCTION && (*upper)->ts.type == BT_UNKNOWN\n+      && (*upper)->symtree && strcmp ((*upper)->symtree->name, \"null\") == 0)\n+    {\n+      gfc_error (\"Expecting a scalar INTEGER expression at %C\");\n+      return AS_UNKNOWN;\n+    }\n+\n   if (gfc_match_char (':') == MATCH_NO)\n     {\n       *lower = gfc_get_int_expr (gfc_default_integer_kind, NULL, 1);\n@@ -442,13 +449,20 @@ match_array_element_spec (gfc_array_spec *as)\n   if (!gfc_expr_check_typed (*upper, gfc_current_ns, false))\n     return AS_UNKNOWN;\n \n+  if ((*upper)->expr_type == EXPR_FUNCTION && (*upper)->ts.type == BT_UNKNOWN\n+      && (*upper)->symtree && strcmp ((*upper)->symtree->name, \"null\") == 0)\n+    {\n+      gfc_error (\"Expecting a scalar INTEGER expression at %C\");\n+      return AS_UNKNOWN;\n+    }\n+\n   return AS_EXPLICIT;\n }\n \n \n /* Matches an array specification, incidentally figuring out what sort\n-   it is. Match either a normal array specification, or a coarray spec\n-   or both. Optionally allow [:] for coarrays.  */\n+   it is.  Match either a normal array specification, or a coarray spec\n+   or both.  Optionally allow [:] for coarrays.  */\n \n match\n gfc_match_array_spec (gfc_array_spec **asp, bool match_dim, bool match_codim)"}, {"sha": "f11872fd636efd9d2b374455284888e1818f497f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28bc117f586fbb15b887e6517e2b08330fec91c0", "patch": "@@ -1,3 +1,8 @@\n+2015-11-08  Steven G. Kargl  <kargl@gc.gnu.org>\n+\n+\tPR fortran/68224\n+\t* gfortran.dg/pr68224.f90: New test.\n+\n 2015-11-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/68196"}, {"sha": "a5962bb86611a032ec33d7e547b29969047096c2", "filename": "gcc/testsuite/gfortran.dg/pr68224.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68224.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28bc117f586fbb15b887e6517e2b08330fec91c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68224.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr68224.f90?ref=28bc117f586fbb15b887e6517e2b08330fec91c0", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR fortran/68224\n+! Original code contribute by Gerhard Steinmetz\n+! <gerhard dot steinmetz dot fortran at t-online dot de>\n+! \n+program p\n+   integer, parameter :: a(null()) = [1, 2]   ! { dg-error \"scalar INTEGER expression\" }\n+   integer, parameter :: b(null():*) = [1, 2]   ! { dg-error \"scalar INTEGER expression\" }\n+   integer, parameter :: c(1:null()) = [1, 2]   ! { dg-error \"scalar INTEGER expression\" }\n+end program p"}]}