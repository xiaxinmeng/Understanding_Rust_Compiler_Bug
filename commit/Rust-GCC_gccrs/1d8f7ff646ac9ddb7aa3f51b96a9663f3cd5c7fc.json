{"sha": "1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ4ZjdmZjY0NmFjOWRkYjdhYTNmNTFiOTZhOTY2M2YzY2Q1YzdmYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-11T19:40:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-11T19:40:35Z"}, "message": "When setting up tm.h, convert \"vax/vax.h\" into \"config-vax.h\" rather than \"[.config.vax]vax.h\" for #include so it will work from [.cp] subdirectory...\n\nWhen setting up tm.h, convert \"vax/vax.h\" into \"config-vax.h\" rather\nthan \"[.config.vax]vax.h\" for #include so it will work from [.cp]\nsubdirectory; copy vax.h to config-vax.h as part of configuration\nsetup.  Also, manually include cc1plus in the list of buildable\ncompilers (a temporary measure; it should process cp/Makefile.in like\nit does for primary makefile).\n\nFrom-SVN: r7711", "tree": {"sha": "e10911c6b95fe43816d042ab4dc572388d6ac11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e10911c6b95fe43816d042ab4dc572388d6ac11a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc/comments", "author": null, "committer": null, "parents": [{"sha": "1ca0c604b955bd2e9a2ae6165c8577044b803d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca0c604b955bd2e9a2ae6165c8577044b803d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca0c604b955bd2e9a2ae6165c8577044b803d34"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "6009ee6c0c5f6962da50d8243f47f2ac6620d714", "filename": "gcc/vmsconfig.com", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc/gcc%2Fvmsconfig.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc/gcc%2Fvmsconfig.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsconfig.com?ref=1d8f7ff646ac9ddb7aa3f51b96a9663f3cd5c7fc", "patch": "@@ -38,7 +38,7 @@ $DECK\n !  Copy file, changing lines of the form\n !\t#include \"vax/*\"\n !  into\n-!\t#include \"[.config.vax]*\"\n+!\t#include \"config-*\"\n !\n    file := CREATE_BUFFER(\"file\", GET_INFO(COMMAND_LINE, \"file_name\"));\n    targ := LINE_BEGIN & '#include' & SPAN(ASCII(32)+ASCII(9)) & '\"vax/';\n@@ -48,14 +48,19 @@ $DECK\n       EXITIF incl = 0;\n       POSITION(BEGINNING_OF(incl));\n       ERASE(incl);\n-      COPY_TEXT('#include \"[.config.vax]');\n+      COPY_TEXT('#include \"config-');\n       rang := CREATE_RANGE(END_OF(incl), END_OF(file));\n    ENDLOOP;\n    WRITE_FILE(file, GET_INFO(COMMAND_LINE, \"output_file\"));\n    QUIT\n $EOD\n $ echo \"Generated `tm.h' from `[.config.vax]vms.h'.\n $ !\n+$\t!crude hack to allow compiling from [.cp] subdirectory\n+$ if f$search(\"config-vax.h\") .nes. \"\" then delete config-vax.h;*\n+$ copy [.config.vax]vax.h []config-vax.h\n+$ echo \"Linked `config-vax.h' to `[.config.vax]vax.h' for `tm.h'.\"\n+$ !\n $ if f$search(\"md.\") .nes. \"\" then delete md..*\n $ copy [.config.vax]vax.md []md.\n $ echo \"Linked `md' to `[.config.vax]vax.md'.\n@@ -108,6 +113,10 @@ $! Make a copy of the makefile if the sources are on a disk that is NFS\n $!    mounted on a unix machine.\n $if f$search(\"Makefile.in\").eqs.\"\" .and. f$search(\"$M$akefile.in\").nes.\"\" -\n \tthen copy $M$akefile.in Makefile.in\n+$! This should be automated across all front-end subdirectories.\n+$!    For now, it's hardcoded.\n+$if f$search(\"[.cp]Makefile.in\").eqs.\"\" .and. f$search(\"[.cp]$M$akefile.in\").nes.\"\" -\n+\tthen copy [.cp]$M$akefile.in [.cp]Makefile.in\n $!\n $!\n $echo \"Now processing Makefile.in to generate linker option files.\"\n@@ -227,6 +236,24 @@ $edit/tpu/nojournal/nosection/nodisplay/command=sys$input\n          ENDLOOP ;\n    ENDPROCEDURE ;\n \n+!                !\n+! ...fix this... !\n+!                !\n+ procedure temporary_cplusplus_hack()\n+  position(end_of(compiler_list));\n+  copy_text(\"cc1plus\");\n+  position(end_of(mainbuffer));\n+  copy_text(\"cc1plus: [.cp]call,[.cp]decl,[.cp]errfn,[.cp]expr,[.cp]pt,[.cp]sig\\\");  split_line;\n+  copy_text(\" [.cp]typeck2,[.cp]class,[.cp]decl2,[.cp]error,[.cp]gc,[.cp]lex\\\");  split_line;\n+  copy_text(\" [.cp]parse,[.cp]ptree,[.cp]spew,[.cp]typeck,[.cp]cvt,[.cp]edsel\\\");  split_line;\n+  copy_text(\" [.cp]except,[.cp]init,[.cp]method,[.cp]search,[.cp]tree,[.cp]xref\\\");  split_line;\n+  copy_text(\" []c-common\\\");  split_line;\n+  copy_text(\" bc-emit,bc-optab\\\");  split_line;\n+  copy_text(\" obstack\");  split_line;\n+ endprocedure;\n+\n+\n+!\n ! this is the start of the main procedure\n    filename := GET_INFO (COMMAND_LINE, 'file_name') ;\n    mainbuffer := CREATE_BUFFER (\"Makefile.in\", \"Makefile.in\") ;\n@@ -266,6 +293,10 @@ $edit/tpu/nojournal/nosection/nodisplay/command=sys$input\n          erase (range1) ;\n \t split_line;\n          ENDLOOP ;\n+!                         !\n+! This needs to be fixed. !\n+!                         !\n+\ttemporary_cplusplus_hack();\n !\n ! We now have a list of supported compilers.  Now write it, and use it.\n !\n@@ -293,7 +324,7 @@ $edit/tpu/nojournal/nosection/nodisplay/command=sys$input\n      cmark := mark(NONE);\n      exitif cmark = end_of(compiler_list);\n      message(current_line);\n-     generate_option_file(LINE_BEGIN & Current_line & ((SPAN(\" \") & \":\") | \":\"),\n+     generate_option_file(LINE_BEGIN & current_line & ((SPAN(\" \") & \":\") | \":\"),\n \t\t\t  current_line+\"-objs.opt\");\n      position (cmark);\n      move_vertical(1);"}]}