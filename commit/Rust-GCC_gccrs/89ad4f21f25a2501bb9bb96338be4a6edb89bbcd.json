{"sha": "89ad4f21f25a2501bb9bb96338be4a6edb89bbcd", "node_id": "C_kwDOANBUbNoAKDg5YWQ0ZjIxZjI1YTI1MDFiYjliYjk2MzM4YmU0YTZlZGI4OWJiY2Q", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-25T07:55:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-25T07:55:29Z"}, "message": "Merge #1062\n\n1062: Properly perform follow set checking on matcher r=CohenArthur a=CohenArthur\n\nAddresses #947 \n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "710a2d0cf0111d2a8a47afde891012d766adbb74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/710a2d0cf0111d2a8a47afde891012d766adbb74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiPXVxCRBK7hj4Ov3rIwAAYEMIADpQ23G6tR25Ih92H/T8zmtJ\n/K5UlBeRWLPlhZDNYB5fxPDexyWWHyXiXPMPexyNrGLxIm/dmRgHy9D6EtXQNSC4\n0bb482kANo/c+8DiN6E8mDxe2m8Kbj6Z72qC4EqtGep9lHpI5b/Fp7JriJ9UdY0i\n5I3Meh4vk1Y7raWdFaiWTOu/T0D5rs/T4kEqS82zYdHIbDO2kqRkE/yexnXfr69X\nNFqeX774TkPv19qOOnMmhlstPO6SWAZ9NpzuUqaQHzkylLUuVwN/52H+1jgMDT/F\nnLXri9vLXT3nwgFdFVTzbCoErhiTKEJjy3Vz1p+SepOCOSzb5L8Woy6czdlJdLo=\n=gY2J\n-----END PGP SIGNATURE-----\n", "payload": "tree 710a2d0cf0111d2a8a47afde891012d766adbb74\nparent 0fa882160df40cee56b5cdd0a2953b4abb4b9d18\nparent 912b04216d71a2cd95001cfb0570095db1824207\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648194929 +0000\ncommitter GitHub <noreply@github.com> 1648194929 +0000\n\nMerge #1062\n\n1062: Properly perform follow set checking on matcher r=CohenArthur a=CohenArthur\n\nAddresses #947 \n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fa882160df40cee56b5cdd0a2953b4abb4b9d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fa882160df40cee56b5cdd0a2953b4abb4b9d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fa882160df40cee56b5cdd0a2953b4abb4b9d18"}, {"sha": "912b04216d71a2cd95001cfb0570095db1824207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/912b04216d71a2cd95001cfb0570095db1824207", "html_url": "https://github.com/Rust-GCC/gccrs/commit/912b04216d71a2cd95001cfb0570095db1824207"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "ec633f30dfe70ef0a902f1847dea2ec87538525b", "filename": "gcc/rust/parse/rust-parse.cc", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd/gcc%2Frust%2Fparse%2Frust-parse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd/gcc%2Frust%2Fparse%2Frust-parse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.cc?ref=89ad4f21f25a2501bb9bb96338be4a6edb89bbcd", "patch": "@@ -227,9 +227,25 @@ peculiar_fragment_match_compatible (AST::MacroMatchFragment &last_match,\n       }\n       case AST::MacroMatch::Matcher: {\n \tauto matcher = static_cast<AST::MacroMatcher *> (&match);\n-\tauto &matches = matcher->get_matches ();\n-\tif (!matches.empty ())\n-\t  error_locus = matches.front ()->get_match_locus ();\n+\tauto first_token = matcher->get_delim_type ();\n+\tTokenId delim_id;\n+\tswitch (first_token)\n+\t  {\n+\t  case AST::PARENS:\n+\t    delim_id = LEFT_PAREN;\n+\t    break;\n+\t  case AST::SQUARE:\n+\t    delim_id = LEFT_SQUARE;\n+\t    break;\n+\t  case AST::CURLY:\n+\t    delim_id = LEFT_CURLY;\n+\t    break;\n+\t  }\n+\tif (contains (allowed_toks, delim_id))\n+\t  return true;\n+\tkind_str = \"token `\" + std::string (get_token_description (delim_id))\n+\t\t   + \"` at start of matcher\";\n+\terror_locus = matcher->get_match_locus ();\n \tbreak;\n       }\n       case AST::MacroMatch::Fragment: {"}, {"sha": "f5c498cc8ef3328e63680921b73622431e92a840", "filename": "gcc/testsuite/rust/compile/macro39.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro39.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ad4f21f25a2501bb9bb96338be4a6edb89bbcd/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro39.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmacro39.rs?ref=89ad4f21f25a2501bb9bb96338be4a6edb89bbcd", "patch": "@@ -0,0 +1,5 @@\n+macro_rules! m {\n+    ($e:expr (, parenthesis_forbidden)) => {{}}; // { dg-error \"token .\\\\(. at start of matcher is not allowed after .expr. fragment\" }\n+                                                 // { dg-error \"required first macro rule\" \"\" { target *-*-* } .-1 }\n+                                                 // { dg-error \"failed to parse item in crate\" \"\" { target *-*-* } .-2 }\n+}"}]}