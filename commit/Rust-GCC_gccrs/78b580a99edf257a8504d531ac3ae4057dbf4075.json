{"sha": "78b580a99edf257a8504d531ac3ae4057dbf4075", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhiNTgwYTk5ZWRmMjU3YTg1MDRkNTMxYWMzYWU0MDU3ZGJmNDA3NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2009-01-22T22:33:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2009-01-22T22:33:02Z"}, "message": "thread (__thread_data_base, thread): Rename member functions to match coding style.\n\n2009-01-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* include/std/thread (__thread_data_base, thread): Rename member\n\tfunctions to match coding style.\n\t(thread::thread,thread::operator=): Define move operations.\n\t* src/thread.cc (__thread_data_base, thread): Rename member functions.\n\t* config/abi/pre/gnu.ver: Adjust.\n\nFrom-SVN: r143577", "tree": {"sha": "3f4681da1d14fab66d860063dd9295fda2ad6669", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f4681da1d14fab66d860063dd9295fda2ad6669"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78b580a99edf257a8504d531ac3ae4057dbf4075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b580a99edf257a8504d531ac3ae4057dbf4075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b580a99edf257a8504d531ac3ae4057dbf4075", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b580a99edf257a8504d531ac3ae4057dbf4075/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a5af9dcd87e2c30b6083eb51a8fda66926e441d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5af9dcd87e2c30b6083eb51a8fda66926e441d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5af9dcd87e2c30b6083eb51a8fda66926e441d"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "8ebbe316c1f26b6ac0c0df75d37e190442c26a58", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=78b580a99edf257a8504d531ac3ae4057dbf4075", "patch": "@@ -1,3 +1,11 @@\n+2009-01-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/std/thread (__thread_data_base, thread): Rename member\n+\tfunctions to match coding style.\n+\t(thread::thread,thread::operator=): Define move operations.\n+\t* src/thread.cc (__thread_data_base, thread): Rename member functions.\n+\t* config/abi/pre/gnu.ver: Adjust.\n+\n 2009-01-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/38384"}, {"sha": "7a034db1ec140dcac85ee919688488ec3678755a", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=78b580a99edf257a8504d531ac3ae4057dbf4075", "patch": "@@ -900,7 +900,7 @@ GLIBCXX_3.4.11 {\n     _ZNSt10shared_ptrISt18__thread_data_baseED1Ev;\n     _ZNSt12bad_weak_ptrD0Ev;\n     _ZNSt12bad_weak_ptrD1Ev;\n-    _ZNSt6thread14__start_threadEv;\n+    _ZNSt6thread15_M_start_threadEv;\n     _ZNSt6thread4joinEv;\n     _ZNSt6thread6detachEv;\n "}, {"sha": "e6ce0f71876bdfa78228f910ac4c17072f6b6fe6", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=78b580a99edf257a8504d531ac3ae4057dbf4075", "patch": "@@ -65,7 +65,7 @@ namespace std\n     __thread_data_base() = default;\n     virtual ~__thread_data_base() = default;\n     \n-    virtual void __run() = 0;\n+    virtual void _M_run() = 0;\n     \n     __gthread_t \t_M_thread_handle;\n     __thread_data_ptr \t_M_this_ptr;\n@@ -80,7 +80,7 @@ namespace std\n       : _M_func(std::forward<_Callable>(__f))\n       { }\n \n-      void __run()\n+      void _M_run()\n       { _M_func(); }\n \n     private:\n@@ -100,21 +100,29 @@ namespace std\n     \n     template<typename _Callable>\n       explicit thread(_Callable __f)\n-      : _M_thread_data(__make_thread_data(__f))\n-      { __start_thread(); }\n+      : _M_thread_data(_M_make_thread_data(__f))\n+      { _M_start_thread(); }\n \n     template<typename _Callable, typename... _Args>\n       thread(_Callable&& __f, _Args&&... __args)\n-      : _M_thread_data(__make_thread_data(std::bind(__f, __args...)))\n-      { __start_thread(); }\n+      : _M_thread_data(_M_make_thread_data(std::bind(__f, __args...)))\n+      { _M_start_thread(); }\n \n     ~thread()\n     { detach(); }\n \n     thread(const thread&) = delete;\n-    thread(thread&&);\n+    thread(thread&& __t)\n+    { swap(__t); }\n+\n     thread& operator=(const thread&) = delete;\n-    thread& operator=(thread&&);\n+    thread& operator=(thread&& __t)\n+    {\n+      if (joinable())\n+        detach();\n+      swap(__t);\n+      return *this;\n+    }\n \n     // members\n     void \n@@ -150,17 +158,17 @@ namespace std\n   private:\n     template<typename _Callable>\n       __thread_data_ptr \n-      __make_thread_data(_Callable&& __f)\n+      _M_make_thread_data(_Callable&& __f)\n       { \n \treturn __thread_data_ptr(\n \t  new __thread_data<_Callable>(std::forward<_Callable>(__f)));\n       }\n     \n     __thread_data_ptr\n-    __make_thread_data(void(*__f)())\n+    _M_make_thread_data(void(*__f)())\n     { return __thread_data_ptr(new __thread_data<void(*)()>(__f)); }\n     \n-    void __start_thread();\n+    void _M_start_thread();\n \n     __thread_data_ptr \t_M_thread_data;\n     mutable mutex \t_M_thread_data_mutex;"}, {"sha": "ca934dd90599349c4256e141cfce50359f2c285c", "filename": "libstdc++-v3/src/thread.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b580a99edf257a8504d531ac3ae4057dbf4075/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fthread.cc?ref=78b580a99edf257a8504d531ac3ae4057dbf4075", "patch": "@@ -46,7 +46,7 @@ namespace std\n \n \ttry\n \t  {\n-\t    __local_thread_data->__run();\n+\t    __local_thread_data->_M_run();\n \t  }\n \tcatch(...)\n \t  {\n@@ -88,7 +88,7 @@ namespace std\n   }\n \n   void \n-  thread::__start_thread()\n+  thread::_M_start_thread()\n   {\n     _M_thread_data->_M_this_ptr = _M_thread_data;\n     int __e = __gthread_create(&_M_thread_data->_M_thread_handle, "}]}