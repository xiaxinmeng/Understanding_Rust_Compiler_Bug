{"sha": "59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllY2JkMGJkZmE4YzllZmQ0YWEyZWVkNTA1ZWY3MmU2ZWMwZmYyZQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-12-09T17:20:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-12-09T17:20:15Z"}, "message": "gnatcmd.adb (GNATCmd): GNAT CHECK accepts switch -U If GNAT CHECK is called with a project file...\n\n2005-12-05  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (GNATCmd): GNAT CHECK accepts switch -U\n\tIf GNAT CHECK is called with a project file, but with no\n\tsource on the command line, call gnatcheck with all the compilable\n\tsources of the project.\n\tTake into account the new command Check, for gnatcheck. Treat as for\n\tother ASIS tools: take into account project, specific package Check and\n\tCompiler switches.\n\tFor ASIS tools, add the switches in package Compiler for\n\tthe invocation of the compiler.\n\n\t* prj-attr.adb: Add package Check and its attributes\n\n\t* vms_conv.ads (Command_Type): New command Check, for gnatcheck\n\n\t* vms_conv.adb (Initialize): Change Params of command Check to\n\tunlimited files.\n\tChange some Hostparm.OpenVMS checks to Targparm.OpenVMS_On_Target.\n\tAdd data for new command Check\n\n\t* vms_data.ads: Add project related qualifiers for GNAT CHECK and GNAT\n\tELIM.\n\tAdd qualifiers for Check command options\n\t(Command_Type): New command Check\n\nFrom-SVN: r108297", "tree": {"sha": "64c5c9900ebbf6d79ca3c278f934ab10d71b26a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64c5c9900ebbf6d79ca3c278f934ab10d71b26a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee09461671baa1d6e1bc4d0a2b596f8e791ca93b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee09461671baa1d6e1bc4d0a2b596f8e791ca93b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee09461671baa1d6e1bc4d0a2b596f8e791ca93b"}], "stats": {"total": 372, "additions": 330, "deletions": 42}, "files": [{"sha": "995f985ed4ea079bf2ae1da5fb3cb0b0aa7999e6", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 121, "deletions": 31, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "patch": "@@ -106,6 +106,8 @@ procedure GNATCmd is\n \n    Naming_String    : constant String_Access := new String'(\"naming\");\n    Binder_String    : constant String_Access := new String'(\"binder\");\n+   Compiler_String  : constant String_Access := new String'(\"compiler\");\n+   Check_String     : constant String_Access := new String'(\"check\");\n    Eliminate_String : constant String_Access := new String'(\"eliminate\");\n    Finder_String    : constant String_Access := new String'(\"finder\");\n    Linker_String    : constant String_Access := new String'(\"linker\");\n@@ -118,8 +120,11 @@ procedure GNATCmd is\n    Packages_To_Check_By_Binder   : constant String_List_Access :=\n      new String_List'((Naming_String, Binder_String));\n \n+   Packages_To_Check_By_Check : constant String_List_Access :=\n+     new String_List'((Naming_String, Check_String, Compiler_String));\n+\n    Packages_To_Check_By_Eliminate : constant String_List_Access :=\n-     new String_List'((Naming_String, Eliminate_String));\n+     new String_List'((Naming_String, Eliminate_String, Compiler_String));\n \n    Packages_To_Check_By_Finder    : constant String_List_Access :=\n      new String_List'((Naming_String, Finder_String));\n@@ -131,13 +136,13 @@ procedure GNATCmd is\n      new String_List'((Naming_String, Gnatls_String));\n \n    Packages_To_Check_By_Pretty    : constant String_List_Access :=\n-     new String_List'((Naming_String, Pretty_String));\n+     new String_List'((Naming_String, Pretty_String, Compiler_String));\n \n    Packages_To_Check_By_Gnatstub  : constant String_List_Access :=\n-     new String_List'((Naming_String, Gnatstub_String));\n+     new String_List'((Naming_String, Gnatstub_String, Compiler_String));\n \n    Packages_To_Check_By_Metric  : constant String_List_Access :=\n-     new String_List'((Naming_String, Metric_String));\n+     new String_List'((Naming_String, Metric_String, Compiler_String));\n \n    Packages_To_Check_By_Xref      : constant String_List_Access :=\n      new String_List'((Naming_String, Xref_String));\n@@ -163,8 +168,8 @@ procedure GNATCmd is\n \n    All_Projects : Boolean := False;\n    --  Flag used for GNAT PRETTY and GNAT METRIC to indicate that\n-   --  the underlying tool (gnatpp or gnatmetric) should be invoked for all\n-   --  sources of all projects.\n+   --  the underlying tool (gnatcheck, gnatpp or gnatmetric) should be invoked\n+   --  for all sources of all projects.\n \n    -----------------------\n    -- Local Subprograms --\n@@ -345,7 +350,7 @@ procedure GNATCmd is\n                   end if;\n \n                else\n-                  --  For gnatpp and gnatmetric, put all sources\n+                  --  For gnatcheck, gnatpp and gnatmetric, put all sources\n                   --  of the project, or of all projects if -U was specified.\n \n                   for Kind in Spec_Or_Body loop\n@@ -369,7 +374,7 @@ procedure GNATCmd is\n \n             --  If the list of files is too long, create a temporary\n             --  text file that lists these files, and pass this temp\n-            --  file to gnatpp or gnatmetric using switch -files=.\n+            --  file to gnatcheck, gnatpp or gnatmetric using switch -files=.\n \n             if Last_Switches.Last - Current_Last >\n               Max_Files_On_The_Command_Line\n@@ -1342,7 +1347,7 @@ begin\n       Exec_Path := Locate_Exec_On_Path (Program);\n \n       if Exec_Path = null then\n-         Put_Line (Standard_Error, \"Couldn't locate \" & Program);\n+         Put_Line (Standard_Error, \"could not locate \" & Program);\n          raise Error_Exit;\n       end if;\n \n@@ -1356,10 +1361,11 @@ begin\n          end loop;\n       end if;\n \n-      --  For BIND, FIND, LINK, LIST, PRETTY ad  XREF, look for project file\n-      --  related switches.\n+      --  For BIND, CHECK, FIND, LINK, LIST, PRETTY ad  XREF, look for project\n+      --  file related switches.\n \n       if The_Command = Bind\n+        or else The_Command = Check\n         or else The_Command = Elim\n         or else The_Command = Find\n         or else The_Command = Link\n@@ -1373,6 +1379,9 @@ begin\n             when Bind =>\n                Tool_Package_Name := Name_Binder;\n                Packages_To_Check := Packages_To_Check_By_Binder;\n+            when Check =>\n+               Tool_Package_Name := Name_Check;\n+               Packages_To_Check := Packages_To_Check_By_Check;\n             when Elim =>\n                Tool_Package_Name := Name_Eliminate;\n                Packages_To_Check := Packages_To_Check_By_Eliminate;\n@@ -1539,7 +1548,10 @@ begin\n \n                      Remove_Switch (Arg_Num);\n \n-                  elsif (The_Command = Pretty or else The_Command = Metric)\n+                  elsif\n+                    (The_Command = Check  or else\n+                     The_Command = Pretty or else\n+                     The_Command = Metric)\n                     and then Argv'Length = 2\n                     and then Argv (2) = 'U'\n                   then\n@@ -1610,9 +1622,10 @@ begin\n \n                --  Packages Binder (for gnatbind), Cross_Reference (for\n                --  gnatxref), Linker (for gnatlink) Finder (for gnatfind),\n-               --  Pretty_Printer (for gnatpp) Eliminate (for gnatelim) and\n-               --  Metric (for gnatmetric) have an attributed Switches,\n-               --  an associative array, indexed by the name of the file.\n+               --  Pretty_Printer (for gnatpp) Eliminate (for gnatelim),\n+               --  Check (for gnatcheck) and Metric (for gnatmetric) have\n+               --  an attributed Switches, an associative array, indexed\n+               --  by the name of the file.\n \n                --  They also have an attribute Default_Switches, indexed\n                --  by the name of the programming language.\n@@ -1691,16 +1704,92 @@ begin\n          Prj.Env.Set_Ada_Paths\n            (Project, Project_Tree, Including_Libraries => False);\n \n-         --  For gnatstub, gnatmetric, gnatpp and gnatelim, create\n+         --  For gnatcheck, gnatstub, gnatmetric, gnatpp and gnatelim, create\n          --  a configuration pragmas file, if necessary.\n \n          if The_Command = Pretty\n            or else The_Command = Metric\n            or else The_Command = Stub\n            or else The_Command = Elim\n+           or else The_Command = Check\n          then\n-            --  If -cargs is one of the switches, move the following\n-            --  switches to the Carg_Switches table.\n+            --  If there are switches in package Compiler, put them in the\n+            --  Carg_Switches table.\n+\n+            declare\n+               Data : constant Prj.Project_Data :=\n+                        Project_Tree.Projects.Table (Project);\n+\n+               Pkg  : constant Prj.Package_Id :=\n+                        Prj.Util.Value_Of\n+                          (Name        => Name_Compiler,\n+                           In_Packages => Data.Decl.Packages,\n+                           In_Tree     => Project_Tree);\n+\n+               Element : Package_Element;\n+\n+               Default_Switches_Array : Array_Element_Id;\n+\n+               The_Switches : Prj.Variable_Value;\n+               Current      : Prj.String_List_Id;\n+               The_String   : String_Element;\n+\n+            begin\n+               if Pkg /= No_Package then\n+                  Element := Project_Tree.Packages.Table (Pkg);\n+\n+                  Default_Switches_Array :=\n+                    Prj.Util.Value_Of\n+                      (Name      => Name_Default_Switches,\n+                       In_Arrays => Element.Decl.Arrays,\n+                       In_Tree   => Project_Tree);\n+                  The_Switches := Prj.Util.Value_Of\n+                    (Index     => Name_Ada,\n+                     Src_Index => 0,\n+                     In_Array  => Default_Switches_Array,\n+                     In_Tree   => Project_Tree);\n+\n+                  --  If there are switches specified in the package of the\n+                  --  project file corresponding to the tool, scan them.\n+\n+                  case The_Switches.Kind is\n+                     when Prj.Undefined =>\n+                        null;\n+\n+                     when Prj.Single =>\n+                        declare\n+                           Switch : constant String :=\n+                                      Get_Name_String (The_Switches.Value);\n+\n+                        begin\n+                           if Switch'Length > 0 then\n+                              Add_To_Carg_Switches (new String'(Switch));\n+                           end if;\n+                        end;\n+\n+                     when Prj.List =>\n+                        Current := The_Switches.Values;\n+                        while Current /= Prj.Nil_String loop\n+                           The_String :=\n+                             Project_Tree.String_Elements.Table (Current);\n+\n+                           declare\n+                              Switch : constant String :=\n+                                         Get_Name_String (The_String.Value);\n+                           begin\n+                              if Switch'Length > 0 then\n+                                 Add_To_Carg_Switches (new String'(Switch));\n+                              end if;\n+                           end;\n+\n+                           Current := The_String.Next;\n+                        end loop;\n+                  end case;\n+               end if;\n+            end;\n+\n+            --  If -cargs is one of the switches, move the following switches\n+            --  to the Carg_Switches table.\n \n             for J in 1 .. First_Switches.Last loop\n                if First_Switches.Table (J).all = \"-cargs\" then\n@@ -1724,6 +1813,7 @@ begin\n \n             declare\n                CP_File : constant Name_Id := Configuration_Pragmas_File;\n+\n             begin\n                if CP_File /= No_Name then\n                   if The_Command = Elim then\n@@ -1762,7 +1852,6 @@ begin\n \n             declare\n                Project_Dir : constant String := Name_Buffer (1 .. Name_Len);\n-\n             begin\n                for J in 1 .. First_Switches.Last loop\n                   Test_If_Relative_Path\n@@ -1847,10 +1936,10 @@ begin\n             end;\n          end if;\n \n-         --  For gnatmetric, the generated files should be put in the\n-         --  object directory. This must be the first switch, because it may\n-         --  be overriden by a switch in package Metrics in the project file\n-         --  or by a command line option.\n+         --  For gnatmetric, the generated files should be put in the object\n+         --  directory. This must be the first switch, because it may be\n+         --  overriden by a switch in package Metrics in the project file or by\n+         --  a command line option.\n \n          if The_Command = Metric then\n             First_Switches.Increment_Last;\n@@ -1863,11 +1952,12 @@ begin\n                                (Project).Object_Directory));\n          end if;\n \n-         --  For gnat pretty and gnat metric, if no file has been put on the\n-         --  command line, call the tool with all the sources of the main\n-         --  project.\n+         --  For gnat check, gnat pretty, gnat metric ands gnat list,\n+         --  if no file has been put on the command line, call tool with all\n+         --  the sources of the main project.\n \n-         if The_Command = Pretty or else\n+         if The_Command = Check  or else\n+            The_Command = Pretty or else\n             The_Command = Metric or else\n             The_Command = List\n          then\n@@ -1943,10 +2033,10 @@ exception\n       Prj.Env.Delete_All_Path_Files (Project_Tree);\n       Delete_Temp_Config_Files;\n \n-      --  Since GNATCmd is normally called from DCL (the VMS shell),\n-      --  it must return an understandable VMS exit status. However\n-      --  the exit status returned *to* GNATCmd is a Posix style code,\n-      --  so we test it and return just a simple success or failure on VMS.\n+      --  Since GNATCmd is normally called from DCL (the VMS shell), it must\n+      --  return an understandable VMS exit status. However the exit status\n+      --  returned *to* GNATCmd is a Posix style code, so we test it and return\n+      --  just a simple success or failure on VMS.\n \n       if Hostparm.OpenVMS and then My_Exit_Status /= Success then\n          Set_Exit_Status (Failure);"}, {"sha": "8234d27c8fc8577f7a07a1f59f2986788d52fc16", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "patch": "@@ -161,6 +161,12 @@ package body Prj.Attr is\n      \"Ladefault_switches#\" &\n      \"Lbswitches#\" &\n \n+   --  package Check\n+\n+     \"Pcheck#\" &\n+     \"Ladefault_switches#\" &\n+     \"Lbswitches#\" &\n+\n    --  package Eliminate\n \n      \"Peliminate#\" &"}, {"sha": "b9da2bb2bd74a06d74e396e7dc8b88895163b648", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "patch": "@@ -27,7 +27,8 @@\n with Gnatvsn;\n with Hostparm;\n with Opt;\n-with Osint; use Osint;\n+with Osint;    use Osint;\n+with Targparm; use Targparm;\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Ada.Command_Line;        use Ada.Command_Line;\n@@ -185,7 +186,7 @@ package body VMS_Conv is\n       Object_Dirs := Object_Dirs + 1;\n       Object_Dir (Object_Dirs) := new String'(\"-lgnat\");\n \n-      if Hostparm.OpenVMS then\n+      if OpenVMS_On_Target then\n          Object_Dirs := Object_Dirs + 1;\n          Object_Dir (Object_Dirs) := new String'(\"-ldecgnat\");\n       end if;\n@@ -242,6 +243,16 @@ package body VMS_Conv is\n             Params   => new Parameter_Array'(1 => Files_Or_Wildcard),\n             Defext   => \"   \"),\n \n+         Check =>\n+           (Cname    => new S'(\"CHECK\"),\n+            Usage    => new S'(\"GNAT CHECK name /qualifiers\"),\n+            VMS_Only => False,\n+            Unixcmd  => new S'(\"gnatcheck\"),\n+            Unixsws  => null,\n+            Switches => Check_Switches'Access,\n+            Params   => new Parameter_Array'(1 => Unlimited_Files),\n+            Defext   => \"   \"),\n+\n          Elim =>\n            (Cname    => new S'(\"ELIM\"),\n             Usage    => new S'(\"GNAT ELIM name /qualifiers\"),"}, {"sha": "7f58c28e9dffcd5be8e25e3f6adeebe6a6630951", "filename": "gcc/ada/vms_conv.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fvms_conv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fvms_conv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.ads?ref=59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "patch": "@@ -98,6 +98,7 @@ package VMS_Conv is\n       Chop,\n       Clean,\n       Compile,\n+      Check,\n       Elim,\n       Find,\n       Krunch,"}, {"sha": "d9d4015f59b1c9c3c8f135bbc77a233c1469646d", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 189, "deletions": 9, "changes": 198, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=59ecbd0bdfa8c9efd4aa2eed505ef72e6ec0ff2e", "patch": "@@ -665,6 +665,145 @@ package VMS_Data is\n       S_Bind_WarnX   'Access,\n       S_Bind_Zero    'Access);\n \n+   -----------------------------\n+   -- Switches for GNAT CHECK --\n+   -----------------------------\n+\n+   S_Check_All    : aliased constant S := \"/ALL \"                         &\n+                                            \"-a\";\n+   --        /NOALL (D)\n+   --        /ALL\n+   --\n+   --   Also check the components of the GNAT run time and process the needed\n+   --  components of the GNAT RTL when building and analyzing the global\n+   --  structure for checking the global rules.\n+\n+   S_Check_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'   &\n+                                             \"-X\" & '\"';\n+   --       /EXTERNAL_REFERENCE=\"name=val\"\n+   --\n+   --   Specifies an external reference to the project manager. Useful only if\n+   --   /PROJECT_FILE is used.\n+   --\n+   --   Example:\n+   --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n+\n+   S_Check_Files  : aliased constant S := \"/FILES=@\"                      &\n+                                             \"-files=@\";\n+   --      /FILES=filename\n+   --\n+   --   Take as arguments the files that are listed in the specified\n+   --   text file.\n+\n+   S_Check_Help   : aliased constant S := \"/HELP \"                        &\n+                                            \"-h\";\n+   --        /NOHELP (D)\n+   --        /HELP\n+   --\n+   --   Print information about currently implemented checks.\n+\n+   S_Check_Locs   : aliased constant S := \"/LOCS \"                        &\n+                                            \"-l\";\n+   --        /NOLOCS (D)\n+   --        /LOCS\n+   --\n+   --   Use full source locations referebces in the report file.\n+\n+   S_Check_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"      &\n+                                             \"DEFAULT \"                   &\n+                                                \"-vP0 \"                   &\n+                                             \"MEDIUM \"                    &\n+                                                \"-vP1 \"                   &\n+                                             \"HIGH \"                      &\n+                                                \"-vP2\";\n+   --        /MESSAGES_PROJECT_FILE[=messages-option]\n+   --\n+   --   Specifies the \"verbosity\" of the parsing of project files.\n+   --   messages-option may be one of the following:\n+   --\n+   --      DEFAULT (D)  No messages are output if there is no error or warning.\n+   --\n+   --      MEDIUM       A small number of messages are output.\n+   --\n+   --      HIGH         A great number of messages are output, most of them not\n+   --                   being useful for the user.\n+\n+   S_Check_Project : aliased constant S := \"/PROJECT_FILE=<\"              &\n+                                             \"-P>\";\n+   --        /PROJECT_FILE=filename\n+   --\n+   --   Specifies the main project file to be used. The project files rooted\n+   --   at the main project file will be parsed before the invocation of the\n+   --   gnatcheck. The source directories to be searched will be communicated\n+   --   to gnatcheck through logical name ADA_PRJ_INCLUDE_FILE.\n+\n+   S_Check_Quiet  : aliased constant S := \"/QUIET \"                       &\n+                                            \"-q\";\n+   --        /NOQUIET (D)\n+   --        /QUIET\n+   --\n+   --   Work quietly, only output warnings and errors.\n+\n+   S_Check_Sections : aliased constant S := \"/SECTIONS= \"                 &\n+                                            \"DEFAULT \"                    &\n+                                               \"-s123 \"                   &\n+                                            \"COMPILER_STYLE \"             &\n+                                               \"-s1 \"                     &\n+                                            \"BY_RULES \"                   &\n+                                               \"-s2 \"                     &\n+                                            \"BY_FILES_BY_RULES \"          &\n+                                               \"-s3 \";\n+   --        /SECTIONS[=section-option, section-option, ...]\n+   --\n+   --   Specify what sections should be included into the report file.\n+   --   By default, all three section (diagnises in the format correcponding\n+   --   to compiler error and warning messages, diagnoses grouped by rules and\n+   --   then - by files, diagnoses grouped by files and then - by rules) are\n+   --   included in the report file.\n+   --\n+   --   section-option may be one of the following:\n+   --\n+   --      COMPILER_STYLE      Include diagnoses in compile-style format\n+   --                          (diagoses are grouped by files, for each file\n+   --                          they are ordered according to the references\n+   --                          into the source)\n+   --      BY_RULES            Include diagnoses grouped first by rules and\n+   --                          then by files\n+   --      BY_FILES_BY_RULES   Include diagnoses grouped first by files and\n+   --                          then by rules\n+   --\n+   --   If one of these options is specified, then the report file contains\n+   --   only sections set by these options\n+\n+   S_Check_Short  : aliased constant S := \"/SHORT \"                       &\n+                                            \"-s\";\n+   --        /NOSHORT (D)\n+   --        /SHORT\n+   --\n+   --   Generate a short form of the report file.\n+\n+   S_Check_Verb   : aliased constant S := \"/VERBOSE \"                     &\n+                                            \"-v\";\n+   --        /NOVERBOSE (D)\n+   --        /VERBOSE\n+   --\n+   --   The version number and copyright notice are output, as well as exact\n+   --   copies of the gnat1 commands spawned to obtain the chop control\n+   --   information.\n+\n+   Check_Switches : aliased constant Switches :=\n+                      (S_Check_All      'Access,\n+                       S_Check_Ext      'Access,\n+                       S_Check_Files    'Access,\n+                       S_Check_Help     'Access,\n+                       S_Check_Locs     'Access,\n+                       S_Check_Mess     'Access,\n+                       S_Check_Project  'Access,\n+                       S_Check_Quiet    'Access,\n+                       S_Check_Sections 'Access,\n+                       S_Check_Short    'Access,\n+                       S_Check_Verb     'Access);\n+\n    ----------------------------\n    -- Switches for GNAT CHOP --\n    ----------------------------\n@@ -2961,13 +3100,51 @@ package VMS_Data is\n    --\n    --        Look for source files in the default directory.\n \n+   S_Elim_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'     &\n+                                             \"-X\" & '\"';\n+   --       /EXTERNAL_REFERENCE=\"name=val\"\n+   --\n+   --   Specifies an external reference to the project manager. Useful only if\n+   --   /PROJECT_FILE is used.\n+   --\n+   --   Example:\n+   --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n+\n    S_Elim_GNATMAKE : aliased constant S := \"/GNATMAKE=@\"                   &\n                                             \"--GNATMAKE=@\";\n    --        /GNATMAKE=path_name\n    --\n    --   Instructs GNAT MAKE to use a specific gnatmake instead of one available\n    --   on the path.\n \n+   S_Elim_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"        &\n+                                             \"DEFAULT \"                    &\n+                                                \"-vP0 \"                    &\n+                                             \"MEDIUM \"                     &\n+                                                \"-vP1 \"                    &\n+                                             \"HIGH \"                       &\n+                                                \"-vP2\";\n+   --        /MESSAGES_PROJECT_FILE[=messages-option]\n+   --\n+   --   Specifies the \"verbosity\" of the parsing of project files.\n+   --   messages-option may be one of the following:\n+   --\n+   --      DEFAULT (D)  No messages are output if there is no error or warning.\n+   --\n+   --      MEDIUM       A small number of messages are output.\n+   --\n+   --      HIGH         A great number of messages are output, most of them not\n+   --                   being useful for the user.\n+\n+   S_Elim_Project : aliased constant S := \"/PROJECT_FILE=<\"                &\n+                                             \"-P>\";\n+   --        /PROJECT_FILE=filename\n+   --\n+   --   Specifies the main project file to be used. The project files rooted\n+   --   at the main project file will be parsed before the invocation of the\n+   --   gnatelim. The source directories to be searched will be communicated\n+   --   to gnatelim through logical name ADA_PRJ_INCLUDE_FILE.\n+\n    S_Elim_Quiet  : aliased constant S := \"/QUIET \"                         &\n                                             \"-q\";\n    --        /NOQUIET (D)\n@@ -2994,15 +3171,18 @@ package VMS_Data is\n    --   being processed.\n \n    Elim_Switches : aliased constant Switches :=\n-     (S_Elim_All     'Access,\n-      S_Elim_Bind    'Access,\n-      S_Elim_Comp    'Access,\n-      S_Elim_Config  'Access,\n-      S_Elim_Current 'Access,\n-      S_Elim_GNATMAKE'Access,\n-      S_Elim_Quiet   'Access,\n-      S_Elim_Search  'Access,\n-      S_Elim_Verb    'Access);\n+                     (S_Elim_All     'Access,\n+                      S_Elim_Bind    'Access,\n+                      S_Elim_Comp    'Access,\n+                      S_Elim_Config  'Access,\n+                      S_Elim_Current 'Access,\n+                      S_Elim_Ext     'Access,\n+                      S_Elim_GNATMAKE'Access,\n+                      S_Elim_Mess    'Access,\n+                      S_Elim_Project 'Access,\n+                      S_Elim_Quiet   'Access,\n+                      S_Elim_Search  'Access,\n+                      S_Elim_Verb    'Access);\n \n    ----------------------------\n    -- Switches for GNAT FIND --"}]}