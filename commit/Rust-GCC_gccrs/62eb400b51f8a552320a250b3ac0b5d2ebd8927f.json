{"sha": "62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "node_id": "C_kwDOANBUbNoAKDYyZWI0MDBiNTFmOGE1NTIzMjBhMjUwYjNhYzBiNWQyZWJkODkyN2Y", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-01-20T15:41:37Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-01-20T15:44:11Z"}, "message": " aarch64: allow ld1/stq in test output [PR102517]\n\nFollowing the changes to the inline memcpy operations get expanded, we\nnow generate ld1/st1 using a 128-bit vector register rather than ldp\nwith Q registers.  The behaviour is equivalent, so relax the tests to\npermit either variant.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/102517\n\t* gcc.target/aarch64/cpymem-q-reg_1.c: Allow ld1 and st1 for the\n\tmemcpy expansion.", "tree": {"sha": "63f78cd4674250bd5b2af93c3db9028615d545b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63f78cd4674250bd5b2af93c3db9028615d545b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62eb400b51f8a552320a250b3ac0b5d2ebd8927f/comments", "author": null, "committer": null, "parents": [{"sha": "6b73c07ec2e836a5cf7bacd6c7257fb8512c681e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b73c07ec2e836a5cf7bacd6c7257fb8512c681e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b73c07ec2e836a5cf7bacd6c7257fb8512c681e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "45f3f0ad1440be501e04804ebda881f672bc97e2", "filename": "gcc/testsuite/gcc.target/aarch64/cpymem-q-reg_1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62eb400b51f8a552320a250b3ac0b5d2ebd8927f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpymem-q-reg_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62eb400b51f8a552320a250b3ac0b5d2ebd8927f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpymem-q-reg_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fcpymem-q-reg_1.c?ref=62eb400b51f8a552320a250b3ac0b5d2ebd8927f", "patch": "@@ -10,7 +10,7 @@ foo (void)\n   __builtin_memcpy (dst, src, N * sizeof (int));\n }\n \n-/* { dg-final { scan-assembler {ldp\\tq[0-9]*} } } */\n+/* { dg-final { scan-assembler {ldp\\tq[0-9]*|ld1\\t{v[0-9]*\\.16b - v[0-9]*\\.16b}} } } */\n /* { dg-final { scan-assembler-not {ldp\\tx[0-9]*} } } */\n-/* { dg-final { scan-assembler {stp\\tq[0-9]*} } } */\n+/* { dg-final { scan-assembler {stp\\tq[0-9]*|st1\\t{v[0-9]*\\.16b - v[0-9]*\\.16b}} } } */\n /* { dg-final { scan-assembler-not {stp\\tx[0-9]*} } } */"}]}