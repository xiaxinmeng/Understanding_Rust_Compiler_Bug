{"sha": "c3e38a03df5f6074fd83d06c2c8d7393b0446026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNlMzhhMDNkZjVmNjA3NGZkODNkMDZjMmM4ZDczOTNiMDQ0NjAyNg==", "commit": {"author": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-02-09T21:19:02Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-02-09T21:19:02Z"}, "message": "re PR c/64856 (Initializing struct not accepted in gnu99)\n\n\tPR c/64856\n\t* c-typeck.c (process_init_element): Don't always wrap\n\tCOMPOUND_LITERAL_EXPR in a SAVE_EXPR in C99 mode when\n\tinitializing a range of elements.\n\n\t* gcc.dg/pr64856.c: New test.\n\nFrom-SVN: r220550", "tree": {"sha": "436bdfafd11d4124941fb10799652f5acdb9859d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/436bdfafd11d4124941fb10799652f5acdb9859d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3e38a03df5f6074fd83d06c2c8d7393b0446026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e38a03df5f6074fd83d06c2c8d7393b0446026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e38a03df5f6074fd83d06c2c8d7393b0446026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e38a03df5f6074fd83d06c2c8d7393b0446026/comments", "author": null, "committer": null, "parents": [{"sha": "6248441777104cf224e58669aaeb858310b9f668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6248441777104cf224e58669aaeb858310b9f668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6248441777104cf224e58669aaeb858310b9f668"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "fa5774cbea0e7b7b36c1d78a62b5bfe639fb2c38", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=c3e38a03df5f6074fd83d06c2c8d7393b0446026", "patch": "@@ -1,10 +1,17 @@\n+2015-02-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/64856\n+\t* c-typeck.c (process_init_element): Don't always wrap\n+\tCOMPOUND_LITERAL_EXPR in a SAVE_EXPR in C99 mode when\n+\tinitializing a range of elements.\n+\n 2015-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/64824\n \tPR c/64868\n \t* c-parser.c (c_parser_omp_atomic): Handle RDIV_EXPR.\n \n-2015-02-02  Bruno Loff <bruno.loff@gmail.com>\n+2015-02-02  Bruno Loff  <bruno.loff@gmail.com>\n \n \t* c-parser.c (c_parser_declspecs): Call invoke_plugin_callbacks after\n \tprocessing enum declaration."}, {"sha": "a3a9c7760c72f8d39300116f9d1d3dcda730cf34", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=c3e38a03df5f6074fd83d06c2c8d7393b0446026", "patch": "@@ -8785,8 +8785,7 @@ process_init_element (location_t loc, struct c_expr value, bool implicit,\n       /* If value is a compound literal and we'll be just using its\n \t content, don't put it into a SAVE_EXPR.  */\n       if (TREE_CODE (value.value) != COMPOUND_LITERAL_EXPR\n-\t  || !require_constant_value\n-\t  || flag_isoc99)\n+\t  || !require_constant_value)\n \t{\n \t  tree semantic_type = NULL_TREE;\n \t  if (TREE_CODE (value.value) == EXCESS_PRECISION_EXPR)"}, {"sha": "3d14e6041b802f24c262a90e31867e62260778cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3e38a03df5f6074fd83d06c2c8d7393b0446026", "patch": "@@ -1,3 +1,8 @@\n+2015-02-09  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/64856\n+\t* gcc.dg/pr64856.c: New test.\n+\n 2015-02-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/64979"}, {"sha": "c21d95a780a0c29d3203f9f8cb50688178b208c2", "filename": "gcc/testsuite/gcc.dg/pr64856.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64856.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e38a03df5f6074fd83d06c2c8d7393b0446026/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64856.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64856.c?ref=c3e38a03df5f6074fd83d06c2c8d7393b0446026", "patch": "@@ -0,0 +1,13 @@\n+/* PR c/64856 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct A {\n+  unsigned long b;\n+};\n+\n+struct B {\n+  struct A c[5];\n+};\n+\n+struct B d = { .c = { [0 ... 4] = (struct A){ .b = 2 } } };"}]}