{"sha": "db25893ca7ca3f37425c24c04ab9beed253462d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyNTg5M2NhN2NhM2YzNzQyNWMyNGMwNGFiOWJlZWQyNTM0NjJkOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-22T22:32:33Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-22T22:32:33Z"}, "message": "frv-opts.h: New.\n\n\t* config/frv/frv-opts.h: New.\n\t* config/frv/frv-protos.h (enum frv_cpu, frv_cpu_t): Move to\n\tfrv-opts.h.\n\t(frv_cpu_type): Remove.\n\t* config/frv/frv.c: Don't include opts.h.\n\t(frv_cpu_type, frv_handle_option, TARGET_HANDLE_OPTION): Remove.\n\t* config/frv/frv.opt (config/frv/frv-opts.h): New HeaderInclude\n\tentry.\n\t(frv_cpu_type): New Variable entry.\n\t(frv_cpu): New Enum and EnumValue entries.\n\nFrom-SVN: r171316", "tree": {"sha": "e7337b5122d9494439d8c5865fa790afb0744756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7337b5122d9494439d8c5865fa790afb0744756"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db25893ca7ca3f37425c24c04ab9beed253462d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db25893ca7ca3f37425c24c04ab9beed253462d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db25893ca7ca3f37425c24c04ab9beed253462d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db25893ca7ca3f37425c24c04ab9beed253462d9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c223f5da144ae11fe0d9b81e4c1ee625e3bef6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c223f5da144ae11fe0d9b81e4c1ee625e3bef6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c223f5da144ae11fe0d9b81e4c1ee625e3bef6b"}], "stats": {"total": 166, "additions": 94, "deletions": 72}, "files": [{"sha": "a303ee32059b532f9dddd40910758fc5224f65de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db25893ca7ca3f37425c24c04ab9beed253462d9", "patch": "@@ -1,3 +1,16 @@\n+2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/frv/frv-opts.h: New.\n+\t* config/frv/frv-protos.h (enum frv_cpu, frv_cpu_t): Move to\n+\tfrv-opts.h.\n+\t(frv_cpu_type): Remove.\n+\t* config/frv/frv.c: Don't include opts.h.\n+\t(frv_cpu_type, frv_handle_option, TARGET_HANDLE_OPTION): Remove.\n+\t* config/frv/frv.opt (config/frv/frv-opts.h): New HeaderInclude\n+\tentry.\n+\t(frv_cpu_type): New Variable entry.\n+\t(frv_cpu): New Enum and EnumValue entries.\n+\n 2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/cris/cris.c (cris_handle_option): Access target_flags via"}, {"sha": "f578ed91dfc6842188dbd96bbf20153cb6032162", "filename": "gcc/config/frv/frv-opts.h", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv-opts.h?ref=db25893ca7ca3f37425c24c04ab9beed253462d9", "patch": "@@ -0,0 +1,39 @@\n+/* Frv option-handling defitions.\n+   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2010,\n+   2011\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef FRV_OPTS_H\n+#define FRV_OPTS_H\n+\n+/* CPU type.  This must be identical to the cpu enumeration in frv.md.  */\n+typedef enum frv_cpu\n+{\n+  FRV_CPU_GENERIC,\n+  FRV_CPU_FR550,\n+  FRV_CPU_FR500,\n+  FRV_CPU_FR450,\n+  FRV_CPU_FR405,\n+  FRV_CPU_FR400,\n+  FRV_CPU_FR300,\n+  FRV_CPU_SIMPLE,\n+  FRV_CPU_TOMCAT\n+} frv_cpu_t;\n+\n+#endif"}, {"sha": "c7223a76420c60f520d8c5870bffdc19e4d11f4f", "filename": "gcc/config/frv/frv-protos.h", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h?ref=db25893ca7ca3f37425c24c04ab9beed253462d9", "patch": "@@ -1,5 +1,6 @@\n /* Frv prototypes.\n-   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2010,\n+   2011\n    Free Software Foundation, Inc.\n    Contributed by Red Hat, Inc.\n \n@@ -19,22 +20,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* CPU type.  This must be identical to the cpu enumeration in frv.md.  */\n-typedef enum frv_cpu\n-{\n-  FRV_CPU_GENERIC,\n-  FRV_CPU_FR550,\n-  FRV_CPU_FR500,\n-  FRV_CPU_FR450,\n-  FRV_CPU_FR405,\n-  FRV_CPU_FR400,\n-  FRV_CPU_FR300,\n-  FRV_CPU_SIMPLE,\n-  FRV_CPU_TOMCAT\n-} frv_cpu_t;\n-\n-extern frv_cpu_t frv_cpu_type;\t\t\t/* value of -mcpu= */\n-\n /* Define functions defined in frv.c */\n extern void frv_expand_prologue\t\t\t(void);\n extern void frv_expand_epilogue\t\t\t(bool);"}, {"sha": "09137654ad1fe08291d6a15274398f78dc568d8e", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=db25893ca7ca3f37425c24c04ab9beed253462d9", "patch": "@@ -49,7 +49,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"integrate.h\"\n #include \"langhooks.h\"\n #include \"df.h\"\n-#include \"opts.h\"\n \n #ifndef FRV_INLINE\n #define FRV_INLINE inline\n@@ -256,15 +255,8 @@ enum reg_class regno_reg_class[FIRST_PSEUDO_REGISTER];\n /* Cached value of frv_stack_info.  */\n static frv_stack_t *frv_stack_cache = (frv_stack_t *)0;\n \n-/* -mcpu= support */\n-frv_cpu_t frv_cpu_type = CPU_TYPE;\t/* value of -mcpu= */\n-\n /* Forward references */\n \n-static bool frv_handle_option\t\t\t(struct gcc_options *,\n-\t\t\t\t\t\t struct gcc_options *,\n-\t\t\t\t\t\t const struct cl_decoded_option *,\n-\t\t\t\t\t\t location_t);\n static void frv_option_override\t\t\t(void);\n static bool frv_legitimate_address_p\t\t(enum machine_mode, rtx, bool);\n static int frv_default_flags_for_cpu\t\t(void);\n@@ -444,8 +436,6 @@ static const struct default_options frv_option_optimization_table[] =\n    | MASK_VLIW_BRANCH\t\t\t\t\\\n    | MASK_MULTI_CE\t\t\t\t\\\n    | MASK_NESTED_CE)\n-#undef TARGET_HANDLE_OPTION\n-#define TARGET_HANDLE_OPTION frv_handle_option\n #undef TARGET_OPTION_OVERRIDE\n #define TARGET_OPTION_OVERRIDE frv_option_override\n #undef TARGET_OPTION_OPTIMIZATION_TABLE\n@@ -631,49 +621,6 @@ frv_cannot_force_const_mem (rtx x ATTRIBUTE_UNUSED)\n   return TARGET_FDPIC;\n }\n \f\n-/* Implement TARGET_HANDLE_OPTION.  */\n-\n-static bool\n-frv_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n-\t\t   const struct cl_decoded_option *decoded,\n-\t\t   location_t loc ATTRIBUTE_UNUSED)\n-{\n-  size_t code = decoded->opt_index;\n-  const char *arg = decoded->arg;\n-\n-  gcc_assert (opts == &global_options);\n-  gcc_assert (opts_set == &global_options_set);\n-\n-  switch (code)\n-    {\n-    case OPT_mcpu_:\n-      if (strcmp (arg, \"simple\") == 0)\n-\tfrv_cpu_type = FRV_CPU_SIMPLE;\n-      else if (strcmp (arg, \"tomcat\") == 0)\n-\tfrv_cpu_type = FRV_CPU_TOMCAT;\n-      else if (strcmp (arg, \"fr550\") == 0)\n-\tfrv_cpu_type = FRV_CPU_FR550;\n-      else if (strcmp (arg, \"fr500\") == 0)\n-\tfrv_cpu_type = FRV_CPU_FR500;\n-      else if (strcmp (arg, \"fr450\") == 0)\n-\tfrv_cpu_type = FRV_CPU_FR450;\n-      else if (strcmp (arg, \"fr405\") == 0)\n-\tfrv_cpu_type = FRV_CPU_FR405;\n-      else if (strcmp (arg, \"fr400\") == 0)\n-\tfrv_cpu_type = FRV_CPU_FR400;\n-      else if (strcmp (arg, \"fr300\") == 0)\n-\tfrv_cpu_type = FRV_CPU_FR300;\n-      else if (strcmp (arg, \"frv\") == 0)\n-\tfrv_cpu_type = FRV_CPU_GENERIC;\n-      else\n-\treturn false;\n-      return true;\n-\n-    default:\n-      return true;\n-    }\n-}\n-\n static int\n frv_default_flags_for_cpu (void)\n {"}, {"sha": "186508bf62ab113aa9cfce95a25e0d0b9136c05b", "filename": "gcc/config/frv/frv.opt", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db25893ca7ca3f37425c24c04ab9beed253462d9/gcc%2Fconfig%2Ffrv%2Ffrv.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.opt?ref=db25893ca7ca3f37425c24c04ab9beed253462d9", "patch": "@@ -1,6 +1,6 @@\n ; Options for the FR-V port of the compiler.\n \n-; Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2007, 2011 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -18,6 +18,13 @@\n ; along with GCC; see the file COPYING3.  If not see\n ; <http://www.gnu.org/licenses/>.\n \n+HeaderInclude\n+config/frv/frv-opts.h\n+\n+; Value of -mcpu=.\n+Variable\n+frv_cpu_t frv_cpu_type = CPU_TYPE\n+\n macc-4\n Target Report RejectNegative Mask(ACC_4)\n Use 4 media accumulators\n@@ -58,9 +65,40 @@ Target Report Mask(COND_MOVE)\n Enable conditional moves\n \n mcpu=\n-Target RejectNegative Joined\n+Target RejectNegative Joined Enum(frv_cpu) Var(frv_cpu_type)\n Set the target CPU type\n \n+Enum\n+Name(frv_cpu) Type(frv_cpu_t)\n+Known FR-V CPUs (for use with the -mcpu= option):\n+\n+EnumValue\n+Enum(frv_cpu) String(simple) Value(FRV_CPU_SIMPLE)\n+\n+EnumValue\n+Enum(frv_cpu) String(tomcat) Value(FRV_CPU_TOMCAT)\n+\n+EnumValue\n+Enum(frv_cpu) String(fr550) Value(FRV_CPU_FR550)\n+\n+EnumValue\n+Enum(frv_cpu) String(fr500) Value(FRV_CPU_FR500)\n+\n+EnumValue\n+Enum(frv_cpu) String(fr450) Value(FRV_CPU_FR450)\n+\n+EnumValue\n+Enum(frv_cpu) String(fr405) Value(FRV_CPU_FR405)\n+\n+EnumValue\n+Enum(frv_cpu) String(fr400) Value(FRV_CPU_FR400)\n+\n+EnumValue\n+Enum(frv_cpu) String(fr300) Value(FRV_CPU_FR300)\n+\n+EnumValue\n+Enum(frv_cpu) String(frv) Value(FRV_CPU_GENERIC)\n+\n mdebug\n Target Undocumented Var(TARGET_DEBUG)\n "}]}