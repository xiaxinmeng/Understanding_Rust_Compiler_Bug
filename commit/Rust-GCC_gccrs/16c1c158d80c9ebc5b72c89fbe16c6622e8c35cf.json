{"sha": "16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZjMWMxNThkODBjOWViYzViNzJjODlmYmUxNmM2NjIyZThjMzVjZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-01-25T12:35:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-01-25T12:35:13Z"}, "message": "invoke.texi (-Wcoverage-mismatch): Document.\n\n2007-01-25  Richard Guenther  <rguenther@suse.de>\n\n\t* doc/invoke.texi (-Wcoverage-mismatch): Document.\n\t* common.opt (-Wcoverage-mismatch): New warning option.\n\t* coverage.c (get_coverage_counts): Ignore coverage mismatch\n\tif -Wcoverage-mismatch is given.\n\n\t* gcc.dg/tree-prof/tree-prof.exp: Define _PROFILE_GENERATE\n\tand _PROFILE_USE.\n\t* gcc.dg/tree-prof/wcoverage-mismatch.c: New testcase.\n\nFrom-SVN: r121169", "tree": {"sha": "38aed0de4ea56447e1382d524e34a85e4c8aed61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38aed0de4ea56447e1382d524e34a85e4c8aed61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04a91788394a9f8dbea4bd528584c502cfd004e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a91788394a9f8dbea4bd528584c502cfd004e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a91788394a9f8dbea4bd528584c502cfd004e6"}], "stats": {"total": 112, "additions": 94, "deletions": 18}, "files": [{"sha": "2a8cde814b1d7d38617c0f2931aca36a61577545", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -1,3 +1,10 @@\n+2007-01-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* doc/invoke.texi (-Wcoverage-mismatch): Document.\n+\t* common.opt (-Wcoverage-mismatch): New warning option.\n+\t* coverage.c (get_coverage_counts): Ignore coverage mismatch\n+\tif -Wcoverage-mismatch is given.\n+\n 2007-01-25  Razya Ladelsky  <razya@il.ibm.com>\n \n         * ipa-cp.c (ipcp_insert_stage, ipcp_driver): Support for SSA. "}, {"sha": "0a0d287c78a8bbbcbdcd35ecc73b4e12e48c6d93", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -197,6 +197,10 @@ Wvolatile-register-var\n Common Var(warn_register_var)\n Warn when a register variable is declared volatile\n \n+Wcoverage-mismatch\n+Common RejectNegative Var(warn_coverage_mismatch)\n+Warn instead of error in case profiles in -fprofile-use do not match\n+\n aux-info\n Common Separate\n -aux-info <file>\tEmit declaration information into <file>"}, {"sha": "ba9f1285fc2dd60a63955453c3446de995a9e8f3", "filename": "gcc/coverage.c", "status": "modified", "additions": 36, "deletions": 15, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -347,25 +347,46 @@ get_coverage_counts (unsigned counter, unsigned expected,\n     {\n       warning (0, \"no coverage for function %qs found\", IDENTIFIER_POINTER\n \t       (DECL_ASSEMBLER_NAME (current_function_decl)));\n-      return 0;\n+      return NULL;\n     }\n \n   checksum = compute_checksum ();\n-  if (entry->checksum != checksum)\n-    {\n-      error (\"coverage mismatch for function %qs while reading counter %qs\",\n-\t     IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl)),\n-\t     ctr_names[counter]);\n-      error (\"checksum is %x instead of %x\", entry->checksum, checksum);\n-      return 0;\n-    }\n-  else if (entry->summary.num != expected)\n+  if (entry->checksum != checksum\n+      || entry->summary.num != expected)\n     {\n-      error (\"coverage mismatch for function %qs while reading counter %qs\",\n-\t     IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (current_function_decl)),\n-\t     ctr_names[counter]);\n-      error (\"number of counters is %d instead of %d\", entry->summary.num, expected);\n-      return 0;\n+      static int warned = 0;\n+      const char *id = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME\n+\t\t\t (current_function_decl));\n+\n+      if (warn_coverage_mismatch)\n+\twarning (OPT_Wcoverage_mismatch, \"coverage mismatch for function \"\n+\t\t \"%qs while reading counter %qs\", id, ctr_names[counter]);\n+      else\n+\terror (\"coverage mismatch for function %qs while reading counter %qs\",\n+\t       id, ctr_names[counter]);\n+\n+      if (!inhibit_warnings)\n+\t{\n+\t  if (entry->checksum != checksum)\n+\t    inform (\"checksum is %x instead of %x\", entry->checksum, checksum);\n+\t  else\n+\t    inform (\"number of counters is %d instead of %d\",\n+\t\t    entry->summary.num, expected);\n+\t}\n+\n+      if (warn_coverage_mismatch\n+\t  && !inhibit_warnings\n+\t  && !warned++)\n+\t{\n+\t  inform (\"coverage mismatch ignored due to -Wcoverage-mismatch\");\n+\t  inform (flag_guess_branch_prob\n+\t\t  ? \"execution counts estimated\"\n+\t\t  : \"execution counts assumed to be zero\");\n+\t  if (!flag_guess_branch_prob)\n+\t    inform (\"this can result in poorly optimized code\");\n+\t}\n+\n+      return NULL;\n     }\n \n   if (summary)"}, {"sha": "fee5871dc89617f03e2fc9d30483be194992f2ee", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -225,7 +225,7 @@ Objective-C and Objective-C++ Dialects}.\n -w  -Wextra  -Wall  -Waggregate-return -Walways-true -Warray-bounds @gol\n -Wno-attributes -Wc++-compat -Wc++0x-compat -Wcast-align  -Wcast-qual  @gol\n -Wchar-subscripts -Wclobbered  -Wcomment @gol\n--Wconversion  -Wno-deprecated-declarations @gol\n+-Wconversion -Wcoverage-mismatch -Wno-deprecated-declarations @gol\n -Wdisabled-optimization  -Wno-div-by-zero  @gol\n -Wempty-body  -Wno-endif-labels @gol\n -Werror  -Werror-* -Werror-implicit-function-declaration @gol\n@@ -2282,6 +2282,20 @@ diagnostic emitted, which indicates which command line option directly\n controls that diagnostic, when such an option is known to the\n diagnostic machinery.\n \n+@item -Wcoverage-mismatch\n+@opindex Wcoverage-mismatch\n+Warn if feedback profiles do not match when using the\n+@option{-fprofile-use} option.\n+If a source file was changed between @option{-fprofile-gen} and\n+@option{-fprofile-use}, the files with the profile feedback can fail\n+to match the source file and GCC can not use the profile feedback\n+information.  By default, GCC emits an error message in this case.\n+The option @option{-Wcoverage-mismatch} emits a warning instead of an\n+error.  GCC does not use appropriate feedback profiles, so using this\n+option can result in poorly optimized code.  This option is useful\n+only in the case of very minor changes such as bugfixes to an\n+existing code-base.\n+\n @end table\n \n @node Warning Options\n@@ -5613,6 +5627,10 @@ generally profitable only with profile feedback available.\n The following options are enabled: @code{-fbranch-probabilities}, @code{-fvpt},\n @code{-funroll-loops}, @code{-fpeel-loops}, @code{-ftracer}\n \n+By default, GCC emits an error message if the feedback profiles do not\n+match the source code.  This error can be turned into a warning by using\n+@option{-Wcoverage-mismatch}.  Note this may result in poorly optimized\n+code.\n @end table\n \n The following options control compiler behavior regarding floating"}, {"sha": "a769a06195561b954672e1a795ff26845d98fc36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -1,3 +1,9 @@\n+2007-01-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-prof/tree-prof.exp: Define _PROFILE_GENERATE\n+\tand _PROFILE_USE.\n+\t* gcc.dg/tree-prof/wcoverage-mismatch.c: New testcase.\n+\n 2007-01-25  Razya Ladelsky  <razya@il.ibm.com>\n \n         * gcc.dg/ipa/ipa-1.c: Update scan tree dump."}, {"sha": "70b2d4e17dd92fce21f431722d74616f7d8367cd", "filename": "gcc/testsuite/gcc.dg/tree-prof/tree-prof.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Ftree-prof.exp?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -41,8 +41,8 @@ load_lib profopt.exp\n # These are globals used by profopt-execute.  The first is options\n # needed to generate profile data, the second is options to use the\n # profile data.\n-set profile_option \"-fprofile-generate\"\n-set feedback_option \"-fprofile-use\"\n+set profile_option \"-fprofile-generate -D_PROFILE_GENERATE\"\n+set feedback_option \"-fprofile-use -D_PROFILE_USE\"\n \n foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n     # If we're only testing specific files and this isn't one of them, skip it."}, {"sha": "74fe7f8e9c85211d28f9f1196841ed11126a3dd9", "filename": "gcc/testsuite/gcc.dg/tree-prof/wcoverage-mismatch.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fwcoverage-mismatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fwcoverage-mismatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fwcoverage-mismatch.c?ref=16c1c158d80c9ebc5b72c89fbe16c6622e8c35cf", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-options \"-O2 -Wcoverage-mismatch -w\" } */\n+\n+int __attribute__((noinline)) bar (void)\n+{\n+}\n+\n+int foo (int i)\n+{\n+#ifdef _PROFILE_USE\n+  if (i)\n+    bar ();\n+#endif\n+  return 0;\n+}\n+\n+int main(int argc, char **argv)\n+{\n+  foo (argc);\n+  return 0;\n+}"}]}