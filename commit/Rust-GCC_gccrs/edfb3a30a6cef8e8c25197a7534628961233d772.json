{"sha": "edfb3a30a6cef8e8c25197a7534628961233d772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmYjNhMzBhNmNlZjhlOGMyNTE5N2E3NTM0NjI4OTYxMjMzZDc3Mg==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-07-16T15:26:10Z"}, "committer": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-07-24T10:44:43Z"}, "message": "aarch64: add PAC GNU property note to libgcc lse.S\n\nThis note is not used anywhere currently but it is supposed to mark\nobjects if the return address is protected with PAC on the stack.\nSince lse.S only has leaf functions the return address is never\nsaved on the stack so we can add the note.\n\nThe note is only added if pac-ret is enabled because it can cause\nproblems with old linkers and we don't have checks for that. This\ncan be changed later to be unconditional, for now it is consistent\nwith how gcc generates the notes.\n\nlibgcc/ChangeLog:\n\n\t* config/aarch64/lse.S: Add PAC property note.", "tree": {"sha": "8b43aa7560a31dfbcaf101fd7a5072b09151b1c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b43aa7560a31dfbcaf101fd7a5072b09151b1c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edfb3a30a6cef8e8c25197a7534628961233d772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfb3a30a6cef8e8c25197a7534628961233d772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edfb3a30a6cef8e8c25197a7534628961233d772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfb3a30a6cef8e8c25197a7534628961233d772/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0e5ec934e7a7473275326e2aee58eaf252cdff1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0e5ec934e7a7473275326e2aee58eaf252cdff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0e5ec934e7a7473275326e2aee58eaf252cdff1"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "aa3e3dc4f2dfe7cf978dfbee50ff33beea7a6a20", "filename": "libgcc/config/aarch64/lse.S", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfb3a30a6cef8e8c25197a7534628961233d772/libgcc%2Fconfig%2Faarch64%2Flse.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfb3a30a6cef8e8c25197a7534628961233d772/libgcc%2Fconfig%2Faarch64%2Flse.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Flse.S?ref=edfb3a30a6cef8e8c25197a7534628961233d772", "patch": "@@ -283,6 +283,19 @@ ENDFN\tNAME(LDNM)\n #define FEATURE_1_BTI 1\n #define FEATURE_1_PAC 2\n \n+/* Supported features based on the code generation options.  */\n+#if defined(__ARM_FEATURE_BTI_DEFAULT)\n+# define BTI_FLAG FEATURE_1_BTI\n+#else\n+# define BTI_FLAG 0\n+#endif\n+\n+#if __ARM_FEATURE_PAC_DEFAULT & 3\n+# define PAC_FLAG FEATURE_1_PAC\n+#else\n+# define PAC_FLAG 0\n+#endif\n+\n /* Add a NT_GNU_PROPERTY_TYPE_0 note.  */\n #define GNU_PROPERTY(type, value)\t\\\n   .section .note.gnu.property, \"a\";\t\\\n@@ -300,7 +313,7 @@ ENDFN\tNAME(LDNM)\n .section .note.GNU-stack, \"\", %progbits\n \n /* Add GNU property note if built with branch protection.  */\n-# ifdef __ARM_FEATURE_BTI_DEFAULT\n-GNU_PROPERTY (FEATURE_1_AND, FEATURE_1_BTI)\n+# if (BTI_FLAG|PAC_FLAG) != 0\n+GNU_PROPERTY (FEATURE_1_AND, BTI_FLAG|PAC_FLAG)\n # endif\n #endif"}]}