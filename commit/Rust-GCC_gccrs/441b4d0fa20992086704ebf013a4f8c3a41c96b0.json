{"sha": "441b4d0fa20992086704ebf013a4f8c3a41c96b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxYjRkMGZhMjA5OTIwODY3MDRlYmYwMTNhNGY4YzNhNDFjOTZiMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-11-13T08:21:16Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-11-13T08:21:16Z"}, "message": "[AArch64] More aarch64_endian_lane_rtx\n\nr254466 failed to update some uses of ENDIAN_LANE_N that were added after\nthe patch was initially written, which meant that we were treating the\nmode number as an element count.\n\n2017-11-13  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* config/aarch64/aarch64-simd.md (aarch64_store_lane0<mode>):\n\tUpddate call to ENDIAN_LANE_N.\n\t(aarch64_<sur>dot_lane<vsi2qi>): Use aarch64_endian_lane_rtx.\n\t(aarch64_<sur>dot_laneq<vsi2qi>): Likewise.\n\t(*aarch64_simd_vec_copy_lane<mode>): Update calls to ENDIAN_LANE_N\n\tand use aarch64_endian_lane_rtx.\n\t(*aarch64_simd_vec_copy_lane_<vswap_width_name><mode>): Likewise.\n\nFrom-SVN: r254670", "tree": {"sha": "3b516c242fa295288c1b96d50ba9210b64be8173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b516c242fa295288c1b96d50ba9210b64be8173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/441b4d0fa20992086704ebf013a4f8c3a41c96b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441b4d0fa20992086704ebf013a4f8c3a41c96b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441b4d0fa20992086704ebf013a4f8c3a41c96b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441b4d0fa20992086704ebf013a4f8c3a41c96b0/comments", "author": null, "committer": null, "parents": [{"sha": "41a0d8d4c09552cf8242e30ac9137960f4ded681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a0d8d4c09552cf8242e30ac9137960f4ded681", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41a0d8d4c09552cf8242e30ac9137960f4ded681"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "dce8e02ba80750e66fa59187ae062917052d3263", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441b4d0fa20992086704ebf013a4f8c3a41c96b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441b4d0fa20992086704ebf013a4f8c3a41c96b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=441b4d0fa20992086704ebf013a4f8c3a41c96b0", "patch": "@@ -1,3 +1,13 @@\n+2017-11-13  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_store_lane0<mode>):\n+\tUpddate call to ENDIAN_LANE_N.\n+\t(aarch64_<sur>dot_lane<vsi2qi>): Use aarch64_endian_lane_rtx.\n+\t(aarch64_<sur>dot_laneq<vsi2qi>): Likewise.\n+\t(*aarch64_simd_vec_copy_lane<mode>): Update calls to ENDIAN_LANE_N\n+\tand use aarch64_endian_lane_rtx.\n+\t(*aarch64_simd_vec_copy_lane_<vswap_width_name><mode>): Likewise.\n+\n 2017-11-12  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/riscv/riscv.h (ASM_OUTPUT_LABELREF): Wrap in do {} while (0)."}, {"sha": "2ee0953998140ec98dd37732df3f6b75d67d0a59", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441b4d0fa20992086704ebf013a4f8c3a41c96b0/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441b4d0fa20992086704ebf013a4f8c3a41c96b0/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=441b4d0fa20992086704ebf013a4f8c3a41c96b0", "patch": "@@ -173,7 +173,7 @@\n \t(vec_select:<VEL> (match_operand:VALL_F16 1 \"register_operand\" \"w\")\n \t\t\t(parallel [(match_operand 2 \"const_int_operand\" \"n\")])))]\n   \"TARGET_SIMD\n-   && ENDIAN_LANE_N (<MODE>mode, INTVAL (operands[2])) == 0\"\n+   && ENDIAN_LANE_N (<nunits>, INTVAL (operands[2])) == 0\"\n   \"str\\\\t%<Vetype>1, %0\"\n   [(set_attr \"type\" \"neon_store1_1reg<q>\")]\n )\n@@ -450,8 +450,7 @@\n \t\tDOTPROD)))]\n   \"TARGET_DOTPROD\"\n   {\n-    operands[4]\n-      = GEN_INT (ENDIAN_LANE_N (V8QImode, INTVAL (operands[4])));\n+    operands[4] = aarch64_endian_lane_rtx (V8QImode, INTVAL (operands[4]));\n     return \"<sur>dot\\\\t%0.<Vtype>, %2.<Vdottype>, %3.4b[%4]\";\n   }\n   [(set_attr \"type\" \"neon_dot\")]\n@@ -466,8 +465,7 @@\n \t\tDOTPROD)))]\n   \"TARGET_DOTPROD\"\n   {\n-    operands[4]\n-      = GEN_INT (ENDIAN_LANE_N (V16QImode, INTVAL (operands[4])));\n+    operands[4] = aarch64_endian_lane_rtx (V16QImode, INTVAL (operands[4]));\n     return \"<sur>dot\\\\t%0.<Vtype>, %2.<Vdottype>, %3.4b[%4]\";\n   }\n   [(set_attr \"type\" \"neon_dot\")]\n@@ -734,9 +732,9 @@\n \t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"TARGET_SIMD\"\n   {\n-    int elt = ENDIAN_LANE_N (<MODE>mode, exact_log2 (INTVAL (operands[2])));\n+    int elt = ENDIAN_LANE_N (<nunits>, exact_log2 (INTVAL (operands[2])));\n     operands[2] = GEN_INT (HOST_WIDE_INT_1 << elt);\n-    operands[4] = GEN_INT (ENDIAN_LANE_N (<MODE>mode, INTVAL (operands[4])));\n+    operands[4] = aarch64_endian_lane_rtx (<MODE>mode, INTVAL (operands[4]));\n \n     return \"ins\\t%0.<Vetype>[%p2], %3.<Vetype>[%4]\";\n   }\n@@ -755,10 +753,10 @@\n \t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"TARGET_SIMD\"\n   {\n-    int elt = ENDIAN_LANE_N (<MODE>mode, exact_log2 (INTVAL (operands[2])));\n+    int elt = ENDIAN_LANE_N (<nunits>, exact_log2 (INTVAL (operands[2])));\n     operands[2] = GEN_INT (HOST_WIDE_INT_1 << elt);\n-    operands[4] = GEN_INT (ENDIAN_LANE_N (<VSWAP_WIDTH>mode,\n-\t\t\t   INTVAL (operands[4])));\n+    operands[4] = aarch64_endian_lane_rtx (<VSWAP_WIDTH>mode,\n+\t\t\t\t\t   INTVAL (operands[4]));\n \n     return \"ins\\t%0.<Vetype>[%p2], %3.<Vetype>[%4]\";\n   }"}]}