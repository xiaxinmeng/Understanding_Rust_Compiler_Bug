{"sha": "b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU5ZTA0NTVlMWVjYWEzMTgzYjljOWM4YjU2Mjg2YjM5YzM1ZWU1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-09T07:21:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-09T07:21:21Z"}, "message": "re PR rtl-optimization/59724 (ICE : in rtl_verify_bb_layout, at cfgrtl.c)\n\n\tPR rtl-optimization/59724\n\t* ifcvt.c (cond_exec_process_if_block): Don't call\n\tflow_find_head_matching_sequence with 0 longest_match.\n\t* cfgcleanup.c (flow_find_head_matching_sequence): Count even\n\tnon-active insns if !stop_after.\n\t(try_head_merge_bb): Revert 2014-01-07 changes.\n\nFrom-SVN: r206456", "tree": {"sha": "7e5acf9afd4878e132bc81f2bc999e0067bd8c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e5acf9afd4878e132bc81f2bc999e0067bd8c1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "650c4c8531379e3dc60129344d466bcc03abed8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/650c4c8531379e3dc60129344d466bcc03abed8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/650c4c8531379e3dc60129344d466bcc03abed8b"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "7c691d2dbc28229f28e1e1b4356d663134adc6a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "patch": "@@ -1,3 +1,12 @@\n+2014-01-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/59724\n+\t* ifcvt.c (cond_exec_process_if_block): Don't call\n+\tflow_find_head_matching_sequence with 0 longest_match.\n+\t* cfgcleanup.c (flow_find_head_matching_sequence): Count even\n+\tnon-active insns if !stop_after.\n+\t(try_head_merge_bb): Revert 2014-01-07 changes.\n+\n 2014-01-08  Jeff Law  <law@redhat.com>\n \n \t* ree.c (get_sub_rtx): New function, extracted from..."}, {"sha": "77196ee6bf71e7ddd35e2589379bfd6da9932d84", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "patch": "@@ -1421,7 +1421,8 @@ flow_find_cross_jump (basic_block bb1, basic_block bb2, rtx *f1, rtx *f2,\n /* Like flow_find_cross_jump, except start looking for a matching sequence from\n    the head of the two blocks.  Do not include jumps at the end.\n    If STOP_AFTER is nonzero, stop after finding that many matching\n-   instructions.  */\n+   instructions.  If STOP_AFTER is zero, count all INSN_P insns, if it is\n+   non-zero, only count active insns.  */\n \n int\n flow_find_head_matching_sequence (basic_block bb1, basic_block bb2, rtx *f1,\n@@ -1493,7 +1494,7 @@ flow_find_head_matching_sequence (basic_block bb1, basic_block bb2, rtx *f1,\n \n \t  beforelast1 = last1, beforelast2 = last2;\n \t  last1 = i1, last2 = i2;\n-\t  if (active_insn_p (i1))\n+\t  if (!stop_after || active_insn_p (i1))\n \t    ninsns++;\n \t}\n \n@@ -2408,7 +2409,9 @@ try_head_merge_bb (basic_block bb)\n       max_match--;\n       if (max_match == 0)\n \treturn false;\n-      e0_last_head = prev_active_insn (e0_last_head);\n+      do\n+\te0_last_head = prev_real_insn (e0_last_head);\n+      while (DEBUG_INSN_P (e0_last_head));\n     }\n \n   if (max_match == 0)\n@@ -2428,14 +2431,16 @@ try_head_merge_bb (basic_block bb)\n       basic_block merge_bb = EDGE_SUCC (bb, ix)->dest;\n       rtx head = BB_HEAD (merge_bb);\n \n-      if (!active_insn_p (head))\n-\thead = next_active_insn (head);\n+      while (!NONDEBUG_INSN_P (head))\n+\thead = NEXT_INSN (head);\n       headptr[ix] = head;\n       currptr[ix] = head;\n \n       /* Compute the end point and live information  */\n       for (j = 1; j < max_match; j++)\n-\thead = next_active_insn (head);\n+\tdo\n+\t  head = NEXT_INSN (head);\n+\twhile (!NONDEBUG_INSN_P (head));\n       simulate_backwards_to_point (merge_bb, live, head);\n       IOR_REG_SET (live_union, live);\n     }"}, {"sha": "51293651e9cc5fe63491bd6e45756ccb69a1fd74", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59e0455e1ecaa3183b9c9c8b56286b39c35ee55/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=b59e0455e1ecaa3183b9c9c8b56286b39c35ee55", "patch": "@@ -522,7 +522,10 @@ cond_exec_process_if_block (ce_if_block * ce_info,\n \t  n_insns -= 2 * n_matching;\n \t}\n \n-      if (then_start && else_start)\n+      if (then_start\n+\t  && else_start\n+\t  && then_n_insns > n_matching\n+\t  && else_n_insns > n_matching)\n \t{\n \t  int longest_match = MIN (then_n_insns - n_matching,\n \t\t\t\t   else_n_insns - n_matching);"}]}