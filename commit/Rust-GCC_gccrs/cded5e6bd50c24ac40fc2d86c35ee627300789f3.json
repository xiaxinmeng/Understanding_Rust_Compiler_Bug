{"sha": "cded5e6bd50c24ac40fc2d86c35ee627300789f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlZDVlNmJkNTBjMjRhYzQwZmMyZDg2YzM1ZWU2MjczMDA3ODlmMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-27T01:59:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-27T01:59:41Z"}, "message": "locale_facets.tcc (num_put<>::_M_insert_int): When ios_base::showpos and the type is signed and the value is zero, prepend +.\n\n2007-11-26  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (num_put<>::_M_insert_int): When\n\tios_base::showpos and the type is signed and the value is zero,\n\tprepend +.\n\t* testsuite/22_locale/num_put/put/char/12.cc: New.\n\t* testsuite/22_locale/num_put/put/wchar_t/12.cc: Likewise.\n\nFrom-SVN: r130460", "tree": {"sha": "c09cb8fb9354473ffb8723ab94695ab22ba1e585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c09cb8fb9354473ffb8723ab94695ab22ba1e585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cded5e6bd50c24ac40fc2d86c35ee627300789f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded5e6bd50c24ac40fc2d86c35ee627300789f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cded5e6bd50c24ac40fc2d86c35ee627300789f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded5e6bd50c24ac40fc2d86c35ee627300789f3/comments", "author": null, "committer": null, "parents": [{"sha": "aac47cd15451ddc8ef2141386478f27431cb10bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac47cd15451ddc8ef2141386478f27431cb10bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac47cd15451ddc8ef2141386478f27431cb10bb"}], "stats": {"total": 140, "additions": 138, "deletions": 2}, "files": [{"sha": "c3b5392800d1cb8d6ec713bf24e9a08d0061dc21", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cded5e6bd50c24ac40fc2d86c35ee627300789f3", "patch": "@@ -1,3 +1,11 @@\n+2007-11-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (num_put<>::_M_insert_int): When\n+\tios_base::showpos and the type is signed and the value is zero,\n+\tprepend +.\n+\t* testsuite/22_locale/num_put/put/char/12.cc: New.\n+\t* testsuite/22_locale/num_put/put/wchar_t/12.cc: Likewise.\n+\n 2007-11-26  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/25913"}, {"sha": "744e373f54af3c98cc6cc094e60e6aa512cc5e99", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=cded5e6bd50c24ac40fc2d86c35ee627300789f3", "patch": "@@ -874,13 +874,13 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \tif (__builtin_expect(__dec, true))\n \t  {\n \t    // Decimal.\n-\t    if (__v > 0)\n+\t    if (__v >= 0)\n \t      {\n \t\tif (bool(__flags & ios_base::showpos)\n \t\t    && __gnu_cxx::__numeric_traits<_ValueT>::__is_signed)\n \t\t  *--__cs = __lit[__num_base::_S_oplus], ++__len;\n \t      }\n-\t    else if (__v)\n+\t    else\n \t      *--__cs = __lit[__num_base::_S_ominus], ++__len;\n \t  }\n \telse if (bool(__flags & ios_base::showbase) && __v)"}, {"sha": "c17ecec8171b0fe1c2122b3051328750d098487e", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/12.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F12.cc?ref=cded5e6bd50c24ac40fc2d86c35ee627300789f3", "patch": "@@ -0,0 +1,64 @@\n+// 2007-11-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// http://gcc.gnu.org/ml/libstdc++/2007-11/msg00074.html\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  ostringstream oss1, oss2, oss3;\n+  const num_put<char>& np1 = use_facet<num_put<char> >(oss1.getloc());\n+  const num_put<char>& np2 = use_facet<num_put<char> >(oss2.getloc());\n+  const num_put<char>& np3 = use_facet<num_put<char> >(oss3.getloc());\n+\n+  string result1, result2, result3;\n+\n+  long int li1 = 0;\n+  long int li2 = 5;\n+  double d1 = 0.0;\n+\n+  oss1.setf(ios_base::showpos);\n+  np1.put(oss1.rdbuf(), oss1, '*', li1);\n+  result1 = oss1.str();\n+  VERIFY( result1 == \"+0\" );\n+\n+  oss2.setf(ios_base::showpos);\n+  np2.put(oss2.rdbuf(), oss2, '*', li2);\n+  result2 = oss2.str();\n+  VERIFY( result2 == \"+5\" );\n+\n+  oss3.setf(ios_base::showpos);\n+  np3.put(oss3.rdbuf(), oss3, '*', d1);\n+  result3 = oss3.str();\n+  VERIFY( result3 == \"+0\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "1467aa3d4a69d94ce8529954b7e4721e636f027c", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/12.cc", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F12.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cded5e6bd50c24ac40fc2d86c35ee627300789f3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F12.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F12.cc?ref=cded5e6bd50c24ac40fc2d86c35ee627300789f3", "patch": "@@ -0,0 +1,64 @@\n+// 2007-11-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2007 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// http://gcc.gnu.org/ml/libstdc++/2007-11/msg00074.html\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wostringstream oss1, oss2, oss3;\n+  const num_put<wchar_t>& np1 = use_facet<num_put<wchar_t> >(oss1.getloc());\n+  const num_put<wchar_t>& np2 = use_facet<num_put<wchar_t> >(oss2.getloc());\n+  const num_put<wchar_t>& np3 = use_facet<num_put<wchar_t> >(oss3.getloc());\n+\n+  wstring result1, result2, result3;\n+\n+  long int li1 = 0;\n+  long int li2 = 5;\n+  double d1 = 0.0;\n+\n+  oss1.setf(ios_base::showpos);\n+  np1.put(oss1.rdbuf(), oss1, L'*', li1);\n+  result1 = oss1.str();\n+  VERIFY( result1 == L\"+0\" );\n+\n+  oss2.setf(ios_base::showpos);\n+  np2.put(oss2.rdbuf(), oss2, L'*', li2);\n+  result2 = oss2.str();\n+  VERIFY( result2 == L\"+5\" );\n+\n+  oss3.setf(ios_base::showpos);\n+  np3.put(oss3.rdbuf(), oss3, L'*', d1);\n+  result3 = oss3.str();\n+  VERIFY( result3 == L\"+0\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}