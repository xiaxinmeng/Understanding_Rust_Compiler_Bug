{"sha": "317a9ac39e4be89ef37112202c1bc2a55280299d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE3YTlhYzM5ZTRiZTg5ZWYzNzExMjIwMmMxYmMyYTU1MjgwMjk5ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-05-11T07:33:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-05-11T07:33:31Z"}, "message": "re PR c/21502 (small data relocation mismatch)\n\n        PR c/21502\n        * c-decl.c (finish_decl): Propagate the completed array type of\n        a global variable into the binding.\n\nFrom-SVN: r99563", "tree": {"sha": "e1b874c70f6faf84aed3125f9e65ab492e614198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1b874c70f6faf84aed3125f9e65ab492e614198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/317a9ac39e4be89ef37112202c1bc2a55280299d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317a9ac39e4be89ef37112202c1bc2a55280299d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317a9ac39e4be89ef37112202c1bc2a55280299d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317a9ac39e4be89ef37112202c1bc2a55280299d/comments", "author": null, "committer": null, "parents": [{"sha": "da32fddcb6e41f878ea05dd46ad677a2d821c70e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da32fddcb6e41f878ea05dd46ad677a2d821c70e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da32fddcb6e41f878ea05dd46ad677a2d821c70e"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "f9e5d1498a25d49b5d7246efaf2e0fb13c68f935", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317a9ac39e4be89ef37112202c1bc2a55280299d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317a9ac39e4be89ef37112202c1bc2a55280299d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=317a9ac39e4be89ef37112202c1bc2a55280299d", "patch": "@@ -1,3 +1,9 @@\n+2005-05-11  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c/21502\n+\t* c-decl.c (finish_decl): Propagate the completed array type of\n+\ta global variable into the binding.\n+\n 2005-05-10  Matt Kraai  <kraai@ftbfs.org>\n \n \t* Makefile.in (gtype-desc.o, build/genautomata.o)"}, {"sha": "6c9ab457510740328ee894d260fb040804d7b3f8", "filename": "gcc/c-decl.c", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317a9ac39e4be89ef37112202c1bc2a55280299d/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317a9ac39e4be89ef37112202c1bc2a55280299d/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=317a9ac39e4be89ef37112202c1bc2a55280299d", "patch": "@@ -3275,11 +3275,13 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n       /* Get the completed type made by complete_array_type.  */\n       type = TREE_TYPE (decl);\n \n-      if (failure == 1)\n-\terror (\"%Jinitializer fails to determine size of %qD\", decl, decl);\n-\n-      else if (failure == 2)\n+      switch (failure)\n \t{\n+\tcase 1:\n+\t  error (\"%Jinitializer fails to determine size of %qD\", decl, decl);\n+\t  break;\n+\n+\tcase 2:\n \t  if (do_default)\n \t    error (\"%Jarray size missing in %qD\", decl, decl);\n \t  /* If a `static' var's size isn't known,\n@@ -3290,9 +3292,33 @@ finish_decl (tree decl, tree init, tree asmspec_tree)\n \t     and it will get allocated.  */\n \t  else if (!pedantic && TREE_STATIC (decl) && !TREE_PUBLIC (decl))\n \t    DECL_EXTERNAL (decl) = 1;\n+\t  break;\n+\n+\tcase 3:\n+\t  error (\"%Jzero or negative size array %qD\", decl, decl);\n+\t  break;\n+\n+\tcase 0:\n+\t  /* For global variables, update the copy of the type that\n+\t     exists in the binding.  */\n+\t  if (TREE_PUBLIC (decl))\n+\t    {\n+\t      struct c_binding *b_ext = I_SYMBOL_BINDING (DECL_NAME (decl));\n+\t      while (b_ext && !B_IN_EXTERNAL_SCOPE (b_ext))\n+\t\tb_ext = b_ext->shadowed;\n+\t      if (b_ext)\n+\t\t{\n+\t\t  if (b_ext->type)\n+\t\t    b_ext->type = composite_type (b_ext->type, type);\n+\t\t  else\n+\t\t    b_ext->type = type;\n+\t\t}\n+\t    }\n+\t  break;\n+\n+\tdefault:\n+\t  gcc_unreachable ();\n \t}\n-      else if (failure == 3)\n-\terror (\"%Jzero or negative size array %qD\", decl, decl);\n \n       if (DECL_INITIAL (decl))\n \tTREE_TYPE (DECL_INITIAL (decl)) = type;"}, {"sha": "52941cb084b2bb01880be9779b7d64b6345dc944", "filename": "gcc/testsuite/gcc.dg/redecl-16.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317a9ac39e4be89ef37112202c1bc2a55280299d/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317a9ac39e4be89ef37112202c1bc2a55280299d/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-16.c?ref=317a9ac39e4be89ef37112202c1bc2a55280299d", "patch": "@@ -0,0 +1,18 @@\n+/* PR 21502 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+typedef int IA[];\n+typedef int IA5[5];\n+typedef int IA10[10];\n+typedef IA *IAP;\n+typedef IA5 *IA5P;\n+typedef IA10 *IA10P;\n+extern IAP a[];\n+void\n+f (void)\n+{\n+  extern IA5P a[];\n+}\n+IAP a[] = { 0 };\t/* { dg-error \"previous definition\" } */\n+extern IA10P a[];\t/* { dg-error \"conflicting types\" } */"}]}