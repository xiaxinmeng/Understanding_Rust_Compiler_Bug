{"sha": "ca5b800aa27c07962b2a7c855d3842e64126988a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1YjgwMGFhMjdjMDc5NjJiMmE3Yzg1NWQzODQyZTY0MTI2OTg4YQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-01T02:34:39Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-01T02:34:39Z"}, "message": "(check_newline): Support HANDLE_SYSV_PRAGMA.\n\n(handle_sysv_pragma): New function.\n\nFrom-SVN: r1367", "tree": {"sha": "b9a1983a4e5cdec5c7f5bfc894d92127ffb2db17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9a1983a4e5cdec5c7f5bfc894d92127ffb2db17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca5b800aa27c07962b2a7c855d3842e64126988a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5b800aa27c07962b2a7c855d3842e64126988a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5b800aa27c07962b2a7c855d3842e64126988a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5b800aa27c07962b2a7c855d3842e64126988a/comments", "author": null, "committer": null, "parents": [{"sha": "4c41bbfa769371a67cae3de8256c8da2b4d02385", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c41bbfa769371a67cae3de8256c8da2b4d02385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c41bbfa769371a67cae3de8256c8da2b4d02385"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "75a7f4ddff0998feacb2f7b6455d620cecb06cf5", "filename": "gcc/c-lex.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5b800aa27c07962b2a7c855d3842e64126988a/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5b800aa27c07962b2a7c855d3842e64126988a/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=ca5b800aa27c07962b2a7c855d3842e64126988a", "patch": "@@ -481,6 +481,15 @@ check_newline ()\n \t      && getc (finput) == 'a'\n \t      && ((c = getc (finput)) == ' ' || c == '\\t' || c == '\\n'))\n \t    {\n+#ifdef HANDLE_SYSV_PRAGMA\n+\t      c = handle_sysv_pragma (finput, c);\n+\t      if (c >= 0)\n+\t\t;\n+\t      else if (nextchar >= 0)\n+\t\tc = nextchar, nextchar = -1;\n+\t      else\n+\t\tc = getc (finput);\n+#endif /* HANDLE_SYSV_PRAGMA */\n #ifdef HANDLE_PRAGMA\n \t      HANDLE_PRAGMA (finput);\n #endif /* HANDLE_PRAGMA */\n@@ -729,6 +738,45 @@ check_newline ()\n   return c;\n }\n \f\n+#ifdef HANDLE_SYSV_PRAGMA\n+\n+/* Handle a #pragma directive.  INPUT is the current input stream,\n+   and C is a character to reread.\n+   Returns a character for the caller to reread,\n+   or -1 meaning there isn't one.  */\n+\n+/* This function has to be in this file, in order to get at\n+   the token types.  */\n+\n+int\n+handle_sysv_pragma (input, c)\n+     FILE *input;\n+     int c;\n+{\n+  while (c == ' ' || c == '\\t')\n+    c = getc (input);\n+  if (c == '\\n' || c == EOF)\n+    {\n+      handle_pragma_token (0, 0);\n+      return c;\n+    }\n+  ungetc (c, input);\n+  switch (yylex ())\n+    {\n+    case IDENTIFIER:\n+    case TYPENAME:\n+    case STRING:\n+    case CONSTANT:\n+      handle_pragma_token (token_buffer, yylval.ttype);\n+      break;\n+    default:\n+      handle_pragma_token (token_buffer, 0);\n+    }\n+  return -1;\n+}\n+\n+#endif /* HANDLE_SYSV_PRAGMA */\n+\f\n #define isalnum(char) ((char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9'))\n #define isdigit(char) (char >= '0' && char <= '9')\n #define ENDFILE -1  /* token that represents end-of-file */"}]}