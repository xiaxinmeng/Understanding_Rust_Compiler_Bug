{"sha": "6085e66e950e9b5666e5018ed3b178cbd3b3a6a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA4NWU2NmU5NTBlOWI1NjY2ZTUwMThlZDNiMTc4Y2JkM2IzYTZhNQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@moxielogic.com", "date": "2015-01-10T02:02:02Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2015-01-10T02:02:02Z"}, "message": "Tabify assembly output for moxie\n\nFrom-SVN: r219421", "tree": {"sha": "65844e9b7d3559ee8511da92daade0192a6fe368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65844e9b7d3559ee8511da92daade0192a6fe368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d763aec9e08675fe3ac69eca5bcc41ca24e41bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d763aec9e08675fe3ac69eca5bcc41ca24e41bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d763aec9e08675fe3ac69eca5bcc41ca24e41bb"}], "stats": {"total": 136, "additions": 70, "deletions": 66}, "files": [{"sha": "8ca31141ee806f28e80bb7b61459e871274d580f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6085e66e950e9b5666e5018ed3b178cbd3b3a6a5", "patch": "@@ -1,3 +1,7 @@\n+2015-01-09  Anthony Green  <green@moxielogic.com>\n+\n+\t* config/moxie/moxie.md: Tabify assembly output.\n+\n 2015-01-09  Anthony Green  <green@moxielogic.com>\n \n \t* config/moxie/moxie.md (CC_REG): Correct register definition."}, {"sha": "d09f3b19e69729fb50061bae28444f75a64daf05", "filename": "gcc/config/moxie/moxie.md", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5/gcc%2Fconfig%2Fmoxie%2Fmoxie.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6085e66e950e9b5666e5018ed3b178cbd3b3a6a5/gcc%2Fconfig%2Fmoxie%2Fmoxie.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.md?ref=6085e66e950e9b5666e5018ed3b178cbd3b3a6a5", "patch": "@@ -48,9 +48,9 @@\n \t   (match_operand:SI 2 \"moxie_add_operand\" \"I,N,r\")))]\n   \"\"\n   \"@\n-  inc    %0, %2\n-  dec\t %0, -%2\n-  add    %0, %2\")\n+  inc\\\\t%0, %2\n+  dec\\\\t%0, -%2\n+  add\\\\t%0, %2\")\n \n (define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -59,16 +59,16 @@\n \t   (match_operand:SI 2 \"moxie_sub_operand\" \"I,r\")))]\n   \"\"\n   \"@\n-  dec    %0, %2\n-  sub    %0, %2\")\n+  dec\\\\t%0, %2\n+  sub\\\\t%0, %2\")\n \n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t  (mult:SI\n \t   (match_operand:SI 1 \"register_operand\" \"0\")\n \t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"mul    %0, %2\")\n+  \"mul\\\\t%0, %2\")\n \n (define_code_iterator EXTEND [sign_extend zero_extend])\n (define_code_attr mul [(sign_extend \"mul\") (zero_extend \"umul\")])\n@@ -105,31 +105,31 @@\n \t   (match_operand:SI 1 \"register_operand\" \"0\")\n \t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"div    %0, %2\")\n+  \"div\\\\t%0, %2\")\n \n (define_insn \"udivsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t  (udiv:SI\n \t   (match_operand:SI 1 \"register_operand\" \"0\")\n \t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"udiv   %0, %2\")\n+  \"udiv\\\\t%0, %2\")\n \n (define_insn \"modsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t  (mod:SI\n \t   (match_operand:SI 1 \"register_operand\" \"0\")\n \t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"mod    %0, %2\")\n+  \"mod\\\\t%0, %2\")\n \n (define_insn \"umodsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t  (umod:SI\n \t   (match_operand:SI 1 \"register_operand\" \"0\")\n \t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"umod   %0, %2\")\n+  \"umod\\\\t%0, %2\")\n \n ;; -------------------------------------------------------------------------\n ;; Unary arithmetic instructions\n@@ -139,13 +139,13 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t  (neg:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"neg    %0, %1\")\n+  \"neg\\\\t%0, %1\")\n \n (define_insn \"one_cmplsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(not:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n   \"\"\n-  \"not    %0, %1\")\n+  \"not\\\\t%0, %1\")\n \n ;; -------------------------------------------------------------------------\n ;; Logical operators\n@@ -157,7 +157,7 @@\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n {\n-  return \"and    %0, %2\";\n+  return \"and\\\\t%0, %2\";\n })\n \n (define_insn \"xorsi3\"\n@@ -166,7 +166,7 @@\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n {\n-  return \"xor    %0, %2\";\n+  return \"xor\\\\t%0, %2\";\n })\n \n (define_insn \"iorsi3\"\n@@ -175,7 +175,7 @@\n \t\t(match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n {\n-  return \"or     %0, %2\";\n+  return \"or\\\\t%0, %2\";\n })\n \n ;; -------------------------------------------------------------------------\n@@ -188,7 +188,7 @@\n \t\t   (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n {\n-  return \"ashl   %0, %2\";\n+  return \"ashl\\\\t%0, %2\";\n })\n \n (define_insn \"ashrsi3\"\n@@ -197,7 +197,7 @@\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n {\n-  return \"ashr   %0, %2\";\n+  return \"ashr\\\\t%0, %2\";\n })\n \n (define_insn \"lshrsi3\"\n@@ -206,7 +206,7 @@\n \t\t     (match_operand:SI 2 \"register_operand\" \"r\")))]\n   \"\"\n {\n-  return \"lshr   %0, %2\";\n+  return \"lshr\\\\t%0, %2\";\n })\n \n ;; -------------------------------------------------------------------------\n@@ -220,14 +220,14 @@\n   [(set (mem:SI (pre_dec:SI (reg:SI 1)))\n   \t(match_operand:SI 0 \"register_operand\" \"r\"))]\n   \"\"\n-  \"push   $sp, %0\")\n+  \"push\\\\t$sp, %0\")\n \n ;; Pop a register from the stack\n (define_insn \"movsi_pop\"\n   [(set (match_operand:SI 1 \"register_operand\" \"=r\")\n   \t(mem:SI (post_inc:SI (match_operand:SI 0 \"register_operand\" \"r\"))))]\n   \"\"\n-  \"pop    %0, %1\")\n+  \"pop\\\\t%0, %1\")\n \n (define_expand \"movsi\"\n    [(set (match_operand:SI 0 \"general_operand\" \"\")\n@@ -257,53 +257,53 @@\n   \"register_operand (operands[0], SImode)\n    || register_operand (operands[1], SImode)\"\n   \"@\n-   xor    %0, %0\n-   mov    %0, %1\n-   ldi.l  %0, %1\n-   st.l   %0, %1\n-   sta.l  %0, %1\n-   ld.l   %0, %1\n-   lda.l  %0, %1\n-   sto.l  %0, %1\n-   ldo.l  %0, %1\"\n+   xor\\\\t%0, %0\n+   mov\\\\t%0, %1\n+   ldi.l\\\\t%0, %1\n+   st.l\\\\t%0, %1\n+   sta.l\\\\t%0, %1\n+   ld.l\\\\t%0, %1\n+   lda.l\\\\t%0, %1\n+   sto.l\\\\t%0, %1\n+   ldo.l\\\\t%0, %1\"\n   [(set_attr \"length\"\t\"2,2,6,2,6,2,6,4,4\")])\n \n (define_insn \"zero_extendqisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(zero_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"r,W,A,B\")))]\n   \"\"\n   \"@\n-   zex.b  %0, %1\n-   ld.b   %0, %1\n-   lda.b  %0, %1\n-   ldo.b  %0, %1\"\n+   zex.b\\\\t%0, %1\n+   ld.b\\\\t%0, %1\n+   lda.b\\\\t%0, %1\n+   ldo.b\\\\t%0, %1\"\n   [(set_attr \"length\" \"2,2,6,4\")])\n \n (define_insn \"zero_extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(zero_extend:SI (match_operand:HI 1 \"nonimmediate_operand\" \"r,W,A,B\")))]\n   \"\"\n   \"@\n-   zex.s  %0, %1\n-   ld.s   %0, %1\n-   lda.s  %0, %1\n-   ldo.s  %0, %1\"\n+   zex.s\\\\t%0, %1\n+   ld.s\\\\t%0, %1\n+   lda.s\\\\t%0, %1\n+   ldo.s\\\\t%0, %1\"\n   [(set_attr \"length\" \"2,2,6,4\")])\n \n (define_insn \"extendqisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"r\")))]\n   \"\"\n   \"@\n-   sex.b  %0, %1\"\n+   sex.b\\\\t%0, %1\"\n   [(set_attr \"length\" \"2\")])\n \n (define_insn \"extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(sign_extend:SI (match_operand:HI 1 \"nonimmediate_operand\" \"r\")))]\n   \"\"\n   \"@\n-   sex.s  %0, %1\"\n+   sex.s\\\\t%0, %1\"\n   [(set_attr \"length\" \"2\")])\n \n (define_expand \"movqi\"\n@@ -323,15 +323,15 @@\n   \"register_operand (operands[0], QImode)\n    || register_operand (operands[1], QImode)\"\n   \"@\n-   xor    %0, %0\n-   mov    %0, %1\n-   ldi.b  %0, %1\n-   st.b   %0, %1\n-   sta.b  %0, %1\n-   ld.b   %0, %1\n-   lda.b  %0, %1\n-   sto.b  %0, %1\n-   ldo.b  %0, %1\"\n+   xor\\\\t%0, %0\n+   mov\\\\t%0, %1\n+   ldi.b\\\\t%0, %1\n+   st.b\\\\t%0, %1\n+   sta.b\\\\t%0, %1\n+   ld.b\\\\t%0, %1\n+   lda.b\\\\t%0, %1\n+   sto.b\\\\t%0, %1\n+   ldo.b\\\\t%0, %1\"\n   [(set_attr \"length\"\t\"2,2,6,2,6,2,6,4,4\")])\n \n (define_expand \"movhi\"\n@@ -351,15 +351,15 @@\n   \"(register_operand (operands[0], HImode)\n     || register_operand (operands[1], HImode))\"\n   \"@\n-   xor    %0, %0\n-   mov    %0, %1\n-   ldi.s  %0, %1\n-   st.s   %0, %1\n-   sta.s  %0, %1\n-   ld.s   %0, %1\n-   lda.s  %0, %1\n-   sto.s  %0, %1\n-   ldo.s  %0, %1\"\n+   xor\\\\t%0, %0\n+   mov\\\\t%0, %1\n+   ldi.s\\\\t%0, %1\n+   st.s\\\\t%0, %1\n+   sta.s\\\\t%0, %1\n+   ld.s\\\\t%0, %1\n+   lda.s\\\\t%0, %1\n+   sto.s\\\\t%0, %1\n+   ldo.s\\\\t%0, %1\"\n   [(set_attr \"length\"\t\"2,2,6,2,6,2,6,4,4\")])\n \n ;; -------------------------------------------------------------------------\n@@ -394,7 +394,7 @@\n \t (match_operand:SI 0 \"register_operand\" \"r\")\n \t (match_operand:SI 1 \"register_operand\"\t\"r\")))]\n   \"\"\n-  \"cmp    %0, %1\")\n+  \"cmp\\\\t%0, %1\")\n \n \n ;; -------------------------------------------------------------------------\n@@ -418,9 +418,9 @@\n   \"\"\n {\n   if (get_attr_length (insn) == 2)\n-    return \"b<CC>   %l0\";\n+    return \"b<CC>\\\\t%l0\";\n   else\n-    return \"b<rCC>   .+6\\n\\tjmpa   %l0\";\n+    return \"b<rCC>\\\\t.+6\\n\\tjmpa   %l0\";\n }\n   [(set (attr \"length\")\n         (if_then_else (lt (abs (minus (pc) (match_dup 0))) (const_int 1022))\n@@ -444,8 +444,8 @@\n \t (match_operand 1 \"\" \"\"))]\n   \"\"\n   \"@\n-   jsra   %0\n-   jsr    %0\"\n+   jsra\\\\t%0\n+   jsr\\\\t%0\"\n   [(set_attr \"length\"\t\"6,2\")])\n \n (define_expand \"call_value\"\n@@ -463,7 +463,7 @@\n \t\t       1 \"immediate_operand\" \"i\"))\n \t      (match_operand 2 \"\" \"\")))]\n   \"\"\n-  \"jsra   %1\"\n+  \"jsra\\\\t%1\"\n   [(set_attr \"length\"\t\"6\")])\n \n (define_insn \"*call_value_indirect\"\n@@ -472,18 +472,18 @@\n \t\t       1 \"register_operand\" \"r\"))\n \t      (match_operand 2 \"\" \"\")))]\n   \"\"\n-  \"jsr    %1\")\n+  \"jsr\\\\t%1\")\n \n (define_insn \"indirect_jump\"\n   [(set (pc) (match_operand:SI 0 \"nonimmediate_operand\" \"r\"))]\n   \"\"\n-  \"jmp    %0\")\n+  \"jmp\\\\t%0\")\n \n (define_insn \"jump\"\n   [(set (pc)\n \t(label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n-  \"jmpa   %l0\"\n+  \"jmpa\\\\t%l0\"\n   [(set_attr \"length\"\t\"6\")])\n \n "}]}