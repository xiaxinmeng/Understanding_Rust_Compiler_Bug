{"sha": "c0e50f7246effd184a626f401784df686767d389", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBlNTBmNzI0NmVmZmQxODRhNjI2ZjQwMTc4NGRmNjg2NzY3ZDM4OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-02-20T15:19:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-02-20T15:19:13Z"}, "message": "tree-call-cdce.c (tree_call_cdce): Do not remove unused locals.\n\n2013-02-20  Richard Biener  <rguenther@suse.de>\n\n\t* tree-call-cdce.c (tree_call_cdce): Do not remove unused locals.\n\t* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Likewise.\n\t* tree-ssa-dce.c (perform_tree_ssa_dce): Likewise.\n\t* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Do\n\tnot return anything.\n\t(rename_ssa_copies): Do not remove unused locals.\n\t* tree-ssa-ccp.c (do_ssa_ccp): Likewise.\n\t* tree-ssanames.c (pass_release_ssa_names): Remove unused\n\tlocals first.\n\t* passes.c (execute_function_todo): Do not schedule unused locals\n\tremoval if cleanup_tree_cfg did something.\n\t* tree-ssa-live.c (remove_unused_locals): Dump statistics\n\tabout the number of removed locals.\n\n\t* gcc.dg/tree-ssa/forwprop-8.c: Adjust.\n\nFrom-SVN: r196174", "tree": {"sha": "3d9f363d5896a1d0a51137f9c3ed05a97004b9b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9f363d5896a1d0a51137f9c3ed05a97004b9b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0e50f7246effd184a626f401784df686767d389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e50f7246effd184a626f401784df686767d389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e50f7246effd184a626f401784df686767d389", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e50f7246effd184a626f401784df686767d389/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a52ca7390e068e0905ddc3ac5e376fad4ba5664c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52ca7390e068e0905ddc3ac5e376fad4ba5664c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a52ca7390e068e0905ddc3ac5e376fad4ba5664c"}], "stats": {"total": 94, "additions": 53, "deletions": 41}, "files": [{"sha": "10310e46043c87f4ce6173792daa37b270ac9174", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -1,3 +1,19 @@\n+2013-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-call-cdce.c (tree_call_cdce): Do not remove unused locals.\n+\t* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine): Likewise.\n+\t* tree-ssa-dce.c (perform_tree_ssa_dce): Likewise.\n+\t* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Do\n+\tnot return anything.\n+\t(rename_ssa_copies): Do not remove unused locals.\n+\t* tree-ssa-ccp.c (do_ssa_ccp): Likewise.\n+\t* tree-ssanames.c (pass_release_ssa_names): Remove unused\n+\tlocals first.\n+\t* passes.c (execute_function_todo): Do not schedule unused locals\n+\tremoval if cleanup_tree_cfg did something.\n+\t* tree-ssa-live.c (remove_unused_locals): Dump statistics\n+\tabout the number of removed locals.\n+\n 2013-02-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56398"}, {"sha": "8390223e88e021e9c5b3fddfb27f09e49fa5d59f", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -1918,10 +1918,7 @@ execute_function_todo (void *data)\n   /* Always cleanup the CFG before trying to update SSA.  */\n   if (flags & TODO_cleanup_cfg)\n     {\n-      bool cleanup = cleanup_tree_cfg ();\n-\n-      if (cleanup && (cfun->curr_properties & PROP_ssa))\n-\tflags |= TODO_remove_unused_locals;\n+      cleanup_tree_cfg ();\n \n       /* When cleanup_tree_cfg merges consecutive blocks, it may\n \t perform some simplistic propagation when removing single"}, {"sha": "2cb844f0ddc204761659ae14300c5c4da78b9c25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -1,3 +1,7 @@\n+2013-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/forwprop-8.c: Adjust.\n+\n 2013-02-20  Richard Biener  <rguenther@suse.de>\n \tJakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "1c780c834c5d546cee157b75d1764aeed363b750", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-8.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-8.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -11,6 +11,5 @@ int foo(struct X *q)\n \n \n /* We should have propragated &q->a into (*pointer).  */\n-/* { dg-final { scan-tree-dump-times \"pointer\" 0 \"forwprop1\"} } */\n-/* { dg-final { scan-tree-dump \"\\\\\\[0\\\\\\]\" \"forwprop1\" } } */\n+/* { dg-final { scan-tree-dump \"q_.\\\\\\(D\\\\\\)\\\\\\]\\\\\\[0\\\\\\];\" \"forwprop1\" } } */\n /* { dg-final { cleanup-tree-dump \"forwprop1\" } } */"}, {"sha": "9b6186e33934e185fb0293fe204c2b1aaa25ed54", "filename": "gcc/tree-call-cdce.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-call-cdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-call-cdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-call-cdce.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -898,11 +898,10 @@ tree_call_cdce (void)\n       /* As we introduced new control-flow we need to insert PHI-nodes\n          for the call-clobbers of the remaining call.  */\n       mark_virtual_operands_for_renaming (cfun);\n-      return (TODO_update_ssa | TODO_cleanup_cfg | TODO_ggc_collect\n-              | TODO_remove_unused_locals);\n+      return TODO_update_ssa;\n     }\n-  else\n-    return 0;\n+\n+  return 0;\n }\n \n static bool"}, {"sha": "a64bffcaec75ef349577965b00e1f75521634a5a", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -2108,7 +2108,7 @@ do_ssa_ccp (void)\n   ccp_initialize ();\n   ssa_propagate (ccp_visit_stmt, ccp_visit_phi_node);\n   if (ccp_finalize ())\n-    todo = (TODO_cleanup_cfg | TODO_update_ssa | TODO_remove_unused_locals);\n+    todo = (TODO_cleanup_cfg | TODO_update_ssa);\n   free_dominance_info (CDI_DOMINATORS);\n   return todo;\n }"}, {"sha": "6f49b7ecf5a304df7d32a34d33a726967d390fe9", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -113,7 +113,7 @@ static struct\n /* Coalesce the partitions in MAP representing VAR1 and VAR2 if it is valid.\n    Choose a representative for the partition, and send debug info to DEBUG.  */\n \n-static bool\n+static void\n copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n {\n   int p1, p2, p3;\n@@ -146,15 +146,15 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Already coalesced.\\n\");\n-      return false;\n+      return;\n     }\n \n   rep1 = partition_to_var (map, p1);\n   rep2 = partition_to_var (map, p2);\n   root1 = SSA_NAME_VAR (rep1);\n   root2 = SSA_NAME_VAR (rep2);\n   if (!root1 && !root2)\n-    return false;\n+    return;\n \n   /* Don't coalesce if one of the variables occurs in an abnormal PHI.  */\n   abnorm = (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (rep1)\n@@ -163,7 +163,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Abnormal PHI barrier.  No coalesce.\\n\");\n-      return false;\n+      return;\n     }\n \n   /* Partitions already have the same root, simply merge them.  */\n@@ -172,7 +172,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n       p1 = partition_union (map->var_partition, p1, p2);\n       if (debug)\n \tfprintf (debug, \" : Same root, coalesced --> P%d.\\n\", p1);\n-      return false;\n+      return;\n     }\n \n   /* Never attempt to coalesce 2 different parameters.  */\n@@ -181,15 +181,15 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n         fprintf (debug, \" : 2 different PARM_DECLS. No coalesce.\\n\");\n-      return false;\n+      return;\n     }\n \n   if ((root1 && TREE_CODE (root1) == RESULT_DECL)\n       != (root2 && TREE_CODE (root2) == RESULT_DECL))\n     {\n       if (debug)\n         fprintf (debug, \" : One root a RESULT_DECL. No coalesce.\\n\");\n-      return false;\n+      return;\n     }\n \n   ign1 = !root1 || (TREE_CODE (root1) == VAR_DECL && DECL_IGNORED_P (root1));\n@@ -206,7 +206,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n \t{\n \t  if (debug)\n \t    fprintf (debug, \" : 2 different USER vars. No coalesce.\\n\");\n-\t  return false;\n+\t  return;\n \t}\n       else\n \tign2 = true;\n@@ -220,7 +220,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n \t{\n \t  if (debug)\n \t    fprintf (debug, \" : 2 default defs. No coalesce.\\n\");\n-\t  return false;\n+\t  return;\n \t}\n       else\n         {\n@@ -240,7 +240,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Choosen variable has no root.  No coalesce.\\n\");\n-      return false;\n+      return;\n     }\n \n   /* Don't coalesce if the new chosen root variable would be read-only.\n@@ -253,7 +253,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Readonly variable.  No coalesce.\\n\");\n-      return false;\n+      return;\n     }\n \n   /* Don't coalesce if the two variables aren't type compatible .  */\n@@ -266,7 +266,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Incompatible types.  No coalesce.\\n\");\n-      return false;\n+      return;\n     }\n \n   /* Merge the two partitions.  */\n@@ -288,7 +288,6 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n \t\t\t  TDF_SLIM);\n       fprintf (debug, \"\\n\");\n     }\n-  return true;\n }\n \n \n@@ -308,7 +307,6 @@ rename_ssa_copies (void)\n   gimple stmt, phi;\n   unsigned x;\n   FILE *debug;\n-  bool updated = false;\n \n   memset (&stats, 0, sizeof (stats));\n \n@@ -330,7 +328,7 @@ rename_ssa_copies (void)\n \t      tree lhs = gimple_assign_lhs (stmt);\n \t      tree rhs = gimple_assign_rhs1 (stmt);\n \n-\t      updated |= copy_rename_partition_coalesce (map, lhs, rhs, debug);\n+\t      copy_rename_partition_coalesce (map, lhs, rhs, debug);\n \t    }\n \t}\n     }\n@@ -358,8 +356,8 @@ rename_ssa_copies (void)\n \t      {\n \t\ttree arg = PHI_ARG_DEF (phi, i);\n \t\tif (TREE_CODE (arg) == SSA_NAME)\n-\t\t  updated |= copy_rename_partition_coalesce (map, res, arg,\n-\t\t\t\t\t\t\t     debug);\n+\t\t  copy_rename_partition_coalesce (map, res, arg,\n+\t\t\t\t\t\t  debug);\n \t      }\n \t  /* Else if all arguments are in the same partition try to merge\n \t     it with the result.  */\n@@ -390,9 +388,9 @@ rename_ssa_copies (void)\n \t\t    }\n \t\t}\n \t      if (all_p_same == 1)\n-\t\tupdated |= copy_rename_partition_coalesce (map, res,\n-\t\t\t\t\t\t\t   PHI_ARG_DEF (phi, 0),\n-\t\t\t\t\t\t\t   debug);\n+\t\tcopy_rename_partition_coalesce (map, res,\n+\t\t\t\t\t\tPHI_ARG_DEF (phi, 0),\n+\t\t\t\t\t\tdebug);\n \t    }\n         }\n     }\n@@ -426,7 +424,7 @@ rename_ssa_copies (void)\n   statistics_counter_event (cfun, \"copies coalesced\",\n \t\t\t    stats.coalesced);\n   delete_var_map (map);\n-  return updated ? TODO_remove_unused_locals : 0;\n+  return 0;\n }\n \n /* Return true if copy rename is to be performed.  */"}, {"sha": "05c58feca5d0f39ac405ec8b000f1457f8e8315c", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -1607,10 +1607,8 @@ perform_tree_ssa_dce (bool aggressive)\n   free_edge_list (el);\n \n   if (something_changed)\n-    return (TODO_update_ssa | TODO_cleanup_cfg | TODO_ggc_collect\n-\t    | TODO_remove_unused_locals);\n-  else\n-    return 0;\n+    return TODO_update_ssa | TODO_cleanup_cfg;\n+  return 0;\n }\n \n /* Pass entry points.  */"}, {"sha": "855c212b0ca296fc38ff97a0b95de8b24dfdf755", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -2936,7 +2936,6 @@ ssa_forward_propagate_and_combine (void)\n \t\t  && forward_propagate_addr_expr (lhs, rhs))\n \t\t{\n \t\t  release_defs (stmt);\n-\t\t  todoflags |= TODO_remove_unused_locals;\n \t\t  gsi_remove (&gsi, true);\n \t\t}\n \t      else\n@@ -2961,7 +2960,6 @@ ssa_forward_propagate_and_combine (void)\n \t\t\t\t\t\t\t       off)))))\n \t\t{\n \t\t  release_defs (stmt);\n-\t\t  todoflags |= TODO_remove_unused_locals;\n \t\t  gsi_remove (&gsi, true);\n \t\t}\n \t      else if (is_gimple_min_invariant (rhs))"}, {"sha": "a72e9d5a6b6336ccf2db968eb1cb113f83f2d1dc", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -889,7 +889,10 @@ remove_unused_locals (void)\n       dstidx++;\n     }\n   if (dstidx != num)\n-    cfun->local_decls->truncate (dstidx);\n+    {\n+      statistics_counter_event (cfun, \"unused VAR_DECLs removed\", num - dstidx);\n+      cfun->local_decls->truncate (dstidx);\n+    }\n \n   remove_unused_scope_block_p (DECL_INITIAL (current_function_decl));\n   clear_unused_block_pointer ();"}, {"sha": "0a405ce2a3085f77977125691acbde0a1e5f096e", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0e50f7246effd184a626f401784df686767d389/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=c0e50f7246effd184a626f401784df686767d389", "patch": "@@ -455,7 +455,7 @@ struct gimple_opt_pass pass_release_ssa_names =\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n-  0,\t\t\t\t\t/* todo_flags_start */\n-  0              \t\t\t/* todo_flags_finish */\n+  TODO_remove_unused_locals,\t\t/* todo_flags_start */\n+  0\t\t\t\t\t/* todo_flags_finish */\n  }\n };"}]}