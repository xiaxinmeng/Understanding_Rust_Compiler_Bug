{"sha": "98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg2MTBkYzViNjMwYThlZTdmMzllZDQ4ZDQ1ZTU4ZmIwNDRkYmVjMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-06T10:45:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-06T10:45:47Z"}, "message": "re PR tree-optimization/85726 (div C1 to div C2 match.pd suboptimization)\n\n\tPR tree-optimization/85726\n\t* generic-match-head.c (optimize_successive_divisions_p): New function.\n\t* gimple-match-head.c (optimize_successive_divisions_p): Likewise.\n\t* match.pd: Don't combine successive divisions if they aren't exact\n\tand optimize_successive_divisions_p is false.\n\n\t* gcc.dg/tree-ssa/pr85726-1.c: New test.\n\t* gcc.dg/tree-ssa/pr85726-2.c: New test.\n\t* gcc.dg/tree-ssa/pr85726-3.c: New test.\n\t* gcc.dg/tree-ssa/pr85726-4.c: New test.\n\nFrom-SVN: r266848", "tree": {"sha": "31424dd67a7c75abf968575cec641c895751abdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31424dd67a7c75abf968575cec641c895751abdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a126d36172d336ee92f18b5c0fcf60a16690c2f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a126d36172d336ee92f18b5c0fcf60a16690c2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a126d36172d336ee92f18b5c0fcf60a16690c2f0"}], "stats": {"total": 123, "additions": 117, "deletions": 6}, "files": [{"sha": "a40d99e1ada95f656fbbc721a7ce023287c2524b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -1,5 +1,11 @@\n 2018-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/85726\n+\t* generic-match-head.c (optimize_successive_divisions_p): New function.\n+\t* gimple-match-head.c (optimize_successive_divisions_p): Likewise.\n+\t* match.pd: Don't combine successive divisions if they aren't exact\n+\tand optimize_successive_divisions_p is false.\n+\n \tPR fortran/88304\n \t* tree-nested.c (convert_nonlocal_reference_stmt): Remove clobbers\n \tfor non-local automatic decls."}, {"sha": "0165bd09112c8393c72528c6566cc257d8742017", "filename": "gcc/generic-match-head.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Fgeneric-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Fgeneric-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgeneric-match-head.c?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -77,3 +77,12 @@ canonicalize_math_after_vectorization_p ()\n {\n   return false;\n }\n+\n+/* Return true if successive divisions can be optimized.\n+   Defer to GIMPLE opts.  */\n+\n+static inline bool\n+optimize_successive_divisions_p (tree, tree)\n+{\n+  return false;\n+}"}, {"sha": "374232bb696fb0cef2d09adbcc8a81acf7ac4ace", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -1163,3 +1163,27 @@ optimize_pow_to_exp (tree arg0, tree arg1)\n     return false;\n   return true;\n }\n+\n+/* Return true if a division INNER_DIV / DIVISOR where INNER_DIV\n+   is another division can be optimized.  Don't optimize if INNER_DIV\n+   is used in a TRUNC_MOD_EXPR with DIVISOR as second operand.  */\n+\n+static bool\n+optimize_successive_divisions_p (tree divisor, tree inner_div)\n+{\n+  if (!gimple_in_ssa_p (cfun))\n+    return false;\n+\n+  imm_use_iterator imm_iter;\n+  use_operand_p use_p;\n+  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, inner_div)\n+    {\n+      gimple *use_stmt = USE_STMT (use_p);\n+      if (!is_gimple_assign (use_stmt)\n+\t  || gimple_assign_rhs_code (use_stmt) != TRUNC_MOD_EXPR\n+\t  || !operand_equal_p (gimple_assign_rhs2 (use_stmt), divisor, 0))\n+\tcontinue;\n+      return false;\n+    }\n+  return true;\n+}"}, {"sha": "fbb4d6fa6a02af0ca603c354f34c2ec3ebef7b4e", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -312,17 +312,19 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    and floor_div is trickier and combining round_div even more so.  */\n (for div (trunc_div exact_div)\n  (simplify\n-  (div (div @0 INTEGER_CST@1) INTEGER_CST@2)\n+  (div (div@3 @0 INTEGER_CST@1) INTEGER_CST@2)\n   (with {\n     wi::overflow_type overflow;\n     wide_int mul = wi::mul (wi::to_wide (@1), wi::to_wide (@2),\n \t\t\t    TYPE_SIGN (type), &overflow);\n    }\n-   (if (!overflow)\n-    (div @0 { wide_int_to_tree (type, mul); })\n-    (if (TYPE_UNSIGNED (type)\n-\t || mul != wi::min_value (TYPE_PRECISION (type), SIGNED))\n-     { build_zero_cst (type); })))))\n+   (if (div == EXACT_DIV_EXPR\n+\t|| optimize_successive_divisions_p (@2, @3))\n+    (if (!overflow)\n+     (div @0 { wide_int_to_tree (type, mul); })\n+     (if (TYPE_UNSIGNED (type)\n+\t  || mul != wi::min_value (TYPE_PRECISION (type), SIGNED))\n+      { build_zero_cst (type); }))))))\n \n /* Combine successive multiplications.  Similar to above, but handling\n    overflow is different.  */"}, {"sha": "13d2e25a096563f8e4bcbb25f3de410505afe911", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -1,5 +1,11 @@\n 2018-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/85726\n+\t* gcc.dg/tree-ssa/pr85726-1.c: New test.\n+\t* gcc.dg/tree-ssa/pr85726-2.c: New test.\n+\t* gcc.dg/tree-ssa/pr85726-3.c: New test.\n+\t* gcc.dg/tree-ssa/pr85726-4.c: New test.\n+\n \tPR fortran/88304\n \t* gfortran.fortran-torture/compile/pr88304.f90: New test.\n "}, {"sha": "25c3e4913ea05d759b6af05f54e8d0ee484fc397", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr85726-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-1.c?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/85726 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \" / 16;\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \" / 3;\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \" % 3;\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-not \" / 48;\" \"optimized\" } } */\n+\n+int ww, vv;\n+\n+int\n+foo (int y)\n+{\n+  int z = y / 16;\n+  int w = z / 3;\n+  int v = z % 3;\n+  ww = w;\n+  return v;\n+}"}, {"sha": "834a6899790f9e0e78e95f0f99ee451babf61e8d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr85726-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-2.c?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/85726 */\n+/* { dg-do compile { target int32 } } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \" / 3145728;\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"y = 0;\" \"optimized\" } } */\n+\n+int x, y;\n+\n+void\n+foo (int n)\n+{\n+  int c = 3 << 20;\n+  x = n / c;\n+  y = x / c;\n+}"}, {"sha": "7241fb06e1a276b32063c9d97cc900ed7d0a60d1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr85726-3.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-3.c?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/85726 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" / 3;\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" / 15;\" 1 \"optimized\" } } */\n+\n+int x, y, z;\n+\n+void\n+foo (int n)\n+{\n+  x = n / 3;\n+  y = x / 5;\n+  z = n / 15;\n+}"}, {"sha": "f57cf3a69000d0286281baf488060474e0748b0a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr85726-4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98610dc5b630a8ee7f39ed48d45e58fb044dbec1/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr85726-4.c?ref=98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "patch": "@@ -0,0 +1,15 @@\n+/* PR tree-optimization/85726 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \" / 4;\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \" / 16;\" 1 \"optimized\" } } */\n+\n+int x, y, z;\n+\n+void\n+foo (int n)\n+{\n+  x = n / 4;\n+  y = x / 4;\n+  z = y * 16 | 15;\n+}"}]}