{"sha": "81162f97bf4d974352a6eb1b091cd7e25faa751e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODExNjJmOTdiZjRkOTc0MzUyYTZlYjFiMDkxY2Q3ZTI1ZmFhNzUxZQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2006-01-24T14:29:25Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-01-24T14:29:25Z"}, "message": "re PR rtl-optimization/25890 (testsuite failure: gcc.c-torture/compile/20051228-1.c)\n\n2006-01-23  Paolo Bonzini  <bonzini@gnu.org>\n\n        PR rtl-optimization/25890\n        PR rtl-optimization/25905\n        * combine.c (expand_compound_operation, expand_field_assignment):\n        Fail if the bitfield's final position is out of bounds.\n\nFrom-SVN: r110170", "tree": {"sha": "ed823d071217156a9e008601bc9ad10e116f16dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed823d071217156a9e008601bc9ad10e116f16dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81162f97bf4d974352a6eb1b091cd7e25faa751e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81162f97bf4d974352a6eb1b091cd7e25faa751e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81162f97bf4d974352a6eb1b091cd7e25faa751e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81162f97bf4d974352a6eb1b091cd7e25faa751e/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dc8e905c035ca4dba5a12328ab3a763e6086ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dc8e905c035ca4dba5a12328ab3a763e6086ec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dc8e905c035ca4dba5a12328ab3a763e6086ec2"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "d5046c4c801c4c1db429ee09aeb19ec556e8f7e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81162f97bf4d974352a6eb1b091cd7e25faa751e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81162f97bf4d974352a6eb1b091cd7e25faa751e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81162f97bf4d974352a6eb1b091cd7e25faa751e", "patch": "@@ -1,3 +1,10 @@\n+2006-01-23  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        PR rtl-optimization/25890\n+        PR rtl-optimization/25905\n+        * combine.c (expand_compound_operation, expand_field_assignment):\n+        Fail if the bitfield's final position is out of bounds.\n+\n 2006-01-24  Ian Lance Taylor  <ian@airs.com>\n \n \tPR middle-end/25930"}, {"sha": "0ec45808a8a3a0ea3d42e5e6ff9b9ef58276a5c4", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81162f97bf4d974352a6eb1b091cd7e25faa751e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81162f97bf4d974352a6eb1b091cd7e25faa751e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=81162f97bf4d974352a6eb1b091cd7e25faa751e", "patch": "@@ -5640,8 +5640,9 @@ expand_compound_operation (rtx x)\n       len = INTVAL (XEXP (x, 1));\n       pos = INTVAL (XEXP (x, 2));\n \n-      /* This should stay within the object being extracted, fail.  */\n-      gcc_assert (len + pos <= GET_MODE_BITSIZE (GET_MODE (XEXP (x, 0))));\n+      /* This should stay within the object being extracted, fail otherwise.  */\n+      if (len + pos > GET_MODE_BITSIZE (GET_MODE (XEXP (x, 0))))\n+\treturn x;\n \n       if (BITS_BIG_ENDIAN)\n \tpos = GET_MODE_BITSIZE (GET_MODE (XEXP (x, 0))) - len - pos;\n@@ -5800,9 +5801,9 @@ expand_field_assignment (rtx x)\n \t  pos = XEXP (SET_DEST (x), 2);\n \n \t  /* A constant position should stay within the width of INNER.  */\n-\t  if (GET_CODE (pos) == CONST_INT)\n-\t    gcc_assert (INTVAL (pos) + len\n-\t\t\t<= GET_MODE_BITSIZE (GET_MODE (inner)));\n+\t  if (GET_CODE (pos) == CONST_INT\n+\t      && INTVAL (pos) + len > GET_MODE_BITSIZE (GET_MODE (inner)))\n+\t    break;\n \n \t  if (BITS_BIG_ENDIAN)\n \t    {"}]}