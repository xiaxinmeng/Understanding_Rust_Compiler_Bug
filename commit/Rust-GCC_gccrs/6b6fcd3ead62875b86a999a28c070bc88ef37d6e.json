{"sha": "6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2ZmNkM2VhZDYyODc1Yjg2YTk5OWEyOGMwNzBiYzg4ZWYzN2Q2ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-04-01T10:04:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-04-01T10:04:40Z"}, "message": "[multiple changes]\n\n2004-04-01  Robert Dewar  <dewar@gnat.com>\n\n\t* checks.adb: Minor reformatting throughout\n\tNote that prev checkin added RM reference to alignment warning\n\n2004-04-01  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_aggr.adb (Get_Component_Val): Treat a string literal as\n\tnon-static when building aggregate for bit-packed array.\n\n\t* exp_ch4.adb (Expand_N_Slice): If a packed slice is an actual of a\n\tfunction call that is itself the actual in a procedure call, build\n\ttemporary for it.\n\n\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): If right-hand side is\n\ta string literal, create a temporary for it, constant folding only\n\thandles scalars here.\n\n2004-04-01  Vincent Celier  <celier@gnat.com>\n\n\t* ali-util.adb (Post_Scan, Error_Msg, Error_Msg_S, Error_Msg_SC,\n\tError_Msg_SP): New empty procedures to instantiate the Scanner.\n\t(Style, Scanner): Instantiations of Styleg and Scng to be able to scan\n\ttokens.\n\t(Accumulate_Checksum, Initialize_Checksum): Remove procedures.\n\t(Get_File_Checksum): Use the instantiated scanner to scan all the tokens\n\tand get the checksum.\n\n\t* make.adb (Gnatmake): Do not insert into Q the Main_Source if it is\n\talready in the Q.\n\tIncrease the Marking_Label at the end of the Multiple_Main_Loop,\n\tinstead of at the beginning.\n\n\t* osint.adb (Lib_File_Name): Use Multi_Unit_Index_Character, not '~'\n\tdirectly.\n\t(Osint package elaboration): Change Multi_Unit_Index_Character to '$' if\n\ton VMS.\n\n\t* osint.ads (Multi_Unit_Index_Character): New Character global variable\n\n\t* osint-c.adb (Set_Library_Info_Name): Use Multi_Unit_Index_Character,\n\tnot '~' directly.\n\n\t* par.adb: Remove test on file name to detect language defined units.\n\tAdd test on unit name, after parsing, to detect language defined units\n\tthat are not compiled with -gnatg (except System.RPC and its children)\n\n\t* par-ch10.adb (P_Compilation_Unit): In multi-unit sources, scan the\n\tfollowing units without style checking.\n\n\t* switch-c.adb: Change -gnatC to -gnateI\n\n\t* usage.adb: Document new switch -gnateInnn\n\n\t* scng.adb (Accumulate_Token_Checksum): New procedure\n\t(Scan): Call Accumulate_Token_Checksum after each identifier, reserved\n\tword or literal number.\n\t(Scan.Nlit.Scan_Integer): Do not accumulate internal '_' in litteral\n\tnumbers.\n\n2004-04-01  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* a-tasatt.adb,\n\tg-comlin.adb, sinput-c.adb, s-secsta.adb, s-tpobop.adb,\n\tswitch-m.adb, 56taprop.adb, 5ginterr.adb, 5gmastop.adb,\n\t5staprop.adb, 5vinterr.adb, 5vtaprop.adb, 5vtpopde.adb,\n\t5vtpopde.adb: Add missing 'constant' keywords.\n\n2004-04-01  Javier Miranda  <miranda@gnat.com>\n\n\t* par-ch4.adb: (P_Allocator): Code cleanup\n\n\t* sem_ch3.adb (Access_Definition): Properly set the null-excluding\n\tattribute.\n\n\t* sinfo.ads: Complete documentation of previous change\n\n2004-04-01  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\n2004-04-01  Pascal Obry  <obry@gnat.com>\n\n\t* gnatlink.adb (Process_Binder_File): Remove duplicate linker options\n\tonly on VMS.  This special handling was done because an old GNU/ld bug\n\ton Windows which has been fixed.\n\nFrom-SVN: r80290", "tree": {"sha": "b338d3df4e73cbb9b9be4f8a5366b15275287114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b338d3df4e73cbb9b9be4f8a5366b15275287114"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/comments", "author": null, "committer": null, "parents": [{"sha": "2ae6e9823a58bd58377b48e7a412575f1a08c585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae6e9823a58bd58377b48e7a412575f1a08c585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae6e9823a58bd58377b48e7a412575f1a08c585"}], "stats": {"total": 903, "additions": 509, "deletions": 394}, "files": [{"sha": "6276d7f5092388fa5870dbaa628248b061088140", "filename": "gcc/ada/56taprop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F56taprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F56taprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56taprop.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -192,7 +192,7 @@ package body System.Task_Primitives.Operations is\n    procedure Abort_Handler (Sig : Signal) is\n       pragma Unreferenced (Sig);\n \n-      T       : Task_ID := Self;\n+      T       : constant Task_ID := Self;\n       Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n "}, {"sha": "4ee53e00b0912a8b2fc5dddb8444c47fbddd28a0", "filename": "gcc/ada/5ginterr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5ginterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5ginterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ginterr.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---              Copyright (C) 1998-2003 Free Software Fundation             --\n+--              Copyright (C) 1998-2004 Free Software Fundation             --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -631,7 +631,7 @@ package body System.Interrupts is\n \n    task body Server_Task is\n       Desc    : Handler_Desc renames Descriptors (Interrupt);\n-      Self_Id : Task_ID := STPO.Self;\n+      Self_Id : constant Task_ID := STPO.Self;\n       Temp    : Parameterless_Handler;\n \n    begin"}, {"sha": "d75bf326b7a762cf75e7b7e3f3c9b203d1d344e2", "filename": "gcc/ada/5gmastop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5gmastop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5gmastop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5gmastop.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -288,7 +288,7 @@ package body System.Machine_State_Operations is\n    is\n       pragma Warnings (Off, Info);\n \n-      Scp : Sigcontext_Ptr := To_Sigcontext_Ptr (M);\n+      Scp : constant Sigcontext_Ptr := To_Sigcontext_Ptr (M);\n \n       procedure Exc_Unwind (Scp : Sigcontext_Ptr; Fde : Long_Integer := 0);\n       pragma Import (C, Exc_Unwind, \"exc_unwind\");"}, {"sha": "a264b029693088f84036ae25b9db38336d517625", "filename": "gcc/ada/5staprop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5staprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5staprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5staprop.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -1465,7 +1465,7 @@ package body System.Task_Primitives.Operations is\n    function Check_Sleep (Reason : Task_States) return Boolean is\n       pragma Unreferenced (Reason);\n \n-      Self_ID : Task_ID := Self;\n+      Self_ID : constant Task_ID := Self;\n       P       : Lock_Ptr;\n \n    begin"}, {"sha": "f302ead12e3e53c0b97d080b33a83404cca0bc48", "filename": "gcc/ada/5vinterr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5vinterr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5vinterr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vinterr.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -951,7 +951,7 @@ package body System.Interrupts is\n    -----------------\n \n    task body Server_Task is\n-      Self_ID         : Task_ID := Self;\n+      Self_ID         : constant Task_ID := Self;\n       Tmp_Handler     : Parameterless_Handler;\n       Tmp_ID          : Task_ID;\n       Tmp_Entry_Index : Task_Entry_Index;"}, {"sha": "5a7739d3abc8499b7ded5643f2750c23c2ae200b", "filename": "gcc/ada/5vtaprop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5vtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5vtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtaprop.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -161,7 +161,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Timer_Sleep_AST (ID : Address) is\n       Result  : Interfaces.C.int;\n-      Self_ID : Task_ID := To_Task_ID (ID);\n+      Self_ID : constant Task_ID := To_Task_ID (ID);\n    begin\n       Self_ID.Common.LL.AST_Pending := False;\n       Result := pthread_cond_signal_int_np (Self_ID.Common.LL.CV'Access);"}, {"sha": "89db8240ad8f35b84eeda7135d8b9e0886e32ac2", "filename": "gcc/ada/5vtpopde.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5vtpopde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2F5vtpopde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vtpopde.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -84,7 +84,7 @@ package body System.Task_Primitives.Operations.DEC is\n \n    procedure Interrupt_AST_Handler (ID : Address) is\n       Result      : Interfaces.C.int;\n-      AST_Self_ID : Task_ID := To_Task_ID (ID);\n+      AST_Self_ID : constant Task_ID := To_Task_ID (ID);\n    begin\n       Result := pthread_cond_signal_int_np (AST_Self_ID.Common.LL.CV'Access);\n       pragma Assert (Result = 0);\n@@ -95,7 +95,7 @@ package body System.Task_Primitives.Operations.DEC is\n    ---------------------\n \n    procedure RMS_AST_Handler (ID : Address) is\n-      AST_Self_ID : Task_ID := To_Task_Id (To_FAB_RAB (ID).CTX);\n+      AST_Self_ID : constant Task_ID := To_Task_Id (To_FAB_RAB (ID).CTX);\n       Result      : Interfaces.C.int;\n \n    begin\n@@ -109,7 +109,7 @@ package body System.Task_Primitives.Operations.DEC is\n    ----------\n \n    function Self return Unsigned_Longword is\n-      Self_ID : Task_ID := Self;\n+      Self_ID : constant Task_ID := Self;\n    begin\n       Self_ID.Common.LL.AST_Pending := True;\n       return To_Unsigned_Longword (Self);\n@@ -121,7 +121,7 @@ package body System.Task_Primitives.Operations.DEC is\n \n    procedure Starlet_AST_Handler (ID : Address) is\n       Result      : Interfaces.C.int;\n-      AST_Self_ID : Task_ID := To_Task_ID (ID);\n+      AST_Self_ID : constant Task_ID := To_Task_ID (ID);\n    begin\n       AST_Self_ID.Common.LL.AST_Pending := False;\n       Result := pthread_cond_signal_int_np (AST_Self_ID.Common.LL.CV'Access);"}, {"sha": "fb80339b23b2b2984ba09815640d0fe0f0b20fe5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -1,3 +1,90 @@\n+2004-04-01  Robert Dewar  <dewar@gnat.com>\n+\n+\t* checks.adb: Minor reformatting throughout\n+\tNote that prev checkin added RM reference to alignment warning\n+\n+2004-04-01  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_aggr.adb (Get_Component_Val): Treat a string literal as\n+\tnon-static when building aggregate for bit-packed array.\n+\n+\t* exp_ch4.adb (Expand_N_Slice): If a packed slice is an actual of a\n+\tfunction call that is itself the actual in a procedure call, build\n+\ttemporary for it.\n+\n+\t* exp_pakd.adb (Expand_Bit_Packed_Element_Set): If right-hand side is\n+\ta string literal, create a temporary for it, constant folding only\n+\thandles scalars here.\n+\n+2004-04-01  Vincent Celier  <celier@gnat.com>\n+\n+\t* ali-util.adb (Post_Scan, Error_Msg, Error_Msg_S, Error_Msg_SC,\n+\tError_Msg_SP): New empty procedures to instantiate the Scanner.\n+\t(Style, Scanner): Instantiations of Styleg and Scng to be able to scan\n+\ttokens.\n+\t(Accumulate_Checksum, Initialize_Checksum): Remove procedures.\n+\t(Get_File_Checksum): Use the instantiated scanner to scan all the tokens\n+\tand get the checksum.\n+\n+\t* make.adb (Gnatmake): Do not insert into Q the Main_Source if it is\n+\talready in the Q.\n+\tIncrease the Marking_Label at the end of the Multiple_Main_Loop,\n+\tinstead of at the beginning.\n+\n+\t* osint.adb (Lib_File_Name): Use Multi_Unit_Index_Character, not '~'\n+\tdirectly.\n+\t(Osint package elaboration): Change Multi_Unit_Index_Character to '$' if\n+\ton VMS.\n+\n+\t* osint.ads (Multi_Unit_Index_Character): New Character global variable\n+\n+\t* osint-c.adb (Set_Library_Info_Name): Use Multi_Unit_Index_Character,\n+\tnot '~' directly.\n+\n+\t* par.adb: Remove test on file name to detect language defined units.\n+\tAdd test on unit name, after parsing, to detect language defined units\n+\tthat are not compiled with -gnatg (except System.RPC and its children)\n+\n+\t* par-ch10.adb (P_Compilation_Unit): In multi-unit sources, scan the\n+\tfollowing units without style checking.\n+\n+\t* switch-c.adb: Change -gnatC to -gnateI\n+\n+\t* usage.adb: Document new switch -gnateInnn\n+\n+\t* scng.adb (Accumulate_Token_Checksum): New procedure\n+\t(Scan): Call Accumulate_Token_Checksum after each identifier, reserved\n+\tword or literal number.\n+\t(Scan.Nlit.Scan_Integer): Do not accumulate internal '_' in litteral\n+\tnumbers.\n+\n+2004-04-01  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* a-tasatt.adb,\n+\tg-comlin.adb, sinput-c.adb, s-secsta.adb, s-tpobop.adb,\n+\tswitch-m.adb, 56taprop.adb, 5ginterr.adb, 5gmastop.adb,\n+\t5staprop.adb, 5vinterr.adb, 5vtaprop.adb, 5vtpopde.adb,\n+\t5vtpopde.adb: Add missing 'constant' keywords.\n+\n+2004-04-01  Javier Miranda  <miranda@gnat.com>\n+\n+\t* par-ch4.adb: (P_Allocator): Code cleanup\n+\n+\t* sem_ch3.adb (Access_Definition): Properly set the null-excluding\n+\tattribute.\n+\n+\t* sinfo.ads: Complete documentation of previous change\n+\n+2004-04-01  Pascal Obry  <obry@gnat.com>\n+\n+\t* gnatlink.adb (Process_Binder_File): Remove duplicate linker options\n+\tonly on VMS.  This special handling was done because an old GNU/ld bug\n+\ton Windows which has been fixed.\n+\n+2004-04-01  GNAT Script  <nobody@gnat.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n 2004-03-31  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* decl.c (gnat_to_gnu_entity, make_type_from_size):"}, {"sha": "e7702aaa3eaad61a54999017f1a85553af737616", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 48, "deletions": 21, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -189,6 +189,9 @@ GNATBIND_OBJS = \\\n  ada/debug.o      \\\n  ada/einfo.o      \\\n  ada/elists.o     \\\n+ ada/err_vars.o   \\\n+ ada/errout.o     \\\n+ ada/erroutc.o    \\\n  ada/fmap.o       \\\n  ada/fname.o      \\\n  ada/g-hesora.o   \\\n@@ -235,14 +238,20 @@ GNATBIND_OBJS = \\\n  ada/s-wchcnv.o   \\\n  ada/s-wchcon.o   \\\n  ada/s-wchjis.o   \\\n+ ada/scng.o       \\\n+ ada/scans.o      \\\n  ada/sdefault.o   \\\n  ada/sinfo.o      \\\n  ada/sinput.o     \\\n+ ada/sinput-c.o   \\\n  ada/snames.o     \\\n  ada/stand.o      \\\n  ada/stringt.o    \\\n  ada/switch-b.o   \\\n  ada/switch.o     \\\n+ ada/style.o      \\\n+ ada/styleg.o     \\\n+ ada/stylesw.o    \\\n  ada/system.o     \\\n  ada/table.o      \\\n  ada/targparm.o   \\\n@@ -1269,16 +1278,21 @@ ada/ada.o : ada/ada.ads ada/system.ads\n \n ada/ali-util.o : ada/ada.ads ada/a-except.ads ada/a-uncdea.ads ada/ali.ads \\\n    ada/ali-util.ads ada/ali-util.adb ada/alloc.ads ada/binderr.ads \\\n-   ada/casing.ads ada/debug.ads ada/gnat.ads ada/g-htable.ads \\\n-   ada/g-os_lib.ads ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads \\\n-   ada/interfac.ads ada/lib.ads ada/namet.ads ada/namet.adb ada/opt.ads \\\n-   ada/osint.ads ada/output.ads ada/rident.ads ada/system.ads \\\n-   ada/s-crc32.ads ada/s-crc32.adb ada/s-exctab.ads ada/s-exctab.adb \\\n-   ada/s-htable.ads ada/s-htable.adb ada/s-memory.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n-   ada/types.ads ada/unchconv.ads ada/unchdeal.ads ada/widechar.ads \n+   ada/casing.ads ada/csets.ads ada/debug.ads ada/err_vars.ads \\\n+   ada/gnat.ads ada/g-htable.ads ada/g-os_lib.ads ada/g-string.ads \\\n+   ada/gnatvsn.ads ada/hostparm.ads ada/interfac.ads ada/lib.ads \\\n+   ada/namet.ads ada/namet.adb ada/opt.ads ada/osint.ads ada/output.ads \\\n+   ada/rident.ads ada/scans.ads ada/scng.ads ada/scng.adb ada/sinput.ads \\\n+   ada/sinput.adb ada/sinput-c.ads ada/snames.ads ada/stringt.ads \\\n+   ada/stringt.adb ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-carun8.ads ada/s-crc32.ads ada/s-crc32.adb \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-htable.adb ada/s-memory.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tree_io.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n+   ada/widechar.ads \n \n ada/ali.o : ada/ada.ads ada/a-except.ads ada/a-uncdea.ads ada/ali.ads \\\n    ada/ali.adb ada/alloc.ads ada/butil.ads ada/casing.ads ada/debug.ads \\\n@@ -1327,17 +1341,20 @@ ada/back_end.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n \n ada/bcheck.o : ada/ada.ads ada/a-except.ads ada/ali.ads ada/ali-util.ads \\\n    ada/ali-util.adb ada/alloc.ads ada/bcheck.ads ada/bcheck.adb \\\n-   ada/binderr.ads ada/butil.ads ada/casing.ads ada/debug.ads \\\n-   ada/fname.ads ada/gnat.ads ada/g-htable.ads ada/g-os_lib.ads \\\n-   ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads ada/interfac.ads \\\n-   ada/lib.ads ada/namet.ads ada/namet.adb ada/opt.ads ada/osint.ads \\\n-   ada/output.ads ada/rident.ads ada/system.ads ada/s-crc32.ads \\\n-   ada/s-crc32.adb ada/s-exctab.ads ada/s-htable.ads ada/s-imgenu.ads \\\n-   ada/s-memory.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/widechar.ads \n+   ada/binderr.ads ada/butil.ads ada/casing.ads ada/csets.ads \\\n+   ada/debug.ads ada/err_vars.ads ada/fname.ads ada/gnat.ads \\\n+   ada/g-htable.ads ada/g-os_lib.ads ada/g-string.ads ada/gnatvsn.ads \\\n+   ada/hostparm.ads ada/interfac.ads ada/lib.ads ada/namet.ads \\\n+   ada/namet.adb ada/opt.ads ada/osint.ads ada/output.ads ada/rident.ads \\\n+   ada/scans.ads ada/scng.ads ada/scng.adb ada/sinput.ads ada/sinput-c.ads \\\n+   ada/snames.ads ada/stringt.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-crc32.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imgenu.ads ada/s-memory.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n+   ada/types.ads ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/widechar.ads \n \n ada/binde.o : ada/ada.ads ada/a-except.ads ada/ali.ads ada/alloc.ads \\\n    ada/binde.ads ada/binde.adb ada/binderr.ads ada/butil.ads \\\n@@ -3657,6 +3674,16 @@ ada/sinfo.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n    ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n \n+ada/sinput-c.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n+   ada/alloc.ads ada/casing.ads ada/debug.ads ada/gnat.ads \\\n+   ada/g-os_lib.ads ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads \\\n+   ada/namet.ads ada/opt.ads ada/output.ads ada/sinput.ads \\\n+   ada/sinput-c.ads ada/sinput-c.adb ada/system.ads ada/s-exctab.ads \\\n+   ada/s-memory.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads \n+\n ada/sinput-d.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/casing.ads \\\n    ada/debug.ads ada/gnat.ads ada/g-os_lib.ads ada/g-string.ads \\\n    ada/gnatvsn.ads ada/hostparm.ads ada/opt.ads ada/osint.ads \\"}, {"sha": "f68c6255a86d75d32f229bdbe7ee6fc8a12e6092", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -394,8 +394,8 @@ package body Ada.Task_Attributes is\n      (T    : Task_Identification.Task_Id := Task_Identification.Current_Task)\n       return Attribute_Handle\n    is\n-      TT            : Task_ID := To_Task_ID (T);\n-      Error_Message : constant String := \"Trying to get the reference of a \";\n+      TT            : constant Task_ID := To_Task_ID (T);\n+      Error_Message : constant String  := \"Trying to get the reference of a \";\n \n    begin\n       if TT = null then\n@@ -484,8 +484,8 @@ package body Ada.Task_Attributes is\n    procedure Reinitialize\n      (T : Task_Identification.Task_Id := Task_Identification.Current_Task)\n    is\n-      TT : Task_ID := To_Task_ID (T);\n-      Error_Message : constant String := \"Trying to Reinitialize a \";\n+      TT            : constant Task_ID := To_Task_ID (T);\n+      Error_Message : constant String  := \"Trying to Reinitialize a \";\n \n    begin\n       if TT = null then\n@@ -554,8 +554,8 @@ package body Ada.Task_Attributes is\n      (Val : Attribute;\n       T   : Task_Identification.Task_Id := Task_Identification.Current_Task)\n    is\n-      TT            : Task_ID := To_Task_ID (T);\n-      Error_Message : constant String := \"Trying to Set the Value of a \";\n+      TT            : constant Task_ID := To_Task_ID (T);\n+      Error_Message : constant String  := \"Trying to Set the Value of a \";\n \n    begin\n       if TT = null then\n@@ -640,11 +640,11 @@ package body Ada.Task_Attributes is\n    -----------\n \n    function Value\n-     (T    : Task_Identification.Task_Id := Task_Identification.Current_Task)\n+     (T : Task_Identification.Task_Id := Task_Identification.Current_Task)\n       return Attribute\n    is\n-      TT            : Task_ID := To_Task_ID (T);\n-      Error_Message : constant String := \"Trying to get the Value of a \";\n+      TT            : constant Task_ID := To_Task_ID (T);\n+      Error_Message : constant String  := \"Trying to get the Value of a \";\n \n    begin\n       if TT = null then"}, {"sha": "07ed8f14c442f05ffb5781851bb0853ca030002f", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 99, "deletions": 189, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,12 +31,39 @@ with Namet;   use Namet;\n with Opt;     use Opt;\n with Output;  use Output;\n with Osint;   use Osint;\n-\n-with System.CRC32;\n-with System.Memory;\n+with Scans;   use Scans;\n+with Scng;\n+with Sinput.C;\n+with Snames;  use Snames;\n+with Styleg;\n \n package body ALI.Util is\n \n+   --  Empty procedures needed to instantiate Scng. Error procedures are\n+   --  empty, because we don't want to report any errors when computing\n+   --  a source checksum.\n+\n+   procedure Post_Scan;\n+\n+   procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr);\n+\n+   procedure Error_Msg_S (Msg : String);\n+\n+   procedure Error_Msg_SC (Msg : String);\n+\n+   procedure Error_Msg_SP (Msg : String);\n+\n+   --  Instantiation of Styleg, needed  to instantiate Scng\n+\n+   package Style is new Styleg\n+     (Error_Msg, Error_Msg_S, Error_Msg_SC, Error_Msg_SP);\n+\n+   --  A Scanner is needed to get checksum of a source (procedure\n+   --  Get_File_Checksum).\n+\n+   package Scanner is new Scng\n+     (Post_Scan, Error_Msg, Error_Msg_S, Error_Msg_SC, Error_Msg_SP, Style);\n+\n    type Header_Num is range 0 .. 1_000;\n \n    function Hash (F : File_Name_Type) return Header_Num;\n@@ -50,33 +77,6 @@ package body ALI.Util is\n      Hash       => Hash,\n      Equal      => \"=\");\n \n-   -----------------------\n-   -- Local Subprograms --\n-   -----------------------\n-\n-   procedure Accumulate_Checksum (C : Character; Csum : in out Word);\n-   pragma Inline (Accumulate_Checksum);\n-   --  This routine accumulates the checksum given character C. During the\n-   --  scanning of a source file, this routine is called with every character\n-   --  in the source, excluding blanks, and all control characters (except\n-   --  that ESC is included in the checksum). Upper case letters not in string\n-   --  literals are folded by the caller. See Sinput spec for the documentation\n-   --  of the checksum algorithm. Note: checksum values are only used if we\n-   --  generate code, so it is not necessary to worry about making the right\n-   --  sequence of calls in any error situation.\n-\n-   procedure Initialize_Checksum (Csum : out Word);\n-   --  Sets initial value of Csum before any calls to Accumulate_Checksum\n-\n-   -------------------------\n-   -- Accumulate_Checksum --\n-   -------------------------\n-\n-   procedure Accumulate_Checksum (C : Character; Csum : in out Word) is\n-   begin\n-      System.CRC32.Update (System.CRC32.CRC32 (Csum), C);\n-   end Accumulate_Checksum;\n-\n    ---------------------\n    -- Checksums_Match --\n    ---------------------\n@@ -86,182 +86,92 @@ package body ALI.Util is\n       return Checksum1 = Checksum2 and then Checksum1 /= Checksum_Error;\n    end Checksums_Match;\n \n-   -----------------------\n-   -- Get_File_Checksum --\n-   -----------------------\n-\n-   function Get_File_Checksum (Fname : Name_Id) return Word is\n-      Src  : Source_Buffer_Ptr;\n-      Hi   : Source_Ptr;\n-      Csum : Word;\n-      Ptr  : Source_Ptr;\n-\n-      Bad : exception;\n-      --  Raised if file not found, or file format error\n+   pragma Warnings (Off);\n+   --  To avoid warnings on non referenced parameters of the error procedures\n \n-      use ASCII;\n-      --  Make control characters visible\n+   ---------------\n+   -- Error_Msg --\n+   ---------------\n \n+   procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr) is\n    begin\n-      Read_Source_File (Fname, 0, Hi, Src);\n-\n-      --  If we cannot find the file, then return an impossible checksum,\n-      --  impossible becaues checksums have the high order bit zero, so\n-      --  that checksums do not match.\n-\n-      if Src = null then\n-         raise Bad;\n-      end if;\n-\n-      Initialize_Checksum (Csum);\n-      Ptr := 0;\n-\n-      loop\n-         case Src (Ptr) is\n-\n-            --  Spaces and formatting information are ignored in checksum\n-\n-            when ' ' | CR | LF | VT | FF | HT =>\n-               Ptr := Ptr + 1;\n-\n-            --  EOF is ignored unless it is the last character\n-\n-            when EOF =>\n-               if Ptr = Hi then\n-                  System.Memory.Free (Src.all'Address);\n-                  return Csum;\n-               else\n-                  Ptr := Ptr + 1;\n-               end if;\n+      null;\n+   end Error_Msg;\n \n-            --  Non-blank characters that are included in the checksum\n+   pragma Warnings (Off);\n+   --  To avoid warnings on non referenced parameters of the error procedures\n \n-            when '#' | '&' | '*' | ':' | '(' | ',' | '.' | '=' | '>' |\n-                 '<' | ')' | '/' | ';' | '|' | '!' | '+' | '_' |\n-                 '0' .. '9' | 'a' .. 'z'\n-            =>\n-               Accumulate_Checksum (Src (Ptr), Csum);\n-               Ptr := Ptr + 1;\n+   -----------------\n+   -- Error_Msg_S --\n+   -----------------\n \n-            --  Upper case letters, fold to lower case\n-\n-            when 'A' .. 'Z' =>\n-               Accumulate_Checksum\n-                 (Character'Val (Character'Pos (Src (Ptr)) + 32), Csum);\n-               Ptr := Ptr + 1;\n-\n-            --  Left bracket, really should do wide character thing here,\n-            --  but for now, don't bother.\n-\n-            when '[' =>\n-               raise Bad;\n-\n-            --  Minus, could be comment\n-\n-            when '-' =>\n-               if Src (Ptr + 1) = '-' then\n-                  Ptr := Ptr + 2;\n-\n-                  while Src (Ptr) >= ' ' or else Src (Ptr) = HT loop\n-                     Ptr := Ptr + 1;\n-                  end loop;\n-\n-               else\n-                  Accumulate_Checksum ('-', Csum);\n-                  Ptr := Ptr + 1;\n-               end if;\n-\n-            --  String delimited by double quote\n-\n-            when '\"' =>\n-               Accumulate_Checksum ('\"', Csum);\n-\n-               loop\n-                  Ptr := Ptr + 1;\n-                  exit when Src (Ptr) = '\"';\n-\n-                  if Src (Ptr) < ' ' then\n-                     raise Bad;\n-                  end if;\n-\n-                  Accumulate_Checksum (Src (Ptr), Csum);\n-               end loop;\n-\n-               Accumulate_Checksum ('\"', Csum);\n-               Ptr := Ptr + 1;\n-\n-            --  String delimited by percent\n-\n-            when '%' =>\n-               Accumulate_Checksum ('%', Csum);\n-\n-               loop\n-                  Ptr := Ptr + 1;\n-                  exit when Src (Ptr) = '%';\n-\n-                  if Src (Ptr) < ' ' then\n-                     raise Bad;\n-                  end if;\n+   procedure Error_Msg_S (Msg : String) is\n+   begin\n+      null;\n+   end Error_Msg_S;\n \n-                  Accumulate_Checksum (Src (Ptr), Csum);\n-               end loop;\n+   ------------------\n+   -- Error_Msg_SC --\n+   ------------------\n \n-               Accumulate_Checksum ('%', Csum);\n-               Ptr := Ptr + 1;\n+   procedure Error_Msg_SC (Msg : String) is\n+   begin\n+      null;\n+   end Error_Msg_SC;\n \n-            --  Quote, could be character constant\n+   ------------------\n+   -- Error_Msg_SP --\n+   ------------------\n \n-            when ''' =>\n-               Accumulate_Checksum (''', Csum);\n+   procedure Error_Msg_SP (Msg : String) is\n+   begin\n+      null;\n+   end Error_Msg_SP;\n \n-               if Src (Ptr + 2) = ''' then\n-                  Accumulate_Checksum (Src (Ptr + 1), Csum);\n-                  Accumulate_Checksum (''', Csum);\n-                  Ptr := Ptr + 3;\n+   pragma Warnings (On);\n \n-               --  Otherwise assume attribute char. We should deal with wide\n-               --  character cases here, but that's hard, so forget it.\n+   -----------------------\n+   -- Get_File_Checksum --\n+   -----------------------\n \n-               else\n-                  Ptr := Ptr + 1;\n-               end if;\n+   function Get_File_Checksum (Fname : Name_Id) return Word is\n+      Full_Name    : Name_Id;\n+      Source_Index : Source_File_Index;\n+   begin\n+      Full_Name := Find_File (Fname, Osint.Source);\n \n-            --  Upper half character, more to be done here, we should worry\n-            --  about folding Latin-1, folding other character sets, and\n-            --  dealing with the nasty case of upper half wide encoding.\n+      --  If we cannot find the file, then return an impossible checksum,\n+      --  impossible becaues checksums have the high order bit zero, so\n+      --  that checksums do not match.\n \n-            when Upper_Half_Character =>\n-               Accumulate_Checksum (Src (Ptr), Csum);\n-               Ptr := Ptr + 1;\n+      if Full_Name = No_File then\n+         return Checksum_Error;\n+      end if;\n \n-            --  Escape character, we should do the wide character thing here,\n-            --  but for now, do not bother.\n+      Source_Index := Sinput.C.Load_File (Get_Name_String (Full_Name));\n \n-            when ESC =>\n-               raise Bad;\n+      if Source_Index = No_Source_File then\n+         return Checksum_Error;\n+      end if;\n \n-            --  Invalid control characters\n+      Scanner.Initialize_Scanner (Types.No_Unit, Source_Index);\n \n-            when NUL | SOH | STX | ETX | EOT | ENQ | ACK | BEL | BS  | SO  |\n-                 SI  | DLE | DC1 | DC2 | DC3 | DC4 | NAK | SYN | ETB | CAN |\n-                 EM  | FS  | GS  | RS  | US  | DEL\n-            =>\n-               raise Bad;\n+      --  Make sure that the project language reserved words are not\n+      --  recognized as reserved words, but as identifiers. The byte info for\n+      --  those names have been set if we are in gnatmake.\n \n-            --  Invalid graphic characters\n+      Set_Name_Table_Byte (Name_Project,  0);\n+      Set_Name_Table_Byte (Name_Extends,  0);\n+      Set_Name_Table_Byte (Name_External, 0);\n \n-            when '$' | '?' | '@' | '`' | '\\' |\n-                 '^' | '~' | ']' | '{' | '}'\n-            =>\n-               raise Bad;\n+      --  Scan the complete file to compute its checksum\n \n-         end case;\n+      loop\n+         Scanner.Scan;\n+         exit when Token = Tok_EOF;\n       end loop;\n \n-   exception\n-      when Bad =>\n-         System.Memory.Free (Src.all'Address);\n-         return Checksum_Error;\n+      return Scans.Checksum;\n    end Get_File_Checksum;\n \n    ----------\n@@ -293,14 +203,14 @@ package body ALI.Util is\n       Interfaces.Reset;\n    end Initialize_ALI_Source;\n \n-   -------------------------\n-   -- Initialize_Checksum --\n-   -------------------------\n+   ---------------\n+   -- Post_Scan --\n+   ---------------\n \n-   procedure Initialize_Checksum (Csum : out Word) is\n+   procedure Post_Scan is\n    begin\n-      System.CRC32.Initialize (System.CRC32.CRC32 (Csum));\n-   end Initialize_Checksum;\n+      null;\n+   end Post_Scan;\n \n    --------------\n    -- Read_ALI --"}, {"sha": "ea73f2f8d4f880ec852c9f75f59bc6a32572951f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 26, "deletions": 52, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -238,8 +238,7 @@ package body Checks is\n    function Guard_Access\n      (Cond    : Node_Id;\n       Loc     : Source_Ptr;\n-      Ck_Node : Node_Id)\n-      return    Node_Id;\n+      Ck_Node : Node_Id) return Node_Id;\n    --  In the access type case, guard the test with a test to ensure\n    --  that the access value is non-null, since the checks do not\n    --  not apply to null access values.\n@@ -256,8 +255,7 @@ package body Checks is\n      (Ck_Node    : Node_Id;\n       Target_Typ : Entity_Id;\n       Source_Typ : Entity_Id;\n-      Warn_Node  : Node_Id)\n-      return       Check_Result;\n+      Warn_Node  : Node_Id) return Check_Result;\n    --  Like Apply_Selected_Length_Checks, except it doesn't modify\n    --  anything, just returns a list of nodes as described in the spec of\n    --  this package for the Range_Check function.\n@@ -266,8 +264,7 @@ package body Checks is\n      (Ck_Node    : Node_Id;\n       Target_Typ : Entity_Id;\n       Source_Typ : Entity_Id;\n-      Warn_Node  : Node_Id)\n-      return       Check_Result;\n+      Warn_Node  : Node_Id) return Check_Result;\n    --  Like Apply_Selected_Range_Checks, except it doesn't modify anything,\n    --  just returns a list of nodes as described in the spec of this package\n    --  for the Range_Check function.\n@@ -2098,8 +2095,7 @@ package body Checks is\n \n    function Build_Discriminant_Checks\n      (N     : Node_Id;\n-      T_Typ : Entity_Id)\n-      return Node_Id\n+      T_Typ : Entity_Id) return Node_Id\n    is\n       Loc      : constant Source_Ptr := Sloc (N);\n       Cond     : Node_Id;\n@@ -3487,8 +3483,7 @@ package body Checks is\n    is\n       function Within_Range_Of\n         (Target_Type : Entity_Id;\n-         Check_Type  : Entity_Id)\n-         return        Boolean;\n+         Check_Type  : Entity_Id) return Boolean;\n       --  Given a requirement for checking a range against Target_Type, and\n       --  and a range Check_Type against which a check has already been made,\n       --  determines if the check against check type is sufficient to ensure\n@@ -3500,8 +3495,7 @@ package body Checks is\n \n       function Within_Range_Of\n         (Target_Type : Entity_Id;\n-         Check_Type  : Entity_Id)\n-         return        Boolean\n+         Check_Type  : Entity_Id) return Boolean\n       is\n       begin\n          if Target_Type = Check_Type then\n@@ -4191,8 +4185,7 @@ package body Checks is\n    function Guard_Access\n      (Cond    : Node_Id;\n       Loc     : Source_Ptr;\n-      Ck_Node : Node_Id)\n-      return    Node_Id\n+      Ck_Node : Node_Id) return Node_Id\n    is\n    begin\n       if Nkind (Cond) = N_Or_Else then\n@@ -4480,8 +4473,7 @@ package body Checks is\n      (Ck_Node    : Node_Id;\n       Target_Typ : Entity_Id;\n       Source_Typ : Entity_Id := Empty;\n-      Warn_Node  : Node_Id   := Empty)\n-      return       Check_Result\n+      Warn_Node  : Node_Id   := Empty) return Check_Result\n    is\n    begin\n       return Selected_Range_Checks\n@@ -4607,8 +4599,7 @@ package body Checks is\n      (Ck_Node    : Node_Id;\n       Target_Typ : Entity_Id;\n       Source_Typ : Entity_Id;\n-      Warn_Node  : Node_Id)\n-      return       Check_Result\n+      Warn_Node  : Node_Id) return Check_Result\n    is\n       Loc         : constant Source_Ptr := Sloc (Ck_Node);\n       S_Typ       : Entity_Id;\n@@ -4626,6 +4617,7 @@ package body Checks is\n \n       function Get_E_Length (E : Entity_Id; Indx : Nat) return Node_Id;\n       function Get_N_Length (N : Node_Id; Indx : Nat) return Node_Id;\n+      --  Comments required ???\n \n       function Same_Bounds (L : Node_Id; R : Node_Id) return Boolean;\n       --  True for equal literals and for nodes that denote the same constant\n@@ -4636,16 +4628,14 @@ package body Checks is\n       function Length_E_Cond\n         (Exptyp : Entity_Id;\n          Typ    : Entity_Id;\n-         Indx   : Nat)\n-         return   Node_Id;\n+         Indx   : Nat) return Node_Id;\n       --  Returns expression to compute:\n       --    Typ'Length /= Exptyp'Length\n \n       function Length_N_Cond\n         (Expr : Node_Id;\n          Typ  : Entity_Id;\n-         Indx : Nat)\n-         return Node_Id;\n+         Indx : Nat) return Node_Id;\n       --  Returns expression to compute:\n       --    Typ'Length /= Expr'Length\n \n@@ -4812,8 +4802,7 @@ package body Checks is\n       function Length_E_Cond\n         (Exptyp : Entity_Id;\n          Typ    : Entity_Id;\n-         Indx   : Nat)\n-         return   Node_Id\n+         Indx   : Nat) return Node_Id\n       is\n       begin\n          return\n@@ -4830,8 +4819,7 @@ package body Checks is\n       function Length_N_Cond\n         (Expr : Node_Id;\n          Typ  : Entity_Id;\n-         Indx : Nat)\n-         return Node_Id\n+         Indx : Nat) return Node_Id\n       is\n       begin\n          return\n@@ -5113,8 +5101,7 @@ package body Checks is\n      (Ck_Node    : Node_Id;\n       Target_Typ : Entity_Id;\n       Source_Typ : Entity_Id;\n-      Warn_Node  : Node_Id)\n-      return       Check_Result\n+      Warn_Node  : Node_Id) return Check_Result\n    is\n       Loc         : constant Source_Ptr := Sloc (Ck_Node);\n       S_Typ       : Entity_Id;\n@@ -5132,17 +5119,15 @@ package body Checks is\n \n       function Discrete_Range_Cond\n         (Expr : Node_Id;\n-         Typ  : Entity_Id)\n-         return Node_Id;\n+         Typ  : Entity_Id) return Node_Id;\n       --  Returns expression to compute:\n       --    Low_Bound (Expr) < Typ'First\n       --      or else\n       --    High_Bound (Expr) > Typ'Last\n \n       function Discrete_Expr_Cond\n         (Expr : Node_Id;\n-         Typ  : Entity_Id)\n-         return Node_Id;\n+         Typ  : Entity_Id) return Node_Id;\n       --  Returns expression to compute:\n       --    Expr < Typ'First\n       --      or else\n@@ -5151,8 +5136,7 @@ package body Checks is\n       function Get_E_First_Or_Last\n         (E    : Entity_Id;\n          Indx : Nat;\n-         Nam  : Name_Id)\n-         return Node_Id;\n+         Nam  : Name_Id) return Node_Id;\n       --  Returns expression to compute:\n       --    E'First or E'Last\n \n@@ -5172,16 +5156,14 @@ package body Checks is\n       function Range_Equal_E_Cond\n         (Exptyp : Entity_Id;\n          Typ    : Entity_Id;\n-         Indx   : Nat)\n-         return   Node_Id;\n+         Indx   : Nat) return Node_Id;\n       --  Returns expression to compute:\n       --    Exptyp'First /= Typ'First or else Exptyp'Last /= Typ'Last\n \n       function Range_N_Cond\n         (Expr : Node_Id;\n          Typ  : Entity_Id;\n-         Indx : Nat)\n-         return Node_Id;\n+         Indx : Nat) return Node_Id;\n       --  Return expression to compute:\n       --    Expr'First < Typ'First or else Expr'Last > Typ'Last\n \n@@ -5211,8 +5193,7 @@ package body Checks is\n \n       function Discrete_Expr_Cond\n         (Expr : Node_Id;\n-         Typ  : Entity_Id)\n-         return Node_Id\n+         Typ  : Entity_Id) return Node_Id\n       is\n       begin\n          return\n@@ -5243,8 +5224,7 @@ package body Checks is\n \n       function Discrete_Range_Cond\n         (Expr : Node_Id;\n-         Typ  : Entity_Id)\n-         return Node_Id\n+         Typ  : Entity_Id) return Node_Id\n       is\n          LB : Node_Id := Low_Bound (Expr);\n          HB : Node_Id := High_Bound (Expr);\n@@ -5318,8 +5298,7 @@ package body Checks is\n       function Get_E_First_Or_Last\n         (E    : Entity_Id;\n          Indx : Nat;\n-         Nam  : Name_Id)\n-         return Node_Id\n+         Nam  : Name_Id) return Node_Id\n       is\n          N     : Node_Id;\n          LB    : Node_Id;\n@@ -5432,7 +5411,6 @@ package body Checks is\n                Duplicate_Subexpr_No_Checks (N, Name_Req => True),\n              Expressions => New_List (\n                Make_Integer_Literal (Loc, Indx)));\n-\n       end Get_N_First;\n \n       ----------------\n@@ -5448,7 +5426,6 @@ package body Checks is\n                Duplicate_Subexpr_No_Checks (N, Name_Req => True),\n              Expressions => New_List (\n               Make_Integer_Literal (Loc, Indx)));\n-\n       end Get_N_Last;\n \n       ------------------\n@@ -5458,8 +5435,7 @@ package body Checks is\n       function Range_E_Cond\n         (Exptyp : Entity_Id;\n          Typ    : Entity_Id;\n-         Indx   : Nat)\n-         return   Node_Id\n+         Indx   : Nat) return Node_Id\n       is\n       begin\n          return\n@@ -5483,8 +5459,7 @@ package body Checks is\n       function Range_Equal_E_Cond\n         (Exptyp : Entity_Id;\n          Typ    : Entity_Id;\n-         Indx   : Nat)\n-         return   Node_Id\n+         Indx   : Nat) return Node_Id\n       is\n       begin\n          return\n@@ -5506,8 +5481,7 @@ package body Checks is\n       function Range_N_Cond\n         (Expr : Node_Id;\n          Typ  : Entity_Id;\n-         Indx : Nat)\n-         return Node_Id\n+         Indx : Nat) return Node_Id\n       is\n       begin\n          return"}, {"sha": "37d9a618da6003ff74508dac32063f3e73938a77", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -4872,9 +4872,13 @@ package body Exp_Aggr is\n \n             Analyze_And_Resolve (N, Ctyp);\n \n-            --  Must have a compile time value\n+            --  Must have a compile time value. String literals have to\n+            --  be converted into temporaries as well, because they cannot\n+            --  easily be converted into their bit representation.\n \n-            if not Compile_Time_Known_Value (N) then\n+            if not Compile_Time_Known_Value (N)\n+              or else Nkind (N) = N_String_Literal\n+            then\n                raise Not_Handled;\n             end if;\n "}, {"sha": "c9de061ec58bbc19eef5cdb73105336163c76f77", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -5352,6 +5352,10 @@ package body Exp_Ch4 is\n          loop\n             if Nkind (Par) = N_Procedure_Call_Statement then\n                return True;\n+\n+            elsif Nkind (Par) = N_Function_Call then\n+               return False;\n+\n             else\n                Par := Parent (Par);\n             end if;"}, {"sha": "b86d353ea6a5f5f02e9af93bbd0f368432aefc0d", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -1282,6 +1282,26 @@ package body Exp_Pakd is\n       --  conversion is analyzed immediately so that subsequent processing\n       --  can work with an analyzed Rhs (and e.g. look at its Etype)\n \n+      --  If the right-hand side is a string literal, create a temporary for\n+      --  it, constant-folding is not ready to wrap the bit representation\n+      --  of a string literal.\n+\n+      if Nkind (Rhs) = N_String_Literal then\n+         declare\n+            Decl : Node_Id;\n+         begin\n+            Decl :=\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier =>\n+                  Make_Defining_Identifier (Loc,  New_Internal_Name ('T')),\n+                Object_Definition => New_Occurrence_Of (Ctyp, Loc),\n+                Expression => New_Copy_Tree (Rhs));\n+\n+            Insert_Actions (N, New_List (Decl));\n+            Rhs := New_Occurrence_Of (Defining_Identifier (Decl), Loc);\n+         end;\n+      end if;\n+\n       Rhs := Convert_To (Ctyp, Rhs);\n       Set_Parent (Rhs, N);\n       Analyze_And_Resolve (Rhs, Ctyp);"}, {"sha": "05862b478ebaaea50f6e65e427a27a777777e58a", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1999-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -144,7 +144,7 @@ package body GNAT.Command_Line is\n \n       S    : String (1 .. 1024);\n       Last : Natural;\n-      It   : Pointer := Iterator'Unrestricted_Access;\n+      It   : constant Pointer := Iterator'Unrestricted_Access;\n \n       Current : Depth := It.Current_Depth;\n       NL      : Positive;"}, {"sha": "83313755ba7eb49e31921453e793806903493def", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -988,7 +988,10 @@ procedure Gnatlink is\n             --  Add binder options only if not already set on the command\n             --  line. This rule is a way to control the linker options order.\n \n-            elsif not Is_Option_Present (Next_Line (Nfirst .. Nlast)) then\n+            elsif not (Hostparm.OpenVMS\n+                         and then\n+                       Is_Option_Present (Next_Line (Nfirst .. Nlast)))\n+            then\n                if Nlast > Nfirst + 2 and then\n                  Next_Line (Nfirst .. Nfirst + 1) = \"-L\"\n                then"}, {"sha": "89b0d69a7394d33aef78dcbe9b84015e96362d0c", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -828,9 +828,8 @@ package body Make is\n       else\n          while Last_Argument + Args'Length > Arguments'Last loop\n             declare\n-               New_Arguments : Argument_List_Access :=\n-                 new Argument_List (1 .. Arguments'Last * 2);\n-\n+               New_Arguments : constant Argument_List_Access :=\n+                                 new Argument_List (1 .. Arguments'Last * 2);\n             begin\n                New_Arguments (1 .. Last_Argument) :=\n                  Arguments (1 .. Last_Argument);\n@@ -2553,8 +2552,13 @@ package body Make is\n       Check_Source_Files := True;\n       All_Sources        := False;\n \n-      Insert_Q (Main_Source);\n-      Mark (Main_Source);\n+      --  Only insert in the Q if it is not already done, to avoid simultaneous\n+      --  compilations if -jnnn is used.\n+\n+      if not Is_Marked (Main_Source) then\n+         Insert_Q (Main_Source);\n+         Mark (Main_Source);\n+      end if;\n \n       First_Compiled_File   := No_File;\n       Most_Recent_Obj_File  := No_File;\n@@ -4305,18 +4309,6 @@ package body Make is\n \n       Multiple_Main_Loop : for N_File in 1 .. Osint.Number_Of_Files loop\n \n-         --  Increase the marking label to be sure to check sources\n-         --  for all executables.\n-\n-         Marking_Label := Marking_Label + 1;\n-\n-         --  Make sure it is not 0, which is the default value for\n-         --  a file that has never been marked.\n-\n-         if Marking_Label = 0 then\n-            Marking_Label := 1;\n-         end if;\n-\n          --  First, find the executable name and path\n \n          Executable          := No_File;\n@@ -5443,6 +5435,18 @@ package body Make is\n                end;\n             end if;\n          end if;\n+\n+         --  Increase the marking label to be sure to check sources\n+         --  for all executables.\n+\n+         Marking_Label := Marking_Label + 1;\n+\n+         --  Make sure it is not 0, which is the default value for\n+         --  a file that has never been marked.\n+\n+         if Marking_Label = 0 then\n+            Marking_Label := 1;\n+         end if;\n       end loop Multiple_Main_Loop;\n \n       if Failed_Links.Last > 0 then\n@@ -7214,7 +7218,8 @@ package body Make is\n    end Verbose_Msg;\n \n begin\n+   --  Make sure that in case of failure, the temp files will be deleted\n+\n    Prj.Com.Fail := Make_Failed'Access;\n    MLib.Fail    := Make_Failed'Access;\n-   --  Make sure that in case of failure, the temp files will be deleted\n end Make;"}, {"sha": "a8b02690185923fb8eb5d65e97d0b2281707b705", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -272,7 +272,7 @@ package body Osint.C is\n                Exten : constant String := Name_Buffer (Dot_Index .. Name_Len);\n             begin\n                Name_Len := Dot_Index - 1;\n-               Add_Char_To_Name_Buffer ('~');\n+               Add_Char_To_Name_Buffer (Multi_Unit_Index_Character);\n                Add_Nat_To_Name_Buffer (Multiple_Unit_Index);\n                Dot_Index := Name_Len + 1;\n                Add_Str_To_Name_Buffer (Exten);"}, {"sha": "07355ed9ba2eb094e1a47b1ff59afb26563b49eb", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -1406,7 +1406,7 @@ package body Osint is\n       end loop;\n \n       if Munit_Index /= 0 then\n-         Add_Char_To_Name_Buffer ('~');\n+         Add_Char_To_Name_Buffer (Multi_Unit_Index_Character);\n          Add_Nat_To_Name_Buffer (Munit_Index);\n       end if;\n \n@@ -2132,7 +2132,7 @@ package body Osint is\n          type Actual_Source_Ptr is access Actual_Source_Buffer;\n          --  This is the pointer type for the physical buffer allocated\n \n-         Actual_Ptr : Actual_Source_Ptr := new Actual_Source_Buffer;\n+         Actual_Ptr : constant Actual_Source_Ptr := new Actual_Source_Buffer;\n          --  And this is the actual physical buffer\n \n       begin\n@@ -2754,6 +2754,13 @@ begin\n       Identifier_Character_Set := Get_Default_Identifier_Character_Set;\n       Maximum_File_Name_Length := Get_Maximum_File_Name_Length;\n \n+      --  On VMS, '~' is not allowed in file names. Change the multi unit\n+      --  index character to '$'.\n+\n+      if Hostparm.OpenVMS then\n+         Multi_Unit_Index_Character := '$';\n+      end if;\n+\n       --  Following should be removed by having above function return\n       --  Integer'Last as indication of no maximum instead of -1 ???\n "}, {"sha": "44ad5bad4ed9c1027be76d9bea89b6b377fa7d0e", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -36,6 +36,11 @@ pragma Elaborate (GNAT.OS_Lib);\n \n package Osint is\n \n+   Multi_Unit_Index_Character : Character := '~';\n+   --  The character before the index of the unit in a multi-unit source,\n+   --  in ALI and object file names. This is not a constant, because it is\n+   --  changed to '$' on VMS.\n+\n    Ada_Include_Path          : constant String := \"ADA_INCLUDE_PATH\";\n    Ada_Objects_Path          : constant String := \"ADA_OBJECTS_PATH\";\n    Project_Include_Path_File : constant String := \"ADA_PRJ_INCLUDE_FILE\";"}, {"sha": "97d4c362daa38477aa68975217876c758709dc0e", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -665,11 +665,19 @@ package body Ch10 is\n \n             --  Skip tokens to end of file, so that the -gnatl listing\n             --  will be complete in this situation, but no need to parse\n-            --  the remaining units.\n+            --  the remaining units; no style checking either.\n \n-            while Token /= Tok_EOF loop\n-               Scan;\n-            end loop;\n+            declare\n+               Save_Style_Check : constant Boolean := Style_Check;\n+            begin\n+               Style_Check := False;\n+\n+               while Token /= Tok_EOF loop\n+                  Scan;\n+               end loop;\n+\n+               Style_Check := Save_Style_Check;\n+            end;\n \n             return Comp_Unit_Node;\n "}, {"sha": "791a866c95fdada2730f041153fcbb9bb9db92b8", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -2338,16 +2338,8 @@ package body Ch4 is\n \n       --  Scan Null_Exclusion if present (Ada 0Y (AI-231))\n \n-      if Extensions_Allowed then\n-         Null_Exclusion_Present := P_Null_Exclusion;\n-         Set_Null_Exclusion_Present (Alloc_Node, Null_Exclusion_Present);\n-\n-      --  If Ada 95, null exclusion never present\n-\n-      else\n-         Null_Exclusion_Present := False;\n-      end if;\n-\n+      Null_Exclusion_Present := P_Null_Exclusion;\n+      Set_Null_Exclusion_Present (Alloc_Node, Null_Exclusion_Present);\n       Type_Node := P_Subtype_Mark_Resync;\n \n       if Token = Tok_Apostrophe then"}, {"sha": "dbec0b8ff26060738b7480e41eb9dfebf3133bfe", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 61, "deletions": 33, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -1233,38 +1233,6 @@ begin\n    else\n       Save_Opt_Config_Switches (Save_Config_Switches);\n \n-      --  Special processing for language defined units. For this purpose\n-      --  we do NOT consider the renamings in annex J as predefined. That\n-      --  allows users to compile their own versions of these files, and\n-      --  in particular, in the VMS implementation, the DEC versions can\n-      --  be substituted for the standard Ada 95 versions.\n-\n-      if Is_Predefined_File_Name\n-           (Fname => File_Name (Current_Source_File),\n-            Renamings_Included => False)\n-      then\n-         Set_Opt_Config_Switches\n-           (Is_Internal_File_Name (File_Name (Current_Source_File)));\n-\n-         --  If this is the main unit, disallow compilation unless the -gnatg\n-         --  (GNAT mode) switch is set (from a user point of view, the rule is\n-         --  that language defined units cannot be recompiled).\n-\n-         --  However, an exception is s-rpc, and its children. We test this\n-         --  by looking at the characters after the minus. The rule is that\n-         --  only s-rpc and its children have names starting s-rp.\n-\n-         Get_Name_String (File_Name (Current_Source_File));\n-\n-         if (Name_Len < 5 or else Name_Buffer (1 .. 4) /= \"s-rp\")\n-           and then Current_Source_Unit = Main_Unit\n-           and then not GNAT_Mode\n-           and then Operating_Mode = Generate_Code\n-         then\n-            Error_Msg_SC (\"language defined units may not be recompiled\");\n-         end if;\n-      end if;\n-\n       --  The following loop runs more than once in syntax check mode\n       --  where we allow multiple compilation units in the same file\n       --  and in Multiple_Unit_Per_file mode where we skip units till\n@@ -1298,10 +1266,15 @@ begin\n                Save_Operating_Mode : constant Operating_Mode_Type :=\n                                        Operating_Mode;\n \n+               Save_Style_Check : constant Boolean := Style_Check;\n+\n+\n             begin\n                Operating_Mode := Check_Syntax;\n+               Style_Check := False;\n                Discard_Node (P_Compilation_Unit);\n                Operating_Mode := Save_Operating_Mode;\n+               Style_Check := Save_Style_Check;\n \n                --  If we are at an end of file, and not yet at the right\n                --  unit, then we have a fatal error. The unit is missing.\n@@ -1317,7 +1290,62 @@ begin\n             --  check syntax mode we are interested in all units in the file.\n \n          else\n-            Discard_Node (P_Compilation_Unit);\n+            declare\n+               Comp_Unit_Node : constant Node_Id := P_Compilation_Unit;\n+\n+            begin\n+               --  If parsing was successful and we are not in check syntax\n+               --  mode, check that language defined units are compiled in\n+               --  GNAT mode. For this purpose we do NOT consider renamings\n+               --  in annex J as predefined. That allows users to compile\n+               --  their own versions of these files, and in particular,\n+               --  in the VMS implementation, the DEC versions can be\n+               --  substituted for the standard Ada 95 versions. Another\n+               --  exception is System.RPC and its children. This allows\n+               --  a user to supply their own communication layer.\n+\n+               if Comp_Unit_Node /= Error\n+                 and then Operating_Mode = Generate_Code\n+                 and then Current_Source_Unit = Main_Unit\n+                 and then not GNAT_Mode\n+               then\n+                  declare\n+                     Name : constant String :=\n+                              Get_Name_String\n+                               (Unit_Name (Current_Source_Unit));\n+                  begin\n+                     if (Name = \"ada\"                  or else\n+                         Name = \"calendar\"             or else\n+                         Name = \"interfaces\"           or else\n+                         Name = \"system\"               or else\n+                         Name = \"machine_code\"         or else\n+                         Name = \"unchecked_conversion\" or else\n+                         Name = \"unchecked_deallocation\"\n+                           or else (Name'Length > 4\n+                                     and then\n+                                       Name (Name'First .. Name'First + 3) =\n+                                                                 \"ada.\")\n+                           or else (Name'Length > 11\n+                                     and then\n+                                       Name (Name'First .. Name'First + 10) =\n+                                                                 \"interfaces.\")\n+                           or else (Name'Length > 7\n+                                     and then\n+                                       Name (Name'First .. Name'First + 6) =\n+                                                                 \"system.\"))\n+                       and then Name /= \"system.rpc\"\n+                       and then\n+                         (Name'Length < 11\n+                            or else Name (Name'First .. Name'First + 10) /=\n+                                                                 \"system.rpc.\")\n+                     then\n+                        Error_Msg\n+                          (\"language defined units may not be recompiled\",\n+                           Sloc (Unit (Comp_Unit_Node)));\n+                     end if;\n+                  end;\n+               end if;\n+            end;\n \n             --  All done if at end of file\n "}, {"sha": "f88589d83243d84ac6be3475e20e1fdf1f65a677", "filename": "gcc/ada/s-secsta.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fs-secsta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fs-secsta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-secsta.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -423,7 +423,8 @@ package body System.Secondary_Stack is\n \n       if not SS_Ratio_Dynamic then\n          declare\n-            Fixed_Stack : Fixed_Stack_Ptr := To_Fixed_Stack_Ptr (Stk);\n+            Fixed_Stack : constant Fixed_Stack_Ptr :=\n+                            To_Fixed_Stack_Ptr (Stk);\n \n          begin\n             Fixed_Stack.Top  := 0;"}, {"sha": "a77fb63a3baa6bf9c5561f2f98958168f8af6024", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -519,7 +519,7 @@ package body System.Tasking.Protected_Objects.Operations is\n       Mode                : Call_Modes;\n       Block               : out Communication_Block)\n    is\n-      Self_ID             : Task_ID  := STPO.Self;\n+      Self_ID             : constant Task_ID  := STPO.Self;\n       Entry_Call          : Entry_Call_Link;\n       Initially_Abortable : Boolean;\n       Ceiling_Violation   : Boolean;"}, {"sha": "690656c76fbd297df2371a619df38d9b1ae3ae16", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -59,6 +59,9 @@ package body Scng is\n    -- Local Subprograms --\n    -----------------------\n \n+   procedure Accumulate_Token_Checksum;\n+   pragma Inline (Accumulate_Token_Checksum);\n+\n    procedure Accumulate_Checksum (C : Character);\n    pragma Inline (Accumulate_Checksum);\n    --  This routine accumulates the checksum given character C. During the\n@@ -96,6 +99,17 @@ package body Scng is\n       Accumulate_Checksum (Character'Val (C mod 256));\n    end Accumulate_Checksum;\n \n+   -------------------------------\n+   -- Accumulate_Token_Checksum --\n+   -------------------------------\n+\n+   procedure Accumulate_Token_Checksum is\n+   begin\n+      System.CRC32.Update\n+        (System.CRC32.CRC32 (Checksum),\n+         Character'Val (Token_Type'Pos (Token)));\n+   end Accumulate_Token_Checksum;\n+\n    ----------------------------\n    -- Determine_Token_Casing --\n    ----------------------------\n@@ -408,6 +422,7 @@ package body Scng is\n          --  Procedure to scan integer literal. On entry, Scan_Ptr points to\n          --  a digit, on exit Scan_Ptr points past the last character of\n          --  the integer.\n+         --\n          --  For each digit encountered, UI_Int_Value is multiplied by 10,\n          --  and the value of the digit added to the result. In addition,\n          --  the value in Scale is decremented by one for each actual digit\n@@ -444,7 +459,10 @@ package body Scng is\n                C := Source (Scan_Ptr);\n \n                if C = '_' then\n-                  Accumulate_Checksum ('_');\n+                  --  We do not want to accumulate the '_' in the checksum,\n+                  --  so that 1_234 is equivalent to 1234, and does not\n+                  --  trigger compilation in \"minimal recompilation\"\n+                  --  (gnatmake -m).\n \n                   loop\n                      Scan_Ptr := Scan_Ptr + 1;\n@@ -707,6 +725,8 @@ package body Scng is\n \n          end if;\n \n+         Accumulate_Token_Checksum;\n+\n          return;\n \n       end Nlit;\n@@ -2063,16 +2083,19 @@ package body Scng is\n             --  of the corresponding keyword.\n \n             Token_Name := No_Name;\n+            Accumulate_Token_Checksum;\n             return;\n \n          --  It is an identifier after all\n \n          else\n             Token := Tok_Identifier;\n+            Accumulate_Token_Checksum;\n             Post_Scan;\n             return;\n          end if;\n    end Scan;\n+\n    --------------------------\n    -- Set_Comment_As_Token --\n    --------------------------"}, {"sha": "1c33c4ab58283362d9627538a5e7464d4b165c69", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -690,24 +690,22 @@ package body Sem_Ch3 is\n       --  Ada 95 semantics. In Ada 0Y, anonymous access must specify if the\n       --  null value is allowed; in Ada 95 the null value is not allowed\n \n-      if Extensions_Allowed\n-        and then Null_Exclusion_Present (N)\n-      then\n-         Set_Can_Never_Be_Null (Anon_Type);\n+      if Extensions_Allowed then\n+         Set_Can_Never_Be_Null (Anon_Type, Null_Exclusion_Present (N));\n       else\n-         Set_Can_Never_Be_Null (Anon_Type);\n+         Set_Can_Never_Be_Null (Anon_Type, True);\n       end if;\n \n       --  The anonymous access type is as public as the discriminated type or\n       --  subprogram that defines it. It is imported (for back-end purposes)\n       --  if the designated type is.\n \n-      Set_Is_Public          (Anon_Type, Is_Public (Scope (Anon_Type)));\n+      Set_Is_Public (Anon_Type, Is_Public (Scope (Anon_Type)));\n \n       --  Ada 0Y (AI-50217): Propagate the attribute that indicates that the\n       --  designated type comes from the limited view (for back-end purposes).\n \n-      Set_From_With_Type     (Anon_Type, From_With_Type (Desig_Type));\n+      Set_From_With_Type (Anon_Type, From_With_Type (Desig_Type));\n \n       --  Ada 0Y (AI-231): Propagate the access-constant attribute\n "}, {"sha": "7f35f5c384a52a309c2b85dc4f79c08462bbeb83", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -1875,7 +1875,7 @@ package Sinfo is\n       --------------------------------\n \n       --  SUBTYPE_DECLARATION ::=\n-      --    subtype DEFINING_IDENTIFIER is SUBTYPE_INDICATION;\n+      --    subtype DEFINING_IDENTIFIER is [NULL_EXCLUSION] SUBTYPE_INDICATION;\n \n       --  The subtype indication field is set to Empty for subtypes\n       --  declared in package Standard (Positive, Natural).\n@@ -1898,6 +1898,11 @@ package Sinfo is\n       --  directly in the tree as a subtype mark. The N_Subtype_Indication\n       --  node is used only if a constraint is present.\n \n+      --  Note: [For Ada 0Y (AI-231)]: Because Ada 0Y extends this rule with\n+      --  the null-exclusion part (see AI-231), we had to introduce a new\n+      --  attribute in all the parents of subtype_indication nodes to indicate\n+      --  if the null-exclusion is present.\n+\n       --  Note: the reason that this node has expression fields is that a\n       --  subtype indication can appear as an operand of a membership test.\n \n@@ -1947,7 +1952,7 @@ package Sinfo is\n \n       --  OBJECT_DECLARATION ::=\n       --    DEFINING_IDENTIFIER_LIST : [aliased] [constant]\n-      --      SUBTYPE_INDICATION [:= EXPRESSION];\n+      --      [NULL_EXCLUSION] SUBTYPE_INDICATION [:= EXPRESSION];\n       --  | DEFINING_IDENTIFIER_LIST : [aliased] [constant]\n       --      ARRAY_TYPE_DEFINITION [:= EXPRESSION];\n       --  | SINGLE_TASK_DECLARATION\n@@ -2037,7 +2042,8 @@ package Sinfo is\n       ----------------------------------\n \n       --  DERIVED_TYPE_DEFINITION ::=\n-      --    [abstract] new parent_SUBTYPE_INDICATION [RECORD_EXTENSION_PART]\n+      --    [abstract] new [NULL_EXCLUSION] parent_SUBTYPE_INDICATION\n+      --    [RECORD_EXTENSION_PART]\n \n       --  Note: ABSTRACT, record extension part not permitted in Ada 83 mode\n \n@@ -2327,7 +2333,7 @@ package Sinfo is\n       -------------------------------\n \n       --  COMPONENT_DEFINITION ::=\n-      --    [aliased] SUBTYPE_INDICATION | ACCESS_DEFINITION\n+      --    [aliased] [NULL_EXCLUSION] SUBTYPE_INDICATION | ACCESS_DEFINITION\n \n       --  Note: although the syntax does not permit a component definition to\n       --  be an anonymous array (and the parser will diagnose such an attempt\n@@ -2398,7 +2404,7 @@ package Sinfo is\n       -------------------------------------\n \n       --  DISCRIMINANT_SPECIFICATION ::=\n-      --    DEFINING_IDENTIFIER_LIST : SUBTYPE_MARK\n+      --    DEFINING_IDENTIFIER_LIST : [NULL_EXCLUSION] SUBTYPE_MARK\n       --      [:= DEFAULT_EXPRESSION]\n       --  | DEFINING_IDENTIFIER_LIST : ACCESS_DEFINITION\n       --      [:= DEFAULT_EXPRESSION]\n@@ -2636,12 +2642,19 @@ package Sinfo is\n       --    ACCESS_TO_OBJECT_DEFINITION\n       --  | ACCESS_TO_SUBPROGRAM_DEFINITION\n \n+      --------------------------\n+      -- 3.10  Null Exclusion --\n+      --------------------------\n+\n+      --  NULL_EXCLUSION ::= not null\n+\n       ---------------------------------------\n       -- 3.10  Access To Object Definition --\n       ---------------------------------------\n \n       --  ACCESS_TO_OBJECT_DEFINITION ::=\n-      --    access [GENERAL_ACCESS_MODIFIER] SUBTYPE_INDICATION\n+      --    [NULL_EXCLUSION] access [GENERAL_ACCESS_MODIFIER]\n+      --    SUBTYPE_INDICATION\n \n       --  N_Access_To_Object_Definition\n       --  Sloc points to ACCESS\n@@ -2667,8 +2680,9 @@ package Sinfo is\n       -------------------------------------------\n \n       --  ACCESS_TO_SUBPROGRAM_DEFINITION\n-      --    access [protected] procedure PARAMETER_PROFILE\n-      --  | access [protected] function PARAMETER_AND_RESULT_PROFILE\n+      --    [NULL_EXCLUSION] access [protected] procedure PARAMETER_PROFILE\n+      --  | [NULL_EXCLUSION] access [protected] function\n+      --    PARAMETER_AND_RESULT_PROFILE\n \n       --  Note: access to subprograms are not permitted in Ada 83 mode\n \n@@ -2689,7 +2703,8 @@ package Sinfo is\n       -- 3.10  Access Definition --\n       -----------------------------\n \n-      --  ACCESS_DEFINITION ::= access SUBTYPE_MARK\n+      --  ACCESS_DEFINITION ::=\n+      --    [NULL_EXCLUSION] access [GENERAL_ACCESS_MODIFIER] SUBTYPE_MARK\n \n       --  N_Access_Definition\n       --  Sloc points to ACCESS\n@@ -3485,7 +3500,7 @@ package Sinfo is\n       --------------------\n \n       --  ALLOCATOR ::=\n-      --    new SUBTYPE_INDICATION | new QUALIFIED_EXPRESSION\n+      --    new [NULL_EXCLUSION] SUBTYPE_INDICATION | new QUALIFIED_EXPRESSION\n \n       --  Sprint syntax (when storage pool present)\n       --    new xxx (storage_pool = pool)\n@@ -3990,7 +4005,7 @@ package Sinfo is\n       ----------------------------------\n \n       --  PARAMETER_SPECIFICATION ::=\n-      --    DEFINING_IDENTIFIER_LIST : MODE SUBTYPE_MARK\n+      --    DEFINING_IDENTIFIER_LIST : MODE [NULL_EXCLUSION] SUBTYPE_MARK\n       --      [:= DEFAULT_EXPRESSION]\n       --  | DEFINING_IDENTIFIER_LIST : ACCESS_DEFINITION\n       --      [:= DEFAULT_EXPRESSION]"}, {"sha": "2553cedee40c851aa63b44a6f4370162a2404482", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -103,7 +103,7 @@ package body Sinput.C is\n          type Actual_Source_Ptr is access Actual_Source_Buffer;\n          --  This is the pointer type for the physical buffer allocated\n \n-         Actual_Ptr : Actual_Source_Ptr := new Actual_Source_Buffer;\n+         Actual_Ptr : constant Actual_Source_Ptr := new Actual_Source_Buffer;\n          --  And this is the actual physical buffer\n \n       begin"}, {"sha": "df91201a7ae6462ac576bfe47c097a893d596654", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -220,12 +220,6 @@ package body Switch.C is\n                   ASIS_Mode := True;\n                end if;\n \n-            --  Processing for C switch\n-\n-            when 'C' =>\n-               Ptr := Ptr + 1;\n-               Scan_Pos (Switch_Chars, 999, Ptr, Multiple_Unit_Index);\n-\n             --  Processing for d switch\n \n             when 'd' =>\n@@ -388,6 +382,12 @@ package body Switch.C is\n                      Full_Path_Name_For_Brief_Errors := True;\n                      return;\n \n+                  --  -gnateI (index of unit in multi-unit source)\n+\n+                  when 'I' =>\n+                     Ptr := Ptr + 1;\n+                     Scan_Pos (Switch_Chars, 999, Ptr, Multiple_Unit_Index);\n+\n                   --  -gnatem (mapping file)\n \n                   when 'm' =>"}, {"sha": "4001ba86a89b79dd4f5c112cc9bf52d5fa67ee08", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -86,8 +86,9 @@ package body Switch.M is\n \n          elsif Last = Switches'Last then\n             declare\n-               New_Switches : Argument_List_Access := new Argument_List\n-                 (1 .. Switches'Length + Switches'Length);\n+               New_Switches : constant Argument_List_Access :=\n+                                new Argument_List\n+                                      (1 .. Switches'Length + Switches'Length);\n             begin\n                New_Switches (1 .. Switches'Length) := Switches.all;\n                Last := Switches'Length;\n@@ -96,9 +97,9 @@ package body Switch.M is\n          end if;\n \n          --  If this is the first switch, Last designates the first component\n+\n          if Last = 0 then\n             Last := Switches'First;\n-\n          else\n             Last := Last + 1;\n          end if;\n@@ -225,8 +226,7 @@ package body Switch.M is\n \n                   when 'e' =>\n \n-                     --  Only -gnateD and -gnatep= need to be store in an ALI\n-                     --  file.\n+                     --  Only -gnateD and -gnatep= need storing in ALI file\n \n                      Storing (First_Stored) := 'e';\n                      Ptr := Ptr + 1;\n@@ -239,19 +239,19 @@ package body Switch.M is\n                         return;\n                      end if;\n \n-                     if Switch_Chars (Ptr) = 'D' then\n-                        --  gnateD\n+                     --  Processing for -gnateD\n \n+                     if Switch_Chars (Ptr) = 'D' then\n                         Storing (First_Stored + 1 ..\n                                  First_Stored + Max - Ptr + 1) :=\n                           Switch_Chars (Ptr .. Max);\n                         Add_Switch_Component\n                           (Storing (Storing'First ..\n                                       First_Stored + Max - Ptr + 1));\n \n-                     else\n-                        --  gnatep=\n+                     --  Processing for -gnatep=\n \n+                     else\n                         Ptr := Ptr + 1;\n \n                         if Ptr = Max then\n@@ -269,7 +269,6 @@ package body Switch.M is\n \n                         declare\n                            To_Store : String (1 .. Max - Ptr + 9);\n-\n                         begin\n                            To_Store (1 .. 8) := \"-gnatep=\";\n                            To_Store (9 .. Max - Ptr + 9) :="}, {"sha": "3adf3044049466a60f481e67d025c3a08006203a", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b6fcd3ead62875b86a999a28c070bc88ef37d6e/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=6b6fcd3ead62875b86a999a28c070bc88ef37d6e", "patch": "@@ -159,6 +159,11 @@ begin\n    Write_Switch_Char (\"ef\");\n    Write_Line (\"Full source path in brief error messages\");\n \n+   --  Line for -gnateI switch\n+\n+   Write_Switch_Char (\"eInnn\");\n+   Write_Line (\"Index in multi-unit source, e.g. -gnateI2\");\n+\n    --  Line for -gnatem switch\n \n    Write_Switch_Char (\"em=?\");"}]}