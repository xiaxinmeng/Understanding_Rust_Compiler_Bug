{"sha": "61e46a7d5e8031930c341dc122ba614d6970886b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFlNDZhN2Q1ZTgwMzE5MzBjMzQxZGMxMjJiYTYxNGQ2OTcwODg2Yg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-04-14T11:18:40Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-04-14T11:18:40Z"}, "message": "utils.c (gnat_poplevel): Use block_chainon.\n\ngcc/ada/\n\t* gcc-interface/utils.c (gnat_poplevel): Use block_chainon.\n\ngcc/\n\t* function.h (block_chainon): Declare.\n\t* function.c (block_chainon): Define.\n\ngcc/cp/\n\t* decl.c (poplevel): Use block_chainon.\n\ngcc/fortran//\n\t* f95-lang.c (poplevel): Use BLOCK_CHAIN and block_chainon.\n\ngcc/java/\n\t* decl.c (poplevel): Use BLOCK_CHAIN and block_chainon.\n\nFrom-SVN: r172418", "tree": {"sha": "639555a2163347dbebd098a7599ee397b518a58a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/639555a2163347dbebd098a7599ee397b518a58a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61e46a7d5e8031930c341dc122ba614d6970886b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e46a7d5e8031930c341dc122ba614d6970886b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e46a7d5e8031930c341dc122ba614d6970886b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e46a7d5e8031930c341dc122ba614d6970886b/comments", "author": null, "committer": null, "parents": [{"sha": "023009d4d1a7471a5b965af6baf2d721e607fe92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023009d4d1a7471a5b965af6baf2d721e607fe92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023009d4d1a7471a5b965af6baf2d721e607fe92"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "0aa3fab80864d605d5f45de0645b81648b7d1ccb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -1,3 +1,8 @@\n+2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* function.h (block_chainon): Declare.\n+\t* function.c (block_chainon): Define.\n+\n 2011-04-14  Anatoly Sokolov  <aesok@post.ru>\n             Eric Weddington  <eric.weddington@atmel.com>\n             Georg-Johann Lay <avr@gjlay.de> "}, {"sha": "3e8595940d7b5d86ea4c597eb35ffffcc5d349d1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -1,3 +1,7 @@\n+2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* gcc-interface/utils.c (gnat_poplevel): Use block_chainon.\n+\n 2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc-interface/ada-tree.h (union lang_tree_node): Check for TS_COMMON"}, {"sha": "1031ee9b43e68ccc0da6b0a3524e2926fcb3f920", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -459,8 +459,8 @@ gnat_poplevel (void)\n   else if (BLOCK_VARS (block) == NULL_TREE)\n     {\n       BLOCK_SUBBLOCKS (level->chain->block)\n-\t= chainon (BLOCK_SUBBLOCKS (block),\n-\t\t   BLOCK_SUBBLOCKS (level->chain->block));\n+\t= block_chainon (BLOCK_SUBBLOCKS (block),\n+\t\t\t BLOCK_SUBBLOCKS (level->chain->block));\n       BLOCK_CHAIN (block) = free_block_chain;\n       free_block_chain = block;\n     }"}, {"sha": "271da0c854ccbb3e29f97b2eb07dfe865a259eac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -1,3 +1,7 @@\n+2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* decl.c (poplevel): Use block_chainon.\n+\n 2011-04-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48594"}, {"sha": "75538866a71de4bd44deb5482f0d2de6973b38d0", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -794,7 +794,7 @@ poplevel (int keep, int reverse, int functionbody)\n     }\n   else if (block)\n     current_binding_level->blocks\n-      = chainon (current_binding_level->blocks, block);\n+      = block_chainon (current_binding_level->blocks, block);\n \n   /* If we did not make a block for the level just exited,\n      any blocks made for inner levels\n@@ -803,7 +803,7 @@ poplevel (int keep, int reverse, int functionbody)\n      of something else.  */\n   else if (subblocks)\n     current_binding_level->blocks\n-      = chainon (current_binding_level->blocks, subblocks);\n+      = block_chainon (current_binding_level->blocks, subblocks);\n \n   /* Each and every BLOCK node created here in `poplevel' is important\n      (e.g. for proper debugging information) so if we created one"}, {"sha": "5e155e0d240beabe6ec4afcdd3a513a9f4666244", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -1,3 +1,7 @@\n+2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* f95-lang.c (poplevel): Use BLOCK_CHAIN and block_chainon.\n+\n 2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* f95-lang.c (union lang_tree_node): Check for TS_COMMON before"}, {"sha": "eb38484ee33388d24461561341f38a5b7561481e", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -444,7 +444,7 @@ poplevel (int keep, int reverse, int functionbody)\n \n   /* Record the BLOCK node just built as the subblock its enclosing scope.  */\n   for (subblock_node = subblock_chain; subblock_node;\n-       subblock_node = TREE_CHAIN (subblock_node))\n+       subblock_node = BLOCK_CHAIN (subblock_node))\n     BLOCK_SUPERCONTEXT (subblock_node) = block_node;\n \n   /* Clear out the meanings of the local variables of this level.  */\n@@ -475,7 +475,7 @@ poplevel (int keep, int reverse, int functionbody)\n   else if (block_node)\n     {\n       current_binding_level->blocks\n-\t= chainon (current_binding_level->blocks, block_node);\n+\t= block_chainon (current_binding_level->blocks, block_node);\n     }\n \n   /* If we did not make a block for the level just exited, any blocks made for\n@@ -484,7 +484,7 @@ poplevel (int keep, int reverse, int functionbody)\n      else.  */\n   else if (subblock_chain)\n     current_binding_level->blocks\n-      = chainon (current_binding_level->blocks, subblock_chain);\n+      = block_chainon (current_binding_level->blocks, subblock_chain);\n   if (block_node)\n     TREE_USED (block_node) = 1;\n "}, {"sha": "dd42fba6692178eac2f30f82015089c43eb94641", "filename": "gcc/function.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -4179,6 +4179,34 @@ blocks_nreverse (tree t)\n   return prev;\n }\n \n+/* Concatenate two chains of blocks (chained through BLOCK_CHAIN)\n+   by modifying the last node in chain 1 to point to chain 2.  */\n+\n+tree\n+block_chainon (tree op1, tree op2)\n+{\n+  tree t1;\n+\n+  if (!op1)\n+    return op2;\n+  if (!op2)\n+    return op1;\n+\n+  for (t1 = op1; BLOCK_CHAIN (t1); t1 = BLOCK_CHAIN (t1))\n+    continue;\n+  BLOCK_CHAIN (t1) = op2;\n+\n+#ifdef ENABLE_TREE_CHECKING\n+  {\n+    tree t2;\n+    for (t2 = op2; t2; t2 = BLOCK_CHAIN (t2))\n+      gcc_assert (t2 != t1);\n+  }\n+#endif\n+\n+  return op1;\n+}\n+\n /* Count the subblocks of the list starting with BLOCK.  If VECTOR is\n    non-NULL, list them all into VECTOR, in a depth-first preorder\n    traversal of the block tree.  Also clear TREE_ASM_WRITTEN in all"}, {"sha": "73af2948eb8960590fa5f883a0cd54fe77d20386", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -713,6 +713,7 @@ extern void number_blocks (tree);\n \n extern void clear_block_marks (tree);\n extern tree blocks_nreverse (tree);\n+extern tree block_chainon (tree, tree);\n \n /* Return size needed for stack frame based on slots so far allocated.\n    This size counts from zero.  It is not rounded to STACK_BOUNDARY;"}, {"sha": "a96b5079ea9f913463c102b4b465023cd48b4616", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -1,3 +1,7 @@\n+2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* decl.c (poplevel): Use BLOCK_CHAIN and block_chainon.\n+\n 2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* java-tree.h (union lang_tree_node): Check for TS_COMMON before"}, {"sha": "cb012485d00712b242b9fc2e87af150215c084a5", "filename": "gcc/java/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e46a7d5e8031930c341dc122ba614d6970886b/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=61e46a7d5e8031930c341dc122ba614d6970886b", "patch": "@@ -1481,7 +1481,7 @@ poplevel (int keep, int reverse, int functionbody)\n \n   /* In each subblock, record that this is its superior.  */\n \n-  for (link = subblocks; link; link = TREE_CHAIN (link))\n+  for (link = subblocks; link; link = BLOCK_CHAIN (link))\n     BLOCK_SUPERCONTEXT (link) = block;\n \n   /* Clear out the meanings of the local variables of this level.  */\n@@ -1545,7 +1545,7 @@ poplevel (int keep, int reverse, int functionbody)\n       if (block)\n \t{\n \t  current_binding_level->blocks\n-\t    = chainon (current_binding_level->blocks, block);\n+\t    = block_chainon (current_binding_level->blocks, block);\n \t}\n       /* If we did not make a block for the level just exited,\n \t any blocks made for inner levels\n@@ -1554,7 +1554,7 @@ poplevel (int keep, int reverse, int functionbody)\n \t of something else.  */\n       else if (subblocks)\n \tcurrent_binding_level->blocks\n-\t  = chainon (current_binding_level->blocks, subblocks);\n+\t  = block_chainon (current_binding_level->blocks, subblocks);\n \n       if (bind)\n \tjava_add_stmt (bind);"}]}