{"sha": "92d8351549902259fb219f089e37f4cde3aec9a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJkODM1MTU0OTkwMjI1OWZiMjE5ZjA4OWUzN2Y0Y2RlM2FlYzlhOA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-06-01T05:54:26Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-06-01T05:54:26Z"}, "message": "parse.y (maybe_yank_clinit): New function.\n\n2000-04-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n        * parse.y (maybe_yank_clinit): New function.\n        (maybe_generate_pre_expand_clinit): Always link <clinit> at the\n        end of the list of methods belonging to a class.\n        (java_complete_expand_method): Check whether <clinit> is really\n        necessary and expand it accordingly.\n\nFrom-SVN: r34329", "tree": {"sha": "6cf542ccff05777410e2360cd160b2c2e8fff490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cf542ccff05777410e2360cd160b2c2e8fff490"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92d8351549902259fb219f089e37f4cde3aec9a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d8351549902259fb219f089e37f4cde3aec9a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d8351549902259fb219f089e37f4cde3aec9a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d8351549902259fb219f089e37f4cde3aec9a8/comments", "author": null, "committer": null, "parents": [{"sha": "64cdd351dda48323a0a04beda01757e8b2bcbb7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cdd351dda48323a0a04beda01757e8b2bcbb7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64cdd351dda48323a0a04beda01757e8b2bcbb7f"}], "stats": {"total": 1028, "additions": 574, "deletions": 454}, "files": [{"sha": "f9b405ff0e64e4ea0813adb04bd51386756b97c3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d8351549902259fb219f089e37f4cde3aec9a8/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d8351549902259fb219f089e37f4cde3aec9a8/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=92d8351549902259fb219f089e37f4cde3aec9a8", "patch": "@@ -45,6 +45,14 @@ Thu Apr 27 17:25:33 2000  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t* parse.y (block_end:): If the collected block doesn't feature a\n  \tstatement, insert an empty statement.\n \n+2000-04-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+        * parse.y (maybe_yank_clinit): New function.\n+        (maybe_generate_pre_expand_clinit): Always link <clinit> at the\n+        end of the list of methods belonging to a class.\n+        (java_complete_expand_method): Check whether <clinit> is really\n+        necessary and expand it accordingly.\n+\n 2000-04-17  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (fold_constant_for_init): Let VAR_DECL and FIELD_DECL be"}, {"sha": "b01055a5e903e041d26e41ff23e953d8d0e33768", "filename": "gcc/java/parse.c", "status": "modified", "additions": 498, "deletions": 442, "changes": 940, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d8351549902259fb219f089e37f4cde3aec9a8/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d8351549902259fb219f089e37f4cde3aec9a8/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=92d8351549902259fb219f089e37f4cde3aec9a8", "patch": "@@ -211,6 +211,7 @@ static tree obtain_incomplete_type PARAMS ((tree));\n static tree java_complete_lhs PARAMS ((tree));\n static tree java_complete_tree PARAMS ((tree));\n static tree maybe_generate_pre_expand_clinit PARAMS ((tree));\n+static int maybe_yank_clinit PARAMS ((tree));\n static void java_complete_expand_method PARAMS ((tree));\n static int  unresolved_type_p PARAMS ((tree, tree *));\n static void create_jdep_list PARAMS ((struct parser_ctxt *));\n@@ -485,7 +486,7 @@ static tree package_list = NULL_TREE;\n } while (0)\n \n \n-#line 414 \"./parse.y\"\n+#line 415 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -495,7 +496,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 424 \"./parse.y\"\n+#line 425 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -796,57 +797,57 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   573,   579,   581,   582,   583,   584,   585,   589,   591,   594,\n-   596,   597,   600,   602,   605,   609,   613,   617,   623,   625,\n-   627,   629,   634,   636,   639,   643,   648,   653,   655,   656,\n-   657,   658,   659,   660,   661,   664,   669,   675,   677,   680,\n-   686,   688,   692,   694,   697,   724,   726,   730,   743,   745,\n-   749,   752,   754,   756,   766,   771,   786,   790,   790,   793,\n-   793,   795,   797,   802,   806,   808,   810,   812,   816,   818,\n-   820,   827,   833,   838,   842,   851,   861,   863,   866,   868,\n-   869,   870,   877,   879,   881,   882,   884,   889,   892,   902,\n-   905,   907,   911,   914,   921,   927,   935,   937,   939,   941,\n-   943,   947,   949,   953,   964,   965,   969,   972,   974,   976,\n-   978,   983,   985,   987,   989,   996,  1002,  1004,  1013,  1015,\n-  1019,  1024,  1029,  1033,  1038,  1043,  1048,  1055,  1065,  1067,\n-  1069,  1073,  1076,  1078,  1082,  1084,  1085,  1090,  1096,  1103,\n-  1119,  1126,  1129,  1132,  1136,  1142,  1146,  1155,  1157,  1159,\n-  1163,  1165,  1168,  1175,  1183,  1185,  1189,  1196,  1206,  1210,\n-  1210,  1213,  1213,  1216,  1216,  1219,  1219,  1221,  1225,  1231,\n-  1236,  1238,  1242,  1245,  1249,  1251,  1254,  1256,  1257,  1259,\n-  1263,  1267,  1273,  1278,  1281,  1283,  1287,  1293,  1297,  1302,\n-  1311,  1315,  1320,  1334,  1336,  1339,  1341,  1343,  1350,  1354,\n-  1357,  1361,  1363,  1364,  1365,  1366,  1367,  1371,  1373,  1374,\n-  1375,  1376,  1380,  1382,  1383,  1384,  1385,  1386,  1387,  1388,\n-  1389,  1390,  1391,  1394,  1399,  1410,  1413,  1417,  1424,  1434,\n-  1440,  1446,  1452,  1454,  1459,  1461,  1466,  1468,  1470,  1472,\n-  1474,  1478,  1480,  1481,  1482,  1483,  1484,  1485,  1488,  1494,\n-  1496,  1498,  1502,  1507,  1512,  1518,  1528,  1534,  1536,  1538,\n-  1545,  1548,  1550,  1552,  1556,  1558,  1561,  1565,  1567,  1570,\n-  1577,  1583,  1585,  1587,  1591,  1599,  1602,  1604,  1606,  1610,\n-  1615,  1624,  1629,  1632,  1639,  1641,  1643,  1647,  1650,  1659,\n-  1666,  1668,  1672,  1685,  1687,  1693,  1699,  1703,  1705,  1709,\n-  1712,  1714,  1718,  1721,  1723,  1725,  1729,  1732,  1734,  1736,\n-  1740,  1743,  1745,  1747,  1751,  1757,  1759,  1763,  1770,  1772,\n-  1774,  1776,  1780,  1792,  1795,  1797,  1802,  1806,  1808,  1815,\n-  1823,  1840,  1842,  1847,  1851,  1854,  1859,  1861,  1864,  1866,\n-  1868,  1870,  1871,  1872,  1873,  1874,  1878,  1883,  1885,  1887,\n-  1889,  1896,  1902,  1911,  1914,  1916,  1918,  1922,  1925,  1927,\n-  1931,  1937,  1938,  1944,  1945,  1947,  1949,  1951,  1953,  1955,\n-  1964,  1968,  1998,  2001,  2015,  2018,  2022,  2028,  2033,  2037,\n-  2040,  2042,  2044,  2048,  2057,  2065,  2067,  2071,  2074,  2078,\n-  2084,  2086,  2094,  2121,  2123,  2127,  2132,  2139,  2143,  2146,\n-  2148,  2159,  2170,  2175,  2184,  2186,  2190,  2193,  2195,  2200,\n-  2205,  2210,  2217,  2219,  2220,  2221,  2224,  2229,  2234,  2236,\n-  2237,  2239,  2241,  2242,  2244,  2248,  2251,  2255,  2258,  2262,\n-  2264,  2266,  2268,  2269,  2271,  2275,  2284,  2286,  2288,  2301,\n-  2303,  2309,  2311,  2313,  2317,  2319,  2324,  2329,  2334,  2336,\n-  2338,  2342,  2344,  2349,  2354,  2356,  2360,  2362,  2367,  2372,\n-  2377,  2379,  2381,  2385,  2387,  2392,  2397,  2402,  2407,  2409,\n-  2411,  2413,  2415,  2417,  2421,  2423,  2428,  2433,  2435,  2439,\n-  2441,  2446,  2450,  2452,  2457,  2461,  2463,  2468,  2472,  2474,\n-  2479,  2483,  2485,  2490,  2494,  2496,  2501,  2507,  2509,  2513,\n-  2515,  2518,  2521,  2529,  2531,  2532,  2535,  2537,  2540,  2544\n+   574,   580,   582,   583,   584,   585,   586,   590,   592,   595,\n+   597,   598,   601,   603,   606,   610,   614,   618,   624,   626,\n+   628,   630,   635,   637,   640,   644,   649,   654,   656,   657,\n+   658,   659,   660,   661,   662,   665,   670,   676,   678,   681,\n+   687,   689,   693,   695,   698,   725,   727,   731,   744,   746,\n+   750,   753,   755,   757,   767,   772,   787,   791,   791,   794,\n+   794,   796,   798,   803,   807,   809,   811,   813,   817,   819,\n+   821,   828,   834,   839,   843,   852,   862,   864,   867,   869,\n+   870,   871,   878,   880,   882,   883,   885,   890,   893,   903,\n+   906,   908,   912,   915,   922,   928,   936,   938,   940,   942,\n+   944,   948,   950,   954,   965,   966,   970,   973,   975,   977,\n+   979,   984,   986,   988,   990,   997,  1003,  1005,  1014,  1016,\n+  1020,  1025,  1030,  1034,  1039,  1044,  1049,  1056,  1066,  1068,\n+  1070,  1074,  1077,  1079,  1083,  1085,  1086,  1091,  1097,  1104,\n+  1120,  1127,  1130,  1133,  1137,  1143,  1147,  1156,  1158,  1160,\n+  1164,  1166,  1169,  1176,  1184,  1186,  1190,  1197,  1207,  1211,\n+  1211,  1214,  1214,  1217,  1217,  1220,  1220,  1222,  1226,  1232,\n+  1237,  1239,  1243,  1246,  1250,  1252,  1255,  1257,  1258,  1260,\n+  1264,  1268,  1274,  1279,  1282,  1284,  1288,  1294,  1298,  1303,\n+  1312,  1316,  1321,  1335,  1337,  1340,  1342,  1344,  1351,  1355,\n+  1358,  1362,  1364,  1365,  1366,  1367,  1368,  1372,  1374,  1375,\n+  1376,  1377,  1381,  1383,  1384,  1385,  1386,  1387,  1388,  1389,\n+  1390,  1391,  1392,  1395,  1400,  1411,  1414,  1418,  1425,  1435,\n+  1441,  1447,  1453,  1455,  1460,  1462,  1467,  1469,  1471,  1473,\n+  1475,  1479,  1481,  1482,  1483,  1484,  1485,  1486,  1489,  1495,\n+  1497,  1499,  1503,  1508,  1513,  1519,  1529,  1535,  1537,  1539,\n+  1546,  1549,  1551,  1553,  1557,  1559,  1562,  1566,  1568,  1571,\n+  1578,  1584,  1586,  1588,  1592,  1600,  1603,  1605,  1607,  1611,\n+  1616,  1625,  1630,  1633,  1640,  1642,  1644,  1648,  1651,  1660,\n+  1667,  1669,  1673,  1686,  1688,  1694,  1700,  1704,  1706,  1710,\n+  1713,  1715,  1719,  1722,  1724,  1726,  1730,  1733,  1735,  1737,\n+  1741,  1744,  1746,  1748,  1752,  1758,  1760,  1764,  1771,  1773,\n+  1775,  1777,  1781,  1793,  1796,  1798,  1803,  1807,  1809,  1816,\n+  1824,  1841,  1843,  1848,  1852,  1855,  1860,  1862,  1865,  1867,\n+  1869,  1871,  1872,  1873,  1874,  1875,  1879,  1884,  1886,  1888,\n+  1890,  1897,  1903,  1912,  1915,  1917,  1919,  1923,  1926,  1928,\n+  1932,  1938,  1939,  1945,  1946,  1948,  1950,  1952,  1954,  1956,\n+  1965,  1969,  1999,  2002,  2016,  2019,  2023,  2029,  2034,  2038,\n+  2041,  2043,  2045,  2049,  2058,  2066,  2068,  2072,  2075,  2079,\n+  2085,  2087,  2095,  2122,  2124,  2128,  2133,  2140,  2144,  2147,\n+  2149,  2160,  2171,  2176,  2185,  2187,  2191,  2194,  2196,  2201,\n+  2206,  2211,  2218,  2220,  2221,  2222,  2225,  2230,  2235,  2237,\n+  2238,  2240,  2242,  2243,  2245,  2249,  2252,  2256,  2259,  2263,\n+  2265,  2267,  2269,  2270,  2272,  2276,  2285,  2287,  2289,  2302,\n+  2304,  2310,  2312,  2314,  2318,  2320,  2325,  2330,  2335,  2337,\n+  2339,  2343,  2345,  2350,  2355,  2357,  2361,  2363,  2368,  2373,\n+  2378,  2380,  2382,  2386,  2388,  2393,  2398,  2403,  2408,  2410,\n+  2412,  2414,  2416,  2418,  2422,  2424,  2429,  2434,  2436,  2440,\n+  2442,  2447,  2451,  2453,  2458,  2462,  2464,  2469,  2473,  2475,\n+  2480,  2484,  2486,  2491,  2495,  2497,  2502,  2508,  2510,  2514,\n+  2516,  2519,  2522,  2530,  2532,  2533,  2536,  2538,  2541,  2545\n };\n #endif\n \n@@ -2929,69 +2930,69 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 575 \"./parse.y\"\n+#line 576 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 619 \"./parse.y\"\n+#line 620 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 624 \"./parse.y\"\n+#line 625 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 626 \"./parse.y\"\n+#line 627 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 628 \"./parse.y\"\n+#line 629 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 630 \"./parse.y\"\n+#line 631 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 645 \"./parse.y\"\n+#line 646 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 654 \"./parse.y\"\n+#line 655 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 666 \"./parse.y\"\n+#line 667 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 670 \"./parse.y\"\n+#line 671 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 682 \"./parse.y\"\n+#line 683 \"./parse.y\"\n { \n \t\t  ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node);\n \t\t  package_list = tree_cons (ctxp->package, NULL, package_list);\n \t\t;\n     break;}\n case 41:\n-#line 687 \"./parse.y\"\n+#line 688 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 689 \"./parse.y\"\n+#line 690 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 699 \"./parse.y\"\n+#line 700 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -3019,15 +3020,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 725 \"./parse.y\"\n+#line 726 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 727 \"./parse.y\"\n+#line 728 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 732 \"./parse.y\"\n+#line 733 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -3041,40 +3042,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 744 \"./parse.y\"\n+#line 745 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 746 \"./parse.y\"\n+#line 747 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 751 \"./parse.y\"\n+#line 752 \"./parse.y\"\n { end_class_declaration (0); ;\n     break;}\n case 52:\n-#line 753 \"./parse.y\"\n+#line 754 \"./parse.y\"\n { end_class_declaration (0); ;\n     break;}\n case 53:\n-#line 755 \"./parse.y\"\n+#line 756 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 757 \"./parse.y\"\n+#line 758 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 768 \"./parse.y\"\n+#line 769 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 772 \"./parse.y\"\n+#line 773 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -3088,83 +3089,83 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 788 \"./parse.y\"\n+#line 789 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 59:\n-#line 791 \"./parse.y\"\n+#line 792 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 61:\n-#line 794 \"./parse.y\"\n+#line 795 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 796 \"./parse.y\"\n+#line 797 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 798 \"./parse.y\"\n+#line 799 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 803 \"./parse.y\"\n+#line 804 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 807 \"./parse.y\"\n+#line 808 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 809 \"./parse.y\"\n+#line 810 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 811 \"./parse.y\"\n+#line 812 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 813 \"./parse.y\"\n+#line 814 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 817 \"./parse.y\"\n+#line 818 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 819 \"./parse.y\"\n+#line 820 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 821 \"./parse.y\"\n+#line 822 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 829 \"./parse.y\"\n+#line 830 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 834 \"./parse.y\"\n+#line 835 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 839 \"./parse.y\"\n+#line 840 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 844 \"./parse.y\"\n+#line 845 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -3174,7 +3175,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 852 \"./parse.y\"\n+#line 853 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -3184,30 +3185,30 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 871 \"./parse.y\"\n+#line 872 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = CPC_INSTANCE_INITIALIZER_STMT (ctxp);\n \t\t  SET_CPC_INSTANCE_INITIALIZER_STMT (ctxp, yyvsp[0].node);\n \t\t;\n     break;}\n case 84:\n-#line 880 \"./parse.y\"\n+#line 881 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 883 \"./parse.y\"\n+#line 884 \"./parse.y\"\n { end_class_declaration (1); ;\n     break;}\n case 87:\n-#line 885 \"./parse.y\"\n+#line 886 \"./parse.y\"\n { end_class_declaration (1); ;\n     break;}\n case 88:\n-#line 891 \"./parse.y\"\n+#line 892 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 893 \"./parse.y\"\n+#line 894 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3217,19 +3218,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 906 \"./parse.y\"\n+#line 907 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 908 \"./parse.y\"\n+#line 909 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 913 \"./parse.y\"\n+#line 914 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 915 \"./parse.y\"\n+#line 916 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3238,39 +3239,39 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 922 \"./parse.y\"\n+#line 923 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 928 \"./parse.y\"\n+#line 929 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 938 \"./parse.y\"\n+#line 939 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 940 \"./parse.y\"\n+#line 941 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 942 \"./parse.y\"\n+#line 943 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 944 \"./parse.y\"\n+#line 945 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 955 \"./parse.y\"\n+#line 956 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  if (current_function_decl\n@@ -3281,68 +3282,68 @@ case 104:\n \t\t;\n     break;}\n case 105:\n-#line 964 \"./parse.y\"\n+#line 965 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 966 \"./parse.y\"\n+#line 967 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 971 \"./parse.y\"\n+#line 972 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 973 \"./parse.y\"\n+#line 974 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 975 \"./parse.y\"\n+#line 976 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 977 \"./parse.y\"\n+#line 978 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 979 \"./parse.y\"\n+#line 980 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, method name required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 112:\n-#line 984 \"./parse.y\"\n+#line 985 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 986 \"./parse.y\"\n+#line 987 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 988 \"./parse.y\"\n+#line 989 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 990 \"./parse.y\"\n+#line 991 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 998 \"./parse.y\"\n+#line 999 \"./parse.y\"\n { \n \t\t  ctxp->formal_parameter_number = 0;\n \t\t  yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE);\n \t\t;\n     break;}\n case 117:\n-#line 1003 \"./parse.y\"\n+#line 1004 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 1005 \"./parse.y\"\n+#line 1006 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3353,59 +3354,59 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 1014 \"./parse.y\"\n+#line 1015 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 1016 \"./parse.y\"\n+#line 1017 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 1021 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 1025 \"./parse.y\"\n+#line 1026 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 1030 \"./parse.y\"\n+#line 1031 \"./parse.y\"\n { yyerror (\"Missing formal parameter term\"); RECOVER; ;\n     break;}\n case 124:\n-#line 1035 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 1039 \"./parse.y\"\n+#line 1040 \"./parse.y\"\n { \n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t  ARG_FINAL_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 126:\n-#line 1044 \"./parse.y\"\n+#line 1045 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 127:\n-#line 1049 \"./parse.y\"\n+#line 1050 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 128:\n-#line 1057 \"./parse.y\"\n+#line 1058 \"./parse.y\"\n {\n \t\t  check_modifiers (\"Illegal modifier `%s'. Only `final' was expected here\",\n \t\t\t\t   yyvsp[0].value, ACC_FINAL);\n@@ -3414,49 +3415,49 @@ case 128:\n \t\t;\n     break;}\n case 129:\n-#line 1066 \"./parse.y\"\n+#line 1067 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 130:\n-#line 1068 \"./parse.y\"\n+#line 1069 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 131:\n-#line 1070 \"./parse.y\"\n+#line 1071 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 132:\n-#line 1075 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 133:\n-#line 1077 \"./parse.y\"\n+#line 1078 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 134:\n-#line 1079 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 137:\n-#line 1086 \"./parse.y\"\n+#line 1087 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 138:\n-#line 1092 \"./parse.y\"\n+#line 1093 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = CPC_STATIC_INITIALIZER_STMT (ctxp);\n \t\t  SET_CPC_STATIC_INITIALIZER_STMT (ctxp, yyvsp[0].node);\n \t\t;\n     break;}\n case 139:\n-#line 1097 \"./parse.y\"\n+#line 1098 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = CPC_STATIC_INITIALIZER_STMT (ctxp);\n \t\t  SET_CPC_STATIC_INITIALIZER_STMT (ctxp, yyvsp[-1].node);\n \t\t;\n     break;}\n case 140:\n-#line 1105 \"./parse.y\"\n+#line 1106 \"./parse.y\"\n {\n \t\t  check_modifiers (\"Illegal modifier `%s' for static initializer\", yyvsp[0].value, ACC_STATIC);\n \t\t  /* Can't have a static initializer in an innerclass */\n@@ -3470,198 +3471,198 @@ case 140:\n \t\t;\n     break;}\n case 141:\n-#line 1121 \"./parse.y\"\n+#line 1122 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 142:\n-#line 1126 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 1131 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 1133 \"./parse.y\"\n+#line 1134 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 145:\n-#line 1138 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { \n \t\t  ctxp->formal_parameter_number = 0;  \n \t\t  yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE);\n \t\t;\n     break;}\n case 146:\n-#line 1143 \"./parse.y\"\n+#line 1144 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 147:\n-#line 1151 \"./parse.y\"\n+#line 1152 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 148:\n-#line 1156 \"./parse.y\"\n+#line 1157 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1158 \"./parse.y\"\n+#line 1159 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 1160 \"./parse.y\"\n+#line 1161 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 153:\n-#line 1170 \"./parse.y\"\n+#line 1171 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1176 \"./parse.y\"\n+#line 1177 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 155:\n-#line 1184 \"./parse.y\"\n+#line 1185 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1186 \"./parse.y\"\n+#line 1187 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 157:\n-#line 1191 \"./parse.y\"\n+#line 1192 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1197 \"./parse.y\"\n+#line 1198 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 159:\n-#line 1208 \"./parse.y\"\n+#line 1209 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 161:\n-#line 1211 \"./parse.y\"\n+#line 1212 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 163:\n-#line 1214 \"./parse.y\"\n+#line 1215 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 165:\n-#line 1217 \"./parse.y\"\n+#line 1218 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 167:\n-#line 1220 \"./parse.y\"\n+#line 1221 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1222 \"./parse.y\"\n+#line 1223 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 169:\n-#line 1227 \"./parse.y\"\n+#line 1228 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 170:\n-#line 1232 \"./parse.y\"\n+#line 1233 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 171:\n-#line 1237 \"./parse.y\"\n+#line 1238 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 172:\n-#line 1239 \"./parse.y\"\n+#line 1240 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 173:\n-#line 1244 \"./parse.y\"\n+#line 1245 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 174:\n-#line 1246 \"./parse.y\"\n+#line 1247 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 179:\n-#line 1258 \"./parse.y\"\n+#line 1259 \"./parse.y\"\n { end_class_declaration (1); ;\n     break;}\n case 180:\n-#line 1260 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n { end_class_declaration (1); ;\n     break;}\n case 182:\n-#line 1269 \"./parse.y\"\n+#line 1270 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 183:\n-#line 1274 \"./parse.y\"\n+#line 1275 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 184:\n-#line 1280 \"./parse.y\"\n+#line 1281 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 185:\n-#line 1282 \"./parse.y\"\n+#line 1283 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 186:\n-#line 1284 \"./parse.y\"\n+#line 1285 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 187:\n-#line 1289 \"./parse.y\"\n+#line 1290 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 188:\n-#line 1294 \"./parse.y\"\n+#line 1295 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 189:\n-#line 1298 \"./parse.y\"\n+#line 1299 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 190:\n-#line 1304 \"./parse.y\"\n+#line 1305 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3671,15 +3672,15 @@ case 190:\n \t\t;\n     break;}\n case 191:\n-#line 1312 \"./parse.y\"\n+#line 1313 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 192:\n-#line 1317 \"./parse.y\"\n+#line 1318 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 193:\n-#line 1322 \"./parse.y\"\n+#line 1323 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3692,38 +3693,38 @@ case 193:\n \t\t;\n     break;}\n case 197:\n-#line 1342 \"./parse.y\"\n+#line 1343 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1344 \"./parse.y\"\n+#line 1345 \"./parse.y\"\n { \n \t\t  LOCAL_CLASS_P (TREE_TYPE (GET_CPC ())) = 1;\n \t\t  end_class_declaration (1);\n \t\t;\n     break;}\n case 200:\n-#line 1356 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 201:\n-#line 1358 \"./parse.y\"\n+#line 1359 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 207:\n-#line 1368 \"./parse.y\"\n+#line 1369 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 212:\n-#line 1377 \"./parse.y\"\n+#line 1378 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 224:\n-#line 1396 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 225:\n-#line 1401 \"./parse.y\"\n+#line 1402 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3733,19 +3734,19 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1412 \"./parse.y\"\n+#line 1413 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 227:\n-#line 1414 \"./parse.y\"\n+#line 1415 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 228:\n-#line 1419 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 229:\n-#line 1426 \"./parse.y\"\n+#line 1427 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3756,106 +3757,106 @@ case 229:\n \t\t;\n     break;}\n case 230:\n-#line 1435 \"./parse.y\"\n+#line 1436 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1441 \"./parse.y\"\n+#line 1442 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1447 \"./parse.y\"\n+#line 1448 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 233:\n-#line 1453 \"./parse.y\"\n+#line 1454 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1455 \"./parse.y\"\n+#line 1456 \"./parse.y\"\n {\n \t\t  parse_ctor_invocation_error ();\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 235:\n-#line 1460 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1462 \"./parse.y\"\n+#line 1463 \"./parse.y\"\n {\n \t\t  parse_ctor_invocation_error ();\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 237:\n-#line 1467 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1469 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1471 \"./parse.y\"\n+#line 1472 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1473 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 241:\n-#line 1475 \"./parse.y\"\n+#line 1476 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1490 \"./parse.y\"\n+#line 1491 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 250:\n-#line 1495 \"./parse.y\"\n+#line 1496 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 251:\n-#line 1497 \"./parse.y\"\n+#line 1498 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 252:\n-#line 1499 \"./parse.y\"\n+#line 1500 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 253:\n-#line 1504 \"./parse.y\"\n+#line 1505 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1509 \"./parse.y\"\n+#line 1510 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 255:\n-#line 1514 \"./parse.y\"\n+#line 1515 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 256:\n-#line 1518 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3866,112 +3867,112 @@ case 256:\n \t\t;\n     break;}\n case 257:\n-#line 1530 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 258:\n-#line 1535 \"./parse.y\"\n+#line 1536 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 259:\n-#line 1537 \"./parse.y\"\n+#line 1538 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 260:\n-#line 1539 \"./parse.y\"\n+#line 1540 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 261:\n-#line 1547 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1549 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1551 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 264:\n-#line 1553 \"./parse.y\"\n+#line 1554 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 270:\n-#line 1572 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1578 \"./parse.y\"\n+#line 1579 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 272:\n-#line 1584 \"./parse.y\"\n+#line 1585 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 273:\n-#line 1586 \"./parse.y\"\n+#line 1587 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1588 \"./parse.y\"\n+#line 1589 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1593 \"./parse.y\"\n+#line 1594 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 276:\n-#line 1601 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1603 \"./parse.y\"\n+#line 1604 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1605 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1607 \"./parse.y\"\n+#line 1608 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 280:\n-#line 1612 \"./parse.y\"\n+#line 1613 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 281:\n-#line 1617 \"./parse.y\"\n+#line 1618 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 282:\n-#line 1626 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 283:\n-#line 1631 \"./parse.y\"\n+#line 1632 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 284:\n-#line 1633 \"./parse.y\"\n+#line 1634 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3980,23 +3981,23 @@ case 284:\n \t\t;\n     break;}\n case 285:\n-#line 1640 \"./parse.y\"\n+#line 1641 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1642 \"./parse.y\"\n+#line 1643 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1644 \"./parse.y\"\n+#line 1645 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 288:\n-#line 1649 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 289:\n-#line 1651 \"./parse.y\"\n+#line 1652 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -4005,23 +4006,23 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1661 \"./parse.y\"\n+#line 1662 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 291:\n-#line 1667 \"./parse.y\"\n+#line 1668 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 292:\n-#line 1669 \"./parse.y\"\n+#line 1670 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 293:\n-#line 1674 \"./parse.y\"\n+#line 1675 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -4034,138 +4035,138 @@ case 293:\n \t\t;\n     break;}\n case 294:\n-#line 1686 \"./parse.y\"\n+#line 1687 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 295:\n-#line 1688 \"./parse.y\"\n+#line 1689 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 296:\n-#line 1694 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 297:\n-#line 1700 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 298:\n-#line 1704 \"./parse.y\"\n+#line 1705 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 299:\n-#line 1706 \"./parse.y\"\n+#line 1707 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1711 \"./parse.y\"\n+#line 1712 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1713 \"./parse.y\"\n+#line 1714 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 302:\n-#line 1715 \"./parse.y\"\n+#line 1716 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1720 \"./parse.y\"\n+#line 1721 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1722 \"./parse.y\"\n+#line 1723 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1724 \"./parse.y\"\n+#line 1725 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1726 \"./parse.y\"\n+#line 1727 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1731 \"./parse.y\"\n+#line 1732 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1733 \"./parse.y\"\n+#line 1734 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1735 \"./parse.y\"\n+#line 1736 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1737 \"./parse.y\"\n+#line 1738 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1742 \"./parse.y\"\n+#line 1743 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 312:\n-#line 1744 \"./parse.y\"\n+#line 1745 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 313:\n-#line 1746 \"./parse.y\"\n+#line 1747 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1748 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1753 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 316:\n-#line 1758 \"./parse.y\"\n+#line 1759 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 317:\n-#line 1760 \"./parse.y\"\n+#line 1761 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1765 \"./parse.y\"\n+#line 1766 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 319:\n-#line 1771 \"./parse.y\"\n+#line 1772 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1773 \"./parse.y\"\n+#line 1774 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 321:\n-#line 1775 \"./parse.y\"\n+#line 1776 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1777 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 323:\n-#line 1782 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n {\n \t\t  check_modifiers (\n              \"Illegal modifier `%s'. Only `synchronized' was expected here\",\n@@ -4176,41 +4177,41 @@ case 323:\n \t\t;\n     break;}\n case 324:\n-#line 1794 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1796 \"./parse.y\"\n+#line 1797 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 326:\n-#line 1798 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 327:\n-#line 1803 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 329:\n-#line 1809 \"./parse.y\"\n+#line 1810 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 330:\n-#line 1817 \"./parse.y\"\n+#line 1818 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 331:\n-#line 1825 \"./parse.y\"\n+#line 1826 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4228,140 +4229,140 @@ case 331:\n \t\t;\n     break;}\n case 332:\n-#line 1841 \"./parse.y\"\n+#line 1842 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER; yyval.node = NULL_TREE;;\n     break;}\n case 333:\n-#line 1843 \"./parse.y\"\n+#line 1844 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term or ')' expected\"); \n \t\t  RECOVER; yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 334:\n-#line 1848 \"./parse.y\"\n+#line 1849 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER; yyval.node = NULL_TREE;;\n     break;}\n case 335:\n-#line 1853 \"./parse.y\"\n+#line 1854 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 336:\n-#line 1855 \"./parse.y\"\n+#line 1856 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 340:\n-#line 1867 \"./parse.y\"\n+#line 1868 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 341:\n-#line 1869 \"./parse.y\"\n+#line 1870 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 347:\n-#line 1879 \"./parse.y\"\n+#line 1880 \"./parse.y\"\n { \n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  yyval.node = make_qualified_primary (yyvsp[-2].node, wfl, EXPR_WFL_LINECOL (yyvsp[-2].node));\n \t\t;\n     break;}\n case 348:\n-#line 1884 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 349:\n-#line 1886 \"./parse.y\"\n+#line 1887 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1888 \"./parse.y\"\n+#line 1889 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1890 \"./parse.y\"\n+#line 1891 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1898 \"./parse.y\"\n+#line 1899 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 353:\n-#line 1903 \"./parse.y\"\n+#line 1904 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 354:\n-#line 1913 \"./parse.y\"\n+#line 1914 \"./parse.y\"\n { yyval.node = build_incomplete_class_ref (yyvsp[-1].operator.location, yyvsp[-2].node); ;\n     break;}\n case 355:\n-#line 1915 \"./parse.y\"\n+#line 1916 \"./parse.y\"\n { yyval.node = build_incomplete_class_ref (yyvsp[-1].operator.location, yyvsp[-2].node); ;\n     break;}\n case 356:\n-#line 1917 \"./parse.y\"\n+#line 1918 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 357:\n-#line 1919 \"./parse.y\"\n+#line 1920 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 358:\n-#line 1924 \"./parse.y\"\n+#line 1925 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 359:\n-#line 1926 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 361:\n-#line 1932 \"./parse.y\"\n+#line 1933 \"./parse.y\"\n { \n \t\t  tree ctor = build_new_invocation (yyvsp[-2].node, NULL_TREE);\n \t\t  yyval.node = make_qualified_primary (yyvsp[-3].node, ctor, \n \t\t\t\t\t       EXPR_WFL_LINECOL (yyvsp[-3].node));\n \t\t;\n     break;}\n case 363:\n-#line 1939 \"./parse.y\"\n+#line 1940 \"./parse.y\"\n { \n \t\t  tree ctor = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node);\n \t\t  yyval.node = make_qualified_primary (yyvsp[-4].node, ctor, \n \t\t\t\t\t       EXPR_WFL_LINECOL (yyvsp[-4].node));\n \t\t;\n     break;}\n case 365:\n-#line 1946 \"./parse.y\"\n+#line 1947 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 366:\n-#line 1948 \"./parse.y\"\n+#line 1949 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1950 \"./parse.y\"\n+#line 1951 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 368:\n-#line 1952 \"./parse.y\"\n+#line 1953 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 369:\n-#line 1954 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 370:\n-#line 1956 \"./parse.y\"\n+#line 1957 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 371:\n-#line 1966 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n { create_anonymous_class (yyvsp[-4].operator.location, yyvsp[-3].node); ;\n     break;}\n case 372:\n-#line 1968 \"./parse.y\"\n+#line 1969 \"./parse.y\"\n { \n \t\t  tree id = build_wfl_node (DECL_NAME (GET_CPC ()));\n \t\t  EXPR_WFL_LINECOL (id) = EXPR_WFL_LINECOL (yyvsp[-5].node);\n@@ -4394,11 +4395,11 @@ case 372:\n \t\t;\n     break;}\n case 373:\n-#line 1999 \"./parse.y\"\n+#line 2000 \"./parse.y\"\n { create_anonymous_class (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 374:\n-#line 2001 \"./parse.y\"\n+#line 2002 \"./parse.y\"\n { \n \t\t  tree id = build_wfl_node (DECL_NAME (GET_CPC ()));\n \t\t  EXPR_WFL_LINECOL (id) = EXPR_WFL_LINECOL (yyvsp[-4].node);\n@@ -4413,49 +4414,49 @@ case 374:\n \t\t;\n     break;}\n case 375:\n-#line 2017 \"./parse.y\"\n+#line 2018 \"./parse.y\"\n { yyval.node = yyvsp[-2].node; ;\n     break;}\n case 376:\n-#line 2019 \"./parse.y\"\n+#line 2020 \"./parse.y\"\n { yyval.node = yyvsp[-2].node; ;\n     break;}\n case 377:\n-#line 2024 \"./parse.y\"\n+#line 2025 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 378:\n-#line 2029 \"./parse.y\"\n+#line 2030 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 379:\n-#line 2034 \"./parse.y\"\n+#line 2035 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 380:\n-#line 2039 \"./parse.y\"\n+#line 2040 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 381:\n-#line 2041 \"./parse.y\"\n+#line 2042 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 382:\n-#line 2043 \"./parse.y\"\n+#line 2044 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 383:\n-#line 2045 \"./parse.y\"\n+#line 2046 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 384:\n-#line 2049 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n {\n \t\t  char *sig;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4466,7 +4467,7 @@ case 384:\n \t\t;\n     break;}\n case 385:\n-#line 2058 \"./parse.y\"\n+#line 2059 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-2].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4476,42 +4477,42 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 2066 \"./parse.y\"\n+#line 2067 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 387:\n-#line 2068 \"./parse.y\"\n+#line 2069 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 388:\n-#line 2073 \"./parse.y\"\n+#line 2074 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 389:\n-#line 2075 \"./parse.y\"\n+#line 2076 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 390:\n-#line 2080 \"./parse.y\"\n+#line 2081 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 391:\n-#line 2085 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 392:\n-#line 2087 \"./parse.y\"\n+#line 2088 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 393:\n-#line 2096 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4539,19 +4540,19 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 2122 \"./parse.y\"\n+#line 2123 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 395:\n-#line 2124 \"./parse.y\"\n+#line 2125 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 396:\n-#line 2129 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 397:\n-#line 2133 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4560,19 +4561,19 @@ case 397:\n \t\t;\n     break;}\n case 398:\n-#line 2140 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 399:\n-#line 2145 \"./parse.y\"\n+#line 2146 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 400:\n-#line 2147 \"./parse.y\"\n+#line 2148 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 2149 \"./parse.y\"\n+#line 2150 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4585,7 +4586,7 @@ case 401:\n \t\t;\n     break;}\n case 402:\n-#line 2160 \"./parse.y\"\n+#line 2161 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4598,121 +4599,121 @@ case 402:\n \t\t;\n     break;}\n case 403:\n-#line 2171 \"./parse.y\"\n+#line 2172 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 404:\n-#line 2176 \"./parse.y\"\n+#line 2177 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 405:\n-#line 2185 \"./parse.y\"\n+#line 2186 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 406:\n-#line 2187 \"./parse.y\"\n+#line 2188 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 407:\n-#line 2192 \"./parse.y\"\n+#line 2193 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 408:\n-#line 2194 \"./parse.y\"\n+#line 2195 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 409:\n-#line 2196 \"./parse.y\"\n+#line 2197 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 410:\n-#line 2201 \"./parse.y\"\n+#line 2202 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 411:\n-#line 2206 \"./parse.y\"\n+#line 2207 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 412:\n-#line 2211 \"./parse.y\"\n+#line 2212 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 417:\n-#line 2226 \"./parse.y\"\n+#line 2227 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 418:\n-#line 2231 \"./parse.y\"\n+#line 2232 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 421:\n-#line 2238 \"./parse.y\"\n+#line 2239 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 2240 \"./parse.y\"\n+#line 2241 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2243 \"./parse.y\"\n+#line 2244 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 2245 \"./parse.y\"\n+#line 2246 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 2250 \"./parse.y\"\n+#line 2251 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 427:\n-#line 2252 \"./parse.y\"\n+#line 2253 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2257 \"./parse.y\"\n+#line 2258 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 429:\n-#line 2259 \"./parse.y\"\n+#line 2260 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 431:\n-#line 2265 \"./parse.y\"\n+#line 2266 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 432:\n-#line 2267 \"./parse.y\"\n+#line 2268 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 434:\n-#line 2270 \"./parse.y\"\n+#line 2271 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 435:\n-#line 2272 \"./parse.y\"\n+#line 2273 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 436:\n-#line 2277 \"./parse.y\"\n+#line 2278 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4722,15 +4723,15 @@ case 436:\n \t\t;\n     break;}\n case 437:\n-#line 2285 \"./parse.y\"\n+#line 2286 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 438:\n-#line 2287 \"./parse.y\"\n+#line 2288 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 439:\n-#line 2289 \"./parse.y\"\n+#line 2290 \"./parse.y\"\n { \n \t\t  const char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4745,275 +4746,275 @@ case 439:\n \t\t;\n     break;}\n case 440:\n-#line 2302 \"./parse.y\"\n+#line 2303 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 441:\n-#line 2304 \"./parse.y\"\n+#line 2305 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 442:\n-#line 2310 \"./parse.y\"\n+#line 2311 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2312 \"./parse.y\"\n+#line 2313 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 444:\n-#line 2314 \"./parse.y\"\n+#line 2315 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2320 \"./parse.y\"\n+#line 2321 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 447:\n-#line 2325 \"./parse.y\"\n+#line 2326 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2330 \"./parse.y\"\n+#line 2331 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2335 \"./parse.y\"\n+#line 2336 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 450:\n-#line 2337 \"./parse.y\"\n+#line 2338 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2339 \"./parse.y\"\n+#line 2340 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2345 \"./parse.y\"\n+#line 2346 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 454:\n-#line 2350 \"./parse.y\"\n+#line 2351 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 2355 \"./parse.y\"\n+#line 2356 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 456:\n-#line 2357 \"./parse.y\"\n+#line 2358 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 458:\n-#line 2363 \"./parse.y\"\n+#line 2364 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2368 \"./parse.y\"\n+#line 2369 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2373 \"./parse.y\"\n+#line 2374 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2378 \"./parse.y\"\n+#line 2379 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2380 \"./parse.y\"\n+#line 2381 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2382 \"./parse.y\"\n+#line 2383 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2388 \"./parse.y\"\n+#line 2389 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 2393 \"./parse.y\"\n+#line 2394 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2398 \"./parse.y\"\n+#line 2399 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2403 \"./parse.y\"\n+#line 2404 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 469:\n-#line 2408 \"./parse.y\"\n+#line 2409 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 470:\n-#line 2410 \"./parse.y\"\n+#line 2411 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2412 \"./parse.y\"\n+#line 2413 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 472:\n-#line 2414 \"./parse.y\"\n+#line 2415 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2416 \"./parse.y\"\n+#line 2417 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2418 \"./parse.y\"\n+#line 2419 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 476:\n-#line 2424 \"./parse.y\"\n+#line 2425 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2429 \"./parse.y\"\n+#line 2430 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2434 \"./parse.y\"\n+#line 2435 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2436 \"./parse.y\"\n+#line 2437 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 481:\n-#line 2442 \"./parse.y\"\n+#line 2443 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 482:\n-#line 2447 \"./parse.y\"\n+#line 2448 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 484:\n-#line 2453 \"./parse.y\"\n+#line 2454 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 485:\n-#line 2458 \"./parse.y\"\n+#line 2459 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 487:\n-#line 2464 \"./parse.y\"\n+#line 2465 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 488:\n-#line 2469 \"./parse.y\"\n+#line 2470 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 490:\n-#line 2475 \"./parse.y\"\n+#line 2476 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 491:\n-#line 2480 \"./parse.y\"\n+#line 2481 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 493:\n-#line 2486 \"./parse.y\"\n+#line 2487 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 494:\n-#line 2491 \"./parse.y\"\n+#line 2492 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 496:\n-#line 2497 \"./parse.y\"\n+#line 2498 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 497:\n-#line 2502 \"./parse.y\"\n+#line 2503 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 498:\n-#line 2508 \"./parse.y\"\n+#line 2509 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 499:\n-#line 2510 \"./parse.y\"\n+#line 2511 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 502:\n-#line 2520 \"./parse.y\"\n+#line 2521 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 503:\n-#line 2522 \"./parse.y\"\n+#line 2523 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -5242,7 +5243,7 @@ case 503:\n     }\n   return 1;\n }\n-#line 2548 \"./parse.y\"\n+#line 2549 \"./parse.y\"\n \n \f\n \n@@ -10085,30 +10086,81 @@ maybe_generate_pre_expand_clinit (class_type)\n \n   end_artificial_method_body (mdecl);\n \n-  /* Now we want to place <clinit> as the last method for interface so\n-     that it doesn't interfere with the dispatch table based\n-     lookup. */\n-  if (CLASS_INTERFACE (TYPE_NAME (class_type))\n-      && TREE_CHAIN (TYPE_METHODS (class_type)))\n+  /* Now we want to place <clinit> as the last method (because we need\n+     it at least for interface so that it doesn't interfere with the\n+     dispatch table based lookup. */\n+  if (TREE_CHAIN (TYPE_METHODS (class_type)))\n     {\n-      tree current = \n-\tTYPE_METHODS (class_type) = TREE_CHAIN (TYPE_METHODS (class_type));\n+      current = TREE_CHAIN (TYPE_METHODS (class_type));\n+      TYPE_METHODS (class_type) = current;\n \n       while (TREE_CHAIN (current))\n \tcurrent = TREE_CHAIN (current);\n+\n       TREE_CHAIN (current) = mdecl;\n       TREE_CHAIN (mdecl) = NULL_TREE;\n     }\n \n   return mdecl;\n }\n \n+/* See whether we could get rid of <clinit>. Criteria are: all static\n+   final fields have constant initial values and the body of <clinit>\n+   is empty. Return 1 if <clinit> was discarded, 0 otherwise. */\n+\n+static int\n+maybe_yank_clinit (mdecl)\n+     tree mdecl;\n+{\n+  tree type, current;\n+  tree fbody, bbody;\n+  \n+  if (!DECL_CLINIT_P (mdecl))\n+    return 0;\n+  \n+  /* If the body isn't empty, then we keep <clinit> */\n+  fbody = DECL_FUNCTION_BODY (mdecl);\n+  if ((bbody = BLOCK_EXPR_BODY (fbody)))\n+    bbody = BLOCK_EXPR_BODY (bbody);\n+  if (bbody && bbody != empty_stmt_node)\n+    return 0;\n+  \n+  type = DECL_CONTEXT (mdecl);\n+  current = TYPE_FIELDS (type);\n+\n+  for (current = (current ? TREE_CHAIN (current) : current); \n+       current; current = TREE_CHAIN (current))\n+    if (!(FIELD_STATIC (current) && FIELD_FINAL (current)\n+\t  && DECL_INITIAL (current) && TREE_CONSTANT (DECL_INITIAL (current))))\n+      break;\n+\n+  if (current)\n+    return 0;\n+\n+  /* Get rid of <clinit> in the class' list of methods */\n+  if (TYPE_METHODS (type) == mdecl)\n+    TYPE_METHODS (type) = TREE_CHAIN (mdecl);\n+  else\n+    for (current = TYPE_METHODS (type); current; \n+\t current = TREE_CHAIN (current))\n+      if (TREE_CHAIN (current) == mdecl)\n+\t{\n+\t  TREE_CHAIN (current) = TREE_CHAIN (mdecl);\n+\t  break;\n+\t}\n+\n+  return 1;\n+}\n+\n+\n /* Complete and expand a method.  */\n \n static void\n java_complete_expand_method (mdecl)\n      tree mdecl;\n {\n+  int yank_clinit = 0;\n+\n   current_function_decl = mdecl;\n   /* Fix constructors before expanding them */\n   if (DECL_CONSTRUCTOR_P (mdecl))\n@@ -10157,15 +10209,19 @@ java_complete_expand_method (mdecl)\n \t  && !flag_emit_xref)\n \tmissing_return_error (current_function_decl);\n \n-      complete_start_java_method (mdecl); \n-\n+      /* Check wether we could just get rid of clinit, now the picture\n+         is complete. */\n+      if (!(yank_clinit = maybe_yank_clinit (mdecl)))\n+\tcomplete_start_java_method (mdecl); \n+      \n       /* Don't go any further if we've found error(s) during the\n-         expansion */\n-      if (!java_error_count)\n+\t expansion */\n+      if (!java_error_count && !yank_clinit)\n \tsource_end_java_method ();\n       else\n \t{\n-\t  pushdecl_force_head (DECL_ARGUMENTS (mdecl));\n+\t  if (java_error_count)\n+\t    pushdecl_force_head (DECL_ARGUMENTS (mdecl));\n \t  poplevel (1, 0, 1);\n \t}\n "}, {"sha": "e14ec75ae9499521fb72ae3a0595230f3e930d49", "filename": "gcc/java/parse.y", "status": "modified", "additions": 68, "deletions": 12, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d8351549902259fb219f089e37f4cde3aec9a8/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d8351549902259fb219f089e37f4cde3aec9a8/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=92d8351549902259fb219f089e37f4cde3aec9a8", "patch": "@@ -136,6 +136,7 @@ static tree obtain_incomplete_type PARAMS ((tree));\n static tree java_complete_lhs PARAMS ((tree));\n static tree java_complete_tree PARAMS ((tree));\n static tree maybe_generate_pre_expand_clinit PARAMS ((tree));\n+static int maybe_yank_clinit PARAMS ((tree));\n static void java_complete_expand_method PARAMS ((tree));\n static int  unresolved_type_p PARAMS ((tree, tree *));\n static void create_jdep_list PARAMS ((struct parser_ctxt *));\n@@ -7387,30 +7388,81 @@ maybe_generate_pre_expand_clinit (class_type)\n \n   end_artificial_method_body (mdecl);\n \n-  /* Now we want to place <clinit> as the last method for interface so\n-     that it doesn't interfere with the dispatch table based\n-     lookup. */\n-  if (CLASS_INTERFACE (TYPE_NAME (class_type))\n-      && TREE_CHAIN (TYPE_METHODS (class_type)))\n+  /* Now we want to place <clinit> as the last method (because we need\n+     it at least for interface so that it doesn't interfere with the\n+     dispatch table based lookup. */\n+  if (TREE_CHAIN (TYPE_METHODS (class_type)))\n     {\n-      tree current = \n-\tTYPE_METHODS (class_type) = TREE_CHAIN (TYPE_METHODS (class_type));\n+      current = TREE_CHAIN (TYPE_METHODS (class_type));\n+      TYPE_METHODS (class_type) = current;\n \n       while (TREE_CHAIN (current))\n \tcurrent = TREE_CHAIN (current);\n+\n       TREE_CHAIN (current) = mdecl;\n       TREE_CHAIN (mdecl) = NULL_TREE;\n     }\n \n   return mdecl;\n }\n \n+/* See whether we could get rid of <clinit>. Criteria are: all static\n+   final fields have constant initial values and the body of <clinit>\n+   is empty. Return 1 if <clinit> was discarded, 0 otherwise. */\n+\n+static int\n+maybe_yank_clinit (mdecl)\n+     tree mdecl;\n+{\n+  tree type, current;\n+  tree fbody, bbody;\n+  \n+  if (!DECL_CLINIT_P (mdecl))\n+    return 0;\n+  \n+  /* If the body isn't empty, then we keep <clinit> */\n+  fbody = DECL_FUNCTION_BODY (mdecl);\n+  if ((bbody = BLOCK_EXPR_BODY (fbody)))\n+    bbody = BLOCK_EXPR_BODY (bbody);\n+  if (bbody && bbody != empty_stmt_node)\n+    return 0;\n+  \n+  type = DECL_CONTEXT (mdecl);\n+  current = TYPE_FIELDS (type);\n+\n+  for (current = (current ? TREE_CHAIN (current) : current); \n+       current; current = TREE_CHAIN (current))\n+    if (!(FIELD_STATIC (current) && FIELD_FINAL (current)\n+\t  && DECL_INITIAL (current) && TREE_CONSTANT (DECL_INITIAL (current))))\n+      break;\n+\n+  if (current)\n+    return 0;\n+\n+  /* Get rid of <clinit> in the class' list of methods */\n+  if (TYPE_METHODS (type) == mdecl)\n+    TYPE_METHODS (type) = TREE_CHAIN (mdecl);\n+  else\n+    for (current = TYPE_METHODS (type); current; \n+\t current = TREE_CHAIN (current))\n+      if (TREE_CHAIN (current) == mdecl)\n+\t{\n+\t  TREE_CHAIN (current) = TREE_CHAIN (mdecl);\n+\t  break;\n+\t}\n+\n+  return 1;\n+}\n+\n+\n /* Complete and expand a method.  */\n \n static void\n java_complete_expand_method (mdecl)\n      tree mdecl;\n {\n+  int yank_clinit = 0;\n+\n   current_function_decl = mdecl;\n   /* Fix constructors before expanding them */\n   if (DECL_CONSTRUCTOR_P (mdecl))\n@@ -7459,15 +7511,19 @@ java_complete_expand_method (mdecl)\n \t  && !flag_emit_xref)\n \tmissing_return_error (current_function_decl);\n \n-      complete_start_java_method (mdecl); \n-\n+      /* Check wether we could just get rid of clinit, now the picture\n+         is complete. */\n+      if (!(yank_clinit = maybe_yank_clinit (mdecl)))\n+\tcomplete_start_java_method (mdecl); \n+      \n       /* Don't go any further if we've found error(s) during the\n-         expansion */\n-      if (!java_error_count)\n+\t expansion */\n+      if (!java_error_count && !yank_clinit)\n \tsource_end_java_method ();\n       else\n \t{\n-\t  pushdecl_force_head (DECL_ARGUMENTS (mdecl));\n+\t  if (java_error_count)\n+\t    pushdecl_force_head (DECL_ARGUMENTS (mdecl));\n \t  poplevel (1, 0, 1);\n \t}\n "}]}