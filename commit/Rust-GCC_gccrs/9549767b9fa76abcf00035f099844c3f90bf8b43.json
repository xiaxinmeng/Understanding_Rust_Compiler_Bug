{"sha": "9549767b9fa76abcf00035f099844c3f90bf8b43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU0OTc2N2I5ZmE3NmFiY2YwMDAzNWYwOTk4NDRjM2Y5MGJmOGI0Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:02:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:02:17Z"}, "message": "[multiple changes]\n\n2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* adaint.h (__gnat_lwp_self): Declare on Linux.\n\n\t* adaint.c (__gnat_os_filename): Add ATTRIBUTE_UNUSED on 'filename'.\n\n2009-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch5.adb, usage.adb, back_end.adb, opt.ads: Implement\n\tfront-end part of -fpreserve-control-flow switch.\n\nFrom-SVN: r146376", "tree": {"sha": "01021f09e5aa739a36dc98c854d7b37867cfcecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01021f09e5aa739a36dc98c854d7b37867cfcecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9549767b9fa76abcf00035f099844c3f90bf8b43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9549767b9fa76abcf00035f099844c3f90bf8b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9549767b9fa76abcf00035f099844c3f90bf8b43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9549767b9fa76abcf00035f099844c3f90bf8b43/comments", "author": null, "committer": null, "parents": [{"sha": "d7f9440126bb66732dced069c6cc61ea136c1f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f9440126bb66732dced069c6cc61ea136c1f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f9440126bb66732dced069c6cc61ea136c1f57"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "aec5ecc2ebd561577c70e5e6176039f7d44ca444", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -1,3 +1,14 @@\n+2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* adaint.h (__gnat_lwp_self): Declare on Linux.\n+\n+\t* adaint.c (__gnat_os_filename): Add ATTRIBUTE_UNUSED on 'filename'.\n+\n+2009-04-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch5.adb, usage.adb, back_end.adb, opt.ads: Implement\n+\tfront-end part of -fpreserve-control-flow switch.\n+\n 2009-04-20  Bob Duff  <duff@adacore.com>\n \n \t* rtsfind.adb: Minor comment fix"}, {"sha": "0047e447655a83ac2b1fdcb3fe775fa3dc51711a", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -666,7 +666,8 @@ __gnat_get_debuggable_suffix_ptr (int *len, const char **value)\n /* Returns the OS filename and corresponding encoding.  */\n \n void\n-__gnat_os_filename (char *filename, char *w_filename ATTRIBUTE_UNUSED,\n+__gnat_os_filename (char *filename ATTRIBUTE_UNUSED,\n+\t\t    char *w_filename ATTRIBUTE_UNUSED,\n \t\t    char *os_name, int *o_length,\n \t\t    char *encoding ATTRIBUTE_UNUSED, int *e_length)\n {\n@@ -3512,7 +3513,8 @@ __gnat_pthread_setaffinity_np (pthread_t th ATTRIBUTE_UNUSED,\n    thread. We need to do a system call in order to retrieve this\n    information. */\n #include <sys/syscall.h>\n-void *__gnat_lwp_self (void) {\n+void *__gnat_lwp_self (void)\n+{\n    return (void *) syscall (__NR_gettid);\n }\n #endif"}, {"sha": "46c1f2fac61f2c783891c6abcc43afac9beaa1eb", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -176,6 +176,9 @@ extern int    __gnat_dup2\t\t\t   (int, int);\n \n extern void   __gnat_os_filename                   (char *, char *, char *,\n \t\t\t\t\t\t    int *, char *, int *);\n+#if defined (linux)\n+extern void   *__gnat_lwp_self\t\t\t   (void);\n+#endif\n \n #if defined (__MINGW32__) && !defined (RTX)\n extern void   __gnat_plist_init                    (void);"}, {"sha": "baf3ffda37f33bf895c20269f5d401c500225fda", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -219,6 +219,13 @@ package body Back_End is\n \n             if Switch_Chars (First .. Last) = \"fno-inline\" then\n                Opt.Suppress_All_Inlining := True;\n+\n+            --  Another special check, the switch -fpreserve-control-flow\n+            --  which is also a back end switch sets the front end flag\n+            --  that inhibits improper control flow transformations.\n+\n+            elsif Switch_Chars (First .. Last) = \"fpreserve-control-flow\" then\n+               Opt.Suppress_Control_Flow_Optimizations := True;\n             end if;\n          end if;\n       end Scan_Back_End_Switches;"}, {"sha": "6afcc6fb1b47895cf86826a4835c97ea8bce0896", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -3272,9 +3272,12 @@ package body Exp_Ch5 is\n \n       --     return not (expression);\n \n-      --  Only do these optimizations if we are at least at -O1 level\n+      --  Only do these optimizations if we are at least at -O1 level and\n+      --  do not do them if control flow optimizations are suppressed.\n \n-      if Optimization_Level > 0 then\n+      if Optimization_Level > 0\n+        and then not Opt.Suppress_Control_Flow_Optimizations\n+      then\n          if Nkind (N) = N_If_Statement\n            and then No (Elsif_Parts (N))\n            and then Present (Else_Statements (N))"}, {"sha": "9b8cf0b43095fe8b041495eb2b8c6d1383eb5050", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -1061,6 +1061,11 @@ package Opt is\n    --  Set by -fno-inline. Suppresses all inlining, both front end and back end\n    --  regardless of any other switches that are set.\n \n+   Suppress_Control_Flow_Optimizations : Boolean := False;\n+   --  GNAT\n+   --  Set by -fpreserve-control-flow. Suppresses control flow optimizations\n+   --  that interfere with coverage analysis based on the object code.\n+\n    System_Extend_Pragma_Arg : Node_Id := Empty;\n    --  GNAT\n    --  Set non-empty if and only if a correct Extend_System pragma was present"}, {"sha": "76d9a25b4a45777a117c44b7cce28505062f647f", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9549767b9fa76abcf00035f099844c3f90bf8b43/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=9549767b9fa76abcf00035f099844c3f90bf8b43", "patch": "@@ -99,6 +99,9 @@ begin\n \n       Write_Switch_Char (\"fno-inline   \", \"\");\n       Write_Line (\"Inhibit all inlining (makes executable smaller)\");\n+\n+      Write_Switch_Char (\"fpreserve-control-flow \", \"\");\n+      Write_Line (\"Preserve control flow for coverage analysis\");\n    end if;\n \n    --  Common switches available to both GCC and JGNAT"}]}