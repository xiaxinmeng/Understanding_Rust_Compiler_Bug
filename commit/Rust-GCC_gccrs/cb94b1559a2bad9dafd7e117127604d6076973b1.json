{"sha": "cb94b1559a2bad9dafd7e117127604d6076973b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5NGIxNTU5YTJiYWQ5ZGFmZDdlMTE3MTI3NjA0ZDYwNzY5NzNiMQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2002-08-15T18:05:41Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2002-08-15T18:05:41Z"}, "message": "unwind-cxx.h (__cxa_exception): Change catchTemp type from void* to _Unwind_Ptr.\n\n\t* libstdc++-v3/libsupc++/unwind-cxx.h (__cxa_exception):\n\tChange catchTemp type from void* to _Unwind_Ptr.\n\t* libstdc++-v3/libsupc++/eh_personality.cc (PERSONALITY_FUNCTION):\n\tDo not cast landing_pad or base_of_encoded_value to (void *).\n\t* libstdc++-v3/libsupc++/eh_throw.cc (__gxx_exception_cleanup):\n\tAccept _URC_NO_REASON as a valid reason code.\n\nFrom-SVN: r56352", "tree": {"sha": "94ecfd1c739846dfacfdfe9ea29aa6c841614901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94ecfd1c739846dfacfdfe9ea29aa6c841614901"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb94b1559a2bad9dafd7e117127604d6076973b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb94b1559a2bad9dafd7e117127604d6076973b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb94b1559a2bad9dafd7e117127604d6076973b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb94b1559a2bad9dafd7e117127604d6076973b1/comments", "author": null, "committer": null, "parents": [{"sha": "9ef30f834e41445014188b3ac2040b6b779d3d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef30f834e41445014188b3ac2040b6b779d3d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef30f834e41445014188b3ac2040b6b779d3d20"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "b208fd05a6bd8779f80934ca78dfbb78a9a3741c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cb94b1559a2bad9dafd7e117127604d6076973b1", "patch": "@@ -1,3 +1,12 @@\n+2002-08-15  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* libsupc++/unwind-cxx.h (__cxa_exception): Change catchTemp\n+\ttype from void* to _Unwind_Ptr.\n+\t* libsupc++/eh_personality.cc (PERSONALITY_FUNCTION):\n+\tDo not cast landing_pad or base_of_encoded_value to (void *).\n+\t* libsupc++/eh_throw.cc (__gxx_exception_cleanup):\n+\tAccept _URC_NO_REASON as a valid reason code.\n+\n 2002-08-14  Jonathan Wakely  <jw@kayari.org>\n \n \t* docs/html/22_locale/messages.html:  Use HTML entities for"}, {"sha": "acc9c2eb63e1260a1284520d3d4c856e06eea11a", "filename": "libstdc++-v3/libsupc++/eh_personality.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_personality.cc?ref=cb94b1559a2bad9dafd7e117127604d6076973b1", "patch": "@@ -394,7 +394,7 @@ PERSONALITY_FUNCTION (int version,\n \n           // ??? Completely unknown what this field is supposed to be for.\n           // ??? Need to cache TType encoding base for call_unexpected.\n-          xh->catchTemp = (void *) (_Unwind_Ptr) landing_pad;\n+          xh->catchTemp = landing_pad;\n \t}\n       return _URC_HANDLER_FOUND;\n     }\n@@ -411,7 +411,7 @@ PERSONALITY_FUNCTION (int version,\n   if (handler_switch_value < 0)\n     {\n       parse_lsda_header (context, xh->languageSpecificData, &info);\n-      xh->catchTemp = (void *) base_of_encoded_value (info.ttype_encoding,\n+      xh->catchTemp = base_of_encoded_value (info.ttype_encoding,\n \t\t\t\t\t\t      context);\n     }\n "}, {"sha": "f20368a13f6cc811a2bd0c435516120807d642c1", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=cb94b1559a2bad9dafd7e117127604d6076973b1", "patch": "@@ -42,7 +42,10 @@ __gxx_exception_cleanup (_Unwind_Reason_Code code, _Unwind_Exception *exc)\n \n   // If we haven't been caught by a foreign handler, then this is\n   // some sort of unwind error.  In that case just die immediately.\n-  if (code != _URC_FOREIGN_EXCEPTION_CAUGHT)\n+  // _Unwind_DeleteException in the HP-UX IA64 libunwind library\n+  //  returns _URC_NO_REASON and not _URC_FOREIGN_EXCEPTION_CAUGHT\n+  // like the GCC _Unwind_DeleteException function does.\n+  if (code != _URC_FOREIGN_EXCEPTION_CAUGHT && code != _URC_NO_REASON)\n     __terminate (header->terminateHandler);\n \n   if (header->exceptionDestructor)"}, {"sha": "b0b0b366b7870c5eedcda329487cae3241fefe58", "filename": "libstdc++-v3/libsupc++/unwind-cxx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb94b1559a2bad9dafd7e117127604d6076973b1/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h?ref=cb94b1559a2bad9dafd7e117127604d6076973b1", "patch": "@@ -70,7 +70,7 @@ struct __cxa_exception\n   int handlerSwitchValue;\n   const unsigned char *actionRecord;\n   const unsigned char *languageSpecificData;\n-  void *catchTemp;\n+  _Unwind_Ptr catchTemp;\n   void *adjustedPtr;\n \n   // The generic exception header.  Must be last."}]}