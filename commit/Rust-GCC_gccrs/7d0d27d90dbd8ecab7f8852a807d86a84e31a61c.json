{"sha": "7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "node_id": "C_kwDOANBUbNoAKDdkMGQyN2Q5MGRiZDhlY2FiN2Y4ODUyYTgwN2Q4NmE4NGUzMWE2MWM", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2022-09-17T17:35:48Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:26Z"}, "message": "ada: Refactor: replace uses of `not Present(X)` with `No (X)`\n\n`No (X)` is essentially `not Present (X)`, there's no reason for not\nusing this shorter form.\n\ngcc/ada/\n\n\t* checks.adb, exp_atag.adb, exp_attr.adb, exp_ch4.adb, exp_ch6.adb,\n\texp_ch7.adb, exp_dbug.adb, exp_disp.adb, exp_unst.adb, exp_util.adb,\n\tfreeze.adb, layout.adb, pprint.adb, rtsfind.adb, sem_aggr.adb,\n\tsem_attr.adb, sem_case.adb, sem_ch12.adb, sem_ch13.adb, sem_ch3.adb,\n\tsem_ch5.adb, sem_ch6.adb, sem_ch8.adb, sem_dim.adb, sem_prag.adb,\n\tsem_util.adb, sem_warn.adb:\n\tReplace uses of `not Present (X)` with `No (X)`.", "tree": {"sha": "800a5e631c92c62e70cf51c453a453ebfc5b89c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/800a5e631c92c62e70cf51c453a453ebfc5b89c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "587af00955c02040f1c552f7b0381f4ec4f1c3f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/587af00955c02040f1c552f7b0381f4ec4f1c3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/587af00955c02040f1c552f7b0381f4ec4f1c3f9"}], "stats": {"total": 151, "additions": 74, "deletions": 77}, "files": [{"sha": "47412948b784b7447cdc370c6cc6bca09b6887ae", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -593,7 +593,7 @@ package body Checks is\n       pragma Assert (not No_Dynamic_Accessibility_Checks_Enabled (N));\n \n       if Ada_Version >= Ada_2012\n-         and then not Present (Param_Ent)\n+         and then No (Param_Ent)\n          and then Is_Entity_Name (N)\n          and then Ekind (Entity (N)) in E_Constant | E_Variable\n          and then Present (Effective_Extra_Accessibility (Entity (N)))\n@@ -778,7 +778,7 @@ package body Checks is\n          --  Note: Expr is empty if the address-clause is applied to in-mode\n          --  actuals (allowed by 13.1(22)).\n \n-         if not Present (Expr)\n+         if No (Expr)\n            or else\n              (Is_Entity_Name (Expression (AC))\n                and then Ekind (Entity (Expression (AC))) = E_Constant"}, {"sha": "074ab4e90936264a6ab080a45872e33e63f9ad99", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -312,7 +312,7 @@ package body Exp_Atag is\n \n          if not Is_Predefined_Dispatching_Operation (Prim)\n            and then not Is_Predefined_Dispatching_Operation (E)\n-           and then not Present (Interface_Alias (Prim))\n+           and then No (Interface_Alias (Prim))\n            and then not Is_Abstract_Subprogram (E)\n            and then not Is_Eliminated (E)\n            and then Prim_Pos <= CPP_Nb_Prims"}, {"sha": "3c3f725cf27d48f2bbd93a910819f99e56991c55", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -6575,7 +6575,7 @@ package body Exp_Attr is\n                --  If Storage_Size wasn't found (can only occur in the simple\n                --  storage pool case), then simply use zero for the result.\n \n-               if not Present (Alloc_Op) then\n+               if No (Alloc_Op) then\n                   Rewrite (N, Make_Integer_Literal (Loc, 0));\n \n                --  Otherwise, rewrite the allocator as a call to pool type's"}, {"sha": "7a3a414ca0d484e688941aa7e9bc620540c0ff0b", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -6733,7 +6733,7 @@ package body Exp_Ch4 is\n         --  Skip this for predicated types, where such expressions are a\n         --  reasonable way of testing if something meets the predicate.\n \n-        and then not Present (Predicate_Function (Ltyp))\n+        and then No (Predicate_Function (Ltyp))\n       then\n          Substitute_Valid_Check;\n          return;\n@@ -7148,7 +7148,7 @@ package body Exp_Ch4 is\n                   if Is_Entity_Name (Lop) then\n                      Expr_Entity := Param_Entity (Lop);\n \n-                     if not Present (Expr_Entity) then\n+                     if No (Expr_Entity) then\n                         Expr_Entity := Entity (Lop);\n                      end if;\n                   end if;"}, {"sha": "cf64e82bc999a37c1f0fd4c2fc7a9a58a87cd2b4", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -376,7 +376,7 @@ package body Exp_Ch6 is\n \n       --  If no return object is provided, then pass null\n \n-      if not Present (Return_Object) then\n+      if No (Return_Object) then\n          Obj_Address := Make_Null (Loc);\n          Set_Parent (Obj_Address, Function_Call);\n \n@@ -3223,7 +3223,7 @@ package body Exp_Ch6 is\n             loop\n                Aspect_Bearer := Nearest_Ancestor (Aspect_Bearer);\n \n-               if not Present (Aspect_Bearer) then\n+               if No (Aspect_Bearer) then\n                   return False;\n                end if;\n "}, {"sha": "b20d7dbed5ffecaafaecfef54bbad58802311fc5", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -4452,7 +4452,7 @@ package body Exp_Ch7 is\n    begin\n       if Is_Derived_Type (Typ)\n         and then Comes_From_Source (E)\n-        and then not Present (Overridden_Operation (E))\n+        and then No (Overridden_Operation (E))\n       then\n          --  We know that the explicit operation on the type does not override\n          --  the inherited operation of the parent, and that the derivation"}, {"sha": "3ab68885bfe053f68d2acca1302c691941db3843", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -415,7 +415,7 @@ package body Exp_Dbug is\n                | N_Identifier\n             =>\n                if No (Entity (Ren))\n-                 or else not Present (Renamed_Entity_Or_Object (Entity (Ren)))\n+                 or else No (Renamed_Entity_Or_Object (Entity (Ren)))\n                then\n                   exit;\n                end if;"}, {"sha": "43ae2e0f34dac756cbd6fcefc8cf45744d5291bb", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -4052,8 +4052,7 @@ package body Exp_Disp is\n                     and then not Is_Abstract_Subprogram (Prim)\n                     and then not Is_Eliminated (Prim)\n                     and then not Generate_SCIL\n-                    and then not\n-                      Present (Prim_Table (UI_To_Int (DT_Position (Prim))))\n+                    and then No (Prim_Table (UI_To_Int (DT_Position (Prim))))\n                   then\n                      if not Build_Thunks then\n                         E := Ultimate_Alias (Prim);\n@@ -5269,7 +5268,7 @@ package body Exp_Disp is\n             E       : Entity_Id;\n \n          begin\n-            if not Present (Def)\n+            if No (Def)\n               or else Entity (Name (Def)) /= First_Subtype (Typ)\n             then\n                New_Node :=\n@@ -5872,8 +5871,7 @@ package body Exp_Disp is\n                     and then not Is_Abstract_Subprogram (Prim)\n                     and then not Is_Eliminated (Prim)\n                     and then not Generate_SCIL\n-                    and then not Present (Prim_Table\n-                                           (UI_To_Int (DT_Position (Prim))))\n+                    and then No (Prim_Table (UI_To_Int (DT_Position (Prim))))\n                   then\n                      E := Ultimate_Alias (Prim);\n                      pragma Assert (not Is_Abstract_Subprogram (E));\n@@ -6038,7 +6036,7 @@ package body Exp_Disp is\n                     --  those are only required to build secondary dispatch\n                     --  tables.\n \n-                    and then not Present (Interface_Alias (Prim))\n+                    and then No (Interface_Alias (Prim))\n \n                     --  Skip abstract and eliminated primitives\n \n@@ -7496,7 +7494,7 @@ package body Exp_Disp is\n \n       --  Primitive associated with a tagged type\n \n-      if not Present (Interface_Alias (Prim)) then\n+      if No (Interface_Alias (Prim)) then\n          Tag_Typ := Scope (DTC_Entity (Prim));\n          Pos     := DT_Position (Prim);\n          Tag     := First_Tag_Component (Tag_Typ);\n@@ -8023,7 +8021,7 @@ package body Exp_Disp is\n             --  same dispatch table slot, but if it renames an operation in a\n             --  nested package it's a new primitive and will have its own slot.\n \n-            elsif not Present (Interface_Alias (Prim))\n+            elsif No (Interface_Alias (Prim))\n               and then Present (Alias (Prim))\n               and then Chars (Prim) = Chars (Alias (Prim))\n               and then Nkind (Unit_Declaration_Node (Prim)) /=\n@@ -8191,7 +8189,7 @@ package body Exp_Disp is\n            and then Present (Alias (Prim))\n            and then not Is_Interface\n                           (Find_Dispatching_Type (Ultimate_Alias (Prim)))\n-           and then not Present (Interface_Alias (Prim))\n+           and then No (Interface_Alias (Prim))\n            and then Is_Derived_Type (Typ)\n            and then In_Private_Part (Current_Scope)\n            and then"}, {"sha": "fd4c543ddfcbc4fd269e56d1f38a0a14281fdab5", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -2225,7 +2225,7 @@ package body Exp_Unst is\n \n             if No (UPJ.Ref)\n               or else not Is_Entity_Name (UPJ.Ref)\n-              or else not Present (Entity (UPJ.Ref))\n+              or else No (Entity (UPJ.Ref))\n               or else not Opt.Generate_C_Code\n             then\n                goto Continue;"}, {"sha": "6c87debe456cfd6ec85b3218059ebaa90eabde7a", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -1700,7 +1700,7 @@ package body Exp_Util is\n          --  type attributes.\n \n       begin\n-         if not Present (Priv_Typ) and then not Present (Full_Typ) then\n+         if No (Priv_Typ) and then No (Full_Typ) then\n             return;\n          end if;\n \n@@ -1787,7 +1787,7 @@ package body Exp_Util is\n                --  full type doesn't have its own DIC, but is inherited from\n                --  a type with DIC), get the full DIC procedure.\n \n-               if not Present (Par_Proc) then\n+               if No (Par_Proc) then\n                   Par_Proc := DIC_Procedure (Par_Typ);\n                end if;\n \n@@ -2745,7 +2745,7 @@ package body Exp_Util is\n          --  type attributes.\n \n       begin\n-         if not Present (Priv_Typ) and then not Present (Full_Typ) then\n+         if No (Priv_Typ) and then No (Full_Typ) then\n             return;\n          end if;\n \n@@ -3072,7 +3072,7 @@ package body Exp_Util is\n          Prag_Typ_Arg  : Node_Id;\n \n       begin\n-         if not Present (T) then\n+         if No (T) then\n             return;\n          end if;\n "}, {"sha": "888e2ecb7af083d26069765a285398c1533743ee", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -3793,7 +3793,7 @@ package body Freeze is\n                      --  Set component size if not already set by a component\n                      --  size clause.\n \n-                     if not Present (Comp_Size_C) then\n+                     if No (Comp_Size_C) then\n                         Set_Component_Size (Arr, Csiz);\n                      end if;\n \n@@ -3805,7 +3805,7 @@ package body Freeze is\n                      --  explicitly, then generate a warning.\n \n                      if Has_Pragma_Pack (Arr)\n-                       and then not Present (Comp_Size_C)\n+                       and then No (Comp_Size_C)\n                        and then (Csiz = 7 or else Csiz = 15 or else Csiz = 31)\n                        and then Known_Esize (Base_Type (Ctyp))\n                        and then Esize (Base_Type (Ctyp)) = Csiz + 1\n@@ -7059,7 +7059,7 @@ package body Freeze is\n             --  end of a declarative part.\n \n             if Is_Library_Level_Tagged_Type (E)\n-              and then not Present (Full_View (E))\n+              and then No (Full_View (E))\n             then\n                Set_Is_Frozen (E, False);\n                goto Leave;\n@@ -7467,7 +7467,7 @@ package body Freeze is\n                      --  If no formal is passed in, then issue an error for a\n                      --  missing formal.\n \n-                     elsif not Present (Pool_Op_Formal) then\n+                     elsif No (Pool_Op_Formal) then\n                         Error_Msg_NE\n                           (\"simple storage pool op missing formal \" &\n                            Formal_Name & \" of type&\", Pool_Op, Expected_Type);\n@@ -7599,7 +7599,7 @@ package body Freeze is\n                            --  and no excess formals are present, then this\n                            --  operation has been validated, so record it.\n \n-                           if not Present (Formal) and then Is_OK then\n+                           if No (Formal) and then Is_OK then\n                               Found_Op := Op;\n                            end if;\n                         end if;\n@@ -7611,7 +7611,7 @@ package body Freeze is\n                      --  so issue an error if none was found.\n \n                      if Op_Name = Name_Allocate\n-                       and then not Present (Found_Op)\n+                       and then No (Found_Op)\n                      then\n                         Error_Msg_N (\"missing % operation for simple \" &\n                                      \"storage pool type\", Pool_Type);"}, {"sha": "4f764bf0e7568934bacdd691cd61a294e763a73a", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -500,7 +500,7 @@ package body Layout is\n          if Is_Array_Type (E)\n            and then Present (First_Index (E))  --  Skip types in error\n            and then Number_Dimensions (E) = 1\n-           and then not Present (Packed_Array_Impl_Type (E))\n+           and then No (Packed_Array_Impl_Type (E))\n            and then Has_Pragma_Pack (E)\n            and then Is_Constrained (E)\n            and then Compile_Time_Known_Bounds (E)"}, {"sha": "43939a23197ae741308c28200397367df679e56b", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -114,7 +114,7 @@ package body Pprint is\n             Num       : Natural := 1) return String\n          is\n          begin\n-            if not Present (List) then\n+            if No (List) then\n                if First or else not Add_Paren then\n                   return \"\";\n                else\n@@ -229,7 +229,7 @@ package body Pprint is\n                --  is not prepared to deal with a zero-length result.\n \n                elsif Null_Record_Present (Expr)\n-                 or else not Present (First (Component_Associations (Expr)))\n+                 or else No (First (Component_Associations (Expr)))\n                then\n                   return (\"(null record)\");\n "}, {"sha": "2c2293812ee37d5da1a25cbfe41f3fb1872b823f", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -1668,7 +1668,7 @@ package body Rtsfind is\n \n       --  Load unit if unit not previously loaded\n \n-      if not Present (U.Entity) then\n+      if No (U.Entity) then\n          Load_RTU (U_Id, Id => E);\n       end if;\n \n@@ -1687,7 +1687,7 @@ package body Rtsfind is\n             E1 := First_Entity (Pkg_Ent);\n             while Present (E1) loop\n                if Ename = Chars (E1) then\n-                  pragma Assert (not Present (Found_E));\n+                  pragma Assert (No (Found_E));\n                   Found_E := E1;\n                end if;\n "}, {"sha": "87a8c1a3c408d8206fa93a66935dc24300882a9a", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -2355,7 +2355,7 @@ package body Sem_Aggr is\n                --  duplicate the expression tree to analyze the copy and\n                --  perform the required check.\n \n-               elsif not Present (Etype (Expression (Assoc))) then\n+               elsif No (Etype (Expression (Assoc))) then\n                   declare\n                      Save_Analysis : constant Boolean := Full_Analysis;\n                      Expr          : constant Node_Id :=\n@@ -5747,7 +5747,7 @@ package body Sem_Aggr is\n             --  Ignore hidden components associated with the position of the\n             --  interface tags: these are initialized dynamically.\n \n-            if not Present (Related_Type (Component)) then\n+            if No (Related_Type (Component)) then\n                Error_Msg_NE\n                  (\"no value supplied for component &!\", N, Component);\n             end if;"}, {"sha": "299ea04959cc0ce86eb657c48dcbfedee9cb3f74", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -6425,7 +6425,7 @@ package body Sem_Attr is\n             --  type to the pool object's type.\n \n             else\n-               if not Present (Get_Rep_Pragma (Etype (Entity (N)),\n+               if No (Get_Rep_Pragma (Etype (Entity (N)),\n                                                Name_Simple_Storage_Pool_Type))\n                then\n                   Error_Attr_P"}, {"sha": "bb732b76eb996544a014ef72cbc72633358fbcc0", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -1611,7 +1611,7 @@ package body Sem_Case is\n                   begin\n                      while Present (Comp) loop\n                         if Chars (First (Choices (Comp))) = Orig_Name then\n-                           pragma Assert (not Present (Matching_Comp));\n+                           pragma Assert (No (Matching_Comp));\n                            Matching_Comp := Comp;\n                         end if;\n "}, {"sha": "6781e5ee5b64c3db319198215370736626cb02e7", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -14086,7 +14086,7 @@ package body Sem_Ch12 is\n             --  a full view, then we'll retrieve that.\n \n             if Ekind (A_Gen_T) = E_Incomplete_Type\n-              and then not Present (Full_View (Act_T))\n+              and then No (Full_View (Act_T))\n             then\n                null;\n "}, {"sha": "6f4d33b6d55322d50241e9bab0d83c3961ee1fad", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -1271,7 +1271,7 @@ package body Sem_Ch13 is\n                                   | Aspect_Full_Access_Only\n                                   | Aspect_Import\n                        and then (A_Id /= Aspect_Preelaborable_Initialization\n-                                  or else not Present (Expression (ASN)))\n+                                  or else No (Expression (ASN)))\n                      then\n                         Make_Pragma_From_Boolean_Aspect (ASN);\n                      end if;\n@@ -1327,7 +1327,7 @@ package body Sem_Ch13 is\n                      if not Is_Entity_Name (Expression (ASN))\n                        or else not Is_Object (Entity (Expression (ASN)))\n                        or else\n-                         not Present (Find_Aspect (Etype (Expression (ASN)),\n+                         No (Find_Aspect (Etype (Expression (ASN)),\n                                                    Aspect_Storage_Model_Type))\n                      then\n                         Error_Msg_N\n@@ -1915,7 +1915,7 @@ package body Sem_Ch13 is\n                --  aspects are replaced with pragmas at the freeze point in\n                --  Make_Pragma_From_Boolean_Aspect.\n \n-               if not Present (Expr)\n+               if No (Expr)\n                  or else Is_True (Static_Boolean (Expr))\n                then\n                   if A_Id = Aspect_Import then\n@@ -7547,7 +7547,7 @@ package body Sem_Ch13 is\n             else\n                Analyze_And_Resolve (Expr);\n \n-               if not Present (Get_Rep_Pragma\n+               if No (Get_Rep_Pragma\n                                  (Etype (Expr), Name_Simple_Storage_Pool_Type))\n                then\n                   Error_Msg_N\n@@ -16511,7 +16511,7 @@ package body Sem_Ch13 is\n \n       begin\n          for FP of Profiles loop\n-            if not Present (Formal) then\n+            if No (Formal) then\n                Is_Error := True;\n                Report_Argument_Error (\"missing formal of }\", Subt => FP.Subt);\n                exit;\n@@ -16582,7 +16582,7 @@ package body Sem_Ch13 is\n       --  If Addr_Type is not present as the first association, then we default\n       --  it to System.Address.\n \n-      elsif not Present (Addr_Type) then\n+      elsif No (Addr_Type) then\n          Addr_Type := RTE (RE_Address);\n       end if;\n \n@@ -17251,7 +17251,7 @@ package body Sem_Ch13 is\n          Param_Type := Standard_String;\n       end if;\n \n-      if not Overloaded and then not Present (Entity (Func_Name)) then\n+      if not Overloaded and then No (Entity (Func_Name)) then\n          --  The aspect is specified by a subprogram name, which\n          --  may be an operator name given originally by a string.\n "}, {"sha": "90af32091e9e5b2a5e257ec0034042a168853c49", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -2668,7 +2668,7 @@ package body Sem_Ch3 is\n                   --  Is_Conjunction_Of_Formal_Preelab_Init_Attributes goes to\n                   --  Original_Node if needed, hence test for Standard_False.)\n \n-                  if not Present (Expr)\n+                  if No (Expr)\n                     or else (Is_Entity_Name (Expr)\n                               and then Entity (Expr) = Standard_True)\n                     or else\n@@ -11050,7 +11050,7 @@ package body Sem_Ch3 is\n             --  with the aliased entity (otherwise we generate a duplicated\n             --  error message).\n \n-           and then not Present (Interface_Alias (Subp))\n+           and then No (Interface_Alias (Subp))\n          then\n             if Present (Alias_Subp) then\n \n@@ -14541,7 +14541,7 @@ package body Sem_Ch3 is\n          --  in various places for an Empty upper bound, and in any case it\n          --  accurately characterizes the index's range of values.\n \n-         if Nkind (S) = N_Range and then not Present (High_Bound (S)) then\n+         if Nkind (S) = N_Range and then No (High_Bound (S)) then\n             Is_FLB_Index := True;\n             Set_High_Bound (S, Type_High_Bound (T));\n          end if;\n@@ -16784,7 +16784,7 @@ package body Sem_Ch3 is\n             --   have such primitives.\n \n             if Present (Generic_Actual)\n-              and then not Present (Act_Subp)\n+              and then No (Act_Subp)\n               and then Is_Limited_Interface (Parent_Base)\n               and then Is_Predefined_Interface_Primitive (Subp)\n             then"}, {"sha": "5f0629d32b3d9368da39f14aa3b11fcc8032ad1f", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -1042,8 +1042,7 @@ package body Sem_Ch5 is\n                         if Ekind (Comp_Id) = E_Component\n                           and then Nkind (Parent (Comp_Id))\n                                      = N_Component_Declaration\n-                          and then\n-                            not Present (Expression (Parent (Comp_Id)))\n+                          and then No (Expression (Parent (Comp_Id)))\n                         then\n                            return True;\n                         end if;"}, {"sha": "228adcff5cd9b87b7b4009185221ce054a004db9", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -264,7 +264,7 @@ package body Sem_Ch6 is\n \n       elsif Warn_On_Redundant_Constructs\n         and then not Is_Dispatching_Operation (Subp_Id)\n-        and then not Present (Overridden_Operation (Subp_Id))\n+        and then No (Overridden_Operation (Subp_Id))\n         and then (not Is_Operator_Symbol_Name (Chars (Subp_Id))\n                    or else Scop /= Scope (Etype (First_Formal (Subp_Id))))\n       then\n@@ -4070,7 +4070,7 @@ package body Sem_Ch6 is\n             --  an instance that may have manipulated the flag during\n             --  expansion. As a result, we add an exception for this case.\n \n-            elsif not Present (Overridden_Operation (Spec_Id))\n+            elsif No (Overridden_Operation (Spec_Id))\n               and then not (Chars (Spec_Id) in Name_Adjust\n                                              | Name_Finalize\n                                              | Name_Initialize\n@@ -6795,7 +6795,7 @@ package body Sem_Ch6 is\n                   Error_Msg_Sloc   := Sloc (Op);\n \n                   if Comes_From_Source (Op) or else No (Alias (Op)) then\n-                     if not Present (Overridden_Operation (Op)) then\n+                     if No (Overridden_Operation (Op)) then\n                         Error_Msg_N (\"\\\\primitive % defined #\", Typ);\n                      else\n                         Error_Msg_N\n@@ -8366,7 +8366,7 @@ package body Sem_Ch6 is\n               or else not Is_Overloadable (Subp)\n               or else not Is_Primitive (Subp)\n               or else not Is_Dispatching_Operation (Subp)\n-              or else not Present (Find_Dispatching_Type (Subp))\n+              or else No (Find_Dispatching_Type (Subp))\n               or else not Is_Interface (Find_Dispatching_Type (Subp))\n             then\n                null;\n@@ -11389,7 +11389,7 @@ package body Sem_Ch6 is\n                   return False;\n                end if;\n \n-               if not Present (Partial_View) then\n+               if No (Partial_View) then\n                   return True;\n                end if;\n \n@@ -11403,7 +11403,7 @@ package body Sem_Ch6 is\n                begin\n                   loop\n                      H := Homonym (H);\n-                     exit when not Present (H) or else Scope (H) /= Scope (S);\n+                     exit when No (H) or else Scope (H) /= Scope (S);\n \n                      if Nkind (Parent (H)) in\n                         N_Private_Extension_Declaration |\n@@ -11451,7 +11451,7 @@ package body Sem_Ch6 is\n \n                         if ((Present (Partial_View)\n                               and then Is_Tagged_Type (Partial_View))\n-                          or else (not Present (Partial_View)\n+                          or else (No (Partial_View)\n                                     and then Is_Tagged_Type (T)))\n                           and then T = Base_Type (Etype (S))\n                         then\n@@ -12947,7 +12947,7 @@ package body Sem_Ch6 is\n \n             --  No need to continue if we already notified errors\n \n-            if not Present (Formal_Type) then\n+            if No (Formal_Type) then\n                return;\n             end if;\n "}, {"sha": "62b9cc03643c3f5ebcc664695231725ab02847ff", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -960,7 +960,7 @@ package body Sem_Ch8 is\n             Set_Etype (Nam, T);\n          end if;\n       elsif Present (Subtype_Mark (N))\n-        or else not Present (Access_Definition (N))\n+        or else No (Access_Definition (N))\n       then\n          if Present (Subtype_Mark (N)) then\n             Find_Type (Subtype_Mark (N));\n@@ -4702,7 +4702,7 @@ package body Sem_Ch8 is\n       --  want to deal with AST_Handler in ZFP mode.\n \n       if not Configurable_Run_Time_Mode\n-        and then not Present (Corresponding_Formal_Spec (N))\n+        and then No (Corresponding_Formal_Spec (N))\n         and then not Is_RTE (Etype (Nam), RE_AST_Handler)\n       then\n          declare\n@@ -9272,9 +9272,9 @@ package body Sem_Ch8 is\n          Scope1 := Scope (Scope1);\n          Scope2 := Scope (Scope2);\n \n-         if not Present (Scope1) then\n+         if No (Scope1) then\n             return Clause1;\n-         elsif not Present (Scope2) then\n+         elsif No (Scope2) then\n             return Clause2;\n          end if;\n       end loop;"}, {"sha": "801339aeca24a76e31302f05c7ca24ef41840ec0", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -1316,7 +1316,7 @@ package body Sem_Dim is\n \n          --  Look at the named components right after the positional components\n \n-         if not Present (Next (Comp))\n+         if No (Next (Comp))\n            and then List_Containing (Comp) = Exps\n          then\n             Comp := First (Comp_Ass);"}, {"sha": "60ea681001ae0ba614a5cffca6c0053bb2e988e2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -15408,12 +15408,12 @@ package body Sem_Prag is\n             --  aspect/pragma from parent types (see Build_DIC_Procedure_Body),\n             --  though that extra argument isn't documented for the pragma.\n \n-            if not Present (Arg2) then\n+            if No (Arg2) then\n                --  When the pragma has no arguments, create an argument with\n                --  the value Empty, so the type name argument can be appended\n                --  following it (since it's expected as the second argument).\n \n-               if not Present (Arg1) then\n+               if No (Arg1) then\n                   Set_Pragma_Argument_Associations (N, New_List (\n                     Make_Pragma_Argument_Association (Sloc (Typ),\n                       Expression => Empty)));"}, {"sha": "9eeaf7cc05b821971b32b2bd34627231cb4e8ec7", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -651,7 +651,7 @@ package body Sem_Util is\n             --  been generated when one should have ???\n \n             elsif Is_Formal (E)\n-              and then not Present (Get_Dynamic_Accessibility (E))\n+              and then No (Get_Dynamic_Accessibility (E))\n               and then Ekind (Etype (E)) = E_Anonymous_Access_Type\n             then\n                return Make_Level_Literal (Scope_Depth (Standard_Standard));\n@@ -1335,7 +1335,7 @@ package body Sem_Util is\n             end if;\n \n             return\n-              not Present (Etype (Constr)) -- previous error\n+              No (Etype (Constr)) -- previous error\n                 or else not Is_Discrete_Type (Etype (Constr))\n                 or else Is_OK_Static_Expression (Constr);\n \n@@ -4449,7 +4449,7 @@ package body Sem_Util is\n             pragma Assert (Present (Ifc_Ancestors (Idx)));\n             Ifc := Next (Ifc);\n          end loop;\n-         pragma Assert (not Present (Ifc));\n+         pragma Assert (No (Ifc));\n          if Present (Parent_Type) then\n             return Parent_Type & Ifc_Ancestors;\n          else\n@@ -11573,7 +11573,7 @@ package body Sem_Util is\n       --  entry families with no Max_Queue_Length aspect or pragma default to\n       --  it.\n \n-      if not Present (Prag) then\n+      if No (Prag) then\n          return Uint_0;\n       end if;\n \n@@ -13092,7 +13092,7 @@ package body Sem_Util is\n          Typ := Corresponding_Record_Type (Typ);\n       end if;\n \n-      if not Present (Typ)\n+      if No (Typ)\n         or else not Is_Record_Type (Typ)\n         or else not Is_Tagged_Type (Typ)\n       then\n@@ -19458,7 +19458,7 @@ package body Sem_Util is\n          return True;\n       elsif Present (Variant_Part (Component_List (Record_Def))) then\n          return False;\n-      elsif not Present (Component_List (Record_Def)) then\n+      elsif No (Component_List (Record_Def)) then\n          return True;\n       end if;\n \n@@ -31575,7 +31575,7 @@ package body Sem_Util is\n                   Next (Range_Or_Expr);\n                end loop;\n \n-               pragma Assert (not Present (Range_Or_Expr));\n+               pragma Assert (No (Range_Or_Expr));\n                Check_Consistency (Result);\n                return Result;\n             end;\n@@ -31825,7 +31825,7 @@ package body Sem_Util is\n                        and then Is_Non_Empty_List (Alternatives (Par))\n                        and then Trailer /= First (Alternatives (Par))\n                      then\n-                        pragma Assert (not Present (Right_Opnd (Par)));\n+                        pragma Assert (No (Right_Opnd (Par)));\n                         pragma Assert\n                           (Is_List_Member (Trailer)\n                            and then List_Containing (Trailer)"}, {"sha": "509efa50af3a0f23bd80e668b10e97cdb1097cbc", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0d27d90dbd8ecab7f8852a807d86a84e31a61c/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=7d0d27d90dbd8ecab7f8852a807d86a84e31a61c", "patch": "@@ -4282,7 +4282,7 @@ package body Sem_Warn is\n          if Ekind (Form) = E_Out_Parameter\n            and then Never_Set_In_Source_Check_Spec (Form)\n            and then Is_Scalar_Type (Etype (Form))\n-           and then not Present (Unset_Reference (Form))\n+           and then No (Unset_Reference (Form))\n          then\n             --  Here all conditions are met, record possible unset reference\n "}]}