{"sha": "e0c6c273290d10461829e1aa888ca89fadfe0209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBjNmMyNzMyOTBkMTA0NjE4MjllMWFhODg4Y2E4OWZhZGZlMDIwOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-09-22T15:16:26Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-09-22T15:16:26Z"}, "message": "v850.c (TARGET_ASM_TRAMPOLINE_TEMPLATE): New.\n\n        * config/v850/v850.c (TARGET_ASM_TRAMPOLINE_TEMPLATE): New.\n        (TARGET_TRAMPOLINE_INIT): New.\n        (v850_can_eliminate): Make static.\n        (v850_asm_trampoline_template, v850_trampoline_init): New.\n        * config/v850/v850.h (TRAMPOLINE_TEMPLATE): Move code to\n        v850_asm_trampoline_template.\n        (INITIALIZE_TRAMPOLINE): Move code to v850_trampoline_init\n        and adjust for target hook parameters.\n\nFrom-SVN: r152015", "tree": {"sha": "29926831aa509a7b580da3f8014720d83330bb87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29926831aa509a7b580da3f8014720d83330bb87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0c6c273290d10461829e1aa888ca89fadfe0209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c6c273290d10461829e1aa888ca89fadfe0209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c6c273290d10461829e1aa888ca89fadfe0209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c6c273290d10461829e1aa888ca89fadfe0209/comments", "author": null, "committer": null, "parents": [{"sha": "fb8d0fac17d730521734266b364159b8a6f4a226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8d0fac17d730521734266b364159b8a6f4a226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8d0fac17d730521734266b364159b8a6f4a226"}], "stats": {"total": 72, "additions": 48, "deletions": 24}, "files": [{"sha": "ce3b1c0f121dc0d8e9fe9c556143896e54be69aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c6c273290d10461829e1aa888ca89fadfe0209/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c6c273290d10461829e1aa888ca89fadfe0209/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0c6c273290d10461829e1aa888ca89fadfe0209", "patch": "@@ -276,6 +276,15 @@\n \t(TARGET_TRAMPOLINE_INIT): New.\n \t* config/stormy16/stormy16.h (INITIALIZE_TRAMPOLINE): Remove.\n \n+\t* config/v850/v850.c (TARGET_ASM_TRAMPOLINE_TEMPLATE): New.\n+\t(TARGET_TRAMPOLINE_INIT): New.\n+\t(v850_can_eliminate): Make static.\n+\t(v850_asm_trampoline_template, v850_trampoline_init): New.\n+\t* config/v850/v850.h (TRAMPOLINE_TEMPLATE): Move code to\n+\tv850_asm_trampoline_template.\n+\t(INITIALIZE_TRAMPOLINE): Move code to v850_trampoline_init\n+\tand adjust for target hook parameters.\n+\n 2009-09-22  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.c (bdesc_2arg): Fix CODE_FOR_vector_gt* codes"}, {"sha": "8e1f27bcb0cfc21e4f9f8e1771f875c0055e7170", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c6c273290d10461829e1aa888ca89fadfe0209/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c6c273290d10461829e1aa888ca89fadfe0209/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=e0c6c273290d10461829e1aa888ca89fadfe0209", "patch": "@@ -73,6 +73,8 @@ static bool v850_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n static int v850_arg_partial_bytes (CUMULATIVE_ARGS *, enum machine_mode,\n \t\t\t\t   tree, bool);\n static bool v850_can_eliminate       (const int, const int);\n+static void v850_asm_trampoline_template (FILE *);\n+static void v850_trampoline_init (rtx, tree, rtx);\n \n /* Information about the various small memory areas.  */\n struct small_memory_info small_memory[ (int)SMALL_MEMORY_max ] =\n@@ -177,6 +179,11 @@ static const struct attribute_spec v850_attribute_table[] =\n #undef TARGET_CAN_ELIMINATE\n #define TARGET_CAN_ELIMINATE v850_can_eliminate\n \n+#undef TARGET_ASM_TRAMPOLINE_TEMPLATE\n+#define TARGET_ASM_TRAMPOLINE_TEMPLATE v850_asm_trampoline_template\n+#undef TARGET_TRAMPOLINE_INIT\n+#define TARGET_TRAMPOLINE_INIT v850_trampoline_init\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Set the maximum size of small memory area TYPE to the value given\n@@ -2963,10 +2970,41 @@ v850_setup_incoming_varargs (CUMULATIVE_ARGS *ca,\n \n /* Worker function for TARGET_CAN_ELIMINATE.  */\n \n-bool\n+static bool\n v850_can_eliminate (const int from ATTRIBUTE_UNUSED, const int to)\n {\n   return (to == STACK_POINTER_REGNUM ? ! frame_pointer_needed : true);\n }\n \n+\f\n+/* Worker function for TARGET_ASM_TRAMPOLINE_TEMPLATE.  */\n+\n+static void\n+v850_asm_trampoline_template (FILE *f)\n+{\n+  fprintf (f, \"\\tjarl .+4,r12\\n\");\n+  fprintf (f, \"\\tld.w 12[r12],r20\\n\");\n+  fprintf (f, \"\\tld.w 16[r12],r12\\n\");\n+  fprintf (f, \"\\tjmp [r12]\\n\");\n+  fprintf (f, \"\\tnop\\n\");\n+  fprintf (f, \"\\t.long 0\\n\");\n+  fprintf (f, \"\\t.long 0\\n\");\n+}\n+\n+/* Worker function for TARGET_TRAMPOLINE_INIT.  */\n+\n+static void\n+v850_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n+{\n+  rtx mem, fnaddr = XEXP (DECL_RTL (fndecl), 0);\n+\n+  emit_block_move (m_tramp, assemble_trampoline_template (),\n+\t\t   GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n+\n+  mem = adjust_address (m_tramp, SImode, 16);\n+  emit_move_insn (mem, chain_value);\n+  mem = adjust_address (m_tramp, SImode, 20);\n+  emit_move_insn (mem, fnaddr);\n+}\n+\f\n #include \"gt-v850.h\""}, {"sha": "1a4ca742545067ee45be5afe24f4e8f9c90e1a25", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0c6c273290d10461829e1aa888ca89fadfe0209/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0c6c273290d10461829e1aa888ca89fadfe0209/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=e0c6c273290d10461829e1aa888ca89fadfe0209", "patch": "@@ -658,33 +658,10 @@ struct cum_arg { int nbytes; int anonymous_args; };\n \n #define FUNCTION_PROFILER(FILE, LABELNO) ;\n \n-#define TRAMPOLINE_TEMPLATE(FILE)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\tjarl .+4,r12\\n\");\t\t\t\\\n-    fprintf (FILE, \"\\tld.w 12[r12],r20\\n\");\t\t\\\n-    fprintf (FILE, \"\\tld.w 16[r12],r12\\n\");\t\t\\\n-    fprintf (FILE, \"\\tjmp [r12]\\n\");\t\t\t\\\n-    fprintf (FILE, \"\\tnop\\n\");\t\t\t\t\\\n-    fprintf (FILE, \"\\t.long 0\\n\");\t\t\t\\\n-    fprintf (FILE, \"\\t.long 0\\n\");\t\t\t\\\n-  } while (0)\n-\n /* Length in units of the trampoline for entering a nested function.  */\n \n #define TRAMPOLINE_SIZE 24\n \n-/* Emit RTL insns to initialize the variable parts of a trampoline.\n-   FNADDR is an RTX for the address of the function's pure code.\n-   CXT is an RTX for the static chain value for the function.  */\n-\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 16)),\t\\\n- \t\t (CXT));\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 20)),\t\\\n-\t\t (FNADDR));\t\t\t\t\t\t\\\n-}\n-\n /* Addressing modes, and classification of registers for them.  */\n \n \f"}]}