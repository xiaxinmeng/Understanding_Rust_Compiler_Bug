{"sha": "2cb7362310288cce61244e39f90fccd75b1c28e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNiNzM2MjMxMDI4OGNjZTYxMjQ0ZTM5ZjkwZmNjZDc1YjFjMjhlMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-07-10T18:41:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-07-10T18:41:51Z"}, "message": "Fix folding of vector EQ/NE\n\nFor vector1 != vector2, we returned false if any elements were equal,\nrather than if all elements were equal.\n\n2019-07-10  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* fold-const.c (fold_relational_const): Fix folding of\n\tvector-to-scalar NE_EXPRs.\n\t(test_vector_folding): Add more tests.\n\nFrom-SVN: r273366", "tree": {"sha": "b9e7e536abb234426e0dc3b60a291a4d484cddc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9e7e536abb234426e0dc3b60a291a4d484cddc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cb7362310288cce61244e39f90fccd75b1c28e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cb7362310288cce61244e39f90fccd75b1c28e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cb7362310288cce61244e39f90fccd75b1c28e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cb7362310288cce61244e39f90fccd75b1c28e1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ba8ebffc4621552febf47eea470c260488418b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ba8ebffc4621552febf47eea470c260488418b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ba8ebffc4621552febf47eea470c260488418b5"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "6166215f5f4ceb55982029b194a0f4d7cdaccd1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cb7362310288cce61244e39f90fccd75b1c28e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cb7362310288cce61244e39f90fccd75b1c28e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cb7362310288cce61244e39f90fccd75b1c28e1", "patch": "@@ -1,3 +1,9 @@\n+2019-07-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* fold-const.c (fold_relational_const): Fix folding of\n+\tvector-to-scalar NE_EXPRs.\n+\t(test_vector_folding): Add more tests.\n+\n 2019-07-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR target/91060"}, {"sha": "edb23fd1b84a2515fcdcd1d6001684bd19f975d4", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cb7362310288cce61244e39f90fccd75b1c28e1/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cb7362310288cce61244e39f90fccd75b1c28e1/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2cb7362310288cce61244e39f90fccd75b1c28e1", "patch": "@@ -14026,13 +14026,13 @@ fold_relational_const (enum tree_code code, tree type, tree op0, tree op1)\n \t    {\n \t      tree elem0 = VECTOR_CST_ELT (op0, i);\n \t      tree elem1 = VECTOR_CST_ELT (op1, i);\n-\t      tree tmp = fold_relational_const (code, type, elem0, elem1);\n+\t      tree tmp = fold_relational_const (EQ_EXPR, type, elem0, elem1);\n \t      if (tmp == NULL_TREE)\n \t\treturn NULL_TREE;\n \t      if (integer_zerop (tmp))\n-\t\treturn constant_boolean_node (false, type);\n+\t\treturn constant_boolean_node (code == NE_EXPR, type);\n \t    }\n-\t  return constant_boolean_node (true, type);\n+\t  return constant_boolean_node (code == EQ_EXPR, type);\n \t}\n       tree_vector_builder elts;\n       if (!elts.new_binary_operation (type, op0, op1, false))\n@@ -14803,13 +14803,21 @@ test_vector_folding ()\n   tree type = build_vector_type (inner_type, 4);\n   tree zero = build_zero_cst (type);\n   tree one = build_one_cst (type);\n+  tree index = build_index_vector (type, 0, 1);\n \n   /* Verify equality tests that return a scalar boolean result.  */\n   tree res_type = boolean_type_node;\n   ASSERT_FALSE (integer_nonzerop (fold_build2 (EQ_EXPR, res_type, zero, one)));\n   ASSERT_TRUE (integer_nonzerop (fold_build2 (EQ_EXPR, res_type, zero, zero)));\n   ASSERT_TRUE (integer_nonzerop (fold_build2 (NE_EXPR, res_type, zero, one)));\n   ASSERT_FALSE (integer_nonzerop (fold_build2 (NE_EXPR, res_type, one, one)));\n+  ASSERT_TRUE (integer_nonzerop (fold_build2 (NE_EXPR, res_type, index, one)));\n+  ASSERT_FALSE (integer_nonzerop (fold_build2 (EQ_EXPR, res_type,\n+\t\t\t\t\t       index, one)));\n+  ASSERT_FALSE (integer_nonzerop (fold_build2 (NE_EXPR, res_type,\n+\t\t\t\t\t      index, index)));\n+  ASSERT_TRUE (integer_nonzerop (fold_build2 (EQ_EXPR, res_type,\n+\t\t\t\t\t      index, index)));\n }\n \n /* Verify folding of VEC_DUPLICATE_EXPRs.  */"}]}