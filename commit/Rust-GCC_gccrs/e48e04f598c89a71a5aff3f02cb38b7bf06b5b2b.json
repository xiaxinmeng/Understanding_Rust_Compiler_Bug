{"sha": "e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ4ZTA0ZjU5OGM4OWE3MWE1YWZmM2YwMmNiMzhiN2JmMDZiNWIyYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-19T11:36:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-19T11:36:51Z"}, "message": "re PR c++/87229 (ICE: tree code 'call_expr' is not supported in LTO streams)\n\n2018-11-19  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/87229\n\t* tree.c (free_lang_data_in_one_sizepos): Free non-gimple-val\n\tsizepos values.\n\n\t* g++.dg/lto/pr87229_0.C: New testcase.\n\nFrom-SVN: r266271", "tree": {"sha": "d80d2d0873b9663244b2f3aa91b56a922e497a2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d80d2d0873b9663244b2f3aa91b56a922e497a2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ddd6f407e8021812c6205bebc40098b87faa4239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6f407e8021812c6205bebc40098b87faa4239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd6f407e8021812c6205bebc40098b87faa4239"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "9cd89fb941be5a0f38fcf73cabbbf7381c8fa9bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "patch": "@@ -1,3 +1,9 @@\n+2018-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/87229\n+\t* tree.c (free_lang_data_in_one_sizepos): Free non-gimple-val\n+\tsizepos values.\n+\n 2018-11-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* compare-elim.c (struct comparison): Add not_in_a field."}, {"sha": "5fce6a848182dfe50d21c1b52e8a049ecf9a9b85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "patch": "@@ -1,3 +1,8 @@\n+2018-11-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/87229\n+\t* g++.dg/lto/pr87229_0.C: New testcase.\n+\n 2018-11-19  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/gcov/pr84548.C: Remove remove-gcda."}, {"sha": "1c20e805291dd5a24e6d4672ac38e5f6f13521f3", "filename": "gcc/testsuite/g++.dg/lto/pr87229_0.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87229_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87229_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87229_0.C?ref=e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "patch": "@@ -0,0 +1,7 @@\n+// { dg-lto-do assemble }\n+\n+struct Main { Main(char* x); };\n+\n+Main::Main(char* x) {\n+    char cfg[__builtin_strlen(x)];\n+}"}, {"sha": "48de9cf350f0455a3251a94d541ba19d09326a98", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e48e04f598c89a71a5aff3f02cb38b7bf06b5b2b", "patch": "@@ -5254,6 +5254,13 @@ free_lang_data_in_one_sizepos (tree *expr_p)\n   tree expr = *expr_p;\n   if (CONTAINS_PLACEHOLDER_P (expr))\n     *expr_p = build0 (PLACEHOLDER_EXPR, TREE_TYPE (expr));\n+  /* ???  We have to reset all non-GIMPLE sizepos because those eventually\n+     refer to trees we cannot stream.  See for example PR87229 which\n+     shows an example with non-gimplified abstract origins in C++.\n+     Note this should only happen for abstract copies so setting sizes\n+     to NULL is OK (but we cannot easily assert this).  */\n+  else if (expr && !is_gimple_val (expr))\n+    *expr_p = NULL_TREE;\n }\n \n "}]}