{"sha": "c4ec12434da32096a04651ccb4afabe0297ac939", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlYzEyNDM0ZGEzMjA5NmEwNDY1MWNjYjRhZmFiZTAyOTdhYzkzOQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2016-05-12T11:27:49Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-05-12T11:27:49Z"}, "message": "re PR tree-optimization/71006 (ICE: verify_gimple failed (error: type mismatch in conditional expression) w/ -O1 -ftree-loop-vectorize)\n\ngcc/\n\n\tPR tree-optimization/71006\n\t* tree-vect-loop.c (vect_determine_vectorization_factor): Don't\n\tconsider COND_EXPR as a mask producer.\n\ngcc/testsuite/\n\n\tPR tree-optimization/71006\n\t* gcc.dg/pr71006.c: New test.\n\nFrom-SVN: r236171", "tree": {"sha": "fe0f5cea46dbec9b3d42e0538952485643448c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe0f5cea46dbec9b3d42e0538952485643448c98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4ec12434da32096a04651ccb4afabe0297ac939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ec12434da32096a04651ccb4afabe0297ac939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ec12434da32096a04651ccb4afabe0297ac939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ec12434da32096a04651ccb4afabe0297ac939/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fbf76d427b3ecee39a091185bb6c67d0c80f8a"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "d610977bf9e3f60b325c8bf8c92516772112e6ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c4ec12434da32096a04651ccb4afabe0297ac939", "patch": "@@ -1,3 +1,9 @@\n+2016-05-12  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR tree-optimization/71006\n+\t* tree-vect-loop.c (vect_determine_vectorization_factor): Don't\n+\tconsider COND_EXPR as a mask producer.\n+\n 2016-05-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR driver/71063"}, {"sha": "d61bb26799dbe8ed0a672dd973f0bf95d884eee3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c4ec12434da32096a04651ccb4afabe0297ac939", "patch": "@@ -1,3 +1,8 @@\n+2016-05-12  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR tree-optimization/71006\n+\t* gcc.dg/pr71006.c: New test.\n+\n 2016-05-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR driver/71063"}, {"sha": "2b45aa01c7e2564200f25f51693ad0daa3f6ba82", "filename": "gcc/testsuite/gcc.dg/pr71006.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71006.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71006.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71006.c?ref=c4ec12434da32096a04651ccb4afabe0297ac939", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/71006 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -ftree-vectorize\" } */\n+\n+unsigned char uu, gu, e2;\n+\n+void\n+fs (void)\n+{\n+  char *nq = (char *)&gu, *k4 = (char *)&gu;\n+  while (*k4 < 1)\n+    {\n+      uu += (*nq != 0 || e2 != 0);\n+      ++*k4;\n+    }\n+}"}, {"sha": "d673c67b4a0adc4ef6c75dd0ffb412f151172a08", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ec12434da32096a04651ccb4afabe0297ac939/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=c4ec12434da32096a04651ccb4afabe0297ac939", "patch": "@@ -437,7 +437,9 @@ vect_determine_vectorization_factor (loop_vec_info loop_vinfo)\n \t      /* Bool ops don't participate in vectorization factor\n \t\t computation.  For comparison use compared types to\n \t\t compute a factor.  */\n-\t      if (TREE_CODE (scalar_type) == BOOLEAN_TYPE)\n+\t      if (TREE_CODE (scalar_type) == BOOLEAN_TYPE\n+\t\t  && is_gimple_assign (stmt)\n+\t\t  && gimple_assign_rhs_code (stmt) != COND_EXPR)\n \t\t{\n \t\t  if (STMT_VINFO_RELEVANT_P (stmt_info))\n \t\t    mask_producers.safe_push (stmt_info);"}]}