{"sha": "a87ef3239984df32963b1d8cacd99e89077900f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg3ZWYzMjM5OTg0ZGYzMjk2M2IxZDhjYWNkOTllODkwNzc5MDBmNQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-07-10T14:00:58Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-07-10T14:00:58Z"}, "message": "jump.c (jump_optimize): If after_regscan and our transformations generate new REGs, rerun reg_scan.\n\n\t* jump.c (jump_optimize): If after_regscan and our transformations\n\tgenerate new REGs, rerun reg_scan.\n\nFrom-SVN: r21052", "tree": {"sha": "4035a819ae8c94bf112f0fbbadf2f27fdbe3ecc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4035a819ae8c94bf112f0fbbadf2f27fdbe3ecc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a87ef3239984df32963b1d8cacd99e89077900f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87ef3239984df32963b1d8cacd99e89077900f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87ef3239984df32963b1d8cacd99e89077900f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87ef3239984df32963b1d8cacd99e89077900f5/comments", "author": null, "committer": null, "parents": [{"sha": "3410b2f3891c179f9dcd1f89b35bda224780501b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3410b2f3891c179f9dcd1f89b35bda224780501b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3410b2f3891c179f9dcd1f89b35bda224780501b"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "11ccac4aba26d3c0fae61f61b7d7bc48bfb40352", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87ef3239984df32963b1d8cacd99e89077900f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87ef3239984df32963b1d8cacd99e89077900f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a87ef3239984df32963b1d8cacd99e89077900f5", "patch": "@@ -1,3 +1,8 @@\n+Fri Jul 10 12:53:58 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* jump.c (jump_optimize): If after_regscan and our transformations\n+\tgenerate new REGs, rerun reg_scan.\n+\n Fri Jul 10 11:50:43 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* config/i960/i960.c (i960_address_cost): MEMA operands with"}, {"sha": "9956789e5aac312368f74084e43b35f733374499", "filename": "gcc/jump.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87ef3239984df32963b1d8cacd99e89077900f5/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87ef3239984df32963b1d8cacd99e89077900f5/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=a87ef3239984df32963b1d8cacd99e89077900f5", "patch": "@@ -151,6 +151,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n {\n   register rtx insn, next, note;\n   int changed;\n+  int old_max_reg;\n   int first = 1;\n   int max_uid = 0;\n   rtx last_insn;\n@@ -591,6 +592,7 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \n   /* Now iterate optimizing jumps until nothing changes over one pass.  */\n   changed = 1;\n+  old_max_reg = max_reg_num ();\n   while (changed)\n     {\n       changed = 0;\n@@ -602,6 +604,16 @@ jump_optimize (f, cross_jump, noop_moves, after_regscan)\n \t  rtx nlabel;\n \t  int this_is_simplejump, this_is_condjump, reversep = 0;\n \t  int this_is_condjump_in_parallel;\n+\n+\t  /* If one of our transformations has created more REGs we\n+\t     must rerun reg_scan or else we risk missed optimizations,\n+\t     erroneous optimizations, or even worse a crash.  */\n+\t  if (after_regscan &&\n+\t      old_max_reg < max_reg_num ())\n+\t    {\n+\t      reg_scan (f, max_reg_num (), 0);\n+\t      old_max_reg = max_reg_num ();\n+\t    }\n #if 0\n \t  /* If NOT the first iteration, if this is the last jump pass\n \t     (just before final), do the special peephole optimizations."}]}