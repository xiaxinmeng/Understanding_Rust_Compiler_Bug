{"sha": "7ac2547f82c125a74adf4e810d49cd2eb791c46a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FjMjU0N2Y4MmMxMjVhNzRhZGY0ZTgxMGQ0OWNkMmViNzkxYzQ2YQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-04-10T21:39:56Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-04-10T21:39:56Z"}, "message": "(record_reg_classes, case 'E'): Make this work like\nconstraint character `F' when REAL_ARITHMETIC is defined.\n\nFrom-SVN: r9355", "tree": {"sha": "79249bddde65b8c13102369f96a86d082a9bce06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79249bddde65b8c13102369f96a86d082a9bce06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac2547f82c125a74adf4e810d49cd2eb791c46a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac2547f82c125a74adf4e810d49cd2eb791c46a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac2547f82c125a74adf4e810d49cd2eb791c46a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac2547f82c125a74adf4e810d49cd2eb791c46a/comments", "author": null, "committer": null, "parents": [{"sha": "b0d577320e3b53315c0326c1a0e724498f321049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0d577320e3b53315c0326c1a0e724498f321049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0d577320e3b53315c0326c1a0e724498f321049"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "1e82611da6d5c6206421dcb329a429562c3f04de", "filename": "gcc/regclass.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac2547f82c125a74adf4e810d49cd2eb791c46a/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac2547f82c125a74adf4e810d49cd2eb791c46a/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=7ac2547f82c125a74adf4e810d49cd2eb791c46a", "patch": "@@ -1171,12 +1171,14 @@ record_reg_classes (n_alts, n_ops, ops, modes, constraints, insn)\n \t\tbreak;\n \n \t      case 'E':\n+#ifndef REAL_ARITHMETIC\n \t\t/* Match any floating double constant, but only if\n \t\t   we can examine the bits of it reliably.  */\n \t\tif ((HOST_FLOAT_FORMAT != TARGET_FLOAT_FORMAT\n \t\t     || HOST_BITS_PER_WIDE_INT != BITS_PER_WORD)\n \t\t    && GET_MODE (op) != VOIDmode && ! flag_pretend_float)\n \t\t  break;\n+#endif\n \t\tif (GET_CODE (op) == CONST_DOUBLE)\n \t\t  win = 1;\n \t\tbreak;"}]}