{"sha": "ea1027992d9cc5786beb54439cf310c647e416c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExMDI3OTkyZDljYzU3ODZiZWI1NDQzOWNmMzEwYzY0N2U0MTZjNQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2016-04-18T10:48:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T10:48:33Z"}, "message": "sinput.ads, sinput.adb (Build_Location_String): Take a parameter instead of using a global variable.\n\n2016-04-18  Bob Duff  <duff@adacore.com>\n\n\t* sinput.ads, sinput.adb (Build_Location_String): Take a\n\tparameter instead of using a global variable.  The function\n\tversion no longer destroys the Name_Buffer.\n\t* stringt.ads, stringt.adb (String_From_Name_Buffer): Take a\n\tparameter, which defaults to the Global_Name_Buffer, so some\n\tcalls can avoid the global.\n\t* exp_ch11.adb, exp_intr.adb: Use new interfaces above\n\tto avoid using globals. All but one call to Build_Location_String\n\tavoids the global. Only one call to String_From_Name_Buffer\n\tavoids it.\n\nFrom-SVN: r235126", "tree": {"sha": "2c662c1707d15631c783d9d9a863a520b4ba13c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c662c1707d15631c783d9d9a863a520b4ba13c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1027992d9cc5786beb54439cf310c647e416c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1027992d9cc5786beb54439cf310c647e416c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1027992d9cc5786beb54439cf310c647e416c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1027992d9cc5786beb54439cf310c647e416c5/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd717ec9b7edb898ec138f58a14821e776bb4fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd717ec9b7edb898ec138f58a14821e776bb4fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd717ec9b7edb898ec138f58a14821e776bb4fa3"}], "stats": {"total": 94, "additions": 49, "deletions": 45}, "files": [{"sha": "1fc22a7e12ab51f3cab776f163d92a6d20abb60d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -1,3 +1,16 @@\n+2016-04-18  Bob Duff  <duff@adacore.com>\n+\n+\t* sinput.ads, sinput.adb (Build_Location_String): Take a\n+\tparameter instead of using a global variable.  The function\n+\tversion no longer destroys the Name_Buffer.\n+\t* stringt.ads, stringt.adb (String_From_Name_Buffer): Take a\n+\tparameter, which defaults to the Global_Name_Buffer, so some\n+\tcalls can avoid the global.\n+\t* exp_ch11.adb, exp_intr.adb: Use new interfaces above\n+\tto avoid using globals. All but one call to Build_Location_String\n+\tavoids the global. Only one call to String_From_Name_Buffer\n+\tavoids it.\n+\n 2016-04-18  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* namet.adb, namet.ads, exp_unst.adb: Minor reformatting."}, {"sha": "653007c63c60d0b6ec857948fac3fed1953b8567", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -1658,10 +1658,10 @@ package body Exp_Ch11 is\n       if Present (Name (N)) then\n          declare\n             Id : Entity_Id := Entity (Name (N));\n+            Buf : Bounded_String;\n \n          begin\n-            Name_Len := 0;\n-            Build_Location_String (Loc);\n+            Build_Location_String (Buf, Loc);\n \n             --  If the exception is a renaming, use the exception that it\n             --  renames (which might be a predefined exception, e.g.).\n@@ -1679,19 +1679,17 @@ package body Exp_Ch11 is\n                --  Suppress_Exception_Locations is set for this unit.\n \n                if Opt.Exception_Locations_Suppressed then\n-                  Name_Len := 1;\n-               else\n-                  Name_Len := Name_Len + 1;\n+                  Buf.Length := 0;\n                end if;\n \n-               Name_Buffer (Name_Len) := ASCII.NUL;\n+               Append (Buf, ASCII.NUL);\n             end if;\n \n             if Opt.Exception_Locations_Suppressed then\n-               Name_Len := 0;\n+               Buf.Length := 0;\n             end if;\n \n-            Str := String_From_Name_Buffer;\n+            Str := String_From_Name_Buffer (Buf);\n \n             --  Convert raise to call to the Raise_Exception routine\n "}, {"sha": "8b2d1f2bdb7b7807ec929218c9040e6d2b47f1b6", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -145,7 +145,7 @@ package body Exp_Intr is\n               (Reference_Name (Get_Source_File_Index (Loc)));\n \n          when Name_Source_Location =>\n-            Build_Location_String (Loc);\n+            Build_Location_String (Global_Name_Buffer, Loc);\n \n          when Name_Enclosing_Entity =>\n "}, {"sha": "0800f3196a68b6d0d1f2938d74bdff8821011de0", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -221,33 +221,31 @@ package body Sinput is\n    -- Build_Location_String --\n    ---------------------------\n \n-   procedure Build_Location_String (Loc : Source_Ptr) is\n-      Ptr : Source_Ptr;\n+   procedure Build_Location_String\n+     (Buf : in out Bounded_String;\n+      Loc : Source_Ptr)\n+   is\n+      Ptr : Source_Ptr := Loc;\n \n    begin\n       --  Loop through instantiations\n \n-      Ptr := Loc;\n       loop\n-         Get_Name_String_And_Append\n-           (Reference_Name (Get_Source_File_Index (Ptr)));\n-         Add_Char_To_Name_Buffer (':');\n-         Add_Nat_To_Name_Buffer (Nat (Get_Logical_Line_Number (Ptr)));\n+         Append (Buf, Reference_Name (Get_Source_File_Index (Ptr)));\n+         Append (Buf, ':');\n+         Append (Buf, Nat (Get_Logical_Line_Number (Ptr)));\n \n          Ptr := Instantiation_Location (Ptr);\n          exit when Ptr = No_Location;\n-         Add_Str_To_Name_Buffer (\" instantiated at \");\n+         Append (Buf, \" instantiated at \");\n       end loop;\n-\n-      Name_Buffer (Name_Len + 1) := NUL;\n-      return;\n    end Build_Location_String;\n \n    function Build_Location_String (Loc : Source_Ptr) return String is\n+      Buf : Bounded_String;\n    begin\n-      Name_Len := 0;\n-      Build_Location_String (Loc);\n-      return Name_Buffer (1 .. Name_Len);\n+      Build_Location_String (Buf, Loc);\n+      return +Buf;\n    end Build_Location_String;\n \n    -------------------"}, {"sha": "18bc1b1efdb110864987350155cdbe09a50f5076", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -536,18 +536,17 @@ package Sinput is\n    --  The caller has checked that a Line_Terminator character precedes P so\n    --  that there definitely is a previous line in the source buffer.\n \n-   procedure Build_Location_String (Loc : Source_Ptr);\n+   procedure Build_Location_String\n+     (Buf : in out Bounded_String;\n+      Loc : Source_Ptr);\n    --  This function builds a string literal of the form \"name:line\", where\n    --  name is the file name corresponding to Loc, and line is the line number.\n-   --  In the event that instantiations are involved, additional suffixes of\n-   --  the same form are appended after the separating string \" instantiated at\n-   --  \". The returned string is appended to the Name_Buffer, terminated by\n-   --  ASCII.NUL, with Name_Length indicating the length not including the\n-   --  terminating Nul.\n+   --  If instantiations are involved, additional suffixes of the same form are\n+   --  appended after the separating string \" instantiated at \". The returned\n+   --  string is appended to Buf.\n \n    function Build_Location_String (Loc : Source_Ptr) return String;\n-   --  Functional form returning a string, which does not include a terminating\n-   --  null character. The contents of Name_Buffer is destroyed.\n+   --  Functional form returning a String\n \n    procedure Check_For_BOM;\n    --  Check if the current source starts with a BOM. Scan_Ptr needs to be at"}, {"sha": "b4d85629908a8a279b45afc1b1c5cf0f1c4fc95c", "filename": "gcc/ada/stringt.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fstringt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fstringt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.adb?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,7 +30,6 @@\n ------------------------------------------------------------------------------\n \n with Alloc;\n-with Namet;  use Namet;\n with Output; use Output;\n with Table;\n \n@@ -307,14 +306,11 @@ package body Stringt is\n    -- String_From_Name_Buffer --\n    -----------------------------\n \n-   function String_From_Name_Buffer return String_Id is\n+   function String_From_Name_Buffer\n+     (Buf : Bounded_String := Global_Name_Buffer) return String_Id is\n    begin\n       Start_String;\n-\n-      for J in 1 .. Name_Len loop\n-         Store_String_Char (Get_Char_Code (Name_Buffer (J)));\n-      end loop;\n-\n+      Store_String_Chars (+Buf);\n       return End_String;\n    end String_From_Name_Buffer;\n "}, {"sha": "c48f2b9def863914693ae6339d2c19fa7e6191d7", "filename": "gcc/ada/stringt.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fstringt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1027992d9cc5786beb54439cf310c647e416c5/gcc%2Fada%2Fstringt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.ads?ref=ea1027992d9cc5786beb54439cf310c647e416c5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Namet;  use Namet;\n with System; use System;\n with Types;  use Types;\n \n@@ -131,10 +132,9 @@ package Stringt is\n    function String_Chars_Address return System.Address;\n    --  Return address of String_Chars table (used by Back_End call to Gigi)\n \n-   function String_From_Name_Buffer return String_Id;\n-   --  Given a name stored in Namet.Name_Buffer (length in Namet.Name_Len),\n-   --  returns a string of the corresponding value. The value in Name_Buffer\n-   --  is unchanged, and the cases of letters are unchanged.\n+   function String_From_Name_Buffer\n+     (Buf : Bounded_String := Global_Name_Buffer) return String_Id;\n+   --  Given a name stored in Buf, returns a string of the corresponding value.\n \n    function Strings_Address return System.Address;\n    --  Return address of Strings table (used by Back_End call to Gigi)"}]}