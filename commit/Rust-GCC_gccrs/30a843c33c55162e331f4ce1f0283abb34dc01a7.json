{"sha": "30a843c33c55162e331f4ce1f0283abb34dc01a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBhODQzYzMzYzU1MTYyZTMzMWY0Y2UxZjAyODNhYmIzNGRjMDFhNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-07-05T15:49:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-07-05T15:49:12Z"}, "message": "re PR tree-optimization/28162 (ICE in set_value_range, at tree-vrp.c:157)\n\n2006-07-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/28162\n\t* fold-const.c (fold_binary): For (-A) * (-B) -> A * B\n\tmake sure to convert the operands to the correct type.\n\n\t* gcc.dg/pr28162.c: New testcase.\n\nFrom-SVN: r115202", "tree": {"sha": "0eda7a946181d1977412bfff3605f5b764f4ef03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eda7a946181d1977412bfff3605f5b764f4ef03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30a843c33c55162e331f4ce1f0283abb34dc01a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a843c33c55162e331f4ce1f0283abb34dc01a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30a843c33c55162e331f4ce1f0283abb34dc01a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30a843c33c55162e331f4ce1f0283abb34dc01a7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5d7f6f7358faa1ff7cf96d45b17bf07aa9fad6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5d7f6f7358faa1ff7cf96d45b17bf07aa9fad6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5d7f6f7358faa1ff7cf96d45b17bf07aa9fad6c"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "798fe03a3c1590d1d7690878f40cd60f843fdd15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30a843c33c55162e331f4ce1f0283abb34dc01a7", "patch": "@@ -1,3 +1,9 @@\n+2006-07-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/28162\n+\t* fold-const.c (fold_binary): For (-A) * (-B) -> A * B\n+\tmake sure to convert the operands to the correct type.\n+\n 2006-07-04  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/28218"}, {"sha": "008310c21a405f4dd826235aa058b5834869686b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=30a843c33c55162e331f4ce1f0283abb34dc01a7", "patch": "@@ -8852,12 +8852,12 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n       /* (-A) * (-B) -> A * B  */\n       if (TREE_CODE (arg0) == NEGATE_EXPR && negate_expr_p (arg1))\n \treturn fold_build2 (MULT_EXPR, type,\n-\t\t\t    TREE_OPERAND (arg0, 0),\n-\t\t\t    negate_expr (arg1));\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg0, 0)),\n+\t\t\t    fold_convert (type, negate_expr (arg1)));\n       if (TREE_CODE (arg1) == NEGATE_EXPR && negate_expr_p (arg0))\n \treturn fold_build2 (MULT_EXPR, type,\n-\t\t\t    negate_expr (arg0),\n-\t\t\t    TREE_OPERAND (arg1, 0));\n+\t\t\t    fold_convert (type, negate_expr (arg0)),\n+\t\t\t    fold_convert (type, TREE_OPERAND (arg1, 0)));\n \n       if (! FLOAT_TYPE_P (type))\n \t{"}, {"sha": "e40ce0bfe09ad81faef50ab1ed6bd2365b91e26f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30a843c33c55162e331f4ce1f0283abb34dc01a7", "patch": "@@ -1,3 +1,8 @@\n+2006-07-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/28162\n+\t* gcc.dg/pr28162.c: New testcase.\n+\n 2006-07-05  Richard Guenther  <rguenther@suse.de>\n \tAndrew Pinski  <pinskia@gcc.gnu.org>\n "}, {"sha": "8bd28ad24ae03f1c636166f52f68484d8a7eaa7e", "filename": "gcc/testsuite/gcc.dg/pr28162.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28162.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30a843c33c55162e331f4ce1f0283abb34dc01a7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28162.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28162.c?ref=30a843c33c55162e331f4ce1f0283abb34dc01a7", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void Lag_max_wght(float corr[], long wght_flg)\n+{\n+     float t0, max;\n+     const float *ww;\n+     long i;\n+     if ( wght_flg > 0 ) {\n+        for ( i = 143; i >= 20; i-- ) {\n+           t0 = corr[ - i] * *ww--;\n+           if ( t0 >= max )\n+             max = t0;\n+        }\n+     }\n+}\n+"}]}