{"sha": "6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkZGFiYmJlODE1YmU4MTA3MjA3ZmNiNmUyYWE2NDBlMmU4YzZjYQ==", "commit": {"author": {"name": "Jie Zhang", "email": "jie@codesourcery.com", "date": "2010-04-07T10:14:45Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2010-04-07T10:14:45Z"}, "message": "re PR c++/42556 (Unnecessary generation of a zero initializer for array with C++)\n\n\tcp/\n\tPR c++/42556\n\t* typeck2.c (split_nonconstant_init_1): Drop empty CONSTRUCTOR\n\twhen all of its elements are non-constant and have been split out.\n\n\ttestsuite/\n\tPR c++/42556\n\t* g++.dg/init/pr42556.C: New test.\n\nFrom-SVN: r158047", "tree": {"sha": "88b97457fae13a30b8afc5e88b682efba5339cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88b97457fae13a30b8afc5e88b682efba5339cfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/comments", "author": null, "committer": null, "parents": [{"sha": "366f945f9bc15d885af5a20ed70547e96b2dafae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366f945f9bc15d885af5a20ed70547e96b2dafae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366f945f9bc15d885af5a20ed70547e96b2dafae"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "fd106914f5ee04b969b10b45f1f5f758d6c7da1a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "patch": "@@ -1,3 +1,9 @@\n+2010-04-07  Jie Zhang  <jie@codesourcery.com>\n+\n+\tPR c++/42556\n+\t* typeck2.c (split_nonconstant_init_1): Drop empty CONSTRUCTOR\n+\twhen all of its elements are non-constant and have been split out.\n+\n 2010-04-06  Taras Glek  <taras@mozilla.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "2610b28eca7e14bcaeb96ea149cffc96cfe82f1a", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "patch": "@@ -549,13 +549,15 @@ cxx_incomplete_type_error (const_tree value, const_tree type)\n    expression to which INIT should be assigned.  INIT is a CONSTRUCTOR.  */\n \n static void\n-split_nonconstant_init_1 (tree dest, tree init)\n+split_nonconstant_init_1 (tree dest, tree *initp)\n {\n   unsigned HOST_WIDE_INT idx;\n+  tree init = *initp;\n   tree field_index, value;\n   tree type = TREE_TYPE (dest);\n   tree inner_type = NULL;\n   bool array_type_p = false;\n+  HOST_WIDE_INT num_type_elements, num_initialized_elements;\n \n   switch (TREE_CODE (type))\n     {\n@@ -567,6 +569,7 @@ split_nonconstant_init_1 (tree dest, tree init)\n     case RECORD_TYPE:\n     case UNION_TYPE:\n     case QUAL_UNION_TYPE:\n+      num_initialized_elements = 0;\n       FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (init), idx,\n \t\t\t\tfield_index, value)\n \t{\n@@ -589,12 +592,13 @@ split_nonconstant_init_1 (tree dest, tree init)\n \t\tsub = build3 (COMPONENT_REF, inner_type, dest, field_index,\n \t\t\t      NULL_TREE);\n \n-\t      split_nonconstant_init_1 (sub, value);\n+\t      split_nonconstant_init_1 (sub, &value);\n \t    }\n \t  else if (!initializer_constant_valid_p (value, inner_type))\n \t    {\n \t      tree code;\n \t      tree sub;\n+\t      HOST_WIDE_INT inner_elements;\n \n \t      /* FIXME: Ordered removal is O(1) so the whole function is\n \t\t worst-case quadratic. This could be fixed using an aside\n@@ -617,9 +621,22 @@ split_nonconstant_init_1 (tree dest, tree init)\n \t      code = build2 (INIT_EXPR, inner_type, sub, value);\n \t      code = build_stmt (input_location, EXPR_STMT, code);\n \t      add_stmt (code);\n+\n+\t      inner_elements = count_type_elements (inner_type, true);\n+\t      if (inner_elements < 0)\n+\t\tnum_initialized_elements = -1;\n+\t      else if (num_initialized_elements >= 0)\n+\t\tnum_initialized_elements += inner_elements;\n \t      continue;\n \t    }\n \t}\n+\n+      num_type_elements = count_type_elements (type, true);\n+      /* If all elements of the initializer are non-constant and\n+\t have been split out, we don't need the empty CONSTRUCTOR.  */\n+      if (num_type_elements > 0\n+\t  && num_type_elements == num_initialized_elements)\n+\t*initp = NULL;\n       break;\n \n     case VECTOR_TYPE:\n@@ -655,7 +672,7 @@ split_nonconstant_init (tree dest, tree init)\n   if (TREE_CODE (init) == CONSTRUCTOR)\n     {\n       code = push_stmt_list ();\n-      split_nonconstant_init_1 (dest, init);\n+      split_nonconstant_init_1 (dest, &init);\n       code = pop_stmt_list (code);\n       DECL_INITIAL (dest) = init;\n       TREE_READONLY (dest) = 0;"}, {"sha": "cb2412ee8d39e8dfc33c5e41586ebcfa38dae115", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "patch": "@@ -1,3 +1,8 @@\n+2010-04-07  Jie Zhang  <jie@codesourcery.com>\n+\n+\tPR c++/42556\n+\t* g++.dg/init/pr42556.C: New test.\n+\n 2010-04-07  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/43628"}, {"sha": "27370af79f61aba984a05b36a1ad7ba23bf7a984", "filename": "gcc/testsuite/g++.dg/init/pr42556.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr42556.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6addabbbe815be8107207fcb6e2aa640e2e8c6ca/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr42556.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr42556.C?ref=6addabbbe815be8107207fcb6e2aa640e2e8c6ca", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile }\n+// { dg-options \"-fdump-tree-gimple\" }\n+\n+void foo (int a, int b, int c, int d)\n+{\n+  int v[4] = {a, b, c, d};\n+}\n+\n+// { dg-final { scan-tree-dump-not \"v = {}\"  \"gimple\" } }\n+// { dg-final { cleanup-tree-dump \"gimple\" } }"}]}