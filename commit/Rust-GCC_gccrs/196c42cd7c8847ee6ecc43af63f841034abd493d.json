{"sha": "196c42cd7c8847ee6ecc43af63f841034abd493d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2YzQyY2Q3Yzg4NDdlZTZlY2M0M2FmNjNmODQxMDM0YWJkNDkzZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-02-19T08:00:47Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-02-19T08:00:47Z"}, "message": "function.c (assign_parms): When building decl_rtl for SPLIT_COMPLEX_ARGS...\n\n\t* function.c (assign_parms): When building decl_rtl for\n\tSPLIT_COMPLEX_ARGS, ensure inner modes of concat match outer.\n\nFrom-SVN: r78079", "tree": {"sha": "43f9837f093327787b72ce5686f6ccd74f396df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f9837f093327787b72ce5686f6ccd74f396df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196c42cd7c8847ee6ecc43af63f841034abd493d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196c42cd7c8847ee6ecc43af63f841034abd493d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196c42cd7c8847ee6ecc43af63f841034abd493d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196c42cd7c8847ee6ecc43af63f841034abd493d/comments", "author": null, "committer": null, "parents": [{"sha": "9188db2d0021c8c715c7ce2115b77ef7650e9631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9188db2d0021c8c715c7ce2115b77ef7650e9631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9188db2d0021c8c715c7ce2115b77ef7650e9631"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "93763f25bb64f0fb941506c4746328ad210a7a44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196c42cd7c8847ee6ecc43af63f841034abd493d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196c42cd7c8847ee6ecc43af63f841034abd493d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=196c42cd7c8847ee6ecc43af63f841034abd493d", "patch": "@@ -1,3 +1,8 @@\n+2004-02-19  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* function.c (assign_parms): When building decl_rtl for\n+\tSPLIT_COMPLEX_ARGS, ensure inner modes of concat match outer.\n+\n 2004-02-19  Olivier Hainque  <hainque@act-europe.fr>\n \n \t* expr.c (is_aligning_offset): Check if we are aligning the"}, {"sha": "3991ff841fedcfd20ab350e2e06910deeeff1091", "filename": "gcc/function.c", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196c42cd7c8847ee6ecc43af63f841034abd493d/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196c42cd7c8847ee6ecc43af63f841034abd493d/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=196c42cd7c8847ee6ecc43af63f841034abd493d", "patch": "@@ -5231,15 +5231,27 @@ assign_parms (tree fndecl)\n \t{\n \t  if (TREE_CODE (TREE_TYPE (parm)) == COMPLEX_TYPE)\n \t    {\n-\t      rtx tmp;\n-\n-\t      SET_DECL_RTL (parm,\n-\t\t\t    gen_rtx_CONCAT (DECL_MODE (parm),\n-\t\t\t\t\t    DECL_RTL (fnargs),\n-\t\t\t\t\t    DECL_RTL (TREE_CHAIN (fnargs))));\n-\t      tmp = gen_rtx_CONCAT (DECL_MODE (parm),\n-\t\t\t\t    DECL_INCOMING_RTL (fnargs),\n-\t\t\t\t    DECL_INCOMING_RTL (TREE_CHAIN (fnargs)));\n+\t      rtx tmp, real, imag;\n+\t      enum machine_mode inner = GET_MODE_INNER (DECL_MODE (parm));\n+\n+\t      real = DECL_RTL (fnargs);\n+\t      imag = DECL_RTL (TREE_CHAIN (fnargs));\n+\t      if (inner != GET_MODE (real))\n+\t\t{\n+\t\t  real = gen_lowpart_SUBREG (inner, real);\n+\t\t  imag = gen_lowpart_SUBREG (inner, imag);\n+\t\t}\n+\t      tmp = gen_rtx_CONCAT (DECL_MODE (parm), real, imag);\n+\t      SET_DECL_RTL (parm, tmp);\n+\n+\t      real = DECL_INCOMING_RTL (fnargs);\n+\t      imag = DECL_INCOMING_RTL (TREE_CHAIN (fnargs));\n+\t      if (inner != GET_MODE (real))\n+\t\t{\n+\t\t  real = gen_lowpart_SUBREG (inner, real);\n+\t\t  imag = gen_lowpart_SUBREG (inner, imag);\n+\t\t}\n+\t      tmp = gen_rtx_CONCAT (DECL_MODE (parm), real, imag);\n \t      set_decl_incoming_rtl (parm, tmp);\n \t      fnargs = TREE_CHAIN (fnargs);\n \t    }"}]}