{"sha": "92219babbb18f8ee2590fe9e1040b0cc09d16b45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyMTliYWJiYjE4ZjhlZTI1OTBmZTllMTA0MGIwY2MwOWQxNmI0NQ==", "commit": {"author": {"name": "Patrick Bernardi", "email": "bernardi@adacore.com", "date": "2019-10-10T15:22:55Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-10-10T15:22:55Z"}, "message": "[Ada] Flag Sec_Stack_Used incorrectly set by ghost code\n\n2019-10-10  Patrick Bernardi  <bernardi@adacore.com>\n\ngcc/ada/\n\n\t* bindgen.adb (System_Secondary_Stack_Package_In_Closure):\n\tRenamed flag System_Secondary_Stack_Used to be clearer of what\n\tit represents.\n\t(Gen_Adainit): Refactor secondary stack related code to make it\n\tclearer.\n\t* rtsfind.adb (Load_RTU): Don't set Sec_Stack_Used flag here\n\t(RTE): Set Sec_Stack_Used if the System.Secondary_Stack is\n\treferenced, but not if we're ignoring ghost code.\n\nFrom-SVN: r276811", "tree": {"sha": "44bd30ae2ce387781053d62ef9f947ff063c7056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44bd30ae2ce387781053d62ef9f947ff063c7056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92219babbb18f8ee2590fe9e1040b0cc09d16b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92219babbb18f8ee2590fe9e1040b0cc09d16b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92219babbb18f8ee2590fe9e1040b0cc09d16b45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92219babbb18f8ee2590fe9e1040b0cc09d16b45/comments", "author": {"login": "burratoo", "id": 23646118, "node_id": "MDQ6VXNlcjIzNjQ2MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/23646118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burratoo", "html_url": "https://github.com/burratoo", "followers_url": "https://api.github.com/users/burratoo/followers", "following_url": "https://api.github.com/users/burratoo/following{/other_user}", "gists_url": "https://api.github.com/users/burratoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/burratoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burratoo/subscriptions", "organizations_url": "https://api.github.com/users/burratoo/orgs", "repos_url": "https://api.github.com/users/burratoo/repos", "events_url": "https://api.github.com/users/burratoo/events{/privacy}", "received_events_url": "https://api.github.com/users/burratoo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4f50084ad13d00dc3c5e554ca6cbacafc34b758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f50084ad13d00dc3c5e554ca6cbacafc34b758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f50084ad13d00dc3c5e554ca6cbacafc34b758"}], "stats": {"total": 179, "additions": 97, "deletions": 82}, "files": [{"sha": "1788f19293ed1b187eea52b423c80173620c5fd4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92219babbb18f8ee2590fe9e1040b0cc09d16b45/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92219babbb18f8ee2590fe9e1040b0cc09d16b45/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=92219babbb18f8ee2590fe9e1040b0cc09d16b45", "patch": "@@ -1,5 +1,10 @@\n-2019-10-10  Piotr Trojanek  <trojanek@adacore.com>\n+2019-10-10  Patrick Bernardi  <bernardi@adacore.com>\n \n-\t* sem_prag.adb (Analyze_Global_In_Decl_Part): Simplify previous\n-\ttest, just like in a recent commit we simplified a similar test\n-\tfor Depends contract.\n\\ No newline at end of file\n+\t* bindgen.adb (System_Secondary_Stack_Package_In_Closure):\n+\tRenamed flag System_Secondary_Stack_Used to be clearer of what\n+\tit represents.\n+\t(Gen_Adainit): Refactor secondary stack related code to make it\n+\tclearer.\n+\t* rtsfind.adb (Load_RTU): Don't set Sec_Stack_Used flag here\n+\t(RTE): Set Sec_Stack_Used if the System.Secondary_Stack is\n+\treferenced, but not if we're ignoring ghost code.\n\\ No newline at end of file"}, {"sha": "9ac50fe35ef0d16d3a050a0d2808dfa9939d60e7", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 55, "deletions": 49, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92219babbb18f8ee2590fe9e1040b0cc09d16b45/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92219babbb18f8ee2590fe9e1040b0cc09d16b45/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=92219babbb18f8ee2590fe9e1040b0cc09d16b45", "patch": "@@ -81,7 +81,7 @@ package body Bindgen is\n    --  domains just before calling the main procedure from the environment\n    --  task.\n \n-   System_Secondary_Stack_Used : Boolean := False;\n+   System_Secondary_Stack_Package_In_Closure : Boolean := False;\n    --  Flag indicating whether the unit System.Secondary_Stack is in the\n    --  closure of the partition. This is set by Resolve_Binder_Options, and\n    --  is used to initialize the package in cases where the run-time brings\n@@ -585,29 +585,33 @@ package body Bindgen is\n             WBI (\"\");\n          end if;\n \n-         --  A restricted run-time may attempt to initialize the main task's\n-         --  secondary stack even if the stack is not used. Consequently,\n-         --  the binder needs to initialize Binder_Sec_Stacks_Count anytime\n-         --  System.Secondary_Stack is in the enclosure of the partition.\n+         if System_Secondary_Stack_Package_In_Closure then\n+            --  System.Secondary_Stack is in the closure of the program\n+            --  because the program uses the secondary stack or the restricted\n+            --  run-time is unconditionally calling SS_Init. In both cases,\n+            --  SS_Init needs to know the number of secondary stacks created by\n+            --  the binder.\n \n-         if System_Secondary_Stack_Used then\n             WBI (\"      Binder_Sec_Stacks_Count : Natural;\");\n             WBI (\"      pragma Import (Ada, Binder_Sec_Stacks_Count, \" &\n                  \"\"\"__gnat_binder_ss_count\"\");\");\n             WBI (\"\");\n-         end if;\n \n-         if Sec_Stack_Used then\n-            WBI (\"      Default_Secondary_Stack_Size : \" &\n-                 \"System.Parameters.Size_Type;\");\n-            WBI (\"      pragma Import (C, Default_Secondary_Stack_Size, \" &\n-                 \"\"\"__gnat_default_ss_size\"\");\");\n+            --  Import secondary stack pool variables if the secondary stack\n+            --  used. They are not referenced otherwise.\n \n-            WBI (\"      Default_Sized_SS_Pool : System.Address;\");\n-            WBI (\"      pragma Import (Ada, Default_Sized_SS_Pool, \" &\n-                 \"\"\"__gnat_default_ss_pool\"\");\");\n+            if Sec_Stack_Used then\n+               WBI (\"      Default_Secondary_Stack_Size : \" &\n+                    \"System.Parameters.Size_Type;\");\n+               WBI (\"      pragma Import (C, Default_Secondary_Stack_Size, \" &\n+                    \"\"\"__gnat_default_ss_size\"\");\");\n \n-            WBI (\"\");\n+               WBI (\"      Default_Sized_SS_Pool : System.Address;\");\n+               WBI (\"      pragma Import (Ada, Default_Sized_SS_Pool, \" &\n+                    \"\"\"__gnat_default_ss_pool\"\");\");\n+\n+               WBI (\"\");\n+            end if;\n          end if;\n \n          WBI (\"   begin\");\n@@ -642,48 +646,49 @@ package body Bindgen is\n             WBI (\"      null;\");\n          end if;\n \n-         --  Generate default-sized secondary stack pool and set secondary\n-         --  stack globals.\n-\n-         if Sec_Stack_Used then\n+         --  Generate the default-sized secondary stack pool if the secondary\n+         --  stack is used by the program.\n \n-            --  Elaborate the body of the binder to initialize the default-\n-            --  sized secondary stack pool.\n+         if System_Secondary_Stack_Package_In_Closure then\n+            if Sec_Stack_Used then\n+               --  Elaborate the body of the binder to initialize the default-\n+               --  sized secondary stack pool.\n \n-            WBI (\"\");\n-            WBI (\"      \" & Get_Ada_Main_Name & \"'Elab_Body;\");\n+               WBI (\"\");\n+               WBI (\"      \" & Get_Ada_Main_Name & \"'Elab_Body;\");\n \n-            --  Generate the default-sized secondary stack pool and set the\n-            --  related secondary stack globals.\n+               --  Generate the default-sized secondary stack pool and set the\n+               --  related secondary stack globals.\n \n-            Set_String (\"      Default_Secondary_Stack_Size := \");\n+               Set_String (\"      Default_Secondary_Stack_Size := \");\n \n-            if Opt.Default_Sec_Stack_Size /= Opt.No_Stack_Size then\n-               Set_Int (Opt.Default_Sec_Stack_Size);\n-            else\n-               Set_String (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n-            end if;\n+               if Opt.Default_Sec_Stack_Size /= Opt.No_Stack_Size then\n+                  Set_Int (Opt.Default_Sec_Stack_Size);\n+               else\n+                  Set_String\n+                    (\"System.Parameters.Runtime_Default_Sec_Stack_Size\");\n+               end if;\n \n-            Set_Char (';');\n-            Write_Statement_Buffer;\n+               Set_Char (';');\n+               Write_Statement_Buffer;\n \n-            Set_String (\"      Binder_Sec_Stacks_Count := \");\n-            Set_Int (Num_Sec_Stacks);\n-            Set_Char (';');\n-            Write_Statement_Buffer;\n+               Set_String (\"      Binder_Sec_Stacks_Count := \");\n+               Set_Int (Num_Sec_Stacks);\n+               Set_Char (';');\n+               Write_Statement_Buffer;\n \n-            WBI (\"      Default_Sized_SS_Pool := \" &\n-                   \"Sec_Default_Sized_Stacks'Address;\");\n-            WBI (\"\");\n+               WBI (\"      Default_Sized_SS_Pool := \" &\n+                      \"Sec_Default_Sized_Stacks'Address;\");\n+               WBI (\"\");\n \n-         --  When a restricted run-time initializes the main task's secondary\n-         --  stack but the program does not use it, no secondary stack is\n-         --  generated. Binder_Sec_Stacks_Count is set to zero so the run-time\n-         --  is aware that the lack of pre-allocated secondary stack is\n-         --  expected.\n+            else\n+               --  The presence of System.Secondary_Stack in the closure of the\n+               --  program implies the restricted run-time is unconditionally\n+               --  calling SS_Init. Let SS_Init know that no stacks were\n+               --  created.\n \n-         elsif System_Secondary_Stack_Used then\n-            WBI (\"      Binder_Sec_Stacks_Count := 0;\");\n+               WBI (\"      Binder_Sec_Stacks_Count := 0;\");\n+            end if;\n          end if;\n \n       --  Normal case (standard library not suppressed). Set all global values\n@@ -3086,7 +3091,8 @@ package body Bindgen is\n          --  Ditto for the use of System.Secondary_Stack\n \n          Check_Package\n-           (System_Secondary_Stack_Used, \"system.secondary_stack%s\");\n+           (System_Secondary_Stack_Package_In_Closure,\n+            \"system.secondary_stack%s\");\n \n          --  Ditto for use of an SMP bareboard runtime\n "}, {"sha": "65cc8bc385317d5bc21002d1b7b7b6d1345953c6", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 33, "deletions": 29, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92219babbb18f8ee2590fe9e1040b0cc09d16b45/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92219babbb18f8ee2590fe9e1040b0cc09d16b45/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=92219babbb18f8ee2590fe9e1040b0cc09d16b45", "patch": "@@ -949,22 +949,16 @@ package body Rtsfind is\n       Install_Ghost_Region (None, Empty);\n       Install_SPARK_Mode   (None, Empty);\n \n-      --  Note if secondary stack is used\n-\n-      if U_Id = System_Secondary_Stack then\n-         Opt.Sec_Stack_Used := True;\n-      end if;\n-\n-      --  Otherwise we need to load the unit, First build unit name\n-      --  from the enumeration literal name in type RTU_Id.\n+      --  Otherwise we need to load the unit, First build unit name from the\n+      --  enumeration literal name in type RTU_Id.\n \n       U.Uname                := Get_Unit_Name (U_Id);\n       U.First_Implicit_With  := Empty;\n \n-      --  Now do the load call, note that setting Error_Node to Empty is\n-      --  a signal to Load_Unit that we will regard a failure to find the\n-      --  file as a fatal error, and that it should not output any kind\n-      --  of diagnostics, since we will take care of it here.\n+      --  Now do the load call, note that setting Error_Node to Empty is a\n+      --  signal to Load_Unit that we will regard a failure to find the file as\n+      --  a fatal error, and that it should not output any kind of diagnostics,\n+      --  since we will take care of it here.\n \n       --  We save style checking switches and turn off style checking for\n       --  loading the unit, since we don't want any style checking.\n@@ -1245,21 +1239,6 @@ package body Rtsfind is\n    ---------\n \n    function RTE (E : RE_Id) return Entity_Id is\n-      U_Id : constant RTU_Id := RE_Unit_Table (E);\n-      U    : RT_Unit_Table_Record renames RT_Unit_Table (U_Id);\n-\n-      Lib_Unit : Node_Id;\n-      Pkg_Ent  : Entity_Id;\n-      Ename    : Name_Id;\n-\n-      --  The following flag is used to disable front-end inlining when RTE\n-      --  is invoked. This prevents the analysis of other runtime bodies when\n-      --  a particular spec is loaded through Rtsfind. This is both efficient,\n-      --  and it prevents spurious visibility conflicts between use-visible\n-      --  user entities, and entities in run-time packages.\n-\n-      Save_Front_End_Inlining : Boolean;\n-\n       procedure Check_RPC;\n       --  Reject programs that make use of distribution features not supported\n       --  on the current target. Also check that the PCS is compatible with the\n@@ -1351,6 +1330,22 @@ package body Rtsfind is\n          return Ent;\n       end Find_Local_Entity;\n \n+      --  Local variables\n+\n+      U_Id : constant RTU_Id := RE_Unit_Table (E);\n+      U    : RT_Unit_Table_Record renames RT_Unit_Table (U_Id);\n+\n+      Ename    : Name_Id;\n+      Lib_Unit : Node_Id;\n+      Pkg_Ent  : Entity_Id;\n+\n+      Save_Front_End_Inlining : constant Boolean := Front_End_Inlining;\n+      --  This flag is used to disable front-end inlining when RTE is invoked.\n+      --  This prevents the analysis of other runtime bodies when a particular\n+      --  spec is loaded through Rtsfind. This is both efficient, and prevents\n+      --  spurious visibility conflicts between use-visible user entities, and\n+      --  entities in run-time packages.\n+\n    --  Start of processing for RTE\n \n    begin\n@@ -1372,7 +1367,6 @@ package body Rtsfind is\n          return Check_CRT (E, Find_Local_Entity (E));\n       end if;\n \n-      Save_Front_End_Inlining := Front_End_Inlining;\n       Front_End_Inlining := False;\n \n       --  Load unit if unit not previously loaded\n@@ -1435,9 +1429,19 @@ package body Rtsfind is\n       end if;\n \n    <<Found>>\n-      Maybe_Add_With (U);\n \n+      --  Record whether the secondary stack is in use in order to generate\n+      --  the proper binder code. No action is taken when the secondary stack\n+      --  is pulled within an ignored Ghost context because all this code will\n+      --  disappear.\n+\n+      if U_Id = System_Secondary_Stack and then Ghost_Mode /= Ignore then\n+         Sec_Stack_Used := True;\n+      end if;\n+\n+      Maybe_Add_With (U);\n       Front_End_Inlining := Save_Front_End_Inlining;\n+\n       return Check_CRT (E, RE_Table (E));\n    end RTE;\n "}]}