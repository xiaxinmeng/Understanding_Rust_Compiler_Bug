{"sha": "d12e8f597a8456fb3628807991d0996f23cfadb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyZThmNTk3YTg0NTZmYjM2Mjg4MDc5OTFkMDk5NmYyM2NmYWRiMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-17T17:25:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-08-17T17:25:32Z"}, "message": "tweak\n\nFrom-SVN: r21797", "tree": {"sha": "93bcb91bc56880f004cae8c80abd9f91545fd352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93bcb91bc56880f004cae8c80abd9f91545fd352"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d12e8f597a8456fb3628807991d0996f23cfadb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12e8f597a8456fb3628807991d0996f23cfadb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12e8f597a8456fb3628807991d0996f23cfadb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12e8f597a8456fb3628807991d0996f23cfadb2/comments", "author": null, "committer": null, "parents": [{"sha": "509087ae2b3c2e7122b687e98fe4dfa520d4fd41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509087ae2b3c2e7122b687e98fe4dfa520d4fd41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509087ae2b3c2e7122b687e98fe4dfa520d4fd41"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "44d36b99f230d46f21550148df2e12e58d886a38", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12e8f597a8456fb3628807991d0996f23cfadb2/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12e8f597a8456fb3628807991d0996f23cfadb2/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=d12e8f597a8456fb3628807991d0996f23cfadb2", "patch": "@@ -2368,7 +2368,7 @@ lvalue_type (arg)\n   tree type = TREE_TYPE (arg);\n   if (TREE_CODE (arg) == OVERLOAD)\n     type = unknown_type_node;\n-  if (TREE_CODE (type) != ARRAY_TYPE)\n+  else if (TREE_CODE (type) != ARRAY_TYPE)\n     type = cp_build_type_variant\n       (type, TREE_READONLY (arg), TREE_THIS_VOLATILE (arg));\n   return type;"}]}