{"sha": "b1e78e8577fcab0c0854f9b7884d6ce3290827ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFlNzhlODU3N2ZjYWIwYzA4NTRmOWI3ODg0ZDZjZTMyOTA4MjdlZA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-05-08T22:37:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-06T11:35:26Z"}, "message": "[Ada] Implement Time_IO.Image with Time_Zone\n\ngcc/ada/\n\n\t* libgnat/g-catiio.ads, libgnat/g-catiio.adb (Image): New\n\tfunction. It might seem like the local-time Image should be\n\timplemented in terms of the Time_Zone Image, but that would be\n\tfar harder to implement, so we do it the other way around.", "tree": {"sha": "6d7be26479878505bff0245471c9d4e0988db5cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7be26479878505bff0245471c9d4e0988db5cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1e78e8577fcab0c0854f9b7884d6ce3290827ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e78e8577fcab0c0854f9b7884d6ce3290827ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1e78e8577fcab0c0854f9b7884d6ce3290827ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e78e8577fcab0c0854f9b7884d6ce3290827ed/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58d94a32b4cfe6065b736cac38f73d9a8deaa5d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d94a32b4cfe6065b736cac38f73d9a8deaa5d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58d94a32b4cfe6065b736cac38f73d9a8deaa5d4"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "57854837198f169a4ea2f27626cc8bc05852c3bc", "filename": "gcc/ada/libgnat/g-catiio.adb", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e78e8577fcab0c0854f9b7884d6ce3290827ed/gcc%2Fada%2Flibgnat%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e78e8577fcab0c0854f9b7884d6ce3290827ed/gcc%2Fada%2Flibgnat%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-catiio.adb?ref=b1e78e8577fcab0c0854f9b7884d6ce3290827ed", "patch": "@@ -29,8 +29,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Calendar;            use Ada.Calendar;\n-with Ada.Calendar.Time_Zones;\n with Ada.Characters.Handling;\n with Ada.Strings.Unbounded;   use Ada.Strings.Unbounded;\n with Ada.Text_IO;\n@@ -209,6 +207,27 @@ package body GNAT.Calendar.Time_IO is\n    -- Image --\n    -----------\n \n+   function Image\n+     (Date      : Ada.Calendar.Time;\n+      Picture   : Picture_String;\n+      Time_Zone : Time_Zones.Time_Offset) return String\n+   is\n+      --  We subtract off the local time zone, and add in the requested\n+      --  Time_Zone, and then pass it on to the version of Image that uses\n+      --  the local time zone.\n+\n+      use Time_Zones;\n+      Local_TZ : constant Time_Offset := Local_Time_Offset (Date);\n+      Minute_Offset : constant Integer := Integer (Time_Zone - Local_TZ);\n+      Second_Offset : constant Integer := Minute_Offset * 60;\n+   begin\n+      return Image (Date + Duration (Second_Offset), Picture);\n+   end Image;\n+\n+   -----------\n+   -- Image --\n+   -----------\n+\n    function Image\n      (Date    : Ada.Calendar.Time;\n       Picture : Picture_String) return String"}, {"sha": "85b9bb6d952bfc00e4e62379e5968031c93cb9a2", "filename": "gcc/ada/libgnat/g-catiio.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1e78e8577fcab0c0854f9b7884d6ce3290827ed/gcc%2Fada%2Flibgnat%2Fg-catiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1e78e8577fcab0c0854f9b7884d6ce3290827ed/gcc%2Fada%2Flibgnat%2Fg-catiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-catiio.ads?ref=b1e78e8577fcab0c0854f9b7884d6ce3290827ed", "patch": "@@ -32,6 +32,8 @@\n --  This package augments standard Ada.Text_IO with facilities for input\n --  and output of time values in standardized format.\n \n+with Ada.Calendar.Time_Zones; use Ada.Calendar;\n+\n package GNAT.Calendar.Time_IO is\n \n    Picture_Error : exception;\n@@ -115,6 +117,13 @@ package GNAT.Calendar.Time_IO is\n    --  with format Picture. Raise Picture_Error if picture string is null or\n    --  has an incorrect format.\n \n+   function Image\n+     (Date      : Ada.Calendar.Time;\n+      Picture   : Picture_String;\n+      Time_Zone : Time_Zones.Time_Offset) return String;\n+   --  Same as previous Image, except it uses the specified time zone instead\n+   --  of the local time zone.\n+\n    function Value (Date : String) return Ada.Calendar.Time;\n    --  Parse the string Date, interpreted as a time representation in the\n    --  current local time zone, and return the corresponding Time value. The"}]}