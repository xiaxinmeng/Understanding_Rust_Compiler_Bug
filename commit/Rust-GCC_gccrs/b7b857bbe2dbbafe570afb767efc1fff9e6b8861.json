{"sha": "b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdiODU3YmJlMmRiYmFmZTU3MGFmYjc2N2VmYzFmZmY5ZTZiODg2MQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-06-09T10:21:19Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-09T10:21:19Z"}, "message": "Import from libffi 3.0.8:\n\n2009-06-08  Andrew Haley  <aph@redhat.com>\n\n\tImport from libffi 3.0.8:\n\n\t* doc/libffi.texi: New file.\n\t* doc/libffi.info: Likewise.\n\t* doc/stamp-vti: Likewise.\n\t* man/Makefile.am: New file.\n\t* man/ffi_call.3: New file.\n\n\t* Makefile.am (EXTRA_DIST): Add src/x86/darwin64.S,\n\tsrc/dlmalloc.c.\n\t(nodist_libffi_la_SOURCES): Add X86_FREEBSD.\n\n\t* configure.ac: Bump version to 3.0.8.\n\tparisc*-*-linux*: Add.\n\ti386-*-freebsd* | i386-*-openbsd*: Add.\n\tpowerpc-*-beos*: Add.\n\tAM_CONDITIONAL X86_FREEBSD: Add.\n\tAC_CONFIG_FILES: Add man/Makefile.\n\n\t* include/ffi.h.in (FFI_FN): Change void (*)() to void (*)(void).\n\nFrom-SVN: r148309", "tree": {"sha": "52255ff30684d11d27a4d9a528272b9dd3072e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52255ff30684d11d27a4d9a528272b9dd3072e2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dbbb7af5b4dd3ae01a9347081f4b486d3752160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dbbb7af5b4dd3ae01a9347081f4b486d3752160"}], "stats": {"total": 2194, "additions": 2089, "deletions": 105}, "files": [{"sha": "4138870b9e46e86bb7da02f3e43e02f198311015", "filename": "libffi/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -1,3 +1,26 @@\n+2009-06-08  Andrew Haley  <aph@redhat.com>\n+\n+\tImport from libffi 3.0.8:\n+\n+\t* doc/libffi.texi: New file.\n+\t* doc/libffi.info: Likewise.\n+\t* doc/stamp-vti: Likewise.\n+\t* man/Makefile.am: New file.\n+\t* man/ffi_call.3: New file.\n+\n+\t* Makefile.am (EXTRA_DIST): Add src/x86/darwin64.S,\n+\tsrc/dlmalloc.c.\n+\t(nodist_libffi_la_SOURCES): Add X86_FREEBSD.\n+\n+\t* configure.ac: Bump version to 3.0.8.\n+\tparisc*-*-linux*: Add.\n+\ti386-*-freebsd* | i386-*-openbsd*: Add.\n+\tpowerpc-*-beos*: Add.\n+\tAM_CONDITIONAL X86_FREEBSD: Add.\n+\tAC_CONFIG_FILES: Add man/Makefile.\n+\n+\t* include/ffi.h.in (FFI_FN): Change void (*)() to void (*)(void).\n+\n 2009-06-08  Andrew Haley  <aph@redhat.com>\n \n \t* README: Import from libffi 3.0.8."}, {"sha": "775961353dd41d0699e5becae14dd57cf08e566b", "filename": "libffi/Makefile.am", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -3,7 +3,7 @@\n AUTOMAKE_OPTIONS = foreign subdir-objects\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n-SUBDIRS = include testsuite\n+SUBDIRS = include testsuite man\n \n EXTRA_DIST = LICENSE ChangeLog.v1 ChangeLog.libgcj configure.host \\\n \tsrc/alpha/ffi.c src/alpha/osf.S src/alpha/ffitarget.h \\\n@@ -25,11 +25,13 @@ EXTRA_DIST = LICENSE ChangeLog.v1 ChangeLog.libgcj configure.host \\\n \tsrc/sh/ffi.c src/sh/sysv.S src/sh/ffitarget.h \\\n \tsrc/sh64/ffi.c src/sh64/sysv.S src/sh64/ffitarget.h \\\n \tsrc/sparc/v8.S src/sparc/v9.S src/sparc/ffitarget.h \\\n-\tsrc/sparc/ffi.c \\\n+\tsrc/sparc/ffi.c src/x86/darwin64.S \\\n \tsrc/x86/ffi.c src/x86/sysv.S src/x86/win32.S src/x86/darwin.S \\\n \tsrc/x86/ffi64.c src/x86/unix64.S src/x86/ffitarget.h \\\n \tsrc/pa/ffitarget.h src/pa/ffi.c src/pa/linux.S src/pa/hpux32.S \\\n-\tsrc/frv/ffi.c src/frv/eabi.S src/frv/ffitarget.h\n+\tsrc/frv/ffi.c src/frv/eabi.S src/frv/ffitarget.h src/dlmalloc.c\n+\n+info_TEXINFOS = doc/libffi.texi\n \n ## ################################################################\n \n@@ -90,6 +92,9 @@ endif\n if X86\n nodist_libffi_la_SOURCES += src/x86/ffi.c src/x86/sysv.S\n endif\n+if X86_FREEBSD\n+nodist_libffi_la_SOURCES += src/x86/ffi.c src/x86/freebsd.S\n+endif\n if X86_WIN32\n nodist_libffi_la_SOURCES += src/x86/ffi.c src/x86/win32.S\n endif"}, {"sha": "e15f8aa792c0baa52c42d04501846f82ddafd9c7", "filename": "libffi/Makefile.in", "status": "modified", "additions": 261, "deletions": 79, "changes": 340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -39,33 +39,35 @@ host_triplet = @host@\n target_triplet = @target@\n @MIPS_TRUE@am__append_1 = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n @X86_TRUE@am__append_2 = src/x86/ffi.c src/x86/sysv.S\n-@X86_WIN32_TRUE@am__append_3 = src/x86/ffi.c src/x86/win32.S\n-@X86_DARWIN_TRUE@am__append_4 = src/x86/ffi.c src/x86/darwin.S src/x86/ffi64.c src/x86/darwin64.S\n-@SPARC_TRUE@am__append_5 = src/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S\n-@ALPHA_TRUE@am__append_6 = src/alpha/ffi.c src/alpha/osf.S\n-@IA64_TRUE@am__append_7 = src/ia64/ffi.c src/ia64/unix.S\n-@M32R_TRUE@am__append_8 = src/m32r/sysv.S src/m32r/ffi.c\n-@M68K_TRUE@am__append_9 = src/m68k/ffi.c src/m68k/sysv.S\n-@POWERPC_TRUE@am__append_10 = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S src/powerpc/linux64.S src/powerpc/linux64_closure.S\n-@POWERPC_AIX_TRUE@am__append_11 = src/powerpc/ffi_darwin.c src/powerpc/aix.S src/powerpc/aix_closure.S\n-@POWERPC_DARWIN_TRUE@am__append_12 = src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/powerpc/darwin_closure.S\n-@POWERPC_FREEBSD_TRUE@am__append_13 = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S\n-@ARM_TRUE@am__append_14 = src/arm/sysv.S src/arm/ffi.c\n-@LIBFFI_CRIS_TRUE@am__append_15 = src/cris/sysv.S src/cris/ffi.c\n-@FRV_TRUE@am__append_16 = src/frv/eabi.S src/frv/ffi.c\n-@S390_TRUE@am__append_17 = src/s390/sysv.S src/s390/ffi.c\n-@X86_64_TRUE@am__append_18 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n-@SH_TRUE@am__append_19 = src/sh/sysv.S src/sh/ffi.c\n-@SH64_TRUE@am__append_20 = src/sh64/sysv.S src/sh64/ffi.c\n-@PA_LINUX_TRUE@am__append_21 = src/pa/linux.S src/pa/ffi.c\n-@PA_HPUX_TRUE@am__append_22 = src/pa/hpux32.S src/pa/ffi.c\n+@X86_FREEBSD_TRUE@am__append_3 = src/x86/ffi.c src/x86/freebsd.S\n+@X86_WIN32_TRUE@am__append_4 = src/x86/ffi.c src/x86/win32.S\n+@X86_DARWIN_TRUE@am__append_5 = src/x86/ffi.c src/x86/darwin.S src/x86/ffi64.c src/x86/darwin64.S\n+@SPARC_TRUE@am__append_6 = src/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S\n+@ALPHA_TRUE@am__append_7 = src/alpha/ffi.c src/alpha/osf.S\n+@IA64_TRUE@am__append_8 = src/ia64/ffi.c src/ia64/unix.S\n+@M32R_TRUE@am__append_9 = src/m32r/sysv.S src/m32r/ffi.c\n+@M68K_TRUE@am__append_10 = src/m68k/ffi.c src/m68k/sysv.S\n+@POWERPC_TRUE@am__append_11 = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S src/powerpc/linux64.S src/powerpc/linux64_closure.S\n+@POWERPC_AIX_TRUE@am__append_12 = src/powerpc/ffi_darwin.c src/powerpc/aix.S src/powerpc/aix_closure.S\n+@POWERPC_DARWIN_TRUE@am__append_13 = src/powerpc/ffi_darwin.c src/powerpc/darwin.S src/powerpc/darwin_closure.S\n+@POWERPC_FREEBSD_TRUE@am__append_14 = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S\n+@ARM_TRUE@am__append_15 = src/arm/sysv.S src/arm/ffi.c\n+@LIBFFI_CRIS_TRUE@am__append_16 = src/cris/sysv.S src/cris/ffi.c\n+@FRV_TRUE@am__append_17 = src/frv/eabi.S src/frv/ffi.c\n+@S390_TRUE@am__append_18 = src/s390/sysv.S src/s390/ffi.c\n+@X86_64_TRUE@am__append_19 = src/x86/ffi64.c src/x86/unix64.S src/x86/ffi.c src/x86/sysv.S\n+@SH_TRUE@am__append_20 = src/sh/sysv.S src/sh/ffi.c\n+@SH64_TRUE@am__append_21 = src/sh64/sysv.S src/sh64/ffi.c\n+@PA_LINUX_TRUE@am__append_22 = src/pa/linux.S src/pa/ffi.c\n+@PA_HPUX_TRUE@am__append_23 = src/pa/hpux32.S src/pa/ffi.c\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n \t$(srcdir)/../ltmain.sh $(srcdir)/../missing \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/Makefile.am \\\n-\t$(srcdir)/Makefile.in $(srcdir)/fficonfig.h.in \\\n-\t$(top_srcdir)/configure ChangeLog\n+\t$(srcdir)/Makefile.in $(srcdir)/doc/stamp-vti \\\n+\t$(srcdir)/doc/version.texi $(srcdir)/fficonfig.h.in \\\n+\t$(top_srcdir)/configure ChangeLog mdate-sh texinfo.tex\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n@@ -90,7 +92,7 @@ am__vpath_adj = case $$p in \\\n     *) f=$$p;; \\\n   esac;\n am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n-am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(infodir)\"\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n libffi_la_LIBADD =\n@@ -100,61 +102,62 @@ am_libffi_la_OBJECTS = src/debug.lo src/prep_cif.lo src/types.lo \\\n @MIPS_TRUE@am__objects_1 = src/mips/ffi.lo src/mips/o32.lo \\\n @MIPS_TRUE@\tsrc/mips/n32.lo\n @X86_TRUE@am__objects_2 = src/x86/ffi.lo src/x86/sysv.lo\n-@X86_WIN32_TRUE@am__objects_3 = src/x86/ffi.lo src/x86/win32.lo\n-@X86_DARWIN_TRUE@am__objects_4 = src/x86/ffi.lo src/x86/darwin.lo \\\n+@X86_FREEBSD_TRUE@am__objects_3 = src/x86/ffi.lo src/x86/freebsd.lo\n+@X86_WIN32_TRUE@am__objects_4 = src/x86/ffi.lo src/x86/win32.lo\n+@X86_DARWIN_TRUE@am__objects_5 = src/x86/ffi.lo src/x86/darwin.lo \\\n @X86_DARWIN_TRUE@\tsrc/x86/ffi64.lo src/x86/darwin64.lo\n-@SPARC_TRUE@am__objects_5 = src/sparc/ffi.lo src/sparc/v8.lo \\\n+@SPARC_TRUE@am__objects_6 = src/sparc/ffi.lo src/sparc/v8.lo \\\n @SPARC_TRUE@\tsrc/sparc/v9.lo\n-@ALPHA_TRUE@am__objects_6 = src/alpha/ffi.lo src/alpha/osf.lo\n-@IA64_TRUE@am__objects_7 = src/ia64/ffi.lo src/ia64/unix.lo\n-@M32R_TRUE@am__objects_8 = src/m32r/sysv.lo src/m32r/ffi.lo\n-@M68K_TRUE@am__objects_9 = src/m68k/ffi.lo src/m68k/sysv.lo\n-@POWERPC_TRUE@am__objects_10 = src/powerpc/ffi.lo src/powerpc/sysv.lo \\\n+@ALPHA_TRUE@am__objects_7 = src/alpha/ffi.lo src/alpha/osf.lo\n+@IA64_TRUE@am__objects_8 = src/ia64/ffi.lo src/ia64/unix.lo\n+@M32R_TRUE@am__objects_9 = src/m32r/sysv.lo src/m32r/ffi.lo\n+@M68K_TRUE@am__objects_10 = src/m68k/ffi.lo src/m68k/sysv.lo\n+@POWERPC_TRUE@am__objects_11 = src/powerpc/ffi.lo src/powerpc/sysv.lo \\\n @POWERPC_TRUE@\tsrc/powerpc/ppc_closure.lo \\\n @POWERPC_TRUE@\tsrc/powerpc/linux64.lo \\\n @POWERPC_TRUE@\tsrc/powerpc/linux64_closure.lo\n-@POWERPC_AIX_TRUE@am__objects_11 = src/powerpc/ffi_darwin.lo \\\n+@POWERPC_AIX_TRUE@am__objects_12 = src/powerpc/ffi_darwin.lo \\\n @POWERPC_AIX_TRUE@\tsrc/powerpc/aix.lo \\\n @POWERPC_AIX_TRUE@\tsrc/powerpc/aix_closure.lo\n-@POWERPC_DARWIN_TRUE@am__objects_12 = src/powerpc/ffi_darwin.lo \\\n+@POWERPC_DARWIN_TRUE@am__objects_13 = src/powerpc/ffi_darwin.lo \\\n @POWERPC_DARWIN_TRUE@\tsrc/powerpc/darwin.lo \\\n @POWERPC_DARWIN_TRUE@\tsrc/powerpc/darwin_closure.lo\n-@POWERPC_FREEBSD_TRUE@am__objects_13 = src/powerpc/ffi.lo \\\n+@POWERPC_FREEBSD_TRUE@am__objects_14 = src/powerpc/ffi.lo \\\n @POWERPC_FREEBSD_TRUE@\tsrc/powerpc/sysv.lo \\\n @POWERPC_FREEBSD_TRUE@\tsrc/powerpc/ppc_closure.lo\n-@ARM_TRUE@am__objects_14 = src/arm/sysv.lo src/arm/ffi.lo\n-@LIBFFI_CRIS_TRUE@am__objects_15 = src/cris/sysv.lo src/cris/ffi.lo\n-@FRV_TRUE@am__objects_16 = src/frv/eabi.lo src/frv/ffi.lo\n-@S390_TRUE@am__objects_17 = src/s390/sysv.lo src/s390/ffi.lo\n-@X86_64_TRUE@am__objects_18 = src/x86/ffi64.lo src/x86/unix64.lo \\\n+@ARM_TRUE@am__objects_15 = src/arm/sysv.lo src/arm/ffi.lo\n+@LIBFFI_CRIS_TRUE@am__objects_16 = src/cris/sysv.lo src/cris/ffi.lo\n+@FRV_TRUE@am__objects_17 = src/frv/eabi.lo src/frv/ffi.lo\n+@S390_TRUE@am__objects_18 = src/s390/sysv.lo src/s390/ffi.lo\n+@X86_64_TRUE@am__objects_19 = src/x86/ffi64.lo src/x86/unix64.lo \\\n @X86_64_TRUE@\tsrc/x86/ffi.lo src/x86/sysv.lo\n-@SH_TRUE@am__objects_19 = src/sh/sysv.lo src/sh/ffi.lo\n-@SH64_TRUE@am__objects_20 = src/sh64/sysv.lo src/sh64/ffi.lo\n-@PA_LINUX_TRUE@am__objects_21 = src/pa/linux.lo src/pa/ffi.lo\n-@PA_HPUX_TRUE@am__objects_22 = src/pa/hpux32.lo src/pa/ffi.lo\n+@SH_TRUE@am__objects_20 = src/sh/sysv.lo src/sh/ffi.lo\n+@SH64_TRUE@am__objects_21 = src/sh64/sysv.lo src/sh64/ffi.lo\n+@PA_LINUX_TRUE@am__objects_22 = src/pa/linux.lo src/pa/ffi.lo\n+@PA_HPUX_TRUE@am__objects_23 = src/pa/hpux32.lo src/pa/ffi.lo\n nodist_libffi_la_OBJECTS = $(am__objects_1) $(am__objects_2) \\\n \t$(am__objects_3) $(am__objects_4) $(am__objects_5) \\\n \t$(am__objects_6) $(am__objects_7) $(am__objects_8) \\\n \t$(am__objects_9) $(am__objects_10) $(am__objects_11) \\\n \t$(am__objects_12) $(am__objects_13) $(am__objects_14) \\\n \t$(am__objects_15) $(am__objects_16) $(am__objects_17) \\\n \t$(am__objects_18) $(am__objects_19) $(am__objects_20) \\\n-\t$(am__objects_21) $(am__objects_22)\n+\t$(am__objects_21) $(am__objects_22) $(am__objects_23)\n libffi_la_OBJECTS = $(am_libffi_la_OBJECTS) \\\n \t$(nodist_libffi_la_OBJECTS)\n libffi_convenience_la_LIBADD =\n-am__objects_23 = src/debug.lo src/prep_cif.lo src/types.lo \\\n+am__objects_24 = src/debug.lo src/prep_cif.lo src/types.lo \\\n \tsrc/raw_api.lo src/java_raw_api.lo src/closures.lo\n-am_libffi_convenience_la_OBJECTS = $(am__objects_23)\n-am__objects_24 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n+am_libffi_convenience_la_OBJECTS = $(am__objects_24)\n+am__objects_25 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n \t$(am__objects_4) $(am__objects_5) $(am__objects_6) \\\n \t$(am__objects_7) $(am__objects_8) $(am__objects_9) \\\n \t$(am__objects_10) $(am__objects_11) $(am__objects_12) \\\n \t$(am__objects_13) $(am__objects_14) $(am__objects_15) \\\n \t$(am__objects_16) $(am__objects_17) $(am__objects_18) \\\n \t$(am__objects_19) $(am__objects_20) $(am__objects_21) \\\n-\t$(am__objects_22)\n-nodist_libffi_convenience_la_OBJECTS = $(am__objects_24)\n+\t$(am__objects_22) $(am__objects_23)\n+nodist_libffi_convenience_la_OBJECTS = $(am__objects_25)\n libffi_convenience_la_OBJECTS = $(am_libffi_convenience_la_OBJECTS) \\\n \t$(nodist_libffi_convenience_la_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I.\n@@ -181,6 +184,18 @@ MULTIDIRS =\n MULTISUBDIR = \n MULTIDO = true\n MULTICLEAN = true\n+INFO_DEPS = $(srcdir)/doc/libffi.info\n+am__TEXINFO_TEX_DIR = $(srcdir)\n+DVIS = doc/libffi.dvi\n+PDFS = doc/libffi.pdf\n+PSS = doc/libffi.ps\n+HTMLS = doc/libffi.html\n+TEXINFOS = doc/libffi.texi\n+TEXI2DVI = texi2dvi\n+TEXI2PDF = $(TEXI2DVI) --pdf --batch\n+MAKEINFOHTML = $(MAKEINFO) --html\n+AM_MAKEINFOHTMLFLAGS = $(AM_MAKEINFOFLAGS)\n+DVIPS = dvips\n RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \thtml-recursive info-recursive install-data-recursive \\\n \tinstall-exec-recursive install-info-recursive \\\n@@ -313,6 +328,8 @@ X86_64_TRUE = @X86_64_TRUE@\n X86_DARWIN_FALSE = @X86_DARWIN_FALSE@\n X86_DARWIN_TRUE = @X86_DARWIN_TRUE@\n X86_FALSE = @X86_FALSE@\n+X86_FREEBSD_FALSE = @X86_FREEBSD_FALSE@\n+X86_FREEBSD_TRUE = @X86_FREEBSD_TRUE@\n X86_TRUE = @X86_TRUE@\n X86_WIN32_FALSE = @X86_WIN32_FALSE@\n X86_WIN32_TRUE = @X86_WIN32_TRUE@\n@@ -372,7 +389,7 @@ toolexecdir = @toolexecdir@\n toolexeclibdir = @toolexeclibdir@\n AUTOMAKE_OPTIONS = foreign subdir-objects\n ACLOCAL_AMFLAGS = -I .. -I ../config\n-SUBDIRS = include testsuite\n+SUBDIRS = include testsuite man\n EXTRA_DIST = LICENSE ChangeLog.v1 ChangeLog.libgcj configure.host \\\n \tsrc/alpha/ffi.c src/alpha/osf.S src/alpha/ffitarget.h \\\n \tsrc/arm/ffi.c src/arm/sysv.S src/arm/ffitarget.h \\\n@@ -393,12 +410,14 @@ EXTRA_DIST = LICENSE ChangeLog.v1 ChangeLog.libgcj configure.host \\\n \tsrc/sh/ffi.c src/sh/sysv.S src/sh/ffitarget.h \\\n \tsrc/sh64/ffi.c src/sh64/sysv.S src/sh64/ffitarget.h \\\n \tsrc/sparc/v8.S src/sparc/v9.S src/sparc/ffitarget.h \\\n-\tsrc/sparc/ffi.c \\\n+\tsrc/sparc/ffi.c src/x86/darwin64.S \\\n \tsrc/x86/ffi.c src/x86/sysv.S src/x86/win32.S src/x86/darwin.S \\\n \tsrc/x86/ffi64.c src/x86/unix64.S src/x86/ffitarget.h \\\n \tsrc/pa/ffitarget.h src/pa/ffi.c src/pa/linux.S src/pa/hpux32.S \\\n-\tsrc/frv/ffi.c src/frv/eabi.S src/frv/ffitarget.h\n+\tsrc/frv/ffi.c src/frv/eabi.S src/frv/ffitarget.h src/dlmalloc.c \\\n+\tlibtool-version ChangeLog.libffi\n \n+info_TEXINFOS = doc/libffi.texi\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -450,7 +469,7 @@ nodist_libffi_la_SOURCES = $(am__append_1) $(am__append_2) \\\n \t$(am__append_12) $(am__append_13) $(am__append_14) \\\n \t$(am__append_15) $(am__append_16) $(am__append_17) \\\n \t$(am__append_18) $(am__append_19) $(am__append_20) \\\n-\t$(am__append_21) $(am__append_22)\n+\t$(am__append_21) $(am__append_22) $(am__append_23)\n libffi_convenience_la_SOURCES = $(libffi_la_SOURCES)\n nodist_libffi_convenience_la_SOURCES = $(nodist_libffi_la_SOURCES)\n AM_CFLAGS = -Wall -g -fexceptions\n@@ -462,7 +481,7 @@ all: fficonfig.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n \n .SUFFIXES:\n-.SUFFIXES: .S .c .lo .o .obj\n+.SUFFIXES: .S .c .dvi .lo .o .obj .ps\n am--refresh:\n \t@:\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n@@ -583,6 +602,8 @@ src/x86/ffi.lo: src/x86/$(am__dirstamp) \\\n \tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/x86/sysv.lo: src/x86/$(am__dirstamp) \\\n \tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n+src/x86/freebsd.lo: src/x86/$(am__dirstamp) \\\n+\tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/x86/win32.lo: src/x86/$(am__dirstamp) \\\n \tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/x86/darwin.lo: src/x86/$(am__dirstamp) \\\n@@ -846,6 +867,8 @@ mostlyclean-compile:\n \t-rm -f src/x86/ffi.lo\n \t-rm -f src/x86/ffi64.$(OBJEXT)\n \t-rm -f src/x86/ffi64.lo\n+\t-rm -f src/x86/freebsd.$(OBJEXT)\n+\t-rm -f src/x86/freebsd.lo\n \t-rm -f src/x86/sysv.$(OBJEXT)\n \t-rm -f src/x86/sysv.lo\n \t-rm -f src/x86/unix64.$(OBJEXT)\n@@ -954,7 +977,127 @@ distclean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=distclean multi-clean # $(MAKE)\n maintainer-clean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=maintainer-clean multi-clean # $(MAKE)\n+doc/$(am__dirstamp):\n+\t@$(mkdir_p) doc\n+\t@: > doc/$(am__dirstamp)\n+\n+$(srcdir)/doc/libffi.info: doc/libffi.texi $(srcdir)/doc/version.texi\n+\trestore=: && backupdir=\"$(am__leading_dot)am$$$$\" && \\\n+\tam__cwd=`pwd` && cd $(srcdir) && \\\n+\trm -rf $$backupdir && mkdir $$backupdir && \\\n+\tif ($(MAKEINFO) --version) >/dev/null 2>&1; then \\\n+\t  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \\\n+\t    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \\\n+\t  done; \\\n+\telse :; fi && \\\n+\tcd \"$$am__cwd\"; \\\n+\tif $(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc \\\n+\t -o $@ $(srcdir)/doc/libffi.texi; \\\n+\tthen \\\n+\t  rc=0; \\\n+\t  cd $(srcdir); \\\n+\telse \\\n+\t  rc=$$?; \\\n+\t  cd $(srcdir) && \\\n+\t  $$restore $$backupdir/* `echo \"./$@\" | sed 's|[^/]*$$||'`; \\\n+\tfi; \\\n+\trm -rf $$backupdir; exit $$rc\n+\n+doc/libffi.dvi: doc/libffi.texi $(srcdir)/doc/version.texi doc/$(am__dirstamp)\n+\tTEXINPUTS=\"$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS\" \\\n+\tMAKEINFO='$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc' \\\n+\t$(TEXI2DVI) -o $@ `test -f 'doc/libffi.texi' || echo '$(srcdir)/'`doc/libffi.texi\n+\n+doc/libffi.pdf: doc/libffi.texi $(srcdir)/doc/version.texi doc/$(am__dirstamp)\n+\tTEXINPUTS=\"$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS\" \\\n+\tMAKEINFO='$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc' \\\n+\t$(TEXI2PDF) -o $@ `test -f 'doc/libffi.texi' || echo '$(srcdir)/'`doc/libffi.texi\n+\n+doc/libffi.html: doc/libffi.texi $(srcdir)/doc/version.texi doc/$(am__dirstamp)\n+\trm -rf $(@:.html=.htp)\n+\tif $(MAKEINFOHTML) $(AM_MAKEINFOHTMLFLAGS) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc \\\n+\t -o $(@:.html=.htp) `test -f 'doc/libffi.texi' || echo '$(srcdir)/'`doc/libffi.texi; \\\n+\tthen \\\n+\t  rm -rf $@; \\\n+\t  if test ! -d $(@:.html=.htp) && test -d $(@:.html=); then \\\n+\t    mv $(@:.html=) $@; else mv $(@:.html=.htp) $@; fi; \\\n+\telse \\\n+\t  if test ! -d $(@:.html=.htp) && test -d $(@:.html=); then \\\n+\t    rm -rf $(@:.html=); else rm -Rf $(@:.html=.htp) $@; fi; \\\n+\t  exit 1; \\\n+\tfi\n+$(srcdir)/doc/version.texi: @MAINTAINER_MODE_TRUE@ $(srcdir)/doc/stamp-vti\n+$(srcdir)/doc/stamp-vti: doc/libffi.texi $(top_srcdir)/configure\n+\ttest -f doc/$(am__dirstamp) || $(MAKE) doc/$(am__dirstamp)\n+\t@(dir=.; test -f ./doc/libffi.texi || dir=$(srcdir); \\\n+\tset `$(SHELL) $(srcdir)/mdate-sh $$dir/doc/libffi.texi`; \\\n+\techo \"@set UPDATED $$1 $$2 $$3\"; \\\n+\techo \"@set UPDATED-MONTH $$2 $$3\"; \\\n+\techo \"@set EDITION $(VERSION)\"; \\\n+\techo \"@set VERSION $(VERSION)\") > vti.tmp\n+\t@cmp -s vti.tmp $(srcdir)/doc/version.texi \\\n+\t  || (echo \"Updating $(srcdir)/doc/version.texi\"; \\\n+\t      cp vti.tmp $(srcdir)/doc/version.texi)\n+\t-@rm -f vti.tmp\n+\t@cp $(srcdir)/doc/version.texi $@\n+\n+mostlyclean-vti:\n+\t-rm -f vti.tmp\n+\n+maintainer-clean-vti:\n+@MAINTAINER_MODE_TRUE@\t-rm -f $(srcdir)/doc/stamp-vti $(srcdir)/doc/version.texi\n+.dvi.ps:\n+\tTEXINPUTS=\"$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS\" \\\n+\t$(DVIPS) -o $@ $<\n+\n uninstall-info-am:\n+\t@$(PRE_UNINSTALL)\n+\t@if (install-info --version && \\\n+\t     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \\\n+\t  list='$(INFO_DEPS)'; \\\n+\t  for file in $$list; do \\\n+\t    relfile=`echo \"$$file\" | sed 's|^.*/||'`; \\\n+\t    echo \" install-info --info-dir='$(DESTDIR)$(infodir)' --remove '$(DESTDIR)$(infodir)/$$relfile'\"; \\\n+\t    install-info --info-dir=\"$(DESTDIR)$(infodir)\" --remove \"$(DESTDIR)$(infodir)/$$relfile\"; \\\n+\t  done; \\\n+\telse :; fi\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(INFO_DEPS)'; \\\n+\tfor file in $$list; do \\\n+\t  relfile=`echo \"$$file\" | sed 's|^.*/||'`; \\\n+\t  relfile_i=`echo \"$$relfile\" | sed 's|\\.info$$||;s|$$|.i|'`; \\\n+\t  (if cd \"$(DESTDIR)$(infodir)\"; then \\\n+\t     echo \" cd '$(DESTDIR)$(infodir)' && rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]\"; \\\n+\t     rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]; \\\n+\t   else :; fi); \\\n+\tdone\n+\n+dist-info: $(INFO_DEPS)\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n+\tlist='$(INFO_DEPS)'; \\\n+\tfor base in $$list; do \\\n+\t  case $$base in \\\n+\t    $(srcdir)/*) base=`echo \"$$base\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+\t  esac; \\\n+\t  if test -f $$base; then d=.; else d=$(srcdir); fi; \\\n+\t  for file in $$d/$$base*; do \\\n+\t    relfile=`expr \"$$file\" : \"$$d/\\(.*\\)\"`; \\\n+\t    test -f $(distdir)/$$relfile || \\\n+\t      cp -p $$file $(distdir)/$$relfile; \\\n+\t  done; \\\n+\tdone\n+\n+mostlyclean-aminfo:\n+\t-rm -rf libffi.aux libffi.cp libffi.cps libffi.fn libffi.ky libffi.log \\\n+\t  libffi.pg libffi.tmp libffi.toc libffi.tp libffi.vr \\\n+\t  doc/libffi.dvi doc/libffi.pdf doc/libffi.ps doc/libffi.html\n+\n+maintainer-clean-aminfo:\n+\t@list='$(INFO_DEPS)'; for i in $$list; do \\\n+\t  i_i=`echo \"$$i\" | sed 's|\\.info$$||;s|$$|.i|'`; \\\n+\t  echo \" rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]\"; \\\n+\t  rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]; \\\n+\tdone\n \n # This directory's subdirectories are mostly independent; you can cd\n # into them and run `make' without going through this Makefile.\n@@ -1091,7 +1234,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/.. $(distdir)/../config $(distdir)/include $(distdir)/src/alpha $(distdir)/src/arm $(distdir)/src/cris $(distdir)/src/frv $(distdir)/src/ia64 $(distdir)/src/m32r $(distdir)/src/m68k $(distdir)/src/mips $(distdir)/src/pa $(distdir)/src/powerpc $(distdir)/src/s390 $(distdir)/src/sh $(distdir)/src/sh64 $(distdir)/src/sparc $(distdir)/src/x86\n+\t$(mkdir_p) $(distdir)/.. $(distdir)/../config $(distdir)/doc $(distdir)/include $(distdir)/src $(distdir)/src/alpha $(distdir)/src/arm $(distdir)/src/cris $(distdir)/src/frv $(distdir)/src/ia64 $(distdir)/src/m32r $(distdir)/src/m68k $(distdir)/src/mips $(distdir)/src/pa $(distdir)/src/powerpc $(distdir)/src/s390 $(distdir)/src/sh $(distdir)/src/sh64 $(distdir)/src/sparc $(distdir)/src/x86\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\\n@@ -1133,6 +1276,9 @@ distdir: $(DISTFILES)\n \t      || exit 1; \\\n \t  fi; \\\n \tdone\n+\t$(MAKE) $(AM_MAKEFLAGS) \\\n+\t  top_distdir=\"$(top_distdir)\" distdir=\"$(distdir)\" \\\n+\t  dist-info\n \t-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \\; -o \\\n \t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n \t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n@@ -1232,10 +1378,10 @@ distcleancheck: distclean\n \t       exit 1; } >&2\n check-am: all-am\n check: check-recursive\n-all-am: Makefile $(LTLIBRARIES) all-multi fficonfig.h\n+all-am: Makefile $(INFO_DEPS) $(LTLIBRARIES) all-multi fficonfig.h\n installdirs: installdirs-recursive\n installdirs-am:\n-\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\" \"$(DESTDIR)$(infodir)\"; do \\\n \t  test -z \"$$dir\" || $(mkdir_p) \"$$dir\"; \\\n \tdone\n install: install-recursive\n@@ -1258,6 +1404,7 @@ clean-generic:\n \n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-rm -f doc/$(am__dirstamp)\n \t-rm -f src/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f src/$(am__dirstamp)\n \t-rm -f src/alpha/$(DEPDIR)/$(am__dirstamp)\n@@ -1308,20 +1455,52 @@ distclean-am: clean-am distclean-compile distclean-generic \\\n \n dvi: dvi-recursive\n \n-dvi-am:\n+dvi-am: $(DVIS)\n \n html: html-recursive\n \n+html-am: $(HTMLS)\n+\n info: info-recursive\n \n-info-am:\n+info-am: $(INFO_DEPS)\n \n-install-data-am:\n+install-data-am: install-info-am\n \n install-exec-am: install-multi install-toolexeclibLTLIBRARIES\n \n install-info: install-info-recursive\n \n+install-info-am: $(INFO_DEPS)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(infodir)\" || $(mkdir_p) \"$(DESTDIR)$(infodir)\"\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n+\tlist='$(INFO_DEPS)'; \\\n+\tfor file in $$list; do \\\n+\t  case $$file in \\\n+\t    $(srcdir)/*) file=`echo \"$$file\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+\t  esac; \\\n+\t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  file_i=`echo \"$$file\" | sed 's|\\.info$$||;s|$$|.i|'`; \\\n+\t  for ifile in $$d/$$file $$d/$$file-[0-9] $$d/$$file-[0-9][0-9] \\\n+                       $$d/$$file_i[0-9] $$d/$$file_i[0-9][0-9] ; do \\\n+\t    if test -f $$ifile; then \\\n+\t      relfile=`echo \"$$ifile\" | sed 's|^.*/||'`; \\\n+\t      echo \" $(INSTALL_DATA) '$$ifile' '$(DESTDIR)$(infodir)/$$relfile'\"; \\\n+\t      $(INSTALL_DATA) \"$$ifile\" \"$(DESTDIR)$(infodir)/$$relfile\"; \\\n+\t    else : ; fi; \\\n+\t  done; \\\n+\tdone\n+\t@$(POST_INSTALL)\n+\t@if (install-info --version && \\\n+\t     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \\\n+\t  list='$(INFO_DEPS)'; \\\n+\t  for file in $$list; do \\\n+\t    relfile=`echo \"$$file\" | sed 's|^.*/||'`; \\\n+\t    echo \" install-info --info-dir='$(DESTDIR)$(infodir)' '$(DESTDIR)$(infodir)/$$relfile'\";\\\n+\t    install-info --info-dir=\"$(DESTDIR)$(infodir)\" \"$(DESTDIR)$(infodir)/$$relfile\" || :;\\\n+\t  done; \\\n+\telse : ; fi\n install-man:\n \n installcheck-am:\n@@ -1331,20 +1510,21 @@ maintainer-clean: maintainer-clean-multi maintainer-clean-recursive\n \t-rm -rf $(top_srcdir)/autom4te.cache\n \t-rm -rf src/$(DEPDIR) src/alpha/$(DEPDIR) src/arm/$(DEPDIR) src/cris/$(DEPDIR) src/frv/$(DEPDIR) src/ia64/$(DEPDIR) src/m32r/$(DEPDIR) src/m68k/$(DEPDIR) src/mips/$(DEPDIR) src/pa/$(DEPDIR) src/powerpc/$(DEPDIR) src/s390/$(DEPDIR) src/sh/$(DEPDIR) src/sh64/$(DEPDIR) src/sparc/$(DEPDIR) src/x86/$(DEPDIR)\n \t-rm -f Makefile\n-maintainer-clean-am: distclean-am maintainer-clean-generic\n+maintainer-clean-am: distclean-am maintainer-clean-aminfo \\\n+\tmaintainer-clean-generic maintainer-clean-vti\n \n mostlyclean: mostlyclean-multi mostlyclean-recursive\n \n-mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n-\tmostlyclean-libtool\n+mostlyclean-am: mostlyclean-aminfo mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool mostlyclean-vti\n \n pdf: pdf-recursive\n \n-pdf-am:\n+pdf-am: $(PDFS)\n \n ps: ps-recursive\n \n-ps-am:\n+ps-am: $(PSS)\n \n uninstall-am: uninstall-info-am uninstall-toolexeclibLTLIBRARIES\n \n@@ -1354,21 +1534,23 @@ uninstall-info: uninstall-info-recursive\n \tam--refresh check check-am clean clean-generic clean-libtool \\\n \tclean-multi clean-noinstLTLIBRARIES clean-recursive \\\n \tclean-toolexeclibLTLIBRARIES ctags ctags-recursive dist \\\n-\tdist-all dist-bzip2 dist-gzip dist-shar dist-tarZ dist-zip \\\n-\tdistcheck distclean distclean-compile distclean-generic \\\n-\tdistclean-hdr distclean-libtool distclean-multi \\\n-\tdistclean-recursive distclean-tags distcleancheck distdir \\\n-\tdistuninstallcheck dvi dvi-am html html-am info info-am \\\n-\tinstall install-am install-data install-data-am install-exec \\\n-\tinstall-exec-am install-info install-info-am install-man \\\n-\tinstall-multi install-strip install-toolexeclibLTLIBRARIES \\\n-\tinstallcheck installcheck-am installdirs installdirs-am \\\n-\tmaintainer-clean maintainer-clean-generic \\\n-\tmaintainer-clean-multi maintainer-clean-recursive mostlyclean \\\n+\tdist-all dist-bzip2 dist-gzip dist-info dist-shar dist-tarZ \\\n+\tdist-zip distcheck distclean distclean-compile \\\n+\tdistclean-generic distclean-hdr distclean-libtool \\\n+\tdistclean-multi distclean-recursive distclean-tags \\\n+\tdistcleancheck distdir distuninstallcheck dvi dvi-am html \\\n+\thtml-am info info-am install install-am install-data \\\n+\tinstall-data-am install-exec install-exec-am install-info \\\n+\tinstall-info-am install-man install-multi install-strip \\\n+\tinstall-toolexeclibLTLIBRARIES installcheck installcheck-am \\\n+\tinstalldirs installdirs-am maintainer-clean \\\n+\tmaintainer-clean-aminfo maintainer-clean-generic \\\n+\tmaintainer-clean-multi maintainer-clean-recursive \\\n+\tmaintainer-clean-vti mostlyclean mostlyclean-aminfo \\\n \tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n-\tmostlyclean-multi mostlyclean-recursive pdf pdf-am ps ps-am \\\n-\ttags tags-recursive uninstall uninstall-am uninstall-info-am \\\n-\tuninstall-toolexeclibLTLIBRARIES\n+\tmostlyclean-multi mostlyclean-recursive mostlyclean-vti pdf \\\n+\tpdf-am ps ps-am tags tags-recursive uninstall uninstall-am \\\n+\tuninstall-info-am uninstall-toolexeclibLTLIBRARIES\n \n \n # No install-html or install-pdf support in automake yet"}, {"sha": "05d3fab618e7f0720df2b87ac37c23eb1cb00407", "filename": "libffi/configure", "status": "modified", "additions": 40, "deletions": 17, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.59 for libffi 2.1.\n+# Generated by GNU Autoconf 2.59 for libffi 3.0.8.\n #\n # Report bugs to <http://gcc.gnu.org/bugs.html>.\n #\n@@ -418,8 +418,8 @@ SHELL=${CONFIG_SHELL-/bin/sh}\n # Identity of this package.\n PACKAGE_NAME='libffi'\n PACKAGE_TARNAME='libffi'\n-PACKAGE_VERSION='2.1'\n-PACKAGE_STRING='libffi 2.1'\n+PACKAGE_VERSION='3.0.8'\n+PACKAGE_STRING='libffi 3.0.8'\n PACKAGE_BUGREPORT='http://gcc.gnu.org/bugs.html'\n \n # Factoring default headers for most tests.\n@@ -459,7 +459,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CFLAGS CCAS CCASFLAGS LIBTOOL SED EGREP FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM LN_S OBJDUMP ac_ct_OBJDUMP AR ac_ct_AR RANLIB ac_ct_RANLIB lt_ECHO DSYMUTIL ac_ct_DSYMUTIL NMEDIT ac_ct_NMEDIT LIPO ac_ct_LIPO OTOOL ac_ct_OTOOL OTOOL64 ac_ct_OTOOL64 CPP CPPFLAGS MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT TESTSUBDIR_TRUE TESTSUBDIR_FALSE AM_RUNTESTFLAGS MIPS_TRUE MIPS_FALSE SPARC_TRUE SPARC_FALSE X86_TRUE X86_FALSE X86_WIN32_TRUE X86_WIN32_FALSE X86_DARWIN_TRUE X86_DARWIN_FALSE ALPHA_TRUE ALPHA_FALSE IA64_TRUE IA64_FALSE M32R_TRUE M32R_FALSE M68K_TRUE M68K_FALSE POWERPC_TRUE POWERPC_FALSE POWERPC_AIX_TRUE POWERPC_AIX_FALSE POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE POWERPC_FREEBSD_TRUE POWERPC_FREEBSD_FALSE ARM_TRUE ARM_FALSE LIBFFI_CRIS_TRUE LIBFFI_CRIS_FALSE FRV_TRUE FRV_FALSE S390_TRUE S390_FALSE X86_64_TRUE X86_64_FALSE SH_TRUE SH_FALSE SH64_TRUE SH64_FALSE PA_LINUX_TRUE PA_LINUX_FALSE PA_HPUX_TRUE PA_HPUX_FALSE PA64_HPUX_TRUE PA64_HPUX_FALSE ALLOCA HAVE_LONG_DOUBLE TARGET TARGETDIR toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CFLAGS CCAS CCASFLAGS LIBTOOL SED EGREP FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM LN_S OBJDUMP ac_ct_OBJDUMP AR ac_ct_AR RANLIB ac_ct_RANLIB lt_ECHO DSYMUTIL ac_ct_DSYMUTIL NMEDIT ac_ct_NMEDIT LIPO ac_ct_LIPO OTOOL ac_ct_OTOOL OTOOL64 ac_ct_OTOOL64 CPP CPPFLAGS MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT TESTSUBDIR_TRUE TESTSUBDIR_FALSE AM_RUNTESTFLAGS MIPS_TRUE MIPS_FALSE SPARC_TRUE SPARC_FALSE X86_TRUE X86_FALSE X86_FREEBSD_TRUE X86_FREEBSD_FALSE X86_WIN32_TRUE X86_WIN32_FALSE X86_DARWIN_TRUE X86_DARWIN_FALSE ALPHA_TRUE ALPHA_FALSE IA64_TRUE IA64_FALSE M32R_TRUE M32R_FALSE M68K_TRUE M68K_FALSE POWERPC_TRUE POWERPC_FALSE POWERPC_AIX_TRUE POWERPC_AIX_FALSE POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE POWERPC_FREEBSD_TRUE POWERPC_FREEBSD_FALSE ARM_TRUE ARM_FALSE LIBFFI_CRIS_TRUE LIBFFI_CRIS_FALSE FRV_TRUE FRV_FALSE S390_TRUE S390_FALSE X86_64_TRUE X86_64_FALSE SH_TRUE SH_FALSE SH64_TRUE SH64_FALSE PA_LINUX_TRUE PA_LINUX_FALSE PA_HPUX_TRUE PA_HPUX_FALSE PA64_HPUX_TRUE PA64_HPUX_FALSE ALLOCA HAVE_LONG_DOUBLE TARGET TARGETDIR toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n ac_pwd=`pwd`\n \n@@ -925,7 +925,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures libffi 2.1 to adapt to many kinds of systems.\n+\\`configure' configures libffi 3.0.8 to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -992,7 +992,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of libffi 2.1:\";;\n+     short | recursive ) echo \"Configuration of libffi 3.0.8:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -1133,7 +1133,7 @@ fi\n test -n \"$ac_init_help\" && exit 0\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-libffi configure 2.1\n+libffi configure 3.0.8\n generated by GNU Autoconf 2.59\n \n Copyright (C) 2003 Free Software Foundation, Inc.\n@@ -1147,7 +1147,7 @@ cat >&5 <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by libffi $as_me 2.1, which was\n+It was created by libffi $as_me 3.0.8, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   $ $0 $@\n@@ -1945,7 +1945,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='libffi'\n- VERSION='2.1'\n+ VERSION='3.0.8'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -11025,7 +11025,7 @@ case \"$host\" in\n \tTARGET=FRV; TARGETDIR=frv\n \t;;\n \n-  hppa*-*-linux*)\n+  hppa*-*-linux* | parisc*-*-linux*)\n \tTARGET=PA_LINUX; TARGETDIR=pa\n \t;;\n   hppa*64-*-hpux*)\n@@ -11035,6 +11035,9 @@ case \"$host\" in\n \tTARGET=PA_HPUX; TARGETDIR=pa\n \t;;\n \n+  i386-*-freebsd* | i386-*-openbsd*)\n+\tTARGET=X86_FREEBSD; TARGETDIR=x86\n+\t;;\n   i?86-win32* | i?86-*-cygwin* | i?86-*-mingw*)\n \tTARGET=X86_WIN32; TARGETDIR=x86\n \t;;\n@@ -11067,7 +11070,10 @@ case \"$host\" in\n \tTARGET=MIPS; TARGETDIR=mips\n \t;;\n \n-  powerpc*-*-linux*)\n+  powerpc*-*-linux* | powerpc-*-sysv*)\n+\tTARGET=POWERPC; TARGETDIR=powerpc\n+\t;;\n+  powerpc-*-beos*)\n \tTARGET=POWERPC; TARGETDIR=powerpc\n \t;;\n   powerpc-*-darwin*)\n@@ -11148,6 +11154,16 @@ fi\n \n \n \n+if test x$TARGET = xX86_FREEBSD; then\n+  X86_FREEBSD_TRUE=\n+  X86_FREEBSD_FALSE='#'\n+else\n+  X86_FREEBSD_TRUE='#'\n+  X86_FREEBSD_FALSE=\n+fi\n+\n+\n+\n if test x$TARGET = xX86_WIN32; then\n   X86_WIN32_TRUE=\n   X86_WIN32_FALSE='#'\n@@ -13445,7 +13461,7 @@ fi\n           ac_config_links=\"$ac_config_links include/ffitarget.h:src/$TARGETDIR/ffitarget.h\"\n \n \n-                                        ac_config_files=\"$ac_config_files include/Makefile include/ffi.h Makefile testsuite/Makefile\"\n+                                                  ac_config_files=\"$ac_config_files include/Makefile include/ffi.h Makefile testsuite/Makefile man/Makefile\"\n \n \n cat >confcache <<\\_ACEOF\n@@ -13588,6 +13604,13 @@ echo \"$as_me: error: conditional \\\"X86\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${X86_FREEBSD_TRUE}\" && test -z \"${X86_FREEBSD_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"X86_FREEBSD\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"X86_FREEBSD\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${X86_WIN32_TRUE}\" && test -z \"${X86_WIN32_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"X86_WIN32\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -13999,7 +14022,7 @@ _ASBOX\n } >&5\n cat >&5 <<_CSEOF\n \n-This file was extended by libffi $as_me 2.1, which was\n+This file was extended by libffi $as_me 3.0.8, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -14065,7 +14088,7 @@ _ACEOF\n \n cat >>$CONFIG_STATUS <<_ACEOF\n ac_cs_version=\"\\\\\n-libffi config.status 2.1\n+libffi config.status 3.0.8\n configured by $0, generated by GNU Autoconf 2.59,\n   with options \\\\\"`echo \"$ac_configure_args\" | sed 's/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n \n@@ -14175,9 +14198,6 @@ ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n-CXX=\"$CXX\"\n-GFORTRAN=\"$GFORTRAN\"\n-GCJ=\"$GCJ\"\n AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n \n@@ -14449,6 +14469,7 @@ do\n   \"include/ffi.h\" ) CONFIG_FILES=\"$CONFIG_FILES include/ffi.h\" ;;\n   \"Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n   \"testsuite/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES testsuite/Makefile\" ;;\n+  \"man/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES man/Makefile\" ;;\n   \"include/ffitarget.h\" ) CONFIG_LINKS=\"$CONFIG_LINKS include/ffitarget.h:src/$TARGETDIR/ffitarget.h\" ;;\n   \"default-1\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n   \"depfiles\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n@@ -14634,6 +14655,8 @@ s,@SPARC_TRUE@,$SPARC_TRUE,;t t\n s,@SPARC_FALSE@,$SPARC_FALSE,;t t\n s,@X86_TRUE@,$X86_TRUE,;t t\n s,@X86_FALSE@,$X86_FALSE,;t t\n+s,@X86_FREEBSD_TRUE@,$X86_FREEBSD_TRUE,;t t\n+s,@X86_FREEBSD_FALSE@,$X86_FREEBSD_FALSE,;t t\n s,@X86_WIN32_TRUE@,$X86_WIN32_TRUE,;t t\n s,@X86_WIN32_FALSE@,$X86_WIN32_FALSE,;t t\n s,@X86_DARWIN_TRUE@,$X86_DARWIN_TRUE,;t t"}, {"sha": "c0b42542bcb06b450855b153b1dfe6473685270c", "filename": "libffi/configure.ac", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -2,7 +2,7 @@ dnl Process this with autoconf to create configure\n \n AC_PREREQ(2.59)\n \n-AC_INIT([libffi], [2.1], [http://gcc.gnu.org/bugs.html])\n+AC_INIT([libffi], [3.0.8], [http://gcc.gnu.org/bugs.html])\n AC_CONFIG_HEADERS([fficonfig.h])\n \n AM_ENABLE_MULTILIB(, ..)\n@@ -63,7 +63,7 @@ case \"$host\" in\n \tTARGET=FRV; TARGETDIR=frv\n \t;;\n \n-  hppa*-*-linux*)\n+  hppa*-*-linux* | parisc*-*-linux*)\n \tTARGET=PA_LINUX; TARGETDIR=pa\n \t;;\n   hppa*64-*-hpux*)\n@@ -73,6 +73,9 @@ case \"$host\" in\n \tTARGET=PA_HPUX; TARGETDIR=pa\n \t;;\n \n+  i386-*-freebsd* | i386-*-openbsd*)\n+\tTARGET=X86_FREEBSD; TARGETDIR=x86\n+\t;;\n   i?86-win32* | i?86-*-cygwin* | i?86-*-mingw*)\n \tTARGET=X86_WIN32; TARGETDIR=x86\n \t;;\n@@ -105,7 +108,10 @@ case \"$host\" in\n \tTARGET=MIPS; TARGETDIR=mips\n \t;;\n \n-  powerpc*-*-linux*)\n+  powerpc*-*-linux* | powerpc-*-sysv*)\n+\tTARGET=POWERPC; TARGETDIR=powerpc\n+\t;;\n+  powerpc-*-beos*)\n \tTARGET=POWERPC; TARGETDIR=powerpc\n \t;;\n   powerpc-*-darwin*)\n@@ -155,6 +161,7 @@ fi\n AM_CONDITIONAL(MIPS, test x$TARGET = xMIPS)\n AM_CONDITIONAL(SPARC, test x$TARGET = xSPARC)\n AM_CONDITIONAL(X86, test x$TARGET = xX86)\n+AM_CONDITIONAL(X86_FREEBSD, test x$TARGET = xX86_FREEBSD)\n AM_CONDITIONAL(X86_WIN32, test x$TARGET = xX86_WIN32)\n AM_CONDITIONAL(X86_DARWIN, test x$TARGET = xX86_DARWIN)\n AM_CONDITIONAL(ALPHA, test x$TARGET = xALPHA)\n@@ -370,6 +377,6 @@ test -d src/$TARGETDIR || mkdir src/$TARGETDIR\n \n AC_CONFIG_LINKS(include/ffitarget.h:src/$TARGETDIR/ffitarget.h)\n \n-AC_CONFIG_FILES(include/Makefile include/ffi.h Makefile testsuite/Makefile)\n+AC_CONFIG_FILES(include/Makefile include/ffi.h Makefile testsuite/Makefile man/Makefile)\n \n AC_OUTPUT"}, {"sha": "87dee8a13ada7e5d227deb86d9345c0a5fe5cc45", "filename": "libffi/doc/libffi.info", "status": "added", "additions": 533, "deletions": 0, "changes": 533, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Flibffi.info", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Flibffi.info", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fdoc%2Flibffi.info?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,533 @@\n+This is doc/libffi.info, produced by makeinfo version 4.12 from\n+./doc/libffi.texi.\n+\n+This manual is for Libffi, a portable foreign-function interface\n+library.\n+\n+   Copyright (C) 2008 Red Hat, Inc.\n+\n+     Permission is granted to copy, distribute and/or modify this\n+     document under the terms of the GNU General Public License as\n+     published by the Free Software Foundation; either version 2, or\n+     (at your option) any later version.  A copy of the license is\n+     included in the section entitled \"GNU General Public License\".\n+\n+\n+INFO-DIR-SECTION\n+START-INFO-DIR-ENTRY\n+* libffi: (libffi).             Portable foreign-function interface library.\n+END-INFO-DIR-ENTRY\n+\n+\u001f\n+File: libffi.info,  Node: Top,  Next: Introduction,  Up: (dir)\n+\n+libffi\n+******\n+\n+This manual is for Libffi, a portable foreign-function interface\n+library.\n+\n+   Copyright (C) 2008 Red Hat, Inc.\n+\n+     Permission is granted to copy, distribute and/or modify this\n+     document under the terms of the GNU General Public License as\n+     published by the Free Software Foundation; either version 2, or\n+     (at your option) any later version.  A copy of the license is\n+     included in the section entitled \"GNU General Public License\".\n+\n+\n+* Menu:\n+\n+* Introduction::                What is libffi?\n+* Using libffi::                How to use libffi.\n+* Missing Features::            Things libffi can't do.\n+* Index::                       Index.\n+\n+\u001f\n+File: libffi.info,  Node: Introduction,  Next: Using libffi,  Prev: Top,  Up: Top\n+\n+1 What is libffi?\n+*****************\n+\n+Compilers for high level languages generate code that follow certain\n+conventions.  These conventions are necessary, in part, for separate\n+compilation to work.  One such convention is the \"calling convention\".\n+The calling convention is a set of assumptions made by the compiler\n+about where function arguments will be found on entry to a function.  A\n+calling convention also specifies where the return value for a function\n+is found.  The calling convention is also sometimes called the \"ABI\" or\n+\"Application Binary Interface\".  \n+\n+   Some programs may not know at the time of compilation what arguments\n+are to be passed to a function.  For instance, an interpreter may be\n+told at run-time about the number and types of arguments used to call a\n+given function.  `Libffi' can be used in such programs to provide a\n+bridge from the interpreter program to compiled code.\n+\n+   The `libffi' library provides a portable, high level programming\n+interface to various calling conventions.  This allows a programmer to\n+call any function specified by a call interface description at run time.\n+\n+   FFI stands for Foreign Function Interface.  A foreign function\n+interface is the popular name for the interface that allows code\n+written in one language to call code written in another language.  The\n+`libffi' library really only provides the lowest, machine dependent\n+layer of a fully featured foreign function interface.  A layer must\n+exist above `libffi' that handles type conversions for values passed\n+between the two languages.  \n+\n+\u001f\n+File: libffi.info,  Node: Using libffi,  Next: Missing Features,  Prev: Introduction,  Up: Top\n+\n+2 Using libffi\n+**************\n+\n+* Menu:\n+\n+* The Basics::                  The basic libffi API.\n+* Simple Example::              A simple example.\n+* Types::                       libffi type descriptions.\n+* Multiple ABIs::               Different passing styles on one platform.\n+* The Closure API::             Writing a generic function.\n+\n+\u001f\n+File: libffi.info,  Node: The Basics,  Next: Simple Example,  Up: Using libffi\n+\n+2.1 The Basics\n+==============\n+\n+`Libffi' assumes that you have a pointer to the function you wish to\n+call and that you know the number and types of arguments to pass it, as\n+well as the return type of the function.\n+\n+   The first thing you must do is create an `ffi_cif' object that\n+matches the signature of the function you wish to call.  This is a\n+separate step because it is common to make multiple calls using a\n+single `ffi_cif'.  The \"cif\" in `ffi_cif' stands for Call InterFace.\n+To prepare a call interface object, use the function `ffi_prep_cif'.  \n+\n+ -- Function: ffi_status ffi_prep_cif (ffi_cif *CIF, ffi_abi ABI,\n+          unsigned int NARGS, ffi_type *RTYPE, ffi_type **ARGTYPES)\n+     This initializes CIF according to the given parameters.\n+\n+     ABI is the ABI to use; normally `FFI_DEFAULT_ABI' is what you\n+     want.  *note Multiple ABIs:: for more information.\n+\n+     NARGS is the number of arguments that this function accepts.\n+     `libffi' does not yet handle varargs functions; see *note Missing\n+     Features:: for more information.\n+\n+     RTYPE is a pointer to an `ffi_type' structure that describes the\n+     return type of the function.  *Note Types::.\n+\n+     ARGTYPES is a vector of `ffi_type' pointers.  ARGTYPES must have\n+     NARGS elements.  If NARGS is 0, this argument is ignored.\n+\n+     `ffi_prep_cif' returns a `libffi' status code, of type\n+     `ffi_status'.  This will be either `FFI_OK' if everything worked\n+     properly; `FFI_BAD_TYPEDEF' if one of the `ffi_type' objects is\n+     incorrect; or `FFI_BAD_ABI' if the ABI parameter is invalid.\n+\n+   To call a function using an initialized `ffi_cif', use the\n+`ffi_call' function:\n+\n+ -- Function: void ffi_call (ffi_cif *CIF, void *FN, void *RVALUE, void\n+          **AVALUES)\n+     This calls the function FN according to the description given in\n+     CIF.  CIF must have already been prepared using `ffi_prep_cif'.\n+\n+     RVALUE is a pointer to a chunk of memory that will hold the result\n+     of the function call.  This must be large enough to hold the\n+     result and must be suitably aligned; it is the caller's\n+     responsibility to ensure this.  If CIF declares that the function\n+     returns `void' (using `ffi_type_void'), then RVALUE is ignored.\n+     If RVALUE is `NULL', then the return value is discarded.\n+\n+     AVALUES is a vector of `void *' pointers that point to the memory\n+     locations holding the argument values for a call.  If CIF declares\n+     that the function has no arguments (i.e., NARGS was 0), then\n+     AVALUES is ignored.\n+\n+\u001f\n+File: libffi.info,  Node: Simple Example,  Next: Types,  Prev: The Basics,  Up: Using libffi\n+\n+2.2 Simple Example\n+==================\n+\n+Here is a trivial example that calls `puts' a few times.\n+\n+     #include <stdio.h>\n+     #include <ffi.h>\n+\n+     int main()\n+     {\n+       ffi_cif cif;\n+       ffi_type *args[1];\n+       void *values[1];\n+       char *s;\n+       int rc;\n+\n+       /* Initialize the argument info vectors */\n+       args[0] = &ffi_type_pointer;\n+       values[0] = &s;\n+\n+       /* Initialize the cif */\n+       if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1,\n+     \t\t       &ffi_type_uint, args) == FFI_OK)\n+         {\n+           s = \"Hello World!\";\n+           ffi_call(&cif, puts, &rc, values);\n+           /* rc now holds the result of the call to puts */\n+\n+           /* values holds a pointer to the function's arg, so to\n+              call puts() again all we need to do is change the\n+              value of s */\n+           s = \"This is cool!\";\n+           ffi_call(&cif, puts, &rc, values);\n+         }\n+\n+       return 0;\n+     }\n+\n+\u001f\n+File: libffi.info,  Node: Types,  Next: Multiple ABIs,  Prev: Simple Example,  Up: Using libffi\n+\n+2.3 Types\n+=========\n+\n+* Menu:\n+\n+* Primitive Types::             Built-in types.\n+* Structures::                  Structure types.\n+* Type Example::                Structure type example.\n+\n+\u001f\n+File: libffi.info,  Node: Primitive Types,  Next: Structures,  Up: Types\n+\n+2.3.1 Primitive Types\n+---------------------\n+\n+`Libffi' provides a number of built-in type descriptors that can be\n+used to describe argument and return types:\n+\n+`ffi_type_void'\n+     The type `void'.  This cannot be used for argument types, only for\n+     return values.\n+\n+`ffi_type_uint8'\n+     An unsigned, 8-bit integer type.\n+\n+`ffi_type_sint8'\n+     A signed, 8-bit integer type.\n+\n+`ffi_type_uint16'\n+     An unsigned, 16-bit integer type.\n+\n+`ffi_type_sint16'\n+     A signed, 16-bit integer type.\n+\n+`ffi_type_uint32'\n+     An unsigned, 32-bit integer type.\n+\n+`ffi_type_sint32'\n+     A signed, 32-bit integer type.\n+\n+`ffi_type_uint64'\n+     An unsigned, 64-bit integer type.\n+\n+`ffi_type_sint64'\n+     A signed, 64-bit integer type.\n+\n+`ffi_type_float'\n+     The C `float' type.\n+\n+`ffi_type_double'\n+     The C `double' type.\n+\n+`ffi_type_uchar'\n+     The C `unsigned char' type.\n+\n+`ffi_type_schar'\n+     The C `signed char' type.  (Note that there is not an exact\n+     equivalent to the C `char' type in `libffi'; ordinarily you should\n+     either use `ffi_type_schar' or `ffi_type_uchar' depending on\n+     whether `char' is signed.)\n+\n+`ffi_type_ushort'\n+     The C `unsigned short' type.\n+\n+`ffi_type_sshort'\n+     The C `short' type.\n+\n+`ffi_type_uint'\n+     The C `unsigned int' type.\n+\n+`ffi_type_sint'\n+     The C `int' type.\n+\n+`ffi_type_ulong'\n+     The C `unsigned long' type.\n+\n+`ffi_type_slong'\n+     The C `long' type.\n+\n+`ffi_type_longdouble'\n+     On platforms that have a C `long double' type, this is defined.\n+     On other platforms, it is not.\n+\n+`ffi_type_pointer'\n+     A generic `void *' pointer.  You should use this for all pointers,\n+     regardless of their real type.\n+\n+   Each of these is of type `ffi_type', so you must take the address\n+when passing to `ffi_prep_cif'.\n+\n+\u001f\n+File: libffi.info,  Node: Structures,  Next: Type Example,  Prev: Primitive Types,  Up: Types\n+\n+2.3.2 Structures\n+----------------\n+\n+Although `libffi' has no special support for unions or bit-fields, it\n+is perfectly happy passing structures back and forth.  You must first\n+describe the structure to `libffi' by creating a new `ffi_type' object\n+for it.\n+\n+ -- ffi_type:\n+     The `ffi_type' has the following members:\n+    `size_t size'\n+          This is set by `libffi'; you should initialize it to zero.\n+\n+    `unsigned short alignment'\n+          This is set by `libffi'; you should initialize it to zero.\n+\n+    `unsigned short type'\n+          For a structure, this should be set to `FFI_TYPE_STRUCT'.\n+\n+    `ffi_type **elements'\n+          This is a `NULL'-terminated array of pointers to `ffi_type'\n+          objects.  There is one element per field of the struct.\n+\n+\u001f\n+File: libffi.info,  Node: Type Example,  Prev: Structures,  Up: Types\n+\n+2.3.3 Type Example\n+------------------\n+\n+The following example initializes a `ffi_type' object representing the\n+`tm' struct from Linux's `time.h'.\n+\n+   Here is how the struct is defined:\n+\n+     struct tm {\n+         int tm_sec;\n+         int tm_min;\n+         int tm_hour;\n+         int tm_mday;\n+         int tm_mon;\n+         int tm_year;\n+         int tm_wday;\n+         int tm_yday;\n+         int tm_isdst;\n+         /* Those are for future use. */\n+         long int __tm_gmtoff__;\n+         __const char *__tm_zone__;\n+     };\n+\n+   Here is the corresponding code to describe this struct to `libffi':\n+\n+         {\n+           ffi_type tm_type;\n+           ffi_type *tm_type_elements[12];\n+           int i;\n+\n+           tm_type.size = tm_type.alignment = 0;\n+           tm_type.elements = &tm_type_elements;\n+\n+           for (i = 0; i < 9; i++)\n+               tm_type_elements[i] = &ffi_type_sint;\n+\n+           tm_type_elements[9] = &ffi_type_slong;\n+           tm_type_elements[10] = &ffi_type_pointer;\n+           tm_type_elements[11] = NULL;\n+\n+           /* tm_type can now be used to represent tm argument types and\n+     \t return types for ffi_prep_cif() */\n+         }\n+\n+\u001f\n+File: libffi.info,  Node: Multiple ABIs,  Next: The Closure API,  Prev: Types,  Up: Using libffi\n+\n+2.4 Multiple ABIs\n+=================\n+\n+A given platform may provide multiple different ABIs at once.  For\n+instance, the x86 platform has both `stdcall' and `fastcall' functions.\n+\n+   `libffi' provides some support for this.  However, this is\n+necessarily platform-specific.\n+\n+\u001f\n+File: libffi.info,  Node: The Closure API,  Prev: Multiple ABIs,  Up: Using libffi\n+\n+2.5 The Closure API\n+===================\n+\n+`libffi' also provides a way to write a generic function - a function\n+that can accept and decode any combination of arguments.  This can be\n+useful when writing an interpreter, or to provide wrappers for\n+arbitrary functions.\n+\n+   This facility is called the \"closure API\".  Closures are not\n+supported on all platforms; you can check the `FFI_CLOSURES' define to\n+determine whether they are supported on the current platform.  \n+\n+   Because closures work by assembling a tiny function at runtime, they\n+require special allocation on platforms that have a non-executable\n+heap.  Memory management for closures is handled by a pair of functions:\n+\n+ -- Function: void *ffi_closure_alloc (size_t SIZE, void **CODE)\n+     Allocate a chunk of memory holding SIZE bytes.  This returns a\n+     pointer to the writable address, and sets *CODE to the\n+     corresponding executable address.\n+\n+     SIZE should be sufficient to hold a `ffi_closure' object.\n+\n+ -- Function: void ffi_closure_free (void *WRITABLE)\n+     Free memory allocated using `ffi_closure_alloc'.  The argument is\n+     the writable address that was returned.\n+\n+   Once you have allocated the memory for a closure, you must construct\n+a `ffi_cif' describing the function call.  Finally you can prepare the\n+closure function:\n+\n+ -- Function: ffi_status ffi_prep_closure_loc (ffi_closure *CLOSURE,\n+          ffi_cif *CIF, void (*FUN) (ffi_cif *CIF, void *RET, void\n+          **ARGS, void *USER_DATA), void *USER_DATA, void *CODELOC)\n+     Prepare a closure function.\n+\n+     CLOSURE is the address of a `ffi_closure' object; this is the\n+     writable address returned by `ffi_closure_alloc'.\n+\n+     CIF is the `ffi_cif' describing the function parameters.\n+\n+     USER_DATA is an arbitrary datum that is passed, uninterpreted, to\n+     your closure function.\n+\n+     CODELOC is the executable address returned by `ffi_closure_alloc'.\n+\n+     FUN is the function which will be called when the closure is\n+     invoked.  It is called with the arguments:\n+    CIF\n+          The `ffi_cif' passed to `ffi_prep_closure_loc'.\n+\n+    RET\n+          A pointer to the memory used for the function's return value.\n+          FUN must fill this, unless the function is declared as\n+          returning `void'.\n+\n+    ARGS\n+          A vector of pointers to memory holding the arguments to the\n+          function.\n+\n+    USER_DATA\n+          The same USER_DATA that was passed to `ffi_prep_closure_loc'.\n+\n+     `ffi_prep_closure_loc' will return `FFI_OK' if everything went ok,\n+     and something else on error.\n+\n+     After calling `ffi_prep_closure_loc', you can cast CODELOC to the\n+     appropriate pointer-to-function type.\n+\n+   You may see old code referring to `ffi_prep_closure'.  This function\n+is deprecated, as it cannot handle the need for separate writable and\n+executable addresses.\n+\n+\u001f\n+File: libffi.info,  Node: Missing Features,  Next: Index,  Prev: Using libffi,  Up: Top\n+\n+3 Missing Features\n+******************\n+\n+`libffi' is missing a few features.  We welcome patches to add support\n+for these.\n+\n+   * There is no support for calling varargs functions.  This may work\n+     on some platforms, depending on how the ABI is defined, but it is\n+     not reliable.\n+\n+   * There is no support for bit fields in structures.\n+\n+   * The closure API is\n+\n+   * The \"raw\" API is undocumented.\n+\n+\u001f\n+File: libffi.info,  Node: Index,  Prev: Missing Features,  Up: Top\n+\n+Index\n+*****\n+\n+\u0000\b[index\u0000\b]\n+* Menu:\n+\n+* :                                      Structures.           (line 12)\n+* ABI:                                   Introduction.         (line 13)\n+* Application Binary Interface:          Introduction.         (line 13)\n+* calling convention:                    Introduction.         (line 13)\n+* cif:                                   The Basics.           (line 14)\n+* closure API:                           The Closure API.      (line 13)\n+* closures:                              The Closure API.      (line 13)\n+* FFI:                                   Introduction.         (line 31)\n+* ffi_call:                              The Basics.           (line 41)\n+* ffi_closure_alloca:                    The Closure API.      (line 19)\n+* ffi_closure_free:                      The Closure API.      (line 26)\n+* FFI_CLOSURES:                          The Closure API.      (line 13)\n+* ffi_prep_cif:                          The Basics.           (line 16)\n+* ffi_prep_closure_loc:                  The Closure API.      (line 34)\n+* ffi_status <1>:                        The Closure API.      (line 37)\n+* ffi_status:                            The Basics.           (line 18)\n+* ffi_type:                              Structures.           (line 11)\n+* ffi_type_double:                       Primitive Types.      (line 41)\n+* ffi_type_float:                        Primitive Types.      (line 38)\n+* ffi_type_longdouble:                   Primitive Types.      (line 71)\n+* ffi_type_pointer:                      Primitive Types.      (line 75)\n+* ffi_type_schar:                        Primitive Types.      (line 47)\n+* ffi_type_sint:                         Primitive Types.      (line 62)\n+* ffi_type_sint16:                       Primitive Types.      (line 23)\n+* ffi_type_sint32:                       Primitive Types.      (line 29)\n+* ffi_type_sint64:                       Primitive Types.      (line 35)\n+* ffi_type_sint8:                        Primitive Types.      (line 17)\n+* ffi_type_slong:                        Primitive Types.      (line 68)\n+* ffi_type_sshort:                       Primitive Types.      (line 56)\n+* ffi_type_uchar:                        Primitive Types.      (line 44)\n+* ffi_type_uint:                         Primitive Types.      (line 59)\n+* ffi_type_uint16:                       Primitive Types.      (line 20)\n+* ffi_type_uint32:                       Primitive Types.      (line 26)\n+* ffi_type_uint64:                       Primitive Types.      (line 32)\n+* ffi_type_uint8:                        Primitive Types.      (line 14)\n+* ffi_type_ulong:                        Primitive Types.      (line 65)\n+* ffi_type_ushort:                       Primitive Types.      (line 53)\n+* ffi_type_void:                         Primitive Types.      (line 10)\n+* Foreign Function Interface:            Introduction.         (line 31)\n+* void <1>:                              The Closure API.      (line 20)\n+* void:                                  The Basics.           (line 43)\n+\n+\n+\u001f\n+Tag Table:\n+Node: Top\u007f670\n+Node: Introduction\u007f1406\n+Node: Using libffi\u007f3042\n+Node: The Basics\u007f3477\n+Node: Simple Example\u007f6084\n+Node: Types\u007f7111\n+Node: Primitive Types\u007f7394\n+Node: Structures\u007f9214\n+Node: Type Example\u007f10074\n+Node: Multiple ABIs\u007f11297\n+Node: The Closure API\u007f11668\n+Node: Missing Features\u007f14588\n+Node: Index\u007f15081\n+\u001f\n+End Tag Table"}, {"sha": "90c676afb9a37a42e5cecc5c66d6347579c06a48", "filename": "libffi/doc/libffi.texi", "status": "added", "additions": 541, "deletions": 0, "changes": 541, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Flibffi.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Flibffi.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fdoc%2Flibffi.texi?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,541 @@\n+\\input texinfo   @c -*-texinfo-*-\n+@c %**start of header\n+@setfilename libffi.info\n+@settitle libffi\n+@setchapternewpage off\n+@c %**end of header\n+\n+@c Merge the standard indexes into a single one.\n+@syncodeindex fn cp\n+@syncodeindex vr cp\n+@syncodeindex ky cp\n+@syncodeindex pg cp\n+@syncodeindex tp cp\n+\n+@include version.texi\n+\n+@copying\n+\n+This manual is for Libffi, a portable foreign-function interface\n+library.\n+\n+Copyright @copyright{} 2008 Red Hat, Inc.\n+\n+@quotation\n+Permission is granted to copy, distribute and/or modify this document\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 2, or (at your option) any\n+later version.  A copy of the license is included in the\n+section entitled ``GNU General Public License''.\n+\n+@end quotation\n+@end copying\n+\n+@dircategory\n+@direntry\n+* libffi: (libffi).             Portable foreign-function interface library.\n+@end direntry\n+\n+@titlepage\n+@title Libffi\n+@page\n+@vskip 0pt plus 1filll\n+@insertcopying\n+@end titlepage\n+\n+\n+@ifnottex\n+@node Top\n+@top libffi\n+\n+@insertcopying\n+\n+@menu\n+* Introduction::                What is libffi?\n+* Using libffi::                How to use libffi.\n+* Missing Features::            Things libffi can't do.\n+* Index::                       Index.\n+@end menu\n+\n+@end ifnottex\n+\n+\n+@node Introduction\n+@chapter What is libffi?\n+\n+Compilers for high level languages generate code that follow certain\n+conventions.  These conventions are necessary, in part, for separate\n+compilation to work.  One such convention is the @dfn{calling\n+convention}.  The calling convention is a set of assumptions made by\n+the compiler about where function arguments will be found on entry to\n+a function.  A calling convention also specifies where the return\n+value for a function is found.  The calling convention is also\n+sometimes called the @dfn{ABI} or @dfn{Application Binary Interface}.\n+@cindex calling convention\n+@cindex ABI\n+@cindex Application Binary Interface\n+\n+Some programs may not know at the time of compilation what arguments\n+are to be passed to a function.  For instance, an interpreter may be\n+told at run-time about the number and types of arguments used to call\n+a given function.  @samp{Libffi} can be used in such programs to\n+provide a bridge from the interpreter program to compiled code.\n+\n+The @samp{libffi} library provides a portable, high level programming\n+interface to various calling conventions.  This allows a programmer to\n+call any function specified by a call interface description at run\n+time.\n+\n+@acronym{FFI} stands for Foreign Function Interface.  A foreign\n+function interface is the popular name for the interface that allows\n+code written in one language to call code written in another language.\n+The @samp{libffi} library really only provides the lowest, machine\n+dependent layer of a fully featured foreign function interface.  A\n+layer must exist above @samp{libffi} that handles type conversions for\n+values passed between the two languages.\n+@cindex FFI\n+@cindex Foreign Function Interface\n+\n+\n+@node Using libffi\n+@chapter Using libffi\n+\n+@menu\n+* The Basics::                  The basic libffi API.\n+* Simple Example::              A simple example.\n+* Types::                       libffi type descriptions.\n+* Multiple ABIs::               Different passing styles on one platform.\n+* The Closure API::             Writing a generic function.\n+@end menu\n+\n+\n+@node The Basics\n+@section The Basics\n+\n+@samp{Libffi} assumes that you have a pointer to the function you wish\n+to call and that you know the number and types of arguments to pass\n+it, as well as the return type of the function.\n+\n+The first thing you must do is create an @code{ffi_cif} object that\n+matches the signature of the function you wish to call.  This is a\n+separate step because it is common to make multiple calls using a\n+single @code{ffi_cif}.  The @dfn{cif} in @code{ffi_cif} stands for\n+Call InterFace.  To prepare a call interface object, use the function\n+@code{ffi_prep_cif}.\n+@cindex cif\n+\n+@findex ffi_prep_cif\n+@defun ffi_status ffi_prep_cif (ffi_cif *@var{cif}, ffi_abi @var{abi}, unsigned int @var{nargs}, ffi_type *@var{rtype}, ffi_type **@var{argtypes})\n+This initializes @var{cif} according to the given parameters.\n+\n+@var{abi} is the ABI to use; normally @code{FFI_DEFAULT_ABI} is what\n+you want.  @ref{Multiple ABIs} for more information.\n+\n+@var{nargs} is the number of arguments that this function accepts.\n+@samp{libffi} does not yet handle varargs functions; see @ref{Missing\n+Features} for more information.\n+\n+@var{rtype} is a pointer to an @code{ffi_type} structure that\n+describes the return type of the function.  @xref{Types}.\n+\n+@var{argtypes} is a vector of @code{ffi_type} pointers.\n+@var{argtypes} must have @var{nargs} elements.  If @var{nargs} is 0,\n+this argument is ignored.\n+\n+@code{ffi_prep_cif} returns a @code{libffi} status code, of type\n+@code{ffi_status}.  This will be either @code{FFI_OK} if everything\n+worked properly; @code{FFI_BAD_TYPEDEF} if one of the @code{ffi_type}\n+objects is incorrect; or @code{FFI_BAD_ABI} if the @var{abi} parameter\n+is invalid.\n+@end defun\n+\n+\n+To call a function using an initialized @code{ffi_cif}, use the\n+@code{ffi_call} function:\n+\n+@findex ffi_call\n+@defun void ffi_call (ffi_cif *@var{cif}, void *@var{fn}, void *@var{rvalue}, void **@var{avalues})\n+This calls the function @var{fn} according to the description given in\n+@var{cif}.  @var{cif} must have already been prepared using\n+@code{ffi_prep_cif}.\n+\n+@var{rvalue} is a pointer to a chunk of memory that will hold the\n+result of the function call.  This must be large enough to hold the\n+result and must be suitably aligned; it is the caller's responsibility\n+to ensure this.  If @var{cif} declares that the function returns\n+@code{void} (using @code{ffi_type_void}), then @var{rvalue} is\n+ignored.  If @var{rvalue} is @samp{NULL}, then the return value is\n+discarded.\n+\n+@var{avalues} is a vector of @code{void *} pointers that point to the\n+memory locations holding the argument values for a call.  If @var{cif}\n+declares that the function has no arguments (i.e., @var{nargs} was 0),\n+then @var{avalues} is ignored.\n+@end defun\n+\n+\n+@node Simple Example\n+@section Simple Example\n+\n+Here is a trivial example that calls @code{puts} a few times.\n+\n+@example\n+#include <stdio.h>\n+#include <ffi.h>\n+\n+int main()\n+@{\n+  ffi_cif cif;\n+  ffi_type *args[1];\n+  void *values[1];\n+  char *s;\n+  int rc;\n+  \n+  /* Initialize the argument info vectors */    \n+  args[0] = &ffi_type_pointer;\n+  values[0] = &s;\n+  \n+  /* Initialize the cif */\n+  if (ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 1, \n+\t\t       &ffi_type_uint, args) == FFI_OK)\n+    @{\n+      s = \"Hello World!\";\n+      ffi_call(&cif, puts, &rc, values);\n+      /* rc now holds the result of the call to puts */\n+      \n+      /* values holds a pointer to the function's arg, so to \n+         call puts() again all we need to do is change the \n+         value of s */\n+      s = \"This is cool!\";\n+      ffi_call(&cif, puts, &rc, values);\n+    @}\n+  \n+  return 0;\n+@}\n+@end example\n+\n+\n+@node Types\n+@section Types\n+\n+@menu\n+* Primitive Types::             Built-in types.\n+* Structures::                  Structure types.\n+* Type Example::                Structure type example.\n+@end menu\n+\n+@node Primitive Types\n+@subsection Primitive Types\n+\n+@code{Libffi} provides a number of built-in type descriptors that can\n+be used to describe argument and return types:\n+\n+@table @code\n+@item ffi_type_void\n+@tindex ffi_type_void\n+The type @code{void}.  This cannot be used for argument types, only\n+for return values.\n+\n+@item ffi_type_uint8\n+@tindex ffi_type_uint8\n+An unsigned, 8-bit integer type.\n+\n+@item ffi_type_sint8\n+@tindex ffi_type_sint8\n+A signed, 8-bit integer type.\n+\n+@item ffi_type_uint16\n+@tindex ffi_type_uint16\n+An unsigned, 16-bit integer type.\n+\n+@item ffi_type_sint16\n+@tindex ffi_type_sint16\n+A signed, 16-bit integer type.\n+\n+@item ffi_type_uint32\n+@tindex ffi_type_uint32\n+An unsigned, 32-bit integer type.\n+\n+@item ffi_type_sint32\n+@tindex ffi_type_sint32\n+A signed, 32-bit integer type.\n+\n+@item ffi_type_uint64\n+@tindex ffi_type_uint64\n+An unsigned, 64-bit integer type.\n+\n+@item ffi_type_sint64\n+@tindex ffi_type_sint64\n+A signed, 64-bit integer type.\n+\n+@item ffi_type_float\n+@tindex ffi_type_float\n+The C @code{float} type.\n+\n+@item ffi_type_double\n+@tindex ffi_type_double\n+The C @code{double} type.\n+\n+@item ffi_type_uchar\n+@tindex ffi_type_uchar\n+The C @code{unsigned char} type.\n+\n+@item ffi_type_schar\n+@tindex ffi_type_schar\n+The C @code{signed char} type.  (Note that there is not an exact\n+equivalent to the C @code{char} type in @code{libffi}; ordinarily you\n+should either use @code{ffi_type_schar} or @code{ffi_type_uchar}\n+depending on whether @code{char} is signed.)\n+\n+@item ffi_type_ushort\n+@tindex ffi_type_ushort\n+The C @code{unsigned short} type.\n+\n+@item ffi_type_sshort\n+@tindex ffi_type_sshort\n+The C @code{short} type.\n+\n+@item ffi_type_uint\n+@tindex ffi_type_uint\n+The C @code{unsigned int} type.\n+\n+@item ffi_type_sint\n+@tindex ffi_type_sint\n+The C @code{int} type.\n+\n+@item ffi_type_ulong\n+@tindex ffi_type_ulong\n+The C @code{unsigned long} type.\n+\n+@item ffi_type_slong\n+@tindex ffi_type_slong\n+The C @code{long} type.\n+\n+@item ffi_type_longdouble\n+@tindex ffi_type_longdouble\n+On platforms that have a C @code{long double} type, this is defined.\n+On other platforms, it is not.\n+\n+@item ffi_type_pointer\n+@tindex ffi_type_pointer\n+A generic @code{void *} pointer.  You should use this for all\n+pointers, regardless of their real type.\n+@end table\n+\n+Each of these is of type @code{ffi_type}, so you must take the address\n+when passing to @code{ffi_prep_cif}.\n+\n+\n+@node Structures\n+@subsection Structures\n+\n+Although @samp{libffi} has no special support for unions or\n+bit-fields, it is perfectly happy passing structures back and forth.\n+You must first describe the structure to @samp{libffi} by creating a\n+new @code{ffi_type} object for it.\n+\n+@tindex ffi_type\n+@deftp ffi_type\n+The @code{ffi_type} has the following members:\n+@table @code\n+@item size_t size\n+This is set by @code{libffi}; you should initialize it to zero.\n+\n+@item unsigned short alignment\n+This is set by @code{libffi}; you should initialize it to zero.\n+\n+@item unsigned short type\n+For a structure, this should be set to @code{FFI_TYPE_STRUCT}.\n+\n+@item ffi_type **elements\n+This is a @samp{NULL}-terminated array of pointers to @code{ffi_type}\n+objects.  There is one element per field of the struct.\n+@end table\n+@end deftp\n+\n+\n+@node Type Example\n+@subsection Type Example\n+\n+The following example initializes a @code{ffi_type} object\n+representing the @code{tm} struct from Linux's @file{time.h}.\n+\n+Here is how the struct is defined:\n+\n+@example\n+struct tm @{\n+    int tm_sec;\n+    int tm_min;\n+    int tm_hour;\n+    int tm_mday;\n+    int tm_mon;\n+    int tm_year;\n+    int tm_wday;\n+    int tm_yday;\n+    int tm_isdst;\n+    /* Those are for future use. */\n+    long int __tm_gmtoff__;\n+    __const char *__tm_zone__;\n+@};\n+@end example\n+\n+Here is the corresponding code to describe this struct to\n+@code{libffi}:\n+\n+@example\n+    @{\n+      ffi_type tm_type;\n+      ffi_type *tm_type_elements[12];\n+      int i;\n+\n+      tm_type.size = tm_type.alignment = 0;\n+      tm_type.elements = &tm_type_elements;\n+    \n+      for (i = 0; i < 9; i++)\n+          tm_type_elements[i] = &ffi_type_sint;\n+\n+      tm_type_elements[9] = &ffi_type_slong;\n+      tm_type_elements[10] = &ffi_type_pointer;\n+      tm_type_elements[11] = NULL;\n+\n+      /* tm_type can now be used to represent tm argument types and\n+\t return types for ffi_prep_cif() */\n+    @}\n+@end example\n+\n+\n+@node Multiple ABIs\n+@section Multiple ABIs\n+\n+A given platform may provide multiple different ABIs at once.  For\n+instance, the x86 platform has both @samp{stdcall} and @samp{fastcall}\n+functions.\n+\n+@code{libffi} provides some support for this.  However, this is\n+necessarily platform-specific.\n+\n+@c FIXME: document the platforms\n+\n+@node The Closure API\n+@section The Closure API\n+\n+@code{libffi} also provides a way to write a generic function -- a\n+function that can accept and decode any combination of arguments.\n+This can be useful when writing an interpreter, or to provide wrappers\n+for arbitrary functions.\n+\n+This facility is called the @dfn{closure API}.  Closures are not\n+supported on all platforms; you can check the @code{FFI_CLOSURES}\n+define to determine whether they are supported on the current\n+platform.\n+@cindex closures\n+@cindex closure API\n+@findex FFI_CLOSURES\n+\n+Because closures work by assembling a tiny function at runtime, they\n+require special allocation on platforms that have a non-executable\n+heap.  Memory management for closures is handled by a pair of\n+functions:\n+\n+@findex ffi_closure_alloca\n+@defun void *ffi_closure_alloc (size_t @var{size}, void **@var{code})\n+Allocate a chunk of memory holding @var{size} bytes.  This returns a\n+pointer to the writable address, and sets *@var{code} to the\n+corresponding executable address.\n+\n+@var{size} should be sufficient to hold a @code{ffi_closure} object.\n+@end defun\n+\n+@findex ffi_closure_free\n+@defun void ffi_closure_free (void *@var{writable})\n+Free memory allocated using @code{ffi_closure_alloc}.  The argument is\n+the writable address that was returned.\n+@end defun\n+\n+\n+Once you have allocated the memory for a closure, you must construct a\n+@code{ffi_cif} describing the function call.  Finally you can prepare\n+the closure function:\n+\n+@findex ffi_prep_closure_loc\n+@defun ffi_status ffi_prep_closure_loc (ffi_closure *@var{closure}, ffi_cif *@var{cif}, void (*@var{fun}) (ffi_cif *@var{cif}, void *@var{ret}, void **@var{args}, void *@var{user_data}), void *@var{user_data}, void *@var{codeloc})\n+Prepare a closure function.\n+\n+@var{closure} is the address of a @code{ffi_closure} object; this is\n+the writable address returned by @code{ffi_closure_alloc}.\n+\n+@var{cif} is the @code{ffi_cif} describing the function parameters.\n+\n+@var{user_data} is an arbitrary datum that is passed, uninterpreted,\n+to your closure function.\n+\n+@var{codeloc} is the executable address returned by\n+@code{ffi_closure_alloc}.\n+\n+@var{fun} is the function which will be called when the closure is\n+invoked.  It is called with the arguments:\n+@table @var\n+@item cif\n+The @code{ffi_cif} passed to @code{ffi_prep_closure_loc}.\n+\n+@item ret\n+A pointer to the memory used for the function's return value.\n+@var{fun} must fill this, unless the function is declared as returning\n+@code{void}.\n+@c FIXME: is this NULL for void-returning functions?\n+\n+@item args\n+A vector of pointers to memory holding the arguments to the function.\n+\n+@item user_data\n+The same @var{user_data} that was passed to\n+@code{ffi_prep_closure_loc}.\n+@end table\n+\n+@code{ffi_prep_closure_loc} will return @code{FFI_OK} if everything\n+went ok, and something else on error.\n+@c FIXME: what?\n+\n+After calling @code{ffi_prep_closure_loc}, you can cast @var{codeloc}\n+to the appropriate pointer-to-function type.\n+@end defun\n+\n+@c FIXME: example\n+\n+You may see old code referring to @code{ffi_prep_closure}.  This\n+function is deprecated, as it cannot handle the need for separate\n+writable and executable addresses.\n+\n+\n+@node Missing Features\n+@chapter Missing Features\n+\n+@code{libffi} is missing a few features.  We welcome patches to add\n+support for these.\n+\n+@itemize @bullet\n+@item\n+There is no support for calling varargs functions.  This may work on\n+some platforms, depending on how the ABI is defined, but it is not\n+reliable.\n+\n+@item\n+There is no support for bit fields in structures.\n+\n+@item\n+The closure API is\n+\n+@item\n+The ``raw'' API is undocumented.\n+@c argument promotion?\n+@c unions?\n+@c anything else?\n+@end itemize\n+\n+\n+@node Index\n+@unnumbered Index\n+\n+@printindex cp\n+\n+@bye"}, {"sha": "81d0b79d2d8af4fbce01aef9f8bf9787d68431ca", "filename": "libffi/doc/stamp-vti", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Fstamp-vti", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Fstamp-vti", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fdoc%2Fstamp-vti?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,4 @@\n+@set UPDATED 14 February 2008\n+@set UPDATED-MONTH February 2008\n+@set EDITION 3.0.8\n+@set VERSION 3.0.8"}, {"sha": "81d0b79d2d8af4fbce01aef9f8bf9787d68431ca", "filename": "libffi/doc/version.texi", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Fversion.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fdoc%2Fversion.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fdoc%2Fversion.texi?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,4 @@\n+@set UPDATED 14 February 2008\n+@set UPDATED-MONTH February 2008\n+@set EDITION 3.0.8\n+@set VERSION 3.0.8"}, {"sha": "e18baecc11b58604b1fbb6316005a6ff4eda6d4a", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -181,6 +181,8 @@ X86_64_TRUE = @X86_64_TRUE@\n X86_DARWIN_FALSE = @X86_DARWIN_FALSE@\n X86_DARWIN_TRUE = @X86_DARWIN_TRUE@\n X86_FALSE = @X86_FALSE@\n+X86_FREEBSD_FALSE = @X86_FREEBSD_FALSE@\n+X86_FREEBSD_TRUE = @X86_FREEBSD_TRUE@\n X86_TRUE = @X86_TRUE@\n X86_WIN32_FALSE = @X86_WIN32_FALSE@\n X86_WIN32_TRUE = @X86_WIN32_TRUE@"}, {"sha": "1a015ae50f19047da7c4b58e0015cbff93d60ae1", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------*-C-*-\n-   libffi @VERSION@ - Copyright (c) 1996-2003, 2007  Red Hat, Inc.\n+   libffi @VERSION@ - Copyright (c) 1996-2003, 2007, 2008  Red Hat, Inc.\n \n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n@@ -354,7 +354,7 @@ void ffi_call(ffi_cif *cif,\n \t      void **avalue);\n \n /* Useful for eliminating compiler warnings */\n-#define FFI_FN(f) ((void (*)())f)\n+#define FFI_FN(f) ((void (*)(void))f)\n \n /* ---- Definitions shared with assembly code ---------------------------- */\n "}, {"sha": "25192774887b313893a01c5259233d90ab1db8b4", "filename": "libffi/man/Makefile.am", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.am?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,8 @@\n+## Process this with automake to create Makefile.in\n+\n+AUTOMAKE_OPTIONS=foreign\n+\n+EXTRA_DIST = ffi.3 ffi_call.3 ffi_prep_cif.3\n+\n+man_MANS = ffi.3 ffi_call.3 ffi_prep_cif.3\n+"}, {"sha": "e5e36bb4f1a3147adbf0f31206093fccbdf9175a", "filename": "libffi/man/Makefile.in", "status": "added", "additions": 450, "deletions": 0, "changes": 450, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2FMakefile.in?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,450 @@\n+# Makefile.in generated by automake 1.9.6 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+srcdir = @srcdir@\n+top_srcdir = @top_srcdir@\n+VPATH = @srcdir@\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+top_builddir = ..\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+INSTALL = @INSTALL@\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+subdir = man\n+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../config/proginstall.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n+\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n+\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n+CONFIG_HEADER = $(top_builddir)/fficonfig.h\n+CONFIG_CLEAN_FILES =\n+SOURCES =\n+DIST_SOURCES =\n+man3dir = $(mandir)/man3\n+am__installdirs = \"$(DESTDIR)$(man3dir)\"\n+NROFF = nroff\n+MANS = $(man_MANS)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+ACLOCAL = @ACLOCAL@\n+ALLOCA = @ALLOCA@\n+ALPHA_FALSE = @ALPHA_FALSE@\n+ALPHA_TRUE = @ALPHA_TRUE@\n+AMDEP_FALSE = @AMDEP_FALSE@\n+AMDEP_TRUE = @AMDEP_TRUE@\n+AMTAR = @AMTAR@\n+AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n+AR = @AR@\n+ARM_FALSE = @ARM_FALSE@\n+ARM_TRUE = @ARM_TRUE@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+CC = @CC@\n+CCAS = @CCAS@\n+CCASFLAGS = @CCASFLAGS@\n+CCDEPMODE = @CCDEPMODE@\n+CFLAGS = @CFLAGS@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DEPDIR = @DEPDIR@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EXEEXT = @EXEEXT@\n+FGREP = @FGREP@\n+FRV_FALSE = @FRV_FALSE@\n+FRV_TRUE = @FRV_TRUE@\n+GREP = @GREP@\n+HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n+IA64_FALSE = @IA64_FALSE@\n+IA64_TRUE = @IA64_TRUE@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n+LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBOBJS = @LTLIBOBJS@\n+M32R_FALSE = @M32R_FALSE@\n+M32R_TRUE = @M32R_TRUE@\n+M68K_FALSE = @M68K_FALSE@\n+M68K_TRUE = @M68K_TRUE@\n+MAINT = @MAINT@\n+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n+MAKEINFO = @MAKEINFO@\n+MIPS_FALSE = @MIPS_FALSE@\n+MIPS_TRUE = @MIPS_TRUE@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PA64_HPUX_FALSE = @PA64_HPUX_FALSE@\n+PA64_HPUX_TRUE = @PA64_HPUX_TRUE@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+PA_HPUX_FALSE = @PA_HPUX_FALSE@\n+PA_HPUX_TRUE = @PA_HPUX_TRUE@\n+PA_LINUX_FALSE = @PA_LINUX_FALSE@\n+PA_LINUX_TRUE = @PA_LINUX_TRUE@\n+POWERPC_AIX_FALSE = @POWERPC_AIX_FALSE@\n+POWERPC_AIX_TRUE = @POWERPC_AIX_TRUE@\n+POWERPC_DARWIN_FALSE = @POWERPC_DARWIN_FALSE@\n+POWERPC_DARWIN_TRUE = @POWERPC_DARWIN_TRUE@\n+POWERPC_FALSE = @POWERPC_FALSE@\n+POWERPC_FREEBSD_FALSE = @POWERPC_FREEBSD_FALSE@\n+POWERPC_FREEBSD_TRUE = @POWERPC_FREEBSD_TRUE@\n+POWERPC_TRUE = @POWERPC_TRUE@\n+RANLIB = @RANLIB@\n+S390_FALSE = @S390_FALSE@\n+S390_TRUE = @S390_TRUE@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SH64_FALSE = @SH64_FALSE@\n+SH64_TRUE = @SH64_TRUE@\n+SHELL = @SHELL@\n+SH_FALSE = @SH_FALSE@\n+SH_TRUE = @SH_TRUE@\n+SPARC_FALSE = @SPARC_FALSE@\n+SPARC_TRUE = @SPARC_TRUE@\n+STRIP = @STRIP@\n+TARGET = @TARGET@\n+TARGETDIR = @TARGETDIR@\n+TESTSUBDIR_FALSE = @TESTSUBDIR_FALSE@\n+TESTSUBDIR_TRUE = @TESTSUBDIR_TRUE@\n+VERSION = @VERSION@\n+X86_64_FALSE = @X86_64_FALSE@\n+X86_64_TRUE = @X86_64_TRUE@\n+X86_DARWIN_FALSE = @X86_DARWIN_FALSE@\n+X86_DARWIN_TRUE = @X86_DARWIN_TRUE@\n+X86_FALSE = @X86_FALSE@\n+X86_FREEBSD_FALSE = @X86_FREEBSD_FALSE@\n+X86_FREEBSD_TRUE = @X86_FREEBSD_TRUE@\n+X86_TRUE = @X86_TRUE@\n+X86_WIN32_FALSE = @X86_WIN32_FALSE@\n+X86_WIN32_TRUE = @X86_WIN32_TRUE@\n+ac_ct_AR = @ac_ct_AR@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_DSYMUTIL = @ac_ct_DSYMUTIL@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+ac_ct_LIPO = @ac_ct_LIPO@\n+ac_ct_NMEDIT = @ac_ct_NMEDIT@\n+ac_ct_OBJDUMP = @ac_ct_OBJDUMP@\n+ac_ct_OTOOL = @ac_ct_OTOOL@\n+ac_ct_OTOOL64 = @ac_ct_OTOOL64@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__include = @am__include@\n+am__leading_dot = @am__leading_dot@\n+am__quote = @am__quote@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+datadir = @datadir@\n+exec_prefix = @exec_prefix@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+localstatedir = @localstatedir@\n+lt_ECHO = @lt_ECHO@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+multi_basedir = @multi_basedir@\n+oldincludedir = @oldincludedir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_os = @target_os@\n+target_vendor = @target_vendor@\n+toolexecdir = @toolexecdir@\n+toolexeclibdir = @toolexeclibdir@\n+AUTOMAKE_OPTIONS = foreign\n+EXTRA_DIST = ffi.3 ffi_call.3 ffi_prep_cif.3\n+man_MANS = ffi.3 ffi_call.3 ffi_prep_cif.3\n+all: all-am\n+\n+.SUFFIXES:\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \\\n+\t\t&& exit 0; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  man/Makefile'; \\\n+\tcd $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign  man/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+distclean-libtool:\n+\t-rm -f libtool\n+uninstall-info-am:\n+install-man3: $(man3_MANS) $(man_MANS)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(man3dir)\" || $(mkdir_p) \"$(DESTDIR)$(man3dir)\"\n+\t@list='$(man3_MANS) $(dist_man3_MANS) $(nodist_man3_MANS)'; \\\n+\tl2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \\\n+\tfor i in $$l2; do \\\n+\t  case \"$$i\" in \\\n+\t    *.3*) list=\"$$list $$i\" ;; \\\n+\t  esac; \\\n+\tdone; \\\n+\tfor i in $$list; do \\\n+\t  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \\\n+\t  else file=$$i; fi; \\\n+\t  ext=`echo $$i | sed -e 's/^.*\\\\.//'`; \\\n+\t  case \"$$ext\" in \\\n+\t    3*) ;; \\\n+\t    *) ext='3' ;; \\\n+\t  esac; \\\n+\t  inst=`echo $$i | sed -e 's/\\\\.[0-9a-z]*$$//'`; \\\n+\t  inst=`echo $$inst | sed -e 's/^.*\\///'`; \\\n+\t  inst=`echo $$inst | sed '$(transform)'`.$$ext; \\\n+\t  echo \" $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man3dir)/$$inst'\"; \\\n+\t  $(INSTALL_DATA) \"$$file\" \"$(DESTDIR)$(man3dir)/$$inst\"; \\\n+\tdone\n+uninstall-man3:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(man3_MANS) $(dist_man3_MANS) $(nodist_man3_MANS)'; \\\n+\tl2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \\\n+\tfor i in $$l2; do \\\n+\t  case \"$$i\" in \\\n+\t    *.3*) list=\"$$list $$i\" ;; \\\n+\t  esac; \\\n+\tdone; \\\n+\tfor i in $$list; do \\\n+\t  ext=`echo $$i | sed -e 's/^.*\\\\.//'`; \\\n+\t  case \"$$ext\" in \\\n+\t    3*) ;; \\\n+\t    *) ext='3' ;; \\\n+\t  esac; \\\n+\t  inst=`echo $$i | sed -e 's/\\\\.[0-9a-z]*$$//'`; \\\n+\t  inst=`echo $$inst | sed -e 's/^.*\\///'`; \\\n+\t  inst=`echo $$inst | sed '$(transform)'`.$$ext; \\\n+\t  echo \" rm -f '$(DESTDIR)$(man3dir)/$$inst'\"; \\\n+\t  rm -f \"$(DESTDIR)$(man3dir)/$$inst\"; \\\n+\tdone\n+tags: TAGS\n+TAGS:\n+\n+ctags: CTAGS\n+CTAGS:\n+\n+\n+distdir: $(DISTFILES)\n+\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n+\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n+\tlist='$(DISTFILES)'; for file in $$list; do \\\n+\t  case $$file in \\\n+\t    $(srcdir)/*) file=`echo \"$$file\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+\t    $(top_srcdir)/*) file=`echo \"$$file\" | sed \"s|^$$topsrcdirstrip/|$(top_builddir)/|\"`;; \\\n+\t  esac; \\\n+\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  dir=`echo \"$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n+\t  if test \"$$dir\" != \"$$file\" && test \"$$dir\" != \".\"; then \\\n+\t    dir=\"/$$dir\"; \\\n+\t    $(mkdir_p) \"$(distdir)$$dir\"; \\\n+\t  else \\\n+\t    dir=''; \\\n+\t  fi; \\\n+\t  if test -d $$d/$$file; then \\\n+\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n+\t      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \\\n+\t    fi; \\\n+\t    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \\\n+\t  else \\\n+\t    test -f $(distdir)/$$file \\\n+\t    || cp -p $$d/$$file $(distdir)/$$file \\\n+\t    || exit 1; \\\n+\t  fi; \\\n+\tdone\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(MANS)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(man3dir)\"; do \\\n+\t  test -z \"$$dir\" || $(mkdir_p) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool mostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-generic distclean-libtool\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am: install-man\n+\n+install-exec-am:\n+\n+install-info: install-info-am\n+\n+install-man: install-man3\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-generic mostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-info-am uninstall-man\n+\n+uninstall-man: uninstall-man3\n+\n+.PHONY: all all-am check check-am clean clean-generic clean-libtool \\\n+\tdistclean distclean-generic distclean-libtool distdir dvi \\\n+\tdvi-am html html-am info info-am install install-am \\\n+\tinstall-data install-data-am install-exec install-exec-am \\\n+\tinstall-info install-info-am install-man install-man3 \\\n+\tinstall-strip installcheck installcheck-am installdirs \\\n+\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\tuninstall uninstall-am uninstall-info-am uninstall-man \\\n+\tuninstall-man3\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "18b5d5d2d4a95dabc64b33a8db455b411a6230ab", "filename": "libffi/man/ffi.3", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2Fffi.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2Fffi.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2Fffi.3?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,31 @@\n+.Dd February 15, 2008\n+.Dt FFI 3\n+.Sh NAME\n+.Nm FFI\n+.Nd Foreign Function Interface\n+.Sh LIBRARY\n+libffi, -lffi\n+.Sh SYNOPSIS\n+.In ffi.h\n+.Ft ffi_status\n+.Fo ffi_prep_cif\n+.Fa \"ffi_cif *cif\"\n+.Fa \"ffi_abi abi\"\n+.Fa \"unsigned int nargs\"\n+.Fa \"ffi_type *rtype\"\n+.Fa \"ffi_type **atypes\"\n+.Fc\n+.Ft void\n+.Fo ffi_call\n+.Fa \"ffi_cif *cif\"\n+.Fa \"void (*fn)(void)\"\n+.Fa \"void *rvalue\"\n+.Fa \"void **avalue\"\n+.Fc\n+.Sh DESCRIPTION\n+The foreign function interface provides a mechanism by which a function can\n+generate a call to another function at runtime without requiring knowledge of\n+the called function's interface at compile time.\n+.Sh SEE ALSO\n+.Xr ffi_prep_cif 3 ,\n+.Xr ffi_call 3"}, {"sha": "1979a5ea99b8dd1aebdf0aba02b8c46a544f9e16", "filename": "libffi/man/ffi_call.3", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2Fffi_call.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2Fffi_call.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2Fffi_call.3?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,103 @@\n+.Dd February 15, 2008\n+.Dt ffi_call 3\n+.Sh NAME\n+.Nm ffi_call\n+.Nd Invoke a foreign function.\n+.Sh SYNOPSIS\n+.In ffi.h\n+.Ft void\n+.Fo ffi_call\n+.Fa \"ffi_cif *cif\"\n+.Fa \"void (*fn)(void)\"\n+.Fa \"void *rvalue\"\n+.Fa \"void **avalue\"\n+.Fc\n+.Sh DESCRIPTION\n+The\n+.Nm ffi_call\n+function provides a simple mechanism for invoking a function without\n+requiring knowledge of the function's interface at compile time.\n+.Fa fn\n+is called with the values retrieved from the pointers in the\n+.Fa avalue\n+array. The return value from\n+.Fa fn\n+is placed in storage pointed to by\n+.Fa rvalue .\n+.Fa cif\n+contains information describing the data types, sizes and alignments of the\n+arguments to and return value from\n+.Fa fn ,\n+and must be initialized with\n+.Nm ffi_prep_cif\n+before it is used with\n+.Nm ffi_call .\n+.Pp\n+.Fa rvalue\n+must point to storage that is sizeof(long) or larger. For smaller\n+return value sizes, the\n+.Nm ffi_arg\n+or\n+.Nm ffi_sarg\n+integral type must be used to hold\n+the return value.\n+.Sh EXAMPLES\n+.Bd -literal\n+#include <ffi/ffi.h>\n+#include <stdio.h>\n+\n+unsigned char\n+foo(unsigned int, float);\n+\n+int\n+main(int argc, const char **argv)\n+{\n+    ffi_cif cif;\n+    ffi_type *arg_types[2];\n+    void *arg_values[2];\n+    ffi_status status;\n+\n+    // Because the return value from foo() is smaller than sizeof(long), it\n+    // must be passed as ffi_arg or ffi_sarg.\n+    ffi_arg result;\n+\n+    // Specify the data type of each argument. Available types are defined\n+    // in <ffi/ffi.h>.\n+    arg_types[0] = &ffi_type_uint;\n+    arg_types[1] = &ffi_type_float;\n+\n+    // Prepare the ffi_cif structure.\n+    if ((status = ffi_prep_cif(&cif, FFI_DEFAULT_ABI,\n+        2, &ffi_type_uint8, arg_types)) != FFI_OK)\n+    {\n+        // Handle the ffi_status error.\n+    }\n+\n+    // Specify the values of each argument.\n+    unsigned int arg1 = 42;\n+    float arg2 = 5.1;\n+\n+    arg_values[0] = &arg1;\n+    arg_values[1] = &arg2;\n+\n+    // Invoke the function.\n+    ffi_call(&cif, FFI_FN(foo), &result, arg_values);\n+\n+    // The ffi_arg 'result' now contains the unsigned char returned from foo(),\n+    // which can be accessed by a typecast.\n+    printf(\"result is %hhu\", (unsigned char)result);\n+\n+    return 0;\n+}\n+\n+// The target function.\n+unsigned char\n+foo(unsigned int x, float y)\n+{\n+    unsigned char result = x - y;\n+    return result;\n+}\n+.Ed\n+.Sh SEE ALSO\n+.Xr ffi 3 ,\n+.Xr ffi_prep_cif 3"}, {"sha": "9436b31191ec21f8af38bda713141445641eb92a", "filename": "libffi/man/ffi_prep_cif.3", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2Fffi_prep_cif.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Fman%2Fffi_prep_cif.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fman%2Fffi_prep_cif.3?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -0,0 +1,66 @@\n+.Dd February 15, 2008\n+.Dt ffi_prep_cif 3\n+.Sh NAME\n+.Nm ffi_prep_cif\n+.Nd Prepare a\n+.Nm ffi_cif\n+structure for use with\n+.Nm ffi_call \n+.\n+.Sh SYNOPSIS\n+.In ffi.h\n+.Ft ffi_status\n+.Fo ffi_prep_cif\n+.Fa \"ffi_cif *cif\"\n+.Fa \"ffi_abi abi\"\n+.Fa \"unsigned int nargs\"\n+.Fa \"ffi_type *rtype\"\n+.Fa \"ffi_type **atypes\"\n+.Fc\n+.Sh DESCRIPTION\n+The\n+.Nm ffi_prep_cif\n+function prepares a\n+.Nm ffi_cif\n+structure for use with \n+.Nm ffi_call\n+.\n+.Fa abi\n+specifies a set of calling conventions to use.\n+.Fa atypes\n+is an array of\n+.Fa nargs\n+pointers to\n+.Nm ffi_type\n+structs that describe the data type, size and alignment of each argument.\n+.Fa rtype\n+points to an\n+.Nm ffi_type\n+that describes the data type, size and alignment of the\n+return value.\n+.Sh RETURN VALUES\n+Upon successful completion,\n+.Nm ffi_prep_cif\n+returns\n+.Nm FFI_OK .\n+It will return\n+.Nm FFI_BAD_TYPEDEF\n+if\n+.Fa cif\n+is\n+.Nm NULL\n+or\n+.Fa atypes\n+or\n+.Fa rtype\n+is malformed. If\n+.Fa abi\n+does not refer to a valid ABI,\n+.Nm FFI_BAD_ABI\n+will be returned. Available ABIs are\n+defined in\n+.Nm <ffitarget.h>\n+.\n+.Sh SEE ALSO\n+.Xr ffi 3 ,\n+.Xr ffi_call 3 "}, {"sha": "03c75e58b10c858f46d6d3385697974353df25d1", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7b857bbe2dbbafe570afb767efc1fff9e6b8861/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=b7b857bbe2dbbafe570afb767efc1fff9e6b8861", "patch": "@@ -170,6 +170,8 @@ X86_64_TRUE = @X86_64_TRUE@\n X86_DARWIN_FALSE = @X86_DARWIN_FALSE@\n X86_DARWIN_TRUE = @X86_DARWIN_TRUE@\n X86_FALSE = @X86_FALSE@\n+X86_FREEBSD_FALSE = @X86_FREEBSD_FALSE@\n+X86_FREEBSD_TRUE = @X86_FREEBSD_TRUE@\n X86_TRUE = @X86_TRUE@\n X86_WIN32_FALSE = @X86_WIN32_FALSE@\n X86_WIN32_TRUE = @X86_WIN32_TRUE@"}]}