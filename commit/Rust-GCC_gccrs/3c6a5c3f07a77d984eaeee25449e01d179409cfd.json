{"sha": "3c6a5c3f07a77d984eaeee25449e01d179409cfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M2YTVjM2YwN2E3N2Q5ODRlYWVlZTI1NDQ5ZTAxZDE3OTQwOWNmZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-06T18:11:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-06-06T18:11:39Z"}, "message": "avx-os-support.h (XCR_XFEATURE_ENABLED_MASK): New.\n\n\t* gcc.target/i386/avx-os-support.h (XCR_XFEATURE_ENABLED_MASK): New.\n\t(XSTATE_FP): Ditto.\n\t(XSTATE_SSE): Ditto.\n\t(XSTATE_YMM): Ditto.\n\t(avx_os_support): Use new defines.\n\nFrom-SVN: r188275", "tree": {"sha": "2dca515eb8a5fc03b87d61d1fdf2a9cd6683b544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dca515eb8a5fc03b87d61d1fdf2a9cd6683b544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c6a5c3f07a77d984eaeee25449e01d179409cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c6a5c3f07a77d984eaeee25449e01d179409cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c6a5c3f07a77d984eaeee25449e01d179409cfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c6a5c3f07a77d984eaeee25449e01d179409cfd/comments", "author": null, "committer": null, "parents": [{"sha": "ce79b85757ae4dd0db3fb846e1cd6633e5d71375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce79b85757ae4dd0db3fb846e1cd6633e5d71375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce79b85757ae4dd0db3fb846e1cd6633e5d71375"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "0b681b46bf31f2cfa8926ecc6d42a35d5611ccb8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c6a5c3f07a77d984eaeee25449e01d179409cfd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c6a5c3f07a77d984eaeee25449e01d179409cfd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c6a5c3f07a77d984eaeee25449e01d179409cfd", "patch": "@@ -1,3 +1,11 @@\n+2012-06-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/avx-os-support.h (XCR_XFEATURE_ENABLED_MASK): New.\n+\t(XSTATE_FP): Ditto.\n+\t(XSTATE_SSE): Ditto.\n+\t(XSTATE_YMM): Ditto.\n+\t(avx_os_support): Use new defines.\n+\n 2012-06-06  Richard Guenther  <rguenther@suse.de>\n \n \tPR testsuite/32380\n@@ -181,7 +189,7 @@\n \tarm32 to targets.\n \t* gcc.dg/vect/slp-perm-8.c (main): Prevent vectorization\n \tof the initialization loop.\n-        (dg-final): Adjust the expected number of vectorized loops depending\n+\t(dg-final): Adjust the expected number of vectorized loops depending\n \ton vect_char_mult target selector.\n \n 2012-05-31  Hans-Peter Nilsson  <hp@axis.com>\n@@ -1113,7 +1121,7 @@\n \t* gcc.target/cris/peep2-andu2.c: Tweak expected assembly\n \tcode to match current output and cover new peephole2 pattern.\n \n-2012-04-27   Ollie Wild  <aaw@google.com>\n+2012-04-27  Ollie Wild  <aaw@google.com>\n \n \t* g++.dg/cpp0x/Wliteral-suffix.c: New test.\n "}, {"sha": "fb1ce7562d324c7a247599dd39d764c9d7b477d3", "filename": "gcc/testsuite/gcc.target/i386/avx-os-support.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c6a5c3f07a77d984eaeee25449e01d179409cfd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-os-support.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c6a5c3f07a77d984eaeee25449e01d179409cfd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-os-support.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-os-support.h?ref=3c6a5c3f07a77d984eaeee25449e01d179409cfd", "patch": "@@ -1,10 +1,18 @@\n /* Check if the OS supports executing AVX instructions.  */\n \n+#define XCR_XFEATURE_ENABLED_MASK\t0x0\n+\n+#define XSTATE_FP\t0x1\n+#define XSTATE_SSE\t0x2\n+#define XSTATE_YMM\t0x4\n+\n static int\n avx_os_support (void)\n {\n   unsigned int eax, edx;\n+  unsigned int ecx = XCR_XFEATURE_ENABLED_MASK;\n+\n+  __asm__ (\"xgetbv\" : \"=a\" (eax), \"=d\" (edx) : \"c\" (ecx));\n \n-  __asm__ (\"xgetbv\" : \"=a\" (eax), \"=d\" (edx) : \"c\" (0));\n-  return (eax & 6) == 6;\n+  return (eax & (XSTATE_SSE | XSTATE_YMM)) == (XSTATE_SSE | XSTATE_YMM);\n }"}]}