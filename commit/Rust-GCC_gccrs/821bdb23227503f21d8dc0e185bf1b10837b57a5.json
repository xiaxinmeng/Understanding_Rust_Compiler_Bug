{"sha": "821bdb23227503f21d8dc0e185bf1b10837b57a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxYmRiMjMyMjc1MDNmMjFkOGRjMGUxODViZjFiMTA4MzdiNTdhNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-12T13:35:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-12T13:35:03Z"}, "message": "re PR target/41680 (ICE in trunc_int_for_mode)\n\n\tPR target/41680\n\t* config/i386/i386.md (split after *testqi_ext_3_rex64): Only narrow\n\tparadoxical subregs to prevent partial register stalls if the inner\n\tmode is integer mode.\n\n\t* g++.dg/torture/pr41680.C: New test.\n\nFrom-SVN: r152665", "tree": {"sha": "1bb13feb627d09a5975c6735d907cf6f1dfa355b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb13feb627d09a5975c6735d907cf6f1dfa355b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/821bdb23227503f21d8dc0e185bf1b10837b57a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821bdb23227503f21d8dc0e185bf1b10837b57a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821bdb23227503f21d8dc0e185bf1b10837b57a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821bdb23227503f21d8dc0e185bf1b10837b57a5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeaf114b41e47b8446010fdc6acbad962bf4cb8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeaf114b41e47b8446010fdc6acbad962bf4cb8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeaf114b41e47b8446010fdc6acbad962bf4cb8e"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "b79f323a11e62ef811ed12331df04ac919ae47a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=821bdb23227503f21d8dc0e185bf1b10837b57a5", "patch": "@@ -1,3 +1,10 @@\n+2009-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/41680\n+\t* config/i386/i386.md (split after *testqi_ext_3_rex64): Only narrow\n+\tparadoxical subregs to prevent partial register stalls if the inner\n+\tmode is integer mode.\n+\n 2009-10-12  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*setcc_<mode>_2): Do not use ix86_expand_clear"}, {"sha": "22ea39cf79bf9f5bb21f1e2372de5a2098eaecec", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=821bdb23227503f21d8dc0e185bf1b10837b57a5", "patch": "@@ -8571,7 +8571,8 @@\n   else if (GET_CODE (val) == SUBREG\n \t   && (submode = GET_MODE (SUBREG_REG (val)),\n \t       GET_MODE_BITSIZE (mode) > GET_MODE_BITSIZE (submode))\n-\t   && pos + len <= GET_MODE_BITSIZE (submode))\n+\t   && pos + len <= GET_MODE_BITSIZE (submode)\n+\t   && GET_MODE_CLASS (submode) == MODE_INT)\n     {\n       /* Narrow a paradoxical subreg to prevent partial register stalls.  */\n       mode = submode;"}, {"sha": "11da3e73dd79601fea40e568cef00b04d030253d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=821bdb23227503f21d8dc0e185bf1b10837b57a5", "patch": "@@ -1,3 +1,8 @@\n+2009-10-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/41680\n+\t* g++.dg/torture/pr41680.C: New test.\n+\n 2009-10-12  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/41570"}, {"sha": "7faab0d5fbc7c9129cbc94b25ff54fcb0bcd8367", "filename": "gcc/testsuite/g++.dg/torture/pr41680.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr41680.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821bdb23227503f21d8dc0e185bf1b10837b57a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr41680.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr41680.C?ref=821bdb23227503f21d8dc0e185bf1b10837b57a5", "patch": "@@ -0,0 +1,23 @@\n+// PR target/41680\n+// { dg-do compile }\n+\n+extern void baz (float);\n+\n+inline bool\n+bar (float x)\n+{\n+  union { float f; int i; } u;\n+  u.f = x;\n+  return (u.i & 1);\n+}\n+\n+void\n+foo (float *x)\n+{\n+  for (int i = 0; i < 10; i++)\n+    {\n+      float f = x[i];\n+      if (!bar (f))\n+\tbaz (f);\n+    }\n+}"}]}