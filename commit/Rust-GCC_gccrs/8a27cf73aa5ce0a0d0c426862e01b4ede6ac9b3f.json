{"sha": "8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyN2NmNzNhYTVjZTBhMGQwYzQyNjg2MmUwMWI0ZWRlNmFjOWIzZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-09-05T14:44:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-09-05T14:44:19Z"}, "message": "re PR target/77452 (ICE: in plus_constant, at explow.c:87 with -fno-split-wide-types -mavx512f --param=max-combine-insns=2)\n\n\tPR rtl-optimization/77452\n\t* explow.c (plus_constant) <case MEM>: Extract scalar constant from\n\tinner-mode reference to a CONST_VECTOR constant in the constant pool.\n\ntestsuite/ChangeLog:\n\n\tPR rtl-optimization/77452\n\t* gcc.target/i386/pr77452.c: New test.\n\nFrom-SVN: r239989", "tree": {"sha": "808b99cdf16abe7de33727977a1a3b6d1ff1d2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/808b99cdf16abe7de33727977a1a3b6d1ff1d2b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25ff5dd35471b2b20f2b2681c8ff24c0d086ec00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25ff5dd35471b2b20f2b2681c8ff24c0d086ec00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25ff5dd35471b2b20f2b2681c8ff24c0d086ec00"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "897bfbbea8af831b06e38fbad75396d0e2e5ed51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "patch": "@@ -1,3 +1,9 @@\n+2016-09-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/77452\n+\t* explow.c (plus_constant) <case MEM>: Extract scalar constant from\n+\tinner-mode reference to a CONST_VECTOR constant in the constant pool.\n+\n 2016-09-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/77423"}, {"sha": "e935c307bcbfac5ada5ad617886b5fab538e80ea", "filename": "gcc/explow.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "patch": "@@ -106,7 +106,15 @@ plus_constant (machine_mode mode, rtx x, HOST_WIDE_INT c,\n       if (GET_CODE (XEXP (x, 0)) == SYMBOL_REF\n \t  && CONSTANT_POOL_ADDRESS_P (XEXP (x, 0)))\n \t{\n-\t  tem = plus_constant (mode, get_pool_constant (XEXP (x, 0)), c);\n+\t  rtx cst = get_pool_constant (XEXP (x, 0));\n+\n+\t  if (GET_CODE (cst) == CONST_VECTOR\n+\t      && GET_MODE_INNER (GET_MODE (cst)) == mode)\n+\t    {\n+\t      cst = gen_lowpart (mode, cst);\n+\t      gcc_assert (cst);\n+\t    }\n+\t  tem = plus_constant (mode, cst, c);\n \t  tem = force_const_mem (GET_MODE (x), tem);\n \t  /* Targets may disallow some constants in the constant pool, thus\n \t     force_const_mem may return NULL_RTX.  */"}, {"sha": "ad6b6809523292cf0fdd316371be45946c35e16b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "patch": "@@ -1,3 +1,8 @@\n+2016-09-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl-optimization/77452\n+\t* gcc.target/i386/pr77452.c: New test.\n+\n 2016-09-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/77423"}, {"sha": "89c5329ff891d00a5ca44b7ceb93de96d49544cc", "filename": "gcc/testsuite/gcc.target/i386/pr77452.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77452.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77452.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77452.c?ref=8a27cf73aa5ce0a0d0c426862e01b4ede6ac9b3f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O -mavx512f -fno-split-wide-types --param max-combine-insns=2\" } */\n+\n+typedef unsigned      int U __attribute__((vector_size(64)));\n+typedef unsigned __int128 V __attribute__((vector_size(64)));\n+\n+V\n+foo(V v)\n+{\n+  v[0] = 1u << ((  ((V)(U){1, 1, v[0]})[0]) & 0xf)\n+            >> ((-~((V)(U){1, 1, v[0]})[0]) & 0xf);\n+  return v;\n+}"}]}