{"sha": "0292de4582121f986da092ed0515e980054afb1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI5MmRlNDU4MjEyMWY5ODZkYTA5MmVkMDUxNWU5ODAwNTRhZmIxZg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2021-01-01T00:37:42Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-01-01T04:46:34Z"}, "message": "Add missing vxworks filters to lib/target-supports.exp functions\n\nExplicitly disable some vxworks-missing features in the testsuite, that\nthe current feature tests detect as present.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* lib/target-supports.exp (check_weak_available,\n\tcheck_fork_available, check_effective_target_lto,\n\tcheck_effective_target_mempcpy): Add vxworks filters.", "tree": {"sha": "b55f31a7fdf8369c7e11d42df9cbea5631afb0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55f31a7fdf8369c7e11d42df9cbea5631afb0ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0292de4582121f986da092ed0515e980054afb1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0292de4582121f986da092ed0515e980054afb1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0292de4582121f986da092ed0515e980054afb1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0292de4582121f986da092ed0515e980054afb1f/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8afe0911e0e43740f64c78b4a6e336480358d01f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afe0911e0e43740f64c78b4a6e336480358d01f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8afe0911e0e43740f64c78b4a6e336480358d01f"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "7cad03556c230d0a76f47f38f8767244a259d8c9", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0292de4582121f986da092ed0515e980054afb1f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0292de4582121f986da092ed0515e980054afb1f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0292de4582121f986da092ed0515e980054afb1f", "patch": "@@ -326,6 +326,12 @@ proc check_weak_available { } {\n \treturn 0\n     }\n \n+    # VxWorks hardly supports it (vx7 RTPs only)\n+\n+    if { [istarget *-*-vxworks*] } {\n+\treturn 0\n+    }\n+\n     # ELF and ECOFF support it. a.out does with gas/gld but may also with\n     # other linkers, so we should try it\n \n@@ -2606,6 +2612,11 @@ proc check_function_available { function } {\n # Returns true iff \"fork\" is available on the target system.\n \n proc check_fork_available {} {\n+    if { [istarget *-*-vxworks*] } {\n+\t# VxWorks doesn't have fork but our way to test can't\n+\t# tell as we're doing partial links for kernel modules.\n+\treturn 0\n+     }    \n     return [check_function_available \"fork\"]\n }\n \n@@ -9295,6 +9306,11 @@ proc check_effective_target_gld { } {\n # (LTO) support.\n \n proc check_effective_target_lto { } {\n+    if { [istarget *-*-vxworks*] } {\n+\t# No LTO on VxWorks, with kernel modules\n+\t# built with partial links\n+\treturn 0\n+    }\n     if { [istarget nvptx-*-*]\n \t || [istarget amdgcn-*-*] } {\n \treturn 0;\n@@ -9514,6 +9530,11 @@ proc check_effective_target_run_expensive_tests { } {\n # Returns 1 if \"mempcpy\" is available on the target system.\n \n proc check_effective_target_mempcpy {} {\n+    if { [istarget *-*-vxworks*] } {\n+\t# VxWorks doesn't have mempcpy but our way to test fails\n+\t# to detect as we're doing partial links for kernel modules.\n+\treturn 0\n+     }\n     return [check_function_available \"mempcpy\"]\n }\n "}]}