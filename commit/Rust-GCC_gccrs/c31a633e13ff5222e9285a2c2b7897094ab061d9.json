{"sha": "c31a633e13ff5222e9285a2c2b7897094ab061d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMxYTYzM2UxM2ZmNTIyMmU5Mjg1YTJjMmI3ODk3MDk0YWIwNjFkOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-01-21T13:15:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-01-27T16:37:27Z"}, "message": "libstdc++: Use printf to print control characters\n\nBash and GNU echo do not interpret backslash escapes by default, so use\nprintf when printing \\n or \\t in strings.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/experimental/simd/generate_makefile.sh: Use printf\n\tinstead of echo when printing escape characters.", "tree": {"sha": "1302e4c1e85f06d95dad0963ffc05d93d923a1ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1302e4c1e85f06d95dad0963ffc05d93d923a1ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c31a633e13ff5222e9285a2c2b7897094ab061d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31a633e13ff5222e9285a2c2b7897094ab061d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c31a633e13ff5222e9285a2c2b7897094ab061d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31a633e13ff5222e9285a2c2b7897094ab061d9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02e32295b284bd4f4d038e73ee3118fb0546650e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e32295b284bd4f4d038e73ee3118fb0546650e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e32295b284bd4f4d038e73ee3118fb0546650e"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "ab5970554c3197b079920a6a0296899065efb018", "filename": "libstdc++-v3/testsuite/experimental/simd/generate_makefile.sh", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c31a633e13ff5222e9285a2c2b7897094ab061d9/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fgenerate_makefile.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c31a633e13ff5222e9285a2c2b7897094ab061d9/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fgenerate_makefile.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fsimd%2Fgenerate_makefile.sh?ref=c31a633e13ff5222e9285a2c2b7897094ab061d9", "patch": "@@ -97,10 +97,10 @@ DRIVEROPTS ?=\n all: simd_testsuite.sum\n \n simd_testsuite.sum: simd_testsuite.log\n-\t@echo \"\\n\\t\\t=== simd_testsuite \\$(TESTFLAGS) Summary ===\\n\\n\"\\\\\n+\t@printf \"\\n\\t\\t=== simd_testsuite \\$(TESTFLAGS) Summary ===\\n\\n\"\\\\\n \t\"# of expected passes:\\t\\t\\$(shell grep -c '^PASS:' \\$@)\\n\"\\\\\n \t\"# of unexpected failures:\\t\\$(shell grep -c '^FAIL:' \\$@)\\n\"\\\\\n-\t\"# of unsupported tests:\\t\\t\\$(shell grep -c '^UNSUPPORTED:' \\$@)\"\\\\\n+\t\"# of unsupported tests:\\t\\t\\$(shell grep -c '^UNSUPPORTED:' \\$@)\\n\"\\\\\n \t  | tee -a \\$@\n \n EOF\n@@ -208,7 +208,7 @@ EOF\n EOF\n     done\n   done\n-  echo 'run-%: export GCC_TEST_RUN_EXPENSIVE=yes\\n'\n+  echo 'run-%: export GCC_TEST_RUN_EXPENSIVE=yes'\n   all_tests | while read file && read name; do\n     echo \"run-$name: $name.log\"\n     all_types \"$file\" | while read t && read type; do\n@@ -221,7 +221,7 @@ EOF\n   done\n   cat <<EOF\n help:\n-\t@echo \"use DRIVEROPTS=<options> to pass the following options:\\n\"\\\\\n+\t@printf \"use DRIVEROPTS=<options> to pass the following options:\\n\"\\\\\n \t\"-q, --quiet         Only print failures.\\n\"\\\\\n \t\"-v, --verbose       Print compiler and test output on failure.\\n\"\\\\\n \t\"-k, --keep-failed   Keep executables of failed tests.\\n\"\\\\\n@@ -232,19 +232,20 @@ help:\n \t\"                    Multiply the default timeout with x.\\n\"\\\\\n \t\"--run-expensive     Compile and run tests marked as expensive (default:\\n\"\\\\\n \t\"                    true if GCC_TEST_RUN_EXPENSIVE is set, false otherwise).\\n\"\\\\\n-\t\"--only <pattern>    Compile and run only tests matching the given pattern.\\n\"\n-\t@echo \"use TESTFLAGS=<flags> to pass additional compiler flags\\n\"\n+\t\"--only <pattern>    Compile and run only tests matching the given pattern.\\n\\n\"\n+\t@echo \"use TESTFLAGS=<flags> to pass additional compiler flags\"\n+\t@echo\n \t@echo \"The following are some of the valid targets for this Makefile:\"\n \t@echo \"... all\"\n \t@echo \"... clean\"\n \t@echo \"... help\"\n EOF\n   all_tests | while read file && read name; do\n-    echo \"\\t@echo '... run-${name}'\"\n+    printf \"\\t@echo '... run-${name}'\\n\"\n     all_types | while read t && read type; do\n-      echo \"\\t@echo '... run-${name}-${type}'\"\n+      printf \"\\t@echo '... run-${name}-${type}'\\n\"\n       for i in $(seq 0 9); do\n-        echo \"\\t@echo '... run-${name}-${type}-$i'\"\n+        printf \"\\t@echo '... run-${name}-${type}-$i'\\n\"\n       done\n     done\n   done"}]}