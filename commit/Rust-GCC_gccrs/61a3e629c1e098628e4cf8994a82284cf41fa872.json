{"sha": "61a3e629c1e098628e4cf8994a82284cf41fa872", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFhM2U2MjljMWUwOTg2MjhlNGNmODk5NGE4MjI4NGNmNDFmYTg3Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-06-04T21:45:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-06-04T21:45:31Z"}, "message": "dwarf2out.c (is_unit_die): New.\n\n\t* dwarf2out.c (is_unit_die): New.\n\t(copy_declaration_context, copy_ancestor_tree): Use it.\n\t(copy_decls_walk): Likewise.\n\nFrom-SVN: r188209", "tree": {"sha": "f20368afc4bf6f02d717a36e699bafefbd2376e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f20368afc4bf6f02d717a36e699bafefbd2376e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61a3e629c1e098628e4cf8994a82284cf41fa872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a3e629c1e098628e4cf8994a82284cf41fa872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61a3e629c1e098628e4cf8994a82284cf41fa872", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61a3e629c1e098628e4cf8994a82284cf41fa872/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a67cfde819ff41fafec5466008b7c95b3e97a7f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a67cfde819ff41fafec5466008b7c95b3e97a7f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a67cfde819ff41fafec5466008b7c95b3e97a7f9"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "53130faabc4692cc94ff62e84253f9963b9b57b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a3e629c1e098628e4cf8994a82284cf41fa872/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a3e629c1e098628e4cf8994a82284cf41fa872/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61a3e629c1e098628e4cf8994a82284cf41fa872", "patch": "@@ -1,3 +1,9 @@\n+2012-06-04  Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (is_unit_die): New.\n+\t(copy_declaration_context, copy_ancestor_tree): Use it.\n+\t(copy_decls_walk): Likewise.\n+\n 2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53524"}, {"sha": "6e4ab761b758f3c926fac25b042897fb8367a9d2", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61a3e629c1e098628e4cf8994a82284cf41fa872/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61a3e629c1e098628e4cf8994a82284cf41fa872/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=61a3e629c1e098628e4cf8994a82284cf41fa872", "patch": "@@ -5972,6 +5972,16 @@ is_cu_die (dw_die_ref c)\n   return c && c->die_tag == DW_TAG_compile_unit;\n }\n \n+/* Returns true iff C is a unit DIE of some sort.  */\n+\n+static inline bool\n+is_unit_die (dw_die_ref c)\n+{\n+  return c && (c->die_tag == DW_TAG_compile_unit\n+\t       || c->die_tag == DW_TAG_partial_unit\n+\t       || c->die_tag == DW_TAG_type_unit);\n+}\n+\n static char *\n gen_internal_sym (const char *prefix)\n {\n@@ -6379,8 +6389,7 @@ copy_declaration_context (dw_die_ref unit, dw_die_ref die)\n     }\n \n   if (decl->die_parent != NULL\n-      && decl->die_parent->die_tag != DW_TAG_compile_unit\n-      && decl->die_parent->die_tag != DW_TAG_type_unit)\n+      && !is_unit_die (decl->die_parent))\n     {\n       new_decl = copy_ancestor_tree (unit, decl, NULL);\n       if (new_decl != NULL)\n@@ -6654,8 +6663,7 @@ copy_ancestor_tree (dw_die_ref unit, dw_die_ref die, htab_t decl_table)\n       dw_die_ref spec = get_AT_ref (parent, DW_AT_specification);\n       if (spec != NULL)\n         parent = spec;\n-      if (parent->die_tag != DW_TAG_compile_unit\n-          && parent->die_tag != DW_TAG_type_unit)\n+      if (!is_unit_die (parent))\n         new_parent = copy_ancestor_tree (unit, parent, decl_table);\n     }\n \n@@ -6754,8 +6762,7 @@ copy_decls_walk (dw_die_ref unit, dw_die_ref die, htab_t decl_table)\n               /* If TARG has surrounding context, copy its ancestor tree\n                  into the new type unit.  */\n               if (targ->die_parent != NULL\n-                  && targ->die_parent->die_tag != DW_TAG_compile_unit\n-                  && targ->die_parent->die_tag != DW_TAG_type_unit)\n+\t\t  && !is_unit_die (targ->die_parent))\n                 parent = copy_ancestor_tree (unit, targ->die_parent,\n                                              decl_table);\n "}]}