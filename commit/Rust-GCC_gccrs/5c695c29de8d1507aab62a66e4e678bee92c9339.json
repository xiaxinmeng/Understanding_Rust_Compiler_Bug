{"sha": "5c695c29de8d1507aab62a66e4e678bee92c9339", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2OTVjMjlkZThkMTUwN2FhYjYyYTY2ZTRlNjc4YmVlOTJjOTMzOQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-13T15:57:21Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-13T15:57:21Z"}, "message": "rs6000: Shut up -Wformat-diag somewhat\n\nWe currently get lot of build warnings like\n/home/segher/src/gcc/gcc/config/rs6000/rs6000-c.c:7039:12: warning: misspelled term 'builtin function' in format; use 'built-in function' instead [-Wformat-diag]\n 7039 |    error (\"builtin function %qs not supported in this compiler \"\n      |            ^~~~~~~~~~~~~~~~\n\nThat would print something like\n  builtin function '__builtin_example' not supported in this compiler\n\nChanging that to \"built-in\" as suggested only makes this worse.\nInstead, let's just remove the whole \"builtin function\" phrase.\n\n\n\tPR target/91148\n\t* config/rs6000/rs6000.c (rs6000_invalid_builtin): Remove superfluous\n\t\"builtin function\" phrasing.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-eq-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-gt-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-lt-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-cmp-exp-unordered-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-1.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-4.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-1.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-4.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-1.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-10.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-4.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-7.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-test-data-class-11.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-test-data-class-6.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-test-data-class-7.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-test-neg-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-test-neg-3.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-test-neg-5.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-extract-exp-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-extract-exp-3.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-extract-sig-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-extract-sig-3.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-3.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-6.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-insert-exp-7.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-test-data-class-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/vec-test-data-class-3.c: Adjust.\n\t* gcc.target/powerpc/byte-in-either-range-1.c: Adjust.\n\t* gcc.target/powerpc/byte-in-range-1.c: Adjust.\n\t* gcc.target/powerpc/byte-in-set-1.c: Adjust.\n\t* gcc.target/powerpc/byte-in-set-2.c: Adjust.\n\t* gcc.target/powerpc/cmpb-3.c: Adjust.\n\t* gcc.target/powerpc/crypto-builtin-2.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-1.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-11.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-16.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-21.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-26.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-31.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-36.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-41.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-46.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-51.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-56.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-6.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-61.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-66.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-71.c: Adjust.\n\t* gcc.target/powerpc/dfp/dtstsfi-76.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-all-nez-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-any-eqz-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-cmpnez-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-cnttz-lsbb-2.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xl-len-12.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xlx-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xrx-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xst-len-12.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xst-len-13.c: Adjust.\n\nFrom-SVN: r273468", "tree": {"sha": "bdc4732b5437b6e039eb09b0e7caee210dbfc66e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdc4732b5437b6e039eb09b0e7caee210dbfc66e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c695c29de8d1507aab62a66e4e678bee92c9339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c695c29de8d1507aab62a66e4e678bee92c9339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c695c29de8d1507aab62a66e4e678bee92c9339", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c695c29de8d1507aab62a66e4e678bee92c9339/comments", "author": null, "committer": null, "parents": [{"sha": "544a74f051255994fe03d1b4081ee66e9ae14489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544a74f051255994fe03d1b4081ee66e9ae14489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544a74f051255994fe03d1b4081ee66e9ae14489"}], "stats": {"total": 273, "additions": 170, "deletions": 103}, "files": [{"sha": "2f83c26d24b653ac07a008f8a647aa55d6efdc07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -1,4 +1,10 @@\n-2019-07-14  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+2019-07-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/91148\n+\t* config/rs6000/rs6000.c (rs6000_invalid_builtin): Remove superfluous\n+\t\"builtin function\" phrasing.\n+\n+2019-07-13  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \tPR target/90723\n \t* recog.h (temporary_volatile_ok): New class."}, {"sha": "827894c463998e6757f4286ebd4973ef0d4aff69", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 21, "deletions": 30, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -14785,62 +14785,53 @@ rs6000_invalid_builtin (enum rs6000_builtins fncode)\n \n   gcc_assert (name != NULL);\n   if ((fnmask & RS6000_BTM_CELL) != 0)\n-    error (\"builtin function %qs is only valid for the cell processor\", name);\n+    error (\"%qs is only valid for the cell processor\", name);\n   else if ((fnmask & RS6000_BTM_VSX) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name, \"-mvsx\");\n+    error (\"%qs requires the %qs option\", name, \"-mvsx\");\n   else if ((fnmask & RS6000_BTM_HTM) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name, \"-mhtm\");\n+    error (\"%qs requires the %qs option\", name, \"-mhtm\");\n   else if ((fnmask & RS6000_BTM_ALTIVEC) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name, \"-maltivec\");\n+    error (\"%qs requires the %qs option\", name, \"-maltivec\");\n   else if ((fnmask & (RS6000_BTM_DFP | RS6000_BTM_P8_VECTOR))\n \t   == (RS6000_BTM_DFP | RS6000_BTM_P8_VECTOR))\n-    error (\"builtin function %qs requires the %qs and %qs options\",\n-\t   name, \"-mhard-dfp\", \"-mpower8-vector\");\n+    error (\"%qs requires the %qs and %qs options\", name, \"-mhard-dfp\",\n+\t   \"-mpower8-vector\");\n   else if ((fnmask & RS6000_BTM_DFP) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name, \"-mhard-dfp\");\n+    error (\"%qs requires the %qs option\", name, \"-mhard-dfp\");\n   else if ((fnmask & RS6000_BTM_P8_VECTOR) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name,\n-\t   \"-mpower8-vector\");\n+    error (\"%qs requires the %qs option\", name, \"-mpower8-vector\");\n   else if ((fnmask & (RS6000_BTM_P9_VECTOR | RS6000_BTM_64BIT))\n \t   == (RS6000_BTM_P9_VECTOR | RS6000_BTM_64BIT))\n-    error (\"builtin function %qs requires the %qs and %qs options\",\n-\t   name, \"-mcpu=power9\", \"-m64\");\n+    error (\"%qs requires the %qs and %qs options\", name, \"-mcpu=power9\",\n+\t   \"-m64\");\n   else if ((fnmask & RS6000_BTM_P9_VECTOR) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name,\n-\t   \"-mcpu=power9\");\n+    error (\"%qs requires the %qs option\", name, \"-mcpu=power9\");\n   else if ((fnmask & (RS6000_BTM_P9_MISC | RS6000_BTM_64BIT))\n \t   == (RS6000_BTM_P9_MISC | RS6000_BTM_64BIT))\n-    error (\"builtin function %qs requires the %qs and %qs options\",\n-\t   name, \"-mcpu=power9\", \"-m64\");\n+    error (\"%qs requires the %qs and %qs options\", name, \"-mcpu=power9\",\n+\t   \"-m64\");\n   else if ((fnmask & RS6000_BTM_P9_MISC) == RS6000_BTM_P9_MISC)\n-    error (\"builtin function %qs requires the %qs option\", name,\n-\t   \"-mcpu=power9\");\n+    error (\"%qs requires the %qs option\", name, \"-mcpu=power9\");\n   else if ((fnmask & RS6000_BTM_LDBL128) == RS6000_BTM_LDBL128)\n     {\n       if (!TARGET_HARD_FLOAT)\n-\terror (\"builtin function %qs requires the %qs option\", name,\n-\t       \"-mhard-float\");\n+\terror (\"%qs requires the %qs option\", name, \"-mhard-float\");\n       else\n-\terror (\"builtin function %qs requires the %qs option\", name,\n+\terror (\"%qs requires the %qs option\", name,\n \t       TARGET_IEEEQUAD ? \"-mabi=ibmlongdouble\" : \"-mlong-double-128\");\n     }\n   else if ((fnmask & RS6000_BTM_HARD_FLOAT) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name,\n-\t   \"-mhard-float\");\n+    error (\"%qs requires the %qs option\", name, \"-mhard-float\");\n   else if ((fnmask & RS6000_BTM_FLOAT128_HW) != 0)\n-    error (\"builtin function %qs requires ISA 3.0 IEEE 128-bit floating point\",\n-\t   name);\n+    error (\"%qs requires ISA 3.0 IEEE 128-bit floating point\", name);\n   else if ((fnmask & RS6000_BTM_FLOAT128) != 0)\n-    error (\"builtin function %qs requires the %qs option\", name,\n-\t   \"%<-mfloat128%>\");\n+    error (\"%qs requires the %qs option\", name, \"%<-mfloat128%>\");\n   else if ((fnmask & (RS6000_BTM_POPCNTD | RS6000_BTM_POWERPC64))\n \t   == (RS6000_BTM_POPCNTD | RS6000_BTM_POWERPC64))\n-    error (\"builtin function %qs requires the %qs (or newer), and \"\n-\t   \"%qs or %qs options\",\n+    error (\"%qs requires the %qs (or newer), and %qs or %qs options\",\n \t   name, \"-mcpu=power7\", \"-m64\", \"-mpowerpc64\");\n   else\n-    error (\"builtin function %qs is not supported with the current options\",\n-\t   name);\n+    error (\"%qs is not supported with the current options\", name);\n }\n \n /* Target hook for early folding of built-ins, shamelessly stolen"}, {"sha": "4cdb328d7bd576d388d17d8c7e0cdf3af61203e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -1,3 +1,73 @@\n+2019-07-13  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/91148\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-eq-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-gt-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-lt-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-cmp-exp-unordered-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-1.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-4.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-1.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-4.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-1.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-10.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-4.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-7.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-test-data-class-11.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-test-data-class-6.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-test-data-class-7.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-test-neg-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-test-neg-3.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-test-neg-5.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-extract-exp-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-extract-exp-3.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-extract-sig-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-extract-sig-3.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-3.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-6.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-insert-exp-7.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-test-data-class-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/vec-test-data-class-3.c: Adjust.\n+\t* gcc.target/powerpc/byte-in-either-range-1.c: Adjust.\n+\t* gcc.target/powerpc/byte-in-range-1.c: Adjust.\n+\t* gcc.target/powerpc/byte-in-set-1.c: Adjust.\n+\t* gcc.target/powerpc/byte-in-set-2.c: Adjust.\n+\t* gcc.target/powerpc/cmpb-3.c: Adjust.\n+\t* gcc.target/powerpc/crypto-builtin-2.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-1.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-11.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-16.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-21.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-26.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-31.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-36.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-41.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-46.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-51.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-56.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-6.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-61.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-66.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-71.c: Adjust.\n+\t* gcc.target/powerpc/dfp/dtstsfi-76.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-all-nez-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-any-eqz-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-cmpnez-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-cnttz-lsbb-2.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xl-len-12.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xlx-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xrx-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xst-len-12.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xst-len-13.c: Adjust.\n+\n 2019-07-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/91149"}, {"sha": "604dbbc0a97908833ff93fe9eb978be68a1c3136", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-eq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-eq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-eq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-eq-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ compare_exponents_eq (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_eq (exponent1, exponent2);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_eq' requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_eq (exponent1, exponent2);\t/* { dg-error \"'__builtin_vsx_scalar_cmp_exp_dp_eq' requires\" } */\n }"}, {"sha": "2f01b87fe5519d737b352fc734d26fecf78d22e0", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-gt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-gt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-gt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-gt-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ compare_exponents_gt (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_gt (exponent1, exponent2); /* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_gt' requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_gt (exponent1, exponent2); /* { dg-error \"'__builtin_vsx_scalar_cmp_exp_dp_gt' requires\" } */\n }"}, {"sha": "75969c28a59308e64d9879d5ec6a9441bae9bc9c", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-lt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-lt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-lt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-lt-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ compare_exponents_lt (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_lt (exponent1, exponent2);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_lt' requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_lt (exponent1, exponent2);\t/* { dg-error \"'__builtin_vsx_scalar_cmp_exp_dp_lt' requires\" } */\n }"}, {"sha": "f59b4a35280008b9093a7e72e701bdd8ac750b78", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-cmp-exp-unordered-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-unordered-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-unordered-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-cmp-exp-unordered-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ compare_exponents_unordered (double *exponent1_p, double *exponent2_p)\n   double exponent1 = *exponent1_p;\n   double exponent2 = *exponent2_p;\n \n-  return __builtin_vec_scalar_cmp_exp_unordered (exponent1, exponent2);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_cmp_exp_dp_unordered' requires\" } */\n+  return __builtin_vec_scalar_cmp_exp_unordered (exponent1, exponent2);\t/* { dg-error \"'__builtin_vsx_scalar_cmp_exp_dp_unordered' requires\" } */\n }"}, {"sha": "9737762c1d43c88c23f575c39437ed2f965cf6be", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,7 +11,7 @@ get_exponent (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_extract_exp' requires\" } */\n+  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"'__builtin_vsx_scalar_extract_exp' requires\" } */\n }\n \n "}, {"sha": "b04462f9798ac31fe3933f9693ba48165041aafe", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -14,7 +14,7 @@ get_exponent (double *p)\n {\n   double source = *p;\n \n-  return scalar_extract_exp (source);\t/* { dg-error \"builtin function '__builtin_vec_scalar_extract_exp' not supported in this compiler configuration\" } */\n+  return scalar_extract_exp (source);\t/* { dg-error \"'__builtin_vec_scalar_extract_exp' not supported in this compiler configuration\" } */\n }\n \n "}, {"sha": "850ff6204900dc6eeb8b11e15816b9d6c1d3bb8a", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-4.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,7 +11,7 @@ get_exponent (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_extract_expq' requires\" } */\n+  return __builtin_vec_scalar_extract_exp (source); /* { dg-error \"'__builtin_vsx_scalar_extract_expq' requires\" } */\n }\n \n "}, {"sha": "f12eed3d9d5be052062b610cf4f0004a7659d845", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ get_significand (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_extract_sig' requires\" } */\n+  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"'__builtin_vsx_scalar_extract_sig' requires\" } */\n }"}, {"sha": "c912879238029c47c3f1553ff52c4e337652bb38", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -12,5 +12,5 @@ get_significand (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"builtin function '__builtin_vec_scalar_extract_sig' not supported in this compiler configuration\" } */\n+  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"'__builtin_vec_scalar_extract_sig' not supported in this compiler configuration\" } */\n }"}, {"sha": "32a53c6fffd7e92c7bede6221b4197e82f9aea5e", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-4.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ get_significand (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_scalar_extract_sigq' requires\" } */\n+  return __builtin_vec_scalar_extract_sig (source);\t/* { dg-error \"'__builtin_vsx_scalar_extract_sigq' requires\" } */\n }"}, {"sha": "8260b1071787cd5489ab0328da45f5b475821ff7", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -13,5 +13,5 @@ insert_exponent (unsigned long long int *significand_p,\n   unsigned long long int significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp' requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vsx_scalar_insert_exp' requires\" } */\n }"}, {"sha": "769d3b0546a6b3d3b8357ae42158c4c88d915e5d", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-10.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -13,5 +13,5 @@ insert_exponent (__ieee128 *significand_p,\n   __ieee128 significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp_qp' requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vsx_scalar_insert_exp_qp' requires\" } */\n }"}, {"sha": "af270996d92b05b95a97c55376c3071f907c5935", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -16,5 +16,5 @@ insert_exponent (unsigned long long int *significand_p,\n   unsigned long long int significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "1699c67a2f1aed316099bf0f186bf6903e5beb8a", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-4.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -13,5 +13,5 @@ insert_exponent (double *significand_p,\n   double significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp_dp' requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vsx_scalar_insert_exp_dp' requires\" } */\n }"}, {"sha": "05b98d9faa07672e58939d14530e6f02d96ad1c0", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -16,5 +16,5 @@ insert_exponent (double *significand_p,\n   double significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "2e03e15d0254298835911bb8595c6d4e1a38bc95", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -13,5 +13,5 @@ insert_exponent (unsigned __int128 *significand_p,\n   unsigned __int128 significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vsx_scalar_insert_exp_q' requires\" } */\n+  return __builtin_vec_scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vsx_scalar_insert_exp_q' requires\" } */\n }"}, {"sha": "d1a0a8b817ded91de8ff0e6f5ea0d512fd1ec5d4", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -16,5 +16,5 @@ insert_exponent (unsigned __int128 *significand_p, /* { dg-error \"'__int128' is\n   unsigned __int128 significand = *significand_p;  /* { dg-error \"'__int128' is not supported on this target\" } */\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"builtin function '__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n }"}, {"sha": "7c6fca2b7292bfda51e096301f67150bbaa4a3b8", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-data-class-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-11.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_data_class (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_data_class_qp' requires\" } */\n+  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"'__builtin_vsx_scalar_test_data_class_qp' requires\" } */\n }"}, {"sha": "7fb6601e54b1db1560ac0c00a0dcf571eec2f956", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-data-class-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-6.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_data_class (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_data_class_dp' requires\" } */\n+  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"'__builtin_vsx_scalar_test_data_class_dp' requires\" } */\n }"}, {"sha": "02e9ec51881a722172dcbe3e9aca2f9784bcad70", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-data-class-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-data-class-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_data_class (float *p)\n {\n   float source = *p;\n \n-  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_data_class_sp' requires\" } */\n+  return __builtin_vec_scalar_test_data_class (source, 3); /* { dg-error \"'__builtin_vsx_scalar_test_data_class_sp' requires\" } */\n }"}, {"sha": "7d2b4deefc3f28719477e2440c738a5db3245714", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-neg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_neg (float *p)\n {\n   float source = *p;\n \n-  return __builtin_vec_scalar_test_neg_sp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_neg_sp' requires\" } */\n+  return __builtin_vec_scalar_test_neg_sp (source); /* { dg-error \"'__builtin_vsx_scalar_test_neg_sp' requires\" } */\n }"}, {"sha": "b503dfa8b56d21fe078af6c09f1f0ecebebc3f9d", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-neg-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-3.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_neg (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_test_neg_dp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_neg_dp' requires\" } */\n+  return __builtin_vec_scalar_test_neg_dp (source); /* { dg-error \"'__builtin_vsx_scalar_test_neg_dp' requires\" } */\n }"}, {"sha": "bab86040a7bf49add8c57c8a4a1ce4e27716882f", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-test-neg-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-test-neg-5.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_neg (__ieee128 *p)\n {\n   __ieee128 source = *p;\n \n-  return __builtin_vec_scalar_test_neg_qp (source); /* { dg-error \"builtin function '__builtin_vsx_scalar_test_neg_qp' requires\" } */\n+  return __builtin_vec_scalar_test_neg_qp (source); /* { dg-error \"'__builtin_vsx_scalar_test_neg_qp' requires\" } */\n }"}, {"sha": "86d0260ccd84a26caf642a0bb25539b241189651", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ get_exponents (__vector double *p)\n {\n   __vector double source = *p;\n \n-  return __builtin_vec_extract_exp (source); /* { dg-error \"builtin function '__builtin_vsx_extract_exp_dp' requires\" } */\n+  return __builtin_vec_extract_exp (source); /* { dg-error \"'__builtin_vsx_extract_exp_dp' requires\" } */\n }"}, {"sha": "e909a2648be9684751b98260d27795b6909fb12e", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-exp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-exp-3.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ get_exponents (__vector float *p)\n {\n   __vector float source = *p;\n \n-  return __builtin_vec_extract_exp (source);\t/* { dg-error \"builtin function '__builtin_vsx_extract_exp_sp' requires\" } */\n+  return __builtin_vec_extract_exp (source);\t/* { dg-error \"'__builtin_vsx_extract_exp_sp' requires\" } */\n }"}, {"sha": "eab667304ef778ce747facab46f0fe50765ea0f4", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-sig-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ get_significands (__vector double *p)\n {\n   __vector double source = *p;\n \n-  return __builtin_vec_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_extract_sig_dp' requires\" } */\n+  return __builtin_vec_extract_sig (source);\t/* { dg-error \"'__builtin_vsx_extract_sig_dp' requires\" } */\n }"}, {"sha": "ab1967b1be9757d0503f51e96b690e83f114ced4", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-extract-sig-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-extract-sig-3.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ get_significands (__vector float *p)\n {\n   __vector float source = *p;\n \n-  return __builtin_vec_extract_sig (source);\t/* { dg-error \"builtin function '__builtin_vsx_extract_sig_sp' requires\" } */\n+  return __builtin_vec_extract_sig (source);\t/* { dg-error \"'__builtin_vsx_extract_sig_sp' requires\" } */\n }"}, {"sha": "6aa6b4039874b4ddf863d00c68042bba81f98e8b", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ make_floats (__vector unsigned int *significands_p,\n   __vector unsigned int significands = *significands_p;\n   __vector unsigned int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_sp' requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"'__builtin_vsx_insert_exp_sp' requires\" } */\n }"}, {"sha": "ab4c2f1f2e39456011fbbf94361d509b8fe570e3", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-3.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ make_doubles (__vector unsigned long long int *significands_p,\n   __vector unsigned long long int significands = *significands_p;\n   __vector unsigned long long int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_dp' requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"'__builtin_vsx_insert_exp_dp' requires\" } */\n }"}, {"sha": "70ed82b6a20aa29c6fa8b01ddf01a6ec31ca5fd3", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-6.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ make_floats (__vector float *significands_p,\n   __vector float significands = *significands_p;\n   __vector unsigned int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_sp' requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"'__builtin_vsx_insert_exp_sp' requires\" } */\n }"}, {"sha": "eb5dda41e5baa1d8847008407daaea0fb20d0140", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-insert-exp-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-insert-exp-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ make_doubles (__vector double *significands_p,\n   __vector double significands = *significands_p;\n   __vector unsigned long long int exponents = *exponents_p;\n \n-  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"builtin function '__builtin_vsx_insert_exp_dp' requires\" } */\n+  return __builtin_vec_insert_exp (significands, exponents); /* { dg-error \"'__builtin_vsx_insert_exp_dp' requires\" } */\n }"}, {"sha": "f53efdc024847fcdb076269aa7b1ba5c9bacca5b", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-test-data-class-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ get_data_class_flags (__vector double *p)\n {\n   __vector double source = *p;\n \n-  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"builtin function '__builtin_vsx_test_data_class_dp' requires\" } */\n+  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"'__builtin_vsx_test_data_class_dp' requires\" } */\n }"}, {"sha": "5ec7019e7a0780ec84e38a9f9ecb54bfbc1d9ef6", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/vec-test-data-class-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fvec-test-data-class-3.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ get_data_class_flags (__vector float *p)\n {\n   __vector float source = *p;\n \n-  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"builtin function '__builtin_vsx_test_data_class_sp' requires\" } */\n+  return __builtin_vec_test_data_class (source, 0x37); /* { dg-error \"'__builtin_vsx_test_data_class_sp' requires\" } */\n }"}, {"sha": "e67fb6606375d8051db819768521c693e188348e", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-either-range-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-either-range-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-either-range-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-either-range-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -17,5 +17,5 @@ test_byte_in_either_range (unsigned char b,\n   range_encoding = ((first_hi_bound << 24) | (first_lo_bound << 16)\n \t\t    | (second_hi_bound << 8) | second_lo_bound);\n \n-  return __builtin_byte_in_either_range (b, range_encoding); /* { dg-error \"builtin function '__builtin_scalar_byte_in_either_range' requires\" } */\n+  return __builtin_byte_in_either_range (b, range_encoding); /* { dg-error \"'__builtin_scalar_byte_in_either_range' requires\" } */\n }"}, {"sha": "4f4ad8f4e5fe3f9338354a61247886874f4b1578", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-range-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-range-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-range-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-range-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,6 +10,6 @@ test_byte_in_range (unsigned char b,\n \t\t    unsigned char low_range, unsigned char high_range)\n {\n   unsigned int range_encoding = (high_range << 8) | low_range;\n-  return __builtin_byte_in_range (b, range_encoding); /* { dg-error \"builtin function '__builtin_scalar_byte_in_range' requires\" } */\n+  return __builtin_byte_in_range (b, range_encoding); /* { dg-error \"'__builtin_scalar_byte_in_range' requires\" } */\n }\n "}, {"sha": "a369dc1f64a6c8d37f7b8aad9ed66e62d1f8cefd", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-set-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@\n int\n test_byte_in_set (unsigned char b, unsigned long long set_members)\n {\n-  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function '__builtin_scalar_byte_in_set' requires\" } */\n+  return __builtin_byte_in_set (b, set_members); /* { dg-error \"'__builtin_scalar_byte_in_set' requires\" } */\n }"}, {"sha": "a74101028aaa650084c91075e3da6ab423f7edaa", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-set-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@\n int\n test_byte_in_set (unsigned char b, unsigned long long set_members)\n {\n-  return __builtin_byte_in_set (b, set_members); /* { dg-error \"builtin function '__builtin_byte_in_set' not supported in this compiler configuration\" } */\n+  return __builtin_byte_in_set (b, set_members); /* { dg-error \"'__builtin_byte_in_set' not supported in this compiler configuration\" } */\n }"}, {"sha": "0fa8eb1f023b0ce634a12f0b38cf1702631e55f3", "filename": "gcc/testsuite/gcc.target/powerpc/cmpb-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -8,7 +8,7 @@ void abort ();\n long long int\n do_compare (long long int a, long long int b)\n {\n-  return __builtin_cmpb (a, b);\t/* { dg-error \"builtin function '__builtin_cmpb' not supported in this compiler configuration\" } */\n+  return __builtin_cmpb (a, b);\t/* { dg-error \"'__builtin_cmpb' not supported in this compiler configuration\" } */\n }\n \n void expect (long long int pattern, long long int value)"}, {"sha": "4066b1228dccf821301e891fd8f4ec7e8bb288b6", "filename": "gcc/testsuite/gcc.target/powerpc/crypto-builtin-2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcrypto-builtin-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -5,21 +5,21 @@\n \n void use_builtins_d (__vector unsigned long long *p, __vector unsigned long long *q, __vector unsigned long long *r, __vector unsigned long long *s)\n {\n-  p[0] = __builtin_crypto_vcipher (q[0], r[0]); /* { dg-error \"builtin function '__builtin_crypto_vcipher' is not supported with the current options\" } */\n-  p[1] = __builtin_crypto_vcipherlast (q[1], r[1]); /* { dg-error \"builtin function '__builtin_crypto_vcipherlast' is not supported with the current options\" } */\n-  p[2] = __builtin_crypto_vncipher (q[2], r[2]); /* { dg-error \"builtin function '__builtin_crypto_vncipher' is not supported with the current options\" } */\n-  p[3] = __builtin_crypto_vncipherlast (q[3], r[3]); /* { dg-error \"builtin function '__builtin_crypto_vncipherlast' is not supported with the current options\" } */\n+  p[0] = __builtin_crypto_vcipher (q[0], r[0]); /* { dg-error \"'__builtin_crypto_vcipher' is not supported with the current options\" } */\n+  p[1] = __builtin_crypto_vcipherlast (q[1], r[1]); /* { dg-error \"'__builtin_crypto_vcipherlast' is not supported with the current options\" } */\n+  p[2] = __builtin_crypto_vncipher (q[2], r[2]); /* { dg-error \"'__builtin_crypto_vncipher' is not supported with the current options\" } */\n+  p[3] = __builtin_crypto_vncipherlast (q[3], r[3]); /* { dg-error \"'__builtin_crypto_vncipherlast' is not supported with the current options\" } */\n   p[4] = __builtin_crypto_vpermxor (q[4], r[4], s[4]);\n   p[5] = __builtin_crypto_vpmsumd (q[5], r[5]);\n-  p[6] = __builtin_crypto_vshasigmad (q[6], 1, 15); /* { dg-error \"builtin function '__builtin_crypto_vshasigmad' is not supported with the current options\" } */\n-  p[7] = __builtin_crypto_vsbox (q[7]); /* { dg-error \"builtin function '__builtin_crypto_vsbox' is not supported with the current options\" } */\n+  p[6] = __builtin_crypto_vshasigmad (q[6], 1, 15); /* { dg-error \"'__builtin_crypto_vshasigmad' is not supported with the current options\" } */\n+  p[7] = __builtin_crypto_vsbox (q[7]); /* { dg-error \"'__builtin_crypto_vsbox' is not supported with the current options\" } */\n }\n \n void use_builtins_w (__vector unsigned int *p, __vector unsigned int *q, __vector unsigned int *r, __vector unsigned int *s)\n {\n   p[0] = __builtin_crypto_vpermxor (q[0], r[0], s[0]);\n   p[1] = __builtin_crypto_vpmsumw (q[1], r[1]);\n-  p[2] = __builtin_crypto_vshasigmaw (q[2], 1, 15); /* { dg-error \"builtin function '__builtin_crypto_vshasigmaw' is not supported with the current options\" } */\n+  p[2] = __builtin_crypto_vshasigmaw (q[2], 1, 15); /* { dg-error \"'__builtin_crypto_vshasigmaw' is not supported with the current options\" } */\n }\n \n void use_builtins_h (__vector unsigned short *p, __vector unsigned short *q, __vector unsigned short *r, __vector unsigned short *s)"}, {"sha": "e660b743e884517032035d74cc0fef78acaabb65", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-1.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"'__builtin_dtstsfi_lt_dd' requires\" } */\n }\n "}, {"sha": "92145f0fd457fdcbbff07ce80bcd2dc3defd074a", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-11.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_lt_dd (5, source);\t/* { dg-error \"'__builtin_dtstsfi_lt_dd' requires\" } */\n }\n "}, {"sha": "62dc52d25a74aff83092ef4c56e079ba57d0c4cc", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-16.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_lt_td (5, source);\t/* { dg-error \"'__builtin_dtstsfi_lt_td' requires\" } */\n }\n \n "}, {"sha": "a8e435b6031462383e0d645861e47c57ad818598", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-21.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-21.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"'__builtin_dtstsfi_gt_dd' requires\" } */\n }\n "}, {"sha": "40790f4ce7e5f1ad0012ce30b21a394dcbd06140", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-26.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-26.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_gt (5, source);\t/* { dg-error \"'__builtin_dtstsfi_gt_td' requires\" } */\n }\n \n "}, {"sha": "a7f39080a88fc82bc37b08864e7b8fc678b02e76", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-31.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-31.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_gt_dd (5, source);\t/* { dg-error \"'__builtin_dtstsfi_gt_dd' requires\" } */\n }\n "}, {"sha": "1b4886785b1a329ae483b0ee2d57a5db1bbeaedd", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-36.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-36.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_gt_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_gt_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_gt_td (5, source);\t/* { dg-error \"'__builtin_dtstsfi_gt_td' requires\" } */\n }\n \n "}, {"sha": "640e6c878550144504d9fe7e45ba3c82fcacf5a3", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-41.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-41.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"'__builtin_dtstsfi_eq_dd' requires\" } */\n }\n "}, {"sha": "6557a6364383685f53a25d8b49604c098d1b9fd2", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-46.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-46.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_eq (5, source);\t/* { dg-error \"'__builtin_dtstsfi_eq_td' requires\" } */\n }\n \n "}, {"sha": "801c8c7628e90887d4da42622ba34279dc55c9c8", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-51.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-51.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_eq_dd (5, source);\t/* { dg-error \"'__builtin_dtstsfi_eq_dd' requires\" } */\n }\n "}, {"sha": "589adebf6104d18ed7724fe0786153fa409c64eb", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-56.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-56.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_eq_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_eq_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_eq_td (5, source);\t/* { dg-error \"'__builtin_dtstsfi_eq_td' requires\" } */\n }\n \n "}, {"sha": "873ad9fa3a30bc89ec496658f391e4266255d22c", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-6.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_lt_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_lt (5, source);\t/* { dg-error \"'__builtin_dtstsfi_lt_td' requires\" } */\n }\n \n "}, {"sha": "3b2867caea1043d213538158c19f888434610665", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-61.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-61.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-61.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-61.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"'__builtin_dtstsfi_ov_dd' requires\" } */\n }\n "}, {"sha": "2b6d30a34ac116fe5ae5929f10155301a8219fe8", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-66.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-66.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_ov (5, source);\t/* { dg-error \"'__builtin_dtstsfi_ov_td' requires\" } */\n }\n \n "}, {"sha": "8fe0b6abbeab7608a713680feac21e270d1d95ec", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-71.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-71.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-71.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-71.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,6 +9,6 @@ int doTestBCDSignificance (_Decimal64 *p)\n {\n   _Decimal64 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov_dd (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_dd' requires\" } */\n+  return __builtin_dfp_dtstsfi_ov_dd (5, source);\t/* { dg-error \"'__builtin_dtstsfi_ov_dd' requires\" } */\n }\n "}, {"sha": "dccc388b04c6aa5dc155b5cd49d7206d8ab961e6", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dtstsfi-76.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdtstsfi-76.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,7 +9,7 @@ int doTestBCDSignificance (_Decimal128 *p)\n {\n   _Decimal128 source = *p;\n \n-  return __builtin_dfp_dtstsfi_ov_td (5, source);\t/* { dg-error \"builtin function '__builtin_dtstsfi_ov_td' requires\" } */\n+  return __builtin_dfp_dtstsfi_ov_td (5, source);\t/* { dg-error \"'__builtin_dtstsfi_ov_td' requires\" } */\n }\n \n "}, {"sha": "c2b237eddd3d8187fd6041fb12a40d0414424a01", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-all-nez-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@ test_all_not_equal_and_not_zero (vector unsigned short *arg1_p,\n   vector unsigned short arg_1 = *arg1_p;\n   vector unsigned short arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez_p (__CR6_LT, arg_1, arg_2);\t/* { dg-error \"builtin function '__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n+  return __builtin_vec_vcmpnez_p (__CR6_LT, arg_1, arg_2);\t/* { dg-error \"'__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n }"}, {"sha": "afd3526476c8e435ce9e73378600e944658ee3d2", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eqz-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ test_any_equal (vector unsigned int *arg1_p, vector unsigned int *arg2_p)\n   vector unsigned int arg_1 = *arg1_p;\n   vector unsigned int arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez_p (__CR6_LT_REV, arg_1, arg_2);\t/* { dg-error \"builtin function '__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n+  return __builtin_vec_vcmpnez_p (__CR6_LT_REV, arg_1, arg_2);\t/* { dg-error \"'__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n }"}, {"sha": "811b32f1c326d25f77aa2015dc0df693aecceb60", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-cmpnez-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cmpnez-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cmpnez-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cmpnez-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ fetch_data (vector unsigned int *arg1_p, vector unsigned int *arg2_p)\n   vector unsigned int arg_1 = *arg1_p;\n   vector unsigned int arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez (arg_1, arg_2);\t/* { dg-error \"builtin function '__builtin_altivec_vcmpnezw' requires the '-mcpu=power9' option\" } */\n+  return __builtin_vec_vcmpnez (arg_1, arg_2);\t/* { dg-error \"'__builtin_altivec_vcmpnezw' requires the '-mcpu=power9' option\" } */\n }"}, {"sha": "6ee066d1effb5edd03f0dc80f26b9efd2fbdaf4f", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-cntlz-lsbb-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cntlz-lsbb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cntlz-lsbb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cntlz-lsbb-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ count_leading_zero_byte_bits (vector unsigned char *arg1_p)\n {\n   vector unsigned char arg_1 = *arg1_p;\n \n-  return __builtin_vec_vclzlsbb (arg_1);\t/* { dg-error \"builtin function '__builtin_altivec_vclzlsbb_v16qi' requires the '-mcpu=power9' option\" } */\n+  return __builtin_vec_vclzlsbb (arg_1);\t/* { dg-error \"'__builtin_altivec_vclzlsbb_v16qi' requires the '-mcpu=power9' option\" } */\n }"}, {"sha": "ecd0add70d051248e0a1f793f13654dfa10a7a3b", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-cnttz-lsbb-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cnttz-lsbb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cnttz-lsbb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-cnttz-lsbb-2.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -9,5 +9,5 @@ count_trailing_zero_byte_bits (vector unsigned char *arg1_p)\n {\n   vector unsigned char arg_1 = *arg1_p;\n \n-  return __builtin_vec_vctzlsbb (arg_1);\t/* { dg-error \"builtin function '__builtin_altivec_vctzlsbb_v16qi' requires the '-mcpu=power9' option\" } */\n+  return __builtin_vec_vctzlsbb (arg_1);\t/* { dg-error \"'__builtin_altivec_vctzlsbb_v16qi' requires the '-mcpu=power9' option\" } */\n }"}, {"sha": "92b0d0dda125e06044ee59ec82894c8320813e0d", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xl-len-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-12.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -11,5 +11,5 @@\n __vector float\n fetch_data (float *address, size_t length)\n {\n-  return __builtin_vec_lxvl (address, length); /* { dg-error \"builtin function '__builtin_vsx_lxvl' requires\" } */\n+  return __builtin_vec_lxvl (address, length); /* { dg-error \"'__builtin_vsx_lxvl' requires\" } */\n }"}, {"sha": "4808c4dce4a96a41a126392e36790d6f290d0c36", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xl-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -13,5 +13,5 @@\n __vector float\n fetch_data (float *address, size_t length)\n {\n-  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"builtin function '__builtin_vec_lxvl' not supported in this compiler configuration\" } */\n+  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"'__builtin_vec_lxvl' not supported in this compiler configuration\" } */\n }"}, {"sha": "c6f7b5c0b911793a859cd1fe5161625bb1325bca", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xlx-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xlx-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xlx-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xlx-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ fetch_data (unsigned int offset, vector signed int *datap)\n {\n   vector signed int data = *datap;\n \n-  return __builtin_vec_vextulx (offset, data);\t/* { dg-error \"builtin function '__builtin_altivec_vextuwlx' requires\" } */\n+  return __builtin_vec_vextulx (offset, data);\t/* { dg-error \"'__builtin_altivec_vextuwlx' requires\" } */\n }"}, {"sha": "fd6b5bee44988589a98cb4b2a3b628e4a0893f7f", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xrx-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xrx-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xrx-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xrx-7.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -10,5 +10,5 @@ fetch_data (unsigned short offset, vector signed short *datap)\n {\n   vector signed short data = *datap;\n \n-  return __builtin_vec_vexturx (offset, data);\t/* { dg-error \"builtin function '__builtin_altivec_vextuhrx' requires\" } */\n+  return __builtin_vec_vexturx (offset, data);\t/* { dg-error \"'__builtin_altivec_vextuhrx' requires\" } */\n }"}, {"sha": "0a0b0cb59b4787fda42c044ad99f40458b1c862c", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xst-len-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -13,5 +13,5 @@ store_data (vector double *datap, double *address, size_t length)\n {\n   vector double data = *datap;\n \n-  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function '__builtin_vec_stxvl' not supported in this compiler configuration\" } */\n+  __builtin_vec_stxvl (data, address, length); /* { dg-error \"'__builtin_vec_stxvl' not supported in this compiler configuration\" } */\n }"}, {"sha": "2a6a7da2745af2f2727eaaf19dcf78ff4aff808b", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xst-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c695c29de8d1507aab62a66e4e678bee92c9339/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-13.c?ref=5c695c29de8d1507aab62a66e4e678bee92c9339", "patch": "@@ -14,5 +14,5 @@ store_data (vector double *datap, double *address, size_t length)\n {\n   vector double data = *datap;\n \n-  __builtin_vec_stxvl (data, address, length); /* { dg-error \"builtin function '__builtin_altivec_stxvl' requires\" } */\n+  __builtin_vec_stxvl (data, address, length); /* { dg-error \"'__builtin_altivec_stxvl' requires\" } */\n }"}]}