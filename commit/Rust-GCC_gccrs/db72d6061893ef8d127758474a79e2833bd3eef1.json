{"sha": "db72d6061893ef8d127758474a79e2833bd3eef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI3MmQ2MDYxODkzZWY4ZDEyNzc1ODQ3NGE3OWUyODMzYmQzZWVmMQ==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-06-29T11:29:18Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-06-29T11:29:18Z"}, "message": "graphite-clast-to-gimple.c: gloog is renamed to graphite_regenerate_ast_cloog.\n\n\tgcc/\n\t* graphite-clast-to-gimple.c:\n\tgloog is renamed to graphite_regenerate_ast_cloog.\n\tgloog_error is renamed to graphite_regenerate_error.\n\t* graphite-clast-to-gimple.h:\n\tThe definition of the struct bb_pbb_def is moved to graphite-htab.h.\n\tAdd inclusion of the hash-table.h.\n\t* graphite-htab.h:\n\tThe declaration of the function gloog is moved\n\tto graphite-clast-to-gimple.h and renamed to\n\tgraphite_regenerate_ast_cloog.\n\t* graphite.c (graphite_transform_loops):\n\tgloog is renamed to graphite_regenerate_ast_cloog.\n\nFrom-SVN: r212121", "tree": {"sha": "d243f2e16ecfa112a40198a739f03c874ee350ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d243f2e16ecfa112a40198a739f03c874ee350ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db72d6061893ef8d127758474a79e2833bd3eef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db72d6061893ef8d127758474a79e2833bd3eef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db72d6061893ef8d127758474a79e2833bd3eef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db72d6061893ef8d127758474a79e2833bd3eef1/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d0f47bbb21c1c1ad9012201ecce9808933fddb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d0f47bbb21c1c1ad9012201ecce9808933fddb"}], "stats": {"total": 65, "additions": 41, "deletions": 24}, "files": [{"sha": "fc0a10231eba7f7dccd97361d2ee5109562e3765", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db72d6061893ef8d127758474a79e2833bd3eef1", "patch": "@@ -1,3 +1,18 @@\n+2014-06-29  Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* graphite-clast-to-gimple.c:\n+\tgloog is renamed to graphite_regenerate_ast_cloog.\n+\tgloog_error is renamed to graphite_regenerate_error.\n+\t* graphite-clast-to-gimple.h:\n+\tThe definition of the struct bb_pbb_def is moved to graphite-htab.h.\n+\tAdd inclusion of the hash-table.h.\n+\t* graphite-htab.h:\n+\tThe declaration of the function gloog is moved\n+\tto graphite-clast-to-gimple.h and renamed to\n+\tgraphite_regenerate_ast_cloog.\n+\t* graphite.c (graphite_transform_loops):\n+\tgloog is renamed to graphite_regenerate_ast_cloog.\n+\n 2014-06-28  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-streamer-out.c (pack_ts_type_common_value_fields): Stream if type"}, {"sha": "71507a030993454808811b93af1e521961670dab", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=db72d6061893ef8d127758474a79e2833bd3eef1", "patch": "@@ -109,7 +109,7 @@ value_max (mpz_t res, mpz_t v1, mpz_t v2)\n \n /* This flag is set when an error occurred during the translation of\n    CLAST to Gimple.  */\n-static bool gloog_error;\n+static bool graphite_regenerate_error;\n \n /* Verifies properties that GRAPHITE should maintain during translation.  */\n \n@@ -364,7 +364,7 @@ max_precision_type (tree type1, tree type2)\n \n   if (precision > BITS_PER_WORD)\n     {\n-      gloog_error = true;\n+      graphite_regenerate_error = true;\n       return integer_type_node;\n     }\n \n@@ -374,7 +374,7 @@ max_precision_type (tree type1, tree type2)\n \n   if (!type)\n     {\n-      gloog_error = true;\n+      graphite_regenerate_error = true;\n       return integer_type_node;\n     }\n \n@@ -457,7 +457,7 @@ clast_to_gcc_expression (tree type, struct clast_expr *e, ivs_params_p ip)\n \t\tif (!POINTER_TYPE_P (type))\n \t\t  return fold_build2 (MULT_EXPR, type, cst, name);\n \n-\t\tgloog_error = true;\n+\t\tgraphite_regenerate_error = true;\n \t\treturn cst;\n \t      }\n \t  }\n@@ -536,7 +536,7 @@ type_for_interval (mpz_t bound_one, mpz_t bound_two)\n \n   if (precision > BITS_PER_WORD)\n     {\n-      gloog_error = true;\n+      graphite_regenerate_error = true;\n       return integer_type_node;\n     }\n \n@@ -559,7 +559,7 @@ type_for_interval (mpz_t bound_one, mpz_t bound_two)\n \n   if (!type)\n     {\n-      gloog_error = true;\n+      graphite_regenerate_error = true;\n       return integer_type_node;\n     }\n \n@@ -1113,7 +1113,8 @@ translate_clast_user (struct clast_user_stmt *stmt, edge next_e,\n \n   build_iv_mapping (iv_map, stmt, ip);\n   next_e = copy_bb_and_scalar_dependences (GBB_BB (gbb), ip->region,\n-\t\t\t\t\t   next_e, iv_map, &gloog_error);\n+\t\t\t\t\t   next_e, iv_map,\n+\t\t\t\t\t   &graphite_regenerate_error);\n   iv_map.release ();\n \n   new_bb = next_e->src;\n@@ -1489,7 +1490,7 @@ build_cloog_union_domain (scop_p scop, int nb_scattering_dims)\n   return union_domain;\n }\n \n-/* Return the options that will be used in GLOOG.  */\n+/* Return the options that will be used in graphite_regenerate_ast_cloog.  */\n \n static CloogOptions *\n set_cloog_options (void)\n@@ -1504,7 +1505,7 @@ set_cloog_options (void)\n   /* Enable complex equality spreading: removes dummy statements\n      (assignments) in the generated code which repeats the\n      substitution equations for statements.  This is useless for\n-     GLooG.  */\n+     graphite_regenerate_ast_cloog.  */\n   options->esp = 1;\n \n   /* Silence CLooG to avoid failing tests due to debug output to stderr.  */\n@@ -1662,7 +1663,7 @@ debug_generated_program (scop_p scop)\n */\n \n bool\n-gloog (scop_p scop, bb_pbb_htab_type *bb_pbb_mapping)\n+graphite_regenerate_ast_cloog (scop_p scop, bb_pbb_htab_type *bb_pbb_mapping)\n {\n   auto_vec<tree, 10> newivs;\n   loop_p context_loop;\n@@ -1673,7 +1674,7 @@ gloog (scop_p scop, bb_pbb_htab_type *bb_pbb_mapping)\n   struct ivs_params ip;\n \n   timevar_push (TV_GRAPHITE_CODE_GEN);\n-  gloog_error = false;\n+  graphite_regenerate_error = false;\n \n   params_index = new clast_index_htab_type (10);\n \n@@ -1713,7 +1714,7 @@ gloog (scop_p scop, bb_pbb_htab_type *bb_pbb_mapping)\n   recompute_all_dominators ();\n   graphite_verify ();\n \n-  if (gloog_error)\n+  if (graphite_regenerate_error)\n     set_ifsese_condition (if_region, integer_zero_node);\n \n   free (if_region->true_region);\n@@ -1740,6 +1741,6 @@ gloog (scop_p scop, bb_pbb_htab_type *bb_pbb_mapping)\n \t       num_no_dependency);\n     }\n \n-  return !gloog_error;\n+  return !graphite_regenerate_error;\n }\n #endif"}, {"sha": "ff6909923feed1c5f328a89676605d101babc342", "filename": "gcc/graphite-clast-to-gimple.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite-clast-to-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite-clast-to-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.h?ref=db72d6061893ef8d127758474a79e2833bd3eef1", "patch": "@@ -21,6 +21,8 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_GRAPHITE_CLAST_TO_GIMPLE_H\n #define GCC_GRAPHITE_CLAST_TO_GIMPLE_H\n \n+#include \"graphite-htab.h\"\n+\n extern CloogState *cloog_state;\n \n /* Data structure for CLooG program representation.  */\n@@ -30,14 +32,7 @@ struct cloog_prog_clast {\n   struct clast_stmt *stmt;\n };\n \n-/* Stores BB's related PBB.  */\n-\n-struct bb_pbb_def\n-{\n-  basic_block bb;\n-  poly_bb_p pbb;\n-};\n-\n+extern bool graphite_regenerate_ast_cloog (scop_p, bb_pbb_htab_type *);\n extern void debug_clast_stmt (struct clast_stmt *);\n extern void print_clast_stmt (FILE *, struct clast_stmt *);\n "}, {"sha": "69fd05a965a4687587af3344ed90ff0f9074fdc7", "filename": "gcc/graphite-htab.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite-htab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite-htab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-htab.h?ref=db72d6061893ef8d127758474a79e2833bd3eef1", "patch": "@@ -22,7 +22,14 @@ along with GCC; see the file COPYING3.  If not see\n #define GCC_GRAPHITE_HTAB_H\n \n #include \"hash-table.h\"\n-#include \"graphite-clast-to-gimple.h\"\n+\n+/* Stores BB's related PBB.  */\n+\n+struct bb_pbb_def\n+{\n+  basic_block bb;\n+  poly_bb_p pbb;\n+};\n \n /* Hashtable helpers.  */\n \n@@ -52,7 +59,6 @@ bb_pbb_hasher::equal (const value_type *bp1, const compare_type *bp2)\n \n typedef hash_table<bb_pbb_hasher> bb_pbb_htab_type;\n \n-extern bool gloog (scop_p, bb_pbb_htab_type *);\n poly_bb_p find_pbb_via_hash (bb_pbb_htab_type *, basic_block);\n bool loop_is_parallel_p (loop_p, bb_pbb_htab_type *, int);\n scop_p get_loop_body_pbbs (loop_p, bb_pbb_htab_type *, vec<poly_bb_p> *);"}, {"sha": "16f154cde2bef719cbcddf8f94d524482ae85de5", "filename": "gcc/graphite.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db72d6061893ef8d127758474a79e2833bd3eef1/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=db72d6061893ef8d127758474a79e2833bd3eef1", "patch": "@@ -299,7 +299,7 @@ graphite_transform_loops (void)\n \n \tif (POLY_SCOP_P (scop)\n \t    && apply_poly_transforms (scop)\n-\t    && gloog (scop, &bb_pbb_mapping))\n+\t    && graphite_regenerate_ast_cloog (scop, &bb_pbb_mapping))\n \t  need_cfg_cleanup_p = true;\n       }\n "}]}