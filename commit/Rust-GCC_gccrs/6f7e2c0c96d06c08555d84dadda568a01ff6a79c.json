{"sha": "6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY3ZTJjMGM5NmQwNmMwODU1NWQ4NGRhZGRhNTY4YTAxZmY2YTc5Yw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-06-14T05:57:26Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-06-14T05:57:26Z"}, "message": "re PR rtl-optimization/22053 (ACATS ICE cxg2002 cxg2008 cxg2019 cxg2020 cxg2021 compensate_edge, at reg-stack.c:2671)\n\n\n\tPR rtl-optimization/22053\n\t* reg-stack.c (compensate_edge): Correct mistake in the assertion\n\tchecking of EDGE_ABNORMAL_CALL edges; complex return values can\n\tresult in the top two stack slots, st(0) and st(1), being live.\n\nFrom-SVN: r100926", "tree": {"sha": "4e2a3aedbd40e21bd136b4bf24914c6fa0844132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e2a3aedbd40e21bd136b4bf24914c6fa0844132"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7e2c0c96d06c08555d84dadda568a01ff6a79c/comments", "author": null, "committer": null, "parents": [{"sha": "ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1f3d7a3424b7b3ee6d4ae0e51288035fffe07a"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "5e2d4deb31d5dbdfc187762575a302afa3df1d03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7e2c0c96d06c08555d84dadda568a01ff6a79c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7e2c0c96d06c08555d84dadda568a01ff6a79c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "patch": "@@ -1,3 +1,10 @@\n+2005-06-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR rtl-optimization/22053\n+\t* reg-stack.c (compensate_edge): Correct mistake in the assertion\n+\tchecking of EDGE_ABNORMAL_CALL edges; complex return values can\n+\tresult in the top two stack slots, st(0) and st(1), being live.\n+\n 2005-06-13  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (simplify_rhs_and_lookup_avail_expr): No longer"}, {"sha": "7ee3be2d0106d4f3e8b6f4f26b25b3ac24224df9", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f7e2c0c96d06c08555d84dadda568a01ff6a79c/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f7e2c0c96d06c08555d84dadda568a01ff6a79c/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "patch": "@@ -2667,8 +2667,9 @@ compensate_edge (edge e, FILE *file)\n     {\n       /* Assert that the lifetimes are as we expect -- one value\n          live at st(0) on the end of the source block, and no\n-         values live at the beginning of the destination block.  */\n-      gcc_assert (source_stack->top == 0);\n+         values live at the beginning of the destination block.\n+\t For complex return values, we may have st(1) live as well.  */\n+      gcc_assert (source_stack->top == 0 || source_stack->top == 1);\n       gcc_assert (target_stack->top == -1);\n       return false;\n     }"}]}