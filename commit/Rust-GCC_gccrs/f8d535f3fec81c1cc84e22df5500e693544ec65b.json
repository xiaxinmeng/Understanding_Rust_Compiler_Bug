{"sha": "f8d535f3fec81c1cc84e22df5500e693544ec65b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhkNTM1ZjNmZWM4MWMxY2M4NGUyMmRmNTUwMGU2OTM1NDRlYzY1Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-08-17T13:50:11Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-08-17T13:51:03Z"}, "message": "Fortran: Implement OpenMP 5.1 scope construct\n\nFortran version to commit e45483c7c4badc4bf2d6ced22360ce1ab172967f,\nwhich implemented OpenMP's scope construct for C and C++.\nMost testcases are based on the C testcases; it also contains some\ntestcases which existed previously but had no Fortran equivalent.\n\ngcc/fortran/ChangeLog:\n\n\t* dump-parse-tree.c (show_omp_node, show_code_node): Handle\n\tEXEC_OMP_SCOPE.\n\t* gfortran.h (enum gfc_statement): Add ST_OMP_(END_)SCOPE.\n\t(enum gfc_exec_op): Add EXEC_OMP_SCOPE.\n\t* match.h (gfc_match_omp_scope): New.\n\t* openmp.c (OMP_SCOPE_CLAUSES): Define\n\t(gfc_match_omp_scope): New.\n\t(gfc_match_omp_cancellation_point, gfc_match_omp_end_nowait):\n\tImprove error diagnostic.\n\t(omp_code_to_statement): Handle ST_OMP_SCOPE.\n\t(gfc_resolve_omp_directive): Handle EXEC_OMP_SCOPE.\n\t* parse.c (decode_omp_directive, next_statement,\n\tgfc_ascii_statement, parse_omp_structured_block,\n\tparse_executable): Handle OpenMP's scope construct.\n\t* resolve.c (gfc_resolve_blocks): Likewise\n\t* st.c (gfc_free_statement): Likewise\n\t* trans-openmp.c (gfc_trans_omp_scope): New.\n\t(gfc_trans_omp_directive): Call it.\n\t* trans.c (trans_code): handle EXEC_OMP_SCOPE.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/scope-1.f90: New test.\n\t* testsuite/libgomp.fortran/task-reduction-16.f90: New test.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/scan-1.f90:\n\t* gfortran.dg/gomp/cancel-1.f90: New test.\n\t* gfortran.dg/gomp/cancel-4.f90: New test.\n\t* gfortran.dg/gomp/loop-4.f90: New test.\n\t* gfortran.dg/gomp/nesting-1.f90: New test.\n\t* gfortran.dg/gomp/nesting-2.f90: New test.\n\t* gfortran.dg/gomp/nesting-3.f90: New test.\n\t* gfortran.dg/gomp/nowait-1.f90: New test.\n\t* gfortran.dg/gomp/reduction-task-1.f90: New test.\n\t* gfortran.dg/gomp/reduction-task-2.f90: New test.\n\t* gfortran.dg/gomp/reduction-task-2a.f90: New test.\n\t* gfortran.dg/gomp/reduction-task-3.f90: New test.\n\t* gfortran.dg/gomp/scope-1.f90: New test.\n\t* gfortran.dg/gomp/scope-2.f90: New test.", "tree": {"sha": "4687f4e37c68a73eda3dc8301ecda4b1cd6a56c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4687f4e37c68a73eda3dc8301ecda4b1cd6a56c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8d535f3fec81c1cc84e22df5500e693544ec65b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d535f3fec81c1cc84e22df5500e693544ec65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d535f3fec81c1cc84e22df5500e693544ec65b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d535f3fec81c1cc84e22df5500e693544ec65b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20698ec5b681e23fa3404ed0ef78e3367b28e16d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20698ec5b681e23fa3404ed0ef78e3367b28e16d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20698ec5b681e23fa3404ed0ef78e3367b28e16d"}], "stats": {"total": 1917, "additions": 1911, "deletions": 6}, "files": [{"sha": "92d9f9e054d7fac5db2cae3dd14baf6dba3fa57b", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -1977,6 +1977,7 @@ show_omp_node (int level, gfc_code *c)\n     case EXEC_OMP_PARALLEL_SECTIONS: name = \"PARALLEL SECTIONS\"; break;\n     case EXEC_OMP_PARALLEL_WORKSHARE: name = \"PARALLEL WORKSHARE\"; break;\n     case EXEC_OMP_SCAN: name = \"SCAN\"; break;\n+    case EXEC_OMP_SCOPE: name = \"SCOPE\"; break;\n     case EXEC_OMP_SECTIONS: name = \"SECTIONS\"; break;\n     case EXEC_OMP_SIMD: name = \"SIMD\"; break;\n     case EXEC_OMP_SINGLE: name = \"SINGLE\"; break;\n@@ -2060,6 +2061,7 @@ show_omp_node (int level, gfc_code *c)\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_SCAN:\n+    case EXEC_OMP_SCOPE:\n     case EXEC_OMP_SECTIONS:\n     case EXEC_OMP_SIMD:\n     case EXEC_OMP_SINGLE:\n@@ -3288,6 +3290,7 @@ show_code_node (int level, gfc_code *c)\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_SCAN:\n+    case EXEC_OMP_SCOPE:\n     case EXEC_OMP_SECTIONS:\n     case EXEC_OMP_SIMD:\n     case EXEC_OMP_SINGLE:"}, {"sha": "a7d82ae38c2c11be198b58088c870ad6b596bb13", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -281,7 +281,7 @@ enum gfc_statement\n   ST_OMP_PARALLEL_MASKED_TASKLOOP_SIMD,\n   ST_OMP_END_PARALLEL_MASKED_TASKLOOP_SIMD, ST_OMP_MASKED_TASKLOOP,\n   ST_OMP_END_MASKED_TASKLOOP, ST_OMP_MASKED_TASKLOOP_SIMD,\n-  ST_OMP_END_MASKED_TASKLOOP_SIMD, ST_NONE\n+  ST_OMP_END_MASKED_TASKLOOP_SIMD, ST_OMP_SCOPE, ST_OMP_END_SCOPE, ST_NONE\n };\n \n /* Types of interfaces that we can have.  Assignment interfaces are\n@@ -2768,7 +2768,7 @@ enum gfc_exec_op\n   EXEC_OMP_TEAMS_LOOP, EXEC_OMP_TARGET_PARALLEL_LOOP,\n   EXEC_OMP_TARGET_TEAMS_LOOP, EXEC_OMP_MASKED, EXEC_OMP_PARALLEL_MASKED,\n   EXEC_OMP_PARALLEL_MASKED_TASKLOOP, EXEC_OMP_PARALLEL_MASKED_TASKLOOP_SIMD,\n-  EXEC_OMP_MASKED_TASKLOOP, EXEC_OMP_MASKED_TASKLOOP_SIMD\n+  EXEC_OMP_MASKED_TASKLOOP, EXEC_OMP_MASKED_TASKLOOP_SIMD, EXEC_OMP_SCOPE\n };\n \n typedef struct gfc_code"}, {"sha": "aac16a8d3d0f2d931cb1c6fe958c23c210345d73", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -190,6 +190,7 @@ match gfc_match_omp_parallel_master_taskloop_simd (void);\n match gfc_match_omp_parallel_sections (void);\n match gfc_match_omp_parallel_workshare (void);\n match gfc_match_omp_requires (void);\n+match gfc_match_omp_scope (void);\n match gfc_match_omp_scan (void);\n match gfc_match_omp_sections (void);\n match gfc_match_omp_simd (void);"}, {"sha": "9675b6584093bf8395ebe3475e9adab272eecae1", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -3150,6 +3150,8 @@ gfc_match_oacc_routine (void)\n #define OMP_LOOP_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_BIND) | OMP_CLAUSE_COLLAPSE | OMP_CLAUSE_ORDER\t\\\n    | OMP_CLAUSE_PRIVATE | OMP_CLAUSE_LASTPRIVATE | OMP_CLAUSE_REDUCTION)\n+#define OMP_SCOPE_CLAUSES \\\n+  (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_REDUCTION)\n #define OMP_SECTIONS_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n    | OMP_CLAUSE_LASTPRIVATE | OMP_CLAUSE_REDUCTION)\n@@ -4487,6 +4489,13 @@ gfc_match_omp_scan (void)\n }\n \n \n+match\n+gfc_match_omp_scope (void)\n+{\n+  return match_omp (EXEC_OMP_SCOPE, OMP_SCOPE_CLAUSES);\n+}\n+\n+\n match\n gfc_match_omp_sections (void)\n {\n@@ -4975,7 +4984,11 @@ gfc_match_omp_cancellation_point (void)\n   gfc_omp_clauses *c;\n   enum gfc_omp_cancel_kind kind = gfc_match_omp_cancel_kind ();\n   if (kind == OMP_CANCEL_UNKNOWN)\n-    return MATCH_ERROR;\n+    {\n+      gfc_error (\"Expected construct-type PARALLEL, SECTIONS, DO or TASKGROUP \"\n+\t\t \"in $OMP CANCELLATION POINT statement at %C\");\n+      return MATCH_ERROR;\n+    }\n   if (gfc_match_omp_eos () != MATCH_YES)\n     {\n       gfc_error (\"Unexpected junk after $OMP CANCELLATION POINT statement \"\n@@ -4998,7 +5011,10 @@ gfc_match_omp_end_nowait (void)\n     nowait = true;\n   if (gfc_match_omp_eos () != MATCH_YES)\n     {\n-      gfc_error (\"Unexpected junk after NOWAIT clause at %C\");\n+      if (nowait)\n+\tgfc_error (\"Unexpected junk after NOWAIT clause at %C\");\n+      else\n+\tgfc_error (\"Unexpected junk at %C\");\n       return MATCH_ERROR;\n     }\n   new_st.op = EXEC_OMP_END_NOWAIT;\n@@ -7448,6 +7464,8 @@ omp_code_to_statement (gfc_code *code)\n       return ST_OMP_DO_SIMD;\n     case EXEC_OMP_SCAN:\n       return ST_OMP_SCAN;\n+    case EXEC_OMP_SCOPE:\n+      return ST_OMP_SCOPE;\n     case EXEC_OMP_SIMD:\n       return ST_OMP_SIMD;\n     case EXEC_OMP_TARGET:\n@@ -7948,6 +7966,7 @@ gfc_resolve_omp_directive (gfc_code *code, gfc_namespace *ns)\n     case EXEC_OMP_PARALLEL_MASKED:\n     case EXEC_OMP_PARALLEL_MASTER:\n     case EXEC_OMP_PARALLEL_SECTIONS:\n+    case EXEC_OMP_SCOPE:\n     case EXEC_OMP_SECTIONS:\n     case EXEC_OMP_SINGLE:\n     case EXEC_OMP_TARGET:"}, {"sha": "24cc9bfb9f1d7f3d60ea1b13b895db5248ebbf98", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -951,6 +951,7 @@ decode_omp_directive (void)\n       matcho (\"end parallel workshare\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_WORKSHARE);\n       matcho (\"end parallel\", gfc_match_omp_eos_error, ST_OMP_END_PARALLEL);\n+      matcho (\"end scope\", gfc_match_omp_end_nowait, ST_OMP_END_SCOPE);\n       matcho (\"end sections\", gfc_match_omp_end_nowait, ST_OMP_END_SECTIONS);\n       matcho (\"end single\", gfc_match_omp_end_single, ST_OMP_END_SINGLE);\n       matcho (\"end target data\", gfc_match_omp_eos_error, ST_OMP_END_TARGET_DATA);\n@@ -1052,6 +1053,7 @@ decode_omp_directive (void)\n       break;\n     case 's':\n       matcho (\"scan\", gfc_match_omp_scan, ST_OMP_SCAN);\n+      matcho (\"scope\", gfc_match_omp_scope, ST_OMP_SCOPE);\n       matcho (\"sections\", gfc_match_omp_sections, ST_OMP_SECTIONS);\n       matcho (\"section\", gfc_match_omp_eos_error, ST_OMP_SECTION);\n       matcho (\"single\", gfc_match_omp_single, ST_OMP_SINGLE);\n@@ -1672,7 +1674,7 @@ next_statement (void)\n   case ST_OMP_CRITICAL: case ST_OMP_MASKED: case ST_OMP_MASKED_TASKLOOP: \\\n   case ST_OMP_MASKED_TASKLOOP_SIMD: \\\n   case ST_OMP_MASTER: case ST_OMP_MASTER_TASKLOOP: \\\n-  case ST_OMP_MASTER_TASKLOOP_SIMD: case ST_OMP_SINGLE: \\\n+  case ST_OMP_MASTER_TASKLOOP_SIMD: case ST_OMP_SCOPE: case ST_OMP_SINGLE: \\\n   case ST_OMP_DO: case ST_OMP_PARALLEL_DO: case ST_OMP_ATOMIC: \\\n   case ST_OMP_WORKSHARE: case ST_OMP_PARALLEL_WORKSHARE: \\\n   case ST_OMP_TASK: case ST_OMP_TASKGROUP: case ST_OMP_SIMD: \\\n@@ -2609,6 +2611,9 @@ gfc_ascii_statement (gfc_statement st)\n     case ST_OMP_SCAN:\n       p = \"!$OMP SCAN\";\n       break;\n+    case ST_OMP_SCOPE:\n+      p = \"!$OMP SCOPE\";\n+      break;\n     case ST_OMP_SECTIONS:\n       p = \"!$OMP SECTIONS\";\n       break;\n@@ -5463,6 +5468,9 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n     case ST_OMP_PARALLEL_SECTIONS:\n       omp_end_st = ST_OMP_END_PARALLEL_SECTIONS;\n       break;\n+    case ST_OMP_SCOPE:\n+      omp_end_st = ST_OMP_END_SCOPE;\n+      break;\n     case ST_OMP_SECTIONS:\n       omp_end_st = ST_OMP_END_SECTIONS;\n       break;\n@@ -5763,11 +5771,12 @@ parse_executable (gfc_statement st)\n \tcase ST_OMP_PARALLEL_MASKED:\n \tcase ST_OMP_PARALLEL_MASTER:\n \tcase ST_OMP_PARALLEL_SECTIONS:\n-\tcase ST_OMP_SECTIONS:\n \tcase ST_OMP_ORDERED:\n \tcase ST_OMP_CRITICAL:\n \tcase ST_OMP_MASKED:\n \tcase ST_OMP_MASTER:\n+\tcase ST_OMP_SCOPE:\n+\tcase ST_OMP_SECTIONS:\n \tcase ST_OMP_SINGLE:\n \tcase ST_OMP_TARGET:\n \tcase ST_OMP_TARGET_DATA:"}, {"sha": "117062b48d8eb52b074e2749556f4b996df082dc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -10839,6 +10839,7 @@ gfc_resolve_blocks (gfc_code *b, gfc_namespace *ns)\n \tcase EXEC_OMP_PARALLEL_WORKSHARE:\n \tcase EXEC_OMP_SECTIONS:\n \tcase EXEC_OMP_SIMD:\n+\tcase EXEC_OMP_SCOPE:\n \tcase EXEC_OMP_SINGLE:\n \tcase EXEC_OMP_TARGET:\n \tcase EXEC_OMP_TARGET_DATA:\n@@ -12262,6 +12263,7 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \tcase EXEC_OMP_MASKED_TASKLOOP_SIMD:\n \tcase EXEC_OMP_ORDERED:\n \tcase EXEC_OMP_SCAN:\n+\tcase EXEC_OMP_SCOPE:\n \tcase EXEC_OMP_SECTIONS:\n \tcase EXEC_OMP_SIMD:\n \tcase EXEC_OMP_SINGLE:"}, {"sha": "7d87709d3872169992cf360d5c10437866b8c812", "filename": "gcc/fortran/st.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Fst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fst.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -246,6 +246,7 @@ gfc_free_statement (gfc_code *p)\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_SCAN:\n+    case EXEC_OMP_SCOPE:\n     case EXEC_OMP_SECTIONS:\n     case EXEC_OMP_SIMD:\n     case EXEC_OMP_SINGLE:"}, {"sha": "e0a001420e639e9b686b92d30011239907ab7169", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -6264,6 +6264,24 @@ gfc_trans_omp_parallel_workshare (gfc_code *code)\n   return gfc_finish_block (&block);\n }\n \n+static tree\n+gfc_trans_omp_scope (gfc_code *code)\n+{\n+  stmtblock_t block;\n+  tree body = gfc_trans_code (code->block->next);\n+  if (IS_EMPTY_STMT (body))\n+    return body;\n+  gfc_start_block (&block);\n+  tree omp_clauses = gfc_trans_omp_clauses (&block, code->ext.omp_clauses,\n+\t\t\t\t\t    code->loc);\n+  tree stmt = make_node (OMP_SCOPE);\n+  TREE_TYPE (stmt) = void_type_node;\n+  OMP_SCOPE_BODY (stmt) = body;\n+  OMP_SCOPE_CLAUSES (stmt) = omp_clauses;\n+  gfc_add_expr_to_block (&block, stmt);\n+  return gfc_finish_block (&block);\n+}\n+\n static tree\n gfc_trans_omp_sections (gfc_code *code, gfc_omp_clauses *clauses)\n {\n@@ -7110,6 +7128,8 @@ gfc_trans_omp_directive (gfc_code *code)\n       return gfc_trans_omp_parallel_sections (code);\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n       return gfc_trans_omp_parallel_workshare (code);\n+    case EXEC_OMP_SCOPE:\n+      return gfc_trans_omp_scope (code);\n     case EXEC_OMP_SECTIONS:\n       return gfc_trans_omp_sections (code, code->ext.omp_clauses);\n     case EXEC_OMP_SINGLE:"}, {"sha": "80b724d08390c3853467e18e0300cd9b290c63ce", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -2175,6 +2175,7 @@ trans_code (gfc_code * code, tree cond)\n \tcase EXEC_OMP_PARALLEL_MASTER_TASKLOOP_SIMD:\n \tcase EXEC_OMP_PARALLEL_SECTIONS:\n \tcase EXEC_OMP_PARALLEL_WORKSHARE:\n+\tcase EXEC_OMP_SCOPE:\n \tcase EXEC_OMP_SECTIONS:\n \tcase EXEC_OMP_SIMD:\n \tcase EXEC_OMP_SINGLE:"}, {"sha": "d60dd72bd4ce9fa9223f7e12630525afa643116b", "filename": "gcc/testsuite/gfortran.dg/gomp/cancel-1.f90", "status": "added", "additions": 539, "deletions": 0, "changes": 539, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,539 @@\n+! { dg-additional-options \"-cpp\" }\n+\n+subroutine f1\n+  !$omp cancel parallel\t\t\t! { dg-error \"orphaned\" }\n+  !$omp cancel do\t\t\t! { dg-error \"orphaned\" }\n+  !$omp cancel sections\t\t\t! { dg-error \"orphaned\" }\n+  !$omp cancel taskgroup\t\t\t! { dg-error \"orphaned\" }\n+  !$omp cancellation point parallel\t! { dg-error \"orphaned\" }\n+  !$omp cancellation point do\t\t! { dg-error \"orphaned\" }\n+  !$omp cancellation point sections\t! { dg-error \"orphaned\" }\n+  !$omp cancellation point taskgroup\t! { dg-error \"orphaned\" }\n+end\n+\n+subroutine f2\n+  integer :: i, j\n+  j = 0\n+  !$omp parallel\n+    !$omp cancel parallel\n+    !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel sections\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point parallel\n+    !$omp cancellation point do\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+\n+    !$omp master\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end master\n+\n+    !$omp masked\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end masked\n+\n+    !$omp scope\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end scope\n+\n+    !$omp single\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end single\n+\n+    !$omp critical\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end critical\n+\n+    !$omp taskgroup\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end taskgroup\n+\n+    !$omp task\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+    !$omp end task\n+\n+    !$omp taskgroup\n+    !$omp task\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\n+    !$omp end task\n+    !$omp end taskgroup\n+\n+    !$omp taskloop\n+    do i = 0, 9\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel taskgroup\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point taskgroup\n+        !$omp task\n+          !$omp cancellation point taskgroup\n+          !$omp cancel taskgroup\n+        !$omp end task\n+    end do\n+    !$omp taskloop nogroup\n+    do i = 0, 9\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel taskgroup\t\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point taskgroup! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+        !$omp task\n+          !$omp cancellation point taskgroup! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+          !$omp cancel taskgroup\t\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+        !$omp end task\n+    end do\n+    !$omp taskgroup\n+      !$omp task\n+        !$omp task\n+          !$omp cancellation point taskgroup\n+          !$omp cancel taskgroup\n+        !$omp end task\n+      !$omp end task\n+      !$omp taskloop nogroup\n+      do i = 0, 9\n+          !$omp task\n+            !$omp cancellation point taskgroup\n+            !$omp cancel taskgroup\n+          !$omp end task\n+          !$omp cancellation point taskgroup\n+          !$omp cancel taskgroup\n+      end do\n+    !$omp end taskgroup\n+\n+    !$omp taskgroup\n+      !$omp parallel\n+        !$omp task\n+          !$omp cancel taskgroup\t\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+          !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+        !$omp end task\n+        !$omp taskloop\n+        do i = 0, 9\n+            !$omp cancel taskgroup\n+            !$omp cancellation point taskgroup\n+        end do\n+        !$omp taskloop nogroup\n+        do i = 0, 9\n+            !$omp cancel taskgroup\t     ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+            !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+        end do\n+      !$omp end parallel\n+      !$omp target\n+        !$omp task\n+          !$omp cancel taskgroup\t\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+          !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+        !$omp end task\n+      !$omp end target\n+      !$omp target\n+      !$omp teams\n+      !$omp distribute\n+      do i = 0, 9\n+          !$omp task\n+            !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+          !$omp end task\n+      end do\n+      !$omp end distribute\n+      !$omp end teams\n+      !$omp end target\n+      !$omp target data map(i)\n+        !$omp task\n+          !$omp cancel taskgroup\n+          !$omp cancellation point taskgroup\n+        !$omp end task\n+      !$omp end target data\n+    !$omp end taskgroup\n+\n+    !$omp taskloop\n+    do i = 0, 9\n+        !$omp parallel\n+          !$omp task\n+            !$omp cancel taskgroup\t     ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+            !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+          !$omp end task\n+        !$omp end parallel\n+        !$omp target\n+          !$omp task\n+            !$omp cancel taskgroup\t     ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+            !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+          !$omp end task\n+        !$omp end target\n+        !$omp target\n+        !$omp teams\n+        !$omp distribute\n+        do j = 0, 9\n+            !$omp task\n+              !$omp cancel taskgroup\t! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+              !$omp cancellation point taskgroup ! { dg-error \"construct not closely nested inside of .taskgroup. region\" }\n+            !$omp end task\n+        end do\n+        !$omp end distribute\n+        !$omp end teams\n+        !$omp end target\n+        !$omp target data map(i)\n+          !$omp task\n+            !$omp cancel taskgroup\n+            !$omp cancellation point taskgroup\n+          !$omp end task\n+        !$omp end target data\n+    end do\n+\n+    !$omp do\n+    do i = 0, 9\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\n+        !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\n+        !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point taskgroup! { dg-error \"not closely nested inside\" }\n+    end do\n+\n+    !$omp do ordered\n+    do i = 0, 9\n+      !$omp ordered\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point taskgroup! { dg-error \"not closely nested inside\" }\n+      !$omp end ordered\n+    end do\n+    !$omp end do\n+    !$omp sections\n+      block\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\n+        !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\n+        !$omp cancellation point taskgroup! { dg-error \"not closely nested inside\" }\n+      end block\n+      !$omp section\n+      block\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\n+        !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\n+        !$omp cancellation point taskgroup! { dg-error \"not closely nested inside\" }\n+      end block\n+    !$omp target data map(j)\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target data\n+    !$omp target\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target\n+  !$omp end sections\n+  !$omp end parallel\n+  !$omp target data map(j)\n+    !$omp cancel parallel\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel sections\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point do\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+  !$omp end target data\n+  !$omp target\n+    !$omp cancel parallel\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel sections\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point do\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+  !$omp end target\n+  !$omp target teams\n+    !$omp cancel parallel\t\t\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancel do\t\t\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancel sections\t\t\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancel taskgroup\t\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancellation point parallel\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancellation point do\t\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancellation point sections\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+    !$omp cancellation point taskgroup\t! { dg-error \"only .distribute., .parallel. or .loop. regions are allowed to be strictly nested\" }\n+  !$omp end target teams\n+  !$omp target teams distribute\n+  do i = 0, 9\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+  end do\n+  !$omp end target teams distribute\n+  !$omp do\n+  do i = 0, 9\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+  end do\n+  !$omp do\n+  do i = 0, 9\n+    !$omp target data map(j)\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target data\n+  end do\n+  !$omp do\n+  do i = 0, 9\n+    !$omp target\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target\n+  end do\n+  !$omp do ordered\n+  do i = 0, 9\n+    !$omp ordered\n+      !$omp target data map(j)\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point taskgroup! { dg-error \"not closely nested inside\" }\n+      !$omp end target data\n+    !$omp end ordered\n+  end do\n+  do i = 0, 9\n+    !$omp ordered\n+      !$omp target\n+        !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+        !$omp cancellation point taskgroup! { dg-error \"not closely nested inside\" }\n+      !$omp end target\n+    !$omp end ordered\n+  end do\n+  !$omp sections\n+    block\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    end block\n+    !$omp section\n+    block\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    end block\n+  !$omp end sections\n+  !$omp sections\n+    !$omp target data map(j)\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target data\n+    !$omp section\n+    !$omp target data map(j)\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target data\n+  !$omp end sections\n+  !$omp sections\n+    !$omp target\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target\n+    !$omp section\n+    !$omp target\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end target\n+  !$omp end sections\n+  !$omp task\n+    !$omp cancel parallel\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel sections\t\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancel taskgroup\n+    !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point do\t\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+    !$omp cancellation point taskgroup\n+    !$omp taskgroup\n+      !$omp cancel parallel\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel do\t\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel sections\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancel taskgroup\t\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point parallel\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point do\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point sections\t! { dg-error \"not closely nested inside\" }\n+      !$omp cancellation point taskgroup\t! { dg-error \"not closely nested inside\" }\n+    !$omp end taskgroup\n+  !$omp end task\n+end\n+\n+subroutine f3\n+  integer i\n+  !$omp do\n+  do i = 0, 9\n+      !$omp cancel do\t\t! { dg-warning \"nowait\" }\n+  end do\n+  !$omp end do nowait\n+  !$omp sections\n+    block\n+      !$omp cancel sections\t! { dg-warning \"nowait\" }\n+    end block\n+    !$omp section\n+    block\n+      !$omp cancel sections\t! { dg-warning \"nowait\" }\n+    end block\n+  !$omp end sections nowait\n+  !$omp do ordered\n+  do i = 0, 9\n+      !$omp cancel do\t\t! { dg-warning \"ordered\" }\n+      !$omp ordered\n+      !$omp end ordered\n+  end do\n+end\n+\n+\n+subroutine f4\n+!  if (.false.) then\n+!$omp cancellation point do ! { dg-error \"orphaned 'cancellation point' construct\" }\n+!  end if\n+end"}, {"sha": "0fb814e42e41ab8bd8587df8720330728f69c3a9", "filename": "gcc/testsuite/gfortran.dg/gomp/cancel-4.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcancel-4.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,9 @@\n+subroutine f4\n+  !$omp cancellation point ! { dg-error \"Expected construct-type PARALLEL, SECTIONS, DO or TASKGROUP in .OMP CANCELLATION POINT statement at\" }\n+  if (.false.) then\n+!$omp cancellation EKAHI ! { dg-error \"Unclassifiable OpenMP directive\" }\n+  end if\n+!$omp cancellation HO OKAHI ! { dg-error \"Unclassifiable OpenMP directive\" }\n+\n+!$omp cancellation point ! { dg-error \"Expected construct-type PARALLEL, SECTIONS, DO or TASKGROUP in .OMP CANCELLATION POINT statement at\" }\n+end"}, {"sha": "73745893c69828613180caaa501bceb07cfbae62", "filename": "gcc/testsuite/gfortran.dg/gomp/loop-4.f90", "status": "added", "additions": 279, "deletions": 0, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Floop-4.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,279 @@\n+module m\n+  use iso_c_binding, only: c_loc\n+  implicit none (type, external)\n+  integer :: v\n+  interface\n+    subroutine foo (); end\n+    integer function omp_get_thread_num (); end\n+    integer function omp_get_num_threads (); end\n+    integer function omp_get_cancellation (); end\n+    integer(c_int) function omp_target_is_present(ptr, device_num) bind(c)\n+      use, intrinsic :: iso_c_binding, only : c_ptr, c_int\n+      type(c_ptr), value :: ptr\n+      integer(c_int), value :: device_num\n+    end\n+  end interface\n+\n+contains\n+subroutine f1(a)\n+  integer :: a(0:)\n+  integer :: i, j\n+  !$omp simd order(concurrent)\n+    do i = 0, 63\n+      !$omp loop\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+end\n+\n+subroutine f2 (a)\n+  integer :: a(0:)\n+  integer :: i, j\n+  !$omp do simd order(concurrent)\n+    do i = 0, 63\n+      !$omp loop\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do    \n+end\n+\n+subroutine f3 (a)\n+  integer :: a(0:)\n+  integer :: i, j\n+  !$omp do order(concurrent)\n+    do i = 0, 63\n+      !$omp loop\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+end\n+\n+subroutine f4 (a)\n+  integer, target :: a(0:)\n+  integer :: i, j\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp parallel\n+        call foo ()\n+      !$omp end parallel\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp simd\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp loop\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp critical  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end critical\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp ordered simd  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end ordered\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp atomic  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      v = v + 1\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp atomic read   ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      a(i) = v\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      !$omp atomic write  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      v = a(i)\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_thread_num ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_thread_num\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_num_threads ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_num_threads\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      a(i) = a(i) + omp_target_is_present (c_loc (a(i)), 0)  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_target_is_present\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop order(concurrent) bind(parallel)\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_cancellation ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_cancellation\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+end\n+\n+subroutine f5 (a)\n+ integer, target :: a(0:)\n+ integer :: i, j\n+ !$omp parallel\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp parallel\n+        call foo ()\n+      !$omp end parallel\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp simd\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp loop\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp critical  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end critical\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp ordered simd  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end ordered\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp atomic  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      v = v + 1\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp atomic read  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      a(i) = v\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp atomic write  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      v = a(i)\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp master  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end master\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp masked  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end masked\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp scope  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end scope\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_thread_num ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_thread_num\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_num_threads ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_num_threads\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_target_is_present (c_loc(a(i)), 0)  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_target_is_present\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_cancellation ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_cancellation\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp end parallel\n+end\n+\n+subroutine f6 (a)\n+ integer, target :: a(0:)\n+ integer :: i, j\n+ !$omp master\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp parallel\n+        call foo ()\n+      !$omp end parallel\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp simd\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp loop\n+      do j = 0, 63\n+        a(64 * i + j) = i + j\n+      end do\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp critical  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end critical\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp ordered simd  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+        call foo ()\n+      !$omp end ordered\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp atomic  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      v = v + 1\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp atomic read  !  { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      a(i) = v\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      !$omp atomic write  ! { dg-error \"OpenMP constructs other than 'parallel', 'loop' or 'simd' may not be nested inside a 'loop' region\" }\n+      v = a(i)\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_thread_num ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_thread_num\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_num_threads ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_num_threads\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_target_is_present (c_loc(a(i)), 0)  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_target_is_present\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+  !$omp loop\n+    do i = 0, 63\n+      a(i) = a(i) + omp_get_cancellation ()  ! { dg-error \"OpenMP runtime API call '\\[^\\n\\r]*omp_get_cancellation\\[^\\n\\r]*' in a region with 'order\\\\(concurrent\\\\)' clause\" }\n+    end do\n+ !$omp end master\n+end\n+end module"}, {"sha": "af4c2fbfef3afa69011994c7fc5cb6794e1045d3", "filename": "gcc/testsuite/gfortran.dg/gomp/nesting-1.f90", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,68 @@\n+module m\n+  implicit none\n+  integer i\n+contains\n+\n+subroutine f_omp_parallel\n+ !$omp parallel\n+  !$omp parallel\n+  !$omp end parallel\n+\n+  !$omp target\n+  !$omp end target\n+\n+  !$omp target data map(i)\n+  !$omp end target data\n+\n+  !$omp target update to(i)\n+\n+  !$omp target data map(i)\n+    !$omp parallel\n+    !$omp end parallel\n+\n+    !$omp target\n+    !$omp end target\n+\n+    !$omp target data map(i)\n+    !$omp end target data\n+\n+    !$omp target update to(i)\n+  !$omp end target data\n+ !$omp end parallel\n+end\n+\n+subroutine f_omp_target\n+  !$omp target\n+    !$omp parallel\n+    !$omp end parallel\n+  !$omp end target\n+end\n+\n+subroutine f_omp_target_data\n+ !$omp target data map(i)\n+  !$omp parallel\n+  !$omp end parallel\n+\n+  !$omp target\n+  !$omp end target\n+\n+  !$omp target data map(i)\n+  !$omp end target data\n+\n+  !$omp target update to(i)\n+\n+  !$omp target data map(i)\n+    !$omp parallel\n+    !$omp end parallel\n+\n+    !$omp target\n+    !$omp end target\n+\n+    !$omp target data map(i)\n+    !$omp end target data\n+\n+    !$omp target update to(i)\n+  !$omp end target data\n+ !$omp end target data\n+end\n+end module m"}, {"sha": "2eccdf9b03474a7e6f1f2b3ef8e282c0ff89fa1b", "filename": "gcc/testsuite/gfortran.dg/gomp/nesting-2.f90", "status": "added", "additions": 165, "deletions": 0, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-2.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,165 @@\n+subroutine foo\n+  integer :: i, j\n+  !$omp taskloop\n+  do i = 0, 63\n+      !$omp do\t\t\t! { dg-error \"region may not be closely nested inside of\" }\n+      do j = 0, 9\n+      end do\n+      !$omp single\t\t! { dg-error \"region may not be closely nested inside of\" }\n+      !$omp end single\n+      !$omp sections\t\t! { dg-error \"region may not be closely nested inside of\" }\n+        !$omp section\n+        block\n+        end block\n+      !$omp end sections\n+      !$omp barrier\t\t! { dg-error \"region may not be closely nested inside of\" }\n+      !$omp master\t\t! { dg-error \"region may not be closely nested inside of\" }  -- ?\n+        block; end block ! otherwise not generated\n+      !$omp end master\n+      !$omp masked\t\t! { dg-error \"region may not be closely nested inside of\" }  -- ?\n+        block; end block ! otherwise not generated\n+      !$omp end masked\n+      !$omp scope\t\t\t! { dg-error \"region may not be closely nested inside of\" }  -- ?\n+        block; end block ! otherwise not generated\n+      !$omp end scope\n+      !$omp ordered\t\t! { dg-error \"region may not be closely nested inside of\" }\n+      !$omp end ordered\n+      !$omp ordered threads\t! { dg-error \"region may not be closely nested inside of\" }\n+      !$omp end ordered\n+      !$omp ordered simd threads\t! { dg-error \".ordered. .simd. must be closely nested inside .simd. region\" }\n+      !$omp end ordered\n+      !$omp simd\n+      do j = 0, 9\n+        !$omp ordered simd\n+        !$omp end ordered\n+      end do\n+      !$omp critical\n+        !$omp simd\n+        do j = 0, 9\n+          !$omp ordered simd\n+          !$omp end ordered\n+        end do\n+      !$omp end critical\n+  end do\n+  !$omp taskloop\n+  do i = 0, 63\n+    !$omp parallel\n+      !$omp do\n+      do j = 0, 9\n+      end do\n+      !$omp single\n+      !$omp end single\n+      !$omp sections\n+        !$omp section\n+        block; end block\n+      !$omp end sections\n+      !$omp barrier\n+      !$omp master\n+        block; end block ! otherwise not generated\n+      !$omp end master\n+      !$omp masked\n+        block; end block ! otherwise not generated\n+      !$omp end masked\n+      !$omp scope\n+        block; end block ! otherwise not generated\n+      !$omp end scope\n+      !$omp ordered\t\t! { dg-error \".ordered. region must be closely nested inside a loop region with an .ordered. clause\" }\n+      !$omp end ordered\n+      !$omp ordered threads\t! { dg-error \".ordered. region must be closely nested inside a loop region with an .ordered. clause\" }\n+      !$omp end ordered\n+      !$omp simd\n+      do j = 0, 9\n+        !$omp ordered simd\n+        !$omp end ordered\n+      end do\n+      !$omp critical\n+        !$omp simd\n+        do j = 0, 9\n+          !$omp ordered simd\n+          !$omp end ordered\n+        end do\n+      !$omp end critical\n+    !$omp end parallel\n+  end do\n+  !$omp taskloop\n+  do i = 0, 63\n+    !$omp target\n+      !$omp do\n+      do j = 0, 9\n+      end do\n+      !$omp single\n+      !$omp end single\n+      !$omp sections\n+        !$omp section\n+        block; end block\n+      !$omp end sections\n+      !$omp barrier\n+      !$omp master\n+        block; end block ! otherwise not generated\n+      !$omp end master\n+      !$omp masked\n+        block; end block ! otherwise not generated\n+      !$omp end masked\n+      !$omp scope\n+        block; end block ! otherwise not generated\n+      !$omp end scope\n+      !$omp ordered\t\t! { dg-error \".ordered. region must be closely nested inside a loop region with an .ordered. clause\" }\n+      !$omp end ordered\n+      !$omp ordered threads\t! { dg-error \".ordered. region must be closely nested inside a loop region with an .ordered. clause\" }\n+      !$omp end ordered\n+      !$omp simd\n+      do j = 0, 9\n+        !$omp ordered simd\n+        !$omp end ordered\n+      end do\n+      !$omp critical\n+        !$omp simd\n+        do j = 0, 9\n+          !$omp ordered simd\n+          !$omp end ordered\n+        end do\n+      !$omp end critical\n+    !$omp end target\n+  end do\n+  !$omp ordered\n+    !$omp ordered\t\t\t! { dg-error \"region may not be closely nested inside of\" }\n+    !$omp end ordered\n+  !$omp end ordered\n+  !$omp ordered threads\n+    !$omp ordered\t\t\t! { dg-error \"region may not be closely nested inside of\" }\n+    !$omp end ordered\n+  !$omp end ordered\n+  !$omp ordered\n+    !$omp ordered threads\t\t! { dg-error \"region may not be closely nested inside of\" }\n+    !$omp end ordered\n+  !$omp end ordered\n+  !$omp ordered threads\n+    !$omp ordered threads\t\t! { dg-error \"region may not be closely nested inside of\" }\n+    !$omp end ordered\n+  !$omp end ordered\n+  !$omp critical\n+    !$omp ordered simd\t\t! { dg-error \".ordered. .simd. must be closely nested inside .simd. region\" }\n+    !$omp end ordered\n+  !$omp end critical\n+  !$omp do ordered\n+  do i = 0, 63\n+    !$omp parallel\n+      !$omp ordered threads\t! { dg-error \".ordered. region must be closely nested inside a loop region with an .ordered. clause\" }\n+      !$omp end ordered\n+    !$omp end parallel\n+  end do\n+  !$omp do ordered\n+  do i = 0, 63\n+    !$omp parallel\n+      !$omp ordered\t\t! { dg-error \".ordered. region must be closely nested inside a loop region with an .ordered. clause\" }\n+      !$omp end ordered\n+    !$omp end parallel\n+  end do\n+  !$omp do ordered(1)\n+  do i = 0, 63\n+    !$omp parallel\n+      !$omp ordered depend(source)\t! { dg-error \".ordered. construct with .depend. clause must be closely nested inside a loop with .ordered. clause with a parameter\" }\n+      !$omp ordered depend(sink: i - 1)\t! { dg-error \".ordered. construct with .depend. clause must be closely nested inside a loop with .ordered. clause with a parameter\" }\n+    !$omp end parallel\n+  end do\n+end"}, {"sha": "cd2e39ae08253e0b958ee7c11dc295a957aa5bb6", "filename": "gcc/testsuite/gfortran.dg/gomp/nesting-3.f90", "status": "added", "additions": 347, "deletions": 0, "changes": 347, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnesting-3.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,347 @@\n+subroutine f1\n+  integer i, j\n+  !$omp do\n+  do i = 0, 2\n+      !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+      do j = 0, 2\n+        block; end block\n+      end do\n+      !$omp sections\t! { dg-error \"may not be closely nested\" }\n+        block; end block\n+        !$omp section\n+        block; end block\n+      !$omp end sections\n+      !$omp single\t! { dg-error \"may not be closely nested\" }\n+        block; end block\n+      !$omp end single\n+      !$omp master\t! { dg-error \"may not be closely nested\" }\n+        block; end block\n+      !$omp end master\n+      !$omp masked\t! { dg-error \"may not be closely nested\" }\n+        block; end block\n+      !$omp end masked\n+      !$omp barrier\t! { dg-error \"may not be closely nested\" }\n+      !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+        block; end block\n+      !$omp end scope\n+  end do\n+  !$omp sections\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+  !$omp end sections\n+  !$omp sections\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+  !$omp end sections\n+  !$omp sections\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+  !$omp end sections\n+  !$omp sections\n+    !$omp master\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end master\n+  !$omp end sections\n+  !$omp sections\n+    !$omp masked\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end masked\n+  !$omp end sections\n+  !$omp sections\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+      block; end block\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+    !$omp master\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end master\n+    !$omp section\n+    !$omp masked\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end masked\n+  !$omp end sections\n+  !$omp sections\n+    !$omp section\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end sections\n+  !$omp single\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+    !$omp master\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end master\n+    !$omp masked\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end masked\n+    !$omp barrier\t\t! { dg-error \"may not be closely nested\" }\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end single\n+  !$omp master\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+    !$omp master\n+      block; end block\n+    !$omp end master\n+    !$omp barrier\t\t! { dg-error \"may not be closely nested\" }\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end master\n+  !$omp masked filter (1)\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+    !$omp master\n+      block; end block\n+    !$omp end master\n+    !$omp barrier\t\t! { dg-error \"may not be closely nested\" }\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end masked\n+  !$omp task\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+    !$omp master\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end master\n+    !$omp masked\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end masked\n+    !$omp barrier\t\t! { dg-error \"may not be closely nested\" }\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end task\n+  !$omp parallel\n+    !$omp do\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\n+      block; end block\n+    !$omp end single\n+    !$omp master\n+      block; end block\n+    !$omp end master\n+    !$omp masked\n+      block; end block\n+    !$omp end masked\n+    !$omp barrier\n+    !$omp scope\n+      block; end block\n+    !$omp end scope\n+    !$omp scope\n+      !$omp scope\n+        block; end block\n+      !$omp end scope\n+    !$omp end scope\n+  !$omp end parallel\n+  !$omp scope\n+    !$omp do\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\n+      block; end block\n+    !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\n+      block; end block\n+    !$omp end single\n+    !$omp master\n+      block; end block\n+    !$omp end master\n+    !$omp masked\n+      block; end block\n+    !$omp end masked\n+    !$omp barrier\n+    !$omp scope\n+      block; end block\n+    !$omp end scope\n+    !$omp scope\n+      !$omp scope\n+        block; end block\n+      !$omp end scope\n+    !$omp end scope\n+  !$omp end scope\n+end\n+\n+subroutine f2\n+  integer i, j\n+  !$omp ordered\n+    !$omp do\t\t! { dg-error \"may not be closely nested\" }\n+    do j = 0, 2\n+      block; end block\n+    end do\n+    !$omp sections\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+      !$omp section\n+      block; end block\n+    !$omp end sections\n+    !$omp single\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end single\n+    !$omp master\n+      block; end block\n+    !$omp end master\n+    !$omp masked\n+      block; end block\n+    !$omp end masked\n+    !$omp barrier\t\t! { dg-error \"may not be closely nested\" }\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end ordered\n+end\n+\n+subroutine f3 (void)\n+  !$omp critical\n+    !$omp ordered\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end ordered\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end critical\n+end\n+\n+subroutine f4 (void)\n+  !$omp task\n+    !$omp ordered\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end ordered\n+    !$omp scope\t\t! { dg-error \"may not be closely nested\" }\n+      block; end block\n+    !$omp end scope\n+  !$omp end task\n+end\n+\n+subroutine f5 (void)\n+  integer i\n+  !$omp do\n+  do i = 0, 9\n+     !$omp ordered\t\t! { dg-error \"must be closely nested\" }\n+       block; end block\n+     !$omp end ordered\n+  end do\n+  !$omp do ordered\n+  do i = 0, 9\n+     !$omp ordered\n+       block; end block\n+     !$omp end ordered\n+  end do\n+end\n+\n+subroutine f6 (void)\n+  !$omp critical (foo)\n+    !$omp critical (bar)\n+      block; end block\n+    !$omp end critical (bar)\n+  !$omp end critical (foo)\n+  !$omp critical\n+    !$omp critical (baz)\n+      block; end block\n+    !$omp end critical (baz)\n+  !$omp end critical\n+end\n+\n+subroutine f7 (void)\n+  !$omp critical (foo2)\n+    !$omp critical\n+      block; end block\n+    !$omp end critical\n+  !$omp end critical (foo2)\n+  !$omp critical (bar)\n+    !$omp critical (bar)\t\t! { dg-error \"may not be nested\" }\n+      block; end block\n+    !$omp end critical (bar)\n+  !$omp end critical (bar)\n+  !$omp critical\n+    !$omp critical\t\t! { dg-error \"may not be nested\" }\n+      block; end block\n+    !$omp end critical\n+  !$omp end critical\n+end"}, {"sha": "b47b4a14e8664906f8b60dd4e5b72f57390e03f9", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-1.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,19 @@\n+subroutine foo\n+\n+!$omp do\n+do i = 1, 2\n+end do\n+!$omp end do nowait foo  ! { dg-error \"Unexpected junk after NOWAIT clause\" }\n+!$omp end do  ! as previous line is ignored\n+\n+!$omp scope\n+  block; end block\n+!$omp end scope bar  ! { dg-error \"Unexpected junk at\" }\n+!$omp end scope\n+\n+!$omp scope\n+  block; end block\n+!$omp end scope nowait nowait ! { dg-error \"Unexpected junk after NOWAIT clause\" }\n+!$omp end scope\n+\n+end"}, {"sha": "99c097f1dade95dd7c7d005efccfd5eb84881225", "filename": "gcc/testsuite/gfortran.dg/gomp/reduction-task-1.f90", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,112 @@\n+module m\n+  implicit none\n+  integer v\n+  interface\n+    subroutine foo(x)\n+      integer, value :: x\n+    end\n+  end interface\n+contains\n+\n+subroutine bar\n+  integer i\n+  !$omp do reduction (task, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp sections reduction (task, +: v)\n+    call foo (-2)\n+    !$omp section\n+    call foo (-3)\n+  !$omp end sections\n+  !$omp parallel reduction (task, +: v)\n+  call foo (-1)\n+  !$omp end parallel\n+  !$omp parallel do reduction (task, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end parallel do\n+  !$omp parallel sections reduction (task, +: v)\n+    call foo (-2)\n+    !$omp section\n+    call foo (-3)\n+  !$omp end parallel sections\n+  !$omp teams distribute parallel do reduction (task, +: v)  ! { dg-bogus \"invalid 'task' reduction modifier on construct other than 'parallel', 'do', 'sections' or 'scope'\" \"PR101948\" { xfail *-*-* } }\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end teams distribute parallel do\n+  !$omp do reduction (default, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp sections reduction (default, +: v)\n+    call foo (-2)\n+    !$omp section\n+    call foo (-3)\n+  !$omp end sections\n+  !$omp parallel reduction (default, +: v)\n+  call foo (-1)\n+  !$omp end parallel\n+  !$omp parallel do reduction (default, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end parallel do\n+  !$omp parallel sections reduction (default, +: v)\n+    call foo (-2)\n+    !$omp section\n+    call foo (-3)\n+  !$omp end parallel sections\n+  !$omp teams distribute parallel do reduction (default, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end teams distribute parallel do\n+  !$omp do reduction (default, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end do nowait\n+  !$omp sections reduction (default, +: v)\n+    call foo (-2)\n+    !$omp section\n+    call foo (-3)\n+  !$omp end sections nowait\n+  !$omp simd reduction (default, +: v)\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp do simd reduction (default, +: v)\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp parallel do simd reduction (default, +: v)\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp end parallel do simd\n+  !$omp teams distribute parallel do simd reduction (default, +: v)\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp end teams distribute parallel do simd\n+  !$omp taskloop reduction (default, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp taskloop simd reduction (default, +: v)\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp teams reduction (default, +: v)\n+  call foo (i)\n+  !$omp end teams\n+  !$omp teams distribute reduction (default, +: v)\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end teams distribute\n+end\n+end"}, {"sha": "c4169bc55d1fa889204090df4a70e3d237632645", "filename": "gcc/testsuite/gfortran.dg/gomp/reduction-task-2.f90", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-2.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,45 @@\n+module m\n+  integer :: v\n+  interface\n+    subroutine foo(i)\n+      integer :: i\n+    end\n+  end interface\n+end\n+\n+subroutine bar\n+  use m\n+  implicit none\n+  integer :: i\n+  !$omp do reduction (task, +: v)  ! { dg-error \"'task' reduction modifier on a construct with a 'nowait' clause\" }\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end do nowait\n+  !$omp sections reduction (task, +: v)\t! { dg-error \"'task' reduction modifier on a construct with a 'nowait' clause\" }\n+    call foo (-2)\n+    !$omp section\n+    call foo (-3)\n+  !$omp end sections nowait\n+  !$omp scope reduction (task, +: v)\t! { dg-error \"'task' reduction modifier on a construct with a 'nowait' clause\" }\n+  call foo (-4)\n+  !$omp end scope nowait\n+  !$omp simd reduction (task, +: v)\t! { dg-error \"invalid 'task' reduction modifier on construct other than 'parallel', 'do', 'sections' or 'scope'\" }\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp do simd reduction (task, +: v)\t! { dg-error \"invalid 'task' reduction modifier on construct other than 'parallel', 'do', 'sections' or 'scope'\" }\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp parallel do simd reduction (task, +: v)\t! { dg-error \"invalid 'task' reduction modifier on construct other than 'parallel', 'do', 'sections' or 'scope'\" }\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp end parallel do simd\n+  !$omp teams distribute parallel do simd reduction (task, +: v)\t! { dg-error \"invalid 'task' reduction modifier on construct other than 'parallel', 'do', 'sections' or 'scope'\" }\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp end teams distribute parallel do simd\n+end"}, {"sha": "37ce1c8b7b8fe4a95c7f6647d2dd37be33725b96", "filename": "gcc/testsuite/gfortran.dg/gomp/reduction-task-2a.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-2a.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-2a.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-2a.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,30 @@\n+module m\n+  integer :: v\n+  interface\n+    subroutine foo(i)\n+      integer :: i\n+    end\n+  end interface\n+end\n+\n+subroutine bar\n+  use m\n+  implicit none\n+  integer :: i\n+  !$omp taskloop reduction (task, +: v)\t! { dg-error \"Only DEFAULT permitted as reduction-modifier in REDUCTION clause\" }\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp taskloop simd reduction (task, +: v)\t! { dg-error \"Only DEFAULT permitted as reduction-modifier in REDUCTION clause\" }\n+  do i = 0, 63\n+    v = v + 1\n+  end do\n+  !$omp teams reduction (task, +: v)\t! { dg-error \"Only DEFAULT permitted as reduction-modifier in REDUCTION clause\" }\n+  call foo (i)\n+  !$omp end teams\n+  !$omp teams distribute reduction (task, +: v)\t! { dg-error \"Only DEFAULT permitted as reduction-modifier in REDUCTION clause\" }\n+  do i = 0, 63\n+    call foo (i)\n+  end do\n+  !$omp end teams distribute\n+end"}, {"sha": "ebf1f1361800d4ac1927b7bfd66909b4fd65006f", "filename": "gcc/testsuite/gfortran.dg/gomp/reduction-task-3.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction-task-3.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,15 @@\n+! Fortran testcase of reduction-task-3.f90 ( PR c/91149 )\n+\n+module m\n+  integer :: r\n+end\n+\n+subroutine foo\n+  use m\n+  !$omp parallel reduction(task, +: r)\n+    r = r + 1\n+  !$omp end parallel\n+  !$omp target parallel reduction(task, +: r)\n+    r = r + 1\n+  !$omp end target parallel\n+end"}, {"sha": "f91c7fae09d3db126779ea07486d32d66e577735", "filename": "gcc/testsuite/gfortran.dg/gomp/scan-1.f90", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscan-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscan-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscan-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -105,6 +105,11 @@ subroutine f3 (c, d)\n     ! ...\n   !$omp end teams\n \n+  !$omp scope reduction (inscan, +: a)\n+    ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" \"\" { target *-*-* } .-1 }\n+    ! ...\n+  !$omp end scope\n+\n   !$omp target parallel do reduction (inscan, +: a) map (c, d)\n   ! { dg-error \"'inscan' REDUCTION clause on construct other than DO, SIMD, DO SIMD, PARALLEL DO, PARALLEL DO SIMD\" \"\" { target *-*-* } .-1 }\n   do i = 1, 64"}, {"sha": "43ec8007df737983f261877b42b2a016fef467ba", "filename": "gcc/testsuite/gfortran.dg/gomp/scope-1.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscope-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscope-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscope-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,39 @@\n+module m\n+  implicit none (external, type)\n+  integer :: r, r2, r3\n+contains\n+\n+subroutine foo\n+  integer :: i, j, k\n+  i = 0; j = 0; k = 0\n+  !$omp scope private (i) reduction (+:r)\n+    i = 1\n+    r = r + 1\n+  !$omp end scope nowait\n+\n+  !$omp scope private (i) reduction (task, +:r)\n+  !$omp scope private (j) reduction (task, +:r2)\n+  !$omp scope private (k) reduction (task, +:r3)\n+    i = 1\n+    j = 2\n+    k = 3\n+    r = r + 1\n+    r2 = r2 + 1\n+    r3 = r3 + 1\n+  !$omp end scope\n+  !$omp end scope\n+  !$omp end scope\n+  !$omp parallel\n+    !$omp scope reduction (+:r) private (i)\n+      !$omp scope reduction (+:r2) private (j)\n+        !$omp single\n+          i = 1\n+          j = 2\n+          r = r + 1\n+          r2 = r2 + 1\n+        !$omp end single\n+      !$omp end scope nowait\n+    !$omp end scope nowait\n+  !$omp end parallel\n+end\n+end module"}, {"sha": "a097ced86ec656f8a0124538be7b576246ff03b2", "filename": "gcc/testsuite/gfortran.dg/gomp/scope-2.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscope-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscope-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fscope-2.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,40 @@\n+module m\n+  implicit none (type, external)\n+  integer :: r, r2, r3 = 1\n+  interface\n+    logical function bar(); end\n+  end interface\n+contains\n+\n+subroutine foo\n+  integer :: i, j, k\n+  i = 0; j = 0; k = 0\n+  !$omp parallel\n+    if (bar ()) then\n+        !$omp cancel parallel\n+    end if\n+    !$omp scope reduction (+:r) private (i)\n+      !$omp scope reduction (+:r2) private (j)\n+        !$omp single\n+          i = 1;\n+          j = 2;\n+          r = r + 1\n+          r2 = r2 + 1\n+        !$omp end single nowait\n+      !$omp end scope\n+    !$omp end scope\n+  !$omp end parallel\n+\n+  !$omp parallel\n+    if (bar ()) then\n+        !$omp cancel parallel\n+    end if\n+    !$omp scope reduction (task, +:r) private (i)\n+    !$omp scope reduction (task, *:r3)\n+      r = r + 1\n+      r3 = r3 + 1\n+    !$omp end scope\n+    !$omp end scope\n+  !$omp end parallel\n+end\n+end module "}, {"sha": "3f41e89413147f1bc047f3f0d3a465585862d32e", "filename": "libgomp/testsuite/libgomp.fortran/scope-1.f90", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fscope-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fscope-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fscope-1.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,55 @@\n+program main\n+  implicit none (type, external)\n+  integer :: r, r2, i\n+  integer a(0:63)\n+  a = 0\n+  r = 0; r2 = 0\n+  !$omp parallel\n+    !$omp scope\n+      !$omp scope\n+        !$omp do\n+          do i = 0, 63\n+            a(i) = a(i) + 1\n+          end do\n+        !$omp end do\n+      !$omp end scope nowait\n+    !$omp end scope nowait\n+\n+    !$omp scope reduction(+: r)\n+      !$omp do\n+        do i = 0, 63\n+          r = r + i\n+          if (a(i) /= 1) &\n+            stop 1\n+        end do\n+      !$omp end do nowait\n+      !$omp barrier\n+    !$omp end scope nowait\n+\n+    !$omp barrier\n+\n+    if (r /= 64 * 63 / 2) &\n+      stop 2\n+\n+    !$omp scope private (i)\n+      !$omp scope reduction(+: r2)\n+        !$omp do\n+          do i = 0, 63\n+            r2 = r2 + 2 * i\n+            a(i) = a(i) + i\n+          end do\n+        !$omp end do nowait\n+      !$omp end scope\n+    !$omp end scope nowait\n+\n+    if (r2 /= 64 * 63) &\n+      stop 3\n+\n+    !$omp do\n+      do i = 0, 63\n+        if (a(i) /= i + 1) &\n+          stop 4\n+      end do\n+    !$omp end do nowait\n+  !$omp end parallel\n+end"}, {"sha": "c6b39e0b3918435be6a36c4327c662180bddb041", "filename": "libgomp/testsuite/libgomp.fortran/task-reduction-16.f90", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8d535f3fec81c1cc84e22df5500e693544ec65b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-reduction-16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8d535f3fec81c1cc84e22df5500e693544ec65b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-reduction-16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Ftask-reduction-16.f90?ref=f8d535f3fec81c1cc84e22df5500e693544ec65b", "patch": "@@ -0,0 +1,82 @@\n+module m\n+  implicit none (external, type)\n+  integer :: a, b(0:2) = [1, 1, 1]\n+  integer(8) :: c(0:1) = [not(0_8), not(0_8)]\n+contains\n+  subroutine bar (i)\n+    integer :: i\n+    !$omp task in_reduction (*: b) in_reduction (iand: c) &\n+    !$omp&     in_reduction (+: a)\n+      a = a + 4\n+      b(1) = b(1) * 4\n+      c(1) = iand (c(1), not(ishft(1_8, i + 16)))\n+    !$omp end task\n+  end subroutine bar\n+\n+  subroutine foo (x)\n+    integer :: x\n+    !$omp scope reduction (task, +: a)\n+      !$omp scope reduction (task, *: b)\n+        !$omp scope reduction (task, iand: c)\n+          !$omp barrier\n+          !$omp sections\n+            block\n+              a = a + 1; b(0) = b(0) * 2; call bar (2); b(2) = b(2) * 3\n+              c(1) = iand(c(1), not(ishft(1_8, 2)))\n+            end block\n+            !$omp section\n+            block\n+              b(0) = b(0) * 2; call bar (4); b(2) = b(2) * 3\n+              c(1) = iand(c(1), not(ishft(1_8, 4))); a = a + 1\n+            end block\n+            !$omp section\n+            block\n+              call bar (6); b(2) = b(2) * 3; c(1) = iand(c(1), not(ishft(1_8, 6)))\n+              a = a + 1; b(0) = b(0) * 2\n+            end block\n+            !$omp section\n+            block\n+              b(2) = b(2) * 3; c(1) = iand(c(1), not(ishft(1_8, 8)))\n+              a = a + 1; b(0) = b(0) * 2; call bar (8)\n+            end block\n+            !$omp section\n+            block\n+              c(1) = iand(c(1), not(ishft(1_8, 10))); a = a + 1\n+              b(0) = b(0) * 2; call bar (10); b(2) = b(2) * 3\n+            end block\n+            !$omp section\n+            block\n+              a = a + 1; b(0) = b(0) * 2; b(2) = b(2) * 3\n+              c(1) = iand(c(1), not(ishft(1_8, 12))); call bar (12)\n+            end block\n+            !$omp section\n+              if (x /= 0) then\n+                a = a + 1; b(0) = b(0) * 2; b(2) = b(2) * 3\n+                call bar (14); c(1) = iand (c(1), not(ishft(1_8, 14)))\n+              end if\n+          !$omp end sections\n+        !$omp end scope \n+      !$omp end scope \n+    !$omp end scope \n+  end subroutine foo\n+end module m\n+\n+program main\n+  use m\n+  implicit none (type, external)\n+  integer, volatile :: one\n+  one = 1\n+  call foo (0)\n+  if (a /= 30 .or. b(0) /= 64 .or. b(1) /= ishft (1, 12) .or. b(2) /= 3 * 3 * 3 * 3 * 3 * 3 &\n+      .or. c(0) /= not(0_8) .or. c(1) /= not(int(z'15541554', kind=8))) &\n+    stop 1\n+  a = 0\n+  b(:) = [1, 1, 1]\n+  c(1) = not(0_8)\n+  !$omp parallel\n+    call foo (one)\n+  !$omp end parallel\n+  if (a /= 35 .or. b(0) /= 128 .or. b(1) /= ishft(1, 14) .or. b(2) /= 3 * 3 * 3 * 3 * 3 * 3 * 3 &\n+      .or. c(0) /= not(0_8) .or. c(1) /= not(int(z'55545554', kind=8))) &\n+    stop 2\n+end program main"}]}