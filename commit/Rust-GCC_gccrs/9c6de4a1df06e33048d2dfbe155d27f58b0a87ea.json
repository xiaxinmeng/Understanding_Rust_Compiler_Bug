{"sha": "9c6de4a1df06e33048d2dfbe155d27f58b0a87ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM2ZGU0YTFkZjA2ZTMzMDQ4ZDJkZmJlMTU1ZDI3ZjU4YjBhODdlYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-12T09:17:50Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-12T09:17:50Z"}, "message": "m68k.h (TARGET_CPU_CPP_BUILTINS): Increase amount of tabbing before backslashes.\n\ngcc/\n\t* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Increase amount\n\tof tabbing before backslashes.\n\nFrom-SVN: r120705", "tree": {"sha": "7dac8b86b066136e8b6d08fb0bf38904e3833ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dac8b86b066136e8b6d08fb0bf38904e3833ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea/comments", "author": null, "committer": null, "parents": [{"sha": "1a8e58a38f9af1be4235b9661bf3683be8495130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a8e58a38f9af1be4235b9661bf3683be8495130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a8e58a38f9af1be4235b9661bf3683be8495130"}], "stats": {"total": 133, "additions": 69, "deletions": 64}, "files": [{"sha": "f29bdf39eab2213cec8e863dc8413785fe509421", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c6de4a1df06e33048d2dfbe155d27f58b0a87ea", "patch": "@@ -1,3 +1,8 @@\n+2007-01-12  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Increase amount\n+\tof tabbing before backslashes.\n+\n 2007-01-11  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa-linux.h (ASM_OUTPUT_INTERNAL_LABEL): Undefine."}, {"sha": "79533fa331c9d62c016d907c56d402d7e00488aa", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c6de4a1df06e33048d2dfbe155d27f58b0a87ea/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=9c6de4a1df06e33048d2dfbe155d27f58b0a87ea", "patch": "@@ -35,70 +35,70 @@ Boston, MA 02110-1301, USA.  */\n /* Note that some other tm.h files include this one and then override\n    many of the definitions that relate to assembler syntax.  */\n \n-#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      builtin_define (\"__m68k__\");\t\t\\\n-      builtin_define_std (\"mc68000\");\t\t\\\n-      if (TARGET_68040_ONLY)\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  if (TARGET_68060)\t\t\t\\\n-\t    builtin_define_std (\"mc68060\");\t\\\n-\t  else\t\t\t\t\t\\\n-\t    builtin_define_std (\"mc68040\");\t\\\n-\t}\t\t\t\t\t\\\n-      else if (TARGET_68060) /* -m68020-60 */\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define_std (\"mc68060\");\t\\\n-\t  builtin_define_std (\"mc68040\");\t\\\n-\t  builtin_define_std (\"mc68030\");\t\\\n-\t  builtin_define_std (\"mc68020\");\t\\\n-\t}\t\t\t\t\t\\\n-      else if (TARGET_68040) /* -m68020-40 */\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define_std (\"mc68040\");\t\\\n-\t  builtin_define_std (\"mc68030\");\t\\\n-\t  builtin_define_std (\"mc68020\");\t\\\n-\t}\t\t\t\t\t\\\n-      else if (TARGET_68030)\t\t\t\\\n-\tbuiltin_define_std (\"mc68030\");\t\t\\\n-      else if (TARGET_68020)\t\t\t\\\n-\tbuiltin_define_std (\"mc68020\");\t\t\\\n-      if (TARGET_68881)\t\t\t\t\\\n-\tbuiltin_define (\"__HAVE_68881__\");\t\\\n-      if (TARGET_CPU32)\t\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define_std (\"mc68332\");\t\\\n-\t  builtin_define_std (\"mcpu32\");\t\\\n-\t}\t\t\t\t\t\\\n-      if (TARGET_COLDFIRE)\t\t\t\\\n-\tbuiltin_define (\"__mcoldfire__\");\t\\\n-      if (TARGET_5200)\t\t\t\t\\\n-\tbuiltin_define (\"__mcf5200__\");\t\t\\\n-      if (TARGET_528x)\t\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define (\"__mcf528x__\");\t\\\n-\t  builtin_define (\"__mcf5200__\");\t\\\n-\t}\t\t\t\t\t\\\n-      if (TARGET_CFV3)\t\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define (\"__mcf5300__\");\t\\\n-\t  builtin_define (\"__mcf5307__\");\t\\\n-\t}\t\t\t\t\t\\\n-      if (TARGET_CFV4)\t\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define (\"__mcf5400__\");\t\\\n-\t  builtin_define (\"__mcf5407__\");\t\\\n-\t}\t\t\t\t\t\\\n-      if (TARGET_CFV4E)\t\t\t\t\\\n-\t{\t\t\t\t\t\\\n-\t  builtin_define (\"__mcfv4e__\");\t\\\n-\t}\t\t\t\t\t\\\n-      if (TARGET_CF_HWDIV)\t\t\t\\\n-\tbuiltin_define (\"__mcfhwdiv__\");\t\\\n-      builtin_assert (\"cpu=m68k\");\t\t\\\n-      builtin_assert (\"machine=m68k\");\t\t\\\n-    }\t\t\t\t\t\t\\\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      builtin_define (\"__m68k__\");\t\t\t\t\t\\\n+      builtin_define_std (\"mc68000\");\t\t\t\t\t\\\n+      if (TARGET_68040_ONLY)\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  if (TARGET_68060)\t\t\t\t\t\t\\\n+\t    builtin_define_std (\"mc68060\");\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\t\\\n+\t    builtin_define_std (\"mc68040\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      else if (TARGET_68060) /* -m68020-60 */\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68060\");\t\t\t\t\\\n+\t  builtin_define_std (\"mc68040\");\t\t\t\t\\\n+\t  builtin_define_std (\"mc68030\");\t\t\t\t\\\n+\t  builtin_define_std (\"mc68020\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      else if (TARGET_68040) /* -m68020-40 */\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68040\");\t\t\t\t\\\n+\t  builtin_define_std (\"mc68030\");\t\t\t\t\\\n+\t  builtin_define_std (\"mc68020\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      else if (TARGET_68030)\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"mc68030\");\t\t\t\t\t\\\n+      else if (TARGET_68020)\t\t\t\t\t\t\\\n+\tbuiltin_define_std (\"mc68020\");\t\t\t\t\t\\\n+      if (TARGET_68881)\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__HAVE_68881__\");\t\t\t\t\\\n+      if (TARGET_CPU32)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define_std (\"mc68332\");\t\t\t\t\\\n+\t  builtin_define_std (\"mcpu32\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      if (TARGET_COLDFIRE)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__mcoldfire__\");\t\t\t\t\\\n+      if (TARGET_5200)\t\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__mcf5200__\");\t\t\t\t\t\\\n+      if (TARGET_528x)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__mcf528x__\");\t\t\t\t\\\n+\t  builtin_define (\"__mcf5200__\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      if (TARGET_CFV3)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__mcf5300__\");\t\t\t\t\\\n+\t  builtin_define (\"__mcf5307__\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      if (TARGET_CFV4)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__mcf5400__\");\t\t\t\t\\\n+\t  builtin_define (\"__mcf5407__\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      if (TARGET_CFV4E)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"__mcfv4e__\");\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      if (TARGET_CF_HWDIV)\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__mcfhwdiv__\");\t\t\t\t\\\n+      builtin_assert (\"cpu=m68k\");\t\t\t\t\t\\\n+      builtin_assert (\"machine=m68k\");\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n /* Classify the groups of pseudo-ops used to assemble QI, HI and SI"}]}