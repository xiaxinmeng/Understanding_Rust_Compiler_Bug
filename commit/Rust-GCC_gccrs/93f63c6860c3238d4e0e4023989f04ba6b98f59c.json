{"sha": "93f63c6860c3238d4e0e4023989f04ba6b98f59c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNmNjNjNjg2MGMzMjM4ZDRlMGU0MDIzOTg5ZjA0YmE2Yjk4ZjU5Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2010-07-18T12:14:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-07-18T12:14:26Z"}, "message": "mips.c (mips16_build_call_stub): Zero-extend the low half of a single-register SCmode return value before ORing...\n\ngcc/\n\t* config/mips/mips.c (mips16_build_call_stub): Zero-extend the\n\tlow half of a single-register SCmode return value before ORing\n\tit with the high half.\n\t* config/mips/mips16.S (MERGE_GPRf): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/mips/mips16-attributes-4.c: New test.\n\nFrom-SVN: r162283", "tree": {"sha": "3f135248859d1c57bf04783407c54fda6c437c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f135248859d1c57bf04783407c54fda6c437c99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93f63c6860c3238d4e0e4023989f04ba6b98f59c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f63c6860c3238d4e0e4023989f04ba6b98f59c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f63c6860c3238d4e0e4023989f04ba6b98f59c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f63c6860c3238d4e0e4023989f04ba6b98f59c/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e789461b0a396ff57adb62b30901948ceeadfba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e789461b0a396ff57adb62b30901948ceeadfba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e789461b0a396ff57adb62b30901948ceeadfba"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "a789ecd2d88b3035c747a2def26190b8f4999c3f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93f63c6860c3238d4e0e4023989f04ba6b98f59c", "patch": "@@ -1,3 +1,10 @@\n+2010-07-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c (mips16_build_call_stub): Zero-extend the\n+\tlow half of a single-register SCmode return value before ORing\n+\tit with the high half.\n+\t* config/mips/mips16.S (MERGE_GPRf): Likewise.\n+\n 2010-07-17  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/44805"}, {"sha": "c2162973393e73db28f099db7ce77b10d03993fd", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=93f63c6860c3238d4e0e4023989f04ba6b98f59c", "patch": "@@ -6318,26 +6318,39 @@ mips16_build_call_stub (rtx retval, rtx *fn_ptr, rtx args_size, int fp_code)\n \t  switch (GET_MODE (retval))\n \t    {\n \t    case SCmode:\n-\t      mips_output_32bit_xfer ('f', GP_RETURN + 1,\n-\t\t\t\t      FP_REG_FIRST + MAX_FPRS_PER_FMT);\n-\t      /* Fall though.  */\n-\t    case SFmode:\n-\t      mips_output_32bit_xfer ('f', GP_RETURN, FP_REG_FIRST);\n+\t      mips_output_32bit_xfer ('f', GP_RETURN + TARGET_BIG_ENDIAN,\n+\t\t\t\t      TARGET_BIG_ENDIAN\n+\t\t\t\t      ? FP_REG_FIRST + MAX_FPRS_PER_FMT\n+\t\t\t\t      : FP_REG_FIRST);\n+\t      mips_output_32bit_xfer ('f', GP_RETURN + TARGET_LITTLE_ENDIAN,\n+\t\t\t\t      TARGET_LITTLE_ENDIAN\n+\t\t\t\t      ? FP_REG_FIRST + MAX_FPRS_PER_FMT\n+\t\t\t\t      : FP_REG_FIRST);\n \t      if (GET_MODE (retval) == SCmode && TARGET_64BIT)\n \t\t{\n \t\t  /* On 64-bit targets, complex floats are returned in\n \t\t     a single GPR, such that \"sd\" on a suitably-aligned\n \t\t     target would store the value correctly.  */\n+\t\t  fprintf (asm_out_file, \"\\tdsll\\t%s,%s,32\\n\",\n+\t\t\t   reg_names[GP_RETURN + TARGET_BIG_ENDIAN],\n+\t\t\t   reg_names[GP_RETURN + TARGET_BIG_ENDIAN]);\n \t\t  fprintf (asm_out_file, \"\\tdsll\\t%s,%s,32\\n\",\n \t\t\t   reg_names[GP_RETURN + TARGET_LITTLE_ENDIAN],\n \t\t\t   reg_names[GP_RETURN + TARGET_LITTLE_ENDIAN]);\n+\t\t  fprintf (asm_out_file, \"\\tdsrl\\t%s,%s,32\\n\",\n+\t\t\t   reg_names[GP_RETURN + TARGET_BIG_ENDIAN],\n+\t\t\t   reg_names[GP_RETURN + TARGET_BIG_ENDIAN]);\n \t\t  fprintf (asm_out_file, \"\\tor\\t%s,%s,%s\\n\",\n \t\t\t   reg_names[GP_RETURN],\n \t\t\t   reg_names[GP_RETURN],\n \t\t\t   reg_names[GP_RETURN + 1]);\n \t\t}\n \t      break;\n \n+\t    case SFmode:\n+\t      mips_output_32bit_xfer ('f', GP_RETURN, FP_REG_FIRST);\n+\t      break;\n+\n \t    case DCmode:\n \t      mips_output_64bit_xfer ('f', GP_RETURN + (8 / UNITS_PER_WORD),\n \t\t\t\t      FP_REG_FIRST + MAX_FPRS_PER_FMT);"}, {"sha": "b9550add02693c7316b5c7cda4ecdc49b05c32bf", "filename": "gcc/config/mips/mips16.S", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Fconfig%2Fmips%2Fmips16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Fconfig%2Fmips%2Fmips16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips16.S?ref=93f63c6860c3238d4e0e4023989f04ba6b98f59c", "patch": "@@ -61,9 +61,11 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    and so that its low 32 bits contain LOW_FPR.  */\n #define MERGE_GPRf(GPR, HIGH_FPR, LOW_FPR)\t\\\n \t.set\tnoat;\t\t\t\t\\\n-\tmfc1\tGPR, HIGH_FPR;\t\t\t\\\n \tmfc1\t$1, LOW_FPR;\t\t\t\\\n+\tmfc1\tGPR, HIGH_FPR;\t\t\t\\\n+\tdsll\t$1, $1, 32;\t\t\t\\\n \tdsll\tGPR, GPR, 32;\t\t\t\\\n+\tdsrl\t$1, $1, 32;\t\t\t\\\n \tor\tGPR, GPR, $1;\t\t\t\\\n \t.set\tat\n "}, {"sha": "b09492d7ccd2be18e8459eed68154d3314a1e35b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93f63c6860c3238d4e0e4023989f04ba6b98f59c", "patch": "@@ -1,3 +1,7 @@\n+2010-07-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.target/mips/mips16-attributes-4.c: New test.\n+\n 2010-07-17  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tPR testsuite/44418"}, {"sha": "de7cb4349b7d0d04c28875bc302fab14f4d5e7db", "filename": "gcc/testsuite/gcc.target/mips/mips16-attributes-4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93f63c6860c3238d4e0e4023989f04ba6b98f59c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-4.c?ref=93f63c6860c3238d4e0e4023989f04ba6b98f59c", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run } */\n+/* { dg-options \"(-mips16)\" } */\n+\n+extern void abort (void);\n+\n+__complex float f = { -1.0 + -1.0i };\n+__complex float __attribute__((nomips16)) foo (void) { return f; }\n+__complex float (*volatile foop) (void) = foo;\n+__complex float __attribute__((mips16, noinline)) bar (void) { return foop (); }\n+\n+int\n+main (void)\n+{\n+  if (bar () != f)\n+    abort ();\n+  return 0;\n+}"}]}