{"sha": "5b9a40df4e3e9c4253239bbc32578eda155577ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI5YTQwZGY0ZTNlOWM0MjUzMjM5YmJjMzI1NzhlZGExNTU1NzdlYQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2007-10-31T14:50:13Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-10-31T14:50:13Z"}, "message": "re PR preprocessor/30786 (ICE on _Pragma at end of file)\n\ngcc/testsuite\n\tPR preprocessor/30786:\n\t* gcc.dg/cpp/pr30786.c: New file.\nlibcpp\n\tPR preprocessor/30786:\n\t* macro.c (builtin_macro): Return result of _cpp_do__Pragma.\n\t* directives.c (_cpp_do__Pragma): Return error status.\n\t* internal.h (_cpp_do__Pragma): Update.\n\t* directives.c (get__Pragma_string): Back up if EOF seen.\n\nFrom-SVN: r129800", "tree": {"sha": "8f71104ce2a18a26b24bccc9043f80465c769a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f71104ce2a18a26b24bccc9043f80465c769a6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b9a40df4e3e9c4253239bbc32578eda155577ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a40df4e3e9c4253239bbc32578eda155577ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9a40df4e3e9c4253239bbc32578eda155577ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a40df4e3e9c4253239bbc32578eda155577ea/comments", "author": null, "committer": null, "parents": [{"sha": "69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d10e15fb001b34aedfe14a7af7c9e1fafea6a0"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "46dcd8ff808805f08124a4a88b85d6b30acaf391", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a40df4e3e9c4253239bbc32578eda155577ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a40df4e3e9c4253239bbc32578eda155577ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b9a40df4e3e9c4253239bbc32578eda155577ea", "patch": "@@ -1,3 +1,8 @@\n+2007-10-31  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR preprocessor/30786:\n+\t* gcc.dg/cpp/pr30786.c: New file.\n+\n 2007-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/33162"}, {"sha": "f39f83cc88782a32efcde19614d98ae3690896d9", "filename": "gcc/testsuite/gcc.dg/cpp/pr30786.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a40df4e3e9c4253239bbc32578eda155577ea/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr30786.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a40df4e3e9c4253239bbc32578eda155577ea/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr30786.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fpr30786.c?ref=5b9a40df4e3e9c4253239bbc32578eda155577ea", "patch": "@@ -0,0 +1,9 @@\n+/* PR preprocessor/30786 - _Pragma at end of file should not ICE */\n+/* { dg-do compile } */\n+\n+/* { dg-error \"parenthesized\" \"\" { target *-*-* } 9 } */\n+/* { dg-error \"expected\" \"\" { target *-*-* } 9 } */\n+\n+int x;\n+\n+_Pragma"}, {"sha": "beed40746faa4258b0acff8a8531ad81933d9850", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=5b9a40df4e3e9c4253239bbc32578eda155577ea", "patch": "@@ -1,3 +1,11 @@\n+2007-10-31  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR preprocessor/30786:\n+\t* macro.c (builtin_macro): Return result of _cpp_do__Pragma.\n+\t* directives.c (_cpp_do__Pragma): Return error status.\n+\t* internal.h (_cpp_do__Pragma): Update.\n+\t* directives.c (get__Pragma_string): Back up if EOF seen.\n+\n 2007-09-06  Tom Tromey  <tromey@redhat.com>\n \n \t* internal.h (struct cpp_reader) <invocation_location>: New"}, {"sha": "e8516e0f39c3fbe96d2edf2d5f4ceeb55e70c679", "filename": "libcpp/directives.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=5b9a40df4e3e9c4253239bbc32578eda155577ea", "patch": "@@ -1467,15 +1467,24 @@ static const cpp_token *\n get__Pragma_string (cpp_reader *pfile)\n {\n   const cpp_token *string;\n+  const cpp_token *paren;\n \n-  if (get_token_no_padding (pfile)->type != CPP_OPEN_PAREN)\n+  paren = get_token_no_padding (pfile);\n+  if (paren->type == CPP_EOF)\n+    _cpp_backup_tokens (pfile, 1);\n+  if (paren->type != CPP_OPEN_PAREN)\n     return NULL;\n \n   string = get_token_no_padding (pfile);\n+  if (string->type == CPP_EOF)\n+    _cpp_backup_tokens (pfile, 1);\n   if (string->type != CPP_STRING && string->type != CPP_WSTRING)\n     return NULL;\n \n-  if (get_token_no_padding (pfile)->type != CPP_CLOSE_PAREN)\n+  paren = get_token_no_padding (pfile);\n+  if (paren->type == CPP_EOF)\n+    _cpp_backup_tokens (pfile, 1);\n+  if (paren->type != CPP_CLOSE_PAREN)\n     return NULL;\n \n   return string;\n@@ -1595,18 +1604,21 @@ destringize_and_run (cpp_reader *pfile, const cpp_string *in)\n   _cpp_push_token_context (pfile, NULL, toks, count);\n }\n \n-/* Handle the _Pragma operator.  */\n-void\n+/* Handle the _Pragma operator.  Return 0 on error, 1 if ok.  */\n+int\n _cpp_do__Pragma (cpp_reader *pfile)\n {\n   const cpp_token *string = get__Pragma_string (pfile);\n   pfile->directive_result.type = CPP_PADDING;\n \n   if (string)\n-    destringize_and_run (pfile, &string->val.str);\n-  else\n-    cpp_error (pfile, CPP_DL_ERROR,\n-\t       \"_Pragma takes a parenthesized string literal\");\n+    {\n+      destringize_and_run (pfile, &string->val.str);\n+      return 1;\n+    }\n+  cpp_error (pfile, CPP_DL_ERROR,\n+\t     \"_Pragma takes a parenthesized string literal\");\n+  return 0;\n }\n \n /* Handle #ifdef.  */"}, {"sha": "830f07bf3a896d1645c5bc18177392ce500da3a8", "filename": "libcpp/internal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finternal.h?ref=5b9a40df4e3e9c4253239bbc32578eda155577ea", "patch": "@@ -576,7 +576,7 @@ extern int _cpp_handle_directive (cpp_reader *, int);\n extern void _cpp_define_builtin (cpp_reader *, const char *);\n extern char ** _cpp_save_pragma_names (cpp_reader *);\n extern void _cpp_restore_pragma_names (cpp_reader *, char **);\n-extern void _cpp_do__Pragma (cpp_reader *);\n+extern int _cpp_do__Pragma (cpp_reader *);\n extern void _cpp_init_directives (cpp_reader *);\n extern void _cpp_init_internal_pragmas (cpp_reader *);\n extern void _cpp_do_file_change (cpp_reader *, enum lc_reason, const char *,"}, {"sha": "50bb34ded5f86fe4338147ff0e8478b64f577a56", "filename": "libcpp/macro.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a40df4e3e9c4253239bbc32578eda155577ea/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=5b9a40df4e3e9c4253239bbc32578eda155577ea", "patch": "@@ -300,8 +300,7 @@ builtin_macro (cpp_reader *pfile, cpp_hashnode *node)\n       if (pfile->state.in_directive)\n \treturn 0;\n \n-      _cpp_do__Pragma (pfile);\n-      return 1;\n+      return _cpp_do__Pragma (pfile);\n     }\n \n   buf = _cpp_builtin_macro_text (pfile, node);"}]}