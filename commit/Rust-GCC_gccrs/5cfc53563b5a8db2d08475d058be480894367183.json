{"sha": "5cfc53563b5a8db2d08475d058be480894367183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNmYzUzNTYzYjVhOGRiMmQwODQ3NWQwNThiZTQ4MDg5NDM2NzE4Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-09-21T08:17:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-09-21T08:17:48Z"}, "message": "re PR target/12301 (corruption in exception path, exception in returned expression)\n\n\tPR target/12301\n\t* reorg.c (stop_search_p): Return 1 for insns that can\n\tthrow internally.\n\nFrom-SVN: r71620", "tree": {"sha": "c123406ad7e9e90e5fce7905e31e32346d1768ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c123406ad7e9e90e5fce7905e31e32346d1768ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cfc53563b5a8db2d08475d058be480894367183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cfc53563b5a8db2d08475d058be480894367183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cfc53563b5a8db2d08475d058be480894367183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cfc53563b5a8db2d08475d058be480894367183/comments", "author": null, "committer": null, "parents": [{"sha": "ddd2d57e722237230da8eea70a2fcecb11bd0f81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd2d57e722237230da8eea70a2fcecb11bd0f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd2d57e722237230da8eea70a2fcecb11bd0f81"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "ca9c54098ea5980b35aee37077c341e9a9467b67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cfc53563b5a8db2d08475d058be480894367183/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cfc53563b5a8db2d08475d058be480894367183/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cfc53563b5a8db2d08475d058be480894367183", "patch": "@@ -1,3 +1,9 @@\n+2003-09-21  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/12301\n+\t* reorg.c (stop_search_p): Return 1 for insns that can\n+\tthrow internally.\n+\n 2003-09-20  Richard Henderson  <rth@redhat.com>\n \n \t* c-format.c (gcc_diag_char_table): Add %J."}, {"sha": "6a13fe0634b320752202c8360bc19d4fa86b99d7", "filename": "gcc/reorg.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cfc53563b5a8db2d08475d058be480894367183/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cfc53563b5a8db2d08475d058be480894367183/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=5cfc53563b5a8db2d08475d058be480894367183", "patch": "@@ -235,6 +235,12 @@ stop_search_p (rtx insn, int labels_p)\n   if (insn == 0)\n     return 1;\n \n+  /* If the insn can throw an exception that is caught within the function,\n+     it may effectively perform a jump from the viewpoint of the function.\n+     Therefore act like for a jump.  */\n+  if (can_throw_internal (insn))\n+    return 1;\n+\n   switch (GET_CODE (insn))\n     {\n     case NOTE:"}, {"sha": "11c7cff5343072a2745fb603af4f3fac50c7ec3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cfc53563b5a8db2d08475d058be480894367183/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cfc53563b5a8db2d08475d058be480894367183/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cfc53563b5a8db2d08475d058be480894367183", "patch": "@@ -1,3 +1,7 @@\n+2003-09-21  Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n+\n+\t* g++.dg/eh/delayslot1.C: New test.\n+\n 2003-09-20  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/format/gcc_diag-1.c: Add tests for %J."}, {"sha": "ddc960e6d8b06c69ba94ee9923f06d5a106c693e", "filename": "gcc/testsuite/g++.dg/eh/delayslot1.C", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cfc53563b5a8db2d08475d058be480894367183/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fdelayslot1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cfc53563b5a8db2d08475d058be480894367183/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fdelayslot1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fdelayslot1.C?ref=5cfc53563b5a8db2d08475d058be480894367183", "patch": "@@ -0,0 +1,47 @@\n+// PR target/12301\n+// Origin: Colin Hirsch <gcc@cohi.at>\n+// Testcase by Christian Ehrhardt <ehrhardt@mathematik.uni-ulm.de>\n+\n+// This used to fail on SPARC because the reorg pass moved an insn\n+// across a function call that can throw internally, in order to put\n+// it in a delay slot.\n+\n+// { dg-do run }\n+// { dg-options \"-O\" }\n+\n+struct S{\n+  char *c;\n+  char data[100];\n+  S () : c (data) {};\n+  S (const S& s) {\n+    c = data;\n+    data[0] = s.c[0];\n+  }\n+};\n+\n+S real_cast ()\n+{\n+  throw 3;  \n+}\n+\n+S cast_helper(S& debug)\n+{\n+  try {\n+    return real_cast();\n+  }\n+  catch (int e) {\n+    throw debug;\n+  }\n+}\n+\n+int main()\n+{\n+  S tmp;\n+\n+  try {\n+    cast_helper (tmp);\n+  }                                        \n+  catch (S& e) {}\n+\n+  return 0;\n+}"}]}