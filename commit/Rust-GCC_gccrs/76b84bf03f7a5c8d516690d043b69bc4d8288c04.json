{"sha": "76b84bf03f7a5c8d516690d043b69bc4d8288c04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZiODRiZjAzZjdhNWM4ZDUxNjY5MGQwNDNiNjliYzRkODI4OGMwNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-27T13:51:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-27T13:51:46Z"}, "message": "[multiple changes]\n\n2009-10-27  Robert Dewar  <dewar@adacore.com>\n\n\t* s-os_lib.ads, s-os_lib.adb, prj-err.adb, makeutl.adb: Minor\n\treformatting.\n\n2009-10-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem.util.ads, sem_util.adb (Denotes_Same_Object,\n\tDenotes_Same_Prefix): New functions to detect overlap between actuals\n\tthat are not by-copy in a call, when one of them is in-out.\n\t* sem_warn.ads, sem_warn.adb (Warn_On_Overlapping_Actuals): New\n\tprocedure,  called on a subprogram call to warn when an in-out actual\n\tthat is not by-copy overlaps with another actual, thus leadind to\n\tpotentially dangerous aliasing in the body of the called subprogram.\n\tCurrently the warning is under control of the -gnatX switch.\n\t* sem_res.adb (resolve_call): call Warn_On_Overlapping_Actuals.\n\nFrom-SVN: r153594", "tree": {"sha": "39117f1ef2342c7a6d902bdfdeaa859e5d1c2f8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39117f1ef2342c7a6d902bdfdeaa859e5d1c2f8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76b84bf03f7a5c8d516690d043b69bc4d8288c04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b84bf03f7a5c8d516690d043b69bc4d8288c04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b84bf03f7a5c8d516690d043b69bc4d8288c04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b84bf03f7a5c8d516690d043b69bc4d8288c04/comments", "author": null, "committer": null, "parents": [{"sha": "0c0c6f49d575f70b8fbd64a5d033d65ee24f9ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c0c6f49d575f70b8fbd64a5d033d65ee24f9ad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c0c6f49d575f70b8fbd64a5d033d65ee24f9ad2"}], "stats": {"total": 374, "additions": 345, "deletions": 29}, "files": [{"sha": "cabdaeef83102eac7dfd0fb8160564fcecd38115", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -1,3 +1,20 @@\n+2009-10-27  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-os_lib.ads, s-os_lib.adb, prj-err.adb, makeutl.adb: Minor\n+\treformatting.\n+\n+2009-10-27  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem.util.ads, sem_util.adb (Denotes_Same_Object,\n+\tDenotes_Same_Prefix): New functions to detect overlap between actuals\n+\tthat are not by-copy in a call, when one of them is in-out.\n+\t* sem_warn.ads, sem_warn.adb (Warn_On_Overlapping_Actuals): New\n+\tprocedure,  called on a subprogram call to warn when an in-out actual\n+\tthat is not by-copy overlaps with another actual, thus leadind to\n+\tpotentially dangerous aliasing in the body of the called subprogram.\n+\tCurrently the warning is under control of the -gnatX switch.\n+\t* sem_res.adb (resolve_call): call Warn_On_Overlapping_Actuals.\n+\n 2009-10-27  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch12.adb (Install_Formal_Packages): Do not omit installation of"}, {"sha": "f9775495f5b95821be281c4d13db72dcdd3a7cd7", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -220,18 +220,18 @@ package body Makeutl is\n                --  (and then will be for the same unit).\n \n                if Find_Source\n-                 (In_Tree   => Project_Tree,\n-                  Project   => No_Project,\n-                  Base_Name => SD.Sfile) = No_Source\n+                    (In_Tree   => Project_Tree,\n+                     Project   => No_Project,\n+                     Base_Name => SD.Sfile) = No_Source\n                then\n                   --  If this is not a runtime file or if, when gnatmake switch\n                   --  -a is used, we are not able to find this subunit in the\n                   --  source directories, then recompilation is needed.\n \n                   if not Fname.Is_Internal_File_Name (SD.Sfile)\n                     or else\n-                      (Check_Readonly_Files and then\n-                       Find_File (SD.Sfile, Osint.Source) = No_File)\n+                      (Check_Readonly_Files\n+                        and then Find_File (SD.Sfile, Osint.Source) = No_File)\n                   then\n                      if Verbose_Mode then\n                         Write_Line\n@@ -242,6 +242,7 @@ package body Makeutl is\n                            & \" but this does not match what was found while\"\n                            & \" parsing the project. Will recompile\");\n                      end if;\n+\n                      return False;\n                   end if;\n                end if;"}, {"sha": "3728c9e44b0b4350a8a762838da15861b16416b3", "filename": "gcc/ada/prj-err.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fprj-err.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fprj-err.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.adb?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -24,8 +24,8 @@\n ------------------------------------------------------------------------------\n \n with Err_Vars;\n-with Output;  use Output;\n-with Stringt; use Stringt;\n+with Output;   use Output;\n+with Stringt;  use Stringt;\n \n package body Prj.Err is\n \n@@ -118,12 +118,13 @@ package body Prj.Err is\n       if Flags.Report_Error /= null then\n          Flags.Report_Error\n            (Project,\n-            Is_Warning => Msg (Msg'First) = '?'\n-            or else (Msg (Msg'First) = '<'\n-              and then Err_Vars.Error_Msg_Warn)\n-            or else (Msg (Msg'First) = '\\'\n-              and then Msg (Msg'First + 1) = '<'\n-                and then Err_Vars.Error_Msg_Warn));\n+            Is_Warning =>\n+              Msg (Msg'First) = '?'\n+                or else (Msg (Msg'First) = '<'\n+                          and then Err_Vars.Error_Msg_Warn)\n+                or else (Msg (Msg'First) = '\\'\n+                          and then Msg (Msg'First + 1) = '<'\n+                          and then Err_Vars.Error_Msg_Warn));\n       end if;\n    end Error_Msg;\n "}, {"sha": "f7341367688e6b2e233dafa1f8afed6c38377291", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -77,13 +77,13 @@ package body System.OS_Lib is\n    -----------------------\n \n    function Args_Length (Args : Argument_List) return Natural;\n-   --  Returns total number of characters needed to create a string\n-   --  of all Args terminated by ASCII.NUL characters\n+   --  Returns total number of characters needed to create a string of all Args\n+   --  terminated by ASCII.NUL characters.\n \n    procedure Create_Temp_File_Internal\n-     (FD        : out File_Descriptor;\n-      Name      : out String_Access;\n-      Stdout    : Boolean);\n+     (FD     : out File_Descriptor;\n+      Name   : out String_Access;\n+      Stdout : Boolean);\n    --  Internal routine to implement two Create_Temp_File routines. If Stdout\n    --  is set to True the created descriptor is stdout-compatible, otherwise\n    --  it might not be depending on the OS (VMS is one example). The first two"}, {"sha": "341a27953ab7b179e1e7c1cd472580e2c7637ffc", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -257,15 +257,14 @@ package System.OS_Lib is\n    --  temp files at the same time in the same directory.\n \n    procedure Create_Temp_Output_File\n-     (FD        : out File_Descriptor;\n-      Name      : out String_Access);\n+     (FD   : out File_Descriptor;\n+      Name : out String_Access);\n    --  Create and open for writing a temporary file in the current working\n-   --  directory suitable to redirect standard output. The name of the file\n-   --  and the File Descriptor are returned.\n-   --  It is the responsibility of the caller to deallocate the access value\n-   --  returned in Name.\n+   --  directory suitable to redirect standard output. The name of the file and\n+   --  the File Descriptor are returned. It is the responsibility of the caller\n+   --  to deallocate the access value returned in Name.\n    --\n-   --  The file is opened in text mode.\n+   --  The file is opened in text mode\n    --\n    --  This procedure will always succeed if the current working directory is\n    --  writable. If the current working directory is not writable, then"}, {"sha": "75e98c08bc45907c477424f9cf94a190b1d8bdb2", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -2935,10 +2935,8 @@ package body Sem_Res is\n                --  anomalies: the subtype was first built in the subprogram\n                --  declaration, and the current call may be nested.\n \n-               if Nkind (Actval) = N_Aggregate\n-                 and then Has_Discriminants (Etype (Actval))\n-               then\n-                  Analyze_And_Resolve (Actval, Base_Type (Etype (Actval)));\n+               if Nkind (Actval) = N_Aggregate then\n+                  Analyze_And_Resolve (Actval, Etype (F));\n                else\n                   Analyze_And_Resolve (Actval, Etype (Actval));\n                end if;\n@@ -5390,6 +5388,7 @@ package body Sem_Res is\n \n       Eval_Call (N);\n       Check_Elab_Call (N);\n+      Warn_On_Overlapping_Actuals (Nam, N);\n    end Resolve_Call;\n \n    -------------------------------"}, {"sha": "5dcd7155f5926e828bf1cfa8cf39d216b3d517cc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -2137,6 +2137,164 @@ package body Sem_Util is\n \n    end Denotes_Discriminant;\n \n+   -------------------------\n+   -- Denotes_Same_Object --\n+   -------------------------\n+\n+   function Denotes_Same_Object (A1, A2 : Node_Id) return Boolean is\n+\n+   begin\n+      if Is_Entity_Name (A1) then\n+         if Is_Entity_Name (A2)then\n+            return  Entity (A1) = Entity (A2);\n+         else\n+            return False;\n+         end if;\n+\n+      elsif Nkind (A1) /= Nkind (A2) then\n+         return False;\n+\n+      elsif Nkind (A1) = N_Selected_Component then\n+         return Denotes_Same_Object (Prefix (A1), Prefix (A2))\n+           and then\n+         Entity (Selector_Name (A1)) = Entity (Selector_Name (A2));\n+\n+      elsif Nkind (A1) = N_Explicit_Dereference then\n+         return Denotes_Same_Object (Prefix (A1), Prefix (A2));\n+\n+      elsif Nkind (A1) = N_Indexed_Component then\n+         if Denotes_Same_Object (Prefix (A1), Prefix (A2)) then\n+            declare\n+               Indx1 : Node_Id;\n+               Indx2 : Node_Id;\n+\n+            begin\n+               Indx1 := First (Expressions (A1));\n+               Indx2 := First (Expressions (A2));\n+               while Present (Indx1) loop\n+                  if not Denotes_Same_Object (Indx1, Indx2) then\n+                     return False;\n+                  end if;\n+\n+                  Next (Indx1);\n+                  Next (Indx2);\n+               end loop;\n+\n+               return True;\n+            end;\n+         else\n+            return False;\n+         end if;\n+\n+      elsif Nkind (A1) = N_Slice\n+        and then Denotes_Same_Object (Prefix (A1), Prefix (A2))\n+      then\n+         declare\n+            Lo1, Lo2, Hi1, Hi2 : Node_Id;\n+\n+         begin\n+            Get_Index_Bounds (Etype (A1), Lo1, Hi1);\n+            Get_Index_Bounds (Etype (A2), Lo2, Hi2);\n+\n+            --  Check whether bounds are statically identical\n+            --  No attempt to detect partial overlap of slices.\n+\n+            return Denotes_Same_Object (Lo1, Lo2)\n+              and then Denotes_Same_Object (Hi1, Hi2);\n+         end;\n+\n+         --  Literals will appear as indices.\n+\n+      elsif Nkind (A1) = N_Integer_Literal then\n+         return Intval (A1) = Intval (A2);\n+\n+      else\n+         return False;\n+      end if;\n+   end Denotes_Same_Object;\n+\n+   -------------------------\n+   -- Denotes_Same_Prefix --\n+   -------------------------\n+\n+   function Denotes_Same_Prefix (A1, A2 : Node_Id) return Boolean is\n+\n+   begin\n+      if Is_Entity_Name (A1) then\n+         if Nkind_In (A2, N_Selected_Component, N_Indexed_Component) then\n+            return Denotes_Same_Object (A1, Prefix (A2))\n+              or else Denotes_Same_Prefix (A1, Prefix (A2));\n+         else\n+            return False;\n+         end if;\n+\n+      elsif Is_Entity_Name (A2) then\n+         return Denotes_Same_Prefix (A2, A1);\n+\n+      elsif Nkind_In (A1, N_Selected_Component, N_Indexed_Component, N_Slice)\n+        and then\n+          Nkind_In (A2, N_Selected_Component, N_Indexed_Component, N_Slice)\n+      then\n+         declare\n+            Root1, Root2 : Node_Id;\n+            Depth1, Depth2 : Int := 0;\n+\n+         begin\n+            Root1 := Prefix (A1);\n+            while not Is_Entity_Name (Root1) loop\n+               if not Nkind_In\n+                 (Root1, N_Selected_Component, N_Indexed_Component)\n+               then\n+                  return False;\n+               else\n+                  Root1 := Prefix (Root1);\n+               end if;\n+\n+               Depth1 := Depth1 + 1;\n+            end loop;\n+\n+            Root2 := Prefix (A2);\n+            while not Is_Entity_Name (Root2) loop\n+               if not Nkind_In\n+                 (Root2, N_Selected_Component, N_Indexed_Component)\n+               then\n+                  return False;\n+               else\n+                  Root2 := Prefix (Root2);\n+               end if;\n+\n+               Depth2 := Depth2 + 1;\n+            end loop;\n+\n+            --  If both have the same depth and they do not denote the same\n+            --  object, they are disjoint and not warning is needed.\n+\n+            if Depth1 = Depth2 then\n+               return False;\n+\n+            elsif Depth1 > Depth2 then\n+               Root1 := Prefix (A1);\n+               for I in 1 .. Depth1 - Depth2 - 1 loop\n+                  Root1 := Prefix (Root1);\n+               end loop;\n+\n+               return Denotes_Same_Object (Root1, A2);\n+\n+            else\n+               Root2 := Prefix (A2);\n+               for I in 1 .. Depth2 - Depth1 - 1 loop\n+                  Root2 := Prefix (Root2);\n+               end loop;\n+\n+               return Denotes_Same_Object (A1, Root2);\n+            end if;\n+         end;\n+\n+      else\n+         return False;\n+      end if;\n+   end Denotes_Same_Prefix;\n+\n    ----------------------\n    -- Denotes_Variable --\n    ----------------------"}, {"sha": "b9a52ed547b6ff68acdf5d12b5b21986dae22999", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -251,6 +251,12 @@ package Sem_Util is\n    --  components of protected types, and constraint checks on entry\n    --  families constrained by discriminants.\n \n+   function Denotes_Same_Object (A1, A2 : Node_Id) return Boolean;\n+   function Denotes_Same_Prefix (A1, A2 : Node_Id) return Boolean;\n+   --  Functions to detect suspicious overlapping between actuals in a call,\n+   --  when one of them is writable. The predicates are those  proposed in\n+   --  AI05-0144, to detect dangerous order dependence in complex calls.\n+\n    function Denotes_Variable (N : Node_Id) return Boolean;\n    --  Returns True if node N denotes a single variable without parentheses\n "}, {"sha": "f9e82cc1e224240becc9038e019daa80a5dfbdd1", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -3535,6 +3535,136 @@ package body Sem_Warn is\n            or else Warn_On_All_Unread_Out_Parameters;\n    end Warn_On_Modified_As_Out_Parameter;\n \n+   ---------------------------------\n+   -- Warn_On_Overlapping_Actuals --\n+   ---------------------------------\n+\n+   procedure Warn_On_Overlapping_Actuals (Subp : Entity_Id; N : Node_Id) is\n+      Act1, Act2   : Node_Id;\n+      Form1, Form2 : Entity_Id;\n+\n+   begin\n+\n+      --  For now, treat this warning as an extension.\n+\n+      if not Extensions_Allowed then\n+         return;\n+      end if;\n+\n+      --  Exclude calls rewritten as enumeration literals\n+\n+      if not Nkind_In\n+        (N, N_Function_Call, N_Procedure_Call_Statement)\n+      then\n+         return;\n+      end if;\n+\n+      --  Exclude calls to library subprograms. Container operations\n+      --  specify safe behavior when source and target coincide.\n+\n+      if Is_Predefined_File_Name (\n+         Unit_File_Name (Get_Source_Unit (Sloc (Subp))))\n+      then\n+         return;\n+      end if;\n+\n+      Form1 := First_Formal (Subp);\n+      Act1  := First_Actual (N);\n+\n+      while Present (Form1) and then Present (Act1) loop\n+         if Ekind (Form1) = E_In_Out_Parameter then\n+            Form2 := First_Formal (Subp);\n+            Act2  := First_Actual (N);\n+\n+            while Present (Form2) and then Present (Act2) loop\n+               if Form1 /= Form2\n+                 and then Ekind (Form2) /= E_Out_Parameter\n+                 and then\n+                   (Denotes_Same_Object (Act1, Act2)\n+                    or else Denotes_Same_Prefix (Act1, Act2))\n+               then\n+\n+                  --  Exclude generic types and guard against previous errors.\n+                  --  If either type is elementary the aliasing is harmless\n+\n+                  if Error_Posted (N)\n+                    or else No (Etype (Act1))\n+                    or else No (Etype (Act2))\n+                  then\n+                     null;\n+\n+                  elsif Is_Generic_Type (Etype (Act1))\n+                    or else Is_Generic_Type (Etype (Act2))\n+                  then\n+                     null;\n+\n+                     --  If the actual is a function call in prefix notation,\n+                     --  there is no real overlap.\n+\n+                  elsif Nkind (Act2) = N_Function_Call then\n+                     null;\n+\n+                  elsif Is_Elementary_Type (Underlying_Type (Etype (Form1)))\n+                    or else\n+                      Is_Elementary_Type (Underlying_Type (Etype (Form2)))\n+                  then\n+                     null;\n+                  else\n+                     declare\n+                        Act  : Node_Id;\n+                        Form : Entity_Id;\n+                     begin\n+                        Act  := First_Actual (N);\n+                        Form := First_Formal (Subp);\n+                        while Act /= Act2 loop\n+                           Next_Formal (Form);\n+                           Next_Actual (Act);\n+                        end loop;\n+\n+                        --  If the call was written in prefix notation, count\n+                        --  only the visible actuals in the call.\n+\n+                        if Is_Entity_Name (First_Actual (N))\n+                          and then Nkind (Original_Node (N)) = Nkind (N)\n+                          and then\n+                            Nkind (Name (Original_Node (N))) =\n+                              N_Selected_Component\n+                          and then\n+                            Is_Entity_Name (Prefix (Name (Original_Node (N))))\n+                          and then\n+                            Entity (Prefix (Name (Original_Node (N)))) =\n+                              Entity (First_Actual (N))\n+                        then\n+                           if Act1 = First_Actual (N) then\n+                              Error_Msg_FE\n+                                (\"in-out prefix overlaps with actual for&?\",\n+                                 Act1, Form);\n+                           else\n+                              Error_Msg_FE\n+                             (\"writable actual overlaps with actual for&?\",\n+                              Act1, Form);\n+                           end if;\n+\n+                        else\n+                           Error_Msg_FE\n+                             (\"writable actual overlaps with actual for&?\",\n+                              Act1, Form);\n+                        end if;\n+                     end;\n+                  end if;\n+                  return;\n+               end if;\n+\n+               Next_Formal (Form2);\n+               Next_Actual (Act2);\n+            end loop;\n+         end if;\n+\n+         Next_Formal (Form1);\n+         Next_Actual (Act1);\n+      end loop;\n+   end Warn_On_Overlapping_Actuals;\n+\n    ------------------------------\n    -- Warn_On_Suspicious_Index --\n    ------------------------------"}, {"sha": "57d565cd83f6c7abbc0df5688d84a3bd5a56740e", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76b84bf03f7a5c8d516690d043b69bc4d8288c04/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=76b84bf03f7a5c8d516690d043b69bc4d8288c04", "patch": "@@ -210,6 +210,11 @@ package Sem_Warn is\n    --  as an out parameter. True if either Warn_On_Modified_Unread is set for\n    --  an only OUT parameter, or if Warn_On_All_Unread_Out_Parameters is set.\n \n+   procedure Warn_On_Overlapping_Actuals (Subp : Entity_Id; N : Node_Id);\n+   --  Called on a subprogram call. Checks whether an in-out actual that is\n+   --  not by-copy may overlap with another actual, thus leadind to aliasing\n+   --  in the body of the called subprogram.\n+\n    procedure Warn_On_Suspicious_Index (Name : Entity_Id; X : Node_Id);\n    --  This is called after resolving an indexed component or a slice. Name\n    --  is the entity for the name of the indexed array, and X is the subscript"}]}