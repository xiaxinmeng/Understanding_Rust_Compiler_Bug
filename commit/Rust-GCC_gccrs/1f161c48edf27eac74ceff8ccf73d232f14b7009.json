{"sha": "1f161c48edf27eac74ceff8ccf73d232f14b7009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYxNjFjNDhlZGYyN2VhYzc0Y2VmZjhjY2Y3M2QyMzJmMTRiNzAwOQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2018-05-28T21:55:31Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2018-05-28T21:55:31Z"}, "message": "re PR fortran/85840 (Memory leak in write.c)\n\n2018-05-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/85840\n\t* io/write.c (write_real, write_real_g0, write_complex): Use\n\tseparate local variables for the float string length.\n\nFrom-SVN: r260851", "tree": {"sha": "92e637e373f77612b8c34dc821fe89809a18a92b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92e637e373f77612b8c34dc821fe89809a18a92b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f161c48edf27eac74ceff8ccf73d232f14b7009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f161c48edf27eac74ceff8ccf73d232f14b7009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f161c48edf27eac74ceff8ccf73d232f14b7009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f161c48edf27eac74ceff8ccf73d232f14b7009/comments", "author": null, "committer": null, "parents": [{"sha": "b0c31bc65b510881ebf481493e1127105bc74ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c31bc65b510881ebf481493e1127105bc74ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c31bc65b510881ebf481493e1127105bc74ee9"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "c0b0f85971188dbf0759e00f1cfb336eddb0fb4b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f161c48edf27eac74ceff8ccf73d232f14b7009/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f161c48edf27eac74ceff8ccf73d232f14b7009/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1f161c48edf27eac74ceff8ccf73d232f14b7009", "patch": "@@ -1,3 +1,9 @@\n+2018-05-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/85840\n+\t* io/write.c (write_real, write_real_g0, write_complex): Use\n+\tseparate local variables for the float string length.\n+\n 2018-05-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/85906"}, {"sha": "dc6a234f42e958751beee5facaaf28b60abf1826", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f161c48edf27eac74ceff8ccf73d232f14b7009/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f161c48edf27eac74ceff8ccf73d232f14b7009/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=1f161c48edf27eac74ceff8ccf73d232f14b7009", "patch": "@@ -1682,7 +1682,7 @@ write_real (st_parameter_dt *dtp, const char *source, int kind)\n   char buf_stack[BUF_STACK_SZ];\n   char str_buf[BUF_STACK_SZ];\n   char *buffer, *result;\n-  size_t buf_size, res_len;\n+  size_t buf_size, res_len, flt_str_len;\n   int orig_scale = dtp->u.p.scale_factor;\n   dtp->u.p.scale_factor = 1;\n   set_fnode_default (dtp, &f, kind);\n@@ -1697,8 +1697,8 @@ write_real (st_parameter_dt *dtp, const char *source, int kind)\n   buffer = select_buffer (dtp, &f, precision, buf_stack, &buf_size, kind);\n   \n   get_float_string (dtp, &f, source , kind, 1, buffer,\n-                           precision, buf_size, result, &res_len);\n-  write_float_string (dtp, result, res_len);\n+                           precision, buf_size, result, &flt_str_len);\n+  write_float_string (dtp, result, flt_str_len);\n \n   dtp->u.p.scale_factor = orig_scale;\n   if (buf_size > BUF_STACK_SZ)\n@@ -1717,7 +1717,7 @@ write_real_g0 (st_parameter_dt *dtp, const char *source, int kind, int d)\n   char buf_stack[BUF_STACK_SZ];\n   char str_buf[BUF_STACK_SZ];\n   char *buffer, *result;\n-  size_t buf_size, res_len;\n+  size_t buf_size, res_len, flt_str_len;\n   int comp_d;\n   set_fnode_default (dtp, &f, kind);\n \n@@ -1741,8 +1741,8 @@ write_real_g0 (st_parameter_dt *dtp, const char *source, int kind, int d)\n   buffer = select_buffer (dtp, &f, precision, buf_stack, &buf_size, kind);\n \n   get_float_string (dtp, &f, source , kind, comp_d, buffer,\n-                           precision, buf_size, result, &res_len);\n-  write_float_string (dtp, result, res_len);\n+                           precision, buf_size, result, &flt_str_len);\n+  write_float_string (dtp, result, flt_str_len);\n \n   dtp->u.p.g0_no_blanks = 0;\n   if (buf_size > BUF_STACK_SZ)\n@@ -1767,7 +1767,7 @@ write_complex (st_parameter_dt *dtp, const char *source, int kind, size_t size)\n   char str1_buf[BUF_STACK_SZ];\n   char str2_buf[BUF_STACK_SZ];\n   char *buffer, *result1, *result2;\n-  size_t buf_size, res_len1, res_len2;\n+  size_t buf_size, res_len1, res_len2, flt_str_len1, flt_str_len2;\n   int width, lblanks, orig_scale = dtp->u.p.scale_factor;\n \n   dtp->u.p.scale_factor = 1;\n@@ -1790,18 +1790,18 @@ write_complex (st_parameter_dt *dtp, const char *source, int kind, size_t size)\n   buffer = select_buffer (dtp, &f, precision, buf_stack, &buf_size, kind);\n \n   get_float_string (dtp, &f, source , kind, 0, buffer,\n-                           precision, buf_size, result1, &res_len1);\n+                           precision, buf_size, result1, &flt_str_len1);\n   get_float_string (dtp, &f, source + size / 2 , kind, 0, buffer,\n-                           precision, buf_size, result2, &res_len2);\n+                           precision, buf_size, result2, &flt_str_len2);\n   if (!dtp->u.p.namelist_mode)\n     {\n-      lblanks = width - res_len1 - res_len2 - 3;\n+      lblanks = width - flt_str_len1 - flt_str_len2 - 3;\n       write_x (dtp, lblanks, lblanks);\n     }\n   write_char (dtp, '(');\n-  write_float_string (dtp, result1, res_len1);\n+  write_float_string (dtp, result1, flt_str_len1);\n   write_char (dtp, semi_comma);\n-  write_float_string (dtp, result2, res_len2);\n+  write_float_string (dtp, result2, flt_str_len2);\n   write_char (dtp, ')');\n \n   dtp->u.p.scale_factor = orig_scale;"}]}