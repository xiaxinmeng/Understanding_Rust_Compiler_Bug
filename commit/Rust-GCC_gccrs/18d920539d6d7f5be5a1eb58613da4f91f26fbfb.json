{"sha": "18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThkOTIwNTM5ZDZkN2Y1YmU1YTFlYjU4NjEzZGE0ZjkxZjI2ZmJmYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-10T22:37:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-10T22:37:22Z"}, "message": "re PR c++/48029 (ICE in finish_member_declaration() with --param ggc-min-expand=0 --param ggc-min-heapsize=0)\n\n\tPR c++/48029\n\t* stor-layout.c (layout_type): Don't set structural equality\n\ton arrays of incomplete type.\n\t* tree.c (type_hash_eq): Handle comparing them properly.\n\t* cp/pt.c (iterative_hash_template_arg): Remove special case for\n\tARRAY_TYPE.\n\nFrom-SVN: r170853", "tree": {"sha": "ed11f647b03450960c8b2c0d83b0de6f831f7883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed11f647b03450960c8b2c0d83b0de6f831f7883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/comments", "author": null, "committer": null, "parents": [{"sha": "67a2f76d4c054da755bd23ef9a08854b3340b715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67a2f76d4c054da755bd23ef9a08854b3340b715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67a2f76d4c054da755bd23ef9a08854b3340b715"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "45b83c8994b8873d08cdd0420c342465b8946f3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -1,7 +1,14 @@\n+2011-03-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48029\n+\t* stor-layout.c (layout_type): Don't set structural equality\n+\ton arrays of incomplete type.\n+\t* tree.c (type_hash_eq): Handle comparing them properly.\n+\n 2011-03-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/48043\n-\t* config/s390/s390.c (s390_delegitimize_address): Make sure the                                                                            \n+\t* config/s390/s390.c (s390_delegitimize_address): Make sure the\n \tresult mode matches original rtl mode.\n \n 2011-03-10  Nick Clifton  <nickc@redhat.com>"}, {"sha": "a4c394cbf35e556a97192455a6a146d3bda99bfe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -1,5 +1,9 @@\n 2011-03-10  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48029\n+\t* pt.c (iterative_hash_template_arg): Remove special case for\n+\tARRAY_TYPE.\n+\n \tPR c++/47198\n \t* parser.c (cp_parser_single_declaration): Just return if\n \tcp_parser_parse_and_diagnose_invalid_type_name complained."}, {"sha": "ab2aea3b53679ccf89398f8492da8c6cd27a63d6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -1569,13 +1569,6 @@ iterative_hash_template_arg (tree arg, hashval_t val)\n       val = iterative_hash_object (code, val);\n       return iterative_hash_template_arg (TREE_OPERAND (arg, 2), val);\n \n-    case ARRAY_TYPE:\n-      /* layout_type sets structural equality for arrays of\n-\t incomplete type, so we can't rely on the canonical type\n-\t for hashing.  */\n-      val = iterative_hash_template_arg (TREE_TYPE (arg), val);\n-      return iterative_hash_template_arg (TYPE_DOMAIN (arg), val);\n-\n     case LAMBDA_EXPR:\n       /* A lambda can't appear in a template arg, but don't crash on\n \t erroneous input.  */"}, {"sha": "ed36c5b3a5a4cdca479d494ec2530f59a3ed3bea", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -2028,11 +2028,6 @@ layout_type (tree type)\n #else\n \tTYPE_ALIGN (type) = MAX (TYPE_ALIGN (element), BITS_PER_UNIT);\n #endif\n-\tif (!TYPE_SIZE (element))\n-\t  /* We don't know the size of the underlying element type, so\n-\t     our alignment calculations will be wrong, forcing us to\n-\t     fall back on structural equality. */\n-\t  SET_TYPE_STRUCTURAL_EQUALITY (type);\n \tTYPE_USER_ALIGN (type) = TYPE_USER_ALIGN (element);\n \tSET_TYPE_MODE (type, BLKmode);\n \tif (TYPE_SIZE (type) != 0"}, {"sha": "c3dec73ba13c9665d1394862800b5e3ef0f2dfac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -1,5 +1,7 @@\n 2011-03-10  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/template/array22.C: New.\n+\n \t* g++.dg/cpp0x/syntax-err1.C: New.\n \t* g++.dg/parse/error36.C: Adjust expected errors.\n \t* g++.old-deja/g++.pt/ctor2.C: Likewise."}, {"sha": "e101587738b3fe32d938687c93cf109b148793a1", "filename": "gcc/testsuite/g++.dg/template/array22.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farray22.C?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/48029\n+\n+template <class T> struct A { };\n+template <class T, class U> struct B\n+{\n+  struct N { };\n+  typedef U u;\n+};\n+\n+typedef B<int, A<int>(*)[2]> btype;\n+A<int> v1[2];\n+btype v2;\n+\n+"}, {"sha": "2e1b9a308bd19c32b8c5f926dd1cd4763231c0fc", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18d920539d6d7f5be5a1eb58613da4f91f26fbfb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=18d920539d6d7f5be5a1eb58613da4f91f26fbfb", "patch": "@@ -5981,12 +5981,19 @@ type_hash_eq (const void *va, const void *vb)\n       || TREE_TYPE (a->type) != TREE_TYPE (b->type)\n       || !attribute_list_equal (TYPE_ATTRIBUTES (a->type),\n \t\t\t\t TYPE_ATTRIBUTES (b->type))\n-      || TYPE_ALIGN (a->type) != TYPE_ALIGN (b->type)\n-      || TYPE_MODE (a->type) != TYPE_MODE (b->type)\n       || (TREE_CODE (a->type) != COMPLEX_TYPE\n           && TYPE_NAME (a->type) != TYPE_NAME (b->type)))\n     return 0;\n \n+  /* Be careful about comparing arrays before and after the element type\n+     has been completed; don't compare TYPE_ALIGN unless both types are\n+     complete.  */\n+  if (COMPLETE_OR_UNBOUND_ARRAY_TYPE_P (a->type)\n+      && COMPLETE_OR_UNBOUND_ARRAY_TYPE_P (b->type)\n+      && (TYPE_ALIGN (a->type) != TYPE_ALIGN (b->type)\n+\t  || TYPE_MODE (a->type) != TYPE_MODE (b->type)))\n+    return 0;\n+\n   switch (TREE_CODE (a->type))\n     {\n     case VOID_TYPE:"}]}