{"sha": "759149fbf3c844c39b283e487190eed9377b594e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU5MTQ5ZmJmM2M4NDRjMzliMjgzZTQ4NzE5MGVlZDkzNzdiNTk0ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-05-21T16:57:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-05-21T16:57:17Z"}, "message": "re PR libstdc++/25306 (fill_n, generate_n assume Size is modifiable)\n\n2010-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/25306\n\t* include/bits/stl_algobase.h (fill_n): Use a properly typed __niter\n\tinitialized to __n.\n\t* include/bits/stl_algo.h (generate_n): Likewise.\n\t* testsuite/25_algorithms/fill_n/25306.cc: New.\n\t* testsuite/25_algorithms/generate_n/25306.cc: Likewise.\n\nFrom-SVN: r159677", "tree": {"sha": "759716ca467179a6c260bd41e88fbf2bb7ecd570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/759716ca467179a6c260bd41e88fbf2bb7ecd570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/759149fbf3c844c39b283e487190eed9377b594e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759149fbf3c844c39b283e487190eed9377b594e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/759149fbf3c844c39b283e487190eed9377b594e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759149fbf3c844c39b283e487190eed9377b594e/comments", "author": null, "committer": null, "parents": [{"sha": "bdc89f9eff4e4c967107c3e88bf0737eb0a03c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdc89f9eff4e4c967107c3e88bf0737eb0a03c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdc89f9eff4e4c967107c3e88bf0737eb0a03c60"}], "stats": {"total": 78, "additions": 75, "deletions": 3}, "files": [{"sha": "82d13dafd642093529ac0f5696431ff334695769", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=759149fbf3c844c39b283e487190eed9377b594e", "patch": "@@ -1,3 +1,12 @@\n+2010-05-21  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/25306\n+\t* include/bits/stl_algobase.h (fill_n): Use a properly typed __niter\n+\tinitialized to __n.\n+\t* include/bits/stl_algo.h (generate_n): Likewise.\n+\t* testsuite/25_algorithms/fill_n/25306.cc: New.\n+\t* testsuite/25_algorithms/generate_n/25306.cc: Likewise.\n+\n 2010-05-21  Joseph Myers  <joseph@codesourcery.com>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Use GNU locale model for"}, {"sha": "fe2edb9c8da74cc506d2c23bb3aea9159da29c33", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=759149fbf3c844c39b283e487190eed9377b594e", "patch": "@@ -4844,7 +4844,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_P)\n             // \"the type returned by a _Generator\"\n             __typeof__(__gen())>)\n \n-      for (; __n > 0; --__n, ++__first)\n+      for (__decltype(__n + 0) __niter = __n;\n+\t   __niter > 0; --__niter, ++__first)\n \t*__first = __gen();\n       return __first;\n     }"}, {"sha": "0489c413b95c34c09ecbb166c653fbba089dc900", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=759149fbf3c844c39b283e487190eed9377b594e", "patch": "@@ -748,7 +748,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type\n     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)\n     {\n-      for (; __n > 0; --__n, ++__first)\n+      for (__decltype(__n + 0) __niter = __n;\n+\t   __niter > 0; --__niter, ++__first)\n \t*__first = __value;\n       return __first;\n     }\n@@ -759,7 +760,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)\n     {\n       const _Tp __tmp = __value;\n-      for (; __n > 0; --__n, ++__first)\n+      for (__decltype(__n + 0) __niter = __n;\n+\t   __niter > 0; --__niter, ++__first)\n \t*__first = __tmp;\n       return __first;\n     }"}, {"sha": "37ccd7c36e846c17554a0b956668d1d8deb187c7", "filename": "libstdc++-v3/testsuite/25_algorithms/fill_n/25306.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2F25306.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2F25306.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2F25306.cc?ref=759149fbf3c844c39b283e487190eed9377b594e", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+\n+struct Size\n+{\n+  operator int() { return 0; }\n+private:\n+  void operator=(Size&);\n+};\n+\n+// libstdc++/25306\n+template int* std::fill_n(int*, Size, const int&);"}, {"sha": "f73ff3d778e45a6b32c17881ff6eefa5fc7b2658", "filename": "libstdc++-v3/testsuite/25_algorithms/generate_n/25306.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2F25306.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759149fbf3c844c39b283e487190eed9377b594e/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2F25306.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2F25306.cc?ref=759149fbf3c844c39b283e487190eed9377b594e", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+\n+struct Size\n+{\n+  operator int() { return 0; }\n+private:\n+  void operator=(Size&);\n+};\n+\n+// libstdc++/25306\n+template int* std::generate_n(int*, Size, int (*)());"}]}