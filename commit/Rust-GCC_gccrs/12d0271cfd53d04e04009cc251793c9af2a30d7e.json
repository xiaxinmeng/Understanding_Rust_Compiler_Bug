{"sha": "12d0271cfd53d04e04009cc251793c9af2a30d7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkMDI3MWNmZDUzZDA0ZTA0MDA5Y2MyNTE3OTNjOWFmMmEzMGQ3ZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-06-20T20:13:46Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-06-20T20:13:46Z"}, "message": "ext-inst.cc (__gnu_cxx): Use instead of std:: for extensions.\n\n\n2002-06-20  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * src/ext-inst.cc (__gnu_cxx): Use instead of std:: for extensions.\n        Use size_type instead of unsigned long.\n\nFrom-SVN: r54854", "tree": {"sha": "a74761167c61814f5a5cad4c29a9e19359f05d42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a74761167c61814f5a5cad4c29a9e19359f05d42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d0271cfd53d04e04009cc251793c9af2a30d7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d0271cfd53d04e04009cc251793c9af2a30d7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d0271cfd53d04e04009cc251793c9af2a30d7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d0271cfd53d04e04009cc251793c9af2a30d7e/comments", "author": null, "committer": null, "parents": [{"sha": "e0d98a924a1081d250d335ca69aacc98d2846b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d98a924a1081d250d335ca69aacc98d2846b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d98a924a1081d250d335ca69aacc98d2846b43"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "c1d2b677ce5ce0a9792ba5b16ade25390c23ac0d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d0271cfd53d04e04009cc251793c9af2a30d7e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d0271cfd53d04e04009cc251793c9af2a30d7e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=12d0271cfd53d04e04009cc251793c9af2a30d7e", "patch": "@@ -1,4 +1,10 @@\n+2002-06-20  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* src/ext-inst.cc (__gnu_cxx): Use instead of std:: for extensions.\n+\tUse size_type instead of unsigned long.\n+\n 2002-06-20  Steve Ellcey  <sje@cup.hp.com>\n+\n \t* src/ext-inst.cc (_S_fetch): Add explicit templates for char and\n \twchar types.\n \t(_S_min_len): Ditto."}, {"sha": "4896b110d42b8cbdd6959661ff23c1ed53a8ed05", "filename": "libstdc++-v3/src/ext-inst.cc", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d0271cfd53d04e04009cc251793c9af2a30d7e/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d0271cfd53d04e04009cc251793c9af2a30d7e/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc?ref=12d0271cfd53d04e04009cc251793c9af2a30d7e", "patch": "@@ -34,34 +34,29 @@\n #include <ext/rope>\n #include <ext/stdio_filebuf.h>\n \n-namespace std\n+namespace __gnu_cxx\n {\n-  using __gnu_cxx::stdio_filebuf;\n-\n   template\n     const unsigned long \n-    __gnu_cxx::rope<char, std::allocator<char> >::_S_min_len;\n+    rope<char, std::allocator<char> >::_S_min_len;\n \n   template\n     char\n-    __gnu_cxx::rope<char, std::allocator<char> >::\n-    _S_fetch(__gnu_cxx::_Rope_RopeRep<char, std::allocator<char> >*,\n-\t     unsigned long);\n+    rope<char, std::allocator<char> >::\n+    _S_fetch(_Rope_RopeRep<char, std::allocator<char> >*, size_type);\n \n   template class stdio_filebuf<char>;\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n   template\n     const unsigned long\n-    __gnu_cxx::rope<wchar_t, std::allocator<wchar_t> >::_S_min_len;\n+    rope<wchar_t, std::allocator<wchar_t> >::_S_min_len;\n \n   template\n     wchar_t\n-    __gnu_cxx::rope<wchar_t, std::allocator<wchar_t> >::\n-    _S_fetch(__gnu_cxx::_Rope_RopeRep<wchar_t, std::allocator<wchar_t> >*,\n-\t     unsigned long);\n+    rope<wchar_t, std::allocator<wchar_t> >::\n+    _S_fetch(_Rope_RopeRep<wchar_t, std::allocator<wchar_t> >*, size_type);\n \n   template class stdio_filebuf<wchar_t>;\n #endif\n-\n-} // namespace std\n+} // namespace __gnu_cxx"}]}