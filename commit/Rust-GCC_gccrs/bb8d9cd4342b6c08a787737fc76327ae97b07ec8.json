{"sha": "bb8d9cd4342b6c08a787737fc76327ae97b07ec8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI4ZDljZDQzNDJiNmMwOGE3ODc3MzdmYzc2MzI3YWU5N2IwN2VjOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-02T07:01:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-02T07:01:45Z"}, "message": "(fake_f_rep): Clear all of u, initially.\n\nMake the ints in u unsigned.\n(f_define): Use ordinary constants for long double\nif it's same width as double.\nMake __convert_long_double_i unsigned.\n\nFrom-SVN: r3589", "tree": {"sha": "51aca27fa57665efdffc8f1f64144439fc4fd21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51aca27fa57665efdffc8f1f64144439fc4fd21d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb8d9cd4342b6c08a787737fc76327ae97b07ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8d9cd4342b6c08a787737fc76327ae97b07ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb8d9cd4342b6c08a787737fc76327ae97b07ec8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb8d9cd4342b6c08a787737fc76327ae97b07ec8/comments", "author": null, "committer": null, "parents": [{"sha": "6506ecd7a5f79c711eb29cf1d5cfd96389dffdf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6506ecd7a5f79c711eb29cf1d5cfd96389dffdf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6506ecd7a5f79c711eb29cf1d5cfd96389dffdf7"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "037dc1e47f471743f74dbda91d29acdce6757326", "filename": "gcc/enquire.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb8d9cd4342b6c08a787737fc76327ae97b07ec8/gcc%2Fenquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb8d9cd4342b6c08a787737fc76327ae97b07ec8/gcc%2Fenquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fenquire.c?ref=bb8d9cd4342b6c08a787737fc76327ae97b07ec8", "patch": "@@ -19,8 +19,14 @@\n    Include sys/types.h before signal.h, Apr 92.\n    Support NO_LONG_DOUBLE_IO in f_define and f_rep; new fn fake_f_rep, Apr 92.\n    Enclose -f output in #ifndef _FLOAT_H___, Richard Stallman, May 92.\n+\n    Add #undef before every #define, Jim Wilson, Dec 92.\n \n+   Changes by Paul Eggert, installed Feb 93:\n+   (fake_f_rep): Clear all of u, initially.  Make the ints in u unsigned.\n+   (f_define): Use ordinary constants for long double\n+   if it's same width as double.  Make __convert_long_double_i unsigned.\n+\n    COMPILING\n    With luck and a following wind, just the following will work:\n \tcc enquire.c -o enquire\n@@ -828,12 +834,13 @@ Procedure f_define(desc, extra, sort, name, precision, val, mark)\n \tif (stdc) {\n #ifdef NO_LONG_DOUBLE_IO\n \t\tstatic int union_defined = 0;\n-\t\tif (!strcmp(sort, \"LDBL\")) {\n+\t\tif (sizeof(double) != sizeof(Long_double)\n+\t\t    && !strcmp(sort, \"LDBL\")) {\n \t\t\tif (!union_defined) {\n \t\t\t\tprintf(\"#ifndef __LDBL_UNION__\\n\");\n \t\t\t\tprintf(\"#define __LDBL_UNION__\\n\");\n \t\t\t\tprintf(\"union __convert_long_double {\\n\");\n-\t\t\t\tprintf(\"  int __convert_long_double_i[4];\\n\");\n+\t\t\t\tprintf(\"  unsigned __convert_long_double_i[4];\\n\");\n \t\t\t\tprintf(\"  long double __convert_long_double_d;\\n\");\n \t\t\t\tprintf(\"};\\n\");\n \t\t\t\tprintf(\"#endif\\n\");\n@@ -909,7 +916,8 @@ int exponent(x, fract, exp) Long_double x; double *fract; int *exp; {\n \n char *fake_f_rep(type, val) char *type; Long_double val; {\n \tstatic char buf[1024];\n-\tunion { int i[4]; Long_double ld;} u;\n+\tunion { unsigned int i[4]; Long_double ld;} u;\n+\tu.i[0] = u.i[1] = u.i[2] = u.i[3] = 0;\n \tu.ld = val;\n \tsprintf(buf, \"(__extension__ ((union __convert_long_double) {0x%x, 0x%x, 0x%x, 0x%x}).__convert_long_double_d)\",\n \t\tu.i[0], u.i[1], u.i[2], u.i[3]);"}]}