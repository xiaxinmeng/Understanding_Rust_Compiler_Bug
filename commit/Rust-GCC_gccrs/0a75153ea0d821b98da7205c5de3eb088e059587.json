{"sha": "0a75153ea0d821b98da7205c5de3eb088e059587", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE3NTE1M2VhMGQ4MjFiOThkYTcyMDVjNWRlM2ViMDg4ZTA1OTU4Nw==", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-05-15T17:19:15Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T19:11:23Z"}, "message": "need access to the expression for analysis", "tree": {"sha": "fb29d6db9312f0028da69a4feb9f5e2aff65e7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb29d6db9312f0028da69a4feb9f5e2aff65e7db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a75153ea0d821b98da7205c5de3eb088e059587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a75153ea0d821b98da7205c5de3eb088e059587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a75153ea0d821b98da7205c5de3eb088e059587", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a75153ea0d821b98da7205c5de3eb088e059587/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7eef6648bb0a4f94388a271c72a60ebb5ae21fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7eef6648bb0a4f94388a271c72a60ebb5ae21fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7eef6648bb0a4f94388a271c72a60ebb5ae21fe"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f1b09a72a097bdf55c8a442a44204a5eac55fffb", "filename": "gcc/rust/ast/rust-stmt.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a75153ea0d821b98da7205c5de3eb088e059587/gcc%2Frust%2Fast%2Frust-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a75153ea0d821b98da7205c5de3eb088e059587/gcc%2Frust%2Fast%2Frust-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-stmt.h?ref=0a75153ea0d821b98da7205c5de3eb088e059587", "patch": "@@ -147,14 +147,14 @@ class ExprStmt : public Stmt\n  * difficulties, can only be guaranteed to hold an expression). */\n class ExprStmtWithoutBlock : public ExprStmt\n {\n+public:\n   // ExprWithoutBlock* expr;\n   /* HACK: cannot ensure type safety of ExprWithoutBlock due to Pratt parsing,\n    * so have to store more general type of Expr. FIXME: fix this issue somehow\n    * or redesign AST. */\n   //::std::unique_ptr<ExprWithoutBlock> expr;\n   ::std::unique_ptr<Expr> expr;\n \n-public:\n   /*~ExpressionStatementWithoutBlock() {\n       delete expr;\n   }*/\n@@ -201,10 +201,10 @@ class ExprStmtWithoutBlock : public ExprStmt\n // Statement containing an expression with a block\n class ExprStmtWithBlock : public ExprStmt\n {\n+public:\n   // ExprWithBlock* expr;\n   ::std::unique_ptr<ExprWithBlock> expr;\n \n-public:\n   /*~ExpressionStatementWithBlock() {\n       delete expr;\n   }*/"}]}