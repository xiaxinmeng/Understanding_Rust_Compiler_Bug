{"sha": "4a6b297c988434269153703b27fff9e9037894fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE2YjI5N2M5ODg0MzQyNjkxNTM3MDNiMjdmZmY5ZTkwMzc4OTRmYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-28T11:54:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-28T11:54:04Z"}, "message": "count.cc: New.\n\n2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/23_containers/unordered_map/operations/count.cc: New.\n\t* testsuite/23_containers/multimap/operations/count.cc: Likewise.\n\t* testsuite/23_containers/set/operations/count.cc: Likewise.\n\t* testsuite/23_containers/unordered_multimap/operations/count.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_set/operations/count.cc: Likewise.\n\t* testsuite/23_containers/multiset/operations/count.cc: Likewise.\n\t* testsuite/23_containers/unordered_multiset/operations/count.cc:\n\tLikewise.\n\t* testsuite/23_containers/map/operations/count.cc: Likewise.\n\nFrom-SVN: r180612", "tree": {"sha": "4951b69b2285d4676dca4199f19c9039eef48383", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4951b69b2285d4676dca4199f19c9039eef48383"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a6b297c988434269153703b27fff9e9037894fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6b297c988434269153703b27fff9e9037894fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a6b297c988434269153703b27fff9e9037894fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6b297c988434269153703b27fff9e9037894fb/comments", "author": null, "committer": null, "parents": [{"sha": "b27df4bbaf6b18a2ef60b585c6706f89b36affa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27df4bbaf6b18a2ef60b585c6706f89b36affa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27df4bbaf6b18a2ef60b585c6706f89b36affa1"}], "stats": {"total": 848, "additions": 848, "deletions": 0}, "files": [{"sha": "dfbaee6eda463fc81f5f9c3018554be93d48f0e8", "filename": "libstdc++-v3/testsuite/23_containers/map/operations/count.cc", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,106 @@\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  typedef map<int, int>::value_type value_type;\n+\n+  map<int, int> m0;\n+  VERIFY( m0.count(0) == 0 );\n+  VERIFY( m0.count(1) == 0 );\n+\n+  m0.insert(value_type(1, 1));\n+  VERIFY( m0.count(0) == 0 );\n+  VERIFY( m0.count(1) == 1 );\n+\n+  m0.insert(value_type(1, 2));\n+  VERIFY( m0.count(0) == 0 );\n+  VERIFY( m0.count(1) == 1 );\n+\n+  m0.insert(value_type(2, 1));\n+  VERIFY( m0.count(2) == 1 );\n+\n+  m0.insert(value_type(3, 1));\n+  m0.insert(value_type(3, 2));\n+  m0.insert(value_type(3, 3));\n+  VERIFY( m0.count(3) == 1 );\n+\n+  m0.erase(2);\n+  VERIFY( m0.count(2) == 0 );\n+\n+  m0.erase(0);\n+  VERIFY( m0.count(0) == 0 );\n+\n+  map<int, int> m1(m0);\n+  VERIFY( m1.count(0) == 0 );\n+  VERIFY( m1.count(1) == 1 );\n+  VERIFY( m1.count(2) == 0 );\n+  VERIFY( m1.count(3) == 1 );\n+\n+  m0.clear();\n+  VERIFY( m0.count(0) == 0 );\n+  VERIFY( m0.count(1) == 0 );\n+  VERIFY( m0.count(2) == 0 );\n+  VERIFY( m0.count(3) == 0 );\n+\n+  m1.insert(value_type(4, 1));\n+  m1.insert(value_type(5, 1));\n+  m1.insert(value_type(5, 2));\n+  m1.insert(value_type(5, 3));\n+  m1.insert(value_type(5, 4));\n+  VERIFY( m1.count(4) == 1 );\n+  VERIFY( m1.count(5) == 1 );\n+\n+  m1.erase(1);\n+  VERIFY( m1.count(1) == 0 );\n+\n+  m1.erase(m1.find(5));\n+  VERIFY( m1.count(5) == 0 );\n+\n+  m1.insert(value_type(1, 1));\n+  m1.insert(value_type(1, 2));\n+  VERIFY( m1.count(1) == 1 );\n+\n+  m1.erase(5);\n+  VERIFY( m1.count(5) == 0 );\n+\n+  m1.erase(m1.find(4));\n+  VERIFY( m1.count(4) == 0 );\n+\n+  m1.clear();\n+  VERIFY( m1.count(0) == 0 );\n+  VERIFY( m1.count(1) == 0 );\n+  VERIFY( m1.count(2) == 0 );\n+  VERIFY( m1.count(3) == 0 );\n+  VERIFY( m1.count(4) == 0 );\n+  VERIFY( m1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2658615776e1f32b5d0a14d97e1957ba99cb2767", "filename": "libstdc++-v3/testsuite/23_containers/multimap/operations/count.cc", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,106 @@\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  typedef multimap<int, int>::value_type value_type;\n+\n+  multimap<int, int> mm0;\n+  VERIFY( mm0.count(0) == 0 );\n+  VERIFY( mm0.count(1) == 0 );\n+\n+  mm0.insert(value_type(1, 1));\n+  VERIFY( mm0.count(0) == 0 );\n+  VERIFY( mm0.count(1) == 1 );\n+\n+  mm0.insert(value_type(1, 2));\n+  VERIFY( mm0.count(0) == 0 );\n+  VERIFY( mm0.count(1) == 2 );\n+\n+  mm0.insert(value_type(2, 1));\n+  VERIFY( mm0.count(2) == 1 );\n+\n+  mm0.insert(value_type(3, 1));\n+  mm0.insert(value_type(3, 2));\n+  mm0.insert(value_type(3, 3));\n+  VERIFY( mm0.count(3) == 3 );\n+\n+  mm0.erase(2);\n+  VERIFY( mm0.count(2) == 0 );\n+\n+  mm0.erase(0);\n+  VERIFY( mm0.count(0) == 0 );\n+\n+  multimap<int, int> mm1(mm0);\n+  VERIFY( mm1.count(0) == 0 );\n+  VERIFY( mm1.count(1) == 2 );\n+  VERIFY( mm1.count(2) == 0 );\n+  VERIFY( mm1.count(3) == 3 );\n+\n+  mm0.clear();\n+  VERIFY( mm0.count(0) == 0 );\n+  VERIFY( mm0.count(1) == 0 );\n+  VERIFY( mm0.count(2) == 0 );\n+  VERIFY( mm0.count(3) == 0 );\n+\n+  mm1.insert(value_type(4, 1));\n+  mm1.insert(value_type(5, 1));\n+  mm1.insert(value_type(5, 2));\n+  mm1.insert(value_type(5, 3));\n+  mm1.insert(value_type(5, 4));\n+  VERIFY( mm1.count(4) == 1 );\n+  VERIFY( mm1.count(5) == 4 );\n+\n+  mm1.erase(1);\n+  VERIFY( mm1.count(1) == 0 );\n+\n+  mm1.erase(mm1.find(5));\n+  VERIFY( mm1.count(5) == 3 );\n+\n+  mm1.insert(value_type(1, 1));\n+  mm1.insert(value_type(1, 2));\n+  VERIFY( mm1.count(1) == 2 );\n+\n+  mm1.erase(5);\n+  VERIFY( mm1.count(5) == 0 );\n+\n+  mm1.erase(mm1.find(4));\n+  VERIFY( mm1.count(4) == 0 );\n+\n+  mm1.clear();\n+  VERIFY( mm1.count(0) == 0 );\n+  VERIFY( mm1.count(1) == 0 );\n+  VERIFY( mm1.count(2) == 0 );\n+  VERIFY( mm1.count(3) == 0 );\n+  VERIFY( mm1.count(4) == 0 );\n+  VERIFY( mm1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "96323877c4996773920735ec7b426ca6672e33b2", "filename": "libstdc++-v3/testsuite/23_containers/multiset/operations/count.cc", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,104 @@\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  multiset<int> ms0;\n+  VERIFY( ms0.count(0) == 0 );\n+  VERIFY( ms0.count(1) == 0 );\n+\n+  ms0.insert(1);\n+  VERIFY( ms0.count(0) == 0 );\n+  VERIFY( ms0.count(1) == 1 );\n+\n+  ms0.insert(1);\n+  VERIFY( ms0.count(0) == 0 );\n+  VERIFY( ms0.count(1) == 2 );\n+\n+  ms0.insert(2);\n+  VERIFY( ms0.count(2) == 1 );\n+\n+  ms0.insert(3);\n+  ms0.insert(3);\n+  ms0.insert(3);\n+  VERIFY( ms0.count(3) == 3 );\n+\n+  ms0.erase(2);\n+  VERIFY( ms0.count(2) == 0 );\n+\n+  ms0.erase(0);\n+  VERIFY( ms0.count(0) == 0 );\n+\n+  multiset<int> ms1(ms0);\n+  VERIFY( ms1.count(0) == 0 );\n+  VERIFY( ms1.count(1) == 2 );\n+  VERIFY( ms1.count(2) == 0 );\n+  VERIFY( ms1.count(3) == 3 );\n+\n+  ms0.clear();\n+  VERIFY( ms0.count(0) == 0 );\n+  VERIFY( ms0.count(1) == 0 );\n+  VERIFY( ms0.count(2) == 0 );\n+  VERIFY( ms0.count(3) == 0 );\n+\n+  ms1.insert(4);\n+  ms1.insert(5);\n+  ms1.insert(5);\n+  ms1.insert(5);\n+  ms1.insert(5);\n+  VERIFY( ms1.count(4) == 1 );\n+  VERIFY( ms1.count(5) == 4 );\n+\n+  ms1.erase(1);\n+  VERIFY( ms1.count(1) == 0 );\n+\n+  ms1.erase(ms1.find(5));\n+  VERIFY( ms1.count(5) == 3 );\n+\n+  ms1.insert(1);\n+  ms1.insert(1);\n+  VERIFY( ms1.count(1) == 2 );\n+\n+  ms1.erase(5);\n+  VERIFY( ms1.count(5) == 0 );\n+\n+  ms1.erase(ms1.find(4));\n+  VERIFY( ms1.count(4) == 0 );\n+\n+  ms1.clear();\n+  VERIFY( ms1.count(0) == 0 );\n+  VERIFY( ms1.count(1) == 0 );\n+  VERIFY( ms1.count(2) == 0 );\n+  VERIFY( ms1.count(3) == 0 );\n+  VERIFY( ms1.count(4) == 0 );\n+  VERIFY( ms1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4a6b0f2683f38e1ecdcc8a8f165d9602c8f7d5b9", "filename": "libstdc++-v3/testsuite/23_containers/set/operations/count.cc", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,104 @@\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  set<int> s0;\n+  VERIFY( s0.count(0) == 0 );\n+  VERIFY( s0.count(1) == 0 );\n+\n+  s0.insert(1);\n+  VERIFY( s0.count(0) == 0 );\n+  VERIFY( s0.count(1) == 1 );\n+\n+  s0.insert(1);\n+  VERIFY( s0.count(0) == 0 );\n+  VERIFY( s0.count(1) == 1 );\n+\n+  s0.insert(2);\n+  VERIFY( s0.count(2) == 1 );\n+\n+  s0.insert(3);\n+  s0.insert(3);\n+  s0.insert(3);\n+  VERIFY( s0.count(3) == 1 );\n+\n+  s0.erase(2);\n+  VERIFY( s0.count(2) == 0 );\n+\n+  s0.erase(0);\n+  VERIFY( s0.count(0) == 0 );\n+\n+  set<int> s1(s0);\n+  VERIFY( s1.count(0) == 0 );\n+  VERIFY( s1.count(1) == 1 );\n+  VERIFY( s1.count(2) == 0 );\n+  VERIFY( s1.count(3) == 1 );\n+\n+  s0.clear();\n+  VERIFY( s0.count(0) == 0 );\n+  VERIFY( s0.count(1) == 0 );\n+  VERIFY( s0.count(2) == 0 );\n+  VERIFY( s0.count(3) == 0 );\n+\n+  s1.insert(4);\n+  s1.insert(5);\n+  s1.insert(5);\n+  s1.insert(5);\n+  s1.insert(5);\n+  VERIFY( s1.count(4) == 1 );\n+  VERIFY( s1.count(5) == 1 );\n+\n+  s1.erase(1);\n+  VERIFY( s1.count(1) == 0 );\n+\n+  s1.erase(s1.find(5));\n+  VERIFY( s1.count(5) == 0 );\n+\n+  s1.insert(1);\n+  s1.insert(1);\n+  VERIFY( s1.count(1) == 1 );\n+\n+  s1.erase(5);\n+  VERIFY( s1.count(5) == 0 );\n+\n+  s1.erase(s1.find(4));\n+  VERIFY( s1.count(4) == 0 );\n+\n+  s1.clear();\n+  VERIFY( s1.count(0) == 0 );\n+  VERIFY( s1.count(1) == 0 );\n+  VERIFY( s1.count(2) == 0 );\n+  VERIFY( s1.count(3) == 0 );\n+  VERIFY( s1.count(4) == 0 );\n+  VERIFY( s1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4aedc5e1e1176f3cc14896d879a034121ffb5522", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/operations/count.cc", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,108 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  typedef unordered_map<int, int>::value_type value_type;\n+\n+  unordered_map<int, int> um0;\n+  VERIFY( um0.count(0) == 0 );\n+  VERIFY( um0.count(1) == 0 );\n+\n+  um0.insert(value_type(1, 1));\n+  VERIFY( um0.count(0) == 0 );\n+  VERIFY( um0.count(1) == 1 );\n+\n+  um0.insert(value_type(1, 2));\n+  VERIFY( um0.count(0) == 0 );\n+  VERIFY( um0.count(1) == 1 );\n+\n+  um0.insert(value_type(2, 1));\n+  VERIFY( um0.count(2) == 1 );\n+\n+  um0.insert(value_type(3, 1));\n+  um0.insert(value_type(3, 2));\n+  um0.insert(value_type(3, 3));\n+  VERIFY( um0.count(3) == 1 );\n+\n+  um0.erase(2);\n+  VERIFY( um0.count(2) == 0 );\n+\n+  um0.erase(0);\n+  VERIFY( um0.count(0) == 0 );\n+\n+  unordered_map<int, int> um1(um0);\n+  VERIFY( um1.count(0) == 0 );\n+  VERIFY( um1.count(1) == 1 );\n+  VERIFY( um1.count(2) == 0 );\n+  VERIFY( um1.count(3) == 1 );\n+\n+  um0.clear();\n+  VERIFY( um0.count(0) == 0 );\n+  VERIFY( um0.count(1) == 0 );\n+  VERIFY( um0.count(2) == 0 );\n+  VERIFY( um0.count(3) == 0 );\n+\n+  um1.insert(value_type(4, 1));\n+  um1.insert(value_type(5, 1));\n+  um1.insert(value_type(5, 2));\n+  um1.insert(value_type(5, 3));\n+  um1.insert(value_type(5, 4));\n+  VERIFY( um1.count(4) == 1 );\n+  VERIFY( um1.count(5) == 1 );\n+\n+  um1.erase(1);\n+  VERIFY( um1.count(1) == 0 );\n+\n+  um1.erase(um1.find(5));\n+  VERIFY( um1.count(5) == 0 );\n+\n+  um1.insert(value_type(1, 1));\n+  um1.insert(value_type(1, 2));\n+  VERIFY( um1.count(1) == 1 );\n+\n+  um1.erase(5);\n+  VERIFY( um1.count(5) == 0 );\n+\n+  um1.erase(um1.find(4));\n+  VERIFY( um1.count(4) == 0 );\n+\n+  um1.clear();\n+  VERIFY( um1.count(0) == 0 );\n+  VERIFY( um1.count(1) == 0 );\n+  VERIFY( um1.count(2) == 0 );\n+  VERIFY( um1.count(3) == 0 );\n+  VERIFY( um1.count(4) == 0 );\n+  VERIFY( um1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "12f9e1f5ebcfa6213ee09198178972b6f7c68a3e", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/operations/count.cc", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,108 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  typedef unordered_multimap<int, int>::value_type value_type;\n+\n+  unordered_multimap<int, int> umm0;\n+  VERIFY( umm0.count(0) == 0 );\n+  VERIFY( umm0.count(1) == 0 );\n+\n+  umm0.insert(value_type(1, 1));\n+  VERIFY( umm0.count(0) == 0 );\n+  VERIFY( umm0.count(1) == 1 );\n+\n+  umm0.insert(value_type(1, 2));\n+  VERIFY( umm0.count(0) == 0 );\n+  VERIFY( umm0.count(1) == 2 );\n+\n+  umm0.insert(value_type(2, 1));\n+  VERIFY( umm0.count(2) == 1 );\n+\n+  umm0.insert(value_type(3, 1));\n+  umm0.insert(value_type(3, 2));\n+  umm0.insert(value_type(3, 3));\n+  VERIFY( umm0.count(3) == 3 );\n+\n+  umm0.erase(2);\n+  VERIFY( umm0.count(2) == 0 );\n+\n+  umm0.erase(0);\n+  VERIFY( umm0.count(0) == 0 );\n+\n+  unordered_multimap<int, int> umm1(umm0);\n+  VERIFY( umm1.count(0) == 0 );\n+  VERIFY( umm1.count(1) == 2 );\n+  VERIFY( umm1.count(2) == 0 );\n+  VERIFY( umm1.count(3) == 3 );\n+\n+  umm0.clear();\n+  VERIFY( umm0.count(0) == 0 );\n+  VERIFY( umm0.count(1) == 0 );\n+  VERIFY( umm0.count(2) == 0 );\n+  VERIFY( umm0.count(3) == 0 );\n+\n+  umm1.insert(value_type(4, 1));\n+  umm1.insert(value_type(5, 1));\n+  umm1.insert(value_type(5, 2));\n+  umm1.insert(value_type(5, 3));\n+  umm1.insert(value_type(5, 4));\n+  VERIFY( umm1.count(4) == 1 );\n+  VERIFY( umm1.count(5) == 4 );\n+\n+  umm1.erase(1);\n+  VERIFY( umm1.count(1) == 0 );\n+\n+  umm1.erase(umm1.find(5));\n+  VERIFY( umm1.count(5) == 3 );\n+\n+  umm1.insert(value_type(1, 1));\n+  umm1.insert(value_type(1, 2));\n+  VERIFY( umm1.count(1) == 2 );\n+\n+  umm1.erase(5);\n+  VERIFY( umm1.count(5) == 0 );\n+\n+  umm1.erase(umm1.find(4));\n+  VERIFY( umm1.count(4) == 0 );\n+\n+  umm1.clear();\n+  VERIFY( umm1.count(0) == 0 );\n+  VERIFY( umm1.count(1) == 0 );\n+  VERIFY( umm1.count(2) == 0 );\n+  VERIFY( umm1.count(3) == 0 );\n+  VERIFY( umm1.count(4) == 0 );\n+  VERIFY( umm1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "17c37f82ed7babe1eacf9951f1af9c4bad1cdb89", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/operations/count.cc", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,106 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  unordered_multiset<int> ums0;\n+  VERIFY( ums0.count(0) == 0 );\n+  VERIFY( ums0.count(1) == 0 );\n+\n+  ums0.insert(1);\n+  VERIFY( ums0.count(0) == 0 );\n+  VERIFY( ums0.count(1) == 1 );\n+\n+  ums0.insert(1);\n+  VERIFY( ums0.count(0) == 0 );\n+  VERIFY( ums0.count(1) == 2 );\n+\n+  ums0.insert(2);\n+  VERIFY( ums0.count(2) == 1 );\n+\n+  ums0.insert(3);\n+  ums0.insert(3);\n+  ums0.insert(3);\n+  VERIFY( ums0.count(3) == 3 );\n+\n+  ums0.erase(2);\n+  VERIFY( ums0.count(2) == 0 );\n+\n+  ums0.erase(0);\n+  VERIFY( ums0.count(0) == 0 );\n+\n+  unordered_multiset<int> ums1(ums0);\n+  VERIFY( ums1.count(0) == 0 );\n+  VERIFY( ums1.count(1) == 2 );\n+  VERIFY( ums1.count(2) == 0 );\n+  VERIFY( ums1.count(3) == 3 );\n+\n+  ums0.clear();\n+  VERIFY( ums0.count(0) == 0 );\n+  VERIFY( ums0.count(1) == 0 );\n+  VERIFY( ums0.count(2) == 0 );\n+  VERIFY( ums0.count(3) == 0 );\n+\n+  ums1.insert(4);\n+  ums1.insert(5);\n+  ums1.insert(5);\n+  ums1.insert(5);\n+  ums1.insert(5);\n+  VERIFY( ums1.count(4) == 1 );\n+  VERIFY( ums1.count(5) == 4 );\n+\n+  ums1.erase(1);\n+  VERIFY( ums1.count(1) == 0 );\n+\n+  ums1.erase(ums1.find(5));\n+  VERIFY( ums1.count(5) == 3 );\n+\n+  ums1.insert(1);\n+  ums1.insert(1);\n+  VERIFY( ums1.count(1) == 2 );\n+\n+  ums1.erase(5);\n+  VERIFY( ums1.count(5) == 0 );\n+\n+  ums1.erase(ums1.find(4));\n+  VERIFY( ums1.count(4) == 0 );\n+\n+  ums1.clear();\n+  VERIFY( ums1.count(0) == 0 );\n+  VERIFY( ums1.count(1) == 0 );\n+  VERIFY( ums1.count(2) == 0 );\n+  VERIFY( ums1.count(3) == 0 );\n+  VERIFY( ums1.count(4) == 0 );\n+  VERIFY( ums1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "942338f9e5a8e89a37d2b3524aef0f3aec3a632d", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/operations/count.cc", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Foperations%2Fcount.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6b297c988434269153703b27fff9e9037894fb/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Foperations%2Fcount.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Foperations%2Fcount.cc?ref=4a6b297c988434269153703b27fff9e9037894fb", "patch": "@@ -0,0 +1,106 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  unordered_set<int> us0;\n+  VERIFY( us0.count(0) == 0 );\n+  VERIFY( us0.count(1) == 0 );\n+\n+  us0.insert(1);\n+  VERIFY( us0.count(0) == 0 );\n+  VERIFY( us0.count(1) == 1 );\n+\n+  us0.insert(1);\n+  VERIFY( us0.count(0) == 0 );\n+  VERIFY( us0.count(1) == 1 );\n+\n+  us0.insert(2);\n+  VERIFY( us0.count(2) == 1 );\n+\n+  us0.insert(3);\n+  us0.insert(3);\n+  us0.insert(3);\n+  VERIFY( us0.count(3) == 1 );\n+\n+  us0.erase(2);\n+  VERIFY( us0.count(2) == 0 );\n+\n+  us0.erase(0);\n+  VERIFY( us0.count(0) == 0 );\n+\n+  unordered_set<int> us1(us0);\n+  VERIFY( us1.count(0) == 0 );\n+  VERIFY( us1.count(1) == 1 );\n+  VERIFY( us1.count(2) == 0 );\n+  VERIFY( us1.count(3) == 1 );\n+\n+  us0.clear();\n+  VERIFY( us0.count(0) == 0 );\n+  VERIFY( us0.count(1) == 0 );\n+  VERIFY( us0.count(2) == 0 );\n+  VERIFY( us0.count(3) == 0 );\n+\n+  us1.insert(4);\n+  us1.insert(5);\n+  us1.insert(5);\n+  us1.insert(5);\n+  us1.insert(5);\n+  VERIFY( us1.count(4) == 1 );\n+  VERIFY( us1.count(5) == 1 );\n+\n+  us1.erase(1);\n+  VERIFY( us1.count(1) == 0 );\n+\n+  us1.erase(us1.find(5));\n+  VERIFY( us1.count(5) == 0 );\n+\n+  us1.insert(1);\n+  us1.insert(1);\n+  VERIFY( us1.count(1) == 1 );\n+\n+  us1.erase(5);\n+  VERIFY( us1.count(5) == 0 );\n+\n+  us1.erase(us1.find(4));\n+  VERIFY( us1.count(4) == 0 );\n+\n+  us1.clear();\n+  VERIFY( us1.count(0) == 0 );\n+  VERIFY( us1.count(1) == 0 );\n+  VERIFY( us1.count(2) == 0 );\n+  VERIFY( us1.count(3) == 0 );\n+  VERIFY( us1.count(4) == 0 );\n+  VERIFY( us1.count(5) == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}