{"sha": "af320a16dd6c01f89c841864a652745c098a764a", "node_id": "C_kwDOANBUbNoAKGFmMzIwYTE2ZGQ2YzAxZjg5Yzg0MTg2NGE2NTI3NDVjMDk4YTc2NGE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-08T00:17:16Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-03-08T00:17:16Z"}, "message": "Daily bump.", "tree": {"sha": "3dec3d9d6340d06c922a7f972f35f59a45535a4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dec3d9d6340d06c922a7f972f35f59a45535a4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af320a16dd6c01f89c841864a652745c098a764a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af320a16dd6c01f89c841864a652745c098a764a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af320a16dd6c01f89c841864a652745c098a764a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af320a16dd6c01f89c841864a652745c098a764a/comments", "author": null, "committer": null, "parents": [{"sha": "c5c4fdaccdf444632c9872537b6026dc6758a952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c4fdaccdf444632c9872537b6026dc6758a952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5c4fdaccdf444632c9872537b6026dc6758a952"}], "stats": {"total": 200, "additions": 199, "deletions": 1}, "files": [{"sha": "9dc9d12d620dea13cb75ee5cb5c7bedc5769a4ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af320a16dd6c01f89c841864a652745c098a764a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af320a16dd6c01f89c841864a652745c098a764a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af320a16dd6c01f89c841864a652745c098a764a", "patch": "@@ -1,3 +1,30 @@\n+2023-03-07  Jonathan Grant  <jg@jguk.org>\n+\n+\tPR sanitizer/81649\n+\t* doc/invoke.texi (Instrumentation Options):  Clarify\n+\tLeakSanitizer behavior.\n+\n+2023-03-07  Benson Muite  <benson_muite@emailplus.org>\n+\n+\t* doc/install.texi (Prerequisites): Add link to gmplib.org.\n+\n+2023-03-07  Pan Li  <pan2.li@intel.com>\n+\t    Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\tPR target/108185\n+\tPR target/108654\n+\t* config/riscv/riscv-modes.def (ADJUST_PRECISION): Adjust VNx*BI\n+\tmodes.\n+\t* config/riscv/riscv.cc (riscv_v_adjust_precision): New.\n+\t* config/riscv/riscv.h (riscv_v_adjust_precision): New.\n+\t* genmodes.cc (adj_precision): New.\n+\t(ADJUST_PRECISION): New.\n+\t(emit_mode_adjustments): Handle ADJUST_PRECISION.\n+\n+2023-03-07  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* doc/sourcebuild.texi: Document check_effective_target_tail_call.\n+\n 2023-03-06  Paul-Antoine Arras  <pa@codesourcery.com>\n \n \t* config/gcn/gcn-valu.md (<expander><mode>3_exec): Add patterns for"}, {"sha": "53389297a17f72f858741b1ddc4f0021f4ca56aa", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af320a16dd6c01f89c841864a652745c098a764a/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af320a16dd6c01f89c841864a652745c098a764a/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=af320a16dd6c01f89c841864a652745c098a764a", "patch": "@@ -1 +1 @@\n-20230307\n+20230308"}, {"sha": "6e2dfdbe6d7db270bef27e166c5772371444bd63", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af320a16dd6c01f89c841864a652745c098a764a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af320a16dd6c01f89c841864a652745c098a764a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=af320a16dd6c01f89c841864a652745c098a764a", "patch": "@@ -1,3 +1,37 @@\n+2023-03-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108526\n+\tPR c++/106651\n+\t* pt.cc (tsubst_function_decl): Don't replace the closure\n+\tparameter if DECL_STATIC_FUNCTION_P.\n+\n+2023-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107532\n+\t* call.cc (reference_like_class_p): New.\n+\t(do_warn_dangling_reference): Add new bool parameter.  See through\n+\treference_like_class_p.\n+\n+2023-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109042\n+\t* rtti.cc (emit_support_tinfo_1): Don't assert that last\n+\tunemitted_tinfo_decls element is tinfo, instead pop from it only in\n+\tthat case.\n+\t* decl2.cc (c_parse_final_cleanups): Don't call emit_tinfo_decl\n+\tfor unemitted_tinfO_decls which have already non-NULL DECL_INITIAL.\n+\n+2023-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/109030\n+\t* constexpr.cc (cxx_eval_call_expression): Relax assert.\n+\n+2023-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107939\n+\t* constexpr.cc (potential_constant_expression_1) <case CALL_EXPR>: Pass\n+\t'any' when recursing on a VAR_DECL and not a pointer to function.\n+\n 2023-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/108702"}, {"sha": "48228e2bf7cff5283af3b341c1f7d0a4d0f03a20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af320a16dd6c01f89c841864a652745c098a764a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af320a16dd6c01f89c841864a652745c098a764a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af320a16dd6c01f89c841864a652745c098a764a", "patch": "@@ -1,3 +1,120 @@\n+2023-03-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/108526\n+\tPR c++/106651\n+\t* g++.dg/cpp23/static-operator-call5.C: Pass -g.\n+\n+2023-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107532\n+\t* g++.dg/warn/Wdangling-reference8.C: New test.\n+\t* g++.dg/warn/Wdangling-reference9.C: New test.\n+\n+2023-03-07  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.dg/vect/slp-3.c: Add '{ ... }'.\n+\n+2023-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/109042\n+\t* g++.dg/rtti/pr109042.C: New test.\n+\n+2023-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/109030\n+\t* g++.dg/cpp0x/noexcept77.C: New test.\n+\n+2023-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107939\n+\t* g++.dg/cpp1y/var-templ74.C: Remove dg-error.\n+\t* g++.dg/cpp1y/var-templ77.C: New test.\n+\n+2023-03-07  Pan Li  <pan2.li@intel.com>\n+\t    Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\tPR target/108185\n+\tPR target/108654\n+\t* gcc.target/riscv/rvv/base/pr108185-1.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-2.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-3.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-4.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-5.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-6.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-7.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr108185-8.c: New test.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/aarch64/shrink_wrap_1.c (dg-options): Add\n+\t-fno-stack-protector.\n+\t* gcc.target/aarch64/stack-check-cfa-1.c (dg-options): Add\n+\t-fno-stack-protector.\n+\t* gcc.target/aarch64/stack-check-cfa-2.c (dg-options): Add\n+\t-fno-stack-protector.\n+\t* gcc.target/aarch64/test_frame_17.c (dg-options): Add\n+\t-fno-stack-protector.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/aarch64/pr104005.c (dg-options): Add\n+\t-fno-stack-protector.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/aarch64/auto-init-7.c (dg-options): Add\n+\t-fno-stack-protector.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/aarch64/pr103147-10.c (dg-options): Add\n+\t-fno-stack-protector.\n+\t* g++.target/aarch64/pr103147-10.C: Likewise.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/aarch64/sve/pcs/aarch64-sve-pcs.exp (sve_flags):\n+\tAdd -fno-stack-protector.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\tPR testsuite/70150\n+\t* gcc.target/aarch64/fuse_adrp_add_1.c (dg-options): Add\n+\t-fno-pie.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\tPR testsuite/70150\n+\t* gcc.dg/tls/pr78796.c (dg-additional-options): Add -fno-pie\n+\t-no-pie for aarch64-*-*.\n+\t* gcc.target/aarch64/pr63304_1.c (dg-options): Add -fno-pie.\n+\t* gcc.target/aarch64/pr70120-2.c (dg-options): Add -fno-pie.\n+\t* gcc.target/aarch64/pr78733.c (dg-options): Add -fno-pie.\n+\t* gcc.target/aarch64/pr79041-2.c (dg-options): Add -fno-pie.\n+\t* gcc.target/aarch64/pr94530.c (dg-options): Add -fno-pie.\n+\t* gcc.target/aarch64/pr94577.c (dg-options): Add -fno-pie.\n+\t* gcc.target/aarch64/reload-valid-spoff.c (dg-options): Add\n+\t-fno-pie.\n+\n+2023-03-07  Xi Ruoyao  <xry111@xry111.site>\n+\n+\tPR testsuite/70150\n+\t* gcc.target/aarch64/aapcs64/aapcs64.exp (additional_flags):\n+\tAdd -fno-pie -no-pie.\n+\n+2023-03-07  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* lib/target-supports.exp (check_compile): Support scanning tree-dumps.\n+\n+2023-03-07  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.dg/plugin/must-tail-call-1.c, gcc.dg/plugin/must-tail-call-2.c:\n+\tGate on effective target tail_call.\n+\n+2023-03-07  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_tail_call): New.\n+\n 2023-03-07  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.dg/analyzer/allocation-size-multiline-3.c: Handle"}, {"sha": "d082dae8226a376d5b14f65ce7fa0910b6862b99", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af320a16dd6c01f89c841864a652745c098a764a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af320a16dd6c01f89c841864a652745c098a764a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=af320a16dd6c01f89c841864a652745c098a764a", "patch": "@@ -1,3 +1,23 @@\n+2023-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/abi/post/x86_64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt: Update.\n+\t* config/abi/post/i486-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Update.\n+\t* config/abi/post/s390x-linux-gnu/baseline_symbols.txt: Update.\n+\n+2023-03-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/108882\n+\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.31): Adjust patterns to\n+\tnot match symbols in namespace std::__gnu_cxx11_ieee128.\n+\t* config/os/gnu-linux/ldbl-ieee128-extra.ver: Add patterns for\n+\tstd::__gnu_cxx11_ieee128::money_{get,put}.\n+\n+2023-03-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/eh_personality.cc: Fix spelling in comment.\n+\n 2023-03-03  Alexandre Oliva  <oliva@adacore.com>\n \n \t* testsuite/30_threads/async/async.cc (test04): Initialize"}]}