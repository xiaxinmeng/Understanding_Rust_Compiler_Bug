{"sha": "de62200f8374e1137b20ea9c85eb690169f43449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2MjIwMGY4Mzc0ZTExMzdiMjBlYTljODVlYjY5MDE2OWY0MzQ0OQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2018-12-19T06:51:30Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-12-19T06:51:30Z"}, "message": "[PR87012] canonicalize ref type for tmpl arg\n\nWhen binding an object to a template parameter of reference type, we\ntake the address of the object and dereference that address.  The type\nof the address may still carry (template) typedefs, but\nverify_unstripped_args_1 rejects such typedefs other than in the top\nlevel of template arguments.\n\nCanonicalizing the type we want to convert to right after any\nsubstitutions or deductions avoids that issue.\n\n\nfor  gcc/cp/ChangeLog\n\n\tPR c++/87012\n\t* pt.c (convert_template_argument): Canonicalize type after\n\ttsubst/deduce.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR c++/87012\n\t* g++.dg/cpp0x/pr87012.C: New.\n\nFrom-SVN: r267251", "tree": {"sha": "31ff5fdea79ebfc4e3e256600b38f3932f6f858c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31ff5fdea79ebfc4e3e256600b38f3932f6f858c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de62200f8374e1137b20ea9c85eb690169f43449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de62200f8374e1137b20ea9c85eb690169f43449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de62200f8374e1137b20ea9c85eb690169f43449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de62200f8374e1137b20ea9c85eb690169f43449/comments", "author": null, "committer": null, "parents": [{"sha": "bceca9b3f7d9cd935574652edc62a117c8736823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bceca9b3f7d9cd935574652edc62a117c8736823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bceca9b3f7d9cd935574652edc62a117c8736823"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "433793f186f66ba5bb36b356dc76d3ea2d9f6556", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=de62200f8374e1137b20ea9c85eb690169f43449", "patch": "@@ -1,5 +1,9 @@\n 2018-12-19  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/87012\n+\t* pt.c (convert_template_argument): Canonicalize type after\n+\ttsubst/deduce.\n+\n \tPR c++/88146\n \t* method.c (do_build_copy_constructor): Guard cvquals init and\n \tloop over fields to run for non-inherited ctors only."}, {"sha": "e99de71ea9e25114660f8d0303d1ca3a1d73becf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=de62200f8374e1137b20ea9c85eb690169f43449", "patch": "@@ -8019,6 +8019,9 @@ convert_template_argument (tree parm,\n       if (invalid_nontype_parm_type_p (t, complain))\n \treturn error_mark_node;\n \n+      if (t != TREE_TYPE (parm))\n+\tt = canonicalize_type_argument (t, complain);\n+\n       if (!type_dependent_expression_p (orig_arg)\n \t  && !uses_template_parms (t))\n \t/* We used to call digest_init here.  However, digest_init"}, {"sha": "52f20c1a8887494ac6eae2f5de08fc0638231b0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=de62200f8374e1137b20ea9c85eb690169f43449", "patch": "@@ -1,5 +1,8 @@\n 2018-12-19  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/87012\n+\t* g++.dg/cpp0x/pr87012.C: New.\n+\n \tPR c++/88146\n \t* g++.dg/cpp0x/inh-ctor32.C: New.\n "}, {"sha": "fd3eea47c390b0cd7a8a098f073f4206991c9e85", "filename": "gcc/testsuite/g++.dg/cpp0x/pr87012.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr87012.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de62200f8374e1137b20ea9c85eb690169f43449/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr87012.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr87012.C?ref=de62200f8374e1137b20ea9c85eb690169f43449", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile { target c++11 } }\n+\n+template<class T>\n+using ref = T&;\n+\n+int x;\n+\n+template<template<class> class T, T<int>>\n+struct X { };\n+\n+struct Y : X<ref, x> { };"}]}