{"sha": "8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM0MGIwOTdlYzljYTFkY2M1MWY3ZDAzYTc0MDhkZWU1MDMzMWJkNA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-10-25T12:28:17Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-10-25T12:28:17Z"}, "message": "* config/s390/s390.md: Remove old-style peepholes.\n\nFrom-SVN: r58531", "tree": {"sha": "71f6f016f3bbff001aa62806251bda01e2ef6afc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71f6f016f3bbff001aa62806251bda01e2ef6afc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4/comments", "author": null, "committer": null, "parents": [{"sha": "522ec94ec5741cce6fd8cd507a2bb7742b4ab348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522ec94ec5741cce6fd8cd507a2bb7742b4ab348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522ec94ec5741cce6fd8cd507a2bb7742b4ab348"}], "stats": {"total": 150, "additions": 4, "deletions": 146}, "files": [{"sha": "636217f4050e6d94716b5702731f8f010d1a2759", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "patch": "@@ -1,3 +1,7 @@\n+2002-10-25  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md: Remove old-style peepholes.\n+\n 2002-10-25  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_decompose_address): Do not range check the"}, {"sha": "4d68049ded980bde86e2313ff2c54da3a3f725a4", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 0, "deletions": 146, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c40b097ec9ca1dcc51f7d03a7408dee50331bd4/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=8c40b097ec9ca1dcc51f7d03a7408dee50331bd4", "patch": "@@ -6828,149 +6828,3 @@\n    (set_attr \"length\"  \"6\")\n    (set_attr \"type\"    \"integer\")])\n \n-\n-;;\n-;; Peephole optimization patterns.\n-;;\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"memory_operand\" \"m\")\n-        (match_operand:SI 1 \"register_operand\" \"d\"))\n-   (set (match_dup 1)\n-        (match_dup 0))]\n- \"\"\n- \"st\\\\t%1,%0\")\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"memory_operand\" \"m\")\n-        (match_operand:SI 1 \"register_operand\" \"d\"))\n-   (set (match_dup 0)\n-        (match_dup 1))]\n- \"\"\n- \"st\\\\t%1,%0\")\n-\n-(define_peephole\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (match_operand:SI 1 \"register_operand\" \"\"))\n-   (parallel\n-    [(set (match_dup 0)\n-          (plus:SI (match_dup 0)\n-                   (match_operand:SI 2 \"immediate_operand\" \"\")))\n-     (clobber (reg:CC 33))])]\n- \"(REGNO (operands[0]) == STACK_POINTER_REGNUM ||\n-   REGNO (operands[1]) == STACK_POINTER_REGNUM ||\n-   REGNO (operands[0]) == BASE_REGISTER ||\n-   REGNO (operands[1]) == BASE_REGISTER) &&\n-  INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 4096\"\n- \"la\\\\t%0,%c2(%1)\")\n-\n-;\n-; peepholes for fast char instructions\n-;\n-\n-;(define_peephole\n-;  [(set (match_operand:QI 0 \"register_operand\" \"d\")\n-;        (match_operand:QI 1 \"s_operand\" \"Q\"))\n-;  (set  (match_operand:SI 2 \"register_operand\" \"0\")\n-;        (zero_extend:SI (match_dup 0)))]\n-; \"REGNO(operands[0]) == REGNO(operands[2])\"\n-; \"icm\\\\t%0,8,%1\\;srl\\\\t%0,24\")\n-\n-;(define_peephole\n-;  [(set (match_operand:QI 0 \"register_operand\" \"d\")\n-;        (match_operand:QI 1 \"s_operand\" \"Q\"))\n-;   (set (match_operand:SI 2 \"register_operand\" \"0\")\n-;        (sign_extend:SI (match_dup 0)))]\n-; \"REGNO(operands[0]) == REGNO(operands[2])\"\n-; \"icm\\\\t%0,8,%1\\;sra\\\\t%0,24\")\n-\n-(define_peephole\n-  [(set (match_operand:QI 0 \"register_operand\" \"d\")\n-        (match_operand:QI 1 \"immediate_operand\" \"J\"))\n-   (set (match_operand:SI 2 \"register_operand\" \"0\" )\n-        (sign_extend:SI (match_dup 0) ) )]\n- \"REGNO(operands[0]) == REGNO(operands[2])\"\n- \"lhi\\\\t%0,%h1\")\n-\n-;\n-; peepholes for fast short instructions\n-;\n-\n-;(define_peephole\n-;  [(set (match_operand:HI 0 \"register_operand\" \"d\")\n-;        (match_operand:HI 1 \"s_operand\" \"Q\"))\n-;   (set (match_operand:SI 2 \"register_operand\" \"0\" )\n-;        (zero_extend:SI (match_dup 0)))]\n-; \"REGNO(operands[0]) == REGNO(operands[2])\"\n-; \"icm\\\\t%0,12,%1\\;srl\\\\t%0,16\")\n-\n-(define_peephole\n-  [(set (match_operand:HI 0 \"register_operand\" \"d\")\n-        (match_operand:HI 1 \"memory_operand\" \"m\"))\n-   (set (match_operand:SI 2 \"register_operand\" \"0\" )\n-        (sign_extend:SI (match_dup 0)))]\n- \"REGNO(operands[0]) == REGNO(operands[2])\"\n- \"lh\\\\t%0,%1\")\n-\n-(define_peephole\n-  [(set (match_operand:HI 0 \"register_operand\" \"d\")\n-        (match_operand:HI 1 \"immediate_operand\" \"K\"))\n-   (set (match_operand:SI 2 \"register_operand\" \"0\" )\n-        (sign_extend:SI (match_dup 0) ) )]\n- \"REGNO(operands[0]) == REGNO(operands[2])\"\n- \"lhi\\\\t%0,%h1\")\n-\n-;\n-; peepholes for divide instructions\n-;\n-\n-(define_peephole\n-  [(set (match_operand:DI 0 \"register_operand\" \"d\")\n-        (match_operand:DI 1 \"memory_operand\" \"m\"))\n-   (set (match_dup 0)\n-        (lshiftrt:DI (match_dup 0)\n-        (match_operand:SI 2 \"immediate_operand\" \"J\")))\n-   (set (match_dup 0)\n-        (div:SI (match_dup 0)\n-        (match_operand:SI 3 \"nonimmediate_operand\" \"g\")))\n-   (set (match_dup 1)\n-        (match_dup 0))]\n-  \"\"\n-  \"*\n-{\n-   output_asm_insn (\\\"l\\\\t%0,%1\\\", operands);\n-   output_asm_insn (\\\"srdl\\\\t%0,%b2\\\", operands);\n-\n-   if (REG_P (operands[3]))\n-     output_asm_insn (\\\"dr\\\\t%0,%3\\\", operands);\n-   else\n-     output_asm_insn (\\\"d\\\\t%0,%3\\\", operands);\n-\n-   return \\\"st\\\\t%N0,%N1\\\";\n-}\")\n-\n-(define_peephole\n-  [(set (match_operand:DI 0 \"register_operand\" \"d\")\n-        (match_operand:DI 1 \"memory_operand\" \"m\"))\n-   (set (match_dup 0)\n-        (lshiftrt:DI (match_dup 0)\n-        (match_operand:SI 2 \"immediate_operand\" \"J\")))\n-   (set (match_dup 0)\n-        (mod:SI (match_dup 0)\n-        (match_operand:SI 3 \"nonimmediate_operand\" \"g\")))\n-   (set (match_dup 1)\n-        (match_dup 0))]\n-  \"\"\n-  \"*\n-{\n-   output_asm_insn (\\\"l\\\\t%0,%1\\\", operands);\n-   output_asm_insn (\\\"srdl\\\\t%0,%b2\\\", operands);\n-\n-   if (REG_P (operands[3]))\n-     output_asm_insn (\\\"dr\\\\t%0,%3\\\", operands);\n-   else\n-     output_asm_insn (\\\"d\\\\t%0,%3\\\", operands);\n-\n-   return \\\"st\\\\t%0,%1\\\";\n-}\")\n-"}]}