{"sha": "6286c07888d229895b665f1ef1d09e89669c26f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI4NmMwNzg4OGQyMjk4OTViNjY1ZjFlZjFkMDllODk2NjljMjZmMQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-01-07T17:48:28Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-01-07T17:48:28Z"}, "message": "* lib/target-supports-dg.exp (check_test_flags): Delete.\n\nFrom-SVN: r143162", "tree": {"sha": "53dc946572de142544a72a30bacda2d467f2fae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53dc946572de142544a72a30bacda2d467f2fae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6286c07888d229895b665f1ef1d09e89669c26f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6286c07888d229895b665f1ef1d09e89669c26f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6286c07888d229895b665f1ef1d09e89669c26f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6286c07888d229895b665f1ef1d09e89669c26f1/comments", "author": null, "committer": null, "parents": [{"sha": "30471e01ada243667a39c66be639915e62535e87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30471e01ada243667a39c66be639915e62535e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30471e01ada243667a39c66be639915e62535e87"}], "stats": {"total": 34, "additions": 4, "deletions": 30}, "files": [{"sha": "080c89bdfeec95fc05b90f402f521549e0dd9f97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6286c07888d229895b665f1ef1d09e89669c26f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6286c07888d229895b665f1ef1d09e89669c26f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6286c07888d229895b665f1ef1d09e89669c26f1", "patch": "@@ -1,3 +1,7 @@\n+2009-01-07  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/target-supports-dg.exp (check_test_flags): Delete.\n+\n 2009-01-07  Jan Sjodin  <jan.sjodin@amd.com>\n \n \tPR tree-optimization/38492"}, {"sha": "655af3e834c8323ac3600a81d046ce1485350962", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6286c07888d229895b665f1ef1d09e89669c26f1/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6286c07888d229895b665f1ef1d09e89669c26f1/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=6286c07888d229895b665f1ef1d09e89669c26f1", "patch": "@@ -181,36 +181,6 @@ proc dg-add-options { args } {\n     }\n }\n \n-# Check the flags with which the test will be run against options in\n-# a test directive that will skip or xfail that test.  The DejaGnu proc\n-# check_conditional_xfail will look at the options in compiler_flags, so\n-# set that up for this test based on flags we know about.\n-\n-proc check_test_flags { args } {\n-    global compiler_flags\n-    upvar 2 dg-extra-tool-flags extra_tool_flags\n-\n-    # Pull the args out of the enclosing list.\n-    set args [lindex $args 0]\n-\n-    # Start the list with a dummy tool name so the list will match \"*\"\n-    # if there are no flags.\n-    set compiler_flags \" toolname \"\n-    append compiler_flags $extra_tool_flags\n-    set dest [target_info name]\n-    if [board_info $dest exists multilib_flags] {\n-\tappend compiler_flags \"[board_info $dest multilib_flags] \"\n-    }\n-\n-    set answer [check_conditional_xfail $args]\n-\n-    # Any value in this variable originally was left over from an earlier test.\n-    set compiler_flags \"\"\n-\n-    verbose \"check_test_flags: $args $answer\" 2\n-    return $answer\n-}\n-\n # Compare flags for a test directive against flags that will be used to\n # compile the test: multilib flags, flags for torture options, and either\n # the default flags for this group of tests or flags specified with a"}]}