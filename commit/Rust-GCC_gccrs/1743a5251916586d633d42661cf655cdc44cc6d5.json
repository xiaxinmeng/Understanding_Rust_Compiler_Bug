{"sha": "1743a5251916586d633d42661cf655cdc44cc6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0M2E1MjUxOTE2NTg2ZDYzM2Q0MjY2MWNmNjU1Y2RjNDRjYzZkNQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2014-10-07T18:58:39Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2014-10-07T18:58:39Z"}, "message": "Fix spacing.\n\nFrom-SVN: r215982", "tree": {"sha": "39e62dbe09f85550cf8deb47c1dffd5145d3214f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39e62dbe09f85550cf8deb47c1dffd5145d3214f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1743a5251916586d633d42661cf655cdc44cc6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1743a5251916586d633d42661cf655cdc44cc6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1743a5251916586d633d42661cf655cdc44cc6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1743a5251916586d633d42661cf655cdc44cc6d5/comments", "author": null, "committer": null, "parents": [{"sha": "f474b2553b805cc3ddabfdf0d4a1848d0e8cb1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f474b2553b805cc3ddabfdf0d4a1848d0e8cb1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f474b2553b805cc3ddabfdf0d4a1848d0e8cb1bb"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "7f4094dbb81d96c8afde97b32328e75a227a9a96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1743a5251916586d633d42661cf655cdc44cc6d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1743a5251916586d633d42661cf655cdc44cc6d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1743a5251916586d633d42661cf655cdc44cc6d5", "patch": "@@ -31,7 +31,7 @@\n \t(init_ic_make_global_vars): Make __gcov_indirect_call_topn_callee\n \tand __gcov_indirect_call_topn_counters for\n \tindirect_call_topn_profile.\n-\t(gimple_init_edge_profiler): New decls for \n+\t(gimple_init_edge_profiler): New decls for\n \t__gcov_indirect_call_topn_profiler.\n \t(gimple_gen_ic_profiler): Generate the correct profiler call.\n \t(gimple_gen_ic_func_profiler): Fix format.\n@@ -157,7 +157,7 @@\n \t* doc/md.texi: Don't document score-*.\n \n 2014-10-04  Trevor Saunders  <tsaunders@mozilla.com>\n-    \n+\n \tPR pch/63429\n \t* genconditions.c: Directly include ggc.h before rtl.h.\n \n@@ -223,7 +223,7 @@\n \t* cgraph.c (symbol_table::create_edge): Compute in_polymorphic_cdtor.\n \t(cgraph_edge::make_speculative): Copy in_polymorphic_cdtor.\n \t* cgraphclones.c (cgraph_edge::clone): Likewise.\n-\t* ipa-prop.c (update_jump_functions_after_inlining, \n+\t* ipa-prop.c (update_jump_functions_after_inlining,\n \ttry_make_edge_direct_virtual_call): Pass in_polymorphic_cdtor\n \tto possible_dynamic_type_change.\n \t(decl_maybe_in_construction_p): Allow empty OUTER_TYPE and BASE.\n@@ -375,7 +375,7 @@\n 2014-10-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraphclones.c (build_function_type_skip_args): Do not make new\n-\ttype variant of old. \n+\ttype variant of old.\n \n 2014-10-01  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -430,7 +430,7 @@\n \t(ipa_polymorphic_call_context::make_speculative): Move here; use\n \tcombine speculation.\n \t* cgraph.h (ipa_polymorphic_call_context): Update\n-\trestrict_to_inner_class prototype; add offset_by, make_speculative, \n+\trestrict_to_inner_class prototype; add offset_by, make_speculative,\n \tcombine_with, useless_p, combine_speculation_with and\n \tspeculation_consistent_p methods.\n \t(ipa_polymorphic_call_context::offset_by): New method.\n@@ -1510,7 +1510,7 @@\n 2014-09-21  Patrick Oppenlander  <pattyo.lists@gmail.com>\n \n \t* config/rs6000/t-spe (MULTILIB_EXCEPTIONS): Allow isel without SPE.\n-\t\n+\n 2014-09-21  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (div<mode>3): Fix comment.  Use a different\n@@ -1962,7 +1962,7 @@\n \tprofiling is disabled.\n \n 2014-09-15  Trevor Saunders  <tsaunders@mozilla.com>\n-    \n+\n     \t* cfgrtl.c, combine.c, config/arc/arc.c, config/mcore/mcore.c,\n     \tconfig/rs6000/rs6000.c, config/sh/sh.c, cprop.c, dwarf2out.c,\n     \temit-rtl.c, final.c, function.c, gcse.c, jump.c, reg-stack.c,\n@@ -2289,7 +2289,7 @@\n \n 2014-09-15  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n-\t* doc/install.texi (Options specification): add \n+\t* doc/install.texi (Options specification): add\n \t--disable-libsanitizer item.\n \n 2014-09-14  James Clarke  <jrtc27@jrtc27.com>\n@@ -9338,11 +9338,11 @@\n \t(void call_edge_removal_hooks (cgraph_edge *e)):\n \t  created from cgraph_call_edge_removal_hooks\n \t(void call_cgraph_insertion_hooks (cgraph_node *node)):\n-\t  created from call_function_insertion_hooks \n+\t  created from call_function_insertion_hooks\n \t(void call_cgraph_removal_hooks (cgraph_node *node)):\n-\t  created from cgraph_call_node_removal_hooks \n+\t  created from cgraph_call_node_removal_hooks\n \t(void call_cgraph_duplication_hooks (cgraph_node *node, cgraph_node *node2)):\n-\t  created from cgraph_node::call_duplication_hooks \n+\t  created from cgraph_node::call_duplication_hooks\n \t(void call_edge_duplication_hooks (cgraph_edge *cs1, cgraph_edge *cs2)):\n \t  created from cgraph_call_edge_duplication_hooks\n \t(void call_varpool_removal_hooks (varpool_node *node)):\n@@ -13230,7 +13230,7 @@\n \n 2014-08-12  Steve Ellcey  <sellcey@mips.com>\n \n-\t* config/mips/mips.h (ASM_SPEC): Pass float options to assembler. \n+\t* config/mips/mips.h (ASM_SPEC): Pass float options to assembler.\n \n 2014-08-12  Steve Ellcey  <sellcey@mips.com>\n \n@@ -15002,7 +15002,7 @@\n \t(void DEBUG_FUNCTION debug (void)): created from debug_symtab_node\n \t(void DEBUG_FUNCTION verify (void)): created from verify_symtab_node\n \t(struct ipa_ref *add_reference (symtab_node *referred_node,\n-\tenum ipa_ref_use use_type)): created from add_reference \n+\tenum ipa_ref_use use_type)): created from add_reference\n \t(struct ipa_ref *add_reference (symtab_node *referred_node,\n \tenum ipa_ref_use use_type, gimple stmt)): created from add_reference\n \t(struct ipa_ref *maybe_add_reference (tree val, enum ipa_ref_use use_type,\n@@ -15026,7 +15026,7 @@\n \tvoid *data, bool include_overwrite)): created from symtab_for_node_and_aliases\n \t(symtab_node *noninterposable_alias (void)): created from symtab_nonoverwritable_alias\n \t(inline symtab_node *get_alias_target (void)): created from symtab_alias_target\n-\t(void set_section (const char *section)): created from set_section_1 \n+\t(void set_section (const char *section)): created from set_section_1\n \t(enum availability get_availability (void)): created from symtab_node_availability\n \t(void make_decl_local (void)): created from symtab_make_decl_local\n \t(bool real_symbol_p (void)): created from symtab_read_node\n@@ -15041,7 +15041,7 @@\n \t(static inline DEBUG_FUNCTION void debug_symtab (void)): created from debug_symtab\n \t(static DEBUG_FUNCTION void verify_symtab_nodes (void)): created from verify_symtab\n \t(static bool used_from_object_file_p_worker (symtab_node *node)): created from\n-\tsymtab_used_from_object_file_p \n+\tsymtab_used_from_object_file_p\n \t(void dump_base (FILE *)): created from dump_symtab_base\n \t(bool DEBUG_FUNCTION verify_base (void)): created from verify_symtab_base\n \t(void unregister (void)): created from symtab_unregister_node\n@@ -15060,7 +15060,7 @@\n \t(cgraph_node *create_clone (tree decl, gcov_type count, int freq, bool update_original,\n \tvec<cgraph_edge *> redirect_callers, bool call_duplication_hook,\n \tstruct cgraph_node *new_inlined_to, bitmap args_to_skip)):\n-\tcreated from cgraph_create_clone \n+\tcreated from cgraph_create_clone\n \t(cgraph_node *create_virtual_clone (vec<cgraph_edge *> redirect_callers,\n \tvec<ipa_replace_map *, va_gc> *tree_map, bitmap args_to_skip, const char * suffix)):\n \tcreated from cgraph_create_virtual_clone\n@@ -15149,7 +15149,7 @@\n \t(static cgraph_node *get_for_asmname (tree asmname)):\n \tcreated from cgraph_node_for_asm\n \t(static cgraph_node * create_same_body_alias (tree alias, tree decl)):\n-\tcreated from cgraph_same_body_alias \n+\tcreated from cgraph_same_body_alias\n \t(static bool used_from_object_file_p_worker (cgraph_node *node,\n \tvoid *): new function\n \t(static bool non_local_p (cgraph_node *node, void *)):"}]}