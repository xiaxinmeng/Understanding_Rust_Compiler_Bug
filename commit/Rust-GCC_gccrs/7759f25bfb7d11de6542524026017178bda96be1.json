{"sha": "7759f25bfb7d11de6542524026017178bda96be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1OWYyNWJmYjdkMTFkZTY1NDI1MjQwMjYwMTcxNzhiZGE5NmJlMQ==", "commit": {"author": {"name": "Jim Kingdon", "email": "kingdon@redhat.com", "date": "1999-08-27T07:07:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-27T07:07:06Z"}, "message": "i386.md: In the 6 insns which call output_fix_trunc, earlyclobber operands[0].\n\n        * i386.md: In the 6 insns which call output_fix_trunc,\n        earlyclobber operands[0].\n\nFrom-SVN: r28921", "tree": {"sha": "03c0d3e450a94e927e141e23919e6b2af5c57430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c0d3e450a94e927e141e23919e6b2af5c57430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7759f25bfb7d11de6542524026017178bda96be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7759f25bfb7d11de6542524026017178bda96be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7759f25bfb7d11de6542524026017178bda96be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7759f25bfb7d11de6542524026017178bda96be1/comments", "author": null, "committer": null, "parents": [{"sha": "5ca8e6f76b92f52c2a6faa4ff5801469a8868160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca8e6f76b92f52c2a6faa4ff5801469a8868160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca8e6f76b92f52c2a6faa4ff5801469a8868160"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "6191b48cee7732278d3016689cdae0c6d55944a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7759f25bfb7d11de6542524026017178bda96be1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7759f25bfb7d11de6542524026017178bda96be1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7759f25bfb7d11de6542524026017178bda96be1", "patch": "@@ -1,3 +1,9 @@\n+Fri Aug 27 01:03:48 1999  Jim Kingdon  <http://developer.redhat.com>\n+\twith much help from Jeffrey A Law and Richard Henderson\n+\n+\t* i386.md: In the 6 insns which call output_fix_trunc,\n+\tearlyclobber operands[0].\n+\n Fri Aug 27 01:01:51 1999  Philip Blundell  <pb@nexus.co.uk>  \n \n \t* jump.c (duplicate_loop_exit_test): Call reg_scan_update after"}, {"sha": "62dff2633fb19f747300f21ce76924f5edf0635f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7759f25bfb7d11de6542524026017178bda96be1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7759f25bfb7d11de6542524026017178bda96be1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7759f25bfb7d11de6542524026017178bda96be1", "patch": "@@ -2710,8 +2710,10 @@\n   operands[4] = (rtx) assign_386_stack_local (SImode, 0);\n }\")\n \n+;; We have to earlyclobber the register output to prevent it from overlapping\n+;; with the address for one of the scratch memory operands.\n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,!r\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,!&r\")\n \t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"f,f\"))))\n    (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n@@ -2738,8 +2740,10 @@\n   operands[4] = (rtx) assign_386_stack_local (DImode, 0);\n }\")\n \n+;; We have to earlyclobber the register output to prevent it from overlapping\n+;; with the address for one of the scratch memory operands.\n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,!r\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,!&r\")\n \t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f,f\"))))\n    (clobber (match_dup 1))\n    (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n@@ -2765,8 +2769,10 @@\n   operands[4] = (rtx) assign_386_stack_local (SImode, 0);\n }\")\n \n+;; We have to earlyclobber the register output to prevent it from overlapping\n+;; with the address for one of the scratch memory operands.\n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,!r\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,!&r\")\n \t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f,f\"))))\n    (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n@@ -2793,8 +2799,10 @@\n   operands[4] = (rtx) assign_386_stack_local (DImode, 0);\n }\")\n \n+;; We have to earlyclobber the register output to prevent it from overlapping\n+;; with the address for one of the scratch memory operands.\n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,!r\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,!&r\")\n \t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f,f\"))))\n    (clobber (match_dup 1))\n    (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n@@ -2820,8 +2828,10 @@\n   operands[4] = (rtx) assign_386_stack_local (SImode, 0);\n }\")\n \n+;; We have to earlyclobber the register output to prevent it from overlapping\n+;; with the address for one of the scratch memory operands.\n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,!r\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,!&r\")\n \t(fix:SI (fix:XF (match_operand:XF 1 \"register_operand\" \"f,f\"))))\n    (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n    (clobber (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n@@ -2848,8 +2858,10 @@\n   operands[4] = (rtx) assign_386_stack_local (DImode, 0);\n }\")\n \n+;; We have to earlyclobber the register output to prevent it from overlapping\n+;; with the address for one of the scratch memory operands.\n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,!r\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,!&r\")\n \t(fix:DI (fix:XF (match_operand:XF 1 \"register_operand\" \"f,f\"))))\n    (clobber (match_dup 1))\n    (clobber (match_operand:HI 2 \"memory_operand\" \"m,m\"))"}]}