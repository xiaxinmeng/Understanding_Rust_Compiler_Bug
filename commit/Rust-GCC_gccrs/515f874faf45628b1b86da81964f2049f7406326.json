{"sha": "515f874faf45628b1b86da81964f2049f7406326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1Zjg3NGZhZjQ1NjI4YjFiODZkYTgxOTY0ZjIwNDlmNzQwNjMyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-13T20:22:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-13T20:22:31Z"}, "message": "PR c++/82565 - ICE with concepts and generic lambda.\n\n\t* pt.c (instantiate_decl): Clear fn_context for lambdas.\n\nFrom-SVN: r258502", "tree": {"sha": "122067c0b75183fdf4e0621ea1676591d3c9918f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/122067c0b75183fdf4e0621ea1676591d3c9918f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/515f874faf45628b1b86da81964f2049f7406326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515f874faf45628b1b86da81964f2049f7406326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515f874faf45628b1b86da81964f2049f7406326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515f874faf45628b1b86da81964f2049f7406326/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f71c1a187b70b88d90263b209ea402fc38d4ec92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f71c1a187b70b88d90263b209ea402fc38d4ec92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f71c1a187b70b88d90263b209ea402fc38d4ec92"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "da81495e8a4ecc61f72ed7707361c67679ae0f96", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515f874faf45628b1b86da81964f2049f7406326/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515f874faf45628b1b86da81964f2049f7406326/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=515f874faf45628b1b86da81964f2049f7406326", "patch": "@@ -1,3 +1,8 @@\n+2018-03-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/82565 - ICE with concepts and generic lambda.\n+\t* pt.c (instantiate_decl): Clear fn_context for lambdas.\n+\n 2018-03-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84720 - ICE with rvalue ref non-type argument."}, {"sha": "d720c33cf0af8b37277ec7ba75f188b2767c1b05", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515f874faf45628b1b86da81964f2049f7406326/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515f874faf45628b1b86da81964f2049f7406326/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=515f874faf45628b1b86da81964f2049f7406326", "patch": "@@ -23460,6 +23460,9 @@ instantiate_decl (tree d, bool defer_ok, bool expl_inst_class_mem_p)\n   bool push_to_top, nested;\n   tree fn_context;\n   fn_context = decl_function_context (d);\n+  if (LAMBDA_FUNCTION_P (d))\n+    /* tsubst_lambda_expr resolved any references to enclosing functions.  */\n+    fn_context = NULL_TREE;\n   nested = current_function_decl != NULL_TREE;\n   push_to_top = !(nested && fn_context == current_function_decl);\n "}, {"sha": "a77e65459b7c5e04679b5be09ad27b168799e02e", "filename": "gcc/testsuite/g++.dg/concepts/lambda1.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515f874faf45628b1b86da81964f2049f7406326/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flambda1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515f874faf45628b1b86da81964f2049f7406326/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flambda1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Flambda1.C?ref=515f874faf45628b1b86da81964f2049f7406326", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/82565\n+// { dg-do compile { target c++14 } }\n+// { dg-additional-options -fconcepts }\n+\n+struct string\n+{\n+  string();\n+  string(const char *);\n+  bool empty() const;\n+};\n+\n+template<typename T, typename ReturnType>\n+concept bool Concept() {\n+  return requires(T t, const string& s) {\n+    { t(s) } -> ReturnType;\n+  };\n+}\n+\n+struct test {\n+  string _str;\n+\n+  template<typename Visitor>\n+    requires Concept<Visitor, bool>()\n+  decltype(auto) visit(Visitor&& visitor) const {\n+    return visitor(_str);\n+  }\n+\n+};\n+\n+int main() {\n+  test().visit([] (auto& x) { return x.empty(); });\n+}"}]}