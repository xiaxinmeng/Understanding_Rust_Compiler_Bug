{"sha": "f7dfb654e7f51f14bc2480913fcae649b929219e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkZmI2NTRlN2Y1MWYxNGJjMjQ4MDkxM2ZjYWU2NDliOTI5MjE5ZQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-10-11T00:48:28Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-10-11T00:48:28Z"}, "message": "always define REVERSE_CONDITION\n\ngcc/ChangeLog:\n\n2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (REVERSE_CONDITION): New default definition.\n\t* jump.c (reversed_comparison_code_parts): Adjust.\n\nFrom-SVN: r228690", "tree": {"sha": "8a52318c4e575afb79c715119a23f66710bc471e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a52318c4e575afb79c715119a23f66710bc471e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7dfb654e7f51f14bc2480913fcae649b929219e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dfb654e7f51f14bc2480913fcae649b929219e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7dfb654e7f51f14bc2480913fcae649b929219e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7dfb654e7f51f14bc2480913fcae649b929219e/comments", "author": null, "committer": null, "parents": [{"sha": "38b0b09304b5b87eb69fa1ddfbafbc500aacb315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b0b09304b5b87eb69fa1ddfbafbc500aacb315", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b0b09304b5b87eb69fa1ddfbafbc500aacb315"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "05994817e599a4d0715b23dd4675873f1f7f0609", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dfb654e7f51f14bc2480913fcae649b929219e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dfb654e7f51f14bc2480913fcae649b929219e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7dfb654e7f51f14bc2480913fcae649b929219e", "patch": "@@ -1,3 +1,8 @@\n+2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (REVERSE_CONDITION): New default definition.\n+\t* jump.c (reversed_comparison_code_parts): Adjust.\n+\n 2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* builtins.c (expand_builtin_setjmp_receiver): Don't use #if to"}, {"sha": "cee799d8590050702484fe1d9380aaeb0e67b55e", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dfb654e7f51f14bc2480913fcae649b929219e/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dfb654e7f51f14bc2480913fcae649b929219e/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=f7dfb654e7f51f14bc2480913fcae649b929219e", "patch": "@@ -1293,6 +1293,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define FRAME_ADDR_RTX(x) (x)\n #endif\n \n+#ifndef REVERSE_CONDITION\n+#define REVERSE_CONDITION(code, mode) reverse_condition (code)\n+#endif\n+\n #ifdef GCC_INSN_FLAGS_H\n /* Dependent default target macro definitions\n "}, {"sha": "f0d2af0d28aaa6691c057269112f98d37d8f5bce", "filename": "gcc/jump.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7dfb654e7f51f14bc2480913fcae649b929219e/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7dfb654e7f51f14bc2480913fcae649b929219e/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=f7dfb654e7f51f14bc2480913fcae649b929219e", "patch": "@@ -389,13 +389,7 @@ reversed_comparison_code_parts (enum rtx_code code, const_rtx arg0,\n      machine description to do tricks.  */\n   if (GET_MODE_CLASS (mode) == MODE_CC\n       && REVERSIBLE_CC_MODE (mode))\n-    {\n-#ifdef REVERSE_CONDITION\n-      return REVERSE_CONDITION (code, mode);\n-#else\n-      return reverse_condition (code);\n-#endif\n-    }\n+    return REVERSE_CONDITION (code, mode);\n \n   /* Try a few special cases based on the comparison code.  */\n   switch (code)"}]}