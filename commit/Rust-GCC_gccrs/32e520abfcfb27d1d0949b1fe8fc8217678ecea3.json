{"sha": "32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJlNTIwYWJmY2ZiMjdkMWQwOTQ5YjFmZThmYzgyMTc2NzhlY2VhMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-10-24T15:21:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-10-24T15:21:22Z"}, "message": "array (_M_instance): Align naturally.\n\n2007-10-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1_impl/array (_M_instance): Align naturally.\n\t* testsuite/ext/array_allocator/1.cc: Use ext/vstring,\n\tmore solid than our current basic_string vs alignment.\n\t* testsuite/ext/array_allocator/2.cc: Likewise.\n\t* testsuite/ext/array_allocator/3.cc: Likewise.\n\nFrom-SVN: r129604", "tree": {"sha": "9979d00869017834fae7a6ea75f42a2cfe5b21e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9979d00869017834fae7a6ea75f42a2cfe5b21e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/comments", "author": null, "committer": null, "parents": [{"sha": "510359760e6a4a270ac7306f50de6ebbbbab0b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510359760e6a4a270ac7306f50de6ebbbbab0b99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510359760e6a4a270ac7306f50de6ebbbbab0b99"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "3616d367d6af58a1272aad0eda41695ffb654748", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "patch": "@@ -1,3 +1,11 @@\n+2007-10-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1_impl/array (_M_instance): Align naturally.\n+\t* testsuite/ext/array_allocator/1.cc: Use ext/vstring,\n+\tmore solid than our current basic_string vs alignment.\n+\t* testsuite/ext/array_allocator/2.cc: Likewise.\n+\t* testsuite/ext/array_allocator/3.cc: Likewise.\n+\n 2007-10-20  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_move.h (_GLIBCXX_MOVE): Wrap in parentheses."}, {"sha": "425b87cffbb196ec092abb2b92aca8e83a34b502", "filename": "libstdc++-v3/include/tr1_impl/array", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray?ref=32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "patch": "@@ -52,7 +52,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;\n \n       // Support for zero-sized arrays mandatory.\n-      value_type _M_instance[_Nm ? _Nm : 1] __attribute__((__aligned__));\n+      value_type _M_instance[_Nm ? _Nm : 1];\n \n       // No explicit construct/copy/destroy for aggregate type.\n "}, {"sha": "8b7bcbde2aff62b4509d6cc4c2a2ca6f7eb822dc", "filename": "libstdc++-v3/testsuite/ext/array_allocator/1.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F1.cc?ref=32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,7 +25,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#include <string>\n+#include <ext/vstring.h>\n #include <ext/array_allocator.h>\n #include <testsuite_hooks.h>\n \n@@ -38,10 +38,10 @@ array_type extern_array;\n void test01() \n {\n   bool test __attribute__((unused)) = true;\n-  \n-  using std::basic_string;\n+\n+  using __gnu_cxx::__versa_string;\n   typedef __gnu_cxx::array_allocator<char_type, array_type> allocator_type;\n-  typedef basic_string<char_type, traits_type, allocator_type> string_type;\n+  typedef __versa_string<char_type, traits_type, allocator_type> string_type;\n \n   allocator_type a(&extern_array);\n   string_type s(a);"}, {"sha": "01702e792e804b658c65d2ed95fb51352c1af56e", "filename": "libstdc++-v3/testsuite/ext/array_allocator/2.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F2.cc?ref=32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,8 +25,8 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#include <string>\n #include <iostream>\n+#include <ext/vstring.h>\n #include <ext/array_allocator.h>\n #include <testsuite_hooks.h>\n \n@@ -40,9 +40,9 @@ void test01()\n {\n   bool test __attribute__((unused)) = true;\n \n-  using std::basic_string;\n+  using __gnu_cxx::__versa_string;\n   typedef __gnu_cxx::array_allocator<char_type, array_type> allocator_type;\n-  typedef basic_string<char_type, traits_type, allocator_type> string_type;\n+  typedef __versa_string<char_type, traits_type, allocator_type> string_type;\n \n   allocator_type a(&extern_array);\n   string_type s(a);"}, {"sha": "81f8bbd1d15b3a5624f77a6461278afe906376c9", "filename": "libstdc++-v3/testsuite/ext/array_allocator/3.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e520abfcfb27d1d0949b1fe8fc8217678ecea3/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Farray_allocator%2F3.cc?ref=32e520abfcfb27d1d0949b1fe8fc8217678ecea3", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Copyright (C) 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,7 +25,7 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n-#include <string>\n+#include <ext/vstring.h>\n #include <ext/array_allocator.h>\n #include <testsuite_hooks.h>\n \n@@ -39,9 +39,9 @@ void test01()\n {\n   bool test __attribute__((unused)) = true;\n \n-  using std::basic_string;\n+  using __gnu_cxx::__versa_string;\n   typedef __gnu_cxx::array_allocator<char_type, array_type> allocator_type;\n-  typedef basic_string<char_type, traits_type, allocator_type> string_type;\n+  typedef __versa_string<char_type, traits_type, allocator_type> string_type;\n \n   // Construct array_allocator without underlying array.\n   allocator_type a;"}]}