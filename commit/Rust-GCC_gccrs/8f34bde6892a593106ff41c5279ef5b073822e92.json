{"sha": "8f34bde6892a593106ff41c5279ef5b073822e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYzNGJkZTY4OTJhNTkzMTA2ZmY0MWM1Mjc5ZWY1YjA3MzgyMmU5Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2005-08-26T21:52:23Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-08-26T21:52:23Z"}, "message": "combine.c (make_extraction): Avoid reference outside object.\n\n2005-08-26  Ian Lance Taylor  <ian@airs.com>\n\n        * combine.c (make_extraction): Avoid reference outside object.\n\nFrom-SVN: r103537", "tree": {"sha": "600becc8488916470260c44d67f6160f51ef224c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/600becc8488916470260c44d67f6160f51ef224c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f34bde6892a593106ff41c5279ef5b073822e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f34bde6892a593106ff41c5279ef5b073822e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f34bde6892a593106ff41c5279ef5b073822e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f34bde6892a593106ff41c5279ef5b073822e92/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "277d42e27fa0271ca8cc3cd00607980b5731ed51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277d42e27fa0271ca8cc3cd00607980b5731ed51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277d42e27fa0271ca8cc3cd00607980b5731ed51"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "9a810aa12dd28ca77e8cafa2c7aadf701db7a5c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f34bde6892a593106ff41c5279ef5b073822e92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f34bde6892a593106ff41c5279ef5b073822e92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f34bde6892a593106ff41c5279ef5b073822e92", "patch": "@@ -1,3 +1,7 @@\n+2005-08-26  Ian Lance Taylor  <ian@airs.com>\n+\n+\t* combine.c (make_extraction): Avoid reference outside object.\n+\n 2005-08-26  J\"orn Rennecke <joern.rennecke@st.com>\n \n \t* stor-layout.c (finalize_type_size): Restore behaviour for"}, {"sha": "57f490da76b94b68b031bd18c48a2304c99cb3ef", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f34bde6892a593106ff41c5279ef5b073822e92/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f34bde6892a593106ff41c5279ef5b073822e92/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8f34bde6892a593106ff41c5279ef5b073822e92", "patch": "@@ -6484,11 +6484,13 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t  && GET_MODE_SIZE (inner_mode) < GET_MODE_SIZE (is_mode))\n \toffset -= GET_MODE_SIZE (is_mode) - GET_MODE_SIZE (inner_mode);\n \n-      /* If this is a constant position, we can move to the desired byte.  */\n+      /* If this is a constant position, we can move to the desired byte.\n+\t Be careful not to go beyond the original object. */\n       if (pos_rtx == 0)\n \t{\n-\t  offset += pos / BITS_PER_UNIT;\n-\t  pos %= GET_MODE_BITSIZE (wanted_inner_mode);\n+\t  enum machine_mode bfmode = smallest_mode_for_size (len, MODE_INT);\n+\t  offset += pos / GET_MODE_BITSIZE (bfmode);\n+\t  pos %= GET_MODE_BITSIZE (bfmode);\n \t}\n \n       if (BYTES_BIG_ENDIAN != BITS_BIG_ENDIAN"}]}