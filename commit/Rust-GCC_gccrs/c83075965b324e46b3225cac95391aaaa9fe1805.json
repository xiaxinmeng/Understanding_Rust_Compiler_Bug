{"sha": "c83075965b324e46b3225cac95391aaaa9fe1805", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzMDc1OTY1YjMyNGU0NmIzMjI1Y2FjOTUzOTFhYWFhOWZlMTgwNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2015-10-20T12:40:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-20T12:40:36Z"}, "message": "s-valllu.adb, [...]: Fix typos.\n\n2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-valllu.adb, sem_ch3.adb, layout.adb, a-crbtgo.adb, exp_ch9.adb,\n\tmake.adb, g-diopit.adb, s-valuns.adb, sem_ch9.adb, sem_ch10.adb,\n\tsem_ch12.adb, a-tifiio.adb, g-dynhta.adb, uintp.adb,\n\tsem_util.adb, sem_res.adb, s-htable.adb, exp_tss.adb, s-soflin.ads,\n\texp_ch6.adb, sem_ch6.adb, a-rbtgbo.adb, par-ch12.adb, sem_ch8.adb,\n\tsem_eval.adb, mdll.adb, par-ch5.adb, s-poosiz.adb, sem_ch4.adb,\n\ta-ngelfu.adb, s-taspri-solaris.ads, a-cforse.adb: Fix typos.\n\nFrom-SVN: r229077", "tree": {"sha": "366cb6581477ba79d647a2791260f841c568bd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/366cb6581477ba79d647a2791260f841c568bd06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c83075965b324e46b3225cac95391aaaa9fe1805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83075965b324e46b3225cac95391aaaa9fe1805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83075965b324e46b3225cac95391aaaa9fe1805", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83075965b324e46b3225cac95391aaaa9fe1805/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b1d88b1ac064a407f1c8e177da29f993f895638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b1d88b1ac064a407f1c8e177da29f993f895638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b1d88b1ac064a407f1c8e177da29f993f895638"}], "stats": {"total": 126, "additions": 68, "deletions": 58}, "files": [{"sha": "3e0d760a65978d700b0cf5fe67220aee791d7090", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -1,3 +1,13 @@\n+2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-valllu.adb, sem_ch3.adb, layout.adb, a-crbtgo.adb, exp_ch9.adb,\n+\tmake.adb, g-diopit.adb, s-valuns.adb, sem_ch9.adb, sem_ch10.adb,\n+\tsem_ch12.adb, a-tifiio.adb, g-dynhta.adb, uintp.adb,\n+\tsem_util.adb, sem_res.adb, s-htable.adb, exp_tss.adb, s-soflin.ads,\n+\texp_ch6.adb, sem_ch6.adb, a-rbtgbo.adb, par-ch12.adb, sem_ch8.adb,\n+\tsem_eval.adb, mdll.adb, par-ch5.adb, s-poosiz.adb, sem_ch4.adb,\n+\ta-ngelfu.adb, s-taspri-solaris.ads, a-cforse.adb: Fix typos.\n+\n 2015-10-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sem_aggr.adb, mlib-prj.adb, prep.adb, eval_fat.adb, rtsfind.adb,"}, {"sha": "cf4e2ab1a36a24cc09dba7e024169d51fde88a32", "filename": "gcc/ada/a-cforse.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-cforse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-cforse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -584,7 +584,7 @@ is\n    -------------------\n \n    function First_Element (Container : Set) return Element_Type is\n-      Fst : constant Count_Type :=  First (Container).Node;\n+      Fst : constant Count_Type := First (Container).Node;\n    begin\n       if Fst = 0 then\n          raise Constraint_Error with \"set is empty\";"}, {"sha": "03079618792cf437e8bb2d4fb9d49e6a6614bca4", "filename": "gcc/ada/a-crbtgo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -157,7 +157,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n         and then Color (X) = Black\n       loop\n          if X = Left (Parent (X)) then\n-            W :=  Right (Parent (X));\n+            W := Right (Parent (X));\n \n             if Color (W) = Red then\n                Set_Color (W, Black);\n@@ -201,7 +201,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n          else\n             pragma Assert (X = Right (Parent (X)));\n \n-            W :=  Left (Parent (X));\n+            W := Left (Parent (X));\n \n             if Color (W) = Red then\n                Set_Color (W, Black);"}, {"sha": "f17d92497acdd862268229956cc5a0dfa457ba4e", "filename": "gcc/ada/a-ngelfu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-ngelfu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-ngelfu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -127,7 +127,7 @@ package body Ada.Numerics.Generic_Elementary_Functions is\n                then\n                   Int_Part := Integer (Float_Type'Base'Truncation (A_Right));\n                   Result := Left ** Int_Part;\n-                  Rest :=  A_Right - Float_Type'Base (Int_Part);\n+                  Rest := A_Right - Float_Type'Base (Int_Part);\n \n                   --  Compute with two leading bits of the mantissa using\n                   --  square roots. Bound  to be better than logarithms, and\n@@ -148,7 +148,7 @@ package body Ada.Numerics.Generic_Elementary_Functions is\n                      Rest := Rest - 0.25;\n                   end if;\n \n-                  Result :=  Result *\n+                  Result := Result *\n                     Float_Type'Base (Aux.Pow (Double (Left), Double (Rest)));\n \n                   if Right >= 0.0 then"}, {"sha": "0ef7b02dafe53abeb8bf2d7f0d5f69939ff7f53c", "filename": "gcc/ada/a-rbtgbo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-rbtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-rbtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgbo.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -88,7 +88,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n       X := Node;\n       while X /= Tree.Root and then Color (N (X)) = Black loop\n          if X = Left (N (Parent (N (X)))) then\n-            W :=  Right (N (Parent (N (X))));\n+            W := Right (N (Parent (N (X))));\n \n             if Color (N (W)) = Red then\n                Set_Color (N (W), Black);\n@@ -132,7 +132,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Operations is\n          else\n             pragma Assert (X = Right (N (Parent (N (X)))));\n \n-            W :=  Left (N (Parent (N (X))));\n+            W := Left (N (Parent (N (X))));\n \n             if Color (N (W)) = Red then\n                Set_Color (N (W), Black);"}, {"sha": "2fd8b5421f2a651c2b12689d30471bbb84a8b605", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -231,7 +231,7 @@ package body Ada.Text_IO.Fixed_IO is\n \n    --  The final expression for D is\n \n-   --     D :=  Integer'Max (-18, Integer'Min (Aft, 18 - (Fore - 1)));\n+   --     D := Integer'Max (-18, Integer'Min (Aft, 18 - (Fore - 1)));\n \n    --  For Y and Z the following expressions can be derived:\n "}, {"sha": "80a7e0d9dde021a054e6ec1c0900ddbd04e45675", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -1266,7 +1266,7 @@ package body Exp_Ch6 is\n                   Reset_Analyzed_Flags (Lhs);\n \n                else\n-                  Lhs :=  New_Occurrence_Of (Var, Loc);\n+                  Lhs := New_Occurrence_Of (Var, Loc);\n                end if;\n \n                Set_Assignment_OK (Lhs);\n@@ -5649,7 +5649,7 @@ package body Exp_Ch6 is\n \n          declare\n             Decls   : List_Id;\n-            Obj_Ptr : constant Entity_Id :=  Make_Temporary (Loc, 'T');\n+            Obj_Ptr : constant Entity_Id := Make_Temporary (Loc, 'T');\n \n          begin\n             Decls := New_List ("}, {"sha": "05b3530955331debbf514fb4acbba1cd7234e3b1", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -7674,7 +7674,7 @@ package body Exp_Ch9 is\n \n          --  Create the inner block to protect the abortable part\n \n-         Hdle :=  New_List (Build_Abort_Block_Handler (Loc));\n+         Hdle := New_List (Build_Abort_Block_Handler (Loc));\n \n          Prepend_To (Astats,\n            Make_Procedure_Call_Statement (Loc,"}, {"sha": "5bcccbb0a59008354689c7472bbe94242100f6b9", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -152,7 +152,7 @@ package body Exp_Tss is\n    begin\n       loop\n          Btyp := Base_Type (Btyp);\n-         Proc :=  TSS (Btyp, Nam);\n+         Proc := TSS (Btyp, Nam);\n \n          exit when Present (Proc)\n            or else not Is_Derived_Type (Btyp);"}, {"sha": "dabea22616f766b238a33c7dbe3de1c7c29075ef", "filename": "gcc/ada/g-diopit.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fg-diopit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fg-diopit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-diopit.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -221,8 +221,8 @@ package body GNAT.Directory_Operations.Iteration is\n             then\n                --  Starting with \"<drive>:\\\"\n \n-               DS :=  Strings.Fixed.Index\n-                        (SP (SP'First + 3 .. SP'Last), Dir_Seps);\n+               DS := Strings.Fixed.Index\n+                       (SP (SP'First + 3 .. SP'Last), Dir_Seps);\n \n                if DS = 0 then\n "}, {"sha": "449ac17dec44618add94f3adad3ec2c10990e175", "filename": "gcc/ada/g-dynhta.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fg-dynhta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fg-dynhta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2014, AdaCore                     --\n+--                     Copyright (C) 2002-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -157,7 +157,7 @@ package body GNAT.Dynamic_HTables is\n \n          else\n             loop\n-               Next_Elmt :=  Next (Elmt);\n+               Next_Elmt := Next (Elmt);\n \n                if Next_Elmt = Null_Ptr then\n                   return;"}, {"sha": "c8d7ed7f6c766f6e2e834c2f661692df278bc85e", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -2430,7 +2430,7 @@ package body Layout is\n       --  represents them the same way.\n \n       if Is_Access_Type (E) then\n-         Desig_Type :=  Underlying_Type (Designated_Type (E));\n+         Desig_Type := Underlying_Type (Designated_Type (E));\n \n          --  If we only have a limited view of the type, see whether the\n          --  non-limited view is available."}, {"sha": "f3ac043a7ac76145a7dbf14d8b0cc18ec3d1c81c", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6953,7 +6953,7 @@ package body Make is\n       Get_Name_String (ALI_File);\n       Link_Args (1) := new String'(Name_Buffer (1 .. Name_Len));\n \n-      Link_Args (2 .. Args'Length + 1) :=  Args;\n+      Link_Args (2 .. Args'Length + 1) := Args;\n \n       GNAT.OS_Lib.Normalize_Arguments (Link_Args);\n "}, {"sha": "03e3573aacaa587f21c529b5fa9c4e41e7356cb0", "filename": "gcc/ada/mdll.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fmdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fmdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -326,7 +326,7 @@ package body MDLL is\n                        Adr_Opt'Unchecked_Access & All_Options;\n          begin\n             if Map_File then\n-               Params :=  Map_Opt'Unchecked_Access & Params;\n+               Params := Map_Opt'Unchecked_Access & Params;\n             end if;\n \n             Utl.Gcc (Output_File => Dll_File,"}, {"sha": "cd1f91a0788ee35383ba2743f20c7a6b429b826c", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -726,7 +726,7 @@ package body Ch12 is\n \n          when Tok_Not =>\n             if P_Null_Exclusion then\n-               Typedef_Node :=  P_Access_Type_Definition;\n+               Typedef_Node := P_Access_Type_Definition;\n                Set_Null_Exclusion_Present (Typedef_Node);\n                return Typedef_Node;\n "}, {"sha": "a7d0e5a3d7bedfc8f85dd0f0aa862870e99286cf", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1729,7 +1729,7 @@ package body Ch5 is\n       Node1 : Node_Id;\n \n    begin\n-      Node1 :=  New_Node (N_Iterator_Specification, Sloc (Def_Id));\n+      Node1 := New_Node (N_Iterator_Specification, Sloc (Def_Id));\n       Set_Defining_Identifier (Node1, Def_Id);\n \n       if Token = Tok_Colon then"}, {"sha": "2d6a3c6f477a5f005eae7195468a18b1d4f1dec9", "filename": "gcc/ada/s-htable.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 1995-2013, AdaCore                      --\n+--                    Copyright (C) 1995-2015, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -149,7 +149,7 @@ package body System.HTable is\n \n          else\n             loop\n-               Next_Elmt :=  Next (Elmt);\n+               Next_Elmt := Next (Elmt);\n \n                if Next_Elmt = Null_Ptr then\n                   return;"}, {"sha": "683f32e315d38bc4de9be7b12a1e6190aa5527ef", "filename": "gcc/ada/s-poosiz.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-poosiz.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-poosiz.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,7 +51,7 @@ package body System.Pool_Size is\n    function To_Storage_Count_Access is\n      new Ada.Unchecked_Conversion (Address, Storage_Count_Access);\n \n-   SC_Size : constant :=  SSE.Storage_Count'Object_Size / System.Storage_Unit;\n+   SC_Size : constant := SSE.Storage_Count'Object_Size / System.Storage_Unit;\n \n    package Variable_Size_Management is\n "}, {"sha": "35dc9628b980bbad0e29717a396c00d40f3d630e", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -254,9 +254,9 @@ package System.Soft_Links is\n    procedure Enter_Master_NT;\n    procedure Complete_Master_NT;\n \n-   Current_Master  : Get_Integer_Call :=  Current_Master_NT'Access;\n-   Enter_Master    : No_Param_Proc    :=  Enter_Master_NT'Access;\n-   Complete_Master : No_Param_Proc    :=  Complete_Master_NT'Access;\n+   Current_Master  : Get_Integer_Call := Current_Master_NT'Access;\n+   Enter_Master    : No_Param_Proc    := Enter_Master_NT'Access;\n+   Complete_Master : No_Param_Proc    := Complete_Master_NT'Access;\n \n    ----------------------\n    -- Delay Soft-Links --"}, {"sha": "e06d4d4dbbebc59270cb7f4a83490757ba99838a", "filename": "gcc/ada/s-taspri-solaris.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-taspri-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-taspri-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taspri-solaris.ads?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,7 +94,7 @@ private\n    type Lock is record\n       L              : aliased Base_Lock;\n       Ceiling        : System.Any_Priority := System.Any_Priority'First;\n-      Saved_Priority : System.Any_Priority :=  System.Any_Priority'First;\n+      Saved_Priority : System.Any_Priority := System.Any_Priority'First;\n       Owner          : Owner_ID;\n       Next           : Lock_Ptr;\n       Level          : Private_Task_Serial_Number := 0;"}, {"sha": "44dbff7c3dff3e5ea50b2d299a78960deab31589", "filename": "gcc/ada/s-valllu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-valllu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-valllu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -142,7 +142,7 @@ package body System.Val_LLU is\n \n          if Base not in 2 .. 16 then\n             Overflow := True;\n-            Base :=  16;\n+            Base := 16;\n          end if;\n \n          --  Scan out based integer"}, {"sha": "009d0bc88c1af3d0fe88b3402fb97e9ea433a1e4", "filename": "gcc/ada/s-valuns.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-valuns.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fs-valuns.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuns.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -142,7 +142,7 @@ package body System.Val_Uns is\n \n          if Base not in 2 .. 16 then\n             Overflow := True;\n-            Base :=  16;\n+            Base := 16;\n          end if;\n \n          --  Scan out based integer"}, {"sha": "bae9762f7185695cbd73baec7469c0e61b50b03a", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -3127,7 +3127,7 @@ package body Sem_Ch10 is\n                --  visible, so analyze the declaration for B now, in case it\n                --  has not been done yet.\n \n-               Ent :=  Entity (Selector_Name (Nam));\n+               Ent := Entity (Selector_Name (Nam));\n                Analyze\n                  (Parent\n                    (Unit_Declaration_Node (Entity (Selector_Name (Nam)))));"}, {"sha": "41e90071a4d528cc02054d690f8cc0c4659796f6", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -1235,7 +1235,7 @@ package body Sem_Ch12 is\n \n          elsif No (Selector_Name (Actual)) then\n             Found_Assoc := Actual;\n-            Act :=  Explicit_Generic_Actual_Parameter (Actual);\n+            Act := Explicit_Generic_Actual_Parameter (Actual);\n             Num_Matched := Num_Matched + 1;\n             Next (Actual);\n \n@@ -1254,7 +1254,7 @@ package body Sem_Ch12 is\n                   Set_Etype  (Selector_Name (Actual), Etype (A_F));\n                   Generate_Reference (A_F, Selector_Name (Actual));\n                   Found_Assoc := Actual;\n-                  Act :=  Explicit_Generic_Actual_Parameter (Actual);\n+                  Act := Explicit_Generic_Actual_Parameter (Actual);\n                   Num_Matched := Num_Matched + 1;\n                   exit;\n                end if;\n@@ -3600,7 +3600,7 @@ package body Sem_Ch12 is\n                   New_Copy_Tree (Name (Defining_Unit_Name (N))),\n                 Defining_Identifier => Act_Decl_Id);\n          else\n-            Act_Decl_Name :=  Act_Decl_Id;\n+            Act_Decl_Name := Act_Decl_Id;\n          end if;\n \n       --  Case of instantiation of a formal package\n@@ -10882,7 +10882,7 @@ package body Sem_Ch12 is\n                 Name => New_Copy_Tree (Name (Defining_Unit_Name (Act_Spec))),\n                 Defining_Identifier => Act_Body_Id);\n          else\n-            Act_Body_Name :=  Act_Body_Id;\n+            Act_Body_Name := Act_Body_Id;\n          end if;\n \n          Set_Defining_Unit_Name (Act_Body, Act_Body_Name);"}, {"sha": "ea1640004ff35b3b801e5c6fbac9f66a7abea317", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -5935,7 +5935,7 @@ package body Sem_Ch3 is\n \n       if ASIS_Mode then\n          declare\n-            Typ : constant Entity_Id :=  Make_Temporary (Loc, 'S');\n+            Typ : constant Entity_Id := Make_Temporary (Loc, 'S');\n \n          begin\n             if Nkind (Spec) = N_Access_Function_Definition then\n@@ -18369,7 +18369,7 @@ package body Sem_Ch3 is\n \n          --  The index is given by a subtype with a range constraint\n \n-         T :=  Base_Type (Entity (Subtype_Mark (N)));\n+         T := Base_Type (Entity (Subtype_Mark (N)));\n \n          if not Is_Discrete_Type (T) then\n             Error_Msg_N (\"discrete type required for range\", N);\n@@ -21547,7 +21547,7 @@ package body Sem_Ch3 is\n       R      : Node_Id;\n       Subt   : Entity_Id)\n    is\n-      Kind : constant Entity_Kind :=  Ekind (Def_Id);\n+      Kind : constant Entity_Kind := Ekind (Def_Id);\n \n    begin\n       --  Defend against previous error"}, {"sha": "b01640d3dcf3ac5a307682085e2f14e9da5229bc", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -7878,7 +7878,7 @@ package body Sem_Ch4 is\n          --  Before analysis, a function call appears as an indexed component\n          --  if there are no named associations.\n \n-         elsif Nkind (Parent_Node) =  N_Indexed_Component\n+         elsif Nkind (Parent_Node) = N_Indexed_Component\n            and then N = Prefix (Parent_Node)\n          then\n             Node_To_Replace := Parent_Node;"}, {"sha": "c03269360bfab2d07e55eba2f71bf95f6f818627", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -10361,7 +10361,7 @@ package body Sem_Ch6 is\n             Set_Default_Value (Formal, Expression (Param_Spec));\n \n             if Present (Expression (Param_Spec)) then\n-               Default :=  Expression (Param_Spec);\n+               Default := Expression (Param_Spec);\n \n                if Is_Scalar_Type (Etype (Default)) then\n                   if Nkind (Parameter_Type (Param_Spec)) /="}, {"sha": "18023c152ae2eecd9a8f28fdaefef5d6cffcae6b", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -9214,7 +9214,7 @@ package body Sem_Ch8 is\n       S : Entity_Id;\n    begin\n       for J in reverse 1 .. Scope_Stack.Last loop\n-         S :=  Scope_Stack.Table (J).Entity;\n+         S := Scope_Stack.Table (J).Entity;\n          Write_Int (Int (S));\n          Write_Str (\" === \");\n          Write_Name (Chars (S));"}, {"sha": "728d17d5563a73bfb018ae6f7a04ca4e1a9b2a89", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -781,7 +781,7 @@ package body Sem_Ch9 is\n       for J in reverse 0 .. Scope_Stack.Last loop\n          Task_Nam := Scope_Stack.Table (J).Entity;\n          exit when Ekind (Etype (Task_Nam)) = E_Task_Type;\n-         Kind :=  Ekind (Task_Nam);\n+         Kind := Ekind (Task_Nam);\n \n          if Kind /= E_Block and then Kind /= E_Loop\n            and then not Is_Entry (Task_Nam)"}, {"sha": "28acbf06b4c1b20b4ce78fe908c21dcd3d9e994e", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -2220,7 +2220,7 @@ package body Sem_Eval is\n          --  case of a concatenation of a series of string literals.\n \n          if Nkind (Left_Str) = N_String_Literal then\n-            Left_Len :=  String_Length (Strval (Left_Str));\n+            Left_Len := String_Length (Strval (Left_Str));\n \n             --  If the left operand is the empty string, and the right operand\n             --  is a string literal (the case of \"\" & \"...\"), the result is the"}, {"sha": "a96f1d1657a599ba16a1dee8cc6607308b3bf755", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -7395,7 +7395,7 @@ package body Sem_Res is\n \n          declare\n             Pref : constant Node_Id := Prefix (Entry_Name);\n-            Ent  : constant Entity_Id :=  Entity (Selector_Name (Entry_Name));\n+            Ent  : constant Entity_Id := Entity (Selector_Name (Entry_Name));\n             I    : Interp_Index;\n             It   : Interp;\n \n@@ -7418,7 +7418,7 @@ package body Sem_Res is\n       else pragma Assert (Nkind (Entry_Name) = N_Indexed_Component);\n          Nam := Entity (Selector_Name (Prefix (Entry_Name)));\n          Resolve (Prefix (Prefix (Entry_Name)));\n-         Index :=  First (Expressions (Entry_Name));\n+         Index := First (Expressions (Entry_Name));\n          Resolve (Index, Entry_Index_Type (Nam));\n \n          --  Up to this point the expression could have been the actual in a\n@@ -12049,7 +12049,7 @@ package body Sem_Res is\n             if Present (It.Typ) then\n                N1  := It1.Nam;\n                T1  := It1.Typ;\n-               It1 :=  Disambiguate (Operand, I1, I, Any_Type);\n+               It1 := Disambiguate (Operand, I1, I, Any_Type);\n \n                if It1 = No_Interp then\n                   Conversion_Error_N"}, {"sha": "152be0282b525b52c31cecb146065d0fee8d4040", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -1129,7 +1129,7 @@ package body Sem_Util is\n          D := First_Elmt (Discriminant_Constraint (Desig_Typ));\n          while Present (D) loop\n             if Denotes_Discriminant (Node (D)) then\n-               D_Val :=  Make_Selected_Component (Loc,\n+               D_Val := Make_Selected_Component (Loc,\n                  Prefix => New_Copy_Tree (P),\n                 Selector_Name => New_Occurrence_Of (Entity (Node (D)), Loc));\n \n@@ -7507,7 +7507,7 @@ package body Sem_Util is\n                  (\"Operation First for iterable type must be unique\", Aspect);\n                return Any_Type;\n             else\n-               Cursor :=  Etype (Func);\n+               Cursor := Etype (Func);\n             end if;\n          end if;\n "}, {"sha": "948c521b22e7d87ca8c2bf478cd9ada0bee30e55", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83075965b324e46b3225cac95391aaaa9fe1805/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=c83075965b324e46b3225cac95391aaaa9fe1805", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1586,7 +1586,7 @@ package body Uintp is\n             --  Use prior single precision steps to compute this Euclid step\n \n             --  For constructs such as:\n-            --  sqrt_2: constant :=  1.41421_35623_73095_04880_16887_24209_698;\n+            --  sqrt_2: constant := 1.41421_35623_73095_04880_16887_24209_698;\n             --  sqrt_eps: constant long_float := long_float( 1.0 / sqrt_2)\n             --    ** long_float'machine_mantissa;\n             --"}]}