{"sha": "728c3084ee3b33f86c66ed6b401f56107d307dd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI4YzMwODRlZTNiMzNmODZjNjZlZDZiNDAxZjU2MTA3ZDMwN2RkNw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-03-15T16:19:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-15T16:19:12Z"}, "message": "usage.adb: Add missing lines for -gnat95 and -gnat05 switches\n\n2005-03-08  Robert Dewar  <dewar@adacore.com>\n\n\t* usage.adb: Add missing lines for -gnat95 and -gnat05 switches\n\n\t* sem_ch7.adb: Minor change to propagate Is_Ada_2005 flag\n\n\t* i-c.adb: Clarify that AI-258 behavior is also intended in Ada 95\n\nFrom-SVN: r96511", "tree": {"sha": "0922a90c50185c9ebfde2dc85f0649ff0055d342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0922a90c50185c9ebfde2dc85f0649ff0055d342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/728c3084ee3b33f86c66ed6b401f56107d307dd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728c3084ee3b33f86c66ed6b401f56107d307dd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/728c3084ee3b33f86c66ed6b401f56107d307dd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728c3084ee3b33f86c66ed6b401f56107d307dd7/comments", "author": null, "committer": null, "parents": [{"sha": "e965f6ad7ede709849f5d99118e84a815dd6d2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e965f6ad7ede709849f5d99118e84a815dd6d2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e965f6ad7ede709849f5d99118e84a815dd6d2c1"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "250344977b5c3e1144d8252dfc4beb5cc5d2a3e8", "filename": "gcc/ada/i-c.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728c3084ee3b33f86c66ed6b401f56107d307dd7/gcc%2Fada%2Fi-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728c3084ee3b33f86c66ed6b401f56107d307dd7/gcc%2Fada%2Fi-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-c.adb?ref=728c3084ee3b33f86c66ed6b401f56107d307dd7", "patch": "@@ -504,7 +504,8 @@ package body Interfaces.C is\n          --  char_array. The lower bound of this array is required to be zero\n          --  (RM B.3(50)) but that is of course impossible given that size_t\n          --  is unsigned. According to Ada 2005 AI-258, the result is to raise\n-         --  Constraint_Error.\n+         --  Constraint_Error. This is also the appropriate behavior in Ada 95,\n+         --  since nothing else makes sense.\n \n          if Item'Length = 0 then\n             raise Constraint_Error;\n@@ -593,7 +594,8 @@ package body Interfaces.C is\n          --  wchar_array. The lower bound of this array is required to be zero\n          --  (RM B.3(50)) but that is of course impossible given that size_t\n          --  is unsigned. According to Ada 2005 AI-258, the result is to raise\n-         --  Constraint_Error.\n+         --  Constraint_Error. This is also the appropriate behavior in Ada 95,\n+         --  since nothing else makes sense.\n \n          if Item'Length = 0 then\n             raise Constraint_Error;\n@@ -680,7 +682,8 @@ package body Interfaces.C is\n          --  char16_array. The lower bound of this array is required to be zero\n          --  (RM B.3(50)) but that is of course impossible given that size_t\n          --  is unsigned. According to Ada 2005 AI-258, the result is to raise\n-         --  Constraint_Error.\n+         --  Constraint_Error. This is also the appropriate behavior in Ada 95,\n+         --  since nothing else makes sense.\n \n          if Item'Length = 0 then\n             raise Constraint_Error;"}, {"sha": "cf1cc2f502538f5d6492a900b3c11c22b9269b6a", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728c3084ee3b33f86c66ed6b401f56107d307dd7/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728c3084ee3b33f86c66ed6b401f56107d307dd7/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=728c3084ee3b33f86c66ed6b401f56107d307dd7", "patch": "@@ -1685,6 +1685,8 @@ package body Sem_Ch7 is\n                                                                       (Full));\n          Set_Is_Volatile       (Priv, Is_Volatile       (Full));\n          Set_Treat_As_Volatile (Priv, Treat_As_Volatile (Full));\n+         Set_Is_Ada_2005       (Priv, Is_Ada_2005       (Full));\n+         --  Why is atomic not copied here ???\n \n          if Referenced (Full) then\n             Set_Referenced (Priv);"}, {"sha": "64bb0b1c89259b1c5a44ae0fa86ba2cff631e45f", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/728c3084ee3b33f86c66ed6b401f56107d307dd7/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/728c3084ee3b33f86c66ed6b401f56107d307dd7/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=728c3084ee3b33f86c66ed6b401f56107d307dd7", "patch": "@@ -26,6 +26,7 @@\n \n with Hostparm;\n with Namet;          use Namet;\n+with Opt;            use Opt;\n with Osint;          use Osint;\n with Output;         use Output;\n with System.WCh_Con; use System.WCh_Con;\n@@ -466,9 +467,24 @@ begin\n    Write_Switch_Char (\"83\");\n    Write_Line (\"Enforce Ada 83 restrictions\");\n \n+   --  Line for -gnat95 switch\n+\n+   Write_Switch_Char (\"95\");\n+\n+   if Ada_Version_Default = Ada_95 then\n+      Write_Line (\"Ada 95 mode (default)\");\n+   else\n+      Write_Line (\"Enforce Ada 95 restrictions\");\n+   end if;\n+\n    --  Line for -gnat05 switch\n \n    Write_Switch_Char (\"05\");\n-   Write_Line (\"Allow Ada 2005 extensions\");\n+\n+   if Ada_Version_Default = Ada_05 then\n+      Write_Line (\"Ada 2005 mode (default)\");\n+   else\n+      Write_Line (\"Allow Ada 2005 extensions\");\n+   end if;\n \n end Usage;"}]}