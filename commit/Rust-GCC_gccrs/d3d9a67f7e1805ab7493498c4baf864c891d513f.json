{"sha": "d3d9a67f7e1805ab7493498c4baf864c891d513f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNkOWE2N2Y3ZTE4MDVhYjc0OTM0OThjNGJhZjg2NGM4OTFkNTEzZg==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-03-25T02:21:01Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-03-25T02:21:01Z"}, "message": "pragma-override1.C: Mark as requiring 'internal' visibility.\n\n\t* g++.dg/ext/visibility/pragma-override1.C: Mark as requiring\n\t'internal' visibility.\n\t* g++.dg/ext/visibility/pragma-override2.C: Likewise.\n\t* g++.dg/ext/visibility/visibility-7.C: Mark as requiring\n\t'protected' visibility.\n\t* gcc.dg/visibility-7.c: Likewise.\n\t* lib/target-supports.exp (check_visibility_available): Take\n\ta parameter, the kind of visibility to check for.\n\t* lib/target-supports-dg.exp (dg-require-visibility): Pass parameter\n\tto check_visibility_available.\n\nFrom-SVN: r97031", "tree": {"sha": "39a772f05be2d5758301018bc13b1b437c627509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a772f05be2d5758301018bc13b1b437c627509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3d9a67f7e1805ab7493498c4baf864c891d513f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d9a67f7e1805ab7493498c4baf864c891d513f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3d9a67f7e1805ab7493498c4baf864c891d513f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3d9a67f7e1805ab7493498c4baf864c891d513f/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0811c49e73bec4ea9f0b7d0b6c8030a20bfe2a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0811c49e73bec4ea9f0b7d0b6c8030a20bfe2a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0811c49e73bec4ea9f0b7d0b6c8030a20bfe2a16"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "985dee530ed09d53ffe353d19a1653c2fa78b91d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -4,6 +4,17 @@\n \n 2005-03-24  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* g++.dg/ext/visibility/pragma-override1.C: Mark as requiring\n+\t'internal' visibility.\n+\t* g++.dg/ext/visibility/pragma-override2.C: Likewise.\n+\t* g++.dg/ext/visibility/visibility-7.C: Mark as requiring\n+\t'protected' visibility.\n+\t* gcc.dg/visibility-7.c: Likewise.\n+\t* lib/target-supports.exp (check_visibility_available): Take\n+\ta parameter, the kind of visibility to check for.\n+\t* lib/target-supports-dg.exp (dg-require-visibility): Pass parameter\n+\tto check_visibility_available.\n+\n \t* g++.dg/expr/cast3.C: New.\n \n 2005-03-24  David Edelsohn  <edelsohn@gnu.org>"}, {"sha": "e292df41b4c4b3700f3101023092c001996632c1", "filename": "gcc/testsuite/g++.dg/ext/visibility/pragma-override1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override1.C?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -1,6 +1,6 @@\n /* Test that #pragma GCC visibility does not override class member specific settings. */\n /* { dg-do compile } */\n-/* { dg-require-visibility \"\" } */\n+/* { dg-require-visibility \"internal\" } */\n /* { dg-final { scan-assembler \"\\\\.internal.*Foo.methodEv\" } } */\n \n #pragma GCC visibility push(hidden)"}, {"sha": "fe6c47fdbf51f6c8ea471e5d5239ac3d785510ca", "filename": "gcc/testsuite/g++.dg/ext/visibility/pragma-override2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fpragma-override2.C?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -1,6 +1,6 @@\n /* Test that #pragma GCC visibility does not override class member specific settings. */\n /* { dg-do compile } */\n-/* { dg-require-visibility \"\" } */\n+/* { dg-require-visibility \"internal\" } */\n /* { dg-final { scan-assembler \"\\\\.internal.*Foo.methodEv\" } } */\n \n #pragma GCC visibility push(hidden)"}, {"sha": "ae4589397b6121fa392ba9cebe530af23542dfcd", "filename": "gcc/testsuite/g++.dg/ext/visibility/visibility-7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fvisibility-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fvisibility-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility%2Fvisibility-7.C?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -1,5 +1,5 @@\n /* Test warning from conflicting visibility specifications. */\n-/* { dg-require-visibility \"\" } */\n+/* { dg-require-visibility \"protected\" } */\n /* { dg-final { scan-hidden \"xyzzy\" } } */\n \n extern int "}, {"sha": "aaa8165e3e0b85dbe670015d632425fa07d7c38c", "filename": "gcc/testsuite/gcc.dg/visibility-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-7.c?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -1,6 +1,6 @@\n /* Test warning from conflicting visibility specifications. */\n /* { dg-do compile } */\n-/* { dg-require-visibility \"\" } */\n+/* { dg-require-visibility \"protected\" } */\n /* { dg-final { scan-hidden \"xyzzy\" } } */\n \n extern int "}, {"sha": "1f2242fdc5da07c47d8407541dbda20cd8ee85fd", "filename": "gcc/testsuite/lib/target-supports-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports-dg.exp?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -32,7 +32,7 @@ proc dg-require-weak { args } {\n # test.\n \n proc dg-require-visibility { args } {\n-    set visibility_available [ check_visibility_available ]\n+    set visibility_available [ check_visibility_available [lindex $args 1 ] ]\n     if { $visibility_available == -1 } {\n \tupvar name name\n \tunresolved \"$name\""}, {"sha": "4b129a870a14191b6786518465f80f1bfdd6f6db", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3d9a67f7e1805ab7493498c4baf864c891d513f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=d3d9a67f7e1805ab7493498c4baf864c891d513f", "patch": "@@ -110,13 +110,14 @@ proc check_weak_available { } {\n }\n \n ###############################\n-# proc check_visibility_available { }\n+# proc check_visibility_available { what_kind }\n ###############################\n \n # The visibility attribute is only support in some object formats\n # This proc returns 1 if it is supported, 0 if not.\n+# The argument is the kind of visibility, default/protected/hidden/internal.\n \n-proc check_visibility_available { } {\n+proc check_visibility_available { what_kind } {\n     global visibility_available_saved\n     global tool\n     global target_triplet\n@@ -126,18 +127,29 @@ proc check_visibility_available { } {\n         return 0\n     }\n \n-    if {![info exists visibility_available_saved] } {\n-\tset lines [get_compiler_messages visibility object {\n-\t    void f() __attribute__((visibility(\"hidden\")));\n-\t    void f() {}\n-\t}]\n-\tif [string match \"\" $lines] then {\n-\t    set visibility_available_saved 1\n-\t} else {\n-\t    set visibility_available_saved 0\n+    if [string match \"\" $what_kind] { set what_kind \"hidden\" }\n+\n+    if { [info exists visibility_available_saved] } {\n+\tverbose \"Saved result is <$visibility_available_saved>\" 1\n+\tif { [ lsearch -exact $visibility_available_saved $what_kind ] != -1 } {\n+\t    return 1\n+\t} elseif { [ lsearch -exact $visibility_available_saved \"!$what_kind\" ] != -1 } {\n+\t    return 0\n \t}\n     }\n-    return $visibility_available_saved\n+\n+    set lines [get_compiler_messages visibility object \"\n+\tvoid f() __attribute__((visibility(\\\"$what_kind\\\")));\n+\tvoid f() {}\n+    \"]\n+    if [string match \"\" $lines] then {\n+\tset answer 1\n+\tlappend visibility_available_saved $what_kind\n+    } else {\n+\tset answer 0\n+\tlappend visibility_available_saved \"!$what_kind\"\n+    }\n+    return $answer\n }\n \n ###############################"}]}