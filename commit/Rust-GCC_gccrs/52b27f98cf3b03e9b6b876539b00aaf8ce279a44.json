{"sha": "52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJiMjdmOThjZjNiMDNlOWI2Yjg3NjUzOWIwMGFhZjhjZTI3OWE0NA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-07-08T19:26:16Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-07-08T19:26:16Z"}, "message": "re PR tree-optimization/22329 (VRP produces mis-matched (non compatible) types in MODIFY_EXPR)\n\n2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/22329\n        * gcc.dg/pr22329.c: New test.\n2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR tree-opt/22329\n        * tree-ssa-propagate.c (fold_predicate_in): Convert the value\n        to the correct type if we have a MODIFY_EXPR.\n\nFrom-SVN: r101789", "tree": {"sha": "d8ba1b61150f89c23c97e3b4449de2ef40b5749a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8ba1b61150f89c23c97e3b4449de2ef40b5749a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/comments", "author": null, "committer": null, "parents": [{"sha": "3ffa3729c00a1d9ddd52a89813ccd31b28b552f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffa3729c00a1d9ddd52a89813ccd31b28b552f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffa3729c00a1d9ddd52a89813ccd31b28b552f5"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "2c169d2cc93e7bd49f71c92c704993b5786f7e6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "patch": "@@ -1,3 +1,9 @@\n+2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/22329\n+\t* tree-ssa-propagate.c (fold_predicate_in): Convert the value\n+\tto the correct type if we have a MODIFY_EXPR.\n+\n 2005-07-08  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR tree-optimization/22360"}, {"sha": "f61b47363cd5957a4721e7b35e913cd18f1d059c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "patch": "@@ -1,3 +1,8 @@\n+2005-07-08  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR tree-opt/22329\n+\t* gcc.dg/pr22329.c: New test.\n+\n 2005-07-08  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR tree-optimization/20139"}, {"sha": "94e32d69593e3b7e61597b395677cd5ff2c03f64", "filename": "gcc/testsuite/gcc.dg/pr22329.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2Ftestsuite%2Fgcc.dg%2Fpr22329.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2Ftestsuite%2Fgcc.dg%2Fpr22329.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr22329.c?ref=52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+int f(int i)\n+{\n+  int k = 0;\n+  if (i == 0)\n+    k = i == 0;\n+  return k;\n+}"}, {"sha": "07b13e3fa5fc912bd36d70c76c9ff2576f1622fe", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52b27f98cf3b03e9b6b876539b00aaf8ce279a44/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=52b27f98cf3b03e9b6b876539b00aaf8ce279a44", "patch": "@@ -1018,11 +1018,15 @@ static bool\n fold_predicate_in (tree stmt)\n {\n   tree *pred_p = NULL;\n+  bool modify_expr_p = false;\n   tree val;\n \n   if (TREE_CODE (stmt) == MODIFY_EXPR\n       && COMPARISON_CLASS_P (TREE_OPERAND (stmt, 1)))\n-    pred_p = &TREE_OPERAND (stmt, 1);\n+    {\n+      modify_expr_p = true;\n+      pred_p = &TREE_OPERAND (stmt, 1);\n+    }\n   else if (TREE_CODE (stmt) == COND_EXPR)\n     pred_p = &COND_EXPR_COND (stmt);\n   else\n@@ -1031,6 +1035,9 @@ fold_predicate_in (tree stmt)\n   val = vrp_evaluate_conditional (*pred_p, true);\n   if (val)\n     {\n+      if (modify_expr_p)\n+        val = fold_convert (TREE_TYPE (*pred_p), val);\n+      \n       if (dump_file)\n \t{\n \t  fprintf (dump_file, \"Folding predicate \");"}]}