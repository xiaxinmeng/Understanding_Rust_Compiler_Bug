{"sha": "7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JmYzVhZGFjOGQ3MTUxZWQ0YzVlZDEzZWQyMzBmMjljMjEwMmQ5Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-04-28T14:43:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-04-28T14:43:48Z"}, "message": "re PR c++/65734 (Yet another case of lost alignment by stor_layout)\n\n\tPR c++/65734\ngcc/\n\t* stor-layout.c (layout_type): Layout the TYPE_MAIN_VARIANT.\n\t(finalize_type_size): Respect TYPE_USER_ALIGN.\n\t(layout_type) [ARRAY_TYPE]: Likewise.\ngcc/cp/\n\t* class.c (fixup_attribute_variants): Respect TYPE_USER_ALIGN.\n\nFrom-SVN: r222529", "tree": {"sha": "67cb947fcbac45db1e0afffa2d193017396302a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67cb947fcbac45db1e0afffa2d193017396302a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "544f7fc84123aa03d37cc5325576f0db51d94ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544f7fc84123aa03d37cc5325576f0db51d94ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544f7fc84123aa03d37cc5325576f0db51d94ef8"}], "stats": {"total": 85, "additions": 77, "deletions": 8}, "files": [{"sha": "3857fa08e0b0387c921d04f4ca3477470ba1e493", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "patch": "@@ -1,3 +1,10 @@\n+2015-04-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/65734\n+\t* stor-layout.c (layout_type): Layout the TYPE_MAIN_VARIANT.\n+\t(finalize_type_size): Respect TYPE_USER_ALIGN.\n+\t(layout_type) [ARRAY_TYPE]: Likewise.\n+\n 2015-04-28  Yvan Roux  <yvan.roux@linaro.org>\n \n \t* config/arm/arm.md (*arm_movt): Fix type attribute."}, {"sha": "b7c4720c41ce462dd5485133bd15144e1ae9c482", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "patch": "@@ -1,3 +1,8 @@\n+2015-04-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/65734\n+\t* class.c (fixup_attribute_variants): Respect TYPE_USER_ALIGN.\n+\n 2015-04-27  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* class.c (layout_class_type): Remove check if"}, {"sha": "c1548a0ae16092fbfe3a071300c114c7eccc9b47", "filename": "gcc/cp/class.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "patch": "@@ -1989,14 +1989,23 @@ fixup_attribute_variants (tree t)\n   if (!t)\n     return;\n \n+  tree attrs = TYPE_ATTRIBUTES (t);\n+  unsigned align = TYPE_ALIGN (t);\n+  bool user_align = TYPE_USER_ALIGN (t);\n+\n   for (variants = TYPE_NEXT_VARIANT (t);\n        variants;\n        variants = TYPE_NEXT_VARIANT (variants))\n     {\n       /* These are the two fields that check_qualified_type looks at and\n \t are affected by attributes.  */\n-      TYPE_ATTRIBUTES (variants) = TYPE_ATTRIBUTES (t);\n-      TYPE_ALIGN (variants) = TYPE_ALIGN (t);\n+      TYPE_ATTRIBUTES (variants) = attrs;\n+      unsigned valign = align;\n+      if (TYPE_USER_ALIGN (variants))\n+\tvalign = MAX (valign, TYPE_ALIGN (variants));\n+      else\n+\tTYPE_USER_ALIGN (variants) = user_align;\n+      TYPE_ALIGN (variants) = valign;\n     }\n }\n \f"}, {"sha": "38760b29a69f3f75f6af2e82116ac6df3b547f2b", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "patch": "@@ -1826,9 +1826,13 @@ finalize_type_size (tree type)\n \t{\n \t  TYPE_SIZE (variant) = size;\n \t  TYPE_SIZE_UNIT (variant) = size_unit;\n-\t  TYPE_ALIGN (variant) = align;\n+\t  unsigned valign = align;\n+\t  if (TYPE_USER_ALIGN (variant))\n+\t    valign = MAX (valign, TYPE_ALIGN (variant));\n+\t  else\n+\t    TYPE_USER_ALIGN (variant) = user_align;\n+\t  TYPE_ALIGN (variant) = valign;\n \t  TYPE_PRECISION (variant) = precision;\n-\t  TYPE_USER_ALIGN (variant) = user_align;\n \t  SET_TYPE_MODE (variant, mode);\n \t}\n     }\n@@ -2149,6 +2153,10 @@ layout_type (tree type)\n   if (type == error_mark_node)\n     return;\n \n+  /* We don't want finalize_type_size to copy an alignment attribute to\n+     variants that don't have it.  */\n+  type = TYPE_MAIN_VARIANT (type);\n+\n   /* Do nothing if type has been laid out before.  */\n   if (TYPE_SIZE (type))\n     return;\n@@ -2345,13 +2353,17 @@ layout_type (tree type)\n \t/* Now round the alignment and size,\n \t   using machine-dependent criteria if any.  */\n \n+\tunsigned align = TYPE_ALIGN (element);\n+\tif (TYPE_USER_ALIGN (type))\n+\t  align = MAX (align, TYPE_ALIGN (type));\n+\telse\n+\t  TYPE_USER_ALIGN (type) = TYPE_USER_ALIGN (element);\n #ifdef ROUND_TYPE_ALIGN\n-\tTYPE_ALIGN (type)\n-\t  = ROUND_TYPE_ALIGN (type, TYPE_ALIGN (element), BITS_PER_UNIT);\n+\talign = ROUND_TYPE_ALIGN (type, align, BITS_PER_UNIT);\n #else\n-\tTYPE_ALIGN (type) = MAX (TYPE_ALIGN (element), BITS_PER_UNIT);\n+\talign = MAX (align, BITS_PER_UNIT);\n #endif\n-\tTYPE_USER_ALIGN (type) = TYPE_USER_ALIGN (element);\n+\tTYPE_ALIGN (type) = align;\n \tSET_TYPE_MODE (type, BLKmode);\n \tif (TYPE_SIZE (type) != 0\n \t    && ! targetm.member_type_forces_blk (type, VOIDmode)"}, {"sha": "d73c875d6374a021290ed0e284a7829adccfef8d", "filename": "gcc/testsuite/g++.dg/cpp0x/alignas1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas1.C?ref=7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/65734\n+// { dg-do compile { target c++11 } }\n+\n+template <class T> struct A\n+{\n+  T t;\n+};\n+\n+typedef A<int> T[4] alignas (2 * alignof (int));\n+A<int> a[4];\n+\n+typedef A<char> T2[4] alignas (2 * alignof (int));\n+\n+#define SA(X) static_assert((X),#X)\n+SA(alignof (T) == 2 * alignof(int));\n+SA(alignof (T2) == 2 * alignof(int));"}, {"sha": "2e7d051c886d8ce1147bdb06bffab32506aeea33", "filename": "gcc/testsuite/g++.dg/cpp0x/alignas2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falignas2.C?ref=7bfc5adac8d7151ed4c5ed13ed230f29c2102d9c", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/65734\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T>\n+struct BVector\n+{\n+  T t;\n+};\n+BVector<int> m;\n+\n+template <template <class> class T>\n+struct BV2\n+{\n+  typedef T<float> value_type alignas (16);\n+  value_type v;\n+};\n+BV2<BVector> m2;\n+\n+#define SA(X) static_assert((X),#X)\n+SA(alignof (BV2<BVector>::value_type) == 16);"}]}