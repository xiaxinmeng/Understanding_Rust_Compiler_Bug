{"sha": "8ba8c3757ba2d1325e75b637ca410609f716d4c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJhOGMzNzU3YmEyZDEzMjVlNzViNjM3Y2E0MTA2MDlmNzE2ZDRjMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-02-26T04:53:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-02-26T04:53:58Z"}, "message": "re PR c++/69889 (ICE: in assign_temp, at function.c:961)\n\n\tPR c++/69889\n\n\t* cp-tree.h (AGGR_INIT_FROM_THUNK_P): New.\n\t* tree.c (build_aggr_init_expr): Set it.\n\t* semantics.c (simplify_aggr_init_expr): Check it.\n\t* cp-gimplify.c (cp_genericize_r): Don't walk into\n\ta call/aggr_init from a thunk.\n\nFrom-SVN: r233733", "tree": {"sha": "ecbeacf79ae336045e5b24c0ee8a24afd2d7f6d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecbeacf79ae336045e5b24c0ee8a24afd2d7f6d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ba8c3757ba2d1325e75b637ca410609f716d4c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ba8c3757ba2d1325e75b637ca410609f716d4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ba8c3757ba2d1325e75b637ca410609f716d4c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ba8c3757ba2d1325e75b637ca410609f716d4c0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1569de0fd6ea025af3e5cb70a0401eaf00d7946d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1569de0fd6ea025af3e5cb70a0401eaf00d7946d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1569de0fd6ea025af3e5cb70a0401eaf00d7946d"}], "stats": {"total": 83, "additions": 72, "deletions": 11}, "files": [{"sha": "ecab54585f52640e19fccaa04f59a7fc6198dd32", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8ba8c3757ba2d1325e75b637ca410609f716d4c0", "patch": "@@ -1,5 +1,12 @@\n 2016-02-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/69889\n+\t* cp-tree.h (AGGR_INIT_FROM_THUNK_P): New.\n+\t* tree.c (build_aggr_init_expr): Set it.\n+\t* semantics.c (simplify_aggr_init_expr): Check it.\n+\t* cp-gimplify.c (cp_genericize_r): Don't walk into\n+\ta call/aggr_init from a thunk.\n+\n \tPR c++/69842\n \t* method.c (forward_parm): Handle parameter packs.\n \t* lambda.c (maybe_add_lambda_conv_op): Use it for them."}, {"sha": "6af376081bd7a0fa81349a2073b596abd8fcd01b", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=8ba8c3757ba2d1325e75b637ca410609f716d4c0", "patch": "@@ -1021,10 +1021,16 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n       && omp_var_to_track (stmt))\n     omp_cxx_notice_variable (wtd->omp_ctx, stmt);\n \n-  if (is_invisiref_parm (stmt)\n-      /* Don't dereference parms in a thunk, pass the references through. */\n-      && !(DECL_THUNK_P (current_function_decl)\n-\t   && TREE_CODE (stmt) == PARM_DECL))\n+  /* Don't dereference parms in a thunk, pass the references through. */\n+  if ((TREE_CODE (stmt) == CALL_EXPR && CALL_FROM_THUNK_P (stmt))\n+      || (TREE_CODE (stmt) == AGGR_INIT_EXPR && AGGR_INIT_FROM_THUNK_P (stmt)))\n+    {\n+      *walk_subtrees = 0;\n+      return NULL;\n+    }\n+\n+  /* Otherwise, do dereference invisible reference parms.  */\n+  if (is_invisiref_parm (stmt))\n     {\n       *stmt_p = convert_from_reference (stmt);\n       *walk_subtrees = 0;"}, {"sha": "b1dc23cb5df1ae6d1ecb6e1fa82a90ee46fa5ad9", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=8ba8c3757ba2d1325e75b637ca410609f716d4c0", "patch": "@@ -3409,6 +3409,11 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n #define AGGR_INIT_ZERO_FIRST(NODE) \\\n   TREE_LANG_FLAG_2 (AGGR_INIT_EXPR_CHECK (NODE))\n \n+/* Nonzero means that the call is the jump from a thunk to the\n+   thunked-to function.  */\n+#define AGGR_INIT_FROM_THUNK_P(NODE) \\\n+  (AGGR_INIT_EXPR_CHECK (NODE)->base.protected_flag)\n+\n /* AGGR_INIT_EXPR accessors.  These are equivalent to the CALL_EXPR\n    accessors, except for AGGR_INIT_EXPR_SLOT (which takes the place of\n    CALL_EXPR_STATIC_CHAIN).  */"}, {"sha": "fd83c46e950cd59c079f6f57776966ce5a666c5e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=8ba8c3757ba2d1325e75b637ca410609f716d4c0", "patch": "@@ -4067,6 +4067,7 @@ simplify_aggr_init_expr (tree *tp)\n \t\t\t\t    AGGR_INIT_EXPR_ARGP (aggr_init_expr));\n   TREE_NOTHROW (call_expr) = TREE_NOTHROW (aggr_init_expr);\n   CALL_EXPR_LIST_INIT_P (call_expr) = CALL_EXPR_LIST_INIT_P (aggr_init_expr);\n+  CALL_FROM_THUNK_P (call_expr) = AGGR_INIT_FROM_THUNK_P (aggr_init_expr);\n \n   if (style == ctor)\n     {"}, {"sha": "0b7b1443b609f2f549a1e85f1e44d6d14600a79a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=8ba8c3757ba2d1325e75b637ca410609f716d4c0", "patch": "@@ -464,14 +464,22 @@ build_aggr_init_expr (tree type, tree init)\n     {\n       slot = build_local_temp (type);\n \n-      if (TREE_CODE(init) == CALL_EXPR)\n-\trval = build_aggr_init_array (void_type_node, fn, slot,\n-\t\t\t\t      call_expr_nargs (init),\n-\t\t\t\t      CALL_EXPR_ARGP (init));\n+      if (TREE_CODE (init) == CALL_EXPR)\n+\t{\n+\t  rval = build_aggr_init_array (void_type_node, fn, slot,\n+\t\t\t\t\tcall_expr_nargs (init),\n+\t\t\t\t\tCALL_EXPR_ARGP (init));\n+\t  AGGR_INIT_FROM_THUNK_P (rval)\n+\t    = CALL_FROM_THUNK_P (init);\n+\t}\n       else\n-\trval = build_aggr_init_array (void_type_node, fn, slot,\n-\t\t\t\t      aggr_init_expr_nargs (init),\n-\t\t\t\t      AGGR_INIT_EXPR_ARGP (init));\n+\t{\n+\t  rval = build_aggr_init_array (void_type_node, fn, slot,\n+\t\t\t\t\taggr_init_expr_nargs (init),\n+\t\t\t\t\tAGGR_INIT_EXPR_ARGP (init));\n+\t  AGGR_INIT_FROM_THUNK_P (rval)\n+\t    = AGGR_INIT_FROM_THUNK_P (init);\n+\t}\n       TREE_SIDE_EFFECTS (rval) = 1;\n       AGGR_INIT_VIA_CTOR_P (rval) = is_ctor;\n       TREE_NOTHROW (rval) = TREE_NOTHROW (init);"}, {"sha": "8e806c849ae342945081877eb48321919fcc489f", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-conv10.C", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba8c3757ba2d1325e75b637ca410609f716d4c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-conv10.C?ref=8ba8c3757ba2d1325e75b637ca410609f716d4c0", "patch": "@@ -0,0 +1,34 @@\n+// PR c++/69889\n+// { dg-do compile { target c++11 } }\n+\n+template <typename F> struct Tag {\n+  static void fp() { f()(0); }\n+  static F f() {}\n+};\n+\n+struct Dispatch {\n+  template <typename F> Dispatch(F&&) : f(Tag<F>::fp) {}\n+  void (*f)();\n+};\n+\n+struct Empty { Empty(Empty&&); };\n+\n+struct Value {\n+  Value();\n+  template <typename U> Value(U);\n+  void call(Dispatch);\n+  Empty e;\n+};\n+\n+struct EmptyValue {\n+  EmptyValue(EmptyValue&&);\n+  EmptyValue();\n+};\n+\n+struct User {\n+  User() {\n+    Value().call([](Value) { return EmptyValue(); });\n+  }\n+};\n+\n+User user;"}]}