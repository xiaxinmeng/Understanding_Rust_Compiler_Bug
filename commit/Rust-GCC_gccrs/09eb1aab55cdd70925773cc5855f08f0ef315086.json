{"sha": "09eb1aab55cdd70925773cc5855f08f0ef315086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllYjFhYWI1NWNkZDcwOTI1NzczY2M1ODU1ZjA4ZjBlZjMxNTA4Ng==", "commit": {"author": {"name": "Graham Stott", "email": "grahams@redhat.com", "date": "2001-11-22T14:30:37Z"}, "committer": {"name": "Graham Stott", "email": "grahams@gcc.gnu.org", "date": "2001-11-22T14:30:37Z"}, "message": "cfgrtl.c (try_redirect_by_replacing_jump): Fix typo, emit replacement jump after original jump.\n\n\n        * cfgrtl.c (try_redirect_by_replacing_jump): Fix typo, emit\n        replacement jump after original jump.\n\n        (verify_flow_info): Remove redundent initialisation.\n        Handle reaching end of insn list before finding a BARRIER.\n        Only issue one missing barrier diagnostic.\n\nFrom-SVN: r47269", "tree": {"sha": "4a5ebac76f018ce756ea63f1997e6517c6939581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a5ebac76f018ce756ea63f1997e6517c6939581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09eb1aab55cdd70925773cc5855f08f0ef315086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09eb1aab55cdd70925773cc5855f08f0ef315086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09eb1aab55cdd70925773cc5855f08f0ef315086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09eb1aab55cdd70925773cc5855f08f0ef315086/comments", "author": null, "committer": null, "parents": [{"sha": "44a5da099ebaa8aa06912fb71b8114e495c839c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a5da099ebaa8aa06912fb71b8114e495c839c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a5da099ebaa8aa06912fb71b8114e495c839c6"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "29a4b9cce92f12279fd660cb23fcd508cea583e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09eb1aab55cdd70925773cc5855f08f0ef315086/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09eb1aab55cdd70925773cc5855f08f0ef315086/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09eb1aab55cdd70925773cc5855f08f0ef315086", "patch": "@@ -1,3 +1,12 @@\n+2001-11-22  Graham Stott  <grahams@redhat.com>\n+\n+\t* cfgrtl.c (try_redirect_by_replacing_jump): Fix typo, emit\n+\treplacement jump after original jump.\n+\n+\t(verify_flow_info): Remove redundent initialisation.\n+\tHandle reaching end of insn list before finding a BARRIER.\n+\tOnly issue one missing barrier diagnostic.\n+\n 2001-11-22  Graham Stott  <grahams@redhat.com>\n \n \t* local-alloc.c (combine_regs): Handle SUBREG_REG being a MEM."}, {"sha": "48d0e859217086c5e9b02f902510ea5e367b00cd", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09eb1aab55cdd70925773cc5855f08f0ef315086/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09eb1aab55cdd70925773cc5855f08f0ef315086/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=09eb1aab55cdd70925773cc5855f08f0ef315086", "patch": "@@ -710,7 +710,7 @@ try_redirect_by_replacing_jump (e, target)\n       rtx target_label = block_label (target);\n       rtx barrier;\n \n-      emit_jump_insn_after (gen_jump (target_label), kill_from);\n+      emit_jump_insn_after (gen_jump (target_label), insn);\n       JUMP_LABEL (src->end) = target_label;\n       LABEL_NUSES (target_label)++;\n       if (rtl_dump_file)\n@@ -1634,17 +1634,18 @@ verify_flow_info ()\n \t}\n       if (!has_fallthru)\n \t{\n-\t  rtx insn = bb->end;\n+\t  rtx insn;\n \n \t  /* Ensure existence of barrier in BB with no fallthru edges.  */\n-\t  for (insn = bb->end; GET_CODE (insn) != BARRIER;\n+\t  for (insn = bb->end; !insn || GET_CODE (insn) != BARRIER;\n \t       insn = NEXT_INSN (insn))\n \t    if (!insn\n \t\t|| (GET_CODE (insn) == NOTE\n \t\t    && NOTE_LINE_NUMBER (insn) == NOTE_INSN_BASIC_BLOCK))\n \t\t{\n \t\t  error (\"Missing barrier after block %i\", bb->index);\n \t\t  err = 1;\n+\t\t  break;\n \t\t}\n \t}\n "}]}