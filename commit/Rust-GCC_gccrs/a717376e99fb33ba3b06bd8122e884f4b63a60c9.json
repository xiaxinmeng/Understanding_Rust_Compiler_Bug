{"sha": "a717376e99fb33ba3b06bd8122e884f4b63a60c9", "node_id": "C_kwDOANBUbNoAKGE3MTczNzZlOTlmYjMzYmEzYjA2YmQ4MTIyZTg4NGY0YjYzYTYwYzk", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-10T23:49:15Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-10T23:49:15Z"}, "message": "PR c++/84964: Middle-end patch to expand_call for ICE after sorry.\n\nThis patch resolves PR c++/84969 which is an ICE in the middle-end after\nemitting a \"sorry, unimplemented\" message, and is a regression from\nearlier releases of GCC.  This issue is that after encountering a\nfunction call requiring an unreasonable amount of stack space, the\ncode continues and falls foul of an assert checking that stack pointer\nhas been correctly updated.  The fix is to (locally) consider aborted\nfunction calls as \"no return\", which skips this downstream sanity check.\n\n2022-03-10  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\tPR c++/84964\n\t* calls.cc (expand_call): Ignore stack adjustments after sorry.\n\ngcc/testsuite/ChangeLog\n\tPR c++/84964\n\t* g++.dg/other/pr84964.C: New test case.", "tree": {"sha": "95bbd10442a8c9cba05703eff2c8248714db7f4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95bbd10442a8c9cba05703eff2c8248714db7f4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a717376e99fb33ba3b06bd8122e884f4b63a60c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a717376e99fb33ba3b06bd8122e884f4b63a60c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a717376e99fb33ba3b06bd8122e884f4b63a60c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a717376e99fb33ba3b06bd8122e884f4b63a60c9/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8db9b90439f33af9ef602325df1f1e967fc549a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8db9b90439f33af9ef602325df1f1e967fc549a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8db9b90439f33af9ef602325df1f1e967fc549a"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "50fa7b8e35007ca6a27aad67ef391b9a894aefb6", "filename": "gcc/calls.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a717376e99fb33ba3b06bd8122e884f4b63a60c9/gcc%2Fcalls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a717376e99fb33ba3b06bd8122e884f4b63a60c9/gcc%2Fcalls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.cc?ref=a717376e99fb33ba3b06bd8122e884f4b63a60c9", "patch": "@@ -3447,6 +3447,8 @@ expand_call (tree exp, rtx target, int ignore)\n \t\t  >= (1 << (HOST_BITS_PER_INT - 2)))\n \t        {\n \t          sorry (\"passing too large argument on stack\");\n+\t\t  /* Don't worry about stack clean-up.  */\n+\t\t  flags |= ECF_NORETURN;\n \t\t  continue;\n \t\t}\n "}, {"sha": "0f2f6f3e62927251b1c13c71260e41c7159b077c", "filename": "gcc/testsuite/g++.dg/other/pr84964.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a717376e99fb33ba3b06bd8122e884f4b63a60c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr84964.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a717376e99fb33ba3b06bd8122e884f4b63a60c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr84964.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr84964.C?ref=a717376e99fb33ba3b06bd8122e884f4b63a60c9", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+\n+struct a {\n+  short b : -1ULL;  // { dg-warning \"exceeds its type\" }\n+};\n+void c(...) { c(a()); }  // { dg-message \"sorry, unimplemented\" }\n+"}]}