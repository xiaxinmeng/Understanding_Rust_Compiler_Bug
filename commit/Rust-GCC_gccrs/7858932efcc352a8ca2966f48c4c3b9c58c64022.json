{"sha": "7858932efcc352a8ca2966f48c4c3b9c58c64022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1ODkzMmVmY2MzNTJhOGNhMjk2NmY0OGM0YzNiOWM1OGM2NDAyMg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-06-04T23:29:31Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-06-04T23:29:31Z"}, "message": "rs6000: Simplify <VSa> for VSX_W\n\nWhen used in VSX_W, <VSa> is always just \"wa\".\n\n\n\t* config/rs6000/vsx.md: Replace all <VSa> that are used with VSX_W\n\twith just \"wa\".\n\nFrom-SVN: r271930", "tree": {"sha": "d67dddb4624b41f243b6ea1daa40360ed44e92fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d67dddb4624b41f243b6ea1daa40360ed44e92fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7858932efcc352a8ca2966f48c4c3b9c58c64022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7858932efcc352a8ca2966f48c4c3b9c58c64022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7858932efcc352a8ca2966f48c4c3b9c58c64022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7858932efcc352a8ca2966f48c4c3b9c58c64022/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "012f609e02aa915808883cda0159cb59751b37f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012f609e02aa915808883cda0159cb59751b37f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/012f609e02aa915808883cda0159cb59751b37f4"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "00ca70e8211054d419c0d6de00eac0791c822768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7858932efcc352a8ca2966f48c4c3b9c58c64022/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7858932efcc352a8ca2966f48c4c3b9c58c64022/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7858932efcc352a8ca2966f48c4c3b9c58c64022", "patch": "@@ -1,3 +1,8 @@\n+2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/vsx.md: Replace all <VSa> that are used with VSX_W\n+\twith just \"wa\".\n+\n 2019-06-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/vsx.md (define_mode_attr VSr2): Delete."}, {"sha": "d349091fb3a9fae7a70d560ecec9b0a8c53c3a49", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7858932efcc352a8ca2966f48c4c3b9c58c64022/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7858932efcc352a8ca2966f48c4c3b9c58c64022/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=7858932efcc352a8ca2966f48c4c3b9c58c64022", "patch": "@@ -468,7 +468,7 @@\n    (set_attr \"length\" \"8\")])\n \n (define_insn_and_split \"*vsx_le_perm_load_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n         (match_operand:VSX_W 1 \"indexed_or_indirect_operand\" \"Z\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX && !TARGET_P9_VECTOR\"\n   \"#\"\n@@ -705,7 +705,7 @@\n \n (define_insn \"*vsx_le_perm_store_<mode>\"\n   [(set (match_operand:VSX_W 0 \"indexed_or_indirect_operand\" \"=Z\")\n-        (match_operand:VSX_W 1 \"vsx_register_operand\" \"+<VSa>\"))]\n+        (match_operand:VSX_W 1 \"vsx_register_operand\" \"+wa\"))]\n   \"!BYTES_BIG_ENDIAN && TARGET_VSX && !TARGET_P9_VECTOR\"\n   \"#\"\n   [(set_attr \"type\" \"vecstore\")\n@@ -2983,9 +2983,9 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"*vsx_xxpermdi4_le_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n         (vec_select:VSX_W\n-          (match_operand:VSX_W 1 \"vsx_register_operand\" \"<VSa>\")\n+          (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")\n           (parallel [(const_int 2) (const_int 3)\n                      (const_int 0) (const_int 1)])))]\n   \"!BYTES_BIG_ENDIAN && VECTOR_MEM_VSX_P (<MODE>mode)\"\n@@ -3032,7 +3032,7 @@\n   [(set_attr \"type\" \"vecload\")])\n \n (define_insn \"*vsx_lxvd2x4_le_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n         (vec_select:VSX_W\n           (match_operand:VSX_W 1 \"memory_operand\" \"Z\")\n           (parallel [(const_int 2) (const_int 3)\n@@ -3083,7 +3083,7 @@\n (define_insn \"*vsx_stxvd2x4_le_<mode>\"\n   [(set (match_operand:VSX_W 0 \"memory_operand\" \"=Z\")\n         (vec_select:VSX_W\n-          (match_operand:VSX_W 1 \"vsx_register_operand\" \"<VSa>\")\n+          (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")\n           (parallel [(const_int 2) (const_int 3)\n                      (const_int 0) (const_int 1)])))]\n   \"!BYTES_BIG_ENDIAN && VECTOR_MEM_VSX_P (<MODE>mode) && !TARGET_P9_VECTOR\"\n@@ -4156,10 +4156,10 @@\n \n ;; V4SF/V4SI splat from a vector element\n (define_insn \"vsx_xxspltw_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n \t(vec_duplicate:VSX_W\n \t (vec_select:<VS_scalar>\n-\t  (match_operand:VSX_W 1 \"vsx_register_operand\" \"<VSa>\")\n+\t  (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")\n \t  (parallel\n \t   [(match_operand:QI 2 \"u5bit_cint_operand\" \"n\")]))))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n@@ -4172,8 +4172,8 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"vsx_xxspltw_<mode>_direct\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=<VSa>\")\n-        (unspec:VSX_W [(match_operand:VSX_W 1 \"vsx_register_operand\" \"<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n+        (unspec:VSX_W [(match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")\n                        (match_operand:QI 2 \"u5bit_cint_operand\" \"i\")]\n                       UNSPEC_VSX_XXSPLTW))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n@@ -4208,11 +4208,11 @@\n \n ;; V4SF/V4SI interleave\n (define_insn \"vsx_xxmrghw_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa,?<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n         (vec_select:VSX_W\n \t  (vec_concat:<VS_double>\n-\t    (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa,<VSa>\")\n-\t    (match_operand:VSX_W 2 \"vsx_register_operand\" \"wa,<VSa>\"))\n+\t    (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")\n+\t    (match_operand:VSX_W 2 \"vsx_register_operand\" \"wa\"))\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 1) (const_int 5)])))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n@@ -4225,11 +4225,11 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"vsx_xxmrglw_<mode>\"\n-  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa,?<VSa>\")\n+  [(set (match_operand:VSX_W 0 \"vsx_register_operand\" \"=wa\")\n \t(vec_select:VSX_W\n \t  (vec_concat:<VS_double>\n-\t    (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa,<VSa>\")\n-\t    (match_operand:VSX_W 2 \"vsx_register_operand\" \"wa,?<VSa>\"))\n+\t    (match_operand:VSX_W 1 \"vsx_register_operand\" \"wa\")\n+\t    (match_operand:VSX_W 2 \"vsx_register_operand\" \"wa\"))\n \t  (parallel [(const_int 2) (const_int 6)\n \t\t     (const_int 3) (const_int 7)])))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\""}]}