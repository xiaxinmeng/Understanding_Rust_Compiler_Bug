{"sha": "2db15b1d05e7c42b11a0a7cdff27266189187ea3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiMTViMWQwNWU3YzQyYjExYTBhN2NkZmYyNzI2NjE4OTE4N2VhMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-08T13:59:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-08T13:59:47Z"}, "message": "[multiple changes]\n\n2009-04-08  Robert Dewar  <dewar@adacore.com>\n\n\t* ug_words: Add /ASSUME_VALID for -gnatB\n\n\t* vms_data.ads: Add /ASSUME_VALID for -gnatB\n\n\t* sem_cat.adb: Add clarifying commment\n\n\t* a-direio.ads (Bytes): Make sure value is non-zero\n\n2009-04-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Is_Variable): If the prefix is an explicit dereference\n\tthat does not come from source, check for a rewritten function call in\n\tprefixed notation before other forms of rewriting.\n\n2009-04-08  Robert Dewar  <dewar@adacore.com>\n\n\t* Makefile.rtl: Remove s-strops and s-sopco? from the run time, since\n\tthese are now obsolescent units used only for bootrapping with an\n\tolder compiler.\n\nFrom-SVN: r145733", "tree": {"sha": "23093a5608fbec55e93dfbc2c683d545379350b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23093a5608fbec55e93dfbc2c683d545379350b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2db15b1d05e7c42b11a0a7cdff27266189187ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db15b1d05e7c42b11a0a7cdff27266189187ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db15b1d05e7c42b11a0a7cdff27266189187ea3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db15b1d05e7c42b11a0a7cdff27266189187ea3/comments", "author": null, "committer": null, "parents": [{"sha": "94fd3dc67710fa4d44903375d6257101b1d9fa95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fd3dc67710fa4d44903375d6257101b1d9fa95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94fd3dc67710fa4d44903375d6257101b1d9fa95"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "d844d08cedb671804ac324d21ab934e3e057f57a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -1,3 +1,25 @@\n+2009-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* ug_words: Add /ASSUME_VALID for -gnatB\n+\n+\t* vms_data.ads: Add /ASSUME_VALID for -gnatB\n+\n+\t* sem_cat.adb: Add clarifying commment\n+\n+\t* a-direio.ads (Bytes): Make sure value is non-zero\n+\n+2009-04-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Is_Variable): If the prefix is an explicit dereference\n+\tthat does not come from source, check for a rewritten function call in\n+\tprefixed notation before other forms of rewriting.\n+\n+2009-04-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* Makefile.rtl: Remove s-strops and s-sopco? from the run time, since\n+\tthese are now obsolescent units used only for bootrapping with an\n+\tolder compiler.\n+\n 2009-04-08  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Add documentation for pragma Thread_Local_Storage"}, {"sha": "1a85461669cc2547c2f8c2fbed9e3d6b9b18ac10", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -545,17 +545,13 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-secsta$(objext) \\\n   s-sequio$(objext) \\\n   s-shasto$(objext) \\\n-  s-sopco3$(objext) \\\n-  s-sopco4$(objext) \\\n-  s-sopco5$(objext) \\\n   s-stache$(objext) \\\n   s-stausa$(objext) \\\n   s-stchop$(objext) \\\n   s-stalib$(objext) \\\n   s-stoele$(objext) \\\n   s-stopoo$(objext) \\\n   s-stratt$(objext) \\\n-  s-strops$(objext) \\\n   s-ststop$(objext) \\\n   s-soflin$(objext) \\\n   s-memory$(objext) \\"}, {"sha": "544a31a98e5d44f8acf6e8973db227a443d7ac6b", "filename": "gcc/ada/a-direio.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fa-direio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fa-direio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.ads?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -167,8 +167,12 @@ private\n    type File_Type is new System.Direct_IO.File_Type;\n \n    Bytes : constant Interfaces.C_Streams.size_t :=\n-             Element_Type'Max_Size_In_Storage_Elements;\n-   --  Size of an element in storage units\n+             Interfaces.C_Streams.size_t'Max\n+               (1, Element_Type'Max_Size_In_Storage_Elements);\n+   --  Size of an element in storage units. The Max operation here is to ensure\n+   --  that we allocate a single byte for zero-sized elements. It's a bit weird\n+   --  to instantiate Direct_IO with zero sized elements, but it is legal and\n+   --  this adjustment ensures that we don't get anomolous behavior.\n \n    pragma Inline (Close);\n    pragma Inline (Create);"}, {"sha": "03461d169cd7970a5cb2a4cbdd822fcbfef4653d", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -199,7 +199,7 @@ package body Sem_Cat is\n       if With_Category > Unit_Category then\n \n          --  Special case: Remote_Types and Remote_Call_Interface are allowed\n-         --  to be with'ed in package body.\n+         --  with anything in the package body, per (RM E.2(5)).\n \n          if (Unit_Category = Remote_Types\n                or else Unit_Category = Remote_Call_Interface)"}, {"sha": "9f43f2f731538227d3025a7208f3cf55811bb690", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -6802,10 +6802,11 @@ package body Sem_Util is\n         and then Present (Etype (Orig_Node))\n         and then Is_Access_Type (Etype (Orig_Node))\n       then\n-         return Is_Variable_Prefix (Original_Node (Prefix (N)))\n+         return\n+           (Nkind (Orig_Node) = N_Function_Call\n+             and then not Is_Access_Constant (Etype (Prefix (N))))\n            or else\n-             (Nkind (Orig_Node) = N_Function_Call\n-               and then not Is_Access_Constant (Etype (Prefix (N))));\n+             Is_Variable_Prefix (Original_Node (Prefix (N)));\n \n       --  A function call is never a variable\n "}, {"sha": "eb490b203becccd857473391ecdae5501a5d9736", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -52,6 +52,7 @@ gcc -c          ^ GNAT COMPILE\n -gnata          ^ /CHECKS=ASSERTIONS\n -gnatA          ^ /NO_GNAT_ADC\n -gnatb          ^ /REPORT_ERRORS=BRIEF\n+-gnatB          ^ /ASSUME_VALID\n -gnatc          ^ /NOLOAD\n -gnatdc         ^ /TRACE_UNITS\n -gnatdO         ^ /REPORT_ERRORS=IMMEDIATE"}, {"sha": "6af3479b191be2c50338aea8126ae6315a99d643", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db15b1d05e7c42b11a0a7cdff27266189187ea3/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=2db15b1d05e7c42b11a0a7cdff27266189187ea3", "patch": "@@ -1228,6 +1228,17 @@ package VMS_Data is\n    --   filetype, instead of the object file. This may be useful if you need\n    --   to examine the generated assembly code.\n \n+   S_GCC_AValid  : aliased constant S := \"/ASSUME_VALID \"                  &\n+                                             \"-gnatB\";\n+   --        /NO_ASSUME_VALID (D)\n+   --        /ASSUME_VALID\n+   --\n+   --   Use to tell the compiler to assume that all objects have valid values\n+   --   except those occurring as prefixes to 'Valid attributes. In the default\n+   --   mode, the compiler assumes that values may be invalid unless it can\n+   --   be sure that they are valid, and code is generated to allow for this\n+   --   possibility. The use of /ASSUME_VALID will improve the code.\n+\n    S_GCC_Checks  : aliased constant S := \"/CHECKS=\"                        &\n                                              \"FULL \"                       &\n                                                 \"-gnato,!-gnatE,!-gnatp \"  &\n@@ -3346,6 +3357,7 @@ package VMS_Data is\n                      S_GCC_Ada_05  'Access,\n                      S_GCC_Add     'Access,\n                      S_GCC_Asm     'Access,\n+                     S_GCC_AValid  'Access,\n                      S_GCC_Checks  'Access,\n                      S_GCC_ChecksX 'Access,\n                      S_GCC_Compres 'Access,"}]}