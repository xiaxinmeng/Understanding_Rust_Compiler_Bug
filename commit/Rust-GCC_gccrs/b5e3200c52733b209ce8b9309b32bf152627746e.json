{"sha": "b5e3200c52733b209ce8b9309b32bf152627746e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVlMzIwMGM1MjczM2IyMDljZThiOTMwOWIzMmJmMTUyNjI3NzQ2ZQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-11-01T08:38:36Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-11-01T08:38:36Z"}, "message": "[Patch 2/7 s390] Deprecate *_BY_PIECES_P, move to hookized version\n\ngcc/\n\n\t* config/s390/s390.c (s390_use_by_pieces_infrastructure_p): New.\n\t(TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): Likewise.\n\t* config/s390/s390.h (MOVE_BY_PIECES_P): Remove.\n\t(CLEAR_BY_PIECES): Likewise.\n\t(SET_BY_PIECES): Likewise.\n\t(STORE_BY_PIECES): Likewise.\n\nFrom-SVN: r216998", "tree": {"sha": "12b71b230d42270a7f4266a9df476c391d72380d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b71b230d42270a7f4266a9df476c391d72380d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5e3200c52733b209ce8b9309b32bf152627746e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e3200c52733b209ce8b9309b32bf152627746e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e3200c52733b209ce8b9309b32bf152627746e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e3200c52733b209ce8b9309b32bf152627746e/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cbed00872ff3e20e5183f0cb788cd0c86bdf168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cbed00872ff3e20e5183f0cb788cd0c86bdf168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cbed00872ff3e20e5183f0cb788cd0c86bdf168"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "2412bab9c5edecc6a9cd8be31d79100f2c969cb2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5e3200c52733b209ce8b9309b32bf152627746e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5e3200c52733b209ce8b9309b32bf152627746e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5e3200c52733b209ce8b9309b32bf152627746e", "patch": "@@ -1,3 +1,12 @@\n+2014-11-01  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/s390/s390.c (s390_use_by_pieces_infrastructure_p): New.\n+\t(TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): Likewise.\n+\t* config/s390/s390.h (MOVE_BY_PIECES_P): Remove.\n+\t(CLEAR_BY_PIECES): Likewise.\n+\t(SET_BY_PIECES): Likewise.\n+\t(STORE_BY_PIECES): Likewise.\n+\n 2014-11-01  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* target.def (use_by_pieces_infrastructure_p): New."}, {"sha": "51ae90c97cc1365dc6b46674c2bb34221ecaf08b", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5e3200c52733b209ce8b9309b32bf152627746e/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5e3200c52733b209ce8b9309b32bf152627746e/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=b5e3200c52733b209ce8b9309b32bf152627746e", "patch": "@@ -12032,6 +12032,18 @@ s390_option_override (void)\n   register_pass (&insert_pass_s390_early_mach);\n }\n \n+/* Implement TARGET_USE_BY_PIECES_INFRASTRUCTURE_P.  */\n+\n+static bool\n+s390_use_by_pieces_infrastructure_p (unsigned int size,\n+\t\t\t\t     unsigned int align ATTRIBUTE_UNUSED,\n+\t\t\t\t     enum by_pieces_operation op ATTRIBUTE_UNUSED,\n+\t\t\t\t     bool speed_p ATTRIBUTE_UNUSED)\n+{\n+  return (size == 1 || size == 2\n+\t  || size == 4 || (TARGET_ZARCH && size == 8));\n+}\n+\n /* Initialize GCC target structure.  */\n \n #undef  TARGET_ASM_ALIGNED_HI_OP\n@@ -12217,6 +12229,10 @@ s390_option_override (void)\n #undef TARGET_SET_UP_BY_PROLOGUE\n #define TARGET_SET_UP_BY_PROLOGUE s300_set_up_by_prologue\n \n+#undef TARGET_USE_BY_PIECES_INFRASTRUCTURE_P\n+#define TARGET_USE_BY_PIECES_INFRASTRUCTURE_P \\\n+  s390_use_by_pieces_infrastructure_p\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-s390.h\""}, {"sha": "d933b8d9126df26311c754e8c5851a3a2bd5c740", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5e3200c52733b209ce8b9309b32bf152627746e/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5e3200c52733b209ce8b9309b32bf152627746e/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=b5e3200c52733b209ce8b9309b32bf152627746e", "patch": "@@ -744,24 +744,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define MOVE_MAX_PIECES (TARGET_ZARCH ? 8 : 4)\n #define MAX_MOVE_MAX 16\n \n-/* Determine whether to use move_by_pieces or block move insn.  */\n-#define MOVE_BY_PIECES_P(SIZE, ALIGN)\t\t\\\n-  ( (SIZE) == 1 || (SIZE) == 2 || (SIZE) == 4\t\\\n-    || (TARGET_ZARCH && (SIZE) == 8) )\n-\n-/* Determine whether to use clear_by_pieces or block clear insn.  */\n-#define CLEAR_BY_PIECES_P(SIZE, ALIGN)\t\t\\\n-  ( (SIZE) == 1 || (SIZE) == 2 || (SIZE) == 4\t\\\n-    || (TARGET_ZARCH && (SIZE) == 8) )\n-\n-/* This macro is used to determine whether store_by_pieces should be\n-   called to \"memcpy\" storage when the source is a constant string.  */\n-#define STORE_BY_PIECES_P(SIZE, ALIGN) MOVE_BY_PIECES_P (SIZE, ALIGN)\n-\n-/* Likewise to decide whether to \"memset\" storage with byte values\n-   other than zero.  */\n-#define SET_BY_PIECES_P(SIZE, ALIGN) STORE_BY_PIECES_P (SIZE, ALIGN)\n-\n /* Don't perform CSE on function addresses.  */\n #define NO_FUNCTION_CSE\n "}]}