{"sha": "ca557f533aa5e941d765c4c78b10b095537f0bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1NTdmNTMzYWE1ZTk0MWQ3NjVjNGM3OGIxMGIwOTU1MzdmMGJkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-10-29T11:38:00Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-10-29T11:38:00Z"}, "message": "configure.ac: Remove -Werror addition to WARN_FLAGS.\n\n\t* configure.ac: Remove -Werror addition to WARN_FLAGS.  Add\n\tACX_PROG_CC_WARNINGS_ARE_ERRORS and AC_ARG_VAR for GMPINC.\n\t* Makefile.am (AM_CPPFLAGS): Add $(GMPINC).\n\t(WERROR_FLAG): Remove.\n\t(AM_CXXFLAGS): Use $(WERROR) instead of $(WERROR_FLAG).\n\t* configure: Regenerated.\n\t* Makefile.in: Regenerated.\n\nCo-Authored-By: Phil Muldoon <pmuldoon@redhat.com>\n\nFrom-SVN: r216833", "tree": {"sha": "9b789a01b421e326cec767ebca5619f7a6715932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b789a01b421e326cec767ebca5619f7a6715932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca557f533aa5e941d765c4c78b10b095537f0bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca557f533aa5e941d765c4c78b10b095537f0bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca557f533aa5e941d765c4c78b10b095537f0bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca557f533aa5e941d765c4c78b10b095537f0bdf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56f274b2d9cc87e63974a26f5c0685f506ad93d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f274b2d9cc87e63974a26f5c0685f506ad93d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f274b2d9cc87e63974a26f5c0685f506ad93d4"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "431b28859d58370da218a9fba1e5d55dd836081f", "filename": "libcc1/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FChangeLog?ref=ca557f533aa5e941d765c4c78b10b095537f0bdf", "patch": "@@ -1,3 +1,14 @@\n+2014-10-29  Jakub Jelinek  <jakub@redhat.com>\n+\t    Phil Muldoon  <pmuldoon@redhat.com>\n+\n+\t* configure.ac: Remove -Werror addition to WARN_FLAGS.  Add\n+\tACX_PROG_CC_WARNINGS_ARE_ERRORS and AC_ARG_VAR for GMPINC.\n+\t* Makefile.am (AM_CPPFLAGS): Add $(GMPINC).\n+\t(WERROR_FLAG): Remove.\n+\t(AM_CXXFLAGS): Use $(WERROR) instead of $(WERROR_FLAG).\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n 2014-10-29  Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.am (CXXFLAGS, LDFLAGS): Filter out -fsanitize=address."}, {"sha": "ecab22ca30b72aa8579e549a7848fdef46f1d2d1", "filename": "libcc1/Makefile.am", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.am?ref=ca557f533aa5e941d765c4c78b10b095537f0bdf", "patch": "@@ -21,9 +21,8 @@ gcc_build_dir = ../$(host_subdir)/gcc\n AM_CPPFLAGS = -I $(srcdir)/../include -I $(srcdir)/../libgcc \\\n \t-I $(gcc_build_dir) -I$(srcdir)/../gcc \\\n \t-I $(srcdir)/../gcc/c -I $(srcdir)/../gcc/c-family \\\n-\t-I $(srcdir)/../libcpp/include\n-WERROR_FLAG = -Werror\n-AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR_FLAG) $(visibility)\n+\t-I $(srcdir)/../libcpp/include $(GMPINC)\n+AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR) $(visibility)\n override CXXFLAGS := $(filter-out -fsanitize=address,$(CXXFLAGS))\n override LDFLAGS := $(filter-out -fsanitize=address,$(LDFLAGS))\n # Can be simplified when libiberty becomes a normal convenience library."}, {"sha": "ce752c06065f702e59307d79ee63e07ef2800ea7", "filename": "libcc1/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2FMakefile.in?ref=ca557f533aa5e941d765c4c78b10b095537f0bdf", "patch": "@@ -140,6 +140,7 @@ ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n+GMPINC = @GMPINC@\n GREP = @GREP@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n@@ -178,6 +179,7 @@ SHELL = @SHELL@\n STRIP = @STRIP@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n+WERROR = @WERROR@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@\n@@ -247,10 +249,9 @@ gcc_build_dir = ../$(host_subdir)/gcc\n AM_CPPFLAGS = -I $(srcdir)/../include -I $(srcdir)/../libgcc \\\n \t-I $(gcc_build_dir) -I$(srcdir)/../gcc \\\n \t-I $(srcdir)/../gcc/c -I $(srcdir)/../gcc/c-family \\\n-\t-I $(srcdir)/../libcpp/include\n+\t-I $(srcdir)/../libcpp/include $(GMPINC)\n \n-WERROR_FLAG = -Werror\n-AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR_FLAG) $(visibility)\n+AM_CXXFLAGS = $(WARN_FLAGS) $(WERROR) $(visibility)\n # Can be simplified when libiberty becomes a normal convenience library.\n libiberty_normal = ../libiberty/libiberty.a\n libiberty_noasan = ../libiberty/noasan/libiberty.a"}, {"sha": "0c203a2a0f52919dc898c3cad46e20e9284417c0", "filename": "libcc1/configure", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure?ref=ca557f533aa5e941d765c4c78b10b095537f0bdf", "patch": "@@ -605,6 +605,8 @@ LIBOBJS\n ENABLE_PLUGIN_FALSE\n ENABLE_PLUGIN_TRUE\n libsuffix\n+GMPINC\n+WERROR\n WARN_FLAGS\n gcc_version\n visibility\n@@ -743,6 +745,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_werror_always\n enable_plugin\n '\n       ac_precious_vars='build_alias\n@@ -757,7 +760,8 @@ CPP\n CXX\n CXXFLAGS\n CCC\n-CXXCPP'\n+CXXCPP\n+GMPINC'\n \n \n # Initialize some variables set by options.\n@@ -1387,6 +1391,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-werror-always  enable -Werror despite compiler version\n   --enable-plugin         enable plugin support\n \n Optional Packages:\n@@ -1409,6 +1414,7 @@ Some influential environment variables:\n   CXX         C++ compiler command\n   CXXFLAGS    C++ compiler flags\n   CXXCPP      C++ preprocessor\n+  GMPINC      How to find GMP include files\n \n Use these variables to override the choices made by `configure' or to help\n it to find libraries and programs with nonstandard names/locations.\n@@ -10530,7 +10536,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10533 \"configure\"\n+#line 10539 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10636,7 +10642,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10639 \"configure\"\n+#line 10645 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14342,7 +14348,21 @@ fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n-WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n+\n+WERROR=\n+# Check whether --enable-werror-always was given.\n+if test \"${enable_werror_always+set}\" = set; then :\n+  enableval=$enable_werror_always;\n+else\n+  enable_werror_always=no\n+fi\n+\n+if test $enable_werror_always = yes; then :\n+  WERROR=\"$WERROR${WERROR:+ }-Werror\"\n+fi\n+\n+\n+\n \n \n libsuffix="}, {"sha": "1e0925ffcde4d3c0980c981beafaaa72c033a1cb", "filename": "libcc1/configure.ac", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca557f533aa5e941d765c4c78b10b095537f0bdf/libcc1%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcc1%2Fconfigure.ac?ref=ca557f533aa5e941d765c4c78b10b095537f0bdf", "patch": "@@ -52,8 +52,10 @@ gcc_version=`cat $srcdir/../gcc/BASE-VER`\n AC_SUBST(gcc_version)\n \n ACX_PROG_CC_WARNING_OPTS([-W -Wall], [WARN_FLAGS])\n-WARN_FLAGS=\"$WARN_FLAGS -Werror\"\n AC_SUBST(WARN_FLAGS)\n+ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual])\n+\n+AC_ARG_VAR(GMPINC,[How to find GMP include files])\n \n libsuffix=\n if test \"$GXX\" = yes; then"}]}