{"sha": "0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcwNWEyYTI2YThmNzYxYzBmYTMxOWFkZmFlNDZlM2NkMGFkZTdiZQ==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2003-04-04T21:46:49Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2003-04-04T21:46:49Z"}, "message": "inclhack.def (bsd_stdio_attrs_conflict): New.\n\n\t* fixinc/inclhack.def (bsd_stdio_attrs_conflict): New.\n\t* fixinc/fixincl.x: Rebuilt.\n\t* fixinc/tests/base/stdio.h: Regenerated.\n\nFrom-SVN: r65248", "tree": {"sha": "248bc4d65ab182cad68722348bd60ce97b9850ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/248bc4d65ab182cad68722348bd60ce97b9850ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/comments", "author": null, "committer": null, "parents": [{"sha": "1a4828810083a7e45cf8b53daa579052265e1e61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4828810083a7e45cf8b53daa579052265e1e61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4828810083a7e45cf8b53daa579052265e1e61"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "c15b2c255e9a94b3c1f4576489a899b838c869a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "patch": "@@ -1,3 +1,9 @@\n+2003-04-04  Loren James Rittle  <ljrittle@acm.org>\n+\n+\t* fixinc/inclhack.def (bsd_stdio_attrs_conflict): New.\n+\t* fixinc/fixincl.x: Rebuilt.\n+\t* fixinc/tests/base/stdio.h: Regenerated.\n+\n 2003-04-04  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gcov.c (accumulate_line_counts): Fix span tree merge bug."}, {"sha": "8391b416e9e899f5cafc7c7bfa71bfe347f4eec1", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "patch": "@@ -1115,6 +1115,46 @@ static const char* apzBadquotePatch[] = {\n     \"does not\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Bsd_Stdio_Attrs_Conflict fix\n+ */\n+tSCC zBsd_Stdio_Attrs_ConflictName[] =\n+     \"bsd_stdio_attrs_conflict\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zBsd_Stdio_Attrs_ConflictList[] =\n+  \"|stdio.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzBsd_Stdio_Attrs_ConflictMachs[] = {\n+        \"*-*-*bsd*\",\n+        \"*-*-*darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zBsd_Stdio_Attrs_ConflictSelect0[] =\n+       \"^#define[ \\t]*vfscanf[ \\t]*__svfscanf[ \\t]*$\";\n+\n+#define    BSD_STDIO_ATTRS_CONFLICT_TEST_CT  1\n+static tTestDesc aBsd_Stdio_Attrs_ConflictTests[] = {\n+  { TT_EGREP,    zBsd_Stdio_Attrs_ConflictSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Bsd_Stdio_Attrs_Conflict\n+ */\n+static const char* apzBsd_Stdio_Attrs_ConflictPatch[] = {\n+    \"format\",\n+    \"#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)\\n\\\n+#define _BSD_STRINGX(_BSD_X) #_BSD_X\\n\\\n+int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \\\"__svfscanf\\\");\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Broken_Assert_Stdio fix\n@@ -5871,6 +5911,7 @@ typedef enum {\n     BAD_LVAL_FIXIDX,\n     BAD_STRUCT_TERM_FIXIDX,\n     BADQUOTE_FIXIDX,\n+    BSD_STDIO_ATTRS_CONFLICT_FIXIDX,\n     BROKEN_ASSERT_STDIO_FIXIDX,\n     BROKEN_ASSERT_STDLIB_FIXIDX,\n     BROKEN_CABS_FIXIDX,\n@@ -6122,6 +6163,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      BADQUOTE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aBadquoteTests,   apzBadquotePatch, 0 },\n \n+  {  zBsd_Stdio_Attrs_ConflictName,    zBsd_Stdio_Attrs_ConflictList,\n+     apzBsd_Stdio_Attrs_ConflictMachs,\n+     BSD_STDIO_ATTRS_CONFLICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aBsd_Stdio_Attrs_ConflictTests,   apzBsd_Stdio_Attrs_ConflictPatch, 0 },\n+\n   {  zBroken_Assert_StdioName,    zBroken_Assert_StdioList,\n      apzBroken_Assert_StdioMachs,\n      BROKEN_ASSERT_STDIO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "525641231b53da9336eec3c69c89559a2ac6aec7", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "patch": "@@ -723,6 +723,26 @@ fix = {\n };\n \n \n+/*\n+ *  Various systems derived from BSD4.4 contain a macro definition\n+ *  for vfscanf that interacts badly with requirements of builtin-attrs.def.\n+ *  Known to be fixed in FreeBSD 5 system headers.\n+ */\n+fix = {\n+    hackname  = bsd_stdio_attrs_conflict;\n+    mach      = *-*-*bsd*;\n+    mach      = *-*-*darwin*;\n+    files     = stdio.h;\n+    select    = \"^#define[ \\t]*vfscanf[ \\t]*__svfscanf[ \\t]*$\";\n+    c_fix     = format;\n+    c_fix_arg = '#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)' \"\\n\"\n+\t\t'#define _BSD_STRINGX(_BSD_X) #_BSD_X' \"\\n\"\n+\t\t'int vfscanf(FILE *, const char *, __builtin_va_list) '\n+\t\t'__asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \"__svfscanf\");';\n+    test_text = '#define  vfscanf\t__svfscanf';\n+};\n+\n+\n /*\n  *  check for broken assert.h that needs stdio.h\n  */"}, {"sha": "d0eadbc5c63b8b600a1bc60346f5fad3b00fcef4", "filename": "gcc/fixinc/tests/base/stdio.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0705a2a26a8f761c0fa319adfae46e3cd0ade7be/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstdio.h?ref=0705a2a26a8f761c0fa319adfae46e3cd0ade7be", "patch": "@@ -19,6 +19,13 @@ extern int getopt(int, char *const[], const char *);\n #endif  /* ALPHA_GETOPT_CHECK */\n \n \n+#if defined( BSD_STDIO_ATTRS_CONFLICT_CHECK )\n+#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)\n+#define _BSD_STRINGX(_BSD_X) #_BSD_X\n+int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \"__svfscanf\");\n+#endif  /* BSD_STDIO_ATTRS_CONFLICT_CHECK */\n+\n+\n #if defined( HPUX11_VSNPRINTF_CHECK )\n extern int vsnprintf(char *, _hpux_size_t, const char *, __gnuc_va_list);\n #endif  /* HPUX11_VSNPRINTF_CHECK */"}]}