{"sha": "8d61eea7cc082271071d167541a106e17835c7d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ2MWVlYTdjYzA4MjI3MTA3MWQxNjc1NDFhMTA2ZTE3ODM1YzdkOA==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@vnet.ibm.com", "date": "2018-02-13T23:05:59Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-02-13T23:05:59Z"}, "message": "re PR target/84279 (powerpc64le ICE on cvc4)\n\ngcc/\n\tPR target/84279\n\t* config/rs6000/rs6000.c (mem_operand_gpr): Disallow altivec addresses.\n\ngcc/testsuite/\n\tPR target/84279\n\t* g++.dg/pr84279.C: New test.\n\nFrom-SVN: r257647", "tree": {"sha": "37b70e3f1c89e9bec114899d4b6531b0f22d6b8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37b70e3f1c89e9bec114899d4b6531b0f22d6b8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d61eea7cc082271071d167541a106e17835c7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d61eea7cc082271071d167541a106e17835c7d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d61eea7cc082271071d167541a106e17835c7d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d61eea7cc082271071d167541a106e17835c7d8/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d851ac1628f7e7587e100ea146094dd1519b071f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d851ac1628f7e7587e100ea146094dd1519b071f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d851ac1628f7e7587e100ea146094dd1519b071f"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "3ddfff6564b53d49789f346a425f92018b83bdc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d61eea7cc082271071d167541a106e17835c7d8", "patch": "@@ -1,3 +1,8 @@\n+2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/84279\n+\t* config/rs6000/rs6000.c (mem_operand_gpr): Disallow altivec addresses.\n+\n 2018-02-13  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/84169"}, {"sha": "ddfc10666a36c07baab7740b420f2f4c91b414b8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8d61eea7cc082271071d167541a106e17835c7d8", "patch": "@@ -8220,6 +8220,12 @@ mem_operand_gpr (rtx op, machine_mode mode)\n   int extra;\n   rtx addr = XEXP (op, 0);\n \n+  /* Don't allow altivec type addresses like (mem (and (plus ...))).\n+     See PR target/84279.  */\n+\n+  if (GET_CODE (addr) == AND)\n+    return false;\n+\n   op = address_offset (addr);\n   if (op == NULL_RTX)\n     return true;"}, {"sha": "eec738ef3fdb75da91b209ceef540111c27b582b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d61eea7cc082271071d167541a106e17835c7d8", "patch": "@@ -1,3 +1,8 @@\n+2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>\n+\n+\tPR target/84279\n+\t* g++.dg/pr84279.C: New test.\n+\n 2018-02-13  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/84169"}, {"sha": "a88d3fb847038dc8b156a95f4a9c9241af52350f", "filename": "gcc/testsuite/g++.dg/pr84279.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr84279.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d61eea7cc082271071d167541a106e17835c7d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr84279.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr84279.C?ref=8d61eea7cc082271071d167541a106e17835c7d8", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-O3 -mcpu=power8 -g -fPIC -fvisibility=hidden -fstack-protector-strong\" } */\n+\n+template <typename, typename T> struct E { T e; };\n+struct J {\n+  unsigned k, l;\n+  J (unsigned x, unsigned y) : k(x), l(y) {}\n+};\n+typedef struct A {\n+  J n, p;\n+  A ();\n+  A (J x, J y) : n(x), p(y) {}\n+} *S;\n+S t;\n+struct B {\n+  struct C {\n+    S q, r;\n+    int u, v;\n+    bool m1 (S, A &);\n+    J m2 () const;\n+    J m3 () const;\n+    A m4 () const;\n+  };\n+  typedef E<unsigned, S> D;\n+  void m5 (D *);\n+  void m6 (unsigned, A);\n+};\n+bool B::C::m1 (S, A &x) { bool o; x = m4 (); return o; }\n+J B::C::m2 () const { unsigned g (u == 0); unsigned h (v); return J (g, h); }\n+J B::C::m3 () const { unsigned g (q != t); unsigned h (r != t); return J (g, h); }\n+A B::C::m4 () const { return A (m2 (), m3 ()); }\n+void B::m5 (D *c) { unsigned x; C ar; A am; if (ar.m1 (c->e, am)) m6 (x, am); }"}]}