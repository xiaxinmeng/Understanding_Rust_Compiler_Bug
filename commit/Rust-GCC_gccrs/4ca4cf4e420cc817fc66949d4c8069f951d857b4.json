{"sha": "4ca4cf4e420cc817fc66949d4c8069f951d857b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNhNGNmNGU0MjBjYzgxN2ZjNjY5NDlkNGM4MDY5Zjk1MWQ4NTdiNA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-09-27T22:45:49Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-09-27T22:45:49Z"}, "message": "rs6000-builtin.def (BU_FP_1MISC_1): Add define macro.\n\n\ngcc/ChangeLog:\n\n2017-09-27  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-builtin.def (BU_FP_1MISC_1): Add define macro.\n\t(FCTID, FCTIW): Add BU_FP_MISC_1 macro expansion for builtins.\n\t* config/rs6000/rs6000.md (lrintsfsi2): Add define_insn for the\n\tfctiw instruction.\n\ngcc/testsuite/ChangeLog:\n\n2017-09-27 Carl Love  <cel@us.ibm.com>\n\t* gcc.target/powerpc/builtin-fctid-fctiw-runnable.c: New test file\n\tfor the __builtin_fctid and __builtin_fctiw.\n\nFrom-SVN: r253238", "tree": {"sha": "d7de4843e9fcb20ffdf233368801957c8bc56a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7de4843e9fcb20ffdf233368801957c8bc56a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ca4cf4e420cc817fc66949d4c8069f951d857b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca4cf4e420cc817fc66949d4c8069f951d857b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ca4cf4e420cc817fc66949d4c8069f951d857b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ca4cf4e420cc817fc66949d4c8069f951d857b4/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c32026239618bac471c9c08a723b58885061ed62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32026239618bac471c9c08a723b58885061ed62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c32026239618bac471c9c08a723b58885061ed62"}], "stats": {"total": 170, "additions": 170, "deletions": 0}, "files": [{"sha": "737c4af15fcb61c69cd5bae4394457cd53a1944f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ca4cf4e420cc817fc66949d4c8069f951d857b4", "patch": "@@ -1,3 +1,10 @@\n+2017-09-27  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin.def (BU_FP_1MISC_1): Add define macro.\n+\t(FCTID, FCTIW): Add BU_FP_MISC_1 macro expansion for builtins.\n+\t* config/rs6000/rs6000.md (lrintsfsi2): Add define_insn for the\n+\tfctiw instruction.\n+\n 2017-09-27  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* haifa-sched.c (autopref_rank_for_schedule): Order 'irrelevant' insns"}, {"sha": "868b0cd14f6a19d43bbc284de645c6877ba81e31", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=4ca4cf4e420cc817fc66949d4c8069f951d857b4", "patch": "@@ -608,6 +608,16 @@\n \t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n \n \n+/* Miscellaneous builtins for instructions added prior to ISA 2.04.  These\n+   operate on floating point registers.  */\n+#define BU_FP_MISC_1(ENUM, NAME, ATTR, ICODE)\t\t\t\t\\\n+  RS6000_BUILTIN_1 (MISC_BUILTIN_ ## ENUM,\t\t/* ENUM */\t\\\n+\t\t    \"__builtin_\" NAME,\t\t\t/* NAME */\t\\\n+\t\t    RS6000_BTM_HARD_FLOAT,\t\t/* MASK */\t\\\n+\t\t    (RS6000_BTC_ ## ATTR\t\t/* ATTR */\t\\\n+\t\t     | RS6000_BTC_UNARY),\t\t\t\t\\\n+\t\t    CODE_FOR_ ## ICODE)\t\t\t/* ICODE */\n+\n /* Miscellaneous builtins for instructions added in ISA 2.06.  These\n    instructions don't require either the DFP or VSX options, just the basic ISA\n    2.06 (popcntd) enablement since they operate on general purpose\n@@ -1863,6 +1873,10 @@ BU_VSX_OVERLOAD_X (XL,\t     \"xl\")\n BU_VSX_OVERLOAD_X (XL_BE,    \"xl_be\")\n BU_VSX_OVERLOAD_X (XST,\t     \"xst\")\n \f\n+/* 1 argument builtins pre ISA 2.04.  */\n+BU_FP_MISC_1 (FCTID,\t\t\"fctid\",\tCONST,  lrintdfdi2)\n+BU_FP_MISC_1 (FCTIW,\t\t\"fctiw\",\tCONST,\tlrintsfsi2)\n+\n /* 2 argument CMPB instructions added in ISA 2.05. */\n BU_P6_2 (CMPB_32,        \"cmpb_32\",\tCONST,\tcmpbsi3)\n BU_P6_64BIT_2 (CMPB,     \"cmpb\",\tCONST,\tcmpbdi3)"}, {"sha": "3181291a5781379b1c6cb7d3612adf0dbcf9bee1", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4ca4cf4e420cc817fc66949d4c8069f951d857b4", "patch": "@@ -5915,6 +5915,14 @@\n   [(set_attr \"type\" \"fpload\")\n    (set_attr \"length\" \"16\")])\n \n+(define_insn \"lrintsfsi2\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=d\")\n+\t(unspec:SI [(match_operand:DF 1 \"gpc_reg_operand\" \"d\")]\n+\t\t   UNSPEC_FCTIW))]\n+  \"TARGET_SF_FPR && TARGET_FPRND\"\n+  \"fctiw %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n ;; No VSX equivalent to fctid\n (define_insn \"lrint<mode>di2\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=d\")"}, {"sha": "c1542b9a6043784bd8be338e17bd0ce52bec98db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ca4cf4e420cc817fc66949d4c8069f951d857b4", "patch": "@@ -1,3 +1,7 @@\n+2017-09-27 Carl Love  <cel@us.ibm.com>\n+\t* gcc.target/powerpc/builtin-fctid-fctiw-runnable.c: New test file\n+\tfor the __builtin_fctid and __builtin_fctiw.\n+\n 2017-09-27  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n \t* brig.dg/test/gimple/fbarrier.hsail: Fixed tests to match the new"}, {"sha": "b99fae3e1918c78dddbb365285e21f8db68c867f", "filename": "gcc/testsuite/gcc.target/powerpc/builtin-fctid-fctiw-runnable.c", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltin-fctid-fctiw-runnable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ca4cf4e420cc817fc66949d4c8069f951d857b4/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltin-fctid-fctiw-runnable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltin-fctid-fctiw-runnable.c?ref=4ca4cf4e420cc817fc66949d4c8069f951d857b4", "patch": "@@ -0,0 +1,137 @@\n+/* { dg-do run { target { powerpc*-*-* && { lp64 && p8vector_hw } } } } */\n+/* { dg-options \"-mcpu=power8\" } */\n+\n+#ifdef DEBUG\n+#include <stdio.h>\n+#endif\n+\n+void abort (void);\n+\n+long\n+test_bi_lrint_1 (float __A)\n+{\n+\treturn (__builtin_fctid (__A));\n+}\n+long\n+test_bi_lrint_2 (double __A)\n+{\n+\treturn (__builtin_fctid (__A));\n+}\n+\n+int\n+test_bi_rint_1 (float __A)\n+{\n+\treturn (__builtin_fctiw (__A));\n+}\n+\n+int\n+test_bi_rint_2 (double __A)\n+{\n+\treturn (__builtin_fctiw (__A));\n+}\n+\n+\n+int main( void)\n+{\n+  signed long lx, expected_l;\n+  double dy;\n+\n+  signed int x, expected_i;\n+  float y;\n+  \n+  dy = 1.45;\n+  expected_l = 1;\n+  lx = __builtin_fctid (dy);\n+\n+  if( lx != expected_l)\n+#ifdef DEBUG\n+    printf(\"ERROR: __builtin_fctid(dy= %f) = %ld, expected %ld\\n\",\n+\t   dy, lx, expected_l);\n+#else\n+    abort();\n+#endif\n+\n+  dy = 3.51;\n+  expected_l = 4;\n+  lx = __builtin_fctid (dy);\n+  \n+  if( lx != expected_l)\n+#ifdef DEBUG\n+    printf(\"ERROR: __builtin_fctid(dy= %f) = %ld, expected %ld\\n\",\n+\t   dy, lx, expected_l);\n+#else\n+    abort();\n+#endif\n+\n+  dy = 5.57;\n+  expected_i = 6;\n+  x = __builtin_fctiw (dy);\n+\n+  if( x != expected_i)\n+#ifdef DEBUG\n+    printf(\"ERROR: __builtin_fctiw(dy= %f) = %d, expected %d\\n\",\n+\t   dy, x, expected_i);\n+#else\n+    abort();\n+#endif\n+\n+  y = 11.47;\n+  expected_i = 11;\n+  x = __builtin_fctiw (y);\n+\n+  if( x != expected_i)\n+#ifdef DEBUG\n+    printf(\"ERROR: __builtin_fctiw(y = %f) = %d, expected %d\\n\",\n+\t   y, x, expected_i);\n+#else\n+    abort();\n+#endif\n+\n+  y = 17.77;\n+  expected_l = 18;\n+  lx = test_bi_lrint_1 (y);\n+\n+  if( lx != expected_l)\n+#ifdef DEBUG\n+    printf(\"ERROR: function call test_bi_lrint_1 (y = %f) = %ld, expected %ld\\n\",\n+\t   y, lx, expected_l);\n+#else\n+    abort();\n+#endif\n+\n+  dy = 7.1;\n+  expected_l = 7;\n+  lx = test_bi_lrint_2 (dy);\n+\n+  if( lx != expected_l)\n+#ifdef DEBUG\n+    printf(\"ERROR: function call test_bi_lrint_2 (dy = %f) = %ld, expected %ld\\n\",\n+\t   dy, lx, expected_l);\n+#else\n+    abort();\n+#endif\n+\n+  y = 0.001;\n+  expected_i = 0;\n+  x = test_bi_rint_1 (y);\n+\n+  if( x != expected_i)\n+#ifdef DEBUG\n+    printf(\"ERROR: function call test_bi_rint_1 (y = %f) = %d, expected %d\\n\",\n+\t   y, x, expected_i);\n+#else\n+    abort();\n+#endif\n+  \n+  dy = 0.9999;\n+  expected_i = 1;\n+  x = test_bi_rint_2 (dy);\n+\n+  if( x != expected_i)\n+#ifdef DEBUG\n+    printf(\"ERROR: function call test_bi_rint_2 (dy = %f) = %d, expected %d\\n\",\n+\t   dy, x, expected_i);\n+#else\n+    abort();\n+#endif\n+}"}]}