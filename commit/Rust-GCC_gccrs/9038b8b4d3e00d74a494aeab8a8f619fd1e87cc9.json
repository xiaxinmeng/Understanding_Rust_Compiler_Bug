{"sha": "9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAzOGI4YjRkM2UwMGQ3NGE0OTRhZWFiOGE4ZjYxOWZkMWU4N2NjOQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-02-13T08:40:35Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-02-13T08:40:35Z"}, "message": "natByteBufferImpl.cc, [...]: Added copyright and license.\n\n2003-02-13  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/natByteBufferImpl.cc,\n\tgnu/java/nio/natCharBufferImpl.cc,\n\tgnu/java/nio/natDoubleBufferImpl.cc,\n\tgnu/java/nio/natFloatBufferImpl.cc,\n\tgnu/java/nio/natIntBufferImpl.cc,\n\tgnu/java/nio/natLongBufferImpl.cc,\n\tgnu/java/nio/natShortBufferImpl.cc:\n\tAdded copyright and license.\n\t* java/nio/DoubleBuffer.java,\n\tjava/nio/FloatBuffer.java,\n\tjava/nio/IntBuffer.java,\n\tjava/nio/LongBuffer.java,\n\tjava/nio/ShortBuffer.java\n\t(array): Throw exceptions.\n\t(arrayOffset): Throw exceptions.\n\nFrom-SVN: r62832", "tree": {"sha": "9580529cf19ede4492e97df37b36628c93e3aef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9580529cf19ede4492e97df37b36628c93e3aef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/comments", "author": null, "committer": null, "parents": [{"sha": "e8298892fa9d9fbea13e35fd3542a63d3bc8aa80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8298892fa9d9fbea13e35fd3542a63d3bc8aa80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8298892fa9d9fbea13e35fd3542a63d3bc8aa80"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "cc4e671e120468646429d8641a3f944b2c2646af", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,21 @@\n+2003-02-13  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/natByteBufferImpl.cc,\n+\tgnu/java/nio/natCharBufferImpl.cc,\n+\tgnu/java/nio/natDoubleBufferImpl.cc,\n+\tgnu/java/nio/natFloatBufferImpl.cc,\n+\tgnu/java/nio/natIntBufferImpl.cc,\n+\tgnu/java/nio/natLongBufferImpl.cc,\n+\tgnu/java/nio/natShortBufferImpl.cc:\n+\tAdded copyright and license.\n+\t* java/nio/DoubleBuffer.java,\n+\tjava/nio/FloatBuffer.java,\n+\tjava/nio/IntBuffer.java,\n+\tjava/nio/LongBuffer.java,\n+\tjava/nio/ShortBuffer.java\n+\t(array): Throw exceptions.\n+\t(arrayOffset): Throw exceptions.\n+\n 2003-02-13  Michael Koch  <konqueror@gmx.de>\n  \n \t* gnu/java/util/prefs/FileBasedFactory.java,"}, {"sha": "2bb1e41a622d4907dfd3392b43b337785e79bf6b", "filename": "libjava/gnu/java/nio/natByteBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatByteBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatByteBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatByteBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natByteBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "9fb54e145612e3cffedc4a2ab6b8bfff8e1c640e", "filename": "libjava/gnu/java/nio/natCharBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatCharBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatCharBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatCharBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natCharBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "6c66a337417d10cc757e5b48589f5ab920e34886", "filename": "libjava/gnu/java/nio/natDoubleBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatDoubleBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatDoubleBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatDoubleBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natDoubleBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "9785454634cc954d9113ff783e678d7a58ace4fa", "filename": "libjava/gnu/java/nio/natFloatBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatFloatBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatFloatBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatFloatBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natFloatBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "eff70f838bb9711a956fd894f38869d98464b7df", "filename": "libjava/gnu/java/nio/natIntBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatIntBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatIntBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatIntBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natIntBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "a84248136e51493dbf812f45ce038042e318f671", "filename": "libjava/gnu/java/nio/natLongBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatLongBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatLongBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatLongBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natLongBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "188bff9575e6feeede9373f1ece489a8940de350", "filename": "libjava/gnu/java/nio/natShortBufferImpl.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatShortBufferImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fgnu%2Fjava%2Fnio%2FnatShortBufferImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatShortBufferImpl.cc?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -1,3 +1,13 @@\n+// natShortBufferImpl.cc\n+\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n #include <config.h>\n \n #include <gcj/cni.h>"}, {"sha": "036579a802b4c6c8584c1fa0f15a5abd3edaa172", "filename": "libjava/java/nio/DoubleBuffer.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FDoubleBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FDoubleBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleBuffer.java?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -125,11 +125,23 @@ public final boolean hasArray()\n \n   public final double[] array()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return backing_buffer;\n   }\n \n   public final int arrayOffset()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return array_offset;\n   }\n "}, {"sha": "8531cb99f9d1d1b978675db5e8795024333242b5", "filename": "libjava/java/nio/FloatBuffer.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FFloatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FFloatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatBuffer.java?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -126,11 +126,23 @@ public final boolean hasArray()\n \n   public final float[] array()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return backing_buffer;\n   }\n \n   public final int arrayOffset()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return array_offset;\n   }\n "}, {"sha": "ddf03d8364dd8879c7b1b739192502b880b9a646", "filename": "libjava/java/nio/IntBuffer.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FIntBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FIntBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntBuffer.java?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -126,11 +126,23 @@ public final boolean hasArray()\n \n   public final int[] array()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return backing_buffer;\n   }\n \n   public final int arrayOffset()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return array_offset;\n   }\n "}, {"sha": "63eb5af1a1158f5952dba7f6d572bf0d66c19c6f", "filename": "libjava/java/nio/LongBuffer.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FLongBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FLongBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongBuffer.java?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -126,11 +126,23 @@ public final boolean hasArray()\n \n   public final long[] array()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return backing_buffer;\n   }\n \n   public final int arrayOffset()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return array_offset;\n   }\n "}, {"sha": "7a71cad6d85659b833777b8f28c7e9cab9cf42cc", "filename": "libjava/java/nio/ShortBuffer.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FShortBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9/libjava%2Fjava%2Fnio%2FShortBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortBuffer.java?ref=9038b8b4d3e00d74a494aeab8a8f619fd1e87cc9", "patch": "@@ -126,11 +126,23 @@ public final boolean hasArray()\n \n   public final short[] array()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return backing_buffer;\n   }\n \n   public final int arrayOffset()\n   {\n+    if (backing_buffer == null)\n+      throw new UnsupportedOperationException ();\n+\n+    if (isReadOnly ())\n+      throw new ReadOnlyBufferException ();\n+    \n     return array_offset;\n   }\n "}]}