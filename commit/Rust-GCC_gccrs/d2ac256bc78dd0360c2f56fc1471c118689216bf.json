{"sha": "d2ac256bc78dd0360c2f56fc1471c118689216bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJhYzI1NmJjNzhkZDAzNjBjMmY1NmZjMTQ3MWMxMTg2ODkyMTZiZg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-04-30T13:36:22Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-04-30T13:36:22Z"}, "message": "[AArch64] Properly cost MNEG/[SU]MNEGL patterns\n\n\t* config/aarch64/aarch64.c (aarch64_rtx_mult_cost): Handle MNEG\n\tand [SU]MNEGL patterns.\n\nFrom-SVN: r222627", "tree": {"sha": "ab33f1979b16158007618ce80acd46a1b3b634ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab33f1979b16158007618ce80acd46a1b3b634ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2ac256bc78dd0360c2f56fc1471c118689216bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ac256bc78dd0360c2f56fc1471c118689216bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ac256bc78dd0360c2f56fc1471c118689216bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ac256bc78dd0360c2f56fc1471c118689216bf/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec3fba517279402b4686129c23af1d34f23b5ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3fba517279402b4686129c23af1d34f23b5ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec3fba517279402b4686129c23af1d34f23b5ce0"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "8cf8854c09d6c405aabeaab4405df473a40ec374", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ac256bc78dd0360c2f56fc1471c118689216bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ac256bc78dd0360c2f56fc1471c118689216bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2ac256bc78dd0360c2f56fc1471c118689216bf", "patch": "@@ -1,3 +1,8 @@\n+2015-04-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_rtx_mult_cost): Handle MNEG\n+\tand [SU]MNEGL patterns.\n+\n 2015-04-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_shift_p): New function."}, {"sha": "7d7f8908a056b1a8f700fb12a03d53c5e0cfb652", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ac256bc78dd0360c2f56fc1471c118689216bf/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ac256bc78dd0360c2f56fc1471c118689216bf/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d2ac256bc78dd0360c2f56fc1471c118689216bf", "patch": "@@ -5229,6 +5229,15 @@ aarch64_rtx_mult_cost (rtx x, int code, int outer, bool speed)\n \t  return cost;\n \t}\n \n+      /* MNEG or [US]MNEGL.  Extract the NEG operand and indicate that it's a\n+\t compound and let the below cases handle it.  After all, MNEG is a\n+\t special-case alias of MSUB.  */\n+      if (GET_CODE (op0) == NEG)\n+\t{\n+\t  op0 = XEXP (op0, 0);\n+\t  compound_p = true;\n+\t}\n+\n       /* Integer multiplies or FMAs have zero/sign extending variants.  */\n       if ((GET_CODE (op0) == ZERO_EXTEND\n \t   && GET_CODE (op1) == ZERO_EXTEND)\n@@ -5241,7 +5250,7 @@ aarch64_rtx_mult_cost (rtx x, int code, int outer, bool speed)\n \t  if (speed)\n \t    {\n \t      if (compound_p)\n-\t\t/* MADD/SMADDL/UMADDL.  */\n+\t\t/* SMADDL/UMADDL/UMSUBL/SMSUBL.  */\n \t\tcost += extra_cost->mult[0].extend_add;\n \t      else\n \t\t/* MUL/SMULL/UMULL.  */\n@@ -5251,15 +5260,15 @@ aarch64_rtx_mult_cost (rtx x, int code, int outer, bool speed)\n \t  return cost;\n \t}\n \n-      /* This is either an integer multiply or an FMA.  In both cases\n+      /* This is either an integer multiply or a MADD.  In both cases\n \t we want to recurse and cost the operands.  */\n       cost += rtx_cost (op0, MULT, 0, speed)\n \t      + rtx_cost (op1, MULT, 1, speed);\n \n       if (speed)\n \t{\n \t  if (compound_p)\n-\t    /* MADD.  */\n+\t    /* MADD/MSUB.  */\n \t    cost += extra_cost->mult[mode == DImode].add;\n \t  else\n \t    /* MUL.  */"}]}