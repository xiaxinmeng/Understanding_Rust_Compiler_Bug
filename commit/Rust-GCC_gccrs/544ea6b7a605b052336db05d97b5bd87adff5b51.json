{"sha": "544ea6b7a605b052336db05d97b5bd87adff5b51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ0ZWE2YjdhNjA1YjA1MjMzNmRiMDVkOTdiNWJkODdhZGZmNWI1MQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2005-01-24T18:23:08Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-01-24T18:23:08Z"}, "message": "gcc-dg.exp (skip_test_and_clear_xfail): Remove.\n\n\t* lib/gcc-dg.exp (skip_test_and_clear_xfail): Remove.\n\t(dg-require-weak, dg-require-visibility, dg-require-alias,\n\tdg-require-dg-sections, dg-require-profiling, dg-require-iconv,\n\tdg-require-effective-target, dg-skip-if): Remove call to\n\tskip_test_and_clear_xfail.\n\t(dg-test): Clear xfail data.\n\nFrom-SVN: r94167", "tree": {"sha": "7a21539f4d754d7061a601ab17d751fc4c574935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a21539f4d754d7061a601ab17d751fc4c574935"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/544ea6b7a605b052336db05d97b5bd87adff5b51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544ea6b7a605b052336db05d97b5bd87adff5b51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/544ea6b7a605b052336db05d97b5bd87adff5b51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/544ea6b7a605b052336db05d97b5bd87adff5b51/comments", "author": null, "committer": null, "parents": [{"sha": "b723e82f033108c4f2f1d839eb6b7b16ceab9dd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b723e82f033108c4f2f1d839eb6b7b16ceab9dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b723e82f033108c4f2f1d839eb6b7b16ceab9dd6"}], "stats": {"total": 52, "additions": 27, "deletions": 25}, "files": [{"sha": "91c9cdb89981333b865dbcf539a137bf02d65544", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544ea6b7a605b052336db05d97b5bd87adff5b51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544ea6b7a605b052336db05d97b5bd87adff5b51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=544ea6b7a605b052336db05d97b5bd87adff5b51", "patch": "@@ -1,3 +1,12 @@\n+2005-01-24  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/gcc-dg.exp (skip_test_and_clear_xfail): Remove.\n+\t(dg-require-weak, dg-require-visibility, dg-require-alias,\n+\tdg-require-dg-sections, dg-require-profiling, dg-require-iconv,\n+\tdg-require-effective-target, dg-skip-if): Remove call to\n+\tskip_test_and_clear_xfail.\n+\t(dg-test): Clear xfail data.\n+\n 2005-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/17751"}, {"sha": "9e1ea04c88f47bcb161022fa724d651542635902", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 18, "deletions": 25, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/544ea6b7a605b052336db05d97b5bd87adff5b51/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/544ea6b7a605b052336db05d97b5bd87adff5b51/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=544ea6b7a605b052336db05d97b5bd87adff5b51", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 1997, 1999, 2000, 2003, 2004 Free Software Foundation, Inc.\n+#   Copyright (C) 1997, 1999, 2000, 2003, 2004, 2005 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -298,20 +298,6 @@ proc gcc-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n     }\n }\n \n-# Skip a test and clear all xfail flags that might have been set for it\n-# by dg-xfail-if or for the xfail list in dg-do.  A procedure that calls\n-# this must specify \"upvar dg-do-what dg-do-what\".\n-\n-proc skip_test_and_clear_xfail { } {\n-    global compiler_conditional_xfail_data\n-    upvar dg-do-what dg-do-what\n-\n-    set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n-    if [info exists compiler_conditional_xfail_data] {\n-\tunset compiler_conditional_xfail_data\n-    }\n-}\n-\n # If this target does not support weak symbols, skip this test.\n \n proc dg-require-weak { args } {\n@@ -322,7 +308,7 @@ proc dg-require-weak { args } {\n     }\n     if { $weak_available != 1 } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -337,7 +323,7 @@ proc dg-require-visibility { args } {\n     }\n     if { $visibility_available != 1 } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -352,7 +338,7 @@ proc dg-require-alias { args } {\n     }\n     if { $alias_available < 2 } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -362,7 +348,7 @@ proc dg-require-alias { args } {\n proc dg-require-gc-sections { args } {\n     if { ![ check_gc_sections_available ] } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -371,7 +357,7 @@ proc dg-require-gc-sections { args } {\n proc dg-require-profiling { args } {\n     if { ![ check_profiling_available ${args} ] } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -391,13 +377,13 @@ proc dg-require-dll { args } {\n     }\n \n     upvar dg-do-what dg-do-what\n-    skip_test_and_clear_xfail\n+    set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n }\n \n proc dg-require-iconv { args } {\n     if { ![ check_iconv_available ${args} ] } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+        set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -406,7 +392,7 @@ proc dg-require-iconv { args } {\n proc dg-require-named-sections { args } {\n     if { ![ check_named_sections_available ] } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+        set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -416,7 +402,7 @@ proc dg-require-effective-target { args } {\n     set args [lreplace $args 0 0]\n     if { ![is-effective-target [lindex $args 0]] } {\n \tupvar dg-do-what dg-do-what\n-\tskip_test_and_clear_xfail\n+        set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n     }\n }\n \n@@ -455,7 +441,7 @@ proc dg-skip-if { args } {\n \t# the original list with \"*-*-*\".\n \tif [check_conditional_xfail [lreplace $args 1 1 \"*-*-*\"]] {\n \t    upvar dg-do-what dg-do-what\n-\t    skip_test_and_clear_xfail\n+            set dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n \t}\n \n \t# Any value in this variable was left over from an earlier test.\n@@ -508,17 +494,24 @@ if { [info procs saved-dg-test] == [list] } {\n \tglobal additional_sources\n \tglobal additional_prunes\n \tglobal errorInfo\n+\tglobal compiler_conditional_xfail_data\n \n \tif { [ catch { eval saved-dg-test $args } errmsg ] } {\n \t    set saved_info $errorInfo\n \t    set additional_files \"\"\n \t    set additional_sources \"\"\n \t    set additional_prunes \"\"\n+\t    if [info exists compiler_conditional_xfail_data] {\n+\t\tunset compiler_conditional_xfail_data\n+\t    }\n \t    error $errmsg $saved_info\n \t}\n \tset additional_files \"\"\n \tset additional_sources \"\"\n \tset additional_prunes \"\"\n+\tif [info exists compiler_conditional_xfail_data] {\n+\t    unset compiler_conditional_xfail_data\n+\t}\n     }\n }\n "}]}