{"sha": "b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkzYmUzNWJlMDJhOGQ5YWM0ZTZlN2YwYjc2OTVmNmI0ZWQ1MDA0NQ==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-23T14:37:15Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-23T14:37:15Z"}, "message": "backspace.c, [...]: Update to Netlib version of 1998-06-18.\n\n1998-06-23  Dave Love  <d.love@dl.ac.uk>\n* libI77/backspace.c, libI77/dfe.c, libI77/due.c, libI77/iio.c,\nlibI77/lread.c, libI77/ sfe.c, libI77/sue.c, libI77/wsfe.c: Update\nto Netlib version of 1998-06-18.\n\nFrom-SVN: r20678", "tree": {"sha": "2e4adca262ff4a1b9e43c7c416227974de44e228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e4adca262ff4a1b9e43c7c416227974de44e228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/comments", "author": null, "committer": null, "parents": [{"sha": "d2f8cffa1d0ce734ce4a465bcef76f9c41748045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f8cffa1d0ce734ce4a465bcef76f9c41748045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f8cffa1d0ce734ce4a465bcef76f9c41748045"}], "stats": {"total": 91, "additions": 67, "deletions": 24}, "files": [{"sha": "47d51d748e8d57018c423d928b729186a8c9fef5", "filename": "libf2c/changes.netlib", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2Fchanges.netlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2Fchanges.netlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2Fchanges.netlib?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -2392,7 +2392,7 @@ Tue Aug  1 09:25:56 EDT 1995\n   Permit real (or double precision) parameters in dimension expressions.\n \n Mon Aug  7 08:04:00 EDT 1995\n-  Append \"_eqv\" rather than just \"_\" to names that appear in\n+  Append \"_eqv\" rather than just \"_\" to names that that appear in\n EQUIVALENCE statements as well as structs in f2c.h (to avoid a\n conflict when these names also name common blocks).\n \n@@ -2902,3 +2902,28 @@ character variables in data statements.\n Sun Apr  5 19:26:50 EDT 1998\n   libi77: wsfe.c: make $ format item work: this was lost in the changes\n of 17 March 1998.\n+\n+Sat May 16 19:08:51 EDT 1998\n+  Adjust output of ftnlen constants: rather than appending L,\n+prepend (ftnlen).  This should make the resulting C more portable,\n+e.g., to systems (such as DEC Alpha Unix systems) on which long\n+may be longer than ftnlen.\n+  Adjust -r so it also casts REAL expressions passed to intrinsic\n+functions to REAL.\n+\n+Wed May 27 16:02:35 EDT 1998\n+  libf2c.zip: tweak description of compiling libf2c for INTEGER*8\n+to accord with makefile.u rather than libF77/makefile.\n+\n+Thu May 28 22:45:59 EDT 1998\n+  libi77: backspace.c dfe.c due.c iio.c lread.c rsfe.c sue.c wsfe.c:\n+set f__curunit sooner so various error messages will correctly\n+identify the I/O unit involved.\n+  libf2c.zip: above, plus tweaks to PC makefiles: for some purposes,\n+it's still best to compile with -DMSDOS (even for use with NT).\n+\n+Thu Jun 18 01:22:52 EDT 1998\n+  libi77: lread.c: modified so floating-point numbers (containing\n+either a decimal point or an exponent field) are treated as errors\n+when they appear as list input for integer data.  Compile lread.c with\n+-DALLOW_FLOAT_IN_INTEGER_LIST_INPUT to restore the old behavior."}, {"sha": "1da686dbb488e94caab44d7b61eb4bcd98e96c97", "filename": "libf2c/libI77/backspace.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fbackspace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fbackspace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fbackspace.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -11,11 +11,11 @@ integer f_back(alist *a)\n \tuiolen n;\n \tFILE *f;\n \n+\tf__curunit = b = &f__units[a->aunit];\t/* curunit for error messages */\n \tif (f__init & 2)\n \t\tf__fatal (131, \"I/O recursion\");\n \tif(a->aunit >= MXUNIT || a->aunit < 0)\n \t\terr(a->aerr,101,\"backspace\");\n-\tf__curunit = b = &f__units[a->aunit];\t/* curunit for error messages */\n \tif(b->useek==0) err(a->aerr,106,\"backspace\");\n \tif((f = b->ufd) == NULL) {\n \t\tfk_open(1, 1, a->aunit);"}, {"sha": "f8c1fc14675134db0ec644ee36997e86702f6880", "filename": "libf2c/libI77/dfe.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fdfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fdfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdfe.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -70,9 +70,9 @@ c_dfe(cilist *a)\n \tf__formatted=f__external=1;\n \tf__elist=a;\n \tf__cursor=f__scale=f__recpos=0;\n+\tf__curunit = &f__units[a->ciunit];\n \tif(a->ciunit>MXUNIT || a->ciunit<0)\n \t\terr(a->cierr,101,\"startchk\");\n-\tf__curunit = &f__units[a->ciunit];\n \tif(f__curunit->ufd==NULL && fk_open(DIR,FMT,a->ciunit))\n \t\terr(a->cierr,104,\"dfe\");\n \tf__cf=f__curunit->ufd;"}, {"sha": "cb80a39b44d1e1fda8a101028b648bcc0c9c0d9f", "filename": "libf2c/libI77/due.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fdue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fdue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdue.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -14,6 +14,8 @@ c_due(cilist *a)\n \tf__sequential=f__formatted=f__recpos=0;\n \tf__external=1;\n \tf__curunit = &f__units[a->ciunit];\n+\tif(a->ciunit>=MXUNIT || a->ciunit<0)\n+\t\terr(a->cierr,101,\"startio\");\n \tf__elist=a;\n \tif(f__curunit->ufd==NULL && fk_open(DIR,UNF,a->ciunit) ) err(a->cierr,104,\"due\");\n \tf__cf=f__curunit->ufd;"}, {"sha": "931f15aab6310c2b683e677590784eb2055c5bb7", "filename": "libf2c/libI77/iio.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fiio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fiio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fiio.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -52,19 +52,19 @@ c_si(icilist *a)\n \tf__init |= 2;\n \tf__elist = (cilist *)a;\n \tf__fmtbuf=a->icifmt;\n+\tf__curunit = 0;\n+\tf__sequential=f__formatted=1;\n+\tf__external=0;\n \tif(pars_f(f__fmtbuf)<0)\n \t\terr(a->icierr,100,\"startint\");\n \tfmt_bg();\n-\tf__sequential=f__formatted=1;\n-\tf__external=0;\n \tf__cblank=f__cplus=f__scale=0;\n \tf__svic=a;\n \tf__icnum=f__recpos=0;\n \tf__cursor = 0;\n \tf__hiwater = 0;\n \tf__icptr = a->iciunit;\n \tf__icend = f__icptr + a->icirlen*a->icirnum;\n-\tf__curunit = 0;\n \tf__cf = 0;\n \treturn(0);\n }"}, {"sha": "24b621db15ba97c2eb0342873acfc7bac3c9b1fa", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -105,10 +105,11 @@ double f__lx,f__ly;\n #define GETC(x) (x=(*l_getc)())\n #define Ungetc(x,y) (*l_ungetc)(x,y)\n \n+ static int\n #ifdef KR_headers\n-l_R(poststar) int poststar;\n+l_R(poststar, reqint) int poststar, reqint;\n #else\n-l_R(int poststar)\n+l_R(int poststar, int reqint)\n #endif\n {\n \tchar s[FMAX+EXPMAXDIGS+4];\n@@ -157,6 +158,10 @@ l_R(int poststar)\n \t\tgoto retry;\n \t\t}\n \tif (ch == '.') {\n+#ifndef ALLOW_FLOAT_IN_INTEGER_LIST_INPUT\n+\t\tif (reqint)\n+\t\t\terrfl(f__elist->cierr,115,\"invalid integer\");\n+#endif\n \t\tGETC(ch);\n \t\tif (sp == sp1)\n \t\t\twhile(ch == '0') {\n@@ -175,6 +180,10 @@ l_R(int poststar)\n \tif (issign(ch))\n \t\tgoto signonly;\n \tif (havenum && isexp(ch)) {\n+#ifndef ALLOW_FLOAT_IN_INTEGER_LIST_INPUT\n+\t\tif (reqint)\n+\t\t\terrfl(f__elist->cierr,115,\"invalid integer\");\n+#endif\n \t\tGETC(ch);\n \t\tif (issign(ch)) {\n signonly:\n@@ -208,7 +217,7 @@ l_R(int poststar)\n \t\t\tsp[1] = 0;\n \t\tf__lx = atof(s);\n #ifdef Allow_TYQUAD\n-\t\tif (quad_read && (se = sp - sp1 + exp) > 14 && se < 20) {\n+\t\tif (reqint&2 && (se = sp - sp1 + exp) > 14 && se < 20) {\n \t\t\t/* Assuming 64-bit longint and 32-bit long. */\n \t\t\tif (exp < 0)\n \t\t\t\tsp += exp;\n@@ -263,6 +272,7 @@ rd_count(register int ch)\n \treturn f__lcount <= 0;\n \t}\n \n+ static int\n l_C(Void)\n {\tint ch, nml_save;\n \tdouble lz;\n@@ -299,7 +309,7 @@ l_C(Void)\n \tUngetc(ch,f__cf);\n \tnml_save = nml_read;\n \tnml_read = 0;\n-\tif (ch = l_R(1))\n+\tif (ch = l_R(1,0))\n \t\treturn ch;\n \tif (!f__ltype)\n \t\terrfl(f__elist->cierr,112,\"no real part\");\n@@ -311,7 +321,7 @@ l_C(Void)\n \t}\n \twhile(iswhit(GETC(ch)));\n \t(void) Ungetc(ch,f__cf);\n-\tif (ch = l_R(1))\n+\tif (ch = l_R(1,0))\n \t\treturn ch;\n \tif (!f__ltype)\n \t\terrfl(f__elist->cierr,112,\"no imaginary part\");\n@@ -325,6 +335,8 @@ l_C(Void)\n \tnml_read = nml_save;\n \treturn(0);\n }\n+\n+ static int\n l_L(Void)\n {\n \tint ch;\n@@ -370,7 +382,10 @@ l_L(Void)\n \t(void) Ungetc(ch, f__cf);\n \treturn(0);\n }\n+\n #define BUFSIZE\t128\n+\n+ static int\n l_CHAR(Void)\n {\tint ch,size,i;\n \tstatic char rafail[] = \"realloc failure\";\n@@ -519,12 +534,12 @@ c_le(cilist *a)\n \tif(f__init != 1) f_init();\n \tf__init = 3;\n \tf__fmtbuf=\"list io\";\n+\tf__curunit = &f__units[a->ciunit];\n \tf__fmtlen=7;\n \tif(a->ciunit>=MXUNIT || a->ciunit<0)\n \t\terr(a->cierr,101,\"stler\");\n \tf__scale=f__recpos=0;\n \tf__elist=a;\n-\tf__curunit = &f__units[a->ciunit];\n \tif(f__curunit->ufd==NULL && fk_open(SEQ,FMT,a->ciunit))\n \t\terr(a->cierr,102,\"lio\");\n \tf__cf=f__curunit->ufd;\n@@ -575,16 +590,19 @@ l_read(ftnint *number, char *ptr, ftnlen len, ftnint type)\n \t\tcase TYINT1:\n \t\tcase TYSHORT:\n \t\tcase TYLONG:\n+#ifndef ALLOW_FLOAT_IN_INTEGER_LIST_INPUT\n+\t\t\tERR(l_R(0,1));\n+\t\t\tbreak;\n+#endif\n \t\tcase TYREAL:\n \t\tcase TYDREAL:\n-\t\t\tERR(l_R(0));\n+\t\t\tERR(l_R(0,0));\n \t\t\tbreak;\n #ifdef TYQUAD\n \t\tcase TYQUAD:\n-\t\t\tquad_read = 1;\n-\t\t\tn = l_R(0);\n-\t\t\tquad_read = 0;\n-\t\t\tERR(n);\n+\t\t\tn = l_R(0,2);\n+\t\t\tif (n)\n+\t\t\t\treturn n;\n \t\t\tbreak;\n #endif\n \t\tcase TYCOMPLEX:\n@@ -667,10 +685,10 @@ integer s_rsle(cilist *a)\n {\n \tint n;\n \n-\tif(n=c_le(a)) return(n);\n \tf__reading=1;\n \tf__external=1;\n \tf__formatted=1;\n+\tif(n=c_le(a)) return(n);\n \tf__lioproc = l_read;\n \tf__lquit = 0;\n \tf__lcount = 0;"}, {"sha": "666046246918df6490b5a29590bb49e2693bed67", "filename": "libf2c/libI77/rsfe.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Frsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Frsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsfe.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -51,16 +51,15 @@ integer s_rsfe(cilist *a) /* start */\n {\tint n;\n \tif(f__init != 1) f_init();\n \tf__init = 3;\n-\tif(n=c_sfe(a)) return(n);\n \tf__reading=1;\n \tf__sequential=1;\n \tf__formatted=1;\n \tf__external=1;\n+\tif(n=c_sfe(a)) return(n);\n \tf__elist=a;\n \tf__cursor=f__recpos=0;\n \tf__scale=0;\n \tf__fmtbuf=a->cifmt;\n-\tf__curunit= &f__units[a->ciunit];\n \tf__cf=f__curunit->ufd;\n \tif(pars_f(f__fmtbuf)<0) err(a->cierr,100,\"startio\");\n \tf__getn= x_getc;"}, {"sha": "eacb1d69b010dd92d6d357af6a9f54526ef4ec32", "filename": "libf2c/libI77/sue.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fsue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fsue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fsue.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -9,11 +9,11 @@ c_sue(a) cilist *a;\n c_sue(cilist *a)\n #endif\n {\n-\tif(a->ciunit >= MXUNIT || a->ciunit < 0)\n-\t\terr(a->cierr,101,\"startio\");\n \tf__external=f__sequential=1;\n \tf__formatted=0;\n \tf__curunit = &f__units[a->ciunit];\n+\tif(a->ciunit >= MXUNIT || a->ciunit < 0)\n+\t\terr(a->cierr,101,\"startio\");\n \tf__elist=a;\n \tif(f__curunit->ufd==NULL && fk_open(SEQ,UNF,a->ciunit))\n \t\terr(a->cierr,114,\"sue\");"}, {"sha": "b55b1429ee70df38951dbfd276cd66ebf07c6e43", "filename": "libf2c/libI77/wsfe.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fwsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045/libf2c%2FlibI77%2Fwsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsfe.c?ref=b93be35be02a8d9ac4e6e7f0b7695f6b4ed50045", "patch": "@@ -47,17 +47,16 @@ integer s_wsfe(cilist *a)\t/*start*/\n {\tint n;\n \tif(f__init != 1) f_init();\n \tf__init = 3;\n-\tif(n=c_sfe(a)) return(n);\n \tf__reading=0;\n \tf__sequential=1;\n \tf__formatted=1;\n \tf__external=1;\n+\tif(n=c_sfe(a)) return(n);\n \tf__elist=a;\n \tf__hiwater = f__cursor=f__recpos=0;\n \tf__nonl = 0;\n \tf__scale=0;\n \tf__fmtbuf=a->cifmt;\n-\tf__curunit = &f__units[a->ciunit];\n \tf__cf=f__curunit->ufd;\n \tif(pars_f(f__fmtbuf)<0) err(a->cierr,100,\"startio\");\n \tf__putn= x_putc;"}]}