{"sha": "3e2e197673d9568bb85556da44ce31ebe5a32ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyZTE5NzY3M2Q5NTY4YmI4NTU1NmRhNDRjZTMxZWJlNWEzMmFiMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2010-03-02T00:40:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2010-03-02T00:40:28Z"}, "message": "re PR libstdc++/43183 (std::unique_ptr::reset() does not conform to N3035.)\n\n2010-03-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\tPR libstdc++/43183\n\t* include/bits/unique_ptr.h (reset): Fix as per working paper.\n\t(operator*, operator->, operator[], operator bool, release): Use\n\tpointer's null value instead of 0.\n\t* testsuite/20_util/unique_ptr/assign/assign_neg.cc: Adjust.\n\t* testsuite/20_util/unique_ptr/modifiers/reset_neg.cc: Adjust.\n\t* testsuite/20_util/unique_ptr/modifiers/43183.cc: New.\n\nFrom-SVN: r157158", "tree": {"sha": "0aac139b9a6251b8de6b0927da20cc16b6481b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0aac139b9a6251b8de6b0927da20cc16b6481b9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e2e197673d9568bb85556da44ce31ebe5a32ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2e197673d9568bb85556da44ce31ebe5a32ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2e197673d9568bb85556da44ce31ebe5a32ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2e197673d9568bb85556da44ce31ebe5a32ab3/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f743fd0a4c4263692a20c469a7bcfdb4fc2f7c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f743fd0a4c4263692a20c469a7bcfdb4fc2f7c39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f743fd0a4c4263692a20c469a7bcfdb4fc2f7c39"}], "stats": {"total": 103, "additions": 83, "deletions": 20}, "files": [{"sha": "a34bb50875ec2aef1e7f30e8d64f3ca77008bee3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3e2e197673d9568bb85556da44ce31ebe5a32ab3", "patch": "@@ -1,3 +1,13 @@\n+2010-03-02  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/43183\n+\t* include/bits/unique_ptr.h (reset): Fix as per working paper.\n+\t(operator*, operator->, operator[], operator bool, release): Use\n+\tpointer's null value instead of 0.\n+\t* testsuite/20_util/unique_ptr/assign/assign_neg.cc: Adjust.\n+\t* testsuite/20_util/unique_ptr/modifiers/reset_neg.cc: Adjust.\n+\t* testsuite/20_util/unique_ptr/modifiers/43183.cc: New.\n+\n 2010-03-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/iomanip (get_money, put_money): Add in C++0x mode; tidy."}, {"sha": "974a5a2a027c90044b3d52b133bbaac429a507a3", "filename": "libstdc++-v3/include/bits/unique_ptr.h", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funique_ptr.h?ref=3e2e197673d9568bb85556da44ce31ebe5a32ab3", "patch": "@@ -152,14 +152,14 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       typename std::add_lvalue_reference<element_type>::type\n       operator*() const\n       {\n-\t_GLIBCXX_DEBUG_ASSERT(get() != 0);\n+\t_GLIBCXX_DEBUG_ASSERT(get() != pointer());\n \treturn *get();\n       }\n \n       pointer\n       operator->() const\n       {\n-\t_GLIBCXX_DEBUG_ASSERT(get() != 0);\n+\t_GLIBCXX_DEBUG_ASSERT(get() != pointer());\n \treturn get();\n       }\n \n@@ -178,25 +178,24 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return std::get<1>(_M_t); }\n \n       explicit operator bool() const\n-      { return get() == 0 ? false : true; }\n+      { return get() == pointer() ? false : true; }\n \n       // Modifiers.\n       pointer\n       release() \n       {\n \tpointer __p = get();\n-\tstd::get<0>(_M_t) = 0;\n+\tstd::get<0>(_M_t) = pointer();\n \treturn __p;\n       }\n \n       void\n       reset(pointer __p = pointer())\n       {\n-\tif (__p != get())\n-\t  {\n-\t    get_deleter()(get());\n-\t    std::get<0>(_M_t) = __p;\n-\t  }\n+\tusing std::swap;\n+\tswap(std::get<0>(_M_t), __p);\n+\tif (__p != pointer())\n+\t  get_deleter()(__p);\n       }\n \n       void\n@@ -293,7 +292,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       typename std::add_lvalue_reference<element_type>::type \n       operator[](size_t __i) const \n       {\n-\t_GLIBCXX_DEBUG_ASSERT(get() != 0);\n+\t_GLIBCXX_DEBUG_ASSERT(get() != pointer());\n \treturn get()[__i];\n       }\n \n@@ -312,25 +311,24 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return std::get<1>(_M_t); }    \n \n       explicit operator bool() const \n-      { return get() == 0 ? false : true; }\n+      { return get() == pointer() ? false : true; }\n     \n       // Modifiers.\n       pointer\n       release() \n       {\n \tpointer __p = get();\n-\tstd::get<0>(_M_t) = 0;\n+\tstd::get<0>(_M_t) = pointer();\n \treturn __p;\n       }\n \n       void\n       reset(pointer __p = pointer()) \n       {\n-\tif (__p != get())\n-\t{\n-\t  get_deleter()(get());\n-\t  std::get<0>(_M_t) = __p;\n-\t}\n+\tusing std::swap;\n+\tswap(std::get<0>(_M_t), __p);\n+\tif (__p != pointer())\n+\t  get_deleter()(__p);\n       }\n \n       // DR 821."}, {"sha": "0916bf6f1396ffe102ebd6d8dd0ade82aa51062e", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/assign/assign_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fassign%2Fassign_neg.cc?ref=3e2e197673d9568bb85556da44ce31ebe5a32ab3", "patch": "@@ -49,13 +49,13 @@ test03()\n   std::unique_ptr<int[2]> p2 = p1;\n }\n \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 348 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 346 }\n // { dg-error \"used here\" \"\" { target *-*-* } 42 }\n // { dg-error \"no matching\" \"\" { target *-*-* } 48 }\n // { dg-warning \"candidates are\" \"\" { target *-*-* } 115 }\n // { dg-warning \"note\" \"\" { target *-*-* } 108 }\n // { dg-warning \"note\" \"\" { target *-*-* } 103 }\n // { dg-warning \"note\" \"\" { target *-*-* } 98 }\n // { dg-warning \"note\" \"\" { target *-*-* } 92 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 210 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 209 }\n // { dg-error \"used here\" \"\" { target *-*-* } 49 }"}, {"sha": "6dcf72919919d80448e74f98844251babcb96af1", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/modifiers/43183.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2F43183.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2F43183.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2F43183.cc?ref=3e2e197673d9568bb85556da44ce31ebe5a32ab3", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.9.10.2.5 unique_ptr modifiers [unique.ptr.single.modifiers]\n+\n+#include <memory>\n+#include <testsuite_hooks.h>\n+\n+struct D\n+{\n+  static int count;\n+\n+  void operator()(int* p) const\n+  {\n+    ++count;\n+    delete p;\n+  }\n+};\n+int D::count = 0;\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::unique_ptr<int, D> up;\n+  up.reset();\n+  VERIFY( D::count == 0 );\n+  up.reset(new int);\n+  VERIFY( D::count == 0 );\n+  up.reset(up.get());\n+  VERIFY( D::count == 1 );\n+  up.release();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "f292d655e86133c88f14eac88802ddbfb6a5a468", "filename": "libstdc++-v3/testsuite/20_util/unique_ptr/modifiers/reset_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2e197673d9568bb85556da44ce31ebe5a32ab3/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Funique_ptr%2Fmodifiers%2Freset_neg.cc?ref=3e2e197673d9568bb85556da44ce31ebe5a32ab3", "patch": "@@ -36,4 +36,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 35 } \n-// { dg-error \"deleted function\" \"\" { target *-*-* } 338 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 336 }"}]}