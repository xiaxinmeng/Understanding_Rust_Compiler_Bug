{"sha": "dcf89d578058ed538e3dcf4e151d99a267e81bf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNmODlkNTc4MDU4ZWQ1MzhlM2RjZjRlMTUxZDk5YTI2N2U4MWJmNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-01-11T10:09:17Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-01-11T10:09:17Z"}, "message": "[PR ipa/69044] Do not clone for param removal when not possible\n\n2016-01-11  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/69044\n\t* ipa-cp.c (estimate_local_effects): Do not clone for removal of\n\tuseless parameters if we cannot change function signature.\n\ntestsuite/\n\t* gcc.target/i386/chkp-pr69044.c: New test.\n\nFrom-SVN: r232215", "tree": {"sha": "086f88caa72ec423d6a48e38183d429a5fd6f9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/086f88caa72ec423d6a48e38183d429a5fd6f9dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcf89d578058ed538e3dcf4e151d99a267e81bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf89d578058ed538e3dcf4e151d99a267e81bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcf89d578058ed538e3dcf4e151d99a267e81bf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf89d578058ed538e3dcf4e151d99a267e81bf4/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa59e957b430b7fd33737f35b0b176d576bb9230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa59e957b430b7fd33737f35b0b176d576bb9230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa59e957b430b7fd33737f35b0b176d576bb9230"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "f28cf448312aff96692af03a95900e748c80123f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcf89d578058ed538e3dcf4e151d99a267e81bf4", "patch": "@@ -1,3 +1,9 @@\n+2016-01-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/69044\n+\t* ipa-cp.c (estimate_local_effects): Do not clone for removal of\n+\tuseless parameters if we cannot change function signature.\n+\n 2016-01-11  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/66616"}, {"sha": "5900d4d91584237a598264e7d92cc7ae48178c61", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=dcf89d578058ed538e3dcf4e151d99a267e81bf4", "patch": "@@ -2518,7 +2518,8 @@ estimate_local_effects (struct cgraph_node *node)\n   known_aggs_ptrs = agg_jmp_p_vec_for_t_vec (known_aggs);\n   int devirt_bonus = devirtualization_time_bonus (node, known_csts,\n \t\t\t\t\t   known_contexts, known_aggs_ptrs);\n-  if (always_const || devirt_bonus || removable_params_cost)\n+  if (always_const || devirt_bonus\n+      || (removable_params_cost && node->local.can_change_signature))\n     {\n       struct caller_statistics stats;\n       inline_hints hints;"}, {"sha": "69f589f281c584e4f9c482feef9d8b3c2c069607", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcf89d578058ed538e3dcf4e151d99a267e81bf4", "patch": "@@ -1,3 +1,8 @@\n+2016-01-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/69044\n+\t* gcc.target/i386/chkp-pr69044.c: New test.\n+\n 2016-01-11  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/69109"}, {"sha": "933e88a6e3cb76fee0ade25e85dad0f18811dc3b", "filename": "gcc/testsuite/gcc.target/i386/chkp-pr69044.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fchkp-pr69044.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf89d578058ed538e3dcf4e151d99a267e81bf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fchkp-pr69044.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fchkp-pr69044.c?ref=dcf89d578058ed538e3dcf4e151d99a267e81bf4", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target mpx } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx -O2\" } */\n+\n+int i;\n+int strncasecmp (char *p1, char *p2, long p3) { return 0; }\n+int special_command ()\n+{\n+  if (strncasecmp (0, 0, 0))\n+    i++;\n+}"}]}