{"sha": "70f25790a1effc8f1cba3cb8a368b129c66a87b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmMjU3OTBhMWVmZmM4ZjFjYmEzY2I4YTM2OGIxMjljNjZhODdiMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-05-19T00:52:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-05-19T00:52:08Z"}, "message": "PR driver/69265: add hint for options with misspelled arguments\n\nopts-common.c's cmdline_handle_error handles invalid arguments\nfor options with CL_ERR_ENUM_ARG by building a string listing the\nvalid arguments.  By also building a vec of valid arguments, we\ncan use find_closest_string and provide a hint if we see a close\nmisspelling.\n\ngcc/ChangeLog:\n\tPR driver/69265\n\t* Makefile.in (GCC_OBJS): Move spellcheck.o to...\n\t(OBJS-libcommon-target): ...here.\n\t* opts-common.c: Include spellcheck.h.\n\t(cmdline_handle_error): Build a vec of valid options and use it\n\tto suggest provide hints for misspelled arguments.\n\ngcc/testsuite/ChangeLog:\n\tPR driver/69265\n\t* gcc.dg/spellcheck-options-11.c: New test case.\n\nFrom-SVN: r236439", "tree": {"sha": "9a1079536c4e30ba3cb0ff1e7cf8ebb14bdadd92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1079536c4e30ba3cb0ff1e7cf8ebb14bdadd92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70f25790a1effc8f1cba3cb8a368b129c66a87b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f25790a1effc8f1cba3cb8a368b129c66a87b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f25790a1effc8f1cba3cb8a368b129c66a87b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f25790a1effc8f1cba3cb8a368b129c66a87b0/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69e95fa03cda406fe61e94371244f0ba9b59339e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e95fa03cda406fe61e94371244f0ba9b59339e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e95fa03cda406fe61e94371244f0ba9b59339e"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "cde433e3d0546fd088f349a4e602bccf198f2465", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70f25790a1effc8f1cba3cb8a368b129c66a87b0", "patch": "@@ -1,3 +1,12 @@\n+2016-05-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR driver/69265\n+\t* Makefile.in (GCC_OBJS): Move spellcheck.o to...\n+\t(OBJS-libcommon-target): ...here.\n+\t* opts-common.c: Include spellcheck.h.\n+\t(cmdline_handle_error): Build a vec of valid options and use it\n+\tto suggest provide hints for misspelled arguments.\n+\n 2016-05-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71100"}, {"sha": "587417b4c21aedbf1827361f63bea2f4d7cc61f8", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=70f25790a1effc8f1cba3cb8a368b129c66a87b0", "patch": "@@ -1160,7 +1160,7 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n FORTRAN_TARGET_OBJS=@fortran_target_objs@\n \n # Object files for gcc many-languages driver.\n-GCC_OBJS = gcc.o gcc-main.o ggc-none.o spellcheck.o\n+GCC_OBJS = gcc.o gcc-main.o ggc-none.o\n \n c-family-warn = $(STRICT_WARN)\n \n@@ -1549,7 +1549,7 @@ OBJS-libcommon = diagnostic.o diagnostic-color.o diagnostic-show-locus.o \\\n # compiler and containing target-dependent code.\n OBJS-libcommon-target = $(common_out_object_file) prefix.o params.o \\\n \topts.o opts-common.o options.o vec.o hooks.o common/common-targhooks.o \\\n-\thash-table.o file-find.o\n+\thash-table.o file-find.o spellcheck.o\n \n # This lists all host objects for the front ends.\n ALL_HOST_FRONTEND_OBJS = $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))"}, {"sha": "4e1ef497ed8015155b0cc48f35d6aff523e761e2", "filename": "gcc/opts-common.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=70f25790a1effc8f1cba3cb8a368b129c66a87b0", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"options.h\"\n #include \"diagnostic.h\"\n+#include \"spellcheck.h\"\n \n static void prune_options (struct cl_decoded_option **, unsigned int *);\n \n@@ -1113,6 +1114,7 @@ cmdline_handle_error (location_t loc, const struct cl_option *option,\n       for (i = 0; e->values[i].arg != NULL; i++)\n \tlen += strlen (e->values[i].arg) + 1;\n \n+      auto_vec <const char *> candidates;\n       s = XALLOCAVEC (char, len);\n       p = s;\n       for (i = 0; e->values[i].arg != NULL; i++)\n@@ -1123,9 +1125,16 @@ cmdline_handle_error (location_t loc, const struct cl_option *option,\n \t  memcpy (p, e->values[i].arg, arglen);\n \t  p[arglen] = ' ';\n \t  p += arglen + 1;\n+\t  candidates.safe_push (e->values[i].arg);\n \t}\n       p[-1] = 0;\n-      inform (loc, \"valid arguments to %qs are: %s\", option->opt_text, s);\n+      const char *hint = find_closest_string (arg, &candidates);\n+      if (hint)\n+\tinform (loc, \"valid arguments to %qs are: %s; did you mean %qs?\",\n+\t\toption->opt_text, s, hint);\n+      else\n+\tinform (loc, \"valid arguments to %qs are: %s\", option->opt_text, s);\n+\n       return true;\n     }\n "}, {"sha": "642fee3ff0546cb778d6638d2fbb61e08933a92a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70f25790a1effc8f1cba3cb8a368b129c66a87b0", "patch": "@@ -1,3 +1,8 @@\n+2016-05-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR driver/69265\n+\t* gcc.dg/spellcheck-options-11.c: New test case.\n+\n 2016-05-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71100"}, {"sha": "8e271416aa2b79ed5b30d52aae766b39d2ff67b1", "filename": "gcc/testsuite/gcc.dg/spellcheck-options-11.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f25790a1effc8f1cba3cb8a368b129c66a87b0/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspellcheck-options-11.c?ref=70f25790a1effc8f1cba3cb8a368b129c66a87b0", "patch": "@@ -0,0 +1,7 @@\n+/* Verify that we provide a hint if the user misspells an option argument\n+   (PR driver/69265).  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-ftls-model=global-dinamic\" } */\n+/* { dg-error \"unknown TLS model 'global-dinamic'\"  \"\" { target *-*-* } 0 } */\n+/* { dg-message \"valid arguments to '-ftls-model=' are: global-dynamic initial-exec local-dynamic local-exec; did you mean 'global-dynamic'?\"  \"\" { target *-*-* } 0 } */"}]}