{"sha": "768fbdd49e8535486ea71eebc507c3b813521a1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY4ZmJkZDQ5ZTg1MzU0ODZlYTcxZWViYzUwN2MzYjgxMzUyMWExYg==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-03-10T09:48:51Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-03-10T09:48:51Z"}, "message": "mpx-dg.exp (mpx_link_flags): Set path to wrappers library.\n\n\t* lib/mpx-dg.exp (mpx_link_flags): Set path to wrappers library.\n\t* gcc.target/i386/mpx/calloc-1-lbv.c: New.\n\t* gcc.target/i386/mpx/calloc-1-ubv.c: New.\n\t* gcc.target/i386/mpx/calloc-1-nov.c: New.\n\t* gcc.target/i386/mpx/malloc-1-lbv.c: New.\n\t* gcc.target/i386/mpx/malloc-1-nov.c: New.\n\t* gcc.target/i386/mpx/malloc-1-ubv.c: New.\n\t* gcc.target/i386/mpx/realloc-1-lbv.c: New.\n\t* gcc.target/i386/mpx/realloc-1-nov.c: New.\n\t* gcc.target/i386/mpx/realloc-1-ubv.c: New.\n\t* gcc.target/i386/mpx/realloc-2-lbv.c: New.\n\t* gcc.target/i386/mpx/realloc-2-nov.c: New.\n\t* gcc.target/i386/mpx/realloc-2-ubv.c: New.\n\nFrom-SVN: r221315", "tree": {"sha": "1f913dee19299f6e2dca2bcdbb70403cbe412720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f913dee19299f6e2dca2bcdbb70403cbe412720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/768fbdd49e8535486ea71eebc507c3b813521a1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768fbdd49e8535486ea71eebc507c3b813521a1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/768fbdd49e8535486ea71eebc507c3b813521a1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/768fbdd49e8535486ea71eebc507c3b813521a1b/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "226d62d2d1fae33873e8ecda6004fb24ec36e421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226d62d2d1fae33873e8ecda6004fb24ec36e421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226d62d2d1fae33873e8ecda6004fb24ec36e421"}], "stats": {"total": 340, "additions": 340, "deletions": 0}, "files": [{"sha": "564944dab57ee6afc0d541c8e7f235f260e83c71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -1,3 +1,19 @@\n+2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* lib/mpx-dg.exp (mpx_link_flags): Set path to wrappers library.\n+\t* gcc.target/i386/mpx/calloc-1-lbv.c: New.\n+\t* gcc.target/i386/mpx/calloc-1-ubv.c: New.\n+\t* gcc.target/i386/mpx/calloc-1-nov.c: New.\n+\t* gcc.target/i386/mpx/malloc-1-lbv.c: New.\n+\t* gcc.target/i386/mpx/malloc-1-nov.c: New.\n+\t* gcc.target/i386/mpx/malloc-1-ubv.c: New.\n+\t* gcc.target/i386/mpx/realloc-1-lbv.c: New.\n+\t* gcc.target/i386/mpx/realloc-1-nov.c: New.\n+\t* gcc.target/i386/mpx/realloc-1-ubv.c: New.\n+\t* gcc.target/i386/mpx/realloc-2-lbv.c: New.\n+\t* gcc.target/i386/mpx/realloc-2-nov.c: New.\n+\t* gcc.target/i386/mpx/realloc-2-ubv.c: New.\n+\n 2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* gcc/testsuite/lib/mpx-dg.exp (mpx_link_flags): New."}, {"sha": "0ba5d73229d1c2f14ca6e502c40771fc74e577a3", "filename": "gcc/testsuite/gcc.target/i386/mpx/calloc-1-lbv.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-lbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-lbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-lbv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)calloc (100, sizeof(int));\n+\n+  rd (buf, -1);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "cb755e573910324f7e3fee71e0193d1cc362fba7", "filename": "gcc/testsuite/gcc.target/i386/mpx/calloc-1-nov.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-nov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-nov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-nov.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)calloc (100, sizeof(int));\n+\n+  rd (buf, 0);\n+  rd (buf, 99);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "a932a8c7b47d432b1ef713e7d54a919045418ad2", "filename": "gcc/testsuite/gcc.target/i386/mpx/calloc-1-ubv.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-ubv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-ubv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fcalloc-1-ubv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)calloc (100, sizeof(int));\n+\n+  rd (buf, 100);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "aa2aed983cf5cea77c5630d0143fc0d19aa3ac26", "filename": "gcc/testsuite/gcc.target/i386/mpx/malloc-1-lbv.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-lbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-lbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-lbv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+\n+  rd (buf, -1);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "56f26e964d844dd13391a4aa5c8a48339e035010", "filename": "gcc/testsuite/gcc.target/i386/mpx/malloc-1-nov.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-nov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-nov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-nov.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+\n+  rd (buf, 0);\n+  rd (buf, 99);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "6f48ec269237e98deec35403ed9f149d8cae2010", "filename": "gcc/testsuite/gcc.target/i386/mpx/malloc-1-ubv.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-ubv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-ubv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fmalloc-1-ubv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+\n+  rd (buf, 100);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "961196f71c02881eabaa5ad1ee83c60f8fcddcf9", "filename": "gcc/testsuite/gcc.target/i386/mpx/realloc-1-lbv.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-lbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-lbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-lbv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+  buf = (int *)realloc (buf, 200 * sizeof(int));\n+\n+  rd (buf, -1);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "f4b3dd8608158ba4a1b09cd850528901201e419f", "filename": "gcc/testsuite/gcc.target/i386/mpx/realloc-1-nov.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-nov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-nov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-nov.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+  buf = (int *)realloc (buf, 200 * sizeof(int));\n+\n+  rd (buf, 0);\n+  rd (buf, 199);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "8a14baa7a941a1b1896bf265f26bd1a7496e3de1", "filename": "gcc/testsuite/gcc.target/i386/mpx/realloc-1-ubv.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-ubv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-ubv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-1-ubv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+  buf = (int *)realloc (buf, 200 * sizeof(int));\n+\n+  rd (buf, 200);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "919f62a490e9e0377c488106a2e93bd62a348d32", "filename": "gcc/testsuite/gcc.target/i386/mpx/realloc-2-lbv.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-lbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-lbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-lbv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+  buf = (int *)realloc (buf, 10 * sizeof(int));\n+\n+  rd (buf, -1);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "569cd241cc95d0c51813d07aab600b0af25db72a", "filename": "gcc/testsuite/gcc.target/i386/mpx/realloc-2-nov.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-nov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-nov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-nov.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+  buf = (int *)realloc (buf, 10 * sizeof(int));\n+\n+  rd (buf, 0);\n+  rd (buf, 9);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "36eb90c1abf2755cc8cb6cc22e04e40b7f53f5f2", "filename": "gcc/testsuite/gcc.target/i386/mpx/realloc-2-ubv.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-ubv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-ubv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Frealloc-2-ubv.c?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+/* { dg-shouldfail \"bounds violation\" } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+\n+#define SHOULDFAIL\n+\n+#include \"mpx-check.h\"\n+\n+int rd (int *p, int i)\n+{\n+  int res = p[i];\n+  printf (\"%d\\n\", res);\n+  return res;\n+}\n+\n+int mpx_test (int argc, const char **argv)\n+{\n+  int *buf = (int *)malloc (100 * sizeof(int));\n+  buf = (int *)realloc (buf, 10 * sizeof(int));\n+\n+  rd (buf, 10);\n+\n+  free (buf);\n+\n+  return 0;\n+}"}, {"sha": "0b731a7ee46c4ef777b0747fdf1077f068ec6e3b", "filename": "gcc/testsuite/lib/mpx-dg.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Flib%2Fmpx-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/768fbdd49e8535486ea71eebc507c3b813521a1b/gcc%2Ftestsuite%2Flib%2Fmpx-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fmpx-dg.exp?ref=768fbdd49e8535486ea71eebc507c3b813521a1b", "patch": "@@ -48,6 +48,14 @@ proc mpx_link_flags { paths } {\n \t  append flags \" -L${gccpath}/libmpx/mpxrt/.libs \"\n \t  append ld_library_path \":${gccpath}/libmpx/mpxrt/.libs\"\n       }\n+\n+      if { [file exists \"${gccpath}/libmpx/mpxwrap/.libs/libmpxwrappers.a\"]\n+\t   || [file exists \"${gccpath}/libmpx/mpxwrap/.libs/libmpxwrappers.${shlib_ext}\"] } {\n+\t  append flags \" -B${gccpath}/libmpx/ \"\n+\t  append flags \" -B${gccpath}/libmpx/mpxwrap \"\n+\t  append flags \" -L${gccpath}/libmpx/mpxwrap/.libs \"\n+\t  append ld_library_path \":${gccpath}/libmpx/mpxwrap/.libs\"\n+      }\n     } else {\n       global tool_root_dir\n \n@@ -56,6 +64,12 @@ proc mpx_link_flags { paths } {\n \t  append flags \"-L${libmpx} \"\n \t  append ld_library_path \":${libmpx}\"\n       }\n+\n+      set libmpxwrappers [lookfor_file ${tool_root_dir} libmpxwrappers]\n+      if { $libmpxwrappers != \"\" } {\n+\t  append flags \"-L${libmpxwrappers} \"\n+\t  append ld_library_path \":${libmpxwrappers}\"\n+      }\n     }\n \n     set_ld_library_path_env_vars"}]}