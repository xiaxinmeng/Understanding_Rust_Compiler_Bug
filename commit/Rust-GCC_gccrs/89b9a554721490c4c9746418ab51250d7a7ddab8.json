{"sha": "89b9a554721490c4c9746418ab51250d7a7ddab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliOWE1NTQ3MjE0OTBjNGM5NzQ2NDE4YWI1MTI1MGQ3YTdkZGFiOA==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2019-12-30T21:11:22Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2019-12-30T21:11:22Z"}, "message": "Fix typo in macro name guarding conditional in vxcrtstuff.c\n\n2019-12-30  Olivier Hainque  <hainque@adacore.com>\n\n\tlibgcc/\n\t* config/vxcrtstuff.c: Fix incorrect spelling of\n\tUSE_INITFINI_ARRAY in guard.\n\nFrom-SVN: r279774", "tree": {"sha": "8978c51bcbf9b7dd852f4613ffa0fd2f24bfe1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8978c51bcbf9b7dd852f4613ffa0fd2f24bfe1b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b9a554721490c4c9746418ab51250d7a7ddab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b9a554721490c4c9746418ab51250d7a7ddab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b9a554721490c4c9746418ab51250d7a7ddab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b9a554721490c4c9746418ab51250d7a7ddab8/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ee5eddb26e6007aaa2fadd19a55d6bc03cb2baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ee5eddb26e6007aaa2fadd19a55d6bc03cb2baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ee5eddb26e6007aaa2fadd19a55d6bc03cb2baa"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3fc15d3bee094c4eecc532eb344459d2ca51fe7e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b9a554721490c4c9746418ab51250d7a7ddab8/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b9a554721490c4c9746418ab51250d7a7ddab8/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=89b9a554721490c4c9746418ab51250d7a7ddab8", "patch": "@@ -1,3 +1,8 @@\n+2019-12-30  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/vxcrtstuff.c: Fix incorrect spelling of\n+\tUSE_INITFINI_ARRAY in guard.\n+\n 2019-12-16  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config.host: s/msp430*-*-elf/msp430-*-elf*."}, {"sha": "87fadda9ac50edcd34ebc545ba5b7ed9769c256c", "filename": "libgcc/config/vxcrtstuff.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b9a554721490c4c9746418ab51250d7a7ddab8/libgcc%2Fconfig%2Fvxcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b9a554721490c4c9746418ab51250d7a7ddab8/libgcc%2Fconfig%2Fvxcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fvxcrtstuff.c?ref=89b9a554721490c4c9746418ab51250d7a7ddab8", "patch": "@@ -38,7 +38,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    Otherwise, we may rely on ctors/dtors sections for RTPs or expect munch to\n    be involved for kernel modules.  */\n \n-#if !defined(USE_INIT_FINI_ARRAY) && defined(__RTP__)\n+#if !defined(USE_INITFINI_ARRAY) && defined(__RTP__)\n #define USE_CDTORS_SECTIONS\n #endif\n \n@@ -77,7 +77,7 @@ __attribute__((section(__LIBGCC_EH_FRAME_SECTION_NAME__), aligned(4)))\n #define EH_CTOR_ATTRIBUTE __attribute__((constructor (101)))\n #define EH_DTOR_ATTRIBUTE __attribute__((destructor (101)))\n \n-#else /* USE_INITFINI_ARRAY  */\n+#else /* !USE_INITFINI_ARRAY  */\n \n /* Note: Even in case of .ctors/.dtors sections, we can't use the attribute\n    (constructor (15)) here as gcc may have been configured with constructors"}]}