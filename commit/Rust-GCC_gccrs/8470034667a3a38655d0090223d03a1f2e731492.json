{"sha": "8470034667a3a38655d0090223d03a1f2e731492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3MDAzNDY2N2EzYTM4NjU1ZDAwOTAyMjNkMDNhMWYyZTczMTQ5Mg==", "commit": {"author": {"name": "David Ayers", "email": "d.ayers@inode.at", "date": "2005-11-20T12:49:41Z"}, "committer": {"name": "David Ayers", "email": "ayers@gcc.gnu.org", "date": "2005-11-20T12:49:41Z"}, "message": "re PR libobjc/19024 (name collisions libobjc/libmysqlclient)\n\n2005-11-20  David Ayers  <d.ayers@inode.at>\n\n\tPR libobjc/19024\n\t* objc/hash.h: Remove deprecated hash API.\n\t* hash_compat.c: Remove.\n\t* Makefile.in: Remove reference to hash_compat.c.\n\n\t* configure.ac (VERSION): Bump library version to 2:0:0.\n\t* configure: Regenerate.\n\nFrom-SVN: r107251", "tree": {"sha": "f75c58ef837f8fb2c92138209202d9ff7bf1c6d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f75c58ef837f8fb2c92138209202d9ff7bf1c6d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8470034667a3a38655d0090223d03a1f2e731492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8470034667a3a38655d0090223d03a1f2e731492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8470034667a3a38655d0090223d03a1f2e731492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8470034667a3a38655d0090223d03a1f2e731492/comments", "author": null, "committer": null, "parents": [{"sha": "033107c3b172cff2c522d216afe5dabbfe7b170a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/033107c3b172cff2c522d216afe5dabbfe7b170a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/033107c3b172cff2c522d216afe5dabbfe7b170a"}], "stats": {"total": 219, "additions": 14, "deletions": 205}, "files": [{"sha": "809bcc0abe53a6ad63401db041e4448300d178b4", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=8470034667a3a38655d0090223d03a1f2e731492", "patch": "@@ -1,3 +1,13 @@\n+2005-11-20  David Ayers  <d.ayers@inode.at>\n+\n+\tPR libobjc/19024\n+\t* objc/hash.h: Remove deprecated hash API.\n+\t* hash_compat.c: Remove.\n+\t* Makefile.in: Remove reference to hash_compat.c.\n+\n+\t* configure.ac (VERSION): Bump library version to 2:0:0.\n+\t* configure: Regenerate.\n+\n 2005-11-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR other/4372"}, {"sha": "98f4c87081732b95d17c979575713e8d722a8332", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=8470034667a3a38655d0090223d03a1f2e731492", "patch": "@@ -148,13 +148,13 @@ OBJC_H = hash.h objc-list.h sarray.h objc.h objc-api.h \\\n OBJS =    archive.lo class.lo encoding.lo gc.lo hash.lo init.lo linking.lo \\\n \t  misc.lo nil_method.lo NXConstStr.lo Object.lo objects.lo \\\n \t  Protocol.lo sarray.lo selector.lo sendmsg.lo thr.lo \\\n-\t  $(OBJC_THREAD_FILE).lo exception.lo hash_compat.lo\n+\t  $(OBJC_THREAD_FILE).lo exception.lo\n \n OBJS_GC = archive_gc.lo class_gc.lo encoding_gc.lo gc_gc.lo hash_gc.lo \\\n \t  init_gc.lo linking_gc.lo misc_gc.lo nil_method_gc.lo \\\n \t  NXConstStr_gc.lo Object_gc.lo objects_gc.lo Protocol_gc.lo \\\n \t  sarray_gc.lo selector_gc.lo sendmsg_gc.lo thr_gc.lo \\\n-\t  $(OBJC_THREAD_FILE)_gc.lo exception_gc.lo hash_compat_gc.lo\n+\t  $(OBJC_THREAD_FILE)_gc.lo exception_gc.lo\n \n runtime-info.h: \n \techo \"\" > tmp-runtime.m\n@@ -185,10 +185,6 @@ hash_gc.lo: hash.c\n \t$(LIBTOOL_COMPILE) $(CC) -c -o $@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \\\n \t\t$(INCLUDES) $<\n \n-hash_compat_gc.lo: hash_compat.c\n-\t$(LIBTOOL_COMPILE) $(CC) -c -o $@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \\\n-\t\t$(INCLUDES) $<\n-\n init_gc.lo: init.c\n \t$(LIBTOOL_COMPILE) $(CC) -c -o $@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \\\n \t\t$(INCLUDES) $<"}, {"sha": "1c04b7164e95e0e5eea78da2e3adfa836a0d06f6", "filename": "libobjc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=8470034667a3a38655d0090223d03a1f2e731492", "patch": "@@ -1403,7 +1403,7 @@ target_subdir=${target_noncanonical}\n # We need the following definitions because AC_PROG_LIBTOOL relies on them\n PACKAGE=libobjc\n # Version is pulled out to make it a bit easier to change using sed.\n-VERSION=1:0:0\n+VERSION=2:0:0\n \n \n # This works around the fact that libtool configuration may change LD"}, {"sha": "b1b43ad12e31249b9df210185c1e61f9f90f1b9e", "filename": "libobjc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=8470034667a3a38655d0090223d03a1f2e731492", "patch": "@@ -28,7 +28,7 @@ GCC_TOPLEV_SUBDIRS\n # We need the following definitions because AC_PROG_LIBTOOL relies on them\n PACKAGE=libobjc\n # Version is pulled out to make it a bit easier to change using sed.\n-VERSION=1:0:0\n+VERSION=2:0:0\n AC_SUBST(VERSION)\n \n # This works around the fact that libtool configuration may change LD"}, {"sha": "b04eee6d43bbeae0d079e07e7ccd2e5846bc9660", "filename": "libobjc/hash_compat.c", "status": "removed", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/033107c3b172cff2c522d216afe5dabbfe7b170a/libobjc%2Fhash_compat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/033107c3b172cff2c522d216afe5dabbfe7b170a/libobjc%2Fhash_compat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fhash_compat.c?ref=033107c3b172cff2c522d216afe5dabbfe7b170a", "patch": "@@ -1,97 +0,0 @@\n-/* Binary compatibility hash implementations for Objective C.\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* As a special exception, if you link this library with files\n-   compiled with GCC to produce an executable, this does not cause\n-   the resulting executable to be covered by the GNU General Public License.\n-   This exception does not however invalidate any other reasons why\n-   the executable file might be covered by the GNU General Public License.  */\n-\n-#define OBJC_IGNORE_DEPRECATED_API 1\n-#include \"objc/hash.h\"\n-\n-cache_ptr\n-hash_new (unsigned int size,\n-\t  hash_func_type hash_func,\n-\t  compare_func_type compare_func)\n-{\n-  return objc_hash_new(size, hash_func, compare_func);\n-}\n-\n-void\n-hash_delete(cache_ptr cache)\n-{\n-  objc_hash_delete(cache);\n-}\n-\n-void\n-hash_add (cache_ptr *cachep, const void *key, void *value)\n-{\n-  objc_hash_add(cachep, key, value);\n-}\n-\n-void\n-hash_remove (cache_ptr cache, const void *key)\n-{\n-  objc_hash_remove (cache, key);\n-}\n-\n-node_ptr\n-hash_next (cache_ptr cache, node_ptr node)\n-{\n-  return objc_hash_next (cache, node);\n-}\n-\n-void *\n-hash_value_for_key (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_value_for_key (cache, key);\n-}\n-\n-BOOL\n-hash_is_key_in_hash (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_is_key_in_hash (cache, key);\n-}\n-\n-unsigned int\n-hash_ptr (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_ptr (cache, key);\n-}\n-\n-unsigned int \n-hash_string (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_string (cache, key);\n-}\n-\n-int \n-compare_ptrs (const void *k1, const void *k2)\n-{\n-  return objc_compare_ptrs (k1, k2);\n-}\n-\n-int \n-compare_strings (const void *k1, const void *k2)\n-{\n-  return objc_compare_strings (k1, k2);\n-}\n-"}, {"sha": "b1cdd0c4fbf6da1784b8175a0f1706cf3733fd02", "filename": "libobjc/objc/hash.h", "status": "modified", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2Fobjc%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470034667a3a38655d0090223d03a1f2e731492/libobjc%2Fobjc%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fhash.h?ref=8470034667a3a38655d0090223d03a1f2e731492", "patch": "@@ -207,106 +207,6 @@ objc_compare_strings (const void *k1, const void *k2)\n     return ! strcmp ((const char *) k1, (const char *) k2);\n }\n \n-#ifndef OBJC_IGNORE_DEPRECATED_API\n-/* Deprecated as of 4.0 */\n-\n-static inline cache_ptr\n-hash_new (unsigned int size,\n-\t  hash_func_type hash_func,\n-\t  compare_func_type compare_func) __attribute__ ((deprecated));\n-static inline cache_ptr\n-hash_new (unsigned int size,\n-\t  hash_func_type hash_func,\n-\t  compare_func_type compare_func)\n-{\n-  return objc_hash_new(size, hash_func, compare_func);\n-}\n-\n-static inline void\n-hash_delete(cache_ptr cache) __attribute__ ((deprecated));\n-static inline void\n-hash_delete(cache_ptr cache)\n-{\n-  objc_hash_delete(cache);\n-}\n-\n-static inline void\n-hash_add (cache_ptr *cachep,\n-\t  const void *key,\n-\t  void *value) __attribute__ ((deprecated));\n-static inline void\n-hash_add (cache_ptr *cachep, const void *key, void *value)\n-{\n-  objc_hash_add(cachep, key, value);\n-}\n-\n-static inline void\n-hash_remove (cache_ptr cache, const void *key) __attribute__ ((deprecated));\n-static inline void\n-hash_remove (cache_ptr cache, const void *key)\n-{\n-  objc_hash_remove (cache, key);\n-}\n-\n-static inline node_ptr\n-hash_next (cache_ptr cache, node_ptr node) __attribute__ ((deprecated));\n-static inline node_ptr\n-hash_next (cache_ptr cache, node_ptr node)\n-{\n-  return objc_hash_next (cache, node);\n-}\n-\n-static inline void *\n-hash_value_for_key (cache_ptr cache,\n-\t\t    const void *key) __attribute__ ((deprecated));\n-static inline void *\n-hash_value_for_key (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_value_for_key (cache, key);\n-}\n-\n-static inline BOOL\n-hash_is_key_in_hash (cache_ptr cache,\n-\t\t     const void *key) __attribute__ ((deprecated));\n-static inline BOOL\n-hash_is_key_in_hash (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_is_key_in_hash (cache, key);\n-}\n-\n-static inline unsigned int\n-hash_ptr (cache_ptr cache, const void *key) __attribute__ ((deprecated));\n-static inline unsigned int\n-hash_ptr (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_ptr (cache, key);\n-}\n-\n-static inline unsigned int \n-hash_string (cache_ptr cache, const void *key) __attribute__ ((deprecated));\n-static inline unsigned int \n-hash_string (cache_ptr cache, const void *key)\n-{\n-  return objc_hash_string (cache, key);\n-}\n-\n-static inline int \n-compare_ptrs (const void *k1, const void *k2) __attribute__ ((deprecated));\n-static inline int \n-compare_ptrs (const void *k1, const void *k2)\n-{\n-  return objc_compare_ptrs (k1, k2);\n-}\n-\n-static inline int \n-compare_strings (const void *k1, const void *k2) __attribute__ ((deprecated));\n-static inline int \n-compare_strings (const void *k1, const void *k2)\n-{\n-  return objc_compare_strings (k1, k2);\n-}\n-#endif /* OBJC_IGNORE_DEPRECATED_API */\n-\n \n #ifdef __cplusplus\n }"}]}