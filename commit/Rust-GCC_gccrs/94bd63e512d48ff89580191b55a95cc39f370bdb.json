{"sha": "94bd63e512d48ff89580191b55a95cc39f370bdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRiZDYzZTUxMmQ0OGZmODk1ODAxOTFiNTVhOTVjYzM5ZjM3MGJkYg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cambridge.redhat.com", "date": "2001-05-08T14:14:11Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2001-05-08T14:14:11Z"}, "message": "reload1.c (copy_eh_notes): New function.\n\n2001-05-03  Andrew Haley  <aph@cambridge.redhat.com>\n\n        * reload1.c (copy_eh_notes): New function.\n        (emit_input_reload_insns): Call it.\n        (emit_output_reload_insns): Call it.\n\nFrom-SVN: r41918", "tree": {"sha": "a3b6d81f05e3be694e8761ce32c76aef86864348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3b6d81f05e3be694e8761ce32c76aef86864348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94bd63e512d48ff89580191b55a95cc39f370bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94bd63e512d48ff89580191b55a95cc39f370bdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94bd63e512d48ff89580191b55a95cc39f370bdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94bd63e512d48ff89580191b55a95cc39f370bdb/comments", "author": null, "committer": null, "parents": [{"sha": "352b3f3f2a32c75d2a615d4867ec0dcacced4ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/352b3f3f2a32c75d2a615d4867ec0dcacced4ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/352b3f3f2a32c75d2a615d4867ec0dcacced4ce6"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "a5e6fd2a1326e5c105f1492e655a29cf005e609e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94bd63e512d48ff89580191b55a95cc39f370bdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94bd63e512d48ff89580191b55a95cc39f370bdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94bd63e512d48ff89580191b55a95cc39f370bdb", "patch": "@@ -1,3 +1,9 @@\n+2001-05-03  Andrew Haley  <aph@cambridge.redhat.com>\n+\n+\t* reload1.c (copy_eh_notes): New function.\n+\t(emit_input_reload_insns): Call it.\n+\t(emit_output_reload_insns): Call it.\n+\n 2001-05-07  Zack Weinberg  <zackw@stanford.edu>\n \n \t* config.gcc (i[34567]86-*-sco3.2v4*, i[34567]86-*-sco*):"}, {"sha": "dbf99d62dacba4f00bdcfed899de317c8345ba13", "filename": "gcc/reload1.c", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94bd63e512d48ff89580191b55a95cc39f370bdb/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94bd63e512d48ff89580191b55a95cc39f370bdb/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=94bd63e512d48ff89580191b55a95cc39f370bdb", "patch": "@@ -454,6 +454,7 @@ static void move2add_note_store\t\tPARAMS ((rtx, rtx, void *));\n #ifdef AUTO_INC_DEC\n static void add_auto_inc_notes\t\tPARAMS ((rtx, rtx));\n #endif\n+static void copy_eh_notes\t\tPARAMS ((rtx, rtx));\n static HOST_WIDE_INT sext_for_mode\tPARAMS ((enum machine_mode,\n \t\t\t\t\t\t HOST_WIDE_INT));\n static void failed_reload\t\tPARAMS ((rtx, int));\n@@ -6571,10 +6572,13 @@ emit_input_reload_insns (chain, rl, old, j)\n \t\t  rl->when_needed);\n     }\n \n+  if (flag_non_call_exceptions)\n+    copy_eh_notes (insn, get_insns ());\n+\n   /* End this sequence.  */\n   *where = get_insns ();\n   end_sequence ();\n-\n+\t\t\t\t \n   /* Update reload_override_in so that delete_address_reloads_1\n      can see the actual register usage.  */\n   if (oldequiv_reg)\n@@ -6789,6 +6793,9 @@ emit_output_reload_insns (chain, rl, j)\n   else\n     output_reload_insns[rl->opnum] = get_insns ();\n \n+  if (flag_non_call_exceptions)\n+    copy_eh_notes (insn, get_insns ());\n+\n   end_sequence ();\n }\n \n@@ -9437,3 +9444,23 @@ add_auto_inc_notes (insn, x)\n     }\n }\n #endif\n+\n+/* Copy EH notes from an insn to its reloads.  */\n+static void\n+copy_eh_notes (insn, x)\n+     rtx insn;\n+     rtx x;\n+{\n+  rtx eh_note = find_reg_note (insn, REG_EH_REGION, NULL_RTX);\n+  if (eh_note)\n+    {\n+      for (; x != 0; x = NEXT_INSN (x))\n+\t{\n+\t  if (may_trap_p (PATTERN (x)))\n+\t    REG_NOTES (x) \n+\t      = gen_rtx_EXPR_LIST (REG_EH_REGION, XEXP (eh_note, 0),\n+\t\t\t\t   REG_NOTES (x));\n+\t}\n+    }\n+}\n+"}]}