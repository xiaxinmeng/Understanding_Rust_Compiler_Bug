{"sha": "4a0c473d52dfe48a2211322801a6aab71a20ab6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEwYzQ3M2Q1MmRmZTQ4YTIyMTEzMjI4MDFhNmFhYjcxYTIwYWI2Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-07-25T15:49:36Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-07-25T15:49:36Z"}, "message": "target-supports.exp (check_effective_target_arm_thumb1_ok): New.\n\n\t* lib/target-supports.exp (check_effective_target_arm_thumb1_ok):\n\tNew.\n\t* g++.dg/inherit/thunk8.C: Use it.\n\nFrom-SVN: r138143", "tree": {"sha": "c72b7e08fe604753b287e2f7918b8b813abe079f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c72b7e08fe604753b287e2f7918b8b813abe079f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a0c473d52dfe48a2211322801a6aab71a20ab6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0c473d52dfe48a2211322801a6aab71a20ab6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0c473d52dfe48a2211322801a6aab71a20ab6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0c473d52dfe48a2211322801a6aab71a20ab6f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ad8d488b18793242007402e7aaa7ea95ca28ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad8d488b18793242007402e7aaa7ea95ca28ca6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad8d488b18793242007402e7aaa7ea95ca28ca6"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "85ac795ca91eeb5965d78837c7191339adfc8bdb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0c473d52dfe48a2211322801a6aab71a20ab6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0c473d52dfe48a2211322801a6aab71a20ab6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a0c473d52dfe48a2211322801a6aab71a20ab6f", "patch": "@@ -1,3 +1,9 @@\n+2008-07-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_arm_thumb1_ok):\n+\tNew.\n+\t* g++.dg/inherit/thunk8.C: Use it.\n+\n 2008-07-24  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/winline-4.c: Remove."}, {"sha": "ef645356898dae2080c88841208b285efbc55c94", "filename": "gcc/testsuite/g++.dg/inherit/thunk8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0c473d52dfe48a2211322801a6aab71a20ab6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0c473d52dfe48a2211322801a6aab71a20ab6f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk8.C?ref=4a0c473d52dfe48a2211322801a6aab71a20ab6f", "patch": "@@ -3,7 +3,7 @@\n    Make sure that won't happen anymore.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target arm32 } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n /* { dg-options \"-mthumb -fPIC\" } */\n \n struct A {"}, {"sha": "5f426669265d3bf8726cef958f5aa06915d04aa9", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0c473d52dfe48a2211322801a6aab71a20ab6f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0c473d52dfe48a2211322801a6aab71a20ab6f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=4a0c473d52dfe48a2211322801a6aab71a20ab6f", "patch": "@@ -1249,6 +1249,17 @@ proc check_effective_target_arm_neon_ok { } {\n     }\n }\n \n+# Return 1 is this is an ARM target where -mthumb causes Thumb-1 to be\n+# used.\n+\n+proc check_effective_target_arm_thumb1_ok { } {\n+    return [check_no_compiler_messages arm_thumb1_ok assembly {\n+\t#if !defined(__arm__) || !defined(__thumb__) || defined(__thumb2__)\n+\t#error FOO\n+\t#endif\n+    } \"-mthumb\"]\n+}\n+\n # Return 1 if the target supports executing NEON instructions, 0\n # otherwise.  Cache the result.\n "}]}