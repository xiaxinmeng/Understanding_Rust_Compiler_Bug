{"sha": "879e1011e07e7d325cd9e8a32d8b993b3b03839c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc5ZTEwMTFlMDdlN2QzMjVjZDllOGEzMmQ4Yjk5M2IzYjAzODM5Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-06-22T21:46:17Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-06-22T21:46:17Z"}, "message": "invoke.cc: Avoid -Wall warnings.\n\n2011-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/20_util/reference_wrapper/invoke.cc: Avoid -Wall warnings.\n\t* testsuite/20_util/reference_wrapper/typedefs-3.cc: Likewise.\n\t* testsuite/20_util/reference_wrapper/invoke-2.cc: Likewise.\n\t* testsuite/20_util/allocator_traits/members/allocate_hint.cc:\n\tLikewise.\n\t* testsuite/20_util/ratio/operations/ops_overflow_neg.cc: Likewise.\n\t* testsuite/20_util/bind/socket.cc: Likewise.\n\t* testsuite/20_util/pointer_traits/pointer_to.cc: Likewise.\n\t* testsuite/util/testsuite_random.h: Likewise.\n\nFrom-SVN: r175318", "tree": {"sha": "770d6b28b79543c7cb65dfc5ae3aa98a5eae8284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/770d6b28b79543c7cb65dfc5ae3aa98a5eae8284"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/879e1011e07e7d325cd9e8a32d8b993b3b03839c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/879e1011e07e7d325cd9e8a32d8b993b3b03839c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/879e1011e07e7d325cd9e8a32d8b993b3b03839c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/879e1011e07e7d325cd9e8a32d8b993b3b03839c/comments", "author": null, "committer": null, "parents": [{"sha": "96427cb5a91e83af7b1788bf334d0844cebb8213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96427cb5a91e83af7b1788bf334d0844cebb8213", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96427cb5a91e83af7b1788bf334d0844cebb8213"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "97e0b3764a353148d6f9fa3129a7e69f728f8c15", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -1,3 +1,15 @@\n+2011-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/20_util/reference_wrapper/invoke.cc: Avoid -Wall warnings.\n+\t* testsuite/20_util/reference_wrapper/typedefs-3.cc: Likewise.\n+\t* testsuite/20_util/reference_wrapper/invoke-2.cc: Likewise.\n+\t* testsuite/20_util/allocator_traits/members/allocate_hint.cc:\n+\tLikewise.\n+\t* testsuite/20_util/ratio/operations/ops_overflow_neg.cc: Likewise.\n+\t* testsuite/20_util/bind/socket.cc: Likewise.\n+\t* testsuite/20_util/pointer_traits/pointer_to.cc: Likewise.\n+\t* testsuite/util/testsuite_random.h: Likewise.\n+\n 2011-06-22  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/Makefile.am: Add alloc_traits.h headers."}, {"sha": "e5a57a2c0afcf82986fcf9c004a4c7bdd2bff499", "filename": "libstdc++-v3/testsuite/20_util/allocator_traits/members/allocate_hint.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fallocate_hint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fallocate_hint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fallocator_traits%2Fmembers%2Fallocate_hint.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -51,7 +51,7 @@ void test01()\n   typedef std::allocator_traits<hintable_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   traits_type::const_void_pointer v;\n-  X* p = traits_type::allocate(a, 1, v);\n+  X* p __attribute__((unused)) = traits_type::allocate(a, 1, v);\n   VERIFY( a.called );\n }\n \n@@ -79,7 +79,7 @@ void test02()\n   typedef std::allocator_traits<unhintable_allocator<X>> traits_type;\n   traits_type::allocator_type a;\n   traits_type::const_void_pointer v;\n-  X* p = traits_type::allocate(a, 1, v);\n+  X* p __attribute__((unused)) = traits_type::allocate(a, 1, v);\n   VERIFY( a.called );\n }\n "}, {"sha": "041100f85c21eb474a8ad69487ac2739367157c6", "filename": "libstdc++-v3/testsuite/20_util/bind/socket.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fsocket.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fsocket.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2Fsocket.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -35,7 +35,7 @@ int test01()\n {\n   int fd = 1;\n   my_sockaddr sa;           // N.B. non-const\n-  size_t len = sizeof(sa);  // N.B. size_t not socklen_t\n+  size_t len __attribute__((unused)) = sizeof(sa); // N.B. size_t not socklen_t\n   return bind(fd, &sa, sizeof(sa));\n }\n "}, {"sha": "33c96e17b2adc042b09a1459d9dac3973e0e59ec", "filename": "libstdc++-v3/testsuite/20_util/pointer_traits/pointer_to.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpointer_traits%2Fpointer_to.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpointer_traits%2Fpointer_to.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpointer_traits%2Fpointer_to.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -32,7 +32,7 @@ struct Ptr\n void test01()\n {\n   bool test = true;\n-  Ptr p{&test};\n+  Ptr p __attribute__((unused)) {&test};\n \n   VERIFY( std::pointer_traits<Ptr>::pointer_to(test).value == &test );\n }"}, {"sha": "7483016b6160cf2632f349bc099238604fa9330c", "filename": "libstdc++-v3/testsuite/20_util/ratio/operations/ops_overflow_neg.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Foperations%2Fops_overflow_neg.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -26,19 +26,22 @@\n void\n test01()\n {\n-  std::ratio_add<std::ratio<INTMAX_MAX, 1>, std::ratio<1>>::type r1;\n+  std::ratio_add<std::ratio<INTMAX_MAX, 1>, std::ratio<1>>::type r1\n+    __attribute__((unused));\n }\n \n void\n test02()\n {  \n-  std::ratio_multiply<std::ratio<-INTMAX_MAX, 2>, std::ratio<3, 2>>::type r1;\n-  std::ratio_multiply<std::ratio<INTMAX_MAX>, std::ratio<INTMAX_MAX>>::type r2;\n+  std::ratio_multiply<std::ratio<-INTMAX_MAX, 2>, std::ratio<3, 2>>::type r1\n+    __attribute__((unused));\n+  std::ratio_multiply<std::ratio<INTMAX_MAX>, std::ratio<INTMAX_MAX>>::type r2\n+    __attribute__((unused));\n }\n \n // { dg-error \"required from here\" \"\" { target *-*-* } 29 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 35 }\n // { dg-error \"required from here\" \"\" { target *-*-* } 36 }\n+// { dg-error \"required from here\" \"\" { target *-*-* } 38 }\n // { dg-error \"overflow in addition\" \"\" { target *-*-* } 432 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 104 }\n // { dg-error \"overflow in multiplication\" \"\" { target *-*-* } 100 }"}, {"sha": "01217a4053808f6eede2fca40d277288002b2ea2", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/invoke-2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke-2.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -36,8 +36,8 @@ void test01()\n   X x = { };\n   std::ref(m)(x, 1);\n   std::ref(m)(&x, 1);\n-  int& i1 = std::ref(m2)(x);\n-  int& i2 = std::ref(m2)(&x);\n+  int& i1 __attribute__((unused)) = std::ref(m2)(x);\n+  int& i2 __attribute__((unused)) = std::ref(m2)(&x);\n }\n \n int main()"}, {"sha": "028fe0220145483e894451a48da9d648aa815b91", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/invoke.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Finvoke.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -75,7 +75,8 @@ void test01()\n   int (::X::* p_foo_c)(float) const = &::X::foo_c;\n   int (::X::* p_foo_v)(float) volatile = &::X::foo_v;\n   int (::X::* p_foo_cv)(float) const volatile = &::X::foo_cv;\n-  int (::X::* p_foo_varargs)(float, ...) = &::X::foo_varargs;\n+  int (::X::* p_foo_varargs)(float, ...) __attribute__((unused))\n+    = &::X::foo_varargs;\n   int ::X::* p_bar = &::X::bar;\n \n   const float pi = 3.14;"}, {"sha": "0920ae4d97863e910c6374ce0eb2b2bd761b7cb9", "filename": "libstdc++-v3/testsuite/20_util/reference_wrapper/typedefs-3.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Freference_wrapper%2Ftypedefs-3.cc?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -124,14 +124,14 @@ struct test_1st_2nd_arg_types<T, true>\n template<typename T>\n   void test()\n   {\n-    test_arg_type<T> t;\n-    test_arg_type<const T> tc;\n-    test_arg_type<volatile T> tv;\n-    test_arg_type<const volatile T> tcv;\n-    test_1st_2nd_arg_types<T> t12;\n-    test_1st_2nd_arg_types<const T> t12c;\n-    test_1st_2nd_arg_types<volatile T> t12v;\n-    test_1st_2nd_arg_types<const volatile T> t12cv;\n+    test_arg_type<T> t __attribute__((unused));\n+    test_arg_type<const T> tc __attribute__((unused));\n+    test_arg_type<volatile T> tv __attribute__((unused));\n+    test_arg_type<const volatile T> tcv __attribute__((unused));\n+    test_1st_2nd_arg_types<T> t12 __attribute__((unused));\n+    test_1st_2nd_arg_types<const T> t12c __attribute__((unused));\n+    test_1st_2nd_arg_types<volatile T> t12v __attribute__((unused));\n+    test_1st_2nd_arg_types<const volatile T> t12cv __attribute__((unused));\n   }\n \n int main()"}, {"sha": "950a9aeaa1ca59874861aa0382a648491c5f855d", "filename": "libstdc++-v3/testsuite/util/testsuite_random.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_random.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879e1011e07e7d325cd9e8a32d8b993b3b03839c/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_random.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_random.h?ref=879e1011e07e7d325cd9e8a32d8b993b3b03839c", "patch": "@@ -48,7 +48,7 @@ namespace __gnu_test\n       for (unsigned long i = 0; i < N; i++)\n \t{\n \t  auto r = f();\n-\t  if (r >= 0 && r < BINS)\n+\t  if (r >= 0 && (unsigned long)r < BINS)\n \t    count[r]++;\n \t}\n \n@@ -116,7 +116,7 @@ namespace __gnu_test\n     if (!wl.size())\n       wl = { 1.0 };\n \n-    if (k < 0 || k >= wl.size())\n+    if (k < 0 || (std::size_t)k >= wl.size())\n       return 0.0;\n     else\n       {"}]}