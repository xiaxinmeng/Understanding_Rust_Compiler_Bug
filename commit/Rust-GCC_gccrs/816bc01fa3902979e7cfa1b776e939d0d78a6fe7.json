{"sha": "816bc01fa3902979e7cfa1b776e939d0d78a6fe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE2YmMwMWZhMzkwMjk3OWU3Y2ZhMWI3NzZlOTM5ZDBkNzhhNmZlNw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-01-05T09:35:05Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-01-05T09:35:05Z"}, "message": "I am a moron.\n\nFrom-SVN: r75421", "tree": {"sha": "7c6b4dc19cdefe5cd47f1a3e955ab61f4eea99c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c6b4dc19cdefe5cd47f1a3e955ab61f4eea99c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/816bc01fa3902979e7cfa1b776e939d0d78a6fe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/816bc01fa3902979e7cfa1b776e939d0d78a6fe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/816bc01fa3902979e7cfa1b776e939d0d78a6fe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/816bc01fa3902979e7cfa1b776e939d0d78a6fe7/comments", "author": null, "committer": null, "parents": [{"sha": "a6008bd88abf03dbad82293089fef08d534fdaeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6008bd88abf03dbad82293089fef08d534fdaeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6008bd88abf03dbad82293089fef08d534fdaeb"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "650eafc75362782e23239b62ce2ce51abca7887d", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/816bc01fa3902979e7cfa1b776e939d0d78a6fe7/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/816bc01fa3902979e7cfa1b776e939d0d78a6fe7/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=816bc01fa3902979e7cfa1b776e939d0d78a6fe7", "patch": "@@ -3015,9 +3015,8 @@ rest_of_handle_loop_optimize (tree decl, rtx insns)\n    sooner, but we want the profile feedback to work more\n    efficiently.  */\n static void\n-rest_of_handle_loop2 (tree decl ATTRIBUTE_UNUSED, rtx insns ATTRIBUTE_UNUSED)\n+rest_of_handle_loop2 (tree decl, rtx insns)\n {\n-#if 0\n   struct loops *loops;\n   timevar_push (TV_LOOP);\n   open_dump_file (DFI_loop2, decl);\n@@ -3049,7 +3048,6 @@ rest_of_handle_loop2 (tree decl ATTRIBUTE_UNUSED, rtx insns ATTRIBUTE_UNUSED)\n   close_dump_file (DFI_loop2, print_rtl_with_bb, get_insns ());\n   timevar_pop (TV_LOOP);\n   ggc_collect ();\n-#endif\n }\n \n /* This is called from finish_function (within langhooks.parse_file)\n@@ -3281,9 +3279,6 @@ rest_of_compilation (tree decl)\n \n       if (flag_loop_optimize)\n \trest_of_handle_loop_optimize (decl, insns);\n-\n-      if (flag_gcse)\n-\trest_of_handle_jump_bypass (decl, insns);\n     }\n \n   timevar_push (TV_FLOW);\n@@ -3311,11 +3306,16 @@ rest_of_compilation (tree decl)\n   if (flag_tracer)\n     rest_of_handle_tracer (decl, insns);\n \n-  if (optimize > 0\n-      && (flag_unswitch_loops\n+  if (optimize > 0)\n+    {\n+      if (flag_unswitch_loops\n \t  || flag_peel_loops\n-\t  || flag_unroll_loops))\n-    rest_of_handle_loop2 (decl, insns);\n+\t  || flag_unroll_loops)\n+\trest_of_handle_loop2 (decl, insns);\n+\n+      if (flag_gcse)\n+\trest_of_handle_jump_bypass (decl, insns);\n+    }\n \n   if (flag_web)\n     rest_of_handle_web (decl, insns);"}]}