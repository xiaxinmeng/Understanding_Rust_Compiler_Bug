{"sha": "9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkNWY5ZjYwNDI3ZDNlMzFiYTc5ODZmMjBjZmMwYTZkODJhMDNhYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-10-01T19:18:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-10-01T19:18:06Z"}, "message": "(emit_reload_insns): Add a case to handle\nSECONDARY_MEMORY_NEEDED in the SECONDARY_OUTPUT_RELOAD_CLASS code.\n\nFrom-SVN: r2302", "tree": {"sha": "b9685109eb138a7965830fabf3dbd39fdd78e030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9685109eb138a7965830fabf3dbd39fdd78e030"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa/comments", "author": null, "committer": null, "parents": [{"sha": "ae51bd971e8d262b62459d992d7086e42642f168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae51bd971e8d262b62459d992d7086e42642f168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae51bd971e8d262b62459d992d7086e42642f168"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "31b1dfa6b900355672728b41bc3c89ed4a06616c", "filename": "gcc/reload1.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=9ad5f9f60427d3e31ba7986f20cfc0a6d82a03aa", "patch": "@@ -5375,6 +5375,35 @@ emit_reload_insns (insn)\n \t\t\t  pat = (GEN_FCN (tertiary_icode)\n \t\t\t\t (reloadreg, second_reloadreg, third_reloadreg));\n \t\t\t}\n+#ifdef SECONDARY_MEMORY_NEEDED\n+\t\t      /* If we need a memory location to do the move, do it that way.  */\n+\t\t      else if (GET_CODE (reloadreg) == REG\n+\t\t\t       && REGNO (reloadreg) < FIRST_PSEUDO_REGISTER\n+\t\t\t       && SECONDARY_MEMORY_NEEDED (REGNO_REG_CLASS (REGNO (reloadreg)),\n+\t\t\t\t\t   REGNO_REG_CLASS (REGNO (second_reloadreg)),\n+\t\t\t\t\t   GET_MODE (second_reloadreg)))\n+\t\t\t{\n+\t\t\t  /* Get the memory to use and rewrite both registers\n+\t\t\t     to its mode.  */\n+\t\t\t  rtx loc = get_secondary_mem (reloadreg,\n+\t\t\t\t\t\t       GET_MODE (second_reloadreg));\n+\t\t\t  rtx tmp_reloadreg;\n+\t\t\t    \n+\t\t\t  if (GET_MODE (loc) != GET_MODE (second_reloadreg))\n+\t\t\t    second_reloadreg = gen_rtx (REG, GET_MODE (loc),\n+\t\t\t\t\t\t\tREGNO (second_reloadreg));\n+\t\t\t  \n+\t\t\t  if (GET_MODE (loc) != GET_MODE (reloadreg))\n+\t\t\t    tmp_reloadreg = gen_rtx (REG, GET_MODE (loc),\n+\t\t\t\t\t\t     REGNO (reloadreg));\n+\t\t\t  else\n+\t\t\t    tmp_reloadreg = reloadreg;\n+\t\t\t  \n+\t\t\t  emit_insn_before (gen_move_insn (loc, second_reloadreg),\n+\t\t\t\t\t    first_output_reload_insn);\n+\t\t\t  pat = gen_move_insn (tmp_reloadreg, loc);\n+\t\t\t}\n+#endif\n \t\t      else\n \t\t\tpat = gen_move_insn (reloadreg, second_reloadreg);\n "}]}