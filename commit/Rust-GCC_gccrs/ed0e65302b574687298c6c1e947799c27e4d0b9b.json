{"sha": "ed0e65302b574687298c6c1e947799c27e4d0b9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwZTY1MzAyYjU3NDY4NzI5OGM2YzFlOTQ3Nzk5YzI3ZTRkMGI5Yg==", "commit": {"author": {"name": "Philip Blundell", "email": "pb@nexus.co.uk", "date": "1999-07-23T13:19:49Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "1999-07-23T13:19:49Z"}, "message": "arm.h (TARGET_SWITCHES): Add -m{no-}single-pic-base.\n\n* config/arm/arm.h (TARGET_SWITCHES): Add\n-m{no-}single-pic-base.  Correct help string for -mshort-load-words.\n(TARGET_OPTIONS): Add -mpic-register=.\n(ARM_FLAG_SINGLE_PIC_BASE, TARGET_SINGLE_PIC_BASE): Define.\n(arm_pic_register_string): Declare.\n(NEED_PLT_GOT): Delete, replace with ...\n(NEED_GOT_RELOC, NEED_PLT_RELOC): ... these.  New macros.\n(OUTPUT_INT_ADDR_CONST): Replace NEED_PLT_GOT with NEED_GOT_RELOC.\n(ASM_OUTPUT_MI_THUNK): Replace NEED_PLT_GOT with NEED_PLT_RELOC.\n* config/arm/arm.c (arm_override_options): Add new option\n-mpic-register=N.\n(arm_pic_register_string): New variable.\n(arm_finalize_pic): Respect TARGET_SINGLE_PIC_BASE.\n(output_func_prologue): If TARGET_SINGLE_PIC_BASE, treat the PIC\nregister as never live.  Use NEED_PLT_RELOC not NEED_PLT_GOT.\n(output_return_instruction): Likewise.\n* config/arm/elf.h (NEED_PLT_GOT): Delete, replace with ...\n(NEED_GOT_RELOC, NEED_PLT_RELOC): ... these.  Define to flag_pic.\n* config/arm/arm.md: Use NEED_PLT_RELOC in place of NEED_PLT_GOT.\n\n* invoke.texi (ARM Options): Fix spelling.  Remove duplicate\nmention of -msched-prolog.  Document new options -msingle-pic-base\nand -mpic-register=.\n\nFrom-SVN: r28227", "tree": {"sha": "19da1682a58ea729ccd498c477ae585bf6a6d7fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19da1682a58ea729ccd498c477ae585bf6a6d7fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed0e65302b574687298c6c1e947799c27e4d0b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0e65302b574687298c6c1e947799c27e4d0b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0e65302b574687298c6c1e947799c27e4d0b9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0e65302b574687298c6c1e947799c27e4d0b9b/comments", "author": null, "committer": null, "parents": [{"sha": "59ba45cdbfbe0e667e38e24cf0935b6e060efef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ba45cdbfbe0e667e38e24cf0935b6e060efef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59ba45cdbfbe0e667e38e24cf0935b6e060efef8"}], "stats": {"total": 144, "additions": 113, "deletions": 31}, "files": [{"sha": "f47bb6f5824757d370ddf429f5d515f0386c7527", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed0e65302b574687298c6c1e947799c27e4d0b9b", "patch": "@@ -1,3 +1,29 @@\n+Fri Jul 23 14:09:58 1999  Philip Blundell  <pb@nexus.co.uk>\n+\n+\t* config/arm/arm.h (TARGET_SWITCHES): Add \n+\t-m{no-}single-pic-base.  Correct help string for -mshort-load-words.\n+\t(TARGET_OPTIONS): Add -mpic-register=.\n+\t(ARM_FLAG_SINGLE_PIC_BASE, TARGET_SINGLE_PIC_BASE): Define.\n+\t(arm_pic_register_string): Declare.\n+\t(NEED_PLT_GOT): Delete, replace with ...\n+\t(NEED_GOT_RELOC, NEED_PLT_RELOC): ... these.  New macros.\n+\t(OUTPUT_INT_ADDR_CONST): Replace NEED_PLT_GOT with NEED_GOT_RELOC.\n+\t(ASM_OUTPUT_MI_THUNK): Replace NEED_PLT_GOT with NEED_PLT_RELOC.\n+\t* config/arm/arm.c (arm_override_options): Add new option\n+ \t-mpic-register=N.\n+\t(arm_pic_register_string): New variable.\n+\t(arm_finalize_pic): Respect TARGET_SINGLE_PIC_BASE.\n+\t(output_func_prologue): If TARGET_SINGLE_PIC_BASE, treat the PIC\n+\tregister as never live.  Use NEED_PLT_RELOC not NEED_PLT_GOT.\n+\t(output_return_instruction): Likewise. \n+\t* config/arm/elf.h (NEED_PLT_GOT): Delete, replace with ...\n+\t(NEED_GOT_RELOC, NEED_PLT_RELOC): ... these.  Define to flag_pic.\n+\t* config/arm/arm.md: Use NEED_PLT_RELOC in place of NEED_PLT_GOT.\n+\n+\t* invoke.texi (ARM Options): Fix spelling.  Remove duplicate\n+\tmention of -msched-prolog.  Document new options -msingle-pic-base \n+\tand -mpic-register=.\n+\n Thu Jul 22 18:23:56 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* haifa-sched.c (reemit_notes): Tidy."}, {"sha": "f970becbaaeb78a22a31940eb8bcaaa92ed787a9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ed0e65302b574687298c6c1e947799c27e4d0b9b", "patch": "@@ -142,6 +142,7 @@ enum machine_mode output_memory_reference_mode;\n int current_function_anonymous_args;\n \n /* The register number to be used for the PIC offset register.  */\n+const char * arm_pic_register_string = NULL;\n int arm_pic_register = 9;\n \n /* Set to one if we think that lr is only saved because of subroutine calls,\n@@ -528,7 +529,8 @@ arm_override_options ()\n   \n   /* For arm2/3 there is no need to do any scheduling if there is only\n      a floating point emulator, or we are doing software floating-point.  */\n-  if ((TARGET_SOFT_FLOAT || arm_fpu != FP_HARD) && (tune_flags & FL_MODE32) == 0)\n+  if ((TARGET_SOFT_FLOAT || arm_fpu != FP_HARD)\n+      && (tune_flags & FL_MODE32) == 0)\n     flag_schedule_insns = flag_schedule_insns_after_reload = 0;\n   \n   arm_prog_mode = TARGET_APCS_32 ? PROG_MODE_PROG32 : PROG_MODE_PROG26;\n@@ -542,6 +544,25 @@ arm_override_options ()\n       else\n \twarning (\"Structure size boundary can only be set to 8 or 32\");\n     }\n+\n+  if (arm_pic_register_string != NULL)\n+    {\n+      int pic_register;\n+\n+      if (! flag_pic)\n+\twarning (\"-mpic-register= is useless without -fpic\");\n+\n+      pic_register = decode_reg_name (arm_pic_register_string);\n+      \n+      /* Prevent the user from choosing an obviously stupid PIC register.  */\n+      if (pic_register < 0 || call_used_regs[pic_register]\n+\t  || pic_register == HARD_FRAME_POINTER_REGNUM\n+\t  || pic_register == STACK_POINTER_REGNUM\n+\t  || pic_register >= PC_REGNUM)\n+\terror (\"Unable to use '%s' for PIC register\", arm_pic_register_string);\n+      else\n+\tarm_pic_register = pic_register;\n+    }\n   \n   /* If optimizing for space, don't synthesize constants.\n      For processors with load scheduling, it never costs more than 2 cycles\n@@ -1556,7 +1577,7 @@ arm_finalize_pic ()\n   rtx l1, pic_tmp, pic_tmp2, seq;\n   rtx global_offset_table;\n \n-  if (current_function_uses_pic_offset_table == 0)\n+  if (current_function_uses_pic_offset_table == 0 || TARGET_SINGLE_PIC_BASE)\n     return;\n \n   if (! flag_pic)\n@@ -5353,7 +5374,7 @@ output_return_instruction (operand, really_return, reverse)\n \n       /* Otherwise, trap an attempted return by aborting. */\n       ops[0] = operand;\n-      ops[1] = gen_rtx_SYMBOL_REF (Pmode, NEED_PLT_GOT ? \"abort(PLT)\" \n+      ops[1] = gen_rtx_SYMBOL_REF (Pmode, NEED_PLT_RELOC ? \"abort(PLT)\" \n \t\t\t\t   : \"abort\");\n       assemble_external_libcall (ops[1]);\n       output_asm_insn (reverse ? \"bl%D0\\t%a1\" : \"bl%d0\\t%a1\", ops);\n@@ -5367,7 +5388,8 @@ output_return_instruction (operand, really_return, reverse)\n     if (regs_ever_live[reg] && ! call_used_regs[reg])\n       live_regs++;\n \n-  if (flag_pic && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n+  if (flag_pic && ! TARGET_SINGLE_PIC_BASE\n+      && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n     live_regs++;\n \n   if (live_regs || (regs_ever_live[LR_REGNUM] && ! lr_save_eliminated))\n@@ -5391,7 +5413,8 @@ output_return_instruction (operand, really_return, reverse)\n       for (reg = 0; reg <= 10; reg++)\n         if (regs_ever_live[reg]\n \t    && (! call_used_regs[reg]\n-\t\t|| (flag_pic && reg == PIC_OFFSET_TABLE_REGNUM)))\n+\t\t|| (flag_pic && ! TARGET_SINGLE_PIC_BASE\n+\t\t    && reg == PIC_OFFSET_TABLE_REGNUM)))\n           {\n \t    strcat (instr, \"%|\");\n             strcat (instr, reg_names[reg]);\n@@ -5551,7 +5574,8 @@ output_func_prologue (f, frame_size)\n     if (regs_ever_live[reg] && ! call_used_regs[reg])\n       live_regs_mask |= (1 << reg);\n \n-  if (flag_pic && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n+  if (flag_pic && ! TARGET_SINGLE_PIC_BASE \n+      && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n     live_regs_mask |= (1 << PIC_OFFSET_TABLE_REGNUM);\n \n   if (frame_pointer_needed)\n@@ -5617,7 +5641,7 @@ output_func_epilogue (f, frame_size)\n   if (TARGET_ABORT_NORETURN && volatile_func)\n     {\n       rtx op;\n-      op = gen_rtx_SYMBOL_REF (Pmode, NEED_PLT_GOT ? \"abort(PLT)\" : \"abort\");\n+      op = gen_rtx_SYMBOL_REF (Pmode, NEED_PLT_RELOC ? \"abort(PLT)\" : \"abort\");\n       assemble_external_libcall (op);\n       output_asm_insn (\"bl\\t%a0\", &op);\n       goto epilogue_done;\n@@ -5630,7 +5654,10 @@ output_func_epilogue (f, frame_size)\n \tfloats_offset += 4;\n       }\n \n-  if (flag_pic && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n+  /* If we aren't loading the PIC register, don't stack it even though it may\n+     be live.  */\n+  if (flag_pic && ! TARGET_SINGLE_PIC_BASE \n+      && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n     {\n       live_regs_mask |= (1 << PIC_OFFSET_TABLE_REGNUM);\n       floats_offset += 4;"}, {"sha": "5b43259aad299275c85188a58b259197ad6ddeb6", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=ed0e65302b574687298c6c1e947799c27e4d0b9b", "patch": "@@ -319,6 +319,9 @@ Unrecognized value in TARGET_CPU_DEFAULT.\n function tries to return. */\n #define ARM_FLAG_ABORT_NORETURN\t(1 << 13)\n \n+/* Nonzero if function prologues should not load the PIC register. */\n+#define ARM_FLAG_SINGLE_PIC_BASE\t(1 << 14)\n+\n #define TARGET_APCS\t\t\t(target_flags & ARM_FLAG_APCS_FRAME)\n #define TARGET_POKE_FUNCTION_NAME\t(target_flags & ARM_FLAG_POKE)\n #define TARGET_FPE\t\t\t(target_flags & ARM_FLAG_FPE)\n@@ -341,6 +344,7 @@ function tries to return. */\n #define TARGET_LITTLE_WORDS\t\t(target_flags & ARM_FLAG_LITTLE_WORDS)\n #define TARGET_NO_SCHED_PRO\t\t(target_flags & ARM_FLAG_NO_SCHED_PRO)\n #define TARGET_ABORT_NORETURN           (target_flags & ARM_FLAG_ABORT_NORETURN)\n+#define TARGET_SINGLE_PIC_BASE\t\t(target_flags & ARM_FLAG_SINGLE_PIC_BASE)\n \n /* SUBTARGET_SWITCHES is used to add flags on a per-config basis.\n    Bit 31 is reserved.  See riscix.h.  */\n@@ -374,7 +378,7 @@ function tries to return. */\n      \"Load shorts a byte at a time\" },\t\t\t\t\\\n   {\"no-short-load-bytes\",      -ARM_FLAG_SHORT_BYTE, \"\" },\t\\\n   {\"short-load-words\",\t       -ARM_FLAG_SHORT_BYTE,\t\t\\\n-     \"Load words a byte at a time\" },\t\t\t\t\\\n+     \"Load shorts a word at a time\" },\t\t\t\t\\\n   {\"no-short-load-words\",\tARM_FLAG_SHORT_BYTE, \"\" },\t\\\n   {\"soft-float\",\t\tARM_FLAG_SOFT_FLOAT,\t\t\\\n      \"Use library calls to perform FP operations\" },\t\t\\\n@@ -395,6 +399,9 @@ function tries to return. */\n   {\"sched-prolog\",             -ARM_FLAG_NO_SCHED_PRO,\t\t\\\n      \"Do not move instructions into a function's prologue\" },\t\\\n   {\"no-sched-prolog\",           ARM_FLAG_NO_SCHED_PRO, \"\" },\t\\\n+  {\"single-pic-base\",\t\tARM_FLAG_SINGLE_PIC_BASE,\t\\\n+     \"Do not load the PIC register in function prologues\" },\t\\\n+  {\"no-single-pic-base\",\t-ARM_FLAG_SINGLE_PIC_BASE, \"\" },\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\t\\\n   {\"\",\t\t\t\tTARGET_DEFAULT }\t\t\\\n }\n@@ -410,7 +417,9 @@ function tries to return. */\n   {\"fp=\",   & target_fp_name,\t\t\t\t\t\\\n      \"Specify the version of the floating point emulator\" },\t\\\n   { \"structure-size-boundary=\", & structure_size_string, \t\\\n-      \"Specify the minumum bit alignment of structures\" } \t\\\n+     \"Specify the minumum bit alignment of structures\" }, \t\\\n+  { \"pic-register=\", & arm_pic_register_string,\t\t\t\\\n+     \"Specify the register to be used for PIC addressing\" }\t\\\n }\n \n struct arm_cpu_select\n@@ -492,9 +501,12 @@ extern int arm_is_6_or_7;\n \n /* Nonzero if PIC code requires explicit qualifiers to generate\n    PLT and GOT relocs rather than the assembler doing so implicitly.\n-   Subtargets can override this if required.  */\n-#ifndef NEED_PLT_GOT\n-#define NEED_PLT_GOT\t0\n+   Subtargets can override these if required.  */\n+#ifndef NEED_GOT_RELOC\n+#define NEED_GOT_RELOC\t0\n+#endif\n+#ifndef NEED_PLT_RELOC\n+#define NEED_PLT_RELOC\t0\n #endif\n \n /* Nonzero if we need to refer to the GOT with a PC-relative\n@@ -1842,6 +1854,9 @@ enum reg_class\n    using sb (r9) all the time.  */\n extern int arm_pic_register;\n \n+/* Used when parsing command line option -mpic-register=.  */\n+extern const char * arm_pic_register_string;\n+\n /* The register number of the register used to address a table of static\n    data addresses in memory.  */\n #define PIC_OFFSET_TABLE_REGNUM arm_pic_register\n@@ -2102,7 +2117,7 @@ extern struct rtx_def * arm_compare_op1;\n \t\t\t\t\t\t\t\t\t\\\n     /* Mark symbols as position independent.  We only do this in the\t\\\n       .text segment, not in the .data segment. */\t\t\t\\\n-    if (NEED_PLT_GOT && flag_pic && making_const_table &&\t\t\\\n+    if (NEED_GOT_RELOC && flag_pic && making_const_table &&\t\t\\\n     \t(GET_CODE (X) == SYMBOL_REF || GET_CODE (X) == LABEL_REF))\t\\\n      {\t\t\t\t\t\t\t\t\t\\\n         if (GET_CODE (X) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P (X))\t\\\n@@ -2141,7 +2156,7 @@ extern struct rtx_def * arm_compare_op1;\n         }\t\t\t\t\t\t\t\t\t\\\n       fputs (\"\\tb\\t\", FILE);\t\t\t\t\t\t\t\\\n       assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t\t\\\n-      if (NEED_PLT_GOT)\t\t\t\t\t\t\t\t\\\n+      if (NEED_PLT_RELOC)\t\t\t\t\t\t\t\t\\\n         fputs (\"(PLT)\", FILE);\t\t\t\t\t\t\t\\\n       fputc ('\\n', FILE);\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\t\\"}, {"sha": "3abd60c2a85a63f24d47d9503b1f813e91fce7f7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ed0e65302b574687298c6c1e947799c27e4d0b9b", "patch": "@@ -4248,7 +4248,7 @@\n   \"GET_CODE (operands[0]) == SYMBOL_REF\"\n   \"*\n   {\n-    return NEED_PLT_GOT ? \\\"bl%?\\\\t%a0(PLT)\\\" : \\\"bl%?\\\\t%a0\\\";\n+    return NEED_PLT_RELOC ? \\\"bl%?\\\\t%a0(PLT)\\\" : \\\"bl%?\\\\t%a0\\\";\n   }\"\n [(set_attr \"type\" \"call\")])\n \n@@ -4260,7 +4260,7 @@\n   \"GET_CODE(operands[1]) == SYMBOL_REF\"\n   \"*\n   {\n-    return NEED_PLT_GOT ? \\\"bl%?\\\\t%a1(PLT)\\\" : \\\"bl%?\\\\t%a1\\\";\n+    return NEED_PLT_RELOC ? \\\"bl%?\\\\t%a1(PLT)\\\" : \\\"bl%?\\\\t%a1\\\";\n   }\"\n [(set_attr \"type\" \"call\")])\n \n@@ -5991,7 +5991,7 @@\n   }\n \n   output_return_instruction (NULL, FALSE, FALSE);\n-  return NEED_PLT_GOT ? \\\"b%?\\\\t%a0(PLT)\\\" : \\\"b%?\\\\t%a0\\\";\n+  return NEED_PLT_RELOC ? \\\"b%?\\\\t%a0(PLT)\\\" : \\\"b%?\\\\t%a0\\\";\n }\"\n [(set_attr \"type\" \"call\")\n  (set_attr \"length\" \"8\")])\n@@ -6019,7 +6019,7 @@\n   }\n \n   output_return_instruction (NULL, FALSE, FALSE);\n-  return NEED_PLT_GOT ? \\\"b%?\\\\t%a1(PLT)\\\" : \\\"b%?\\\\t%a1\\\";\n+  return NEED_PLT_RELOC ? \\\"b%?\\\\t%a1(PLT)\\\" : \\\"b%?\\\\t%a1\\\";\n }\"\n [(set_attr \"type\" \"call\")\n  (set_attr \"length\" \"8\")])"}, {"sha": "3b71229de7413b8b654908ae761e17a9cdddadf8", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=ed0e65302b574687298c6c1e947799c27e4d0b9b", "patch": "@@ -354,7 +354,8 @@ dtors_section ()\t\t\t\t\t\t\t\\\n   while (0)\n \n /* For PIC code we need to explicitly specify (PLT) and (GOT) relocs.  */\n-#define NEED_PLT_GOT\tflag_pic\n+#define NEED_PLT_RELOC\tflag_pic\n+#define NEED_GOT_RELOC\tflag_pic\n \n /* The ELF assembler handles GOT addressing differently to NetBSD.  */\n #define GOT_PCREL\t0"}, {"sha": "12f3682c869b46666d4b8907d2900049d83000a7", "filename": "gcc/invoke.texi", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed0e65302b574687298c6c1e947799c27e4d0b9b/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=ed0e65302b574687298c6c1e947799c27e4d0b9b", "patch": "@@ -263,8 +263,9 @@ in the following sections.\n -mstructure-size-boundary=\n -mbsd -mxopen -mno-symrename\n -mabort-on-noreturn\n--mno-sched-prolog\n -mnop-fun-dllimport -mno-nop-fun-dllimport\n+-msingle-pic-base -mno-single-pic-base\n+-mpic-register=\n \n @emph{Thumb Options}\n -mtpcs-frame -mno-tpcs-frame\n@@ -4172,7 +4173,7 @@ system is required to provide these functions.  The default is\n @kindex -mapcs-float\n @kindex -mno-apcs-float\n Pass floating point arguments using the float point registers.  This is\n-one of the variants of the APCS.  This option is reccommended if the\n+one of the variants of the APCS.  This option is recommended if the\n target hardware has a floating point unit or if a lot of floating point\n arithmetic is going to be performed by the code.  The default is\n @samp{-mno-apcs-float}, since integer only code is slightly increased in\n@@ -4199,8 +4200,8 @@ when @samp{-mthumb-interwork} is specified.\n @kindex -msched-prolog\n Prevent the reordering of instructions in the function prolog, or the\n merging of those instruction with the instructions in the function's\n-body.  This means that all functions will start with a recognisable set\n-of instructions (or in fact one of a chioce from a small set of\n+body.  This means that all functions will start with a recognizable set\n+of instructions (or in fact one of a choice from a small set of\n different function prologues), and this information can be used to\n locate the start if functions inside an executable piece of code.  The\n default is @samp{-msched-prolog}.\n@@ -4254,11 +4255,11 @@ to trap these instructions.\n \n @item -mshort-load-words\n @kindex -mshort-load-words\n-This is a synonym for the @samp{-mno-short-load-bytes}.\n+This is a synonym for @samp{-mno-short-load-bytes}.\n \n @item -mno-short-load-words\n @kindex -mno-short-load-words\n-This is a synonym for the @samp{-mshort-load-bytes}.\n+This is a synonym for @samp{-mshort-load-bytes}.\n \n @item -mbsd\n @kindex -mbsd\n@@ -4283,7 +4284,7 @@ compiler is built for cross-compilation.\n @kindex -mcpu=\n This specifies the name of the target ARM processor.  GCC uses this name\n to determine what kind of instructions it can use when generating\n-assembly code.  Permissable names are: arm2, arm250, arm3, arm6, arm60,\n+assembly code.  Permissible names are: arm2, arm250, arm3, arm6, arm60,\n arm600, arm610, arm620, arm7, arm7m, arm7d, arm7dm, arm7di, arm7dmi,\n arm70, arm700, arm700i, arm710, arm710c, arm7100, arm7500, arm7500fe,\n arm7tdmi, arm8, strongarm, strongarm110, strongarm1100, arm8, arm810,\n@@ -4305,24 +4306,24 @@ this option.\n This specifies the name of the target ARM architecture.  GCC uses this\n name to determine what kind of instructions it can use when generating\n assembly code.  This option can be used in conjunction with or instead\n-of the @samp{-mcpu=} option.  Permissable names are: armv2, armv2a,\n+of the @samp{-mcpu=} option.  Permissible names are: armv2, armv2a,\n armv3, armv3m, armv4, armv4t, armv5.\n \n @item -mfpe=<number>\n @itemx -mfp=<number>\n @kindex -mfpe=\n @kindex -mfp=\n This specifes the version of the floating point emulation available on\n-the target.  Permissable values are 2 and 3.  @samp{-mfp=} is a synonym\n+the target.  Permissible values are 2 and 3.  @samp{-mfp=} is a synonym\n for @samp{-mfpe=} to support older versions of GCC.\n \n @item -mstructure-size-boundary=<n>\n @kindex -mstructure-size-boundary\n The size of all structures and unions will be rounded up to a multiple\n-of the number of bits set by this option.  Permissable values are 8 and\n+of the number of bits set by this option.  Permissible values are 8 and\n 32.  The default value varies for different toolchains.  For the COFF\n targeted toolchain the default value is 8.  Specifying the larger number\n-can produced faster, more efficient code, but can also increase the size\n+can produce faster, more efficient code, but can also increase the size\n of the program.  The two values are potentially incompatible.  Code\n compiled with one value cannot necessarily expect to work with code or\n libraries compiled with the other value, if they exchange information\n@@ -4339,6 +4340,18 @@ It will be executed if the function tries to return.\n @kindex -mnop-fun-dllimport\n Disable the support for the @emph{dllimport} attribute.\n \n+@item -msingle-pic-base\n+@kindex -msingle-pic-base\n+Treat the register used for PIC addressing as read-only, rather than\n+loading it in the prologue for each function.  The run-time system is\n+responsible for initialising this register with an appropriate value\n+before execution begins.\n+\n+@item -mpic-register=<reg>\n+@kindex -mpic-register=\n+Specify the register to be used for PIC addressing.  The default is R10\n+unless stack-checking is enabled, when R9 is used.\n+\n @end table\n \n @node Thumb Options"}]}