{"sha": "3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiZDY3NjhiZDRmMTg1YWZkNDgzMTliMGNlMGMwODc1ZDYyYmM2YQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-04-10T20:40:48Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-04-10T20:40:48Z"}, "message": "re PR tree-optimization/80304 (Wrong result with do concurrent)\n\n2017-04-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR tree-optimization/80304\n\t* gfortran.dg/do_concurrent_4.f90:  New test case.\n\nFrom-SVN: r246824", "tree": {"sha": "2216782d4f6a8cf23fe6a91aa8a254f646dda3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2216782d4f6a8cf23fe6a91aa8a254f646dda3e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a/comments", "author": null, "committer": null, "parents": [{"sha": "99827b5ca0ce4582940da66a23f737b70d0d8c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99827b5ca0ce4582940da66a23f737b70d0d8c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99827b5ca0ce4582940da66a23f737b70d0d8c41"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "b0228bd9fa53ce47b9dfdfb191e86c129d12a2cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "patch": "@@ -1,3 +1,8 @@\n+2017-04-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR tree-optimization/80304\n+\t* gfortran.dg/do_concurrent_4.f90:  New test case.\n+\n 2017-04-10  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/80046"}, {"sha": "9c2409ecb0063e5304358831f6533f808e259c0b", "filename": "gcc/testsuite/gfortran.dg/do_concurrent_4.f90", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bbd6768bd4f185afd48319b0ce0c0875d62bc6a/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_4.f90?ref=3bbd6768bd4f185afd48319b0ce0c0875d62bc6a", "patch": "@@ -0,0 +1,67 @@\n+! { dg-do run }\n+! { dg-options \"-O\" }\n+! PR 80304 - this used to give a wrong result.\n+! Original test case by Chinoune\n+module test_mod\n+  implicit none\n+\n+contains\n+\n+  pure real function add(i,j,k)\n+    integer ,intent(in) :: i,j,k\n+    add = real(i+j+k)+1.\n+  end function add\n+\n+  pure real function add2(i,j,k)\n+    integer ,intent(in) :: i,j,k\n+    add2 = real(i+j+k)\n+  end function add2\n+\n+  subroutine check_err(a, s)\n+    real, dimension(:,:), intent(in) :: a\n+    real, intent(in) :: s\n+    if (abs(sum(a) - s) > 1e-5) call abort\n+  end subroutine check_err\n+\n+end module test_mod\n+\n+program test \n+  use test_mod\n+  implicit none\n+\n+  integer :: i ,j\n+  real :: a(0:1,0:1) ,b(0:1,0:1)\n+\n+  ! first do-concurrent loop  \n+  a = 0.\n+  b = 0.\n+  DO CONCURRENT( i=0:1 ,j=0:1)\n+     a(i,j) = add(i,j,abs(i-j))\n+     b(i,j) = add2(i,j,abs(i-j))\n+  END DO\n+  call check_err (a, 10.)\n+  call check_err (b, 6.)\n+\n+  ! normal do loop  \n+  a = 0.\n+  b = 0.\n+  DO i=0,1 \n+     DO j=0,1\n+        a(i,j) = add(i,j,abs(i-j))\n+        b(i,j) = add2(i,j,abs(i-j))\n+     END DO\n+  END DO\n+  call check_err (a, 10.)\n+  call check_err (b, 6.)\n+\n+  ! second do-concuurent loop  \n+  a = 0.\n+  b = 0.\n+  DO CONCURRENT( i=0:1 ,j=0:1)\n+     a(i,j) = add(i,j,abs(i-j))\n+     b(i,j) = add2(i,j,abs(i-j))\n+  END DO\n+  call check_err (a, 10.)\n+  call check_err (b, 6.)\n+\n+end program test"}]}