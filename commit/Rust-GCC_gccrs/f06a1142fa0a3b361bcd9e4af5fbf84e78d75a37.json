{"sha": "f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2YTExNDJmYTBhM2IzNjFiY2Q5ZTRhZjVmYmY4NGU3OGQ3NWEzNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-04-11T09:01:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-04-11T09:01:24Z"}, "message": "re PR c++/54216 (Missing diagnostic for ill-formed anonymous enum declarations)\n\n/cp\n2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54216\n\t* parser.c (cp_parser_enum_specifier): Check for empty\n\tanonymous enums and anonymous scoped enums.\n\n/testsuite\n2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54216\n\t* g++.dg/cpp0x/enum26.C: New.\n\t* g++.old-deja/g++.pt/mangle1.C: Adjust.\n\nFrom-SVN: r197742", "tree": {"sha": "1183eeebd02180a92d25ccaf157c4b9095ebc7db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1183eeebd02180a92d25ccaf157c4b9095ebc7db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/comments", "author": null, "committer": null, "parents": [{"sha": "d07458be3e41c069c0eaf627a371ac7d297c782d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07458be3e41c069c0eaf627a371ac7d297c782d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d07458be3e41c069c0eaf627a371ac7d297c782d"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "8d0f6c13b1c054b744f44e51d98e9839244494a9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "patch": "@@ -1,3 +1,9 @@\n+2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54216\n+\t* parser.c (cp_parser_enum_specifier): Check for empty\n+\tanonymous enums and anonymous scoped enums.\n+\n 2013-04-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56895"}, {"sha": "e015c4f3540ff919b4cf2762d513fd1a19938388", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "patch": "@@ -14750,6 +14750,9 @@ cp_parser_enum_specifier (cp_parser* parser)\n \t{\n \t  identifier = make_anon_name ();\n \t  is_anonymous = true;\n+\t  if (scoped_enum_p)\n+\t    error_at (type_start_token->location,\n+\t\t      \"anonymous scoped enum is not allowed\");\n \t}\n     }\n   pop_deferring_access_checks ();\n@@ -14897,7 +14900,13 @@ cp_parser_enum_specifier (cp_parser* parser)\n       if (type == error_mark_node)\n \tcp_parser_skip_to_end_of_block_or_statement (parser);\n       /* If the next token is not '}', then there are some enumerators.  */\n-      else if (cp_lexer_next_token_is_not (parser->lexer, CPP_CLOSE_BRACE))\n+      else if (cp_lexer_next_token_is (parser->lexer, CPP_CLOSE_BRACE))\n+\t{\n+\t  if (is_anonymous && !scoped_enum_p)\n+\t    pedwarn (type_start_token->location, OPT_Wpedantic,\n+\t\t     \"ISO C++ forbids empty anonymous enum\");\n+\t}\n+      else\n \tcp_parser_enumerator_list (parser, type);\n \n       /* Consume the final '}'.  */"}, {"sha": "943be90c9245b17321072cfbd15b1a2b50f4a63a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "patch": "@@ -1,3 +1,9 @@\n+2013-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54216\n+\t* g++.dg/cpp0x/enum26.C: New.\n+\t* g++.old-deja/g++.pt/mangle1.C: Adjust.\n+\n 2013-04-11  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.target/aarch64/vect-fcm.x: Add check for zero forms of"}, {"sha": "a21067edb87d343a8ee924993975b2636f412e5c", "filename": "gcc/testsuite/g++.dg/cpp0x/enum26.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum26.C?ref=f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/54216\n+// { dg-options \"-std=c++11 -pedantic\" }\n+\n+enum {};            // { dg-warning \"empty anonymous\" }\n+\n+enum class {};      // { dg-error \"anonymous\" }\n+\n+enum class { x };   // { dg-error \"anonymous\" }"}, {"sha": "1fe009dbffcb08aa4b1c79850854926dec4ff9e5", "filename": "gcc/testsuite/g++.old-deja/g++.pt/mangle1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmangle1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmangle1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmangle1.C?ref=f06a1142fa0a3b361bcd9e4af5fbf84e78d75a37", "patch": "@@ -1,4 +1,5 @@\n // { dg-do assemble  }\n+// { dg-options \"\" }\n // Origin: Mark Mitchell <mark@codesourcery.com>\n \n typedef enum {} i;"}]}