{"sha": "f060a26123884c98f69ced61aea93dea895ea9eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA2MGEyNjEyMzg4NGM5OGY2OWNlZDYxYWVhOTNkZWE4OTVlYTllYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-02-09T09:35:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-02-09T09:35:22Z"}, "message": "re PR tree-optimization/35202 (exp->expf transformation incorrect with -fmath-errno)\n\n2009-02-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/35202\n\t* convert.c (convert_to_real): Disable (float)fn((double)x)\n\tto fnf(x) conversion if errno differences may occur and\n\t-fmath-errno is set.\n\nFrom-SVN: r144030", "tree": {"sha": "aa6c40c6717271081bdecfd2d7b64a4176ecbf76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa6c40c6717271081bdecfd2d7b64a4176ecbf76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f060a26123884c98f69ced61aea93dea895ea9eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f060a26123884c98f69ced61aea93dea895ea9eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f060a26123884c98f69ced61aea93dea895ea9eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f060a26123884c98f69ced61aea93dea895ea9eb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a50cd932f916c04bbe508acaf0344962266ebf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a50cd932f916c04bbe508acaf0344962266ebf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a50cd932f916c04bbe508acaf0344962266ebf6"}], "stats": {"total": 54, "additions": 33, "deletions": 21}, "files": [{"sha": "a6deff996a4dac4f791b224b997f93e637fc7c08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f060a26123884c98f69ced61aea93dea895ea9eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f060a26123884c98f69ced61aea93dea895ea9eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f060a26123884c98f69ced61aea93dea895ea9eb", "patch": "@@ -1,3 +1,10 @@\n+2009-02-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35202\n+\t* convert.c (convert_to_real): Disable (float)fn((double)x)\n+\tto fnf(x) conversion if errno differences may occur and\n+\t-fmath-errno is set.\n+\n 2009-02-07  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/avr/avr.c (avr_mcu_t): Add ata6289 device."}, {"sha": "278305d8fdbc9b85592e2d11316898ec3ab1d493", "filename": "gcc/convert.c", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f060a26123884c98f69ced61aea93dea895ea9eb/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f060a26123884c98f69ced61aea93dea895ea9eb/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=f060a26123884c98f69ced61aea93dea895ea9eb", "patch": "@@ -139,40 +139,45 @@ convert_to_real (tree type, tree expr)\n       switch (fcode)\n         {\n #define CASE_MATHFN(FN) case BUILT_IN_##FN: case BUILT_IN_##FN##L:\n-\t  CASE_MATHFN (ACOS)\n-\t  CASE_MATHFN (ACOSH)\n-\t  CASE_MATHFN (ASIN)\n-\t  CASE_MATHFN (ASINH)\n-\t  CASE_MATHFN (ATAN)\n-\t  CASE_MATHFN (ATANH)\n-\t  CASE_MATHFN (CBRT)\n-\t  CASE_MATHFN (COS)\n \t  CASE_MATHFN (COSH)\n-\t  CASE_MATHFN (ERF)\n-\t  CASE_MATHFN (ERFC)\n \t  CASE_MATHFN (EXP)\n \t  CASE_MATHFN (EXP10)\n \t  CASE_MATHFN (EXP2)\n-\t  CASE_MATHFN (EXPM1)\n-\t  CASE_MATHFN (FABS)\n+ \t  CASE_MATHFN (EXPM1)\n \t  CASE_MATHFN (GAMMA)\n \t  CASE_MATHFN (J0)\n \t  CASE_MATHFN (J1)\n \t  CASE_MATHFN (LGAMMA)\n-\t  CASE_MATHFN (LOG)\n-\t  CASE_MATHFN (LOG10)\n-\t  CASE_MATHFN (LOG1P)\n-\t  CASE_MATHFN (LOG2)\n-\t  CASE_MATHFN (LOGB)\n \t  CASE_MATHFN (POW10)\n-\t  CASE_MATHFN (SIN)\n \t  CASE_MATHFN (SINH)\n-\t  CASE_MATHFN (SQRT)\n-\t  CASE_MATHFN (TAN)\n-\t  CASE_MATHFN (TANH)\n \t  CASE_MATHFN (TGAMMA)\n \t  CASE_MATHFN (Y0)\n \t  CASE_MATHFN (Y1)\n+\t    /* The above functions may set errno differently with float\n+\t       input or output so this transformation is not safe with\n+\t       -fmath-errno.  */\n+\t    if (flag_errno_math)\n+\t      break;\n+\t  CASE_MATHFN (ACOS)\n+\t  CASE_MATHFN (ACOSH)\n+\t  CASE_MATHFN (ASIN)\n+ \t  CASE_MATHFN (ASINH)\n+ \t  CASE_MATHFN (ATAN)\n+\t  CASE_MATHFN (ATANH)\n+ \t  CASE_MATHFN (CBRT)\n+ \t  CASE_MATHFN (COS)\n+ \t  CASE_MATHFN (ERF)\n+ \t  CASE_MATHFN (ERFC)\n+ \t  CASE_MATHFN (FABS)\n+\t  CASE_MATHFN (LOG)\n+\t  CASE_MATHFN (LOG10)\n+\t  CASE_MATHFN (LOG2)\n+ \t  CASE_MATHFN (LOG1P)\n+ \t  CASE_MATHFN (LOGB)\n+ \t  CASE_MATHFN (SIN)\n+\t  CASE_MATHFN (SQRT)\n+ \t  CASE_MATHFN (TAN)\n+ \t  CASE_MATHFN (TANH)\n #undef CASE_MATHFN\n \t    {\n \t      tree arg0 = strip_float_extensions (CALL_EXPR_ARG (expr, 0));"}]}