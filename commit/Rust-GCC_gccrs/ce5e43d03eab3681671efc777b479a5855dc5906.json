{"sha": "ce5e43d03eab3681671efc777b479a5855dc5906", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1ZTQzZDAzZWFiMzY4MTY3MWVmYzc3N2I0NzlhNTg1NWRjNTkwNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-19T21:02:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-19T21:02:52Z"}, "message": "re PR c/6358 (GCC 3.1 ICE on statement expressions)\n\n\tPR c/6358\n\t* function.c: Reapply patch for c/6358.\n\t(expand_function_end): Copy decl_rtl's mode, not\n\tcurrent_function_return_rtx mode.\n\nFrom-SVN: r52538", "tree": {"sha": "0e838c68b72f69376a107d82f90a16743deefc37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e838c68b72f69376a107d82f90a16743deefc37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce5e43d03eab3681671efc777b479a5855dc5906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5e43d03eab3681671efc777b479a5855dc5906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce5e43d03eab3681671efc777b479a5855dc5906", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5e43d03eab3681671efc777b479a5855dc5906/comments", "author": null, "committer": null, "parents": [{"sha": "9eb83f6ce767092711c8c54fb766129c6d4c5a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eb83f6ce767092711c8c54fb766129c6d4c5a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eb83f6ce767092711c8c54fb766129c6d4c5a79"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "fc37d48efb37d904683b91f6df9950f2e971ae07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5e43d03eab3681671efc777b479a5855dc5906/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5e43d03eab3681671efc777b479a5855dc5906/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce5e43d03eab3681671efc777b479a5855dc5906", "patch": "@@ -1,4 +1,11 @@\n-2002-04-19\tJoel Sherrill <joel@OARcorp.com>\n+2002-04-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/6358\n+\t* function.c: Reapply patch for c/6358.\n+\t(expand_function_end): Copy decl_rtl's mode, not\n+\tcurrent_function_return_rtx mode.\n+\n+2002-04-19  Joel Sherrill  <joel@OARcorp.com>\n \n \t* config/rtems.h (STARTFILE_SPEC, ENDFILE_SPEC): Fix for non-ELF\n \ttargets."}, {"sha": "ab3654acf4753668332b926976acc2fd99db13bd", "filename": "gcc/function.c", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce5e43d03eab3681671efc777b479a5855dc5906/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce5e43d03eab3681671efc777b479a5855dc5906/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ce5e43d03eab3681671efc777b479a5855dc5906", "patch": "@@ -5145,6 +5145,35 @@ assign_parms (fndecl)\n   current_function_return_rtx\n     = (DECL_RTL_SET_P (DECL_RESULT (fndecl))\n        ? DECL_RTL (DECL_RESULT (fndecl)) : NULL_RTX);\n+\n+  /* If scalar return value was computed in a pseudo-reg, or was a named\n+     return value that got dumped to the stack, copy that to the hard\n+     return register.  */\n+  if (DECL_RTL_SET_P (DECL_RESULT (fndecl)))\n+    {\n+      tree decl_result = DECL_RESULT (fndecl);\n+      rtx decl_rtl = DECL_RTL (decl_result);\n+\n+      if (REG_P (decl_rtl)\n+\t  ? REGNO (decl_rtl) >= FIRST_PSEUDO_REGISTER\n+\t  : DECL_REGISTER (decl_result))\n+\t{\n+\t  rtx real_decl_rtl;\n+\n+#ifdef FUNCTION_OUTGOING_VALUE\n+\t  real_decl_rtl = FUNCTION_OUTGOING_VALUE (TREE_TYPE (decl_result),\n+\t\t\t\t\t\t   fndecl);\n+#else\n+\t  real_decl_rtl = FUNCTION_VALUE (TREE_TYPE (decl_result),\n+\t\t\t\t\t  fndecl);\n+#endif\n+\t  REG_FUNCTION_VALUE_P (real_decl_rtl) = 1;\n+\t  /* The delay slot scheduler assumes that current_function_return_rtx\n+\t     holds the hard register containing the return value, not a\n+\t     temporary pseudo.  */\n+\t  current_function_return_rtx = real_decl_rtl;\n+\t}\n+    }\n }\n \f\n /* Indicate whether REGNO is an incoming argument to the current function\n@@ -6958,23 +6987,18 @@ expand_function_end (filename, line, end_bindings)\n \t  ? REGNO (decl_rtl) >= FIRST_PSEUDO_REGISTER\n \t  : DECL_REGISTER (decl_result))\n \t{\n-\t  rtx real_decl_rtl;\n+\t  rtx real_decl_rtl = current_function_return_rtx;\n \n-#ifdef FUNCTION_OUTGOING_VALUE\n-\t  real_decl_rtl = FUNCTION_OUTGOING_VALUE (TREE_TYPE (decl_result),\n-\t\t\t\t\t\t   current_function_decl);\n-#else\n-\t  real_decl_rtl = FUNCTION_VALUE (TREE_TYPE (decl_result),\n-\t\t\t\t\t  current_function_decl);\n-#endif\n-\t  REG_FUNCTION_VALUE_P (real_decl_rtl) = 1;\n+\t  /* This should be set in assign_parms.  */\n+\t  if (! REG_FUNCTION_VALUE_P (real_decl_rtl))\n+\t    abort ();\n \n \t  /* If this is a BLKmode structure being returned in registers,\n \t     then use the mode computed in expand_return.  Note that if\n \t     decl_rtl is memory, then its mode may have been changed, \n \t     but that current_function_return_rtx has not.  */\n \t  if (GET_MODE (real_decl_rtl) == BLKmode)\n-\t    PUT_MODE (real_decl_rtl, GET_MODE (current_function_return_rtx));\n+\t    PUT_MODE (real_decl_rtl, GET_MODE (decl_rtl));\n \n \t  /* If a named return value dumped decl_return to memory, then\n \t     we may need to re-do the PROMOTE_MODE signed/unsigned \n@@ -6995,11 +7019,6 @@ expand_function_end (filename, line, end_bindings)\n \t\t\t     int_size_in_bytes (TREE_TYPE (decl_result)));\n \t  else\n \t    emit_move_insn (real_decl_rtl, decl_rtl);\n-\n-\t  /* The delay slot scheduler assumes that current_function_return_rtx\n-\t     holds the hard register containing the return value, not a\n-\t     temporary pseudo.  */\n-\t  current_function_return_rtx = real_decl_rtl;\n \t}\n     }\n "}]}