{"sha": "68d2e027fa110ac1561547716f64cdb9273ecbfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkMmUwMjdmYTExMGFjMTU2MTU0NzcxNmY2NGNkYjkyNzNlY2JmYg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-07-15T16:29:19Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-07-15T16:29:19Z"}, "message": "re PR libfortran/32611 (Print sign of negative zero)\n\n2007-07-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\t    Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n\n\tPR fortran/32611\n\t* gfortran.h (gfc_option_t): Add flag_sign_zero field.\n\t* lang.opt (-fsign-zero): New option.\n\t* trans.h: Rename gfor_fndecl_set_std into gfor_fndecl_set_options.\n\t* trans-decl.c (gfc_build_builtin_function_decls): Build the function\n\tdeclaration to pass an array containing the options to be used by the\n\truntime library. (gfc_generate_function_code): Build an array that\n\tcontains option values to be passed to the runtime library and the call\n\tto the function. \n\t* options.c (gfc_init_options): Initialize the flag_sign_zero field.\n\t(gfc_handle_option): Handle the -fsign-zero option.\n\nCo-Authored-By: Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>\n\nFrom-SVN: r126655", "tree": {"sha": "b304f4c7c4a642c3aa3b7788e5ba9d05dae4bc02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b304f4c7c4a642c3aa3b7788e5ba9d05dae4bc02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68d2e027fa110ac1561547716f64cdb9273ecbfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d2e027fa110ac1561547716f64cdb9273ecbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d2e027fa110ac1561547716f64cdb9273ecbfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d2e027fa110ac1561547716f64cdb9273ecbfb/comments", "author": null, "committer": null, "parents": [{"sha": "2bb6de3a7e8d27b8f7ea7139fbee5f33c32bf3e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb6de3a7e8d27b8f7ea7139fbee5f33c32bf3e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bb6de3a7e8d27b8f7ea7139fbee5f33c32bf3e5"}], "stats": {"total": 104, "additions": 79, "deletions": 25}, "files": [{"sha": "c71a360dfc5a1703a4933011e15410087a691d67", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=68d2e027fa110ac1561547716f64cdb9273ecbfb", "patch": "@@ -1,3 +1,18 @@\n+2007-07-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\t    Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/32611\n+\t* gfortran.h (gfc_option_t): Add flag_sign_zero field.\n+\t* lang.opt (-fsign-zero): New option.\n+\t* trans.h: Rename gfor_fndecl_set_std into gfor_fndecl_set_options.\n+\t* trans-decl.c (gfc_build_builtin_function_decls): Build the function\n+\tdeclaration to pass an array containing the options to be used by the\n+\truntime library. (gfc_generate_function_code): Build an array that\n+\tcontains option values to be passed to the runtime library and the call\n+\tto the function. \n+\t* options.c (gfc_init_options): Initialize the flag_sign_zero field.\n+\t(gfc_handle_option): Handle the -fsign-zero option.\n+\n 2007-07-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/32036"}, {"sha": "8bd80ce4c7af1de051cab2946d1e6a7e0c970d8b", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=68d2e027fa110ac1561547716f64cdb9273ecbfb", "patch": "@@ -1861,6 +1861,7 @@ typedef struct\n   int flag_cray_pointer;\n   int flag_d_lines;\n   int flag_openmp;\n+  int flag_sign_zero;\n \n   int fpe;\n "}, {"sha": "2deb636c643a2854120e106566941fad0e74cdcd", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=68d2e027fa110ac1561547716f64cdb9273ecbfb", "patch": "@@ -249,6 +249,10 @@ fshort-enums\n Fortran\n Use the narrowest integer type possible for enumeration types\n \n+fsign-zero\n+Fortran\n+Apply negative sign to zero values\n+\n funderscoring\n Fortran\n Append underscores to externally visible names"}, {"sha": "4f3ec2ce8f93902bea202ca517d7565dd9c7d4f0", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=68d2e027fa110ac1561547716f64cdb9273ecbfb", "patch": "@@ -102,6 +102,7 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_option.flag_cray_pointer = 0;\n   gfc_option.flag_d_lines = -1;\n   gfc_option.flag_openmp = 0;\n+  gfc_option.flag_sign_zero = 1;\n \n   gfc_option.fpe = 0;\n \n@@ -619,6 +620,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_handle_module_path_options (arg);\n       break;\n     \n+    case OPT_fsign_zero:\n+      gfc_option.flag_sign_zero = value;\n+      break;\n+    \n     case OPT_ffpe_trap_:\n       gfc_handle_fpe_trap_option (arg);\n       break;"}, {"sha": "ddd802571929f4eabc4116cf272e151dfa38f609", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 53, "deletions": 24, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=68d2e027fa110ac1561547716f64cdb9273ecbfb", "patch": "@@ -88,7 +88,7 @@ tree gfor_fndecl_runtime_error_at;\n tree gfor_fndecl_os_error;\n tree gfor_fndecl_generate_error;\n tree gfor_fndecl_set_fpe;\n-tree gfor_fndecl_set_std;\n+tree gfor_fndecl_set_options;\n tree gfor_fndecl_set_convert;\n tree gfor_fndecl_set_record_marker;\n tree gfor_fndecl_set_max_subrecord_length;\n@@ -2364,15 +2364,11 @@ gfc_build_builtin_function_decls (void)\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"set_fpe\")),\n \t\t\t\t    void_type_node, 1, gfc_c_int_type_node);\n \n-  gfor_fndecl_set_std =\n-    gfc_build_library_function_decl (get_identifier (PREFIX(\"set_std\")),\n-\t\t\t\t    void_type_node,\n-\t\t\t\t    5,\n-\t\t\t\t    gfc_int4_type_node,\n-\t\t\t\t    gfc_int4_type_node,\n-\t\t\t\t    gfc_int4_type_node,\n-\t\t\t\t    gfc_int4_type_node,\n-\t\t\t\t    gfc_int4_type_node);\n+  /* Keep the array dimension in sync with the call, later in this file.  */\n+  gfor_fndecl_set_options =\n+    gfc_build_library_function_decl (get_identifier (PREFIX(\"set_options\")),\n+\t\t\t\t    void_type_node, 2, gfc_c_int_type_node,\n+\t\t\t\t    pvoid_type_node);\n \n   gfor_fndecl_set_convert =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"set_convert\")),\n@@ -3152,23 +3148,56 @@ gfc_generate_function_code (gfc_namespace * ns)\n   /* Now generate the code for the body of this function.  */\n   gfc_init_block (&body);\n \n-  /* If this is the main program, add a call to set_std to set up the\n+  /* If this is the main program, add a call to set_options to set up the\n      runtime library Fortran language standard parameters.  */\n-\n   if (sym->attr.is_main_program)\n     {\n-      tree gfc_int4_type_node = gfc_get_int_type (4);\n-      tmp = build_call_expr (gfor_fndecl_set_std, 5,\n-\t\t\t     build_int_cst (gfc_int4_type_node,\n-\t\t\t\t\t    gfc_option.warn_std),\n-\t\t\t     build_int_cst (gfc_int4_type_node,\n-\t\t\t\t\t    gfc_option.allow_std),\n-\t\t\t     build_int_cst (gfc_int4_type_node,\n-\t\t\t\t\t    pedantic),\n-\t\t\t     build_int_cst (gfc_int4_type_node,\n-\t\t\t\t\t    gfc_option.flag_dump_core),\n-\t\t\t     build_int_cst (gfc_int4_type_node,\n-\t\t\t\t\t    gfc_option.flag_backtrace));\n+      tree gfc_c_int_type_node = gfc_get_int_type (gfc_c_int_kind);\n+      tree array_type, array, var;\n+\n+      /* Passing a new option to the library requires four modifications:\n+\t   + add it to the tree_cons list below\n+\t   + change the array size in the call to build_array_type\n+\t   + change the first argument to the library call\n+\t     gfor_fndecl_set_options\n+\t   + modify the library (runtime/compile_options.c)!  */\n+      array = tree_cons (NULL_TREE,\n+\t\t\t build_int_cst (gfc_c_int_type_node,\n+\t\t\t\t\tgfc_option.warn_std), NULL_TREE);\n+      array = tree_cons (NULL_TREE,\n+\t\t\t build_int_cst (gfc_c_int_type_node,\n+\t\t\t\t\tgfc_option.allow_std), array);\n+      array = tree_cons (NULL_TREE,\n+\t\t\t build_int_cst (gfc_c_int_type_node, pedantic), array);\n+      array = tree_cons (NULL_TREE,\n+\t\t\t build_int_cst (gfc_c_int_type_node,\n+\t\t\t\t\tgfc_option.flag_dump_core), array);\n+      array = tree_cons (NULL_TREE,\n+\t\t\t build_int_cst (gfc_c_int_type_node,\n+\t\t\t\t\tgfc_option.flag_backtrace), array);\n+      array = tree_cons (NULL_TREE,\n+\t\t\t build_int_cst (gfc_c_int_type_node,\n+\t\t\t\t\tgfc_option.flag_sign_zero), array);\n+\n+      array_type = build_array_type (gfc_c_int_type_node,\n+\t\t\t\t     build_index_type (build_int_cst (NULL_TREE,\n+\t\t\t\t\t\t\t\t      5)));\n+      array = build_constructor_from_list (array_type, nreverse (array));\n+      TREE_CONSTANT (array) = 1;\n+      TREE_INVARIANT (array) = 1;\n+      TREE_STATIC (array) = 1;\n+\n+      /* Create a static variable to hold the jump table.  */\n+      var = gfc_create_var (array_type, \"options\");\n+      TREE_CONSTANT (var) = 1;\n+      TREE_INVARIANT (var) = 1;\n+      TREE_STATIC (var) = 1;\n+      TREE_READONLY (var) = 1;\n+      DECL_INITIAL (var) = array;\n+      var = gfc_build_addr_expr (pvoid_type_node, var);\n+\n+      tmp = build_call_expr (gfor_fndecl_set_options, 2,\n+\t\t\t     build_int_cst (gfc_c_int_type_node, 6), var);\n       gfc_add_expr_to_block (&body, tmp);\n     }\n "}, {"sha": "b9fb1d28600953ae5c4561ddfd80c9b100a4ae85", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d2e027fa110ac1561547716f64cdb9273ecbfb/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=68d2e027fa110ac1561547716f64cdb9273ecbfb", "patch": "@@ -495,7 +495,7 @@ extern GTY(()) tree gfor_fndecl_runtime_error_at;\n extern GTY(()) tree gfor_fndecl_os_error;\n extern GTY(()) tree gfor_fndecl_generate_error;\n extern GTY(()) tree gfor_fndecl_set_fpe;\n-extern GTY(()) tree gfor_fndecl_set_std;\n+extern GTY(()) tree gfor_fndecl_set_options;\n extern GTY(()) tree gfor_fndecl_ttynam;\n extern GTY(()) tree gfor_fndecl_ctime;\n extern GTY(()) tree gfor_fndecl_fdate;"}]}