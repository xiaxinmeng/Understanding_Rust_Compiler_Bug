{"sha": "03b0ee0aba82efa8e6cfc873286abef4b5ef92d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNiMGVlMGFiYTgyZWZhOGU2Y2ZjODczMjg2YWJlZjRiNWVmOTJkOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-09T06:49:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-09T06:49:23Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r201619", "tree": {"sha": "09c82bf4946ba2447ff386b0b91a94f8326121e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09c82bf4946ba2447ff386b0b91a94f8326121e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8/comments", "author": null, "committer": null, "parents": [{"sha": "ff522f7fd48070a5365880a0ea6b54ae8be7315b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff522f7fd48070a5365880a0ea6b54ae8be7315b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff522f7fd48070a5365880a0ea6b54ae8be7315b"}], "stats": {"total": 79, "additions": 38, "deletions": 41}, "files": [{"sha": "073b393b8f815c242be02925c7191bbfdaaedf94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03b0ee0aba82efa8e6cfc873286abef4b5ef92d8", "patch": "@@ -51,7 +51,8 @@\n \t(remove_stmt_references): Likewise.\n \t(ipa_clear_stmts_in_references): New function.\n \t* ipa-ref.h (ipa_clear_stmts_in_references): Declare.\n-\t* cgraphclones.c (cgraph_materialize_all_clones): Remove or clear references.\n+\t* cgraphclones.c (cgraph_materialize_all_clones): Remove or\n+\tclear references.\n \t* ipa-split.c (split_function): Remove references in split function.\n \n 2013-08-08  Richard Earnshaw  <rearnsha@arm.com>\n@@ -83,7 +84,7 @@\n 2013-08-07  Oleg Endo <olegendo@gcc.gnu.org>\n \n \tPR other/12081\n-\tconfig/rs6000/rs6000.c (gen_2arg_fn_t): Remove typedef.\n+\t* config/rs6000/rs6000.c (gen_2arg_fn_t): Remove typedef.\n \t(rs6000_emit_swdiv, rs6000_emit_swrsqrt): Don't cast result of GEN_FCN\n \tto gen_2arg_fn_t.\n \n@@ -110,8 +111,7 @@\n \n 2013-08-07  David Malcolm  <dmalcolm@redhat.com>\n \n-\t* config/sparc/sparc.c (insert_pass_work_around_errata): Move\n-\tinto...\n+\t* config/sparc/sparc.c (insert_pass_work_around_errata): Move into...\n \t(sparc_option_override): ...and port to new C++ pass API.\n \t* config/sparc/t-sparc (sparc.o): Add dep on CONTEXT_H\n \n@@ -176,20 +176,20 @@\n \n 2013-08-06  David Malcolm  <dmalcolm@redhat.com>\n \n-\t* config/mips/mips.c (insert_pass_mips_machine_reorg2): Move\n-\tinto...\n-\t(mips_option_override): ...here, porting to new C++ API for\n-\tpasses.\n+\t* config/mips/mips.c (insert_pass_mips_machine_reorg2): Move into...\n+\t(mips_option_override): ...here, porting to new C++ API for passes.\n \n 2013-08-06  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (cgraph_get_body): New function based on lto.c\n \timplementation.\n \t* cgraph.h (cgraph_get_body): Declare.\n-\t* cgraphclones.c (cgraph_create_virtual_clone): Commonize WPA and LTO paths.\n+\t* cgraphclones.c (cgraph_create_virtual_clone): Commonize WPA and\n+\tLTO paths.\n \t* cgraphunit.c (expand_function): Get body prior expanding.\n \t* ipa.c (function_and_variable_visibility): Use gimple_has_body_p test.\n-\t* lto-cgraph.c (lto_output_node): Do not stream bodies we don't really need.\n+\t* lto-cgraph.c (lto_output_node): Do not stream bodies we don't\n+\treally need.\n \t* passes.c (do_per_function_toporder): Get body.\n \t* tree-inline.c (expand_call_inline): Get body prior inlining it.\n \t* tree-ssa-structalias.c (ipa_pta_execute): Get body; skip clones.\n@@ -226,17 +226,15 @@\n \tmethods, rewrite this function to eliminate XNEW and memcpy\n \tcalls that used hardcoded sizes.  Since this function no longer\n \tcreates pass instances, rename it to...\n-\t(add_pass_instance): ...this.  Document the old way that passes\n-\twere numbered and flagged, and rework this function to continue\n-\tusing it.\n+\t(add_pass_instance): ...this.  Document the old way that passes were\n+\tnumbered and flagged, and rework this function to continue using it.\n \t(next_pass_1): Add an initial_pass argument for use by\n \tadd_pass_instance.\n \t(position_pass): When adding multiple instances of a pass, use\n \tthe pass's clone method, rather than relying on the XNEW/memcpy\n \twithin the former make_pass_instance (now add_pass_instance).\n-\t(pass_manager::pass_manager): When invoking next_pass_1, also\n-\tsupply the initial instance of the current pass within the\n-\tpass manager.\n+\t(pass_manager::pass_manager): When invoking next_pass_1, also supply\n+\tthe initial instance of the current pass within the pass manager.\n \n 2013-08-05  David Malcolm  <dmalcolm@redhat.com>\n \n@@ -1663,8 +1661,7 @@\n \t* toplev.h (finish_optimization_passes): Move to method of class\n \tpass_manager.\n \t* tree-pass.h (struct pass_data): New.\n-\t(opt_pass): Convert to C++ class, make it a subclass of\n-\tpass_data.\n+\t(opt_pass): Convert to C++ class, make it a subclass of pass_data.\n \t(opt_pass::gate): Convert to virtual function.\n \t(opt_pass::~opt_pass): New.\n \t(opt_pass::clone): New.\n@@ -1684,8 +1681,7 @@\n \tglobal to a member of gcc::pass_manager.\n \t(ix86_option_override): Rework how pass_insert_vzeroupper is\n \tadded to the pass_manager to reflect autogenerated changes.\n-\t* config/i386/t-i386 (i386.o) Add deps on CONTEXT_H and\n-\tPASS_MANAGER_H.\n+\t* config/i386/t-i386 (i386.o) Add deps on CONTEXT_H and PASS_MANAGER_H.\n \n 2013-08-05  Richard Earnshaw  <rearnsha@arm.com>\n \n@@ -1696,7 +1692,8 @@\n 2013-08-05  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/57602\n-\t* cgraph.c (verify_cgraph_node): Accept local flags from other partitions.\n+\t* cgraph.c (verify_cgraph_node): Accept local flags from other\n+\tpartitions.\n \t* ipa.c (symtab_remove_unreachable_nodes): Do not clear local flag.\n \t(function_and_variable_visibility): Likewise.\n \t* trans-mem.c (ipa_tm_create_version): TM versions are not local.\n@@ -1865,14 +1862,16 @@\n \t* cgraphunit.c (add_new_function): Fix logic when adding from\n \tlate IPA pass.\n \t(assemble_thunk): Rename to ...\n-\t(expand_thunk); .. this one; export; get it working with general functions;\n-\tmake produced gimple valid.\n+\t(expand_thunk); .. this one; export; get it working with\n+\tgeneral functions; make produced gimple valid.\n \t* cgraph.h (expand_thunk): Declare.\n \n 2013-08-02  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa-cp.c (gather_context_independent_values): Use ipa_get_param_move_cost.\n-\t(get_replacement_map): Remove PARAM; move parameter folding into tree-inline.c\n+\t* ipa-cp.c (gather_context_independent_values): Use\n+\tipa_get_param_move_cost.\n+\t(get_replacement_map): Remove PARAM; move parameter folding\n+\tinto tree-inline.c\n \t(create_specialized_node): Update.\n \t* ipa-prop.c (ipa_populate_param_decls): Do not look for origins;\n \tassert that we have gimple body; update move_cost.\n@@ -1905,32 +1904,33 @@\n 2013-08-02  Jan Hubicka  <jh@suse.cz>\n \t    Martin Liska  <marxin.liska@gmail.com>\n \n-\t* cgraph.c (cgraph_function_body_availability): Do not check cgrpah flags.\n+\t* cgraph.c (cgraph_function_body_availability): Do not check\n+\tcgraph flags.\n \t* cgraph.h (symtab_for_node_and_aliases, symtab_nonoverwritable_alias,\n \tsymtab_node_availability): Declare.\n \t* ipa.c (can_replace_by_local_alias): New.\n \t(function_and_variable_visibility): Use it.\n-\t* symtab.c (symtab_for_node_and_aliases, symtab_nonoverwritable_alias_1,\n-\tsymtab_nonoverwritable_alias): New.\n+\t* symtab.c (symtab_for_node_and_aliases,\n+\tsymtab_nonoverwritable_alias_1, symtab_nonoverwritable_alias): New.\n \n 2013-08-02  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/57963\n-\t* lra-constraints.c (reverse_equiv_p, contains_reloaded_insn_p):\n-\tNew.\n+\t* lra-constraints.c (reverse_equiv_p, contains_reloaded_insn_p): New.\n \t(lra_constraints): Use them.\n \n 2013-08-02  Sofiane Naci  <sofiane.naci@arm.com>\n \n-\t* config/arm/types.md (define_attr \"type\"): Add \"load_acq\" and \"store_rel\".\n+\t* config/arm/types.md (define_attr \"type\"): Add \"load_acq\"\n+\tand \"store_rel\".\n \t* config/arm/cortex-a53.md (cortex_a53_load1): Update for attribute\n \tchanges.\n \t(cortex_a53_store1): Likewise.\n \n 2013-08-01  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa.c (symtab_remove_unreachable_nodes): Nodes in other partitions are\n-\tnot needed.\n+\t* ipa.c (symtab_remove_unreachable_nodes): Nodes in other\n+\tpartitions are not needed.\n \n 2013-08-01  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -1946,8 +1946,8 @@\n \n 2013-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n-\t* config/arm/arm.md (minmax_arithsi_non_canon): Emit canonical RTL form\n-\twhen subtracting a constant.\n+\t* config/arm/arm.md (minmax_arithsi_non_canon): Emit canonical\n+\tRTL form when subtracting a constant.\n \n 2013-08-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n "}, {"sha": "a777c7d5eae11c5ca9daf2c14820e710dbb61de9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b0ee0aba82efa8e6cfc873286abef4b5ef92d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03b0ee0aba82efa8e6cfc873286abef4b5ef92d8", "patch": "@@ -137,8 +137,7 @@\n \n 2013-07-31  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n-\t* gcc.target/powerpc/fusion.c: New file, test power8 fusion\n-\tsupport.\n+\t* gcc.target/powerpc/fusion.c: New file, test power8 fusion support.\n \n 2013-07-31  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -338,8 +337,7 @@\n 2013-07-23  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/bool2.h: New file, test the code generation\n-\tof logical operations for power5, altivec, power7, and power8\n-\tsystems.\n+\tof logical operations for power5, altivec, power7, and power8 systems.\n \t* gcc.target/powerpc/bool2-p5.c: Likewise.\n \t* gcc.target/powerpc/bool2-av.c: Likewise.\n \t* gcc.target/powerpc/bool2-p7.c: Likewise.\n@@ -548,8 +546,7 @@\n \n \tPR middle-end/57698\n \t* gcc.c-torture/compile/pr57698.c: New test.\n-\t* gcc.c-torture/compile/pr43791.c: Remove prune output\n-\tdirective.\n+\t* gcc.c-torture/compile/pr43791.c: Remove prune output directive.\n \t* gcc.c-torture/compile/pr44043.c: Ditto.\n \n 2013-07-18  Wei Mi  <wmi@google.com>"}]}