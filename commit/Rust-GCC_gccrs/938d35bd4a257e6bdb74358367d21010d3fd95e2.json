{"sha": "938d35bd4a257e6bdb74358367d21010d3fd95e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4ZDM1YmQ0YTI1N2U2YmRiNzQzNTgzNjdkMjEwMTBkM2ZkOTVlMg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-10-28T12:10:18Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-10-28T12:10:18Z"}, "message": "convert.c (strip_float_extensions): Do not remove or introduce conversions between binary and decimal...\n\n\t* convert.c (strip_float_extensions): Do not remove or introduce\n\tconversions between binary and decimal floating-point types.\n\ntestsuite:\n\t* gcc.dg/dfp/convert-bfp-12.c: New test.\n\nFrom-SVN: r141407", "tree": {"sha": "3efd18f0ac8dd5189ad0d10eb497d249ab2083a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3efd18f0ac8dd5189ad0d10eb497d249ab2083a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/938d35bd4a257e6bdb74358367d21010d3fd95e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938d35bd4a257e6bdb74358367d21010d3fd95e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938d35bd4a257e6bdb74358367d21010d3fd95e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938d35bd4a257e6bdb74358367d21010d3fd95e2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5229689d71b35d2e94c1c2f80147927bf5470c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5229689d71b35d2e94c1c2f80147927bf5470c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5229689d71b35d2e94c1c2f80147927bf5470c07"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "5b520af2b09e57000be20b03f204c0994db35f87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=938d35bd4a257e6bdb74358367d21010d3fd95e2", "patch": "@@ -1,3 +1,8 @@\n+2008-10-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* convert.c (strip_float_extensions): Do not remove or introduce\n+\tconversions between binary and decimal floating-point types.\n+\n 2008-10-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37931"}, {"sha": "24617728298c19432cce6e5081172eb1dd6ccf75", "filename": "gcc/convert.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=938d35bd4a257e6bdb74358367d21010d3fd95e2", "patch": "@@ -81,7 +81,7 @@ strip_float_extensions (tree exp)\n       it properly and handle it like (type)(narrowest_type)constant.\n       This way we can optimize for instance a=a*2.0 where \"a\" is float\n       but 2.0 is double constant.  */\n-  if (TREE_CODE (exp) == REAL_CST)\n+  if (TREE_CODE (exp) == REAL_CST && !DECIMAL_FLOAT_TYPE_P (TREE_TYPE (exp)))\n     {\n       REAL_VALUE_TYPE orig;\n       tree type = NULL;\n@@ -108,6 +108,9 @@ strip_float_extensions (tree exp)\n   if (!FLOAT_TYPE_P (subt))\n     return exp;\n \n+  if (DECIMAL_FLOAT_TYPE_P (expt) != DECIMAL_FLOAT_TYPE_P (subt))\n+    return exp;\n+\n   if (TYPE_PRECISION (subt) > TYPE_PRECISION (expt))\n     return exp;\n "}, {"sha": "0281e865fe2f389f7ce68bad7fa59e0811563d94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=938d35bd4a257e6bdb74358367d21010d3fd95e2", "patch": "@@ -1,3 +1,7 @@\n+2008-10-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/dfp/convert-bfp-12.c: New test.\n+\n 2008-10-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37931"}, {"sha": "96381415dce006ca49b60f31a8752caa6dd668ca", "filename": "gcc/testsuite/gcc.dg/dfp/convert-bfp-12.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938d35bd4a257e6bdb74358367d21010d3fd95e2/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-bfp-12.c?ref=938d35bd4a257e6bdb74358367d21010d3fd95e2", "patch": "@@ -0,0 +1,17 @@\n+/* Test for bug where fold wrongly removed conversions to double and\n+   replaced them by conversions to float.  */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+volatile float f = __builtin_inff ();\n+volatile _Decimal32 d32 = 1e40DF;\n+\n+int\n+main (void)\n+{\n+  if ((double) f == (double) d32)\n+    abort ();\n+  exit (0);\n+}"}]}