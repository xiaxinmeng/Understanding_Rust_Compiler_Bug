{"sha": "be9862dd96945772ae0692bc95b37ec6dbcabda0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU5ODYyZGQ5Njk0NTc3MmFlMDY5MmJjOTViMzdlYzZkYmNhYmRhMA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-01-17T21:18:18Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-04-10T13:53:04Z"}, "message": "Test cases for mixed structured/dynamic data lifetimes with OpenACC [PR92843]\n\n\tlibgomp/\n\tPR libgomp/92843\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-1-lib.c:\n\tNew file.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-1.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-2-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-2.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-3-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-3.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-4-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-4.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-5-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-5.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-6-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-6.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-7-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-7.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-8-lib.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-8.c:\n\tLikewise.", "tree": {"sha": "f38e93522543be0066d2319d5d22c87c39d0ea14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f38e93522543be0066d2319d5d22c87c39d0ea14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be9862dd96945772ae0692bc95b37ec6dbcabda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9862dd96945772ae0692bc95b37ec6dbcabda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9862dd96945772ae0692bc95b37ec6dbcabda0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9862dd96945772ae0692bc95b37ec6dbcabda0/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b816a5f0ed078cb2d380e10e68a95fb7e3d6778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b816a5f0ed078cb2d380e10e68a95fb7e3d6778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b816a5f0ed078cb2d380e10e68a95fb7e3d6778"}], "stats": {"total": 821, "additions": 821, "deletions": 0}, "files": [{"sha": "b0f19845ad268393bc021a18df563430f29b4322", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -1,3 +1,40 @@\n+2020-04-10  Julian Brown  <julian@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libgomp/92843\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-1-lib.c:\n+\tNew file.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-1.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-2-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-2.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-3-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-3.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-4-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-4.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-5-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-5.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-6-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-6.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-7-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-7.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-8-lib.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-8.c:\n+\tLikewise.\n+\n 2020-04-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/target-enter-data-1.f90: Add 'dg-do"}, {"sha": "23c20d4fab7959df0d2d0fd5e1aae1918957d556", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-1-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-1-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-1-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-1-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-1.c\""}, {"sha": "a743660f53e3bdc6d512ff7dbe689a55c898a63e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-1.c", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-1.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,160 @@\n+/* Test transitioning of data lifetimes between static and dynamic.  */\n+\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+void\n+f1 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (acc_is_present (block1, SIZE));\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+  assert (acc_is_present (block1, SIZE));\n+  acc_copyout (block1, SIZE);\n+  assert (acc_is_present (block1, SIZE));\n+  acc_copyout (block1, SIZE);\n+  assert (!acc_is_present (block1, SIZE));\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+  assert (acc_is_present (block1, SIZE));\n+#pragma acc exit data copyout(block1[0:SIZE])\n+  assert (acc_is_present (block1, SIZE));\n+#pragma acc exit data copyout(block1[0:SIZE])\n+  assert (!acc_is_present (block1, SIZE));\n+#endif\n+\n+  free (block1);\n+}\n+\n+void\n+f2 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+    /* This should stay present until the end of the static data lifetime.  */\n+    assert (acc_is_present (block1, SIZE));\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+void\n+f3 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyout (block1, SIZE);\n+    acc_copyin (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+    assert (acc_is_present (block1, SIZE));\n+  }\n+\n+  assert (acc_is_present (block1, SIZE));\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+void\n+f4 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+  char *block3 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE], block3[0:SIZE])\n+  {\n+  /* The first copyin of block2 is the enclosing data region.  This\n+     \"enter data\" should make it live beyond the end of this region.\n+     This works, though the on-target copies of block1, block2 and block3\n+     will stay allocated until block2 is unmapped because they are bound\n+     together in a single target_mem_desc.  */\n+#ifdef OPENACC_API\n+    acc_copyin (block2, SIZE);\n+#else\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (acc_is_present (block2, SIZE));\n+  assert (!acc_is_present (block3, SIZE));\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block2, SIZE);\n+#else\n+#pragma acc exit data copyout(block2[0:SIZE])\n+#endif\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+  free (block3);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  f1 ();\n+  f2 ();\n+  f3 ();\n+  f4 ();\n+  return 0;\n+}"}, {"sha": "84f41a49dfdea25641b99911fe4952c2b6119f2a", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-2-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-2-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-2-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-2-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-2.c\""}, {"sha": "d3c6f5192d8720e9a3dc433c07e28c9baacc32e4", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-2.c", "status": "added", "additions": 166, "deletions": 0, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-2.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,166 @@\n+/* Test nested dynamic/static data mappings.  */\n+\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+void\n+f1 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+void\n+f2 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+  }\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+void\n+f3 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+    acc_copyin (block1, SIZE);\n+    acc_copyout (block1, SIZE);\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+void\n+f4 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE])\n+    {\n+#ifdef OPENACC_API\n+      acc_copyin (block1, SIZE);\n+      acc_copyout (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+    }\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+void\n+f5 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+#pragma acc data copy(block1[0:SIZE])\n+    {\n+    }\n+#ifdef OPENACC_API\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  free (block1);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  f1 ();\n+  f2 ();\n+  f3 ();\n+  f4 ();\n+  f5 ();\n+  return 0;\n+}"}, {"sha": "d9e76c600f070d8dd810dba41cfe48e6439db795", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-3-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-3-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-3-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-3-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-3.c\""}, {"sha": "595018643983e1421dc5c88f50293a3da8a218b9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-3.c", "status": "added", "additions": 183, "deletions": 0, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-3.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,183 @@\n+/* Test nested dynamic/static data mappings (multiple blocks on data\n+   regions).  */\n+\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+void\n+f1 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+}\n+\n+void\n+f2 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+  }\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+}\n+\n+void\n+f3 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+    acc_copyin (block2, SIZE);\n+    acc_copyout (block2, SIZE);\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#pragma acc exit data copyout(block2[0:SIZE])\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+}\n+\n+void\n+f4 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+    {\n+#ifdef OPENACC_API\n+      acc_copyin (block2, SIZE);\n+      acc_copyout (block2, SIZE);\n+#else\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#pragma acc exit data copyout(block2[0:SIZE])\n+#endif\n+    }\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+}\n+\n+void\n+f5 (void)\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyin (block2, SIZE);\n+#else\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+    {\n+    }\n+#ifdef OPENACC_API\n+    acc_copyout (block2, SIZE);\n+#else\n+#pragma acc exit data copyout(block2[0:SIZE])\n+#endif\n+  }\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  f1 ();\n+  f2 ();\n+  f3 ();\n+  f4 ();\n+  f5 ();\n+  return 0;\n+}"}, {"sha": "e3c1bfb473d0b7ad538cd7a787219ae2bcc34cfc", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-4-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-4-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-4-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-4-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-4.c\""}, {"sha": "e9a6510ace826073b43cdbc9c7c89e8db46f7501", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-4.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-4.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,64 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+  char *block3 = (char *) malloc (SIZE);\n+\n+  /* Doing this twice ensures that we have a non-zero virtual refcount.  Make\n+     sure that works too.  */\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE], block3[0:SIZE])\n+  {\n+  /* The first copyin of block2 is the enclosing data region.  This\n+     \"enter data\" should make it live beyond the end of this region.  */\n+#ifdef OPENACC_API\n+    acc_copyin (block2, SIZE);\n+#else\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#endif\n+  }\n+\n+  assert (acc_is_present (block1, SIZE));\n+  assert (acc_is_present (block2, SIZE));\n+  assert (!acc_is_present (block3, SIZE));\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+  assert (acc_is_present (block1, SIZE));\n+  acc_copyout (block1, SIZE);\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  acc_copyout (block2, SIZE);\n+  assert (!acc_is_present (block2, SIZE));\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+  assert (acc_is_present (block1, SIZE));\n+#pragma acc exit data copyout(block1[0:SIZE])\n+  assert (!acc_is_present (block1, SIZE));\n+\n+#pragma acc exit data copyout(block2[0:SIZE])\n+  assert (!acc_is_present (block2, SIZE));\n+#endif\n+\n+  free (block1);\n+  free (block2);\n+  free (block3);\n+\n+  return 0;\n+}"}, {"sha": "77703122ad6011521585031c02e58c41c827fe95", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-5-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-5-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-5-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-5-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-5.c\""}, {"sha": "9807076d3f4ee9edec10e677e4e2f1c0a75f5933", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-5.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-5.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,56 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+  char *block3 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE], block3[0:SIZE])\n+  {\n+  /* The first copyin of block2 is the enclosing data region.  This\n+     \"enter data\" should make it live beyond the end of this region.  */\n+#ifdef OPENACC_API\n+    acc_copyin (block2, SIZE);\n+#else\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#endif\n+  }\n+\n+  assert (acc_is_present (block1, SIZE));\n+  assert (acc_is_present (block2, SIZE));\n+  assert (!acc_is_present (block3, SIZE));\n+\n+#ifdef OPENACC_API\n+  acc_copyout (block1, SIZE);\n+  assert (!acc_is_present (block1, SIZE));\n+\n+  acc_copyout (block2, SIZE);\n+  assert (!acc_is_present (block2, SIZE));\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+  assert (!acc_is_present (block1, SIZE));\n+\n+#pragma acc exit data copyout(block2[0:SIZE])\n+  assert (!acc_is_present (block2, SIZE));\n+#endif\n+\n+  free (block1);\n+  free (block2);\n+  free (block3);\n+\n+  return 0;\n+}"}, {"sha": "4a87dd7252573d852c7d294770de38a77ca30542", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-6-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-6-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-6-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-6-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-6.c\""}, {"sha": "3e5c4d7ea117bc8e20dde037fa54fa1531a5dd80", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-6.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-6.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+  acc_copyin (block2, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE], block2[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyout (block1, SIZE);\n+    acc_copyout (block2, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE], block2[0:SIZE])\n+#endif\n+    /* These should stay present until the end of the static data lifetime.  */\n+    assert (acc_is_present (block1, SIZE));\n+    assert (acc_is_present (block2, SIZE));\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+\n+  return 0;\n+}"}, {"sha": "8ccbb12693373043b8e4535c1381932df78cc442", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-7-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-7-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-7-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-7-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-7.c\""}, {"sha": "2735d6fa0eb01c0e14fd431c80164afd7f088513", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-7.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-7.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+/* We can't attach the dynamic data mapping's (block1) target_mem_desc to the\n+   enclosing static data region here, because that region maps block2 also.  */\n+#ifdef OPENACC_API\n+    acc_copyout (block1, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#endif\n+    /* These should stay present until the end of the static data lifetime.  */\n+    assert (acc_is_present (block1, SIZE));\n+    assert (acc_is_present (block2, SIZE));\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+\n+  return 0;\n+}"}, {"sha": "f3104cbd0355b25c8f7fa4e7213ad1ea9cba3d8e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-8-lib.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-8-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-8-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-8-lib.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+/* { dg-additional-options \"-DOPENACC_API\" } */\n+#include \"static-dynamic-lifetimes-8.c\""}, {"sha": "919ee02b725bb0637d87d0b28999b6d070774734", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/static-dynamic-lifetimes-8.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be9862dd96945772ae0692bc95b37ec6dbcabda0/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fstatic-dynamic-lifetimes-8.c?ref=be9862dd96945772ae0692bc95b37ec6dbcabda0", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-skip-if \"\" { *-*-* } { \"-DACC_MEM_SHARED=1\" } } */\n+\n+#include <openacc.h>\n+#include <assert.h>\n+#include <stdlib.h>\n+\n+#define SIZE 1024\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  char *block1 = (char *) malloc (SIZE);\n+  char *block2 = (char *) malloc (SIZE);\n+\n+#ifdef OPENACC_API\n+  acc_copyin (block1, SIZE);\n+#else\n+#pragma acc enter data copyin(block1[0:SIZE])\n+#endif\n+\n+#pragma acc data copy(block1[0:SIZE], block2[0:SIZE])\n+  {\n+#ifdef OPENACC_API\n+    acc_copyout (block1, SIZE);\n+    acc_copyin (block2, SIZE);\n+#else\n+#pragma acc exit data copyout(block1[0:SIZE])\n+#pragma acc enter data copyin(block2[0:SIZE])\n+#endif\n+    assert (acc_is_present (block1, SIZE));\n+    assert (acc_is_present (block2, SIZE));\n+  }\n+\n+  assert (!acc_is_present (block1, SIZE));\n+  assert (acc_is_present (block2, SIZE));\n+#ifdef OPENACC_API\n+  acc_copyout (block2, SIZE);\n+#else\n+#pragma acc exit data copyout(block2[0:SIZE])\n+#endif\n+  assert (!acc_is_present (block2, SIZE));\n+\n+  free (block1);\n+  free (block2);\n+\n+  return 0;\n+}"}]}