{"sha": "d006f5eb56135d6130498994fd6e82c1198eb5e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAwNmY1ZWI1NjEzNWQ2MTMwNDk4OTk0ZmQ2ZTgyYzExOThlYjVlMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-01T08:19:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-01T08:19:44Z"}, "message": "configure.ac (HAVE_AS_JSRDIRECT_RELOCS): New.\n\n        * configure.ac (HAVE_AS_JSRDIRECT_RELOCS): New.\n        * config.in, configure: Rebuild.\n        * config/alpha/alpha.c (print_operand): Add 'j'.\n        * alpha.md (divmodsi_internal_er_1): Use it.\n        (divmoddi_internal_er_1): Likewise.\n\nFrom-SVN: r100435", "tree": {"sha": "f8aebf03584606e2ae131329608a12381249b1d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8aebf03584606e2ae131329608a12381249b1d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d006f5eb56135d6130498994fd6e82c1198eb5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d006f5eb56135d6130498994fd6e82c1198eb5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d006f5eb56135d6130498994fd6e82c1198eb5e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d006f5eb56135d6130498994fd6e82c1198eb5e1/comments", "author": null, "committer": null, "parents": [{"sha": "13a9737c1920fd99fc6116111cd60b7db0d5590c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a9737c1920fd99fc6116111cd60b7db0d5590c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a9737c1920fd99fc6116111cd60b7db0d5590c"}], "stats": {"total": 83, "additions": 79, "deletions": 4}, "files": [{"sha": "b7065525ee5e4887241d95953499a1bf2eaa2110", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d006f5eb56135d6130498994fd6e82c1198eb5e1", "patch": "@@ -1,3 +1,11 @@\n+2005-06-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* configure.ac (HAVE_AS_JSRDIRECT_RELOCS): New.\n+\t* config.in, configure: Rebuild.\n+\t* config/alpha/alpha.c (print_operand): Add 'j'.\n+\t* alpha.md (divmodsi_internal_er_1): Use it.\n+\t(divmoddi_internal_er_1): Likewise.\n+\n 2005-06-01  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* system.h (TARGET_OPTIONS, TARGET_SWITCHES): Poison."}, {"sha": "6221762435f58b7b09ad9346183addad1d819a8c", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=d006f5eb56135d6130498994fd6e82c1198eb5e1", "patch": "@@ -185,6 +185,12 @@\n #endif\n \n \n+/* Define if your assembler supports the lituse_jsrdirect relocation. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_JSRDIRECT_RELOCS\n+#endif\n+\n+\n /* Define if your assembler supports .sleb128 and .uleb128. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_LEB128"}, {"sha": "908165a7523ce0af3950fa8edd7ef7c9ae502101", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=d006f5eb56135d6130498994fd6e82c1198eb5e1", "patch": "@@ -4921,6 +4921,20 @@ print_operand (FILE *file, rtx x, int code)\n       }\n       break;\n \n+    case 'j':\n+      {\n+\tconst char *lituse;\n+\n+#ifdef HAVE_AS_JSRDIRECT_RELOCS\n+\tlituse = \"lituse_jsrdirect\";\n+#else\n+\tlituse = \"lituse_jsr\";\n+#endif\n+\n+\tgcc_assert (INTVAL (x) != 0);\n+\tfprintf (file, \"\\t\\t!%s!%d\", lituse, (int) INTVAL (x));\n+      }\n+      break;\n     case 'r':\n       /* If this operand is the constant zero, write it as \"$31\".  */\n       if (GET_CODE (x) == REG)"}, {"sha": "efb6d02f8e45075ed42d79c9a076d2e939db417a", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=d006f5eb56135d6130498994fd6e82c1198eb5e1", "patch": "@@ -978,7 +978,7 @@\n    (clobber (reg:DI 23))\n    (clobber (reg:DI 28))]\n   \"TARGET_EXPLICIT_RELOCS && ! TARGET_ABI_OPEN_VMS\"\n-  \"ldq $27,__%E3($29)\\t\\t!literal!%#\\;jsr $23,($27),__%E3\\t\\t!lituse_jsr!%#\"\n+  \"#\"\n   \"&& reload_completed\"\n   [(parallel [(set (match_dup 0)\n \t\t   (sign_extend:DI (match_dup 3)))\n@@ -1023,7 +1023,7 @@\n    (clobber (reg:DI 23))\n    (clobber (reg:DI 28))]\n   \"TARGET_EXPLICIT_RELOCS && ! TARGET_ABI_OPEN_VMS\"\n-  \"jsr $23,($27),__%E3%J5\"\n+  \"jsr $23,($27),__%E3%j5\"\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"4\")])\n \n@@ -1047,7 +1047,7 @@\n    (clobber (reg:DI 23))\n    (clobber (reg:DI 28))]\n   \"TARGET_EXPLICIT_RELOCS && ! TARGET_ABI_OPEN_VMS\"\n-  \"ldq $27,__%E3($29)\\t\\t!literal!%#\\;jsr $23,($27),__%E3\\t\\t!lituse_jsr!%#\"\n+  \"#\"\n   \"&& reload_completed\"\n   [(parallel [(set (match_dup 0) (match_dup 3))\n \t      (use (match_dup 0))\n@@ -1091,7 +1091,7 @@\n    (clobber (reg:DI 23))\n    (clobber (reg:DI 28))]\n   \"TARGET_EXPLICIT_RELOCS && ! TARGET_ABI_OPEN_VMS\"\n-  \"jsr $23,($27),__%E3%J5\"\n+  \"jsr $23,($27),__%E3%j5\"\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"4\")])\n "}, {"sha": "b4b41b977826f18ca209b77589440708db7997e6", "filename": "gcc/configure", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=d006f5eb56135d6130498994fd6e82c1198eb5e1", "patch": "@@ -14158,6 +14158,45 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_EXPLICIT_RELOCS 1\n _ACEOF\n \n+fi\n+    echo \"$as_me:$LINENO: checking assembler for jsrdirect relocation support\" >&5\n+echo $ECHO_N \"checking assembler for jsrdirect relocation support... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_alpha_jsrdirect_relocs+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_alpha_jsrdirect_relocs=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 16 \\) \\* 1000 + 90`\n+  then gcc_cv_as_alpha_jsrdirect_relocs=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '\t.set nomacro\n+\t.text\n+\tldq\t$27, a($29)\t!literal!1\n+\tjsr\t$26, ($27), a\t!lituse_jsrdirect!1' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_alpha_jsrdirect_relocs=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_alpha_jsrdirect_relocs\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_alpha_jsrdirect_relocs\" >&6\n+if test $gcc_cv_as_alpha_jsrdirect_relocs = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_JSRDIRECT_RELOCS 1\n+_ACEOF\n+\n fi\n     ;;\n "}, {"sha": "7c6bfceea72590a61e41182984c37f8c37cf7366", "filename": "gcc/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d006f5eb56135d6130498994fd6e82c1198eb5e1/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=d006f5eb56135d6130498994fd6e82c1198eb5e1", "patch": "@@ -2641,6 +2641,14 @@ case \"$target\" in\n \tlda\t$29, 0($29)\t!gpdisp!3],,\n     [AC_DEFINE(HAVE_AS_EXPLICIT_RELOCS, 1,\n   [Define if your assembler supports explicit relocations.])])\n+    gcc_GAS_CHECK_FEATURE([jsrdirect relocation support],\n+\tgcc_cv_as_alpha_jsrdirect_relocs, [2,16,90],,\n+[\t.set nomacro\n+\t.text\n+\tldq\t$27, a($29)\t!literal!1\n+\tjsr\t$26, ($27), a\t!lituse_jsrdirect!1],,\n+    [AC_DEFINE(HAVE_AS_JSRDIRECT_RELOCS, 1,\n+  [Define if your assembler supports the lituse_jsrdirect relocation.])])\n     ;;\n \n   cris-*-*)"}]}