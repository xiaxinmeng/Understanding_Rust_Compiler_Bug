{"sha": "697a7a575de01835b3941e6b6d25b940033301d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3YTdhNTc1ZGUwMTgzNWIzOTQxZTZiNmQyNWI5NDAwMzMzMDFkNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-09-28T19:39:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-09-28T19:39:32Z"}, "message": "Small lambda fixes.\n\n\t* call.c (build_special_member_call): Use the return value of\n\tmark_lvalue_use.\n\t* decl.c (compute_array_index_type): Likewise.\n\t* parser.c (cp_parser_oacc_wait_list): Likewise.\n\t* lambda.c (is_normal_capture_proxy): Handle *this capture.\n\t(add_capture): Clarify internal_error message.\n\nFrom-SVN: r253264", "tree": {"sha": "c8985e016bcb5b8322adb1fc5c653500fe51f82c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8985e016bcb5b8322adb1fc5c653500fe51f82c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/697a7a575de01835b3941e6b6d25b940033301d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697a7a575de01835b3941e6b6d25b940033301d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697a7a575de01835b3941e6b6d25b940033301d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697a7a575de01835b3941e6b6d25b940033301d5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ad0466f585aff427339b66e2228ac99d1d595bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad0466f585aff427339b66e2228ac99d1d595bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad0466f585aff427339b66e2228ac99d1d595bf"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "eeea726afdb499f88650245dd00ccb6deb3e0102", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=697a7a575de01835b3941e6b6d25b940033301d5", "patch": "@@ -1,3 +1,12 @@\n+2017-09-28  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (build_special_member_call): Use the return value of\n+\tmark_lvalue_use.\n+\t* decl.c (compute_array_index_type): Likewise.\n+\t* parser.c (cp_parser_oacc_wait_list): Likewise.\n+\t* lambda.c (is_normal_capture_proxy): Handle *this capture.\n+\t(add_capture): Clarify internal_error message.\n+\n 2017-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR bootstrap/81926"}, {"sha": "99a7b77efb2b3d92da71529e5ab82349778be509", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=697a7a575de01835b3941e6b6d25b940033301d5", "patch": "@@ -8845,7 +8845,7 @@ build_special_member_call (tree instance, tree name, vec<tree, va_gc> **args,\n \t      && (flags & LOOKUP_DELEGATING_CONS))\n \t    check_self_delegation (arg);\n \t  /* Avoid change of behavior on Wunused-var-2.C.  */\n-\t  mark_lvalue_use (instance);\n+\t  instance = mark_lvalue_use (instance);\n \t  return build2 (INIT_EXPR, class_type, instance, arg);\n \t}\n     }"}, {"sha": "ce45c1140d6802400f0edf57af7ed1942fb1e4a5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=697a7a575de01835b3941e6b6d25b940033301d5", "patch": "@@ -9329,7 +9329,7 @@ compute_array_index_type (tree name, tree size, tsubst_flags_t complain)\n     {\n       tree type = TREE_TYPE (size);\n \n-      mark_rvalue_use (size);\n+      size = mark_rvalue_use (size);\n \n       if (cxx_dialect < cxx11 && TREE_CODE (size) == NOP_EXPR\n \t  && TREE_SIDE_EFFECTS (size))"}, {"sha": "695666abbe33e869173d7e8a0b1ea499444816aa", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=697a7a575de01835b3941e6b6d25b940033301d5", "patch": "@@ -283,6 +283,8 @@ is_normal_capture_proxy (tree decl)\n   if (val == error_mark_node)\n     return true;\n \n+  if (TREE_CODE (val) == ADDR_EXPR)\n+    val = TREE_OPERAND (val, 0);\n   gcc_assert (TREE_CODE (val) == COMPONENT_REF);\n   val = TREE_OPERAND (val, 1);\n   return DECL_NORMAL_CAPTURE_P (val);\n@@ -592,7 +594,8 @@ add_capture (tree lambda, tree id, tree orig_init, bool by_reference_p,\n       && current_class_type == LAMBDA_EXPR_CLOSURE (lambda))\n     {\n       if (COMPLETE_TYPE_P (current_class_type))\n-\tinternal_error (\"trying to capture %qD after closure is complete\", id);\n+\tinternal_error (\"trying to capture %qD in instantiation of \"\n+\t\t\t\"generic lambda\", id);\n       finish_member_declaration (member);\n     }\n "}, {"sha": "bb2a8774aa0846007f479ce73aae8c591f5fd376", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697a7a575de01835b3941e6b6d25b940033301d5/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=697a7a575de01835b3941e6b6d25b940033301d5", "patch": "@@ -31712,7 +31712,7 @@ cp_parser_oacc_wait_list (cp_parser *parser, location_t clause_loc, tree list)\n \t    {\n \t      tree c = build_omp_clause (clause_loc, OMP_CLAUSE_WAIT);\n \n-\t      mark_rvalue_use (targ);\n+\t      targ = mark_rvalue_use (targ);\n \t      OMP_CLAUSE_DECL (c) = targ;\n \t      OMP_CLAUSE_CHAIN (c) = list;\n \t      list = c;"}]}