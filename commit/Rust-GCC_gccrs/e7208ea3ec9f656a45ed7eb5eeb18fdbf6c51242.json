{"sha": "e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcyMDhlYTNlYzlmNjU2YTQ1ZWQ3ZWI1ZWViMThmZGJmNmM1MTI0Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-05-15T17:48:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-05-15T17:48:26Z"}, "message": "i386.c (iy86_option_override_internal): Update processor_alias_table for missing PTA_PRFCHW and PTA_FXSR flags.\n\n\t* config/i386/i386.c (iy86_option_override_internal): Update\n\tprocessor_alias_table for missing PTA_PRFCHW and PTA_FXSR flags.  Add\n\tPTA_POPCNT to corei7 entry and remove PTA_SSE from athlon-4 entry.\n\tDo not enable SSE prefetch on non-SSE 3dNow! targets.  Enable\n\tTARGET_PRFCHW for TARGET_3DNOW targets.\n\t* config/i386/i386.md (prefetch): Enable for TARGET_PRFCHW instead\n\tof TARGET_3DNOW.\n\t(*prefetch_3dnow): Enable for TARGET_PRFCHW only.\n\nFrom-SVN: r198942", "tree": {"sha": "942eeb0ad36c65c24effa819fc0b0ba444ddcdbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/942eeb0ad36c65c24effa819fc0b0ba444ddcdbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/comments", "author": null, "committer": null, "parents": [{"sha": "e7413f3dee45949c1e205bd18072c2a7e6c09635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7413f3dee45949c1e205bd18072c2a7e6c09635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7413f3dee45949c1e205bd18072c2a7e6c09635"}], "stats": {"total": 105, "additions": 59, "deletions": 46}, "files": [{"sha": "6d61a4ed04de452574b2e37f0e82e0f636b90c18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "patch": "@@ -1,3 +1,14 @@\n+2013-05-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (iy86_option_override_internal): Update\n+\tprocessor_alias_table for missing PTA_PRFCHW and PTA_FXSR flags.  Add\n+\tPTA_POPCNT to corei7 entry and remove PTA_SSE from athlon-4 entry.\n+\tDo not enable SSE prefetch on non-SSE 3dNow! targets.  Enable\n+\tTARGET_PRFCHW for TARGET_3DNOW targets.\n+\t* config/i386/i386.md (prefetch): Enable for TARGET_PRFCHW instead\n+\tof TARGET_3DNOW.\n+\t(*prefetch_3dnow): Enable for TARGET_PRFCHW only.\n+\n 2013-05-15  Andreas Schwab  <schwab@suse.de>\n \n \t* config/m68k/m68k.md (*rotlhi3_lowpart, *rotlqi3_lowpart): Name\n@@ -132,9 +143,10 @@\n \n \tPR lto/57038\n \tPR lto/47375\n-\t* lto-symtab.c (lto_symtab_symbol_p): Add external symbol; weakrefs are\n-\tnot external.\n-\t(lto_symtab_merge_decls): Fix thinko when dealing with non-lto_symtab decls.\n+\t* lto-symtab.c (lto_symtab_symbol_p): Add external symbol;\n+\tweakrefs are not external.\n+\t(lto_symtab_merge_decls): Fix thinko when dealing with\n+\tnon-lto_symtab decls.\n \t(lto_symtab_merge_cgraph_nodes): Use lto_symtab_symbol_p.\n \t(lto_symtab_prevailing_decl): Get int sync with lto_symtab_symbol_p.\n \t* varpool.c (dump_varpool_node): Dump more flags.\n@@ -225,7 +237,7 @@\n 2013-05-14  Joern Rennecke <joern.rennecke@embecosm.com>\n \n \t* config/avr/avr.c (avr_encode_section_info): Bail out if the type\n-        is error_mark_node.\n+\tis error_mark_node.\n \n 2013-05-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -279,11 +291,9 @@\n \n \tPR target/56975\n \t* config/i386/cygming.h (TARGET_PECOFF): Define as true.\n-\t* config/i386/i386.h (TARGET_PECOFF): Define by default\n-\tas false.\n+\t* config/i386/i386.h (TARGET_PECOFF): Define by default as false.\n \t(PIC_OFFSET_TABLE_REGNUM): Use TARGET_PECOFF.\n-\t* config/i386/i386.c (ix86_option_override_internal):\n-\tLikewise.\n+\t* config/i386/i386.c (ix86_option_override_internal): Likewise.\n \t(ix86_expand_prologue): Likewise.\n \t(ix86_expand_split_stack_prologue): Likewise.\n \t(legitimate_pic_address_disp_p): Likewise.\n@@ -313,8 +323,9 @@\n \n \t* mode-switching.c (optimize_mode_switching): Set correct RTL profile.\n \t* config/i386/i386.c (ix86_compute_frame_layout,\n-\tix86_expand_epilogue, emit_i387_cw_initialization, ix86_expand_vector_move_misalign,\n-\tix86_fp_comparison_strategy, ix86_local_alignment): Fix use of size/speed predicates.\n+\tix86_expand_epilogue, emit_i387_cw_initialization,\n+\tix86_expand_vector_move_misalign, ix86_fp_comparison_strategy,\n+\tix86_local_alignment): Fix use of size/speed predicates.\n \n 2013-05-13  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -367,7 +378,7 @@\n \n 2013-05-13  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n-\t* config/i386/i386.c (processor_target_table): Modified default \n+\t* config/i386/i386.c (processor_target_table): Modified default\n \talignment values for AMD BD and BT architectures.\n \n 2013-05-13  Marc Glisse  <marc.glisse@inria.fr>"}, {"sha": "27684f6bbb190c9c50c81afc6b8eb288c8b4f60e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 33, "deletions": 28, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "patch": "@@ -2892,9 +2892,10 @@ ix86_option_override_internal (bool main_args_p)\n       {\"pentium\", PROCESSOR_PENTIUM, CPU_PENTIUM, 0},\n       {\"pentium-mmx\", PROCESSOR_PENTIUM, CPU_PENTIUM, PTA_MMX},\n       {\"winchip-c6\", PROCESSOR_I486, CPU_NONE, PTA_MMX},\n-      {\"winchip2\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW},\n-      {\"c3\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW},\n-      {\"c3-2\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, PTA_MMX | PTA_SSE},\n+      {\"winchip2\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW | PTA_PRFCHW},\n+      {\"c3\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW | PTA_PRFCHW},\n+      {\"c3-2\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO,\n+\tPTA_MMX | PTA_SSE | PTA_FXSR},\n       {\"i686\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, 0},\n       {\"pentiumpro\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, 0},\n       {\"pentium2\", PROCESSOR_PENTIUMPRO, CPU_PENTIUMPRO, PTA_MMX | PTA_FXSR},\n@@ -2917,8 +2918,8 @@ ix86_option_override_internal (bool main_args_p)\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_CX16 | PTA_FXSR},\n       {\"corei7\", PROCESSOR_COREI7, CPU_COREI7,\n-\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n-\t| PTA_SSSE3 | PTA_SSE4_1 | PTA_SSE4_2 | PTA_CX16 | PTA_FXSR},\n+\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3 | PTA_SSSE3\n+\t| PTA_SSE4_1 | PTA_SSE4_2 | PTA_CX16 | PTA_POPCNT | PTA_FXSR},\n       {\"corei7-avx\", PROCESSOR_COREI7, CPU_COREI7,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_SSE4_1 | PTA_SSE4_2 | PTA_AVX\n@@ -2940,49 +2941,49 @@ ix86_option_override_internal (bool main_args_p)\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSSE3 | PTA_CX16 | PTA_MOVBE | PTA_FXSR},\n       {\"geode\", PROCESSOR_GEODE, CPU_GEODE,\n-\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE},\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE | PTA_PRFCHW},\n       {\"k6\", PROCESSOR_K6, CPU_K6, PTA_MMX},\n-      {\"k6-2\", PROCESSOR_K6, CPU_K6, PTA_MMX | PTA_3DNOW},\n-      {\"k6-3\", PROCESSOR_K6, CPU_K6, PTA_MMX | PTA_3DNOW},\n+      {\"k6-2\", PROCESSOR_K6, CPU_K6, PTA_MMX | PTA_3DNOW | PTA_PRFCHW},\n+      {\"k6-3\", PROCESSOR_K6, CPU_K6, PTA_MMX | PTA_3DNOW | PTA_PRFCHW},\n       {\"athlon\", PROCESSOR_ATHLON, CPU_ATHLON,\n-\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE},\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE | PTA_PRFCHW},\n       {\"athlon-tbird\", PROCESSOR_ATHLON, CPU_ATHLON,\n-\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE},\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE | PTA_PRFCHW},\n       {\"athlon-4\", PROCESSOR_ATHLON, CPU_ATHLON,\n-\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE},\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_PREFETCH_SSE | PTA_PRFCHW},\n       {\"athlon-xp\", PROCESSOR_ATHLON, CPU_ATHLON,\n-\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE},\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE | PTA_PRFCHW | PTA_FXSR},\n       {\"athlon-mp\", PROCESSOR_ATHLON, CPU_ATHLON,\n-\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE},\n+\tPTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE | PTA_PRFCHW | PTA_FXSR},\n       {\"x86-64\", PROCESSOR_K8, CPU_K8,\n-\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_NO_SAHF},\n+\tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_NO_SAHF | PTA_FXSR},\n       {\"k8\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"k8-sse3\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"opteron\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"opteron-sse3\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"athlon64\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"athlon64-sse3\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_SSE3 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"athlon-fx\", PROCESSOR_K8, CPU_K8,\n \tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_NO_SAHF},\n+\t| PTA_SSE2 | PTA_NO_SAHF | PTA_PRFCHW | PTA_FXSR},\n       {\"amdfam10\", PROCESSOR_AMDFAM10, CPU_AMDFAM10,\n-\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_SSE3 | PTA_SSE4A | PTA_CX16 | PTA_ABM},\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE | PTA_SSE2\n+\t| PTA_SSE3 | PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_PRFCHW | PTA_FXSR},\n       {\"barcelona\", PROCESSOR_AMDFAM10, CPU_AMDFAM10,\n-\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE\n-\t| PTA_SSE2 | PTA_SSE3 | PTA_SSE4A | PTA_CX16 | PTA_ABM},\n+\tPTA_64BIT | PTA_MMX | PTA_3DNOW | PTA_3DNOW_A | PTA_SSE | PTA_SSE2\n+\t| PTA_SSE3 | PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_PRFCHW | PTA_FXSR},\n       {\"bdver1\", PROCESSOR_BDVER1, CPU_BDVER1,\n \tPTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2 | PTA_SSE3\n \t| PTA_SSE4A | PTA_CX16 | PTA_ABM | PTA_SSSE3 | PTA_SSE4_1\n@@ -3592,14 +3593,18 @@ ix86_option_override_internal (bool main_args_p)\n     ix86_isa_flags |= OPTION_MASK_ISA_MMX & ~ix86_isa_flags_explicit;\n \n   /* Enable SSE prefetch.  */\n-  if (TARGET_SSE || TARGET_PRFCHW)\n+  if (TARGET_SSE || (TARGET_PRFCHW && !TARGET_3DNOW))\n     x86_prefetch_sse = true;\n \n-  /* Turn on popcnt instruction for -msse4.2 or -mabm.  */\n+  /* Enable prefetch{,w} instructions for -m3dnow.  */\n+  if (TARGET_3DNOW)\n+    ix86_isa_flags |= OPTION_MASK_ISA_PRFCHW & ~ix86_isa_flags_explicit;\n+\n+  /* Enable popcnt instruction for -msse4.2 or -mabm.  */\n   if (TARGET_SSE4_2 || TARGET_ABM)\n     ix86_isa_flags |= OPTION_MASK_ISA_POPCNT & ~ix86_isa_flags_explicit;\n \n-  /* Turn on lzcnt instruction for -mabm.  */\n+  /* Enable lzcnt instruction for -mabm.  */\n   if (TARGET_ABM)\n     ix86_isa_flags |= OPTION_MASK_ISA_LZCNT & ~ix86_isa_flags_explicit;\n "}, {"sha": "6361649208769ba8632f27e0da1493b7f52bb94a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e7208ea3ec9f656a45ed7eb5eeb18fdbf6c51242", "patch": "@@ -17041,21 +17041,18 @@\n   [(prefetch (match_operand 0 \"address_operand\")\n \t     (match_operand:SI 1 \"const_int_operand\")\n \t     (match_operand:SI 2 \"const_int_operand\"))]\n-  \"TARGET_PREFETCH_SSE || TARGET_3DNOW\"\n+  \"TARGET_PREFETCH_SSE || TARGET_PRFCHW\"\n {\n-  int rw = INTVAL (operands[1]);\n+  bool write = INTVAL (operands[1]) != 0;\n   int locality = INTVAL (operands[2]);\n \n-  gcc_assert (rw == 0 || rw == 1);\n   gcc_assert (IN_RANGE (locality, 0, 3));\n \n-  if (TARGET_PRFCHW && rw)\n-    operands[2] = GEN_INT (3);\n   /* Use 3dNOW prefetch in case we are asking for write prefetch not\n      supported by SSE counterpart or the SSE prefetch is not available\n      (K6 machines).  Otherwise use SSE prefetch as it allows specifying\n      of locality.  */\n-  else if (TARGET_3DNOW && (!TARGET_PREFETCH_SSE || rw))\n+  if (TARGET_PRFCHW && (write || !TARGET_PREFETCH_SSE))\n     operands[2] = GEN_INT (3);\n   else\n     operands[1] = const0_rtx;\n@@ -17086,7 +17083,7 @@\n   [(prefetch (match_operand 0 \"address_operand\" \"p\")\n \t     (match_operand:SI 1 \"const_int_operand\" \"n\")\n \t     (const_int 3))]\n-  \"TARGET_3DNOW || TARGET_PRFCHW\"\n+  \"TARGET_PRFCHW\"\n {\n   if (INTVAL (operands[1]) == 0)\n     return \"prefetch\\t%a0\";"}]}