{"sha": "3cb9ee2f9c10a04a7498be3279897b46669c61dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NiOWVlMmY5YzEwYTA0YTc0OThiZTMyNzk4OTdiNDY2NjljNjFkYw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2017-04-25T07:41:41Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2017-04-25T07:41:41Z"}, "message": "S/390: PR79895: Fix TImode constant handling\n\nThe P constraint letter is supposed to match every constant which is\nacceptable during reload.  However, constraints do not appear to be\nable to handle const_wide_int yet.  It works with predicates so the\nalternative is modelled with a new predicate now.\n\ngcc/ChangeLog:\n\n2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\tPR target/79895\n\t* config/s390/predicates.md (reload_const_wide_int_operand): New\n\tpredicate.\n\t* config/s390/s390.md (\"movti\"): Remove d/P alternative.\n\t(\"movti_bigconst\"): New pattern definition.\n\ngcc/testsuite/ChangeLog:\n\n2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\tPR target/79895\n\t* gcc.target/s390/pr79895.c: New test.\n\nFrom-SVN: r247133", "tree": {"sha": "68d8a15d09edb7899d14406a9af12510a5810f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68d8a15d09edb7899d14406a9af12510a5810f30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cb9ee2f9c10a04a7498be3279897b46669c61dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb9ee2f9c10a04a7498be3279897b46669c61dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cb9ee2f9c10a04a7498be3279897b46669c61dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cb9ee2f9c10a04a7498be3279897b46669c61dc/comments", "author": null, "committer": null, "parents": [{"sha": "03db9ab59481e07de0f8b651e6cc5c0f7d26b330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03db9ab59481e07de0f8b651e6cc5c0f7d26b330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03db9ab59481e07de0f8b651e6cc5c0f7d26b330"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "e9cefd918e43c0291efa5d50ab5e54b9273b88a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3cb9ee2f9c10a04a7498be3279897b46669c61dc", "patch": "@@ -1,3 +1,11 @@\n+2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\tPR target/79895\n+\t* config/s390/predicates.md (reload_const_wide_int_operand): New\n+\tpredicate.\n+\t* config/s390/s390.md (\"movti\"): Remove d/P alternative.\n+\t(\"movti_bigconst\"): New pattern definition.\n+\n 2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \tPR target/80080"}, {"sha": "34a7ea284556618093501a8f9613ee0feb4215e3", "filename": "gcc/config/s390/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Fconfig%2Fs390%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Fconfig%2Fs390%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fpredicates.md?ref=3cb9ee2f9c10a04a7498be3279897b46669c61dc", "patch": "@@ -199,6 +199,11 @@\n       (and (match_code \"const_int\")\n \t   (match_test \"INTVAL (op) <= 32767 && INTVAL (op) >= -32768\"))))\n \n+(define_predicate \"reload_const_wide_int_operand\"\n+  (and (match_code \"const_wide_int\")\n+       (match_test \"legitimate_reload_constant_p (op)\")))\n+\n+\n ;; operators --------------------------------------------------------------\n \n ;; Return nonzero if OP is a valid comparison operator"}, {"sha": "c9fd19aeb330b9cdc77116f44d16be33236c8e64", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=3cb9ee2f9c10a04a7498be3279897b46669c61dc", "patch": "@@ -1494,11 +1494,20 @@\n ; movti instruction pattern(s).\n ;\n \n+\n+; Separate out the register pair alternative since constraints (P) are\n+; not able to deal with const_wide_int's.  But predicates do.\n+(define_insn \"*movti_bigconst\"\n+  [(set (match_operand:TI 0 \"register_operand\"              \"=d\")\n+        (match_operand:TI 1 \"reload_const_wide_int_operand\" \"\"))]\n+  \"TARGET_ZARCH\"\n+  \"#\")\n+\n ; FIXME: More constants are possible by enabling jxx, jyy constraints\n ; for TImode (use double-int for the calculations)\n (define_insn \"movti\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,S,v,  v,  v,v,d,v,R,  d,o\")\n-        (match_operand:TI 1 \"general_operand\"      \" S,d,v,j00,jm1,d,v,R,v,dPT,d\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,S,v,  v,  v,v,d,v,R, d,o\")\n+        (match_operand:TI 1 \"general_operand\"      \" S,d,v,j00,jm1,d,v,R,v,dT,d\"))]\n   \"TARGET_ZARCH\"\n   \"@\n    lmg\\t%0,%N0,%S1"}, {"sha": "ffa5b4a604d63481176bf7c960c3b7b500343ebb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cb9ee2f9c10a04a7498be3279897b46669c61dc", "patch": "@@ -1,3 +1,8 @@\n+2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\tPR target/79895\n+\t* gcc.target/s390/pr79895.c: New test.\n+\n 2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \tPR target/80080"}, {"sha": "02374e4b8a80fbebe3335c6f2394b5910f41dca6", "filename": "gcc/testsuite/gcc.target/s390/pr79895.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr79895.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cb9ee2f9c10a04a7498be3279897b46669c61dc/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr79895.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr79895.c?ref=3cb9ee2f9c10a04a7498be3279897b46669c61dc", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O1 -mno-lra\" } */\n+\n+unsigned __int128 g;\n+void\n+foo ()\n+{\n+  g = (unsigned __int128)1 << 127;\n+}"}]}