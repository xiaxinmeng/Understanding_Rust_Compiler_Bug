{"sha": "276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc2ZTAyMjQzYTNlOWRmZDJmYTcwNDNkYmE4NWRmYjg1YTgxZjIyYQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-08-03T11:48:21Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2011-08-03T11:48:21Z"}, "message": "re PR rtl-optimization/49941 (segmentation fault in redirect_jump_2)\n\n\tPR rtl-optimization/49941\n\t* jump.c (mark_jump_label): Comment.\n\t(mark_jump_label_1): Set JUMP_LABEL for return jumps.\n\t* emit-rtl.c (copy_rtx_if_shared_1, copy_insn_1): Leave RETURN shared.\n\t(mark_used_flags): Don't mark RETURN.\n\nFrom-SVN: r177268", "tree": {"sha": "93c98a43871a16b1f0bacd16de0dd5976685e26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93c98a43871a16b1f0bacd16de0dd5976685e26b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/comments", "author": null, "committer": null, "parents": [{"sha": "eb723fa314a09f6cf8708f8243a436ff9475558c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb723fa314a09f6cf8708f8243a436ff9475558c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb723fa314a09f6cf8708f8243a436ff9475558c"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "72902da53dd8fcb2b840867b1ef720bfa2ad8824", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "patch": "@@ -1,3 +1,11 @@\n+2011-08-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/49941\n+\t* jump.c (mark_jump_label): Comment.\n+\t(mark_jump_label_1): Set JUMP_LABEL for return jumps.\n+\t* emit-rtl.c (copy_rtx_if_shared_1, copy_insn_1): Leave RETURN shared.\n+\t(mark_used_flags): Don't mark RETURN.\n+\n 2011-08-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49938\n@@ -176,10 +184,10 @@\n \tboolean-typed operands for comparisons.\n \n 2011-08-02  Georg-Johann Lay  <avr@gjlay.de>\n-\t\n+\n \t* config/avr/libgcc.S: Gather related function in the\n \tsame input section.\n- \t(__mulqihi3, __mulqihi3, __divmodqi4, __divmodhi4, __udivmodsi4,\n+\t(__mulqihi3, __mulqihi3, __divmodqi4, __divmodhi4, __udivmodsi4,\n \t__divmodsi4): Use XCALL/XJMP instead of rcall/rjmp for external\n \treferences.\n \t(__udivmodqi4, __divmodqi4, __udivmodhi4, __divmodhi4,\n@@ -21337,7 +21345,7 @@\n \tto cselib_lookup.\n \t(add_uses): Likewise, also to cselib_subst_to_values.\n \t(add_stores): Likewise.\n-\t* sched-deps.c \t(add_insn_mem_dependence): Pass mode to\n+\t* sched-deps.c (add_insn_mem_dependence): Pass mode to\n \tcselib_subst_to_values.\n \t(sched_analyze_1, sched_analyze_2): Likewise.  Adjusted.\n \t* gcse.c (do_local_cprop): Adjusted."}, {"sha": "16a1c6cd981c4b9f43f56e59c7e20919de292a89", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "patch": "@@ -2724,6 +2724,7 @@ copy_rtx_if_shared_1 (rtx *orig1)\n     case CODE_LABEL:\n     case PC:\n     case CC0:\n+    case RETURN:\n     case SCRATCH:\n       /* SCRATCH must be shared because they represent distinct values.  */\n       return;\n@@ -2843,6 +2844,7 @@ mark_used_flags (rtx x, int flag)\n     case CODE_LABEL:\n     case PC:\n     case CC0:\n+    case RETURN:\n       return;\n \n     case DEBUG_INSN:\n@@ -5261,6 +5263,7 @@ copy_insn_1 (rtx orig)\n     case CODE_LABEL:\n     case PC:\n     case CC0:\n+    case RETURN:\n       return orig;\n     case CLOBBER:\n       if (REG_P (XEXP (orig, 0)) && REGNO (XEXP (orig, 0)) < FIRST_PSEUDO_REGISTER)"}, {"sha": "8dc78f2aceba6b463a2e21c033e45f096973c37d", "filename": "gcc/jump.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/276e02243a3e9dfd2fa7043dba85dfb85a81f22a/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=276e02243a3e9dfd2fa7043dba85dfb85a81f22a", "patch": "@@ -1,7 +1,7 @@\n /* Optimize jump instructions, for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n-   Free Software Foundation, Inc.\n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010,\n+   2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -1039,6 +1039,7 @@ sets_cc0_p (const_rtx x)\n    notes.  If INSN is an INSN or a CALL_INSN or non-target operands of\n    a JUMP_INSN, and there is at least one CODE_LABEL referenced in\n    INSN, add a REG_LABEL_OPERAND note containing that label to INSN.\n+   For returnjumps, the JUMP_LABEL will also be set as appropriate.\n \n    Note that two labels separated by a loop-beginning note\n    must be kept distinct if we have not yet done loop-optimization,\n@@ -1081,6 +1082,14 @@ mark_jump_label_1 (rtx x, rtx insn, bool in_mem, bool is_target)\n     case CALL:\n       return;\n \n+    case RETURN:\n+      if (is_target)\n+\t{\n+\t  gcc_assert (JUMP_LABEL (insn) == NULL || JUMP_LABEL (insn) == x);\n+\t  JUMP_LABEL (insn) = x;\n+\t}\n+      return;\n+\n     case MEM:\n       in_mem = true;\n       break;"}]}