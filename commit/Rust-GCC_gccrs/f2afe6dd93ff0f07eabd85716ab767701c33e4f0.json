{"sha": "f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhZmU2ZGQ5M2ZmMGYwN2VhYmQ4NTcxNmFiNzY3NzAxYzMzZTRmMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-07-27T19:09:27Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-07-27T19:09:27Z"}, "message": "re PR bootstrap/67030 (ARM bootstrap failure due to [-Werror=tautological-compare])\n\n\tPR bootstrap/67030\n\t* c-common.c (warn_tautological_cmp): Don't warn for macro expansion.\n\n\t* c-c++-common/Wtautological-compare-2.c: New test.\n\nFrom-SVN: r226264", "tree": {"sha": "345acc5884d42fd6642fbee07236f691cb326a41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/345acc5884d42fd6642fbee07236f691cb326a41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cca444fb00473658e18f52209dc64709af2005b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca444fb00473658e18f52209dc64709af2005b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca444fb00473658e18f52209dc64709af2005b2"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "06853ea86e96dd33ec10476de268e5a0c9a59cf9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "patch": "@@ -1,3 +1,8 @@\n+2015-07-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR bootstrap/67030\n+\t* c-common.c (warn_tautological_cmp): Don't warn for macro expansion.\n+\n 2015-07-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/66555"}, {"sha": "caa801e2adbcb10e7a4f4cded8e076f208a636bd", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "patch": "@@ -1890,6 +1890,12 @@ warn_tautological_cmp (location_t loc, enum tree_code code, tree lhs, tree rhs)\n   if (TREE_CODE_CLASS (code) != tcc_comparison)\n     return;\n \n+  /* Don't warn for various macro expansions.  */\n+  if (from_macro_expansion_at (loc)\n+      || from_macro_expansion_at (EXPR_LOCATION (lhs))\n+      || from_macro_expansion_at (EXPR_LOCATION (rhs)))\n+    return;\n+\n   /* We do not warn for constants because they are typical of macro\n      expansions that test for features, sizeof, and similar.  */\n   if (CONSTANT_CLASS_P (lhs) || CONSTANT_CLASS_P (rhs))"}, {"sha": "b769807a26a954a043d16459ea3a5b45cc3374d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "patch": "@@ -1,3 +1,8 @@\n+2015-07-27  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR bootstrap/67030\n+\t* c-c++-common/Wtautological-compare-2.c: New test.\n+\n 2015-07-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/66232"}, {"sha": "c8aecefdecb116c51ec37c9d52c11b7e28a6d0f8", "filename": "gcc/testsuite/c-c++-common/Wtautological-compare-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2afe6dd93ff0f07eabd85716ab767701c33e4f0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-2.c?ref=f2afe6dd93ff0f07eabd85716ab767701c33e4f0", "patch": "@@ -0,0 +1,15 @@\n+/* PR bootstrap/67030 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wtautological-compare\" } */\n+\n+extern int foo (void);\n+\n+#define A a\n+#define B A\n+#define FOO (A > B)\n+\n+void\n+fn1 (int a)\n+{\n+  if (FOO);\n+}"}]}