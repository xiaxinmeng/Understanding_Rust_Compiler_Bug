{"sha": "3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA3MGU2ODYwNzRjZjFlNmY5MDgwMmJhMTJlNTZiNWRjZjVhMTJjYQ==", "commit": {"author": {"name": "Georges-Alex Jaloyan", "email": "jaloyan@adacore.com", "date": "2017-09-08T10:06:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-08T10:06:39Z"}, "message": "g-dynhta.adb, [...] (Get_First_Key, [...]): Correction of the return type from access type to option type.\n\n2017-09-08  Georges-Alex Jaloyan  <jaloyan@adacore.com>\n\n\t* g-dynhta.adb, g-dynhta.ads (Get_First_Key, Get_Next_key):\n\tCorrection of the return type from access type to option type.\n\t(Simple_HTable): Moving the Instance_Data to ads file.\n\nFrom-SVN: r251881", "tree": {"sha": "2cc3d42268df8f7b5851b20cca3e4ef50ac07405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cc3d42268df8f7b5851b20cca3e4ef50ac07405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/comments", "author": null, "committer": null, "parents": [{"sha": "f63adaa7a4ae18c7b0dc420f9e298f5b0746da6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63adaa7a4ae18c7b0dc420f9e298f5b0746da6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63adaa7a4ae18c7b0dc420f9e298f5b0746da6f"}], "stats": {"total": 82, "additions": 49, "deletions": 33}, "files": [{"sha": "7b1b79738c4fa05d79362279141b95a5116c97c0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "patch": "@@ -1,3 +1,9 @@\n+2017-09-08  Georges-Alex Jaloyan  <jaloyan@adacore.com>\n+\n+\t* g-dynhta.adb, g-dynhta.ads (Get_First_Key, Get_Next_key):\n+\tCorrection of the return type from access type to option type.\n+\t(Simple_HTable): Moving the Instance_Data to ads file.\n+\n 2017-09-08  Yannick Moy  <moy@adacore.com>\n \n \t* sem_prag.adb: Use System.Case_Util.To_Lower to simplify code."}, {"sha": "afa9e8071e4b290db16f4f6ca662de0bfae514f9", "filename": "gcc/ada/g-dynhta.adb", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/gcc%2Fada%2Fg-dynhta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/gcc%2Fada%2Fg-dynhta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.adb?ref=3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "patch": "@@ -39,15 +39,6 @@ package body GNAT.Dynamic_HTables is\n \n    package body Static_HTable is\n \n-      type Table_Type is array (Header_Num) of Elmt_Ptr;\n-\n-      type Instance_Data is record\n-         Table            : Table_Type;\n-         Iterator_Index   : Header_Num;\n-         Iterator_Ptr     : Elmt_Ptr;\n-         Iterator_Started : Boolean := False;\n-      end record;\n-\n       function Get_Non_Null (T : Instance) return Elmt_Ptr;\n       --  Returns Null_Ptr if Iterator_Started is False or if the Table is\n       --  empty. Returns Iterator_Ptr if non null, or the next non null\n@@ -260,13 +251,13 @@ package body GNAT.Dynamic_HTables is\n       -- Get_First_Key --\n       -------------------\n \n-      function Get_First_Key (T : Instance) return access constant Key is\n-         Tmp : aliased constant Elmt_Ptr := Tab.Get_First (Tab.Instance (T));\n+      function Get_First_Key (T : Instance) return Key_Option is\n+         Tmp : constant Elmt_Ptr := Tab.Get_First (Tab.Instance (T));\n       begin\n          if Tmp = null then\n-            return null;\n+            return Key_Option'(Present => False);\n          else\n-            return Tmp.all.K'Access;\n+            return Key_Option'(Present => True, K => Tmp.all.K);\n          end if;\n       end Get_First_Key;\n \n@@ -297,13 +288,13 @@ package body GNAT.Dynamic_HTables is\n       -- Get_Next_Key --\n       ------------------\n \n-      function Get_Next_Key (T : Instance) return access constant Key is\n-         Tmp : aliased constant Elmt_Ptr := Tab.Get_Next (Tab.Instance (T));\n+      function Get_Next_Key (T : Instance) return Key_Option is\n+         Tmp : constant Elmt_Ptr := Tab.Get_Next (Tab.Instance (T));\n       begin\n          if Tmp = null then\n-            return null;\n+            return Key_Option'(Present => False);\n          else\n-            return Tmp.all.K'Access;\n+            return Key_Option'(Present => True, K => Tmp.all.K);\n          end if;\n       end Get_Next_Key;\n "}, {"sha": "85a04270daf83a086fe9850e474b71e349c98f4a", "filename": "gcc/ada/g-dynhta.ads", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/gcc%2Fada%2Fg-dynhta.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3070e686074cf1e6f90802ba12e56b5dcf5a12ca/gcc%2Fada%2Fg-dynhta.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.ads?ref=3070e686074cf1e6f90802ba12e56b5dcf5a12ca", "patch": "@@ -133,8 +133,17 @@ package GNAT.Dynamic_HTables is\n       --  elements of the Htable will be traversed.\n \n    private\n-      type Instance_Data;\n+      type Table_Type is array (Header_Num) of Elmt_Ptr;\n+\n+      type Instance_Data is record\n+         Table            : Table_Type;\n+         Iterator_Index   : Header_Num;\n+         Iterator_Ptr     : Elmt_Ptr;\n+         Iterator_Started : Boolean := False;\n+      end record;\n+\n       type Instance is access all Instance_Data;\n+\n       Nil : constant Instance := null;\n    end Static_HTable;\n \n@@ -168,6 +177,13 @@ package GNAT.Dynamic_HTables is\n       type Instance is private;\n       Nil : constant Instance;\n \n+      type Key_Option (Present : Boolean := False) is record\n+         case Present is\n+            when True  => K : Key;\n+            when False => null;\n+         end case;\n+      end record;\n+\n       procedure Set (T : in out Instance; K : Key; E : Element);\n       --  Associates an element with a given key. Overrides any previously\n       --  associated element.\n@@ -178,24 +194,26 @@ package GNAT.Dynamic_HTables is\n       --  access to the table).\n \n       function Get (T : Instance; K : Key) return Element;\n-      --  Returns the Element associated with a key or No_Element if the\n-      --  given key has not associated element\n+      --  Returns the Element associated with a key or No_Element if the given\n+      --  key has not associated element\n \n       procedure Remove (T : Instance; K : Key);\n-      --  Removes the latest inserted element pointer associated with the\n-      --  given key if any, does nothing if none.\n+      --  Removes the latest inserted element pointer associated with the given\n+      --  key if any, does nothing if none.\n \n       function Get_First (T : Instance) return Element;\n       --  Returns No_Element if the Htable is empty, otherwise returns one\n       --  unspecified element. There is no guarantee that two calls to this\n       --  function will return the same element, if the Htable has been\n       --  modified between the two calls.\n \n-      function Get_First_Key (T : Instance) return access constant Key;\n-      --  Returns Null if the Htable is empty, otherwise returns one\n-      --  unspecified key. There is no guarantee that two calls to this\n-      --  function will return the same key, if the Htable has been modified\n-      --  between the two calls.\n+      function Get_First_Key (T : Instance) return Key_Option;\n+      --  Returns an option type giving an unspecified key. If the Htable\n+      --  is empty, the discriminant will have field Present set to False,\n+      --  otherwise its Present field is set to True and the field K contains\n+      --  the key. There is no guarantee that two calls to this function will\n+      --  return the same key, if the Htable has been modified between the two\n+      --  calls.\n \n       function Get_Next (T : Instance) return Element;\n       --  Returns an unspecified element that has not been returned by the\n@@ -207,18 +225,19 @@ package GNAT.Dynamic_HTables is\n       --  between a call to Get_First and subsequent consecutive calls to\n       --  Get_Next, until one of these calls returns No_Element.\n \n-      function Get_Next_Key (T : Instance) return access constant Key;\n-      --  Same as Get_Next except that this returns an unspecified access\n-      --  to constant key that has not been returned by either Get_First_Key\n-      --  or this very same function (or null if there is none). The same\n-      --  restrictions apply as Get_Next.\n+      function Get_Next_Key (T : Instance) return Key_Option;\n+      --  Same as Get_Next except that this returns an option type having field\n+      --  Present set either to False if there no key never returned before by\n+      --  either Get_First_Key or this very same function, or to True if there\n+      --  is one, with the field K containing the key specified as before. The\n+      --  same restrictions apply as Get_Next.\n \n    private\n \n       type Element_Wrapper;\n       type Elmt_Ptr is access all Element_Wrapper;\n       type Element_Wrapper is record\n-         K    : aliased Key;\n+         K    : Key;\n          E    : Element;\n          Next : Elmt_Ptr;\n       end record;"}]}