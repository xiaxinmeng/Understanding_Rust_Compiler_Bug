{"sha": "506c8a71828f223422a68e7c5fad1f5d994c0ace", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2YzhhNzE4MjhmMjIzNDIyYTY4ZTdjNWZhZDFmNWQ5OTRjMGFjZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-25T20:29:24Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-25T20:29:24Z"}, "message": "(init_arg_profiler, output_arc_profiler): Delete unused\nfunctions.\n\nFrom-SVN: r3341", "tree": {"sha": "d48ad83282eaac7839835a17123b531cb9e7960d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d48ad83282eaac7839835a17123b531cb9e7960d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506c8a71828f223422a68e7c5fad1f5d994c0ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506c8a71828f223422a68e7c5fad1f5d994c0ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506c8a71828f223422a68e7c5fad1f5d994c0ace", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506c8a71828f223422a68e7c5fad1f5d994c0ace/comments", "author": null, "committer": null, "parents": [{"sha": "1cae86786847a38584228e3dbdf51d9005379a63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cae86786847a38584228e3dbdf51d9005379a63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cae86786847a38584228e3dbdf51d9005379a63"}], "stats": {"total": 50, "additions": 0, "deletions": 50}, "files": [{"sha": "e3c02850cb2fadb8c351a2ed2b80e1e608707507", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506c8a71828f223422a68e7c5fad1f5d994c0ace/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506c8a71828f223422a68e7c5fad1f5d994c0ace/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=506c8a71828f223422a68e7c5fad1f5d994c0ace", "patch": "@@ -2514,56 +2514,6 @@ order_regs_for_local_alloc ()\n     }\n }\n \f\n-/* Machine dependent routines for the branch probability, arc profiling\n-   code.  */\n-\n-/* The label used by the arc profiling code.  */\n-\n-static rtx profiler_label;\n-\n-void\n-init_arc_profiler ()\n-{\n-  /* Generate and save a copy of this so it can be shared.  */\n-  profiler_label = gen_rtx (SYMBOL_REF, Pmode, \"*LPBX2\");\n-}\n-\n-void\n-output_arc_profiler (arcno, insert_after)\n-     int arcno;\n-     rtx insert_after;\n-{\n-  rtx profiler_target_addr\n-    = gen_rtx (CONST, Pmode,\n-\t       gen_rtx (PLUS, Pmode, profiler_label,\n-\t\t\tgen_rtx (CONST_INT, VOIDmode, 4 * arcno)));\n-  register rtx profiler_reg = gen_reg_rtx (SImode);\n-  register rtx address_reg = gen_reg_rtx (Pmode);\n-  rtx mem_ref;\n-\n-  insert_after = emit_insn_after (gen_rtx (SET, VOIDmode, address_reg,\n-\t\t\t\t\t   gen_rtx (HIGH, Pmode,\n-\t\t\t\t\t\t    profiler_target_addr)),\n-\t\t\t\t  insert_after);\n-\n-  mem_ref = gen_rtx (MEM, SImode, gen_rtx (LO_SUM, Pmode, address_reg,\n-\t\t\t\t\t   profiler_target_addr));\n-  insert_after = emit_insn_after (gen_rtx (SET, VOIDmode, profiler_reg,\n-\t\t\t\t\t   mem_ref),\n-\t\t\t\t  insert_after);\n-\n-  insert_after = emit_insn_after (gen_rtx (SET, VOIDmode, profiler_reg,\n-\t\t\t\t\t   gen_rtx (PLUS, SImode, profiler_reg,\n-\t\t\t\t\t\t    const1_rtx)),\n-\t\t\t\t  insert_after);\n-\n-  /* This is the same rtx as above, but it is not legal to share this rtx.  */\n-  mem_ref = gen_rtx (MEM, SImode, gen_rtx (LO_SUM, Pmode, address_reg,\n-\t\t\t\t\t   profiler_target_addr));\n-  emit_insn_after (gen_rtx (SET, VOIDmode, mem_ref, profiler_reg),\n-\t\t   insert_after);\n-}\n-\n /* Return 1 if REGNO (reg1) is even and REGNO (reg1) == REGNO (reg2) - 1.\n    This makes them candidates for using ldd and std insns. \n "}]}