{"sha": "65f527e0a581ca9563784ce6f7725fbb119893b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmNTI3ZTBhNTgxY2E5NTYzNzg0Y2U2Zjc3MjVmYmIxMTk4OTNiNw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-03-01T03:39:03Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2005-03-01T03:39:03Z"}, "message": "linux.h (MD_EXEC_PREFIX, [...]): Don't undefine here.\n\n\t* config/sh/linux.h (MD_EXEC_PREFIX, MD_STARTFILE_PREFIX):\n\tDon't undefine here.\n\t(HANDLE_PRAGMA_PACK_PUSH_POP): Delete.\n\t(NO_IMPLICIT_EXTERN_C, CPLUSPLUS_CPP_SPEC): Likewise.\n\t(TARGET_OS_CPP_BUILTINS): Use LINUX_TARGET_OS_CPP_BUILTINS.\n\t(LIB_SPEC, LINK_EH_SPEC, STARTFILE_SPEC, ENDFILE_SPEC,\n\tLINK_GCC_C_SEQUENCE_SPEC, USE_LD_AS_NEEDED, TARGET_C99_FUNCTIONS):\n\tDelete.\n\t* config.gcc (sh*-*-linux*): Use config/linux.h.\n\nFrom-SVN: r95726", "tree": {"sha": "588797781456b376d3982ccc08434b9250a1d1a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/588797781456b376d3982ccc08434b9250a1d1a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f527e0a581ca9563784ce6f7725fbb119893b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f527e0a581ca9563784ce6f7725fbb119893b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f527e0a581ca9563784ce6f7725fbb119893b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f527e0a581ca9563784ce6f7725fbb119893b7/comments", "author": null, "committer": null, "parents": [{"sha": "0b5383eba096fa2bec2d62242ea0f1bc5350ebc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5383eba096fa2bec2d62242ea0f1bc5350ebc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5383eba096fa2bec2d62242ea0f1bc5350ebc3"}], "stats": {"total": 86, "additions": 23, "deletions": 63}, "files": [{"sha": "f6b1f8b1863a420a088e303be76cba4d65551be4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f527e0a581ca9563784ce6f7725fbb119893b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f527e0a581ca9563784ce6f7725fbb119893b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65f527e0a581ca9563784ce6f7725fbb119893b7", "patch": "@@ -1,3 +1,15 @@\n+2005-02-28  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/linux.h (MD_EXEC_PREFIX, MD_STARTFILE_PREFIX):\n+\tDon't undefine here.\n+\t(HANDLE_PRAGMA_PACK_PUSH_POP): Delete.\n+\t(NO_IMPLICIT_EXTERN_C, CPLUSPLUS_CPP_SPEC): Likewise.\n+\t(TARGET_OS_CPP_BUILTINS): Use LINUX_TARGET_OS_CPP_BUILTINS.\n+\t(LIB_SPEC, LINK_EH_SPEC, STARTFILE_SPEC, ENDFILE_SPEC,\n+\tLINK_GCC_C_SEQUENCE_SPEC, USE_LD_AS_NEEDED, TARGET_C99_FUNCTIONS):\n+\tDelete.\n+\t* config.gcc (sh*-*-linux*): Use config/linux.h.\n+\n 2005-02-28  Dale Johannesen  <dalej@apple.com>\n \t    Stan Shebs  <shebs@apple.com>\n "}, {"sha": "bfe694745d74dfdef2f705482eb0fcfb4bdfa45b", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f527e0a581ca9563784ce6f7725fbb119893b7/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f527e0a581ca9563784ce6f7725fbb119893b7/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=65f527e0a581ca9563784ce6f7725fbb119893b7", "patch": "@@ -1761,7 +1761,7 @@ sh-*-symbianelf* | sh[12346l]*-*-symbianelf* | \\\n \ttm_file=\"${tm_file} sh/elf.h\"\n \tcase ${target} in\n \tsh*-*-linux*)\ttmake_file=\"${tmake_file} sh/t-linux\"\n-\t\t\ttm_file=\"${tm_file} sh/linux.h\" ;;\n+\t\t\ttm_file=\"${tm_file} linux.h sh/linux.h\" ;;\n \tsh*-*-kaos*)\ttm_file=\"${tm_file} sh/embed-elf.h kaos.h sh/kaos-sh.h\"\n \t\t\t;;\n \tsh*-*-netbsd*)\ttm_file=\"${tm_file} netbsd.h netbsd-elf.h sh/netbsd-elf.h\" ;;"}, {"sha": "412ce46d9cdc5aa8afed5666cb484d092b66cf2a", "filename": "gcc/config/sh/linux.h", "status": "modified", "additions": 10, "deletions": 62, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f527e0a581ca9563784ce6f7725fbb119893b7/gcc%2Fconfig%2Fsh%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f527e0a581ca9563784ce6f7725fbb119893b7/gcc%2Fconfig%2Fsh%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux.h?ref=65f527e0a581ca9563784ce6f7725fbb119893b7", "patch": "@@ -24,20 +24,6 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_VERSION\n #define TARGET_VERSION  fputs (\" (SH GNU/Linux with ELF)\", stderr);\n \n-/* We're not SYSVR4, not having /usr/ccs */\n-#undef MD_EXEC_PREFIX\n-#undef MD_STARTFILE_PREFIX\n-\n-/* This was defined in linux.h.  Define it here also.  */\n-#define HANDLE_PRAGMA_PACK_PUSH_POP\n-\n-/* Don't assume anything about the header files.  */\n-#define NO_IMPLICIT_EXTERN_C\n-\n-/* The GNU C++ standard library requires that these macros be defined.  */\n-#undef CPLUSPLUS_CPP_SPEC\n-#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n-\n /* Enable DWARF 2 exceptions.  */\n #undef DWARF2_UNWIND_INFO\n #define DWARF2_UNWIND_INFO 1\n@@ -49,14 +35,16 @@ Boston, MA 02111-1307, USA.  */\n \"\n \n #define TARGET_OS_CPP_BUILTINS() \\\n-do { \\\n-  builtin_define_std (\"unix\"); \\\n-  builtin_define (\"__gnu_linux__\"); \\\n-  builtin_define_std (\"linux\"); \\\n-  builtin_assert (\"system=linux\"); \\\n-  builtin_assert (\"system=unix\"); \\\n-  builtin_assert (\"system=posix\"); \\\n-} while (0)\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      LINUX_TARGET_OS_CPP_BUILTINS();\t\t\\\n+      if (flag_pic)\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__PIC__\");\t\t\\\n+\t  builtin_define (\"__pic__\");\t\t\\\n+\t}\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\\n@@ -74,46 +62,6 @@ do { \\\n      %{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n    %{static:-static}\"\n \n-#undef LIB_SPEC\n-#define LIB_SPEC \\\n-  \"%{pthread:-lpthread} \\\n-   %{shared: -lc} \\\n-   %{!shared: \\\n-     %{mieee-fp:-lieee} \\\n-     %{profile:-lc_p} %{!profile: -lc}}\"\n-\n-#if defined(HAVE_LD_EH_FRAME_HDR)\n-#undef LINK_EH_SPEC\n-#define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n-#endif\n-\n-#undef STARTFILE_SPEC\n-#if defined HAVE_LD_PIE\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#else\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: %{pg|p|profile:gcrt1.o%s;:crt1.o%s}} \\\n-   crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n-#endif\n-\n-#undef\tENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n-  \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n-\n-#define LINK_GCC_C_SEQUENCE_SPEC \\\n-  \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n-\n-/* Use --as-needed -lgcc_s for eh support.  */\n-#ifdef HAVE_LD_AS_NEEDED\n-#define USE_LD_AS_NEEDED 1\n-#endif\n-\n-/* Determine whether the the entire c99 runtime\n-   is present in the runtime library.  */\n-#define TARGET_C99_FUNCTIONS 1\n-\n /* Output assembler code to STREAM to call the profiler.  */\n \n #undef FUNCTION_PROFILER"}]}