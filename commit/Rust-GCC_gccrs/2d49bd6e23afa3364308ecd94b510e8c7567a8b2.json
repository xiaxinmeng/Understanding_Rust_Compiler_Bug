{"sha": "2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0OWJkNmUyM2FmYTMzNjQzMDhlY2Q5NGI1MTBlOGM3NTY3YThiMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-08T14:58:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-08T14:58:21Z"}, "message": "re PR c++/50324 ([C++0x] SFINAE does not handle the object creation of an incomplete type)\n\n/cp\n2011-09-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50324\n\t* typeck2.c (digest_init_r): Call complete_type_or_maybe_complain\n\tinstead of complete_type_or_else.\n\n/testsuite\n2011-09-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/50324\n\t* g++.dg/cpp0x/sfinae28.C: New.\n\nFrom-SVN: r178694", "tree": {"sha": "c58efadfba765e278a672c64afb9bd58b44ade33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c58efadfba765e278a672c64afb9bd58b44ade33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/comments", "author": null, "committer": null, "parents": [{"sha": "3797cb21ffb893336be1c6b0d4e3bfd8b35fe884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3797cb21ffb893336be1c6b0d4e3bfd8b35fe884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3797cb21ffb893336be1c6b0d4e3bfd8b35fe884"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "9fbbbee9caf8ac7a1851a3ad393376c28374da5a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "patch": "@@ -1,3 +1,9 @@\n+2011-09-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50324\n+\t* typeck2.c (digest_init_r): Call complete_type_or_maybe_complain\n+\tinstead of complete_type_or_else.\n+\n 2011-09-08  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/33255 - Support -Wunused-local-typedefs warning"}, {"sha": "1c0bb38a8b8774ba48e3a874673b8552727981ee", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "patch": "@@ -1,7 +1,7 @@\n /* Report error messages, build initializers, and perform\n    some front-end optimizations for C++ compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   1999, 2000, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n@@ -812,8 +812,9 @@ digest_init_r (tree type, tree init, bool nested, int flags,\n \n   /* We must strip the outermost array type when completing the type,\n      because the its bounds might be incomplete at the moment.  */\n-  if (!complete_type_or_else (TREE_CODE (type) == ARRAY_TYPE\n-\t\t\t      ? TREE_TYPE (type) : type, NULL_TREE))\n+  if (!complete_type_or_maybe_complain (TREE_CODE (type) == ARRAY_TYPE\n+\t\t\t\t\t? TREE_TYPE (type) : type, NULL_TREE,\n+\t\t\t\t\tcomplain))\n     return error_mark_node;\n \n   /* Strip NON_LVALUE_EXPRs since we aren't using as an lvalue"}, {"sha": "fcf62c7bdccd0ccdeae4bb602ff6383d1f5f3897", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "patch": "@@ -1,3 +1,8 @@\n+2011-09-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/50324\n+\t* g++.dg/cpp0x/sfinae28.C: New.\n+\n 2011-09-08  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/33255 - Support -Wunused-local-typedefs warning"}, {"sha": "da64f413c71cc677aef376b5e0688ea7f0afdee4", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae28.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d49bd6e23afa3364308ecd94b510e8c7567a8b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae28.C?ref=2d49bd6e23afa3364308ecd94b510e8c7567a8b2", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/50324\n+// { dg-options -std=c++0x }\n+\n+struct complete { };\n+struct incomplete;\n+\n+template<class T> auto f(T *) -> decltype(T{}) *;\n+template<class T> char f(T);\n+\n+int main()\n+{\n+  complete *p = 0;\n+  static_assert(sizeof(f(p)) == sizeof(void*), \"\");\n+  incomplete *q = 0;\n+  static_assert(sizeof(f(q)) == 1u, \"\");\n+}"}]}