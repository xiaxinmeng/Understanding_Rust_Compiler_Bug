{"sha": "a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk2NDdiZjkxMmI5ZDJlZWI5Mjk3YmI5NmQ1Mjc0ZWI4YzllZDc1Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-21T22:58:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-01-21T22:58:04Z"}, "message": "compiler: stop iterator on error\n    \n    If there is an error reading or parsing an archive header, the\n    Archive_iterator code would return a dummy header but would not mark\n    itself as done.  The effect is that an invalid archive leads to an\n    endless loop reading and re-reading the same archive header.  Avoid\n    that by setting the offset to the end of the file, which will cause\n    the iterator to == archive_end.\n    \n    No test since it doesn't seem worth constructing an invalid archive.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/158217\n\nFrom-SVN: r268129", "tree": {"sha": "805b10a222dd770260a63a4af45cdde56018196b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/805b10a222dd770260a63a4af45cdde56018196b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c/comments", "author": null, "committer": null, "parents": [{"sha": "44f4e4182bb7954a117781e7f4f658af69dec3fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f4e4182bb7954a117781e7f4f658af69dec3fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f4e4182bb7954a117781e7f4f658af69dec3fd"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "c5b51b79a9566468ac1846b78bf3fd0b26af92c9", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c", "patch": "@@ -1,4 +1,4 @@\n-c76ba3014e42cc6adc3d43709bba28c5ad7a6ba2\n+e7427654f3af83e1feea727a62a97172d7721403\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "868def7cc7579244a658c3fdd9606455f98cf2aa", "filename": "gcc/go/gofrontend/import-archive.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c/gcc%2Fgo%2Fgofrontend%2Fimport-archive.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c/gcc%2Fgo%2Fgofrontend%2Fimport-archive.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport-archive.cc?ref=a9647bf912b9d2eeb9297bb96d5274eb8c9ed75c", "patch": "@@ -780,6 +780,7 @@ Archive_iterator::read_next_header()\n                                      &this->next_off_))\n \t{\n \t  this->header_.off = filesize;\n+\t  this->off_ = filesize;\n \t  return;\n \t}\n       this->header_.off = this->off_;"}]}