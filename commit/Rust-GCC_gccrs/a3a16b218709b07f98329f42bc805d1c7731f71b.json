{"sha": "a3a16b218709b07f98329f42bc805d1c7731f71b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNhMTZiMjE4NzA5YjA3Zjk4MzI5ZjQyYmM4MDVkMWM3NzMxZjcxYg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2011-08-01T10:15:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T10:15:08Z"}, "message": "a-stzfix.adb, [...] (Replace_Slice): Fixed computation when High is above Source length.\n\n2011-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* a-stzfix.adb, a-stwifi.adb (Replace_Slice): Fixed computation when\n\tHigh is above Source length.\n\nFrom-SVN: r177007", "tree": {"sha": "86ff1efde4c61f8e8a7fd029042f82c224172f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86ff1efde4c61f8e8a7fd029042f82c224172f22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3a16b218709b07f98329f42bc805d1c7731f71b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a16b218709b07f98329f42bc805d1c7731f71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3a16b218709b07f98329f42bc805d1c7731f71b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a16b218709b07f98329f42bc805d1c7731f71b/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff58cc6919e0364fddc7dc355c48246ad1e7c2e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff58cc6919e0364fddc7dc355c48246ad1e7c2e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff58cc6919e0364fddc7dc355c48246ad1e7c2e6"}], "stats": {"total": 79, "additions": 52, "deletions": 27}, "files": [{"sha": "e9de33682589826bb6d16f2e0dc0c3249f00c397", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a16b218709b07f98329f42bc805d1c7731f71b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a16b218709b07f98329f42bc805d1c7731f71b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a3a16b218709b07f98329f42bc805d1c7731f71b", "patch": "@@ -1,3 +1,8 @@\n+2011-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* a-stzfix.adb, a-stwifi.adb (Replace_Slice): Fixed computation when\n+\tHigh is above Source length.\n+\n 2011-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* a-ztexio.ads, a-textio.ads, a-witeio.ads: Fix comment."}, {"sha": "31278505b8a06cfbee5576bb1ffd7d1b6e2da66b", "filename": "gcc/ada/a-stwifi.adb", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a16b218709b07f98329f42bc805d1c7731f71b/gcc%2Fada%2Fa-stwifi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a16b218709b07f98329f42bc805d1c7731f71b/gcc%2Fada%2Fa-stwifi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwifi.adb?ref=a3a16b218709b07f98329f42bc805d1c7731f71b", "patch": "@@ -447,30 +447,40 @@ package body Ada.Strings.Wide_Fixed is\n       High   : Natural;\n       By     : Wide_String) return Wide_String\n    is\n-      Result_Length : Natural;\n-\n    begin\n       if Low > Source'Last + 1 or else High < Source'First - 1 then\n          raise Index_Error;\n-      else\n-         Result_Length :=\n-           Source'Length - Natural'Max (High - Low + 1, 0) + By'Length;\n+      end if;\n \n+      if High >= Low then\n          declare\n-            Result : Wide_String (1 .. Result_Length);\n+            Front_Len : constant Integer :=\n+              Integer'Max (0, Low - Source'First);\n+            --  Length of prefix of Source copied to result\n+\n+            Back_Len  : constant Integer :=\n+              Integer'Max (0, Source'Last - High);\n+            --  Length of suffix of Source copied to result\n+\n+            Result_Length : constant Integer :=\n+              Front_Len + By'Length + Back_Len;\n+            --  Length of result\n+\n+            Result    : Wide_String (1 .. Result_Length);\n \n          begin\n-            if High >= Low then\n-               Result :=\n-                  Source (Source'First .. Low - 1) & By &\n-                  Source (High + 1 .. Source'Last);\n-            else\n-               Result := Source (Source'First .. Low - 1) & By &\n-                         Source (Low .. Source'Last);\n-            end if;\n+            Result (1 .. Front_Len) :=\n+              Source (Source'First .. Low - 1);\n+            Result (Front_Len + 1 .. Front_Len + By'Length) :=\n+              By;\n+            Result (Front_Len + By'Length + 1 .. Result'Length) :=\n+              Source (High + 1 .. Source'Last);\n \n             return Result;\n          end;\n+\n+      else\n+         return Insert (Source, Before => Low, New_Item => By);\n       end if;\n    end Replace_Slice;\n "}, {"sha": "67f5482f95b825dba9f02005676f4d6bf70127e1", "filename": "gcc/ada/a-stzfix.adb", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a16b218709b07f98329f42bc805d1c7731f71b/gcc%2Fada%2Fa-stzfix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a16b218709b07f98329f42bc805d1c7731f71b/gcc%2Fada%2Fa-stzfix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzfix.adb?ref=a3a16b218709b07f98329f42bc805d1c7731f71b", "patch": "@@ -449,30 +449,40 @@ package body Ada.Strings.Wide_Wide_Fixed is\n       High   : Natural;\n       By     : Wide_Wide_String) return Wide_Wide_String\n    is\n-      Result_Length : Natural;\n-\n    begin\n       if Low > Source'Last + 1 or else High < Source'First - 1 then\n          raise Index_Error;\n-      else\n-         Result_Length :=\n-           Source'Length - Natural'Max (High - Low + 1, 0) + By'Length;\n+      end if;\n \n+      if High >= Low then\n          declare\n+            Front_Len : constant Integer :=\n+                          Integer'Max (0, Low - Source'First);\n+            --  Length of prefix of Source copied to result\n+\n+            Back_Len  : constant Integer :=\n+                          Integer'Max (0, Source'Last - High);\n+            --  Length of suffix of Source copied to result\n+\n+            Result_Length : constant Integer :=\n+                              Front_Len + By'Length + Back_Len;\n+            --  Length of result\n+\n             Result : Wide_Wide_String (1 .. Result_Length);\n \n          begin\n-            if High >= Low then\n-               Result :=\n-                  Source (Source'First .. Low - 1) & By &\n-                  Source (High + 1 .. Source'Last);\n-            else\n-               Result := Source (Source'First .. Low - 1) & By &\n-                         Source (Low .. Source'Last);\n-            end if;\n+            Result (1 .. Front_Len) :=\n+              Source (Source'First .. Low - 1);\n+            Result (Front_Len + 1 .. Front_Len + By'Length) :=\n+              By;\n+            Result (Front_Len + By'Length + 1 .. Result'Length) :=\n+              Source (High + 1 .. Source'Last);\n \n             return Result;\n          end;\n+\n+      else\n+         return Insert (Source, Before => Low, New_Item => By);\n       end if;\n    end Replace_Slice;\n "}]}