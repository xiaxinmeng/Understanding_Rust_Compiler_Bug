{"sha": "688fb8553bd589d6cfc71de467f38ae725199da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4ZmI4NTUzYmQ1ODlkNmNmYzcxZGU0NjdmMzhhZTcyNTE5OWRhOQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-02-05T14:19:57Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-15T10:19:25Z"}, "message": "[Ada] Clarify the semantics of signed intrinsic shift operations\n\ngcc/ada/\n\n\t* doc/gnat_rm/intrinsic_subprograms.rst: More details on shift\n\toperations for signed types. Also add the missing Import and\n\tConvention on the example.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "195984e3b3ed718f67bdee5df2412f27756684f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/195984e3b3ed718f67bdee5df2412f27756684f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/688fb8553bd589d6cfc71de467f38ae725199da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688fb8553bd589d6cfc71de467f38ae725199da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/688fb8553bd589d6cfc71de467f38ae725199da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/688fb8553bd589d6cfc71de467f38ae725199da9/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "385484ef92f34ff7b420312927aaa174e5a8a696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385484ef92f34ff7b420312927aaa174e5a8a696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385484ef92f34ff7b420312927aaa174e5a8a696"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "355b1399b2f831cfb85a4a6928d82e2496520bf4", "filename": "gcc/ada/doc/gnat_rm/intrinsic_subprograms.rst", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688fb8553bd589d6cfc71de467f38ae725199da9/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fintrinsic_subprograms.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688fb8553bd589d6cfc71de467f38ae725199da9/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fintrinsic_subprograms.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fintrinsic_subprograms.rst?ref=688fb8553bd589d6cfc71de467f38ae725199da9", "patch": "@@ -203,7 +203,8 @@ type (signed or modular), as in this example:\n \n      function Shift_Left\n        (Value  : T;\n-        Amount : Natural) return T;\n+        Amount : Natural) return T\n+     with Import, Convention => Intrinsic;\n \n \n The function name must be one of\n@@ -215,11 +216,12 @@ The result type must be the same as the type of ``Value``.\n The shift amount must be Natural.\n The formal parameter names can be anything.\n \n-A more convenient way of providing these shift operators is to use\n-the Provide_Shift_Operators pragma, which provides the function declarations\n-and corresponding pragma Import's for all five shift functions. Note that in\n-using these provided shift operations, shifts performed on negative numbers\n-will result in modification of the sign bit.\n+A more convenient way of providing these shift operators is to use the\n+Provide_Shift_Operators pragma, which provides the function declarations and\n+corresponding pragma Import's for all five shift functions. For signed types\n+the semantics of these operators is to interpret the bitwise result of the\n+corresponding operator for modular type. In particular, shifting a negative\n+number may change its sign bit to positive.\n \n .. _Source_Location:\n "}, {"sha": "8f0a370f68424756c76326282d515ecd5e80543c", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/688fb8553bd589d6cfc71de467f38ae725199da9/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/688fb8553bd589d6cfc71de467f38ae725199da9/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=688fb8553bd589d6cfc71de467f38ae725199da9", "patch": "@@ -17917,7 +17917,8 @@ type (signed or modular), as in this example:\n @example\n function Shift_Left\n   (Value  : T;\n-   Amount : Natural) return T;\n+   Amount : Natural) return T\n+with Import, Convention => Intrinsic;\n @end example\n \n The function name must be one of\n@@ -17929,11 +17930,12 @@ The result type must be the same as the type of @code{Value}.\n The shift amount must be Natural.\n The formal parameter names can be anything.\n \n-A more convenient way of providing these shift operators is to use\n-the Provide_Shift_Operators pragma, which provides the function declarations\n-and corresponding pragma Import's for all five shift functions. Note that in\n-using these provided shift operations, shifts performed on negative numbers\n-will result in modification of the sign bit.\n+A more convenient way of providing these shift operators is to use the\n+Provide_Shift_Operators pragma, which provides the function declarations and\n+corresponding pragma Import's for all five shift functions. For signed types\n+the semantics of these operators is to interpret the bitwise result of the\n+corresponding operator for modular type. In particular, shifting a negative\n+number may change its sign bit to positive.\n \n @node Source_Location,,Shifts and Rotates,Intrinsic Subprograms\n @anchor{gnat_rm/intrinsic_subprograms source-location}@anchor{274}@anchor{gnat_rm/intrinsic_subprograms id13}@anchor{275}"}]}