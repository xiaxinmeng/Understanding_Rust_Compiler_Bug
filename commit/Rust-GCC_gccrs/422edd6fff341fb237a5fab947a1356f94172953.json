{"sha": "422edd6fff341fb237a5fab947a1356f94172953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIyZWRkNmZmZjM0MWZiMjM3YTVmYWI5NDdhMTM1NmY5NDE3Mjk1Mw==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2005-07-18T06:35:48Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2005-07-18T06:35:48Z"}, "message": "i386.md (movdi_extzv_1): New.\n\ngcc/\n2005-07-18  Jan Beulich  <jbeulich@novell.com>\n\n\t* i386.md (movdi_extzv_1): New.\n\t(zero_extendhidi2): Combine alternatives and never force use of\n\tREX64 prefix.\n\t(zero_extendqidi2): Likewise. Don't restrict input selection.\n\nFrom-SVN: r102128", "tree": {"sha": "900b54722ddfc741e98e87750e75debf5ee83456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/900b54722ddfc741e98e87750e75debf5ee83456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/422edd6fff341fb237a5fab947a1356f94172953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422edd6fff341fb237a5fab947a1356f94172953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/422edd6fff341fb237a5fab947a1356f94172953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422edd6fff341fb237a5fab947a1356f94172953/comments", "author": null, "committer": null, "parents": [{"sha": "ba9bb602ee11a1ff57e4d753cfc15644fdd23cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9bb602ee11a1ff57e4d753cfc15644fdd23cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9bb602ee11a1ff57e4d753cfc15644fdd23cab"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "543858647c0479f2c4b0926b99ca09cb88abd391", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/422edd6fff341fb237a5fab947a1356f94172953/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/422edd6fff341fb237a5fab947a1356f94172953/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=422edd6fff341fb237a5fab947a1356f94172953", "patch": "@@ -1,3 +1,10 @@\n+2005-07-18  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* i386.md (movdi_extzv_1): New.\n+\t(zero_extendhidi2): Combine alternatives and never force use of\n+\tREX64 prefix.\n+\t(zero_extendqidi2): Likewise. Don't restrict input selection.\n+\n 2005-07-17  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/22531"}, {"sha": "e7f2e222dfd003232be356e2650f7ef8330937c3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/422edd6fff341fb237a5fab947a1356f94172953/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/422edd6fff341fb237a5fab947a1356f94172953/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=422edd6fff341fb237a5fab947a1356f94172953", "patch": "@@ -1685,6 +1685,16 @@\n    (set_attr \"memory\" \"load\")\n    (set_attr \"mode\" \"QI\")])\n \n+(define_insn \"*movdi_extzv_1\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=R\")\n+\t(zero_extract:DI (match_operand 1 \"ext_register_operand\" \"Q\")\n+\t\t\t (const_int 8)\n+\t\t\t (const_int 8)))]\n+  \"TARGET_64BIT\"\n+  \"movz{bl|x}\\t{%h1, %k0|%k0, %h1}\"\n+  [(set_attr \"type\" \"imovx\")\n+   (set_attr \"mode\" \"DI\")])\n+\n (define_insn \"*movsi_extzv_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=R\")\n \t(zero_extract:SI (match_operand 1 \"ext_register_operand\" \"Q\")\n@@ -3189,24 +3199,20 @@\n   \"split_di (&operands[0], 1, &operands[3], &operands[4]);\")\n \n (define_insn \"zero_extendhidi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-     (zero_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"r,m\")))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+     (zero_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"rm\")))]\n   \"TARGET_64BIT\"\n-  \"@\n-   movz{wl|x}\\t{%1, %k0|%k0, %1}\n-   movz{wq|x}\\t{%1, %0|%0, %1}\"\n+  \"movz{wl|x}\\t{%1, %k0|%k0, %1}\"\n   [(set_attr \"type\" \"imovx\")\n-   (set_attr \"mode\" \"SI,DI\")])\n+   (set_attr \"mode\" \"DI\")])\n \n (define_insn \"zero_extendqidi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-     (zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"Q,m\")))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+     (zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"rm\")))]\n   \"TARGET_64BIT\"\n-  \"@\n-   movz{bl|x}\\t{%1, %k0|%k0, %1}\n-   movz{bq|x}\\t{%1, %0|%0, %1}\"\n+  \"movz{bl|x}\\t{%1, %k0|%k0, %1}\"\n   [(set_attr \"type\" \"imovx\")\n-   (set_attr \"mode\" \"SI,DI\")])\n+   (set_attr \"mode\" \"DI\")])\n \f\n ;; Sign extension instructions\n "}]}