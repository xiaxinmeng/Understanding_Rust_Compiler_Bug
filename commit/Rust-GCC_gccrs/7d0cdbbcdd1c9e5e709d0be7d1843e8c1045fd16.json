{"sha": "7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "node_id": "C_kwDOANBUbNoAKDdkMGNkYmJjZGQxYzllNWU3MDlkMGJlN2QxODQzZThjMTA0NWZkMTY", "commit": {"author": {"name": "Dimitrij Mijoski", "email": "dmjpp@hotmail.com", "date": "2023-01-17T21:12:12Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2023-01-18T18:53:11Z"}, "message": "libstdc++: testsuite: Simplify codecvt_unicode\n\nStop using unique_ptr, create some objects directly.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/22_locale/codecvt/codecvt_unicode.cc: Simplify.\n\t* testsuite/22_locale/codecvt/codecvt_unicode.h: Simplify.\n\t* testsuite/22_locale/codecvt/codecvt_unicode_wchar_t.cc: Simplify.", "tree": {"sha": "5004eb3f7aebaa774ba8a36c0808fbe2b4782e50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5004eb3f7aebaa774ba8a36c0808fbe2b4782e50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/comments", "author": {"login": "dimztimz", "id": 6236568, "node_id": "MDQ6VXNlcjYyMzY1Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/6236568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimztimz", "html_url": "https://github.com/dimztimz", "followers_url": "https://api.github.com/users/dimztimz/followers", "following_url": "https://api.github.com/users/dimztimz/following{/other_user}", "gists_url": "https://api.github.com/users/dimztimz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimztimz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimztimz/subscriptions", "organizations_url": "https://api.github.com/users/dimztimz/orgs", "repos_url": "https://api.github.com/users/dimztimz/repos", "events_url": "https://api.github.com/users/dimztimz/events{/privacy}", "received_events_url": "https://api.github.com/users/dimztimz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a011119bfa038ccbfc9f123ede14a3d6237fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a011119bfa038ccbfc9f123ede14a3d6237fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a011119bfa038ccbfc9f123ede14a3d6237fab"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "df1a2b4cc51c681a36f14c3b7939927d98d55026", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/codecvt_unicode.cc", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode.cc?ref=7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "patch": "@@ -29,11 +29,12 @@ test_utf8_utf32_codecvts ()\n   using codecvt_c32 = codecvt<char32_t, char, mbstate_t>;\n   auto loc_c = locale::classic ();\n   VERIFY (has_facet<codecvt_c32> (loc_c));\n+\n   auto &cvt = use_facet<codecvt_c32> (loc_c);\n   test_utf8_utf32_codecvts (cvt);\n \n-  auto cvt_ptr = to_unique_ptr (new codecvt_utf8<char32_t> ());\n-  test_utf8_utf32_codecvts (*cvt_ptr);\n+  codecvt_utf8<char32_t> cvt2;\n+  test_utf8_utf32_codecvts (cvt2);\n }\n \n void\n@@ -42,21 +43,22 @@ test_utf8_utf16_codecvts ()\n   using codecvt_c16 = codecvt<char16_t, char, mbstate_t>;\n   auto loc_c = locale::classic ();\n   VERIFY (has_facet<codecvt_c16> (loc_c));\n+\n   auto &cvt = use_facet<codecvt_c16> (loc_c);\n   test_utf8_utf16_cvts (cvt);\n \n-  auto cvt_ptr = to_unique_ptr (new codecvt_utf8_utf16<char16_t> ());\n-  test_utf8_utf16_cvts (*cvt_ptr);\n+  codecvt_utf8_utf16<char16_t> cvt2;\n+  test_utf8_utf16_cvts (cvt2);\n \n-  auto cvt_ptr2 = to_unique_ptr (new codecvt_utf8_utf16<char32_t> ());\n-  test_utf8_utf16_cvts (*cvt_ptr2);\n+  codecvt_utf8_utf16<char32_t> cvt3;\n+  test_utf8_utf16_cvts (cvt3);\n }\n \n void\n test_utf8_ucs2_codecvts ()\n {\n-  auto cvt_ptr = to_unique_ptr (new codecvt_utf8<char16_t> ());\n-  test_utf8_ucs2_cvts (*cvt_ptr);\n+  codecvt_utf8<char16_t> cvt;\n+  test_utf8_ucs2_cvts (cvt);\n }\n \n int"}, {"sha": "fbdc7a35b284512d1cd3bf8c7346cfa087c01eaf", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/codecvt_unicode.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode.h?ref=7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "patch": "@@ -15,18 +15,11 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+#include <algorithm>\n #include <locale>\n #include <string>\n-#include <memory>\n #include <testsuite_hooks.h>\n \n-template <typename T>\n-std::unique_ptr<T>\n-to_unique_ptr (T *ptr)\n-{\n-  return std::unique_ptr<T> (ptr);\n-}\n-\n struct test_offsets_ok\n {\n   size_t in_size, out_size;"}, {"sha": "4fd1bfec63abcfdb7b932a0d503cb21b6854f57d", "filename": "libstdc++-v3/testsuite/22_locale/codecvt/codecvt_unicode_wchar_t.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fcodecvt%2Fcodecvt_unicode_wchar_t.cc?ref=7d0cdbbcdd1c9e5e709d0be7d1843e8c1045fd16", "patch": "@@ -27,26 +27,26 @@ void\n test_utf8_utf32_codecvts ()\n {\n #if __SIZEOF_WCHAR_T__ == 4\n-  auto cvt_ptr = to_unique_ptr (new codecvt_utf8<wchar_t> ());\n-  test_utf8_utf32_codecvts (*cvt_ptr);\n+  codecvt_utf8<wchar_t> cvt;\n+  test_utf8_utf32_codecvts (cvt);\n #endif\n }\n \n void\n test_utf8_utf16_codecvts ()\n {\n #if __SIZEOF_WCHAR_T__ >= 2\n-  auto cvt_ptr = to_unique_ptr (new codecvt_utf8_utf16<wchar_t> ());\n-  test_utf8_utf16_cvts (*cvt_ptr);\n+  codecvt_utf8_utf16<wchar_t> cvt;\n+  test_utf8_utf16_cvts (cvt);\n #endif\n }\n \n void\n test_utf8_ucs2_codecvts ()\n {\n #if __SIZEOF_WCHAR_T__ == 2\n-  auto cvt_ptr = to_unique_ptr (new codecvt_utf8<wchar_t> ());\n-  test_utf8_ucs2_cvts (*cvt_ptr);\n+  codecvt_utf8<wchar_t> cvt;\n+  test_utf8_ucs2_cvts (cvt);\n #endif\n }\n "}]}