{"sha": "ecf392360a548c5c510b491f284c439b05964b3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmMzkyMzYwYTU0OGM1YzUxMGI0OTFmMjg0YzQzOWIwNTk2NGIzYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-22T10:12:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-22T10:12:18Z"}, "message": "sse.md (<avx512>_fmadd_<mode>_mask<round_name>, [...]): Use <round_nimm_predicate> instead of nonimmediate_operand.\n\n\t* config/i386/sse.md (<avx512>_fmadd_<mode>_mask<round_name>,\n\t<avx512>_fmadd_<mode>_mask3<round_name>,\n\t<avx512>_fmsub_<mode>_mask<round_name>,\n\t<avx512>_fmsub_<mode>_mask3<round_name>,\n\t<avx512>_fnmadd_<mode>_mask<round_name>,\n\t<avx512>_fnmadd_<mode>_mask3<round_name>,\n\t<avx512>_fnmsub_<mode>_mask<round_name>,\n\t<avx512>_fnmsub_<mode>_mask3<round_name>,\n\t<avx512>_fmaddsub_<mode>_mask<round_name>,\n\t<avx512>_fmaddsub_<mode>_mask3<round_name>,\n\t<avx512>_fmsubadd_<mode>_mask<round_name>,\n\t<avx512>_fmsubadd_<mode>_mask3<round_name>): Use\n\t<round_nimm_predicate> instead of nonimmediate_operand.\n\t(fmai_vmfmadd_<mode><round_name>, fmai_vmfmsub_<mode><round_name>,\n\tfmai_vmfnmadd_<mode><round_name>, fmai_vmfnmsub_<mode><round_name>):\n\tUse register_operand instead of <round_nimm_predicate> for the\n\toperand that needs to match output.\n\t(*fmai_fmadd_<mode>, *fmai_fmsub_<mode>,\n\t*fmai_fnmadd_<mode><round_name>, *fmai_fnmsub_<mode><round_name>):\n\tLikewise.  Formatting fixes.\n\nFrom-SVN: r269869", "tree": {"sha": "c20fcfbc4c3392cd24a1ac1eda53496a610c8a22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c20fcfbc4c3392cd24a1ac1eda53496a610c8a22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecf392360a548c5c510b491f284c439b05964b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf392360a548c5c510b491f284c439b05964b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf392360a548c5c510b491f284c439b05964b3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf392360a548c5c510b491f284c439b05964b3a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c4ade6d44914428c8f71713f15c5697d27ed3c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4ade6d44914428c8f71713f15c5697d27ed3c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c4ade6d44914428c8f71713f15c5697d27ed3c8"}], "stats": {"total": 81, "additions": 51, "deletions": 30}, "files": [{"sha": "4e4fde867c4879d054fb090ff3724e223ca15a23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf392360a548c5c510b491f284c439b05964b3a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf392360a548c5c510b491f284c439b05964b3a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecf392360a548c5c510b491f284c439b05964b3a", "patch": "@@ -1,5 +1,26 @@\n 2019-03-22  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (<avx512>_fmadd_<mode>_mask<round_name>,\n+\t<avx512>_fmadd_<mode>_mask3<round_name>,\n+\t<avx512>_fmsub_<mode>_mask<round_name>,\n+\t<avx512>_fmsub_<mode>_mask3<round_name>,\n+\t<avx512>_fnmadd_<mode>_mask<round_name>,\n+\t<avx512>_fnmadd_<mode>_mask3<round_name>,\n+\t<avx512>_fnmsub_<mode>_mask<round_name>,\n+\t<avx512>_fnmsub_<mode>_mask3<round_name>,\n+\t<avx512>_fmaddsub_<mode>_mask<round_name>,\n+\t<avx512>_fmaddsub_<mode>_mask3<round_name>,\n+\t<avx512>_fmsubadd_<mode>_mask<round_name>,\n+\t<avx512>_fmsubadd_<mode>_mask3<round_name>): Use\n+\t<round_nimm_predicate> instead of nonimmediate_operand.\n+\t(fmai_vmfmadd_<mode><round_name>, fmai_vmfmsub_<mode><round_name>,\n+\tfmai_vmfnmadd_<mode><round_name>, fmai_vmfnmsub_<mode><round_name>):\n+\tUse register_operand instead of <round_nimm_predicate> for the\n+\toperand that needs to match output.\n+\t(*fmai_fmadd_<mode>, *fmai_fmsub_<mode>,\n+\t*fmai_fnmadd_<mode><round_name>, *fmai_fnmsub_<mode><round_name>):\n+\tLikewise.  Formatting fixes.\n+\n \tPR target/89784\n \t* config/i386/i386.c (enum ix86_builtins): Remove\n \tIX86_BUILTIN_VFMSUBSD3_MASK3 and IX86_BUILTIN_VFMSUBSS3_MASK3."}, {"sha": "e74521a27292644336781b9ea3091f3fc0a528d2", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf392360a548c5c510b491f284c439b05964b3a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf392360a548c5c510b491f284c439b05964b3a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ecf392360a548c5c510b491f284c439b05964b3a", "patch": "@@ -3958,8 +3958,8 @@\n \t(vec_merge:VF_AVX512VL\n \t  (fma:VF_AVX512VL\n \t    (match_operand:VF_AVX512VL 1 \"register_operand\" \"0,0\")\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>,v\")\n-\t    (match_operand:VF_AVX512VL 3 \"nonimmediate_operand\" \"v,<round_constraint>\"))\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n+\t    (match_operand:VF_AVX512VL 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\"))\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512F && <round_mode512bit_condition>\"\n@@ -3974,7 +3974,7 @@\n \t(vec_merge:VF_AVX512VL\n \t  (fma:VF_AVX512VL\n \t    (match_operand:VF_AVX512VL 1 \"register_operand\" \"v\")\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>\")\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>\")\n \t    (match_operand:VF_AVX512VL 3 \"register_operand\" \"0\"))\n \t  (match_dup 3)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n@@ -4078,9 +4078,9 @@\n \t(vec_merge:VF_AVX512VL\n \t  (fma:VF_AVX512VL\n \t    (match_operand:VF_AVX512VL 1 \"register_operand\" \"0,0\")\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>,v\")\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n \t    (neg:VF_AVX512VL\n-\t      (match_operand:VF_AVX512VL 3 \"nonimmediate_operand\" \"v,<round_constraint>\")))\n+\t      (match_operand:VF_AVX512VL 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\")))\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512F\"\n@@ -4095,7 +4095,7 @@\n \t(vec_merge:VF_AVX512VL\n \t  (fma:VF_AVX512VL\n \t    (match_operand:VF_AVX512VL 1 \"register_operand\" \"v\")\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>\")\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>\")\n \t    (neg:VF_AVX512VL\n \t      (match_operand:VF_AVX512VL 3 \"register_operand\" \"0\")))\n \t  (match_dup 3)\n@@ -4201,8 +4201,8 @@\n \t  (fma:VF_AVX512VL\n \t    (neg:VF_AVX512VL\n \t      (match_operand:VF_AVX512VL 1 \"register_operand\" \"0,0\"))\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>,v\")\n-\t    (match_operand:VF_AVX512VL 3 \"nonimmediate_operand\" \"v,<round_constraint>\"))\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n+\t    (match_operand:VF_AVX512VL 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\"))\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512F && <round_mode512bit_condition>\"\n@@ -4218,7 +4218,7 @@\n \t  (fma:VF_AVX512VL\n \t    (neg:VF_AVX512VL\n \t      (match_operand:VF_AVX512VL 1 \"register_operand\" \"v\"))\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>\")\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>\")\n \t    (match_operand:VF_AVX512VL 3 \"register_operand\" \"0\"))\n \t  (match_dup 3)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n@@ -4328,9 +4328,9 @@\n \t  (fma:VF_AVX512VL\n \t    (neg:VF_AVX512VL\n \t      (match_operand:VF_AVX512VL 1 \"register_operand\" \"0,0\"))\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>,v\")\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n \t    (neg:VF_AVX512VL\n-\t      (match_operand:VF_AVX512VL 3 \"nonimmediate_operand\" \"v,<round_constraint>\")))\n+\t      (match_operand:VF_AVX512VL 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\")))\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk,Yk\")))]\n   \"TARGET_AVX512F && <round_mode512bit_condition>\"\n@@ -4346,7 +4346,7 @@\n \t  (fma:VF_AVX512VL\n \t    (neg:VF_AVX512VL\n \t      (match_operand:VF_AVX512VL 1 \"register_operand\" \"v\"))\n-\t    (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>\")\n+\t    (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>\")\n \t    (neg:VF_AVX512VL\n \t      (match_operand:VF_AVX512VL 3 \"register_operand\" \"0\")))\n \t  (match_dup 3)\n@@ -4428,8 +4428,8 @@\n \t(vec_merge:VF_AVX512VL\n \t  (unspec:VF_AVX512VL\n \t    [(match_operand:VF_AVX512VL 1 \"register_operand\" \"0,0\")\n-\t     (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>,v\")\n-\t     (match_operand:VF_AVX512VL 3 \"nonimmediate_operand\" \"v,<round_constraint>\")]\n+\t     (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n+\t     (match_operand:VF_AVX512VL 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\")]\n \t    UNSPEC_FMADDSUB)\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk,Yk\")))]\n@@ -4445,7 +4445,7 @@\n \t(vec_merge:VF_AVX512VL\n \t  (unspec:VF_AVX512VL\n \t    [(match_operand:VF_AVX512VL 1 \"register_operand\" \"v\")\n-\t     (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>\")\n+\t     (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>\")\n \t     (match_operand:VF_AVX512VL 3 \"register_operand\" \"0\")]\n \t    UNSPEC_FMADDSUB)\n \t  (match_dup 3)\n@@ -4495,9 +4495,9 @@\n \t(vec_merge:VF_AVX512VL\n \t  (unspec:VF_AVX512VL\n \t    [(match_operand:VF_AVX512VL 1 \"register_operand\" \"0,0\")\n-\t     (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>,v\")\n+\t     (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n \t     (neg:VF_AVX512VL\n-\t       (match_operand:VF_AVX512VL 3 \"nonimmediate_operand\" \"v,<round_constraint>\"))]\n+\t       (match_operand:VF_AVX512VL 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\"))]\n \t    UNSPEC_FMADDSUB)\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk,Yk\")))]\n@@ -4513,7 +4513,7 @@\n \t(vec_merge:VF_AVX512VL\n \t  (unspec:VF_AVX512VL\n \t    [(match_operand:VF_AVX512VL 1 \"register_operand\" \"v\")\n-\t     (match_operand:VF_AVX512VL 2 \"nonimmediate_operand\" \"<round_constraint>\")\n+\t     (match_operand:VF_AVX512VL 2 \"<round_nimm_predicate>\" \"<round_constraint>\")\n \t     (neg:VF_AVX512VL\n \t       (match_operand:VF_AVX512VL 3 \"register_operand\" \"0\"))]\n \t    UNSPEC_FMADDSUB)\n@@ -4531,7 +4531,7 @@\n   [(set (match_operand:VF_128 0 \"register_operand\")\n \t(vec_merge:VF_128\n \t  (fma:VF_128\n-\t    (match_operand:VF_128 1 \"<round_nimm_predicate>\")\n+\t    (match_operand:VF_128 1 \"register_operand\")\n \t    (match_operand:VF_128 2 \"<round_nimm_predicate>\")\n \t    (match_operand:VF_128 3 \"<round_nimm_predicate>\"))\n \t  (match_dup 1)\n@@ -4542,7 +4542,7 @@\n   [(set (match_operand:VF_128 0 \"register_operand\")\n \t(vec_merge:VF_128\n \t  (fma:VF_128\n-\t    (match_operand:VF_128 1 \"<round_nimm_predicate>\")\n+\t    (match_operand:VF_128 1 \"register_operand\")\n \t    (match_operand:VF_128 2 \"<round_nimm_predicate>\")\n \t    (neg:VF_128\n \t      (match_operand:VF_128 3 \"<round_nimm_predicate>\")))\n@@ -4556,7 +4556,7 @@\n \t  (fma:VF_128\n \t    (neg:VF_128\n \t      (match_operand:VF_128 2 \"<round_nimm_predicate>\"))\n-\t    (match_operand:VF_128 1 \"<round_nimm_predicate>\")\n+\t    (match_operand:VF_128 1 \"register_operand\")\n \t    (match_operand:VF_128 3 \"<round_nimm_predicate>\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n@@ -4568,7 +4568,7 @@\n \t  (fma:VF_128\n \t    (neg:VF_128\n \t      (match_operand:VF_128 2 \"<round_nimm_predicate>\"))\n-\t    (match_operand:VF_128 1 \"<round_nimm_predicate>\")\n+\t    (match_operand:VF_128 1 \"register_operand\")\n \t    (neg:VF_128\n \t      (match_operand:VF_128 3 \"<round_nimm_predicate>\")))\n \t  (match_dup 1)\n@@ -4579,9 +4579,9 @@\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=v,v\")\n         (vec_merge:VF_128\n \t  (fma:VF_128\n-\t    (match_operand:VF_128 1 \"<round_nimm_predicate>\" \" 0, 0\")\n+\t    (match_operand:VF_128 1 \"register_operand\" \"0,0\")\n \t    (match_operand:VF_128 2 \"<round_nimm_predicate>\" \"<round_constraint>, v\")\n-\t    (match_operand:VF_128 3 \"<round_nimm_predicate>\" \" v,<round_constraint>\"))\n+\t    (match_operand:VF_128 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA || TARGET_AVX512F\"\n@@ -4595,10 +4595,10 @@\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=v,v\")\n         (vec_merge:VF_128\n \t  (fma:VF_128\n-\t    (match_operand:VF_128   1 \"<round_nimm_predicate>\" \"0,0\")\n+\t    (match_operand:VF_128   1 \"register_operand\" \"0,0\")\n \t    (match_operand:VF_128   2 \"<round_nimm_predicate>\" \"<round_constraint>,v\")\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 3 \"<round_nimm_predicate>\" \" v,<round_constraint>\")))\n+\t      (match_operand:VF_128 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\")))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA || TARGET_AVX512F\"\n@@ -4614,7 +4614,7 @@\n \t  (fma:VF_128\n \t    (neg:VF_128\n \t      (match_operand:VF_128 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\"))\n-\t    (match_operand:VF_128   1 \"<round_nimm_predicate>\" \"0,0\")\n+\t    (match_operand:VF_128   1 \"register_operand\" \"0,0\")\n \t    (match_operand:VF_128   3 \"<round_nimm_predicate>\" \"v,<round_constraint>\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n@@ -4630,10 +4630,10 @@\n         (vec_merge:VF_128\n \t  (fma:VF_128\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 2 \"<round_nimm_predicate>\" \"<round_constraint>, v\"))\n-\t    (match_operand:VF_128   1 \"<round_nimm_predicate>\" \" 0, 0\")\n+\t      (match_operand:VF_128 2 \"<round_nimm_predicate>\" \"<round_constraint>,v\"))\n+\t    (match_operand:VF_128   1 \"register_operand\" \"0,0\")\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 3 \"<round_nimm_predicate>\" \" v,<round_constraint>\")))\n+\t      (match_operand:VF_128 3 \"<round_nimm_predicate>\" \"v,<round_constraint>\")))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA || TARGET_AVX512F\""}]}