{"sha": "c23127ce74acc430659d5afb176e3f8e987dd77c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIzMTI3Y2U3NGFjYzQzMDY1OWQ1YWZiMTc2ZTNmOGU5ODdkZDc3Yw==", "commit": {"author": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-01-15T17:29:23Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-01-15T17:29:23Z"}, "message": "Fix for PR64068 and PR64559.\n\n\t* g++.dg/ipa/pr64068.C: New test.\n\t* gcc.dg/ipa/PR64559.c: New test.\n\tPR ipa/64068\n\tPR ipa/64559\n\t* ipa.c (symbol_table::remove_unreachable_nodes):\n\tDo not put abstract origins into boundary.\n\nFrom-SVN: r219672", "tree": {"sha": "30b67fd27684a14ac619b4389fde8d374ce2a0bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30b67fd27684a14ac619b4389fde8d374ce2a0bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c23127ce74acc430659d5afb176e3f8e987dd77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23127ce74acc430659d5afb176e3f8e987dd77c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23127ce74acc430659d5afb176e3f8e987dd77c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23127ce74acc430659d5afb176e3f8e987dd77c/comments", "author": null, "committer": null, "parents": [{"sha": "40d54d24324167bf6cb16c250a0992019b8aa300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d54d24324167bf6cb16c250a0992019b8aa300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d54d24324167bf6cb16c250a0992019b8aa300"}], "stats": {"total": 101, "additions": 100, "deletions": 1}, "files": [{"sha": "2d5974b3d006e27b8619242bb53548e364e199cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c23127ce74acc430659d5afb176e3f8e987dd77c", "patch": "@@ -1,3 +1,10 @@\n+2015-01-15  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/64068\n+\tPR ipa/64559\n+\t* ipa.c (symbol_table::remove_unreachable_nodes):\n+\tDo not put abstract origins into boundary.\n+\n 2015-01-15  Evgeny Stupachenko  <evstupac@gmail.com>\n \n \t* config/i386/gnu-user.h (CRT_GET_RFIB_DATA): Remove EBX register usage."}, {"sha": "36264175f57509cddfcb9c5a8ec0c6041da48f12", "filename": "gcc/ipa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=c23127ce74acc430659d5afb176e3f8e987dd77c", "patch": "@@ -400,7 +400,6 @@ symbol_table::remove_unreachable_nodes (FILE *file)\n \t\t       n = n->next_sibling_clone)\n \t\t    if (n->decl == DECL_ABSTRACT_ORIGIN (node->decl))\n \t\t      n->used_as_abstract_origin = true;\n-\t          enqueue_node (origin_node, &first, &reachable);\n \t\t}\n \t    }\n \t  /* If any symbol in a comdat group is reachable, force"}, {"sha": "a1235f350737b6b3ce9cba5835e55f1bdc99449c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c23127ce74acc430659d5afb176e3f8e987dd77c", "patch": "@@ -1,3 +1,8 @@\n+2015-01-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/ipa/pr64068.C: New test.\n+\t* gcc.dg/ipa/PR64559.c: New test.\n+\n 2015-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* g++.dg/other/anon5.C: Ignore additional messages on Linux/x86"}, {"sha": "95288836c36011e2f31022f3296068d16c034da1", "filename": "gcc/testsuite/g++.dg/ipa/pr64068.C", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64068.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64068.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr64068.C?ref=c23127ce74acc430659d5afb176e3f8e987dd77c", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef int PROV_ENUMALGS_EX, PCCRYPT_OID_INFO;\n+class A {\n+  int m_fn2();\n+  virtual bool m_fn1(PCCRYPT_OID_INFO);\n+};\n+int fn1();\n+void fn2();\n+int A::m_fn2() { m_fn1(0); }\n+\n+bool fn3() {\n+  for (;;) {\n+    if (fn1()) {\n+      if (fn1() != 259)\n+        fn2();\n+      break;\n+    }\n+    return 1;\n+  }\n+  return 0;\n+}\n+\n+class B {\n+public:\n+  B() { fn3(); }\n+};\n+class C : A {\n+  bool m_fn1(PCCRYPT_OID_INFO) { m_fn3(); }\n+  int isSupportedByProvider_algId;\n+  PROV_ENUMALGS_EX isSupportedByProvider_outEnumAlgs;\n+  PROV_ENUMALGS_EX isSupportedByProvider_enumAlgs;\n+  bool m_fn3() {\n+    while (1) {\n+      if (fn1()) {\n+        if (fn1() != 259)\n+          fn2();\n+        break;\n+      }\n+      if (isSupportedByProvider_algId)\n+        isSupportedByProvider_outEnumAlgs = isSupportedByProvider_enumAlgs;\n+      return 1;\n+    }\n+    return 0;\n+  }\n+};\n+\n+void fn4() { B(); }"}, {"sha": "463afdc2630f75c67aefbb749a13d33484706a11", "filename": "gcc/testsuite/gcc.dg/ipa/PR64559.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2FPR64559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c23127ce74acc430659d5afb176e3f8e987dd77c/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2FPR64559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2FPR64559.c?ref=c23127ce74acc430659d5afb176e3f8e987dd77c", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\"  } */\n+\n+int a, b, c, d;\n+\n+struct S\n+{\n+  int f0;\n+};\n+\n+static int\n+fn1 (int p)\n+{\n+  return p == 0 || a;\n+}\n+\n+static int\n+fn2 ()\n+{\n+  d = fn1 (c);\n+  return 0;\n+}\n+\n+static int\n+fn3 (struct S p)\n+{\n+  p.f0 || fn2 ();\n+  if (fn1 (1))\n+    b = 0;\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  struct S e = { 1 };\n+  fn3 (e);\n+  return 0;\n+}"}]}