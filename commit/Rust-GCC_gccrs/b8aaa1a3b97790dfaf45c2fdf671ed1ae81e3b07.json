{"sha": "b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhYWExYTNiOTc3OTBkZmFmNDVjMmZkZjY3MWVkMWFlODFlM2IwNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-10-31T15:44:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-10-31T15:44:58Z"}, "message": "decl.c (cxx_maybe_build_cleanup): Always set LOOKUP_NONVIRTUAL.\n\n\t* decl.c (cxx_maybe_build_cleanup): Always set LOOKUP_NONVIRTUAL.\n\t* decl2.c (build_cleanup): Just call cxx_maybe_build_cleanup.\n\nFrom-SVN: r204265", "tree": {"sha": "b7c74e14c0dcd2d71253f0e3e742eb1aa28fc881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7c74e14c0dcd2d71253f0e3e742eb1aa28fc881"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c79ebd52214a424949c5a242ee440f211bc9566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c79ebd52214a424949c5a242ee440f211bc9566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c79ebd52214a424949c5a242ee440f211bc9566"}], "stats": {"total": 34, "additions": 7, "deletions": 27}, "files": [{"sha": "e0611100502473e49567cc9ded402d5269c10ce8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "patch": "@@ -1,5 +1,8 @@\n 2013-10-31  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (cxx_maybe_build_cleanup): Always set LOOKUP_NONVIRTUAL.\n+\t* decl2.c (build_cleanup): Just call cxx_maybe_build_cleanup.\n+\n \tPR c++/58162\n \t* parser.c (cp_parser_late_parse_one_default_arg): Set\n \tTARGET_EXPR_DIRECT_INIT_P."}, {"sha": "09c1daaa243e197573d88d224d92f71144e7a6c3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "patch": "@@ -14298,9 +14298,7 @@ cxx_maybe_build_cleanup (tree decl, tsubst_flags_t complain)\n   type = TREE_TYPE (decl);\n   if (type_build_dtor_call (type))\n     {\n-      int flags = LOOKUP_NORMAL|LOOKUP_DESTRUCTOR;\n-      bool has_vbases = (TREE_CODE (type) == RECORD_TYPE\n-\t\t\t && CLASSTYPE_VBASECLASSES (type));\n+      int flags = LOOKUP_NORMAL|LOOKUP_NONVIRTUAL|LOOKUP_DESTRUCTOR;\n       tree addr;\n       tree call;\n \n@@ -14309,10 +14307,6 @@ cxx_maybe_build_cleanup (tree decl, tsubst_flags_t complain)\n       else\n \taddr = build_address (decl);\n \n-      /* Optimize for space over speed here.  */\n-      if (!has_vbases || flag_expensive_optimizations)\n-\tflags |= LOOKUP_NONVIRTUAL;\n-\n       call = build_delete (TREE_TYPE (addr), addr,\n \t\t\t   sfk_complete_destructor, flags, 0, complain);\n       if (call == error_mark_node)"}, {"sha": "18e0e526d205918185579b445ed51b7b20cfd800", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=b8aaa1a3b97790dfaf45c2fdf671ed1ae81e3b07", "patch": "@@ -2722,26 +2722,9 @@ import_export_decl (tree decl)\n tree\n build_cleanup (tree decl)\n {\n-  tree temp;\n-  tree type = TREE_TYPE (decl);\n-\n-  /* This function should only be called for declarations that really\n-     require cleanups.  */\n-  gcc_assert (!TYPE_HAS_TRIVIAL_DESTRUCTOR (type));\n-\n-  /* Treat all objects with destructors as used; the destructor may do\n-     something substantive.  */\n-  mark_used (decl);\n-\n-  if (TREE_CODE (type) == ARRAY_TYPE)\n-    temp = decl;\n-  else\n-    temp = build_address (decl);\n-  temp = build_delete (TREE_TYPE (temp), temp,\n-\t\t       sfk_complete_destructor,\n-\t\t       LOOKUP_NORMAL|LOOKUP_NONVIRTUAL|LOOKUP_DESTRUCTOR, 0,\n-\t\t       tf_warning_or_error);\n-  return temp;\n+  tree clean = cxx_maybe_build_cleanup (decl, tf_warning_or_error);\n+  gcc_assert (clean != NULL_TREE);\n+  return clean;\n }\n \n /* Returns the initialization guard variable for the variable DECL,"}]}