{"sha": "a92facbb7b5274dd96218d7834d5c4bd9ea9c12d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkyZmFjYmI3YjUyNzRkZDk2MjE4ZDc4MzRkNWM0YmQ5ZWE5YzEyZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-03-20T11:00:01Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-03-20T11:00:01Z"}, "message": "sh.md (movsf_ie): Fix output patterns for fpul load and store.\n\n* config/sh/sh.md (movsf_ie): Fix output patterns for fpul load\nand store.\n(movsi_ie): Introduce fpul store.\n\nFrom-SVN: r40653", "tree": {"sha": "2593b48deaa1593addd3afca39031806ca82e4e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2593b48deaa1593addd3afca39031806ca82e4e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d/comments", "author": null, "committer": null, "parents": [{"sha": "a44a935fe4878d4eb69c08f95de8a68f42f309eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44a935fe4878d4eb69c08f95de8a68f42f309eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a44a935fe4878d4eb69c08f95de8a68f42f309eb"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "c37a93c2b49f79662d238f04acf7c830feeaa81d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a92facbb7b5274dd96218d7834d5c4bd9ea9c12d", "patch": "@@ -1,3 +1,9 @@\n+2001-03-20  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/sh/sh.md (movsf_ie): Fix output patterns for fpul load\n+\tand store.\n+\t(movsi_ie): Introduce fpul store.\n+\n 2001-03-20  Alan Modra  <alan@linuxcare.com.au>\n \n \t* Makefile.in (OBJS): Remove hashtab.o."}, {"sha": "3a03c2d7b41d68947de812b78d7c2dfeda75820f", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92facbb7b5274dd96218d7834d5c4bd9ea9c12d/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=a92facbb7b5274dd96218d7834d5c4bd9ea9c12d", "patch": "@@ -2438,8 +2438,8 @@\n ;; ??? This allows moves from macl to fpul to be recognized, but these moves\n ;; will require a reload.\n (define_insn \"movsi_ie\"\n-  [(set (match_operand:SI 0 \"general_movdst_operand\" \"=r,r,t,r,r,r,r,m,<,<,x,l,x,l,y,r,y,r,y\")\n-\t(match_operand:SI 1 \"general_movsrc_operand\" \"Q,rI,r,mr,x,l,t,r,x,l,r,r,>,>,>,i,r,y,y\"))]\n+  [(set (match_operand:SI 0 \"general_movdst_operand\" \"=r,r,t,r,r,r,r,m,<,<,x,l,x,l,y,<,r,y,r,y\")\n+\t(match_operand:SI 1 \"general_movsrc_operand\" \"Q,rI,r,mr,x,l,t,r,x,l,r,r,>,>,>,y,i,r,y,y\"))]\n   \"TARGET_SH3E\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SImode))\"\n@@ -2459,12 +2459,13 @@\n \tlds.l\t%1,%0\n \tlds.l\t%1,%0\n \tlds.l\t%1,%0\n+\tsts.l\t%1,%0\n \tfake\t%1,%0\n \tlds\t%1,%0\n \tsts\t%1,%0\n \t! move optimized away\"\n-  [(set_attr \"type\" \"pcload_si,move,*,load_si,move,prget,move,store,store,pstore,move,prset,load,pload,load,pcload_si,gp_fpul,gp_fpul,nil\")\n-   (set_attr \"length\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,0\")])\n+  [(set_attr \"type\" \"pcload_si,move,*,load_si,move,prget,move,store,store,pstore,move,prset,load,pload,load,store,pcload_si,gp_fpul,gp_fpul,nil\")\n+   (set_attr \"length\" \"*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,0\")])\n \n (define_insn \"movsi_i_lowpart\"\n   [(set (strict_low_part (match_operand:SI 0 \"general_movdst_operand\" \"+r,r,r,r,r,r,m,r\"))\n@@ -3084,11 +3085,11 @@\n ;; when the destination changes mode.\n (define_insn \"movsf_ie\"\n   [(set (match_operand:SF 0 \"general_movdst_operand\"\n-\t \"=f,r,f,f,fy,f,m,r,r,m,f,y,y,rf,r<,y,y\")\n+\t \"=f,r,f,f,fy,f,m,r,r,m,f,y,y,rf,r,y,<,y,y\")\n \t(match_operand:SF 1 \"general_movsrc_operand\"\n-\t  \"f,r,G,H,FQ,mf,f,FQ,mr,r,y,f,>,fr,y,r>,y\"))\n-   (use (match_operand:PSI 2 \"fpscr_operand\" \"c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c\"))\n-   (clobber (match_scratch:SI 3 \"=X,X,X,X,&z,X,X,X,X,X,X,X,X,y,X,X,X\"))]\n+\t  \"f,r,G,H,FQ,mf,f,FQ,mr,r,y,f,>,fr,y,r,y,>,y\"))\n+   (use (match_operand:PSI 2 \"fpscr_operand\" \"c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c,c\"))\n+   (clobber (match_scratch:SI 3 \"=X,X,X,X,&z,X,X,X,X,X,X,X,X,y,X,X,X,X,X\"))]\n \n   \"TARGET_SH3E\n    && (arith_reg_operand (operands[0], SFmode)\n@@ -3117,9 +3118,11 @@\n \t#\n \tsts\t%1,%0\n \tlds\t%1,%0\n+\tsts.l\t%1,%0\n+\tlds.l\t%1,%0\n \t! move optimized away\"\n-  [(set_attr \"type\" \"fmove,move,fmove,fmove,pcload,load,store,pcload,load,store,fmove,fmove,load,*,gp_fpul,gp_fpul,nil\")\n-   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,2,2,2,4,2,2,0\")\n+  [(set_attr \"type\" \"fmove,move,fmove,fmove,pcload,load,store,pcload,load,store,fmove,fmove,load,*,gp_fpul,gp_fpul,store,load,nil\")\n+   (set_attr \"length\" \"*,*,*,*,4,*,*,*,*,*,2,2,2,4,2,2,2,2,0\")\n    (set (attr \"fp_mode\") (if_then_else (eq_attr \"fmovd\" \"yes\")\n \t\t\t\t\t   (const_string \"single\")\n \t\t\t\t\t   (const_string \"none\")))])"}]}