{"sha": "75bfa67836449ebe29c760185ccae8ce070a4e9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViZmE2NzgzNjQ0OWViZTI5Yzc2MDE4NWNjYWU4Y2UwNzBhNGU5Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-05-06T17:37:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-05-06T17:37:53Z"}, "message": "re PR tree-optimization/27151 (ICE with -ftree-vectorize with mixed types)\n\n2006-05-06   Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/27151\n\t* tree-vect-transform.c (vectorizable_condition): Punt on\n\tvalues that have a different type than the condition.\n\n\t* gcc.dg/vect/pr27151.c: New testcase.\n\nFrom-SVN: r113580", "tree": {"sha": "f020a91e9818ef4ec2243fe403201ddbd3dd0eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f020a91e9818ef4ec2243fe403201ddbd3dd0eb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75bfa67836449ebe29c760185ccae8ce070a4e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bfa67836449ebe29c760185ccae8ce070a4e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75bfa67836449ebe29c760185ccae8ce070a4e9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bfa67836449ebe29c760185ccae8ce070a4e9c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2297e173c6f3530f5d6f24d45dd605b540025031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2297e173c6f3530f5d6f24d45dd605b540025031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2297e173c6f3530f5d6f24d45dd605b540025031"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "bae29826db9dda5967e73a41f5e6febdd136a7ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75bfa67836449ebe29c760185ccae8ce070a4e9c", "patch": "@@ -1,3 +1,9 @@\n+2006-05-06   Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27151\n+\t* tree-vect-transform.c (vectorizable_condition): Punt on\n+\tvalues that have a different type than the condition.\n+\n 2006-05-03  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR/21391"}, {"sha": "3e6e72511a1689444e3e19f85472b634394d54df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75bfa67836449ebe29c760185ccae8ce070a4e9c", "patch": "@@ -1,3 +1,8 @@\n+2006-05-06   Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27151\n+\t* gcc.dg/vect/pr27151.c: New testcase.\n+\n 2006-05-06  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/27430"}, {"sha": "8b53b29b672b1933adb53f4dccdacb61431dfabc", "filename": "gcc/testsuite/gcc.dg/vect/pr27151.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr27151.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr27151.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr27151.c?ref=75bfa67836449ebe29c760185ccae8ce070a4e9c", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+/* We were creating a float vector for the vis_type == 1\n+   test, which we ICEd on.  Now we simply punt here.  */\n+\n+float vs_data[75];\n+void vis_clear_data ()\n+{\n+  int vis_type, i;\n+  for (i = 0; i < 75; i++)\n+    {\n+      vs_data[i] = (vis_type == 1);\n+    }\n+}"}, {"sha": "8c65b86953479ead2f537080719f1879dffc93cb", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bfa67836449ebe29c760185ccae8ce070a4e9c/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=75bfa67836449ebe29c760185ccae8ce070a4e9c", "patch": "@@ -2117,6 +2117,11 @@ vectorizable_condition (tree stmt, block_stmt_iterator *bsi, tree *vec_stmt)\n   then_clause = TREE_OPERAND (op, 1);\n   else_clause = TREE_OPERAND (op, 2);\n \n+  /* We do not handle two different vector types for the condition\n+     and the values.  */\n+  if (TREE_TYPE (TREE_OPERAND (cond_expr, 0)) != TREE_TYPE (vectype))\n+    return false;\n+\n   if (!vect_is_simple_cond (cond_expr, loop_vinfo))\n     return false;\n "}]}