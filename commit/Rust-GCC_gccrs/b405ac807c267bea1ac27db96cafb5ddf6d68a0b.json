{"sha": "b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQwNWFjODA3YzI2N2JlYTFhYzI3ZGI5NmNhZmI1ZGRmNmQ2OGEwYg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-01-02T20:07:44Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-01-02T20:07:44Z"}, "message": "re PR c/19977 (overflow in non-static initializer should not be pedwarn)\n\n2007-01-02  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n\n\tPR c/19977\n\t* c-typeck.c (store_init_value): Don't emit pedantic overflow\n\twarning for non-static initializers.\n\ntestsuite/\n\t* gcc/testsuite/gcc.dg/overflow-warn-3.c: Remove XFAIL.\n\t* gcc/testsuite/gcc.dg/overflow-warn-4.c: Remove XFAIL.\n\nFrom-SVN: r120355", "tree": {"sha": "7487dbc52405b1388776e71eaa3736b0fc7f6c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7487dbc52405b1388776e71eaa3736b0fc7f6c34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/comments", "author": null, "committer": null, "parents": [{"sha": "bd94cb6ec8b9602ca60b47b37a1f39ace60018c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd94cb6ec8b9602ca60b47b37a1f39ace60018c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd94cb6ec8b9602ca60b47b37a1f39ace60018c7"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "a6a1232ecb708804e10701fae17244f2b68b1f83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "patch": "@@ -1,3 +1,9 @@\n+2007-01-02  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n+\n+\tPR c/19977\n+\t* c-typeck.c (store_init_value): Don't emit pedantic overflow\n+\twarning for non-static initializers.\n+\t\n 2007-01-02  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* config/alpha/alpha.md, arm/arm.c, darwin.c, frv/frv.md,"}, {"sha": "955bfd959f81c3f8993e577e52fc02432dd3c7fa", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "patch": "@@ -4292,7 +4292,7 @@ store_init_value (tree decl, tree init)\n \n   /* ANSI wants warnings about out-of-range constant initializers.  */\n   STRIP_TYPE_NOPS (value);\n-  constant_expression_warning (value);\n+  if (TREE_STATIC (decl)) constant_expression_warning (value);\n \n   /* Check if we need to set array size from compound literal size.  */\n   if (TREE_CODE (type) == ARRAY_TYPE"}, {"sha": "9b38348651d2915d03f7f33a0a09093bd17a2d18", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "patch": "@@ -1,3 +1,9 @@\n+2007-01-02  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n+\n+\tPR c/19977\n+\t* gcc/testsuite/gcc.dg/overflow-warn-3.c: Remove XFAIL.\n+\t* gcc/testsuite/gcc.dg/overflow-warn-4.c: Remove XFAIL.\n+\n 2006-01-02  Ian Lance Taylor  <iant@google.com>\n \n \t* g++.dg/warn/Wparentheses-22.C: New test."}, {"sha": "2aa8b7f7eb67a2e7baade7f9d38be51e6e85ab87", "filename": "gcc/testsuite/gcc.dg/overflow-warn-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-warn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-warn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-warn-3.c?ref=b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "patch": "@@ -40,7 +40,7 @@ f (void)\n   /* This expression is not required to be a constant expression, so\n      it should just involve undefined behavior at runtime.  */\n   int c = INT_MAX + 1; /* { dg-warning \"warning: integer overflow in expression\" } */\n-  /* { dg-bogus \"warning: overflow in constant expression\" \"constant\" { xfail *-*-* } 42 } */\n+\n }\n \n /* But this expression does need to be constant.  */"}, {"sha": "a36f66f14fe1347c117b1886c51bcd43441e7e68", "filename": "gcc/testsuite/gcc.dg/overflow-warn-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-warn-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b405ac807c267bea1ac27db96cafb5ddf6d68a0b/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-warn-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foverflow-warn-4.c?ref=b405ac807c267bea1ac27db96cafb5ddf6d68a0b", "patch": "@@ -40,7 +40,7 @@ f (void)\n   /* This expression is not required to be a constant expression, so\n      it should just involve undefined behavior at runtime.  */\n   int c = INT_MAX + 1; /* { dg-warning \"warning: integer overflow in expression\" } */\n-  /* { dg-bogus \"error: overflow in constant expression\" \"constant\" { xfail *-*-* } 42 } */\n+\n }\n \n /* But this expression does need to be constant.  */"}]}