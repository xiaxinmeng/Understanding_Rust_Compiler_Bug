{"sha": "354e99ce386a338ed6b7288fdec8b6ca13ce8946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU0ZTk5Y2UzODZhMzM4ZWQ2YjcyODhmZGVjOGI2Y2ExM2NlODk0Ng==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-09-06T02:37:09Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-09-06T02:37:09Z"}, "message": "parse.y (do_merge_string_cste): New locals.\n\n2000-08-11  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (do_merge_string_cste): New locals. Create new\n\tSTRING_CSTs each time, use memcpy. Fixes gcj/311\n\n(Fixes gcj/311:\n   http://gcc.gnu.org/ml/gcc-patches/2000-09/msg00144.html\n   http://sources.redhat.com/ml/java-prs/2000-q3/msg00116.html)\n\nFrom-SVN: r36176", "tree": {"sha": "08f51aed2bdfe897e5ed89fbf8995198cb882e73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08f51aed2bdfe897e5ed89fbf8995198cb882e73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/354e99ce386a338ed6b7288fdec8b6ca13ce8946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354e99ce386a338ed6b7288fdec8b6ca13ce8946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354e99ce386a338ed6b7288fdec8b6ca13ce8946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354e99ce386a338ed6b7288fdec8b6ca13ce8946/comments", "author": null, "committer": null, "parents": [{"sha": "3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ca8c9aea002945be6cc6164d3eee6e55acc1b67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ca8c9aea002945be6cc6164d3eee6e55acc1b67"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "7fe01831e138b7f07ee7189e67309dd8643eab3f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e99ce386a338ed6b7288fdec8b6ca13ce8946/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e99ce386a338ed6b7288fdec8b6ca13ce8946/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=354e99ce386a338ed6b7288fdec8b6ca13ce8946", "patch": "@@ -6,6 +6,11 @@\n \tcompression_method fields.\n \t* zextract.c (read_zip_archive): Collect file compression info.\n \n+2000-08-11  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (do_merge_string_cste): New locals. Create new\n+\tSTRING_CSTs each time, use memcpy. Fixes gcj/311.\n+\n 2000-08-07  Hans Boehm  <boehm@acm.org>\n \n \t* boehm.c (mark_reference_fields): Set marking bits for all words in"}, {"sha": "d37a7f1b32b4a2186b5931214afc5e952bf026df", "filename": "gcc/java/parse.y", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354e99ce386a338ed6b7288fdec8b6ca13ce8946/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354e99ce386a338ed6b7288fdec8b6ca13ce8946/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=354e99ce386a338ed6b7288fdec8b6ca13ce8946", "patch": "@@ -12892,20 +12892,26 @@ do_merge_string_cste (cste, string, string_len, after)\n      const char *string;\n      int string_len, after;\n {\n-  int len = TREE_STRING_LENGTH (cste) + string_len;\n   const char *old = TREE_STRING_POINTER (cste);\n+  int old_len = TREE_STRING_LENGTH (cste);\n+  int len = old_len + string_len;\n+  char *new;\n+  \n+  cste = make_node (STRING_CST);\n   TREE_STRING_LENGTH (cste) = len;\n-  TREE_STRING_POINTER (cste) = obstack_alloc (expression_obstack, len+1);\n+  new = TREE_STRING_POINTER (cste) = obstack_alloc (expression_obstack, len+1);\n+\n   if (after)\n     {\n-      strcpy (TREE_STRING_POINTER (cste), string);\n-      strcat (TREE_STRING_POINTER (cste), old);\n+      memcpy (new, string, string_len);\n+      memcpy (&new [string_len], old, old_len);\n     }\n   else\n     {\n-      strcpy (TREE_STRING_POINTER (cste), old);\n-      strcat (TREE_STRING_POINTER (cste), string);\n+      memcpy (new, old, old_len);\n+      memcpy (&new [old_len], string, string_len);\n     }\n+  new [len] = '\\0';\n   return cste;\n }\n "}]}