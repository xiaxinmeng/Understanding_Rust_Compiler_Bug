{"sha": "b75dff03b70fc3df8bd2a75d0006b96e1304c4c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc1ZGZmMDNiNzBmYzNkZjhiZDJhNzVkMDAwNmI5NmUxMzA0YzRjMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-10-18T16:49:20Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-10-18T16:49:20Z"}, "message": "i386.c (ix86_emit_fp_unordered_jump): Set JUMP_LABEL to the jump insn.\n\n\t* config/i386/i386.c (ix86_emit_fp_unordered_jump):\n\tSet JUMP_LABEL to the jump insn.\n\t(ix86_emit_i387_log1p): Use ix86_expand_branch to expand branch.\n\tPredict emitted jump and add label to jump insn.\n\nFrom-SVN: r265274", "tree": {"sha": "8865cfe1bcf546b86aa56c0c55ac559b229ac9bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8865cfe1bcf546b86aa56c0c55ac559b229ac9bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23abcf78747564ca01e1a56a177e21f9169682da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23abcf78747564ca01e1a56a177e21f9169682da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23abcf78747564ca01e1a56a177e21f9169682da"}], "stats": {"total": 53, "additions": 35, "deletions": 18}, "files": [{"sha": "d86dea87213c3047c4c018585c54285648937a96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b75dff03b70fc3df8bd2a75d0006b96e1304c4c0", "patch": "@@ -1,3 +1,10 @@\n+2018-10-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_emit_fp_unordered_jump):\n+\tSet JUMP_LABEL to the jump insn.\n+\t(ix86_emit_i387_log1p): Use ix86_expand_branch to expand branch.\n+\tPredict emitted jump and add label to jump insn.\n+\n 2018-10-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/87562"}, {"sha": "e47603eb5ff6144af01f60c1eaf59fffc77e82c6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 28, "deletions": 18, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75dff03b70fc3df8bd2a75d0006b96e1304c4c0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b75dff03b70fc3df8bd2a75d0006b96e1304c4c0", "patch": "@@ -43866,6 +43866,7 @@ void\n ix86_emit_fp_unordered_jump (rtx label)\n {\n   rtx reg = gen_reg_rtx (HImode);\n+  rtx_insn *insn;\n   rtx temp;\n \n   emit_insn (gen_x86_fnstsw_1 (reg));\n@@ -43888,10 +43889,9 @@ ix86_emit_fp_unordered_jump (rtx label)\n   temp = gen_rtx_IF_THEN_ELSE (VOIDmode, temp,\n \t\t\t      gen_rtx_LABEL_REF (VOIDmode, label),\n \t\t\t      pc_rtx);\n-  temp = gen_rtx_SET (pc_rtx, temp);\n-\n-  emit_jump_insn (temp);\n+  insn = emit_jump_insn (gen_rtx_SET (pc_rtx, temp));\n   predict_jump (REG_BR_PROB_BASE * 10 / 100);\n+  JUMP_LABEL (insn) = label;\n }\n \n /* Output code to perform a log1p XFmode calculation.  */\n@@ -43902,27 +43902,36 @@ void ix86_emit_i387_log1p (rtx op0, rtx op1)\n   rtx_code_label *label2 = gen_label_rtx ();\n \n   rtx tmp = gen_reg_rtx (XFmode);\n-  rtx tmp2 = gen_reg_rtx (XFmode);\n-  rtx test;\n+  rtx res = gen_reg_rtx (XFmode);\n+  rtx cst, cstln2, cst1;\n+  rtx_insn *insn;\n+\n+  cst = const_double_from_real_value\n+    (REAL_VALUE_ATOF (\"0.29289321881345247561810596348408353\", XFmode), XFmode);\n+  cstln2 = force_reg (XFmode, standard_80387_constant_rtx (4)); /* fldln2 */\n \n   emit_insn (gen_absxf2 (tmp, op1));\n-  emit_move_insn (tmp2, standard_80387_constant_rtx (4)); /* fldln2 */\n-  test = gen_rtx_GE (VOIDmode, tmp,\n-    const_double_from_real_value (\n-       REAL_VALUE_ATOF (\"0.29289321881345247561810596348408353\", XFmode),\n-       XFmode));\n-  emit_jump_insn\n-    (gen_cbranchxf4 (test, XEXP (test, 0), XEXP (test, 1), label1));\n-\n-  emit_insn (gen_fyl2xp1xf3_i387 (op0, op1, tmp2));\n+\n+  cst = force_reg (XFmode, cst);\n+  ix86_expand_branch (GE, tmp, cst, label1);\n+  predict_jump (REG_BR_PROB_BASE * 10 / 100);\n+  insn = get_last_insn ();\n+  JUMP_LABEL (insn) = label1;\n+\n+  emit_insn (gen_fyl2xp1xf3_i387 (res, op1, cstln2));\n   emit_jump (label2);\n \n   emit_label (label1);\n-  emit_move_insn (tmp, CONST1_RTX (XFmode));\n-  emit_insn (gen_addxf3 (tmp, op1, tmp));\n-  emit_insn (gen_fyl2xxf3_i387 (op0, tmp, tmp2));\n+  LABEL_NUSES (label1) = 1;\n+\n+  cst1 = force_reg (XFmode, CONST1_RTX (XFmode));\n+  emit_insn (gen_rtx_SET (tmp, gen_rtx_PLUS (XFmode, op1, cst1)));\n+  emit_insn (gen_fyl2xxf3_i387 (res, tmp, cstln2));\n \n   emit_label (label2);\n+  LABEL_NUSES (label2) = 1;\n+\n+  emit_move_insn (op0, res);\n }\n \n /* Emit code for round calculation.  */\n@@ -43939,7 +43948,8 @@ void ix86_emit_i387_round (rtx op0, rtx op1)\n   rtx_code_label *jump_label = gen_label_rtx ();\n   rtx (*floor_insn) (rtx, rtx);\n   rtx (*neg_insn) (rtx, rtx);\n-  rtx insn, tmp;\n+  rtx_insn *insn;\n+  rtx tmp;\n \n   switch (inmode)\n     {"}]}