{"sha": "721f13b342e1fd2f354668535197b659221342e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIxZjEzYjM0MmUxZmQyZjM1NDY2ODUzNTE5N2I2NTkyMjEzNDJlMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-27T00:32:45Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-27T00:32:45Z"}, "message": "(simplify_binary_operation, case SMAX): Correctly compute largest\npossible signed integer.\n\nFrom-SVN: r3360", "tree": {"sha": "710fd0922f102e2ec26318552a08b411e3f79a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/710fd0922f102e2ec26318552a08b411e3f79a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/721f13b342e1fd2f354668535197b659221342e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721f13b342e1fd2f354668535197b659221342e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721f13b342e1fd2f354668535197b659221342e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721f13b342e1fd2f354668535197b659221342e3/comments", "author": null, "committer": null, "parents": [{"sha": "bef9925b8823fe35740ab4fe72b095c933b9200b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef9925b8823fe35740ab4fe72b095c933b9200b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bef9925b8823fe35740ab4fe72b095c933b9200b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dd0c0e2cc54d83896832a101667268d79d48673d", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721f13b342e1fd2f354668535197b659221342e3/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721f13b342e1fd2f354668535197b659221342e3/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=721f13b342e1fd2f354668535197b659221342e3", "patch": "@@ -3823,7 +3823,7 @@ simplify_binary_operation (code, mode, op0, op1)\n \t   \n \tcase SMAX:\n \t  if (width <= HOST_BITS_PER_WIDE_INT && GET_CODE (op1) == CONST_INT\n-\t      && INTVAL (op1) == GET_MODE_MASK (mode) >> 1\n+\t      && INTVAL (op1) == (unsigned) GET_MODE_MASK (mode) >> 1\n \t      && ! side_effects_p (op0))\n \t    return op1;\n \t  else if (rtx_equal_p (op0, op1) && ! side_effects_p (op0))"}]}