{"sha": "2f3321ca812411919883439797b1865c5c09d786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzMzIxY2E4MTI0MTE5MTk4ODM0Mzk3OTdiMTg2NWM1YzA5ZDc4Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-01-19T16:57:05Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-19T16:57:05Z"}, "message": "sol2.h (ASM_DECLARE_OBJECT_NAME): New.\n\n\t* config/sparc/sol2.h (ASM_DECLARE_OBJECT_NAME): New.  Emit\n\t\"tls_object\" for thread-local objects.\n\t* config/sparc/sparc.c (sparc_elf_asm_named_section): Emit\n\t\"#tls\" for thread-local sections.\n\t* configure.ac (thread-local checks): Specify --fatal-warnings in\n\tevery binutils-specific checks.  For sparc*-*-*, test whether the\n\tOS is Solaris and the tools are native and act accordingly.\n\t* configure: Rebuild.\n\nFrom-SVN: r76156", "tree": {"sha": "664ae70c382114ab2b88d14995496b39032f2880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/664ae70c382114ab2b88d14995496b39032f2880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f3321ca812411919883439797b1865c5c09d786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3321ca812411919883439797b1865c5c09d786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3321ca812411919883439797b1865c5c09d786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3321ca812411919883439797b1865c5c09d786/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fe37bc4be12d5b9c7369e01224a45f1eed6e73c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe37bc4be12d5b9c7369e01224a45f1eed6e73c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fe37bc4be12d5b9c7369e01224a45f1eed6e73c"}], "stats": {"total": 149, "additions": 134, "deletions": 15}, "files": [{"sha": "163132b6dbf4b6431bc2a7867b04052a1c65e7a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3321ca812411919883439797b1865c5c09d786/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3321ca812411919883439797b1865c5c09d786/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f3321ca812411919883439797b1865c5c09d786", "patch": "@@ -1,3 +1,14 @@\n+2004-01-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* config/sparc/sol2.h (ASM_DECLARE_OBJECT_NAME): New.  Emit\n+\t\"tls_object\" for thread-local objects.\n+\t* config/sparc/sparc.c (sparc_elf_asm_named_section): Emit\n+\t\"#tls\" for thread-local sections.\n+\t* configure.ac (thread-local checks): Specify --fatal-warnings in\n+\tevery binutils-specific checks.  For sparc*-*-*, test whether the\n+\tOS is Solaris and the tools are native and act accordingly.\n+\t* configure: Rebuild.\n+\n 2004-01-19  Jeff Law  <law@redhat.com>\n \n \t* contrib.texi: Update Paolo Carlini's entry.  New entries for"}, {"sha": "1c6f04f9f340acc31fade3bdedcba54719b158d9", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=2f3321ca812411919883439797b1865c5c09d786", "patch": "@@ -81,6 +81,33 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n   sprintf ((LABEL), \"*.L%s%ld\", (PREFIX), (long)(NUM))\n \n+/* The native TLS-enabled assembler requires the directive #tls_object\n+   to be put on objects in TLS sections (as of v7.1).  This is not\n+   required by the GNU assembler but supported on SPARC.  */\n+#undef  ASM_DECLARE_OBJECT_NAME\n+#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      HOST_WIDE_INT size;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      if (DECL_THREAD_LOCAL (DECL))\t\t\t\t\\\n+\tASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"tls_object\");\t\\\n+      else\t\t\t\t\t\t\t\\\n+\tASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"object\");\t\\\n+\t\t\t\t\t\t\t\t\\\n+      size_directive_output = 0;\t\t\t\t\\\n+      if (!flag_inhibit_size_directive\t\t\t\t\\\n+\t  && (DECL) && DECL_SIZE (DECL))\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  size_directive_output = 1;\t\t\t\t\\\n+\t  size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\\\n+\t  ASM_OUTPUT_SIZE_DIRECTIVE (FILE, NAME, size);\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+      ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n+\n \f\n \n #undef  ENDFILE_SPEC"}, {"sha": "6c0865370ebee2de3519adf4fad52537c83cc285", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=2f3321ca812411919883439797b1865c5c09d786", "patch": "@@ -8478,6 +8478,8 @@ sparc_elf_asm_named_section (const char *name, unsigned int flags)\n     fputs (\",#alloc\", asm_out_file);\n   if (flags & SECTION_WRITE)\n     fputs (\",#write\", asm_out_file);\n+  if (flags & SECTION_TLS)\n+    fputs (\",#tls\", asm_out_file);\n   if (flags & SECTION_CODE)\n     fputs (\",#execinstr\", asm_out_file);\n "}, {"sha": "73108e5c018ff1b05560f3054099eaa563e89218", "filename": "gcc/configure", "status": "modified", "additions": 47, "deletions": 7, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2f3321ca812411919883439797b1865c5c09d786", "patch": "@@ -10138,6 +10138,7 @@ foo:\t.long\t25\n \tlda\t$4,foo($29)\t\t\t!tprel'\n \ttls_first_major=2\n \ttls_first_minor=13\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   i[34567]86-*-*)\n     conftest_s='\n@@ -10157,6 +10158,7 @@ foo:\t.long\t25\n \tleal\tfoo@NTPOFF(%ecx), %eax'\n \ttls_first_major=2\n \ttls_first_minor=14\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   x86_64-*-*)\n     conftest_s='\n@@ -10171,6 +10173,7 @@ foo:\t.long\t25\n \tmovq\t$foo@TPOFF, %rax'\n \ttls_first_major=2\n \ttls_first_minor=14\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   ia64-*-*)\n     conftest_s='\n@@ -10188,6 +10191,7 @@ foo:\tdata8\t25\n \tmovl\tr24 = @tprel(foo#)'\n \ttls_first_major=2\n \ttls_first_minor=13\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   powerpc-*-*)\n     conftest_s='\n@@ -10213,7 +10217,7 @@ x3:\t.space 4\n \taddi 9,9,x2@tprel@l'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-a32\n+\ttls_as_opt=\"-a32 --fatal-warnings\"\n \t;;\n   powerpc64-*-*)\n     conftest_s='\n@@ -10247,7 +10251,7 @@ x3:\t.space 8\n \tnop'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-a64\n+\ttls_as_opt=\"-a64 --fatal-warnings\"\n \t;;\n   s390-*-*)\n     conftest_s='\n@@ -10266,7 +10270,7 @@ foo:\t.long\t25\n \tbas\t%r14,0(%r1,%r13):tls_ldcall:foo'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-m31\n+\ttls_as_opt=\"-m31 --fatal-warnings\"\n \t;;\n   s390x-*-*)\n     conftest_s='\n@@ -10284,7 +10288,7 @@ foo:\t.long\t25\n \tbrasl\t%r14,__tls_get_offset@PLT:tls_ldcall:foo'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=\"-m64 -Aesame\"\n+\ttls_as_opt=\"-m64 -Aesame --fatal-warnings\"\n \t;;\n   sh-*-* | sh[34]-*-*)\n     conftest_s='\n@@ -10298,9 +10302,44 @@ foo:\t.long\t25\n \t.long\tfoo@TPOFF'\n \ttls_first_major=2\n \ttls_first_minor=13\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   sparc*-*-*)\n-    conftest_s='\n+    case \"$target\" in\n+      sparc*-sun-solaris2.*)\n+\ton_solaris=yes\n+\t;;\n+      *)\n+\ton_solaris=no\n+\t;;\n+    esac\n+    if test x$on_solaris = xyes && test x$gas_flag = xno; then\n+      conftest_s='\n+\t.section \".tdata\",#alloc,#write,#tls\n+foo:\t.long\t25\n+\t.text\n+\tsethi\t%tgd_hi22(foo), %o0\n+\tadd\t%o0, %tgd_lo10(foo), %o1\n+\tadd\t%l7, %o1, %o0, %tgd_add(foo)\n+\tcall\t__tls_get_addr, %tgd_call(foo)\n+\tsethi\t%tldm_hi22(foo), %l1\n+\tadd\t%l1, %tldm_lo10(foo), %l2\n+\tadd\t%l7, %l2, %o0, %tldm_add(foo)\n+\tcall\t__tls_get_addr, %tldm_call(foo)\n+\tsethi\t%tldo_hix22(foo), %l3\n+\txor\t%l3, %tldo_lox10(foo), %l4\n+\tadd\t%o0, %l4, %l5, %tldo_add(foo)\n+\tsethi\t%tie_hi22(foo), %o3\n+\tadd\t%o3, %tie_lo10(foo), %o3\n+\tld\t[%l7 + %o3], %o2, %tie_ld(foo)\n+\tadd\t%g7, %o2, %o4, %tie_add(foo)\n+\tsethi\t%tle_hix22(foo), %l1\n+\txor\t%l1, %tle_lox10(foo), %o5\n+\tld\t[%g7 + %o5], %o1'\n+\ttls_first_major=0\n+\ttls_first_minor=0\n+    else\n+      conftest_s='\n \t.section \".tdata\",\"awT\",@progbits\n foo:\t.long\t25\n \t.text\n@@ -10324,7 +10363,8 @@ foo:\t.long\t25\n \tld\t[%g7 + %o5], %o1'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-32\n+\ttls_as_opt=\"-32 --fatal-warnings\"\n+      fi\n \t;;\n esac\n if test -z \"$tls_first_major\"; then\n@@ -10342,7 +10382,7 @@ else\n fi\n   elif test x$gcc_cv_as != x; then\n     echo \"$conftest_s\" > conftest.s\n-    if { ac_try='$gcc_cv_as $tls_as_opt --fatal-warnings -o conftest.o conftest.s >&5'\n+    if { ac_try='$gcc_cv_as $tls_as_opt -o conftest.o conftest.s >&5'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?"}, {"sha": "c4c5767180ae2c0e442b4ff92b20a9204b045886", "filename": "gcc/configure.ac", "status": "modified", "additions": 47, "deletions": 8, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f3321ca812411919883439797b1865c5c09d786/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=2f3321ca812411919883439797b1865c5c09d786", "patch": "@@ -2060,6 +2060,7 @@ foo:\t.long\t25\n \tlda\t$4,foo($29)\t\t\t!tprel'\n \ttls_first_major=2\n \ttls_first_minor=13\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   i[34567]86-*-*)\n     conftest_s='\n@@ -2079,6 +2080,7 @@ foo:\t.long\t25\n \tleal\tfoo@NTPOFF(%ecx), %eax'\n \ttls_first_major=2\n \ttls_first_minor=14\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   x86_64-*-*)\n     conftest_s='\n@@ -2093,6 +2095,7 @@ foo:\t.long\t25\n \tmovq\t$foo@TPOFF, %rax'\n \ttls_first_major=2\n \ttls_first_minor=14\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   ia64-*-*)\n     conftest_s='\n@@ -2110,6 +2113,7 @@ foo:\tdata8\t25\n \tmovl\tr24 = @tprel(foo#)'\n \ttls_first_major=2\n \ttls_first_minor=13\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   powerpc-*-*)\n     conftest_s='\n@@ -2135,7 +2139,7 @@ x3:\t.space 4\n \taddi 9,9,x2@tprel@l'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-a32\n+\ttls_as_opt=\"-a32 --fatal-warnings\"\n \t;;\n   powerpc64-*-*)\n     conftest_s='\n@@ -2169,7 +2173,7 @@ x3:\t.space 8\n \tnop'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-a64\n+\ttls_as_opt=\"-a64 --fatal-warnings\"\n \t;;\n   s390-*-*)\n     conftest_s='\n@@ -2188,7 +2192,7 @@ foo:\t.long\t25\n \tbas\t%r14,0(%r1,%r13):tls_ldcall:foo'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-m31\n+\ttls_as_opt=\"-m31 --fatal-warnings\"\n \t;;\n   s390x-*-*)\n     conftest_s='\n@@ -2206,7 +2210,7 @@ foo:\t.long\t25\n \tbrasl\t%r14,__tls_get_offset@PLT:tls_ldcall:foo'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=\"-m64 -Aesame\"\n+\ttls_as_opt=\"-m64 -Aesame --fatal-warnings\"\n \t;;\n   sh-*-* | sh[34]-*-*)\n     conftest_s='\n@@ -2220,9 +2224,44 @@ foo:\t.long\t25\n \t.long\tfoo@TPOFF'\n \ttls_first_major=2\n \ttls_first_minor=13\n+\ttls_as_opt=--fatal-warnings\n \t;;\n   sparc*-*-*)\n-    conftest_s='\n+    case \"$target\" in\n+      sparc*-sun-solaris2.*)\n+\ton_solaris=yes\n+\t;;\n+      *)\n+\ton_solaris=no\n+\t;;\n+    esac\n+    if test x$on_solaris = xyes && test x$gas_flag = xno; then\n+      conftest_s='\n+\t.section \".tdata\",#alloc,#write,#tls\n+foo:\t.long\t25\n+\t.text\n+\tsethi\t%tgd_hi22(foo), %o0\n+\tadd\t%o0, %tgd_lo10(foo), %o1\n+\tadd\t%l7, %o1, %o0, %tgd_add(foo)\n+\tcall\t__tls_get_addr, %tgd_call(foo)\n+\tsethi\t%tldm_hi22(foo), %l1\n+\tadd\t%l1, %tldm_lo10(foo), %l2\n+\tadd\t%l7, %l2, %o0, %tldm_add(foo)\n+\tcall\t__tls_get_addr, %tldm_call(foo)\n+\tsethi\t%tldo_hix22(foo), %l3\n+\txor\t%l3, %tldo_lox10(foo), %l4\n+\tadd\t%o0, %l4, %l5, %tldo_add(foo)\n+\tsethi\t%tie_hi22(foo), %o3\n+\tadd\t%o3, %tie_lo10(foo), %o3\n+\tld\t[%l7 + %o3], %o2, %tie_ld(foo)\n+\tadd\t%g7, %o2, %o4, %tie_add(foo)\n+\tsethi\t%tle_hix22(foo), %l1\n+\txor\t%l1, %tle_lox10(foo), %o5\n+\tld\t[%g7 + %o5], %o1'\n+\ttls_first_major=0\n+\ttls_first_minor=0\n+    else\n+      conftest_s='\n \t.section \".tdata\",\"awT\",@progbits\n foo:\t.long\t25\n \t.text\n@@ -2246,16 +2285,16 @@ foo:\t.long\t25\n \tld\t[%g7 + %o5], %o1'\n \ttls_first_major=2\n \ttls_first_minor=14\n-\ttls_as_opt=-32\n+\ttls_as_opt=\"-32 --fatal-warnings\"\n+      fi\n \t;;\n changequote([,])dnl\n esac\n if test -z \"$tls_first_major\"; then\n   : # If we don't have a check, assume no support.\n else\n   gcc_GAS_CHECK_FEATURE(thread-local storage support, gcc_cv_as_tls,\n-  [$tls_first_major,$tls_first_minor,0], [$tls_as_opt --fatal-warnings],\n-  [$conftest_s],,\n+  [$tls_first_major,$tls_first_minor,0], [$tls_as_opt], [$conftest_s],,\n   [AC_DEFINE(HAVE_AS_TLS, 1,\n \t    [Define if your assembler supports thread-local storage.])])\n fi"}]}