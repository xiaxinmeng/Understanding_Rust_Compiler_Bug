{"sha": "d593dd8c6ad055660e9ddd4112363f1b88827fb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU5M2RkOGM2YWQwNTU2NjBlOWRkZDQxMTIzNjNmMWI4ODgyN2ZiNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-09-02T21:57:09Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-09-02T21:57:09Z"}, "message": "class.c (finish_class): Remove unused parameter, all callers changed.\n\n\t* class.c (finish_class): Remove unused parameter, all callers\n\tchanged.\n\n\t* expr.c (build_java_athrow): Change return type to void.\n\t(java_lang_expand_expr): Make sure each case in switch returns a\n\tvalue.\n\n\t* java-tree.h (finish_class): Fix prototype to take void args.\n\n\t* jcf-dump.c (usage): Mark with ATTRIBUTE_NORETURN.\n\t(main): Issue return from main, not exit.\n\n\t* jcf-parse.c (parse_class_file): Fix call to `finish_class'.\n\n\t* jcf.h (jcf_unexpected_eof): Mark with ATTRIBUTE_NORETURN.\n\n\t* jv-scan.c (main): Issue return from main, not exit.\n\n\t* parse.y (check_abstract_method_definitions,\n\tjava_check_abstract_method_definitions): Add static prototypes.\n\t(java_complete_expand_methods): Fix call to `finish_class'.\n\n\t* verify.c (verify_jvm_instructions): Initialize variables `oldpc'\n\tand `prevpc'.\n\nFrom-SVN: r29065", "tree": {"sha": "d78f68fd548b7fe100d1c9c862b04b87d0c5606d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d78f68fd548b7fe100d1c9c862b04b87d0c5606d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d593dd8c6ad055660e9ddd4112363f1b88827fb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d593dd8c6ad055660e9ddd4112363f1b88827fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d593dd8c6ad055660e9ddd4112363f1b88827fb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d593dd8c6ad055660e9ddd4112363f1b88827fb6/comments", "author": null, "committer": null, "parents": [{"sha": "57bcb97aac8ba7f801c3ce18ef287ae9a4ac6ae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57bcb97aac8ba7f801c3ce18ef287ae9a4ac6ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57bcb97aac8ba7f801c3ce18ef287ae9a4ac6ae9"}], "stats": {"total": 72, "additions": 51, "deletions": 21}, "files": [{"sha": "fbb67731f32f4249fbdfb69e04662978faa86315", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -1,3 +1,30 @@\n+1999-09-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* class.c (finish_class): Remove unused parameter, all callers\n+\tchanged.\n+\n+\t* expr.c (build_java_athrow): Change return type to void.\n+\t(java_lang_expand_expr): Make sure each case in switch returns a\n+\tvalue.\n+\n+\t* java-tree.h (finish_class): Fix prototype to take void args.\n+\n+\t* jcf-dump.c (usage): Mark with ATTRIBUTE_NORETURN.\n+\t(main): Issue return from main, not exit.\n+\n+\t* jcf-parse.c (parse_class_file): Fix call to `finish_class'.\n+\n+\t* jcf.h (jcf_unexpected_eof): Mark with ATTRIBUTE_NORETURN.\n+\n+\t* jv-scan.c (main): Issue return from main, not exit.\n+\n+\t* parse.y (check_abstract_method_definitions,\n+\tjava_check_abstract_method_definitions): Add static prototypes.\n+\t(java_complete_expand_methods): Fix call to `finish_class'.\n+\n+\t* verify.c (verify_jvm_instructions): Initialize variables `oldpc'\n+\tand `prevpc'.\n+\n 1999-08-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* lang.c (language_string): Constify."}, {"sha": "2b945e0ca2bc0196cf7728c576a3e87cd4bdd3e3", "filename": "gcc/java/class.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -1198,8 +1198,7 @@ make_class_data (type)\n }\n \n void\n-finish_class (cl)\n-     tree cl;\n+finish_class ()\n {\n   tree method;\n   tree type_methods = TYPE_METHODS (CLASS_TO_HANDLE_TYPE (current_class));"}, {"sha": "48d514644fb21472e77bb1ccaf434afc3cc651fe", "filename": "gcc/java/expr.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -46,7 +46,7 @@ static void push_value PROTO ((tree));\n static tree pop_value PROTO ((tree));\n static void java_stack_swap PROTO ((void));\n static void java_stack_dup PROTO ((int, int));\n-static tree build_java_athrow PROTO ((tree));\n+static void build_java_athrow PROTO ((tree));\n static void build_java_jsr PROTO ((tree, tree));\n static void build_java_ret PROTO ((tree));\n static void expand_java_multianewarray PROTO ((tree, int));\n@@ -525,7 +525,7 @@ java_stack_dup (size, offset)\n \n /* Calls _Jv_Throw.  Discard the contents of the value stack. */\n \n-static tree\n+static void\n build_java_athrow (node)\n     tree node;\n {\n@@ -1982,7 +1982,7 @@ java_lang_expand_expr (exp, target, tmode, modifier)\n \t  expand_end_bindings (getdecls (), 1, 0);\n \t  return const0_rtx;\n \t}\n-      break;\n+      return const0_rtx;\n \n     case CASE_EXPR:\n       {\n@@ -2033,7 +2033,7 @@ java_lang_expand_expr (exp, target, tmode, modifier)\n \t  end_catch_handler ();\n \t}\n       expand_end_all_catch ();\n-      break;\n+      return const0_rtx;\n \n     default:\n       fatal (\"Can't expand '%s' tree - java_lang_expand_expr\","}, {"sha": "83b6398d94f72e247256df138422d2551da47c9f", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -586,7 +586,7 @@ extern void parse_error_context PVPROTO ((tree cl, const char *, ...))\n   ATTRIBUTE_PRINTF_2;\n extern tree build_primtype_type_ref PROTO ((const char *));\n extern tree java_get_real_method_name PROTO ((tree));\n-extern void finish_class PROTO ((tree));\n+extern void finish_class PROTO ((void));\n extern void java_layout_seen_class_methods PROTO ((void));\n extern void check_for_initialization PROTO ((tree));\n "}, {"sha": "2f20e30025d3212dee97db3932306af8a901888a", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -86,7 +86,7 @@ static void disassemble_method PROTO ((JCF*, const unsigned char *, int));\n static void print_name PROTO ((FILE*, JCF*, int));\n static void print_signature PROTO ((FILE*, JCF*, int, int));\n static int utf8_equal_string PROTO ((struct JCF*, int, const char *));\n-static int usage PROTO ((void));\n+static int usage PROTO ((void)) ATTRIBUTE_NORETURN;\n static void process_class PROTO ((struct JCF *));\n static void print_constant_pool PROTO ((struct JCF *));\n static void print_exception_table PROTO ((struct JCF *,\n@@ -760,7 +760,7 @@ DEFUN(main, (argc, argv),\n       else\n \t{\n \t  fprintf (stderr, \"%s: illegal argument\\n\", argv[argi]);\n-\t  exit (FATAL_EXIT_CODE);\n+\t  return FATAL_EXIT_CODE;\n \t}\n     }\n \n@@ -784,7 +784,7 @@ DEFUN(main, (argc, argv),\n       if (out)\n \t{\n \t  fprintf (stderr, \"Cannot open '%s' for output.\\n\", output_file);\n-\t  exit (FATAL_EXIT_CODE);\n+\t  return FATAL_EXIT_CODE;\n \t}\n     }\n   else\n@@ -811,7 +811,7 @@ DEFUN(main, (argc, argv),\n \t  if (class_filename == NULL)\n \t    {\n \t      perror (\"Could not find class\");\n-\t      exit (FATAL_EXIT_CODE);\n+\t      return FATAL_EXIT_CODE;\n \t    }\n \t  JCF_FILL (jcf, 4);\n \t  if (GET_u4 (jcf->read_ptr) == ZIPMAGIC)\n@@ -834,7 +834,7 @@ DEFUN(main, (argc, argv),\n \t\t  if (magic != 0x04034b50) /* ZIPMAGIC (little-endian) */\n \t\t    {\n \t\t      fprintf (stderr, \"bad format of .zip/.jar archive\\n\");\n-\t\t      exit (FATAL_EXIT_CODE);\n+\t\t      return FATAL_EXIT_CODE;\n \t\t    }\n \t\t  JCF_FILL (jcf, 26);\n \t\t  JCF_SKIP (jcf, 2);\n@@ -908,7 +908,7 @@ DEFUN(main, (argc, argv),\n \t}\n     }\n \n-  exit (SUCCESS_EXIT_CODE);\n+  return SUCCESS_EXIT_CODE;\n }\n \n static void"}, {"sha": "0a5f5c32afae985ab551611172465d64e4aff055", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -733,7 +733,7 @@ parse_class_file ()\n   if (flag_emit_class_files)\n     write_classfile (current_class);\n \n-  finish_class (current_class);\n+  finish_class ();\n \n   debug_end_source_file (save_lineno);\n   input_filename = save_input_filename;"}, {"sha": "bcf69b7ad8a690076d328c2ff764e80f0b539b5d", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -227,7 +227,7 @@ extern const char *find_class PROTO ((const char *, int, JCF*, int));\n extern const char *find_classfile PROTO ((char *, JCF*, const char *));\n extern int jcf_filbuf_from_stdio PROTO ((JCF *jcf, int count));\n extern void jcf_out_of_synch PROTO((JCF *));\n-extern int jcf_unexpected_eof PROTO ((JCF*, int));\n+extern int jcf_unexpected_eof PROTO ((JCF*, int)) ATTRIBUTE_NORETURN;\n \n /* Extract a character from a Java-style Utf8 string.\n  * PTR points to the current character."}, {"sha": "d24b74c19453bfeb96c1f57b3595357c568f1abf", "filename": "gcc/java/jv-scan.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjv-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fjv-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjv-scan.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -95,7 +95,7 @@ DEFUN (main, (argc, argv),\n \n   /* No flags? Do nothing */\n   if (!flag_find_main && !flag_dump_class)\n-    exit (0);\n+    return 0;\n \n   /* Check on bad usage */\n   if (flag_find_main && flag_dump_class)\n@@ -134,7 +134,7 @@ DEFUN (main, (argc, argv),\n   if (!output_file)\n     fclose (out);\n \n-  exit (0);\n+  return 0;\n }\n \n /* Error report, memory, obstack initialization and other utility"}, {"sha": "1a8ff402f39d829c338a746120b41ded83b24ac4", "filename": "gcc/java/parse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -338,6 +338,8 @@ static int java_decl_equiv PROTO ((tree, tree));\n static int binop_compound_p PROTO ((enum tree_code));\n static tree search_loop PROTO ((tree));\n static int labeled_block_contains_loop_p PROTO ((tree, tree));\n+static void check_abstract_method_definitions PROTO ((int, tree, tree));\n+static void java_check_abstract_method_definitions PROTO ((tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -8651,7 +8653,7 @@ java_complete_expand_methods ()\n \t  if (flag_emit_xref)\n \t    expand_xref (current_class);\n \t  else if (! flag_syntax_only)\n-\t    finish_class (current_class);\n+\t    finish_class ();\n \t}\n     }\n }"}, {"sha": "d952f8047ebbfc87bb3b9041a84e99ba0f6f316e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -262,6 +262,8 @@ static int java_decl_equiv PROTO ((tree, tree));\n static int binop_compound_p PROTO ((enum tree_code));\n static tree search_loop PROTO ((tree));\n static int labeled_block_contains_loop_p PROTO ((tree, tree));\n+static void check_abstract_method_definitions PROTO ((int, tree, tree));\n+static void java_check_abstract_method_definitions PROTO ((tree));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -6064,7 +6066,7 @@ java_complete_expand_methods ()\n \t  if (flag_emit_xref)\n \t    expand_xref (current_class);\n \t  else if (! flag_syntax_only)\n-\t    finish_class (current_class);\n+\t    finish_class ();\n \t}\n     }\n }"}, {"sha": "41eba1074f5a2ec93f8625f589b89935020733b4", "filename": "gcc/java/verify.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d593dd8c6ad055660e9ddd4112363f1b88827fb6/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=d593dd8c6ad055660e9ddd4112363f1b88827fb6", "patch": "@@ -354,8 +354,8 @@ verify_jvm_instructions (jcf, byte_ops, length)\n   int wide = 0;\n   int op_code;\n   int PC;\n-  int oldpc; /* PC of start of instruction. */\n-  int prevpc;  /* If >= 0, PC of previous instruction. */\n+  int oldpc = 0; /* PC of start of instruction. */\n+  int prevpc = 0;  /* If >= 0, PC of previous instruction. */\n   const char *message;\n   int i;\n   register unsigned char *p;"}]}