{"sha": "b37589b0c4c23db8e9f1d4825998aea18125435a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM3NTg5YjBjNGMyM2RiOGU5ZjFkNDgyNTk5OGFlYTE4MTI1NDM1YQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2017-01-18T21:09:32Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2017-01-18T21:09:32Z"}, "message": "Implement LANG_HOOKS_TYPE_FOR_SIZE for jit\n\ngcc/jit/ChangeLog:\n\t* dummy-frontend.c (jit_langhook_type_for_size): Implement, using\n\tlto's lto_type_for_size.\n\nFrom-SVN: r244600", "tree": {"sha": "b55aca824f899dc323377e0aa7e6a4e8df50c5fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b55aca824f899dc323377e0aa7e6a4e8df50c5fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b37589b0c4c23db8e9f1d4825998aea18125435a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37589b0c4c23db8e9f1d4825998aea18125435a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b37589b0c4c23db8e9f1d4825998aea18125435a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37589b0c4c23db8e9f1d4825998aea18125435a/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b1346a80ab539a680eb7d010a1de5f18c53a9d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b1346a80ab539a680eb7d010a1de5f18c53a9d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b1346a80ab539a680eb7d010a1de5f18c53a9d5"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "712382ca1274cad2c418cd8d35b668e2470bc279", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37589b0c4c23db8e9f1d4825998aea18125435a/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37589b0c4c23db8e9f1d4825998aea18125435a/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=b37589b0c4c23db8e9f1d4825998aea18125435a", "patch": "@@ -1,3 +1,8 @@\n+2017-01-18  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* dummy-frontend.c (jit_langhook_type_for_size): Implement, using\n+\tlto's lto_type_for_size.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "4c7932bab88bdcd5e1edeb69791d366e47375fd9", "filename": "gcc/jit/dummy-frontend.c", "status": "modified", "additions": 45, "deletions": 4, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b37589b0c4c23db8e9f1d4825998aea18125435a/gcc%2Fjit%2Fdummy-frontend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b37589b0c4c23db8e9f1d4825998aea18125435a/gcc%2Fjit%2Fdummy-frontend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdummy-frontend.c?ref=b37589b0c4c23db8e9f1d4825998aea18125435a", "patch": "@@ -207,12 +207,53 @@ jit_langhook_type_for_mode (enum machine_mode mode, int unsignedp)\n   return NULL;\n }\n \n+/* Return an integer type with PRECISION bits of precision,\n+   that is unsigned if UNSIGNEDP is nonzero, otherwise signed.  */\n+\n static tree\n-jit_langhook_type_for_size (unsigned int bits ATTRIBUTE_UNUSED,\n-\t\t\t    int unsignedp ATTRIBUTE_UNUSED)\n+jit_langhook_type_for_size (unsigned precision, int unsignedp)\n {\n-  gcc_unreachable ();\n-  return NULL;\n+  int i;\n+\n+  if (precision == TYPE_PRECISION (integer_type_node))\n+    return unsignedp ? unsigned_type_node : integer_type_node;\n+\n+  if (precision == TYPE_PRECISION (signed_char_type_node))\n+    return unsignedp ? unsigned_char_type_node : signed_char_type_node;\n+\n+  if (precision == TYPE_PRECISION (short_integer_type_node))\n+    return unsignedp ? short_unsigned_type_node : short_integer_type_node;\n+\n+  if (precision == TYPE_PRECISION (long_integer_type_node))\n+    return unsignedp ? long_unsigned_type_node : long_integer_type_node;\n+\n+  if (precision == TYPE_PRECISION (long_long_integer_type_node))\n+    return unsignedp\n+\t   ? long_long_unsigned_type_node\n+\t   : long_long_integer_type_node;\n+\n+  for (i = 0; i < NUM_INT_N_ENTS; i ++)\n+    if (int_n_enabled_p[i]\n+\t&& precision == int_n_data[i].bitsize)\n+      return (unsignedp ? int_n_trees[i].unsigned_type\n+\t      : int_n_trees[i].signed_type);\n+\n+  if (precision <= TYPE_PRECISION (intQI_type_node))\n+    return unsignedp ? unsigned_intQI_type_node : intQI_type_node;\n+\n+  if (precision <= TYPE_PRECISION (intHI_type_node))\n+    return unsignedp ? unsigned_intHI_type_node : intHI_type_node;\n+\n+  if (precision <= TYPE_PRECISION (intSI_type_node))\n+    return unsignedp ? unsigned_intSI_type_node : intSI_type_node;\n+\n+  if (precision <= TYPE_PRECISION (intDI_type_node))\n+    return unsignedp ? unsigned_intDI_type_node : intDI_type_node;\n+\n+  if (precision <= TYPE_PRECISION (intTI_type_node))\n+    return unsignedp ? unsigned_intTI_type_node : intTI_type_node;\n+\n+  return NULL_TREE;\n }\n \n /* Record a builtin function.  We just ignore builtin functions.  */"}]}