{"sha": "64979e04afabef10adfce819b9955dd8ae6c2fbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5NzllMDRhZmFiZWYxMGFkZmNlODE5Yjk5NTVkZDhhZTZjMmZiZQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2018-09-03T16:55:05Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2018-09-03T16:55:05Z"}, "message": "bb-reorder: convert to gcc_stablesort\n\n\t* bb-reorder.c (edge_order): Convert to C-qsort-style\n\ttri-state comparator.\n\t(reorder_basic_blocks_simple): Change std::stable_sort to gcc_stablesort.\n\nFrom-SVN: r264068", "tree": {"sha": "f3eabcf353766734feceb7ca5e4c92b1eefbd14f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3eabcf353766734feceb7ca5e4c92b1eefbd14f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64979e04afabef10adfce819b9955dd8ae6c2fbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64979e04afabef10adfce819b9955dd8ae6c2fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64979e04afabef10adfce819b9955dd8ae6c2fbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64979e04afabef10adfce819b9955dd8ae6c2fbe/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2391983fc709bf83e3d10e00de7e06ad25464ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2391983fc709bf83e3d10e00de7e06ad25464ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2391983fc709bf83e3d10e00de7e06ad25464ca"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "e6791fd8dba3b16b3ba67802d4cfbe64d44a8ca5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64979e04afabef10adfce819b9955dd8ae6c2fbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64979e04afabef10adfce819b9955dd8ae6c2fbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64979e04afabef10adfce819b9955dd8ae6c2fbe", "patch": "@@ -1,3 +1,9 @@\n+2018-09-03  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* bb-reorder.c (edge_order): Convert to C-qsort-style\n+\ttri-state comparator.\n+\t(reorder_basic_blocks_simple): Change std::stable_sort to gcc_stablesort.\n+\n 2018-09-03  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* tree-loop-distribution.c (offset_cmp): Convert to C-qsort-style"}, {"sha": "e20df1607233a6cbb4e6452d4e32ea4e43c60214", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64979e04afabef10adfce819b9955dd8ae6c2fbe/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64979e04afabef10adfce819b9955dd8ae6c2fbe/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=64979e04afabef10adfce819b9955dd8ae6c2fbe", "patch": "@@ -91,7 +91,6 @@\n */\n \n #include \"config.h\"\n-#define INCLUDE_ALGORITHM /* stable_sort */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\"\n@@ -2351,13 +2350,20 @@ reorder_basic_blocks_software_trace_cache (void)\n   FREE (bbd);\n }\n \n-/* Return true if edge E1 is more desirable as a fallthrough edge than\n-   edge E2 is.  */\n+/* Order edges by execution frequency, higher first.  */\n \n-static bool\n-edge_order (edge e1, edge e2)\n+static int\n+edge_order (const void *ve1, const void *ve2)\n {\n-  return e1->count () > e2->count ();\n+  edge e1 = *(const edge *) ve1;\n+  edge e2 = *(const edge *) ve2;\n+  profile_count c1 = e1->count ();\n+  profile_count c2 = e2->count ();\n+  /* Since profile_count::operator< does not establish a strict weak order\n+     in presence of uninitialized counts, use 'max': this makes them appear\n+     as if having execution frequency less than any initialized count.  */\n+  profile_count m = c1.max (c2);\n+  return (m == c2) - (m == c1);\n }\n \n /* Reorder basic blocks using the \"simple\" algorithm.  This tries to\n@@ -2410,7 +2416,7 @@ reorder_basic_blocks_simple (void)\n      all edges are equally desirable.  */\n \n   if (optimize_function_for_speed_p (cfun))\n-    std::stable_sort (edges, edges + n, edge_order);\n+    gcc_stablesort (edges, n, sizeof *edges, edge_order);\n \n   /* Now decide which of those edges to make fallthrough edges.  We set\n      BB_VISITED if a block already has a fallthrough successor assigned"}]}