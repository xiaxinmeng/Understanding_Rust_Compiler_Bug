{"sha": "6aa57acc95aa3225ff703c22e0359cff174031fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhNTdhY2M5NWFhMzIyNWZmNzAzYzIyZTAzNTljZmYxNzQwMzFmYQ==", "commit": {"author": {"name": "David Billinghurst", "email": "David.Billinghurst@riotinto.com", "date": "2004-07-13T13:27:52Z"}, "committer": {"name": "David Billinghurst", "email": "billingd@gcc.gnu.org", "date": "2004-07-13T13:27:52Z"}, "message": "README: New file\n\n2004-07-13  David Billinghurst (David.Billinghurst@riotinto.com)\n\n\t* gfortran.dg/g77/README: New file\n\t* gfortran.dg/g77/19981216-0.f:  Copy from\n\tg77.f-torture/noncompile.  Add \"dg-do compile\" and\n\tdg-error as required.\n\t* gfortran.dg/g77/19990218-1.f: Likewise\n\t* gfortran.dg/g77/19990905-1.f: Likewise\n\t* gfortran.dg/g77/9263.f: Likewise\n\t* gfortran.dg/g77/980615-0.f: Likewise\n\t* gfortran.dg/g77/980616-0.f: Likewise\n\t* gfortran.dg/g77/check0.f: Likewise\n\t* gfortran.dg/g77/select_no_compile.f: Likewise\n\nFrom-SVN: r84622", "tree": {"sha": "d6bbddfda8e6f8b5b4ad12e7d4417cf68f58e895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6bbddfda8e6f8b5b4ad12e7d4417cf68f58e895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa57acc95aa3225ff703c22e0359cff174031fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa57acc95aa3225ff703c22e0359cff174031fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa57acc95aa3225ff703c22e0359cff174031fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa57acc95aa3225ff703c22e0359cff174031fa/comments", "author": null, "committer": null, "parents": [{"sha": "1b3c2c2d72f89d67c2a085bbf5cda557d755a2dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3c2c2d72f89d67c2a085bbf5cda557d755a2dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b3c2c2d72f89d67c2a085bbf5cda557d755a2dc"}], "stats": {"total": 426, "additions": 426, "deletions": 0}, "files": [{"sha": "c267bcfc468c565a83108e495c4486979f63afcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -1,3 +1,17 @@\n+2004-07-13  David Billinghurst (David.Billinghurst@riotinto.com)\n+\n+\t* gfortran.dg/g77/README: New file\n+\t* gfortran.dg/g77/19981216-0.f:  Copy from \n+\tg77.f-torture/noncompile.  Add \"dg-do compile\" and\n+\tdg-error as required.\n+\t* gfortran.dg/g77/19990218-1.f: Likewise\n+\t* gfortran.dg/g77/19990905-1.f: Likewise\n+\t* gfortran.dg/g77/9263.f: Likewise\n+\t* gfortran.dg/g77/980615-0.f: Likewise\n+\t* gfortran.dg/g77/980616-0.f: Likewise\n+\t* gfortran.dg/g77/check0.f: Likewise\n+\t* gfortran.dg/g77/select_no_compile.f: Likewise\n+\n 2004-07-13  David Billinghurst (David.Billinghurst@riotinto.com)\n \n \tCopy files from g77.f-torture/compile."}, {"sha": "9460bd9cb71b806e02713a54d91417a99311ccbc", "filename": "gcc/testsuite/gfortran.dg/g77/19981216-0.f", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19981216-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19981216-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19981216-0.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,90 @@\n+c { dg-do compile }\n+* Resent-From: Craig Burley <burley@gnu.org>\n+* Resent-To: craig@jcb-sc.com\n+* X-Delivered: at request of burley on mescaline.gnu.org\n+* Date: Wed, 16 Dec 1998 18:31:24 +0100\n+* From: Dieter Stueken <stueken@conterra.de>\n+* Organization: con terra GmbH\n+* To: fortran@gnu.org\n+* Subject: possible bug\n+* Content-Type: text/plain; charset=iso-8859-1\n+* X-Mime-Autoconverted: from 8bit to quoted-printable by mescaline.gnu.org id KAA09085\n+* X-UIDL: 72293bf7f9fac8378ec7feca2bccbce2\n+* \n+* Hi,\n+* \n+* I'm about to compile a very old, very ugly Fortran program.\n+* For one part I got:\n+* \n+* f77: Internal compiler error: program f771 got fatal signal 6\n+* \n+* instead of any detailed error message. I was able to break down the\n+* problem to the following source fragment:\n+* \n+* -------------------------------------------\n+        PROGRAM WAP\n+\n+        integer*2  ios\n+        character*80  name\n+\n+        name = 'blah'\n+        open(unit=8,status='unknown',file=name,form='formatted',\n+     F       iostat=ios)\n+\n+      END\n+* -------------------------------------------\n+* \n+* The problem seems to be caused by the \"integer*2 ios\" declaration.\n+* So far I solved it by simply using a plain integer instead.\n+* \n+* I'm running gcc on a Linux system compiled/installed\n+* with no special options:\n+* \n+* -> g77 -v\n+* g77 version 0.5.23\n+* Driving: g77 -v -c -xf77-version /dev/null -xnone\n+* Reading specs from /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/specs\n+* gcc version 2.8.1\n+*  /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/cpp -lang-c -v -undef\n+* -D__GNUC__=2 -D__GNUC_MINOR__=8 -D__ELF__ -D__unix__ -D__linux__\n+* -D__unix -D__linux -Asystem(posix) -D_LANGUAGE_FORTRAN -traditional\n+* -Di386 -Di686 -Asystem(unix) -Acpu(i386) -Amachine(i386) -D__i386__\n+* -D__i686__ -Asystem(unix) -Acpu(i386) -Amachine(i386) /dev/null\n+* /dev/null\n+* GNU CPP version 2.8.1 (i386 GNU/Linux with ELF)\n+* #include \"...\" search starts here:\n+* #include <...> search starts here:\n+*  /usr/local/include\n+*  /usr/i686-pc-linux-gnulibc1/include\n+*  /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/include\n+*  /usr/include\n+* End of search list.\n+*  /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/f771 -fnull-version\n+* -quiet -dumpbase g77-version.f -version -fversion -o /tmp/cca24911.s\n+* /dev/null\n+* GNU F77 version 2.8.1 (i686-pc-linux-gnulibc1) compiled by GNU C version\n+* 2.8.1.\n+* GNU Fortran Front End version 0.5.23\n+*  as -V -Qy -o /tmp/cca24911.o /tmp/cca24911.s\n+* GNU assembler version 2.8.1 (i486-linux), using BFD version 2.8.1\n+*  ld -m elf_i386 -dynamic-linker /lib/ld-linux.so.1 -o /tmp/cca24911\n+* /tmp/cca24911.o /usr/lib/crt1.o /usr/lib/crti.o\n+* /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/crtbegin.o\n+* -L/usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1 -L/usr -lg2c -lm -lgcc\n+* -lc -lgcc /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/crtend.o\n+* /usr/lib/crtn.o\n+*  /tmp/cca24911\n+* __G77_LIBF77_VERSION__: 0.5.23\n+* @(#)LIBF77 VERSION 19970919\n+* __G77_LIBI77_VERSION__: 0.5.23\n+* @(#) LIBI77 VERSION pjw,dmg-mods 19980405\n+* __G77_LIBU77_VERSION__: 0.5.23\n+* @(#) LIBU77 VERSION 19970919\n+* \n+* \n+* Regards, Dieter.\n+* -- \n+* Dieter St\ufffdken, con terra GmbH, M\ufffdnster\n+*     stueken@conterra.de         stueken@qgp.uni-muenster.de\n+*     http://www.conterra.de/     http://qgp.uni-muenster.de/~stueken\n+*     (0)251-980-2027             (0)251-83-334974"}, {"sha": "2ac43903444dd0596b43694bca22113c96a6c61c", "filename": "gcc/testsuite/gfortran.dg/g77/19990218-1.f", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990218-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990218-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990218-1.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,25 @@\n+c { dg-do compile }\n+c\n+c  g77 used to warn for this case\n+c 19990218-1.f: In program `test':\n+c 19990218-1.f:13: \n+c             double precision function fun(a,b)\n+c                                       1\n+c  19990218-1.f:23: (continued):\n+c             c=fun(a,b)\n+c               2\n+c  Global name `fun' at (2) has different type at (1) [info -f g77 M GLOBALS]\n+c\n+        double precision function fun(a,b)\n+        double precision a,b\n+        print*,'in sub: a,b=',a,b\n+        fun=a*b\n+        print*,'in sub: fun=',fun\n+        return\n+        end\n+        program test\n+        double precision a,b,c\n+        data a,b/1.0d-46,1.0d0/\n+        c=fun(a,b)\n+        print*,'in main: fun=',c\n+        end"}, {"sha": "393da945320296bc371297bf8dd37c607833c0b9", "filename": "gcc/testsuite/gfortran.dg/g77/19990905-1.f", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990905-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990905-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990905-1.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,20 @@\n+c { dg-do compile }\n+c\n+c  g77 gave error\n+c  19990905-1.f: In subroutine `x':\n+c  19990905-1.f:15: \n+c           common /foo/n\n+c                   1\n+c  19990905-1.f:18: (continued):\n+c           call foo(a(1))\n+c                2\n+c  Invalid declaration of or reference to symbol `foo' at (2) [initially seen at (1)]\n+* =foo7.f in Burley's g77 test suite.\n+      subroutine x\n+      real a(n)\n+      common /foo/n\n+      continue\n+      entry y(a)\n+      call foo(a(1))\n+      end\n+c { dg-excess-errors \"\" }  PR 16520"}, {"sha": "5ff6ed8c3cba581cf63efc4cff53837511282ffb", "filename": "gcc/testsuite/gfortran.dg/g77/19990905-1.f~", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990905-1.f%7E", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990905-1.f%7E", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F19990905-1.f%7E?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,20 @@\n+c { dg-do compile }\n+c\n+c  g77 gave error\n+c  19990905-1.f: In subroutine `x':\n+c  19990905-1.f:15: \n+c           common /foo/n\n+c                   1\n+c  19990905-1.f:18: (continued):\n+c           call foo(a(1))\n+c                2\n+c  Invalid declaration of or reference to symbol `foo' at (2) [initially seen at (1)]\n+* =foo7.f in Burley's g77 test suite.\n+      subroutine x\n+      real a(n)\n+      common /foo/n\n+      continue\n+      entry y(a)\n+      call foo(a(1))\n+      end\n+c { dg-excess-errors \"\" }"}, {"sha": "77ce985758dea01a82411ef88d2462e5b720026d", "filename": "gcc/testsuite/gfortran.dg/g77/9263.f", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F9263.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F9263.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F9263.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,11 @@\n+C { dg-do compile }\n+      PARAMETER (Q=1)\n+      PARAMETER (P=10)\n+      INTEGER C(10),D(10),E(10),F(10)\n+C     TERMINAL NOT INTEGER\n+      DATA (C(I),I=1,P)    /10*10/ ! { dg-error \"End expression in DO loop\" \"\" }\n+C     START NOT INTEGER\n+      DATA (D(I),I=Q,10)   /10*10/ ! { dg-error \"Start expression in DO loop\" \"\" }\n+C     INCREMENT NOT INTEGER\n+      DATA (E(I),I=1,10,Q) /10*10/ ! { dg-error \"Step expression in DO loop\" \"\" }\n+      END"}, {"sha": "7e1f14fac38d4d68f731f5ec5899c364fdfb4c73", "filename": "gcc/testsuite/gfortran.dg/g77/980615-0.f", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980615-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980615-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980615-0.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,12 @@\n+c { dg-do compile }\n+* Fixed by JCB 1998-07-25 change to stc.c.\n+\n+* Date: Thu, 11 Jun 1998 22:35:20 -0500\n+* From: Ian A Watson <WATSON_IAN_A@lilly.com>\n+* Subject: crash\n+* \n+      CaLL foo(W)\n+      END\n+      SUBROUTINE foo(W)\n+      yy(I)=A(I)Q(X) ! { dg-error \"Error: Unclassifiable statement\" \"\" }\n+c { dg-error \"end of file\" \"end of file\" { target *-*-* } 0 }"}, {"sha": "75bd05e93ad6b8c7c96059152de9edbe8368f850", "filename": "gcc/testsuite/gfortran.dg/g77/980616-0.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980616-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980616-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2F980616-0.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,10 @@\n+c { dg-do compile }\n+* Fixed by 1998-07-11 equiv.c change.\n+* ../../gcc/f/equiv.c:666: failed assertion `ffebld_op (subscript) == FFEBLD_opCONTER'\n+\n+* Date: Mon, 15 Jun 1998 21:54:32 -0500\n+* From: Ian A Watson <WATSON_IAN_A@lilly.com>\n+* Subject: Mangler Crash\n+      EQUIVALENCE(I,glerf(P)) ! { dg-error \"cannot appear\"  \"cannot appear\" }\n+      COMMON /foo/ glerf(3)\n+c { dg-error \"end of file\" \"end of file\" { target *-*-* } 0 }"}, {"sha": "763b258305af817dd7226295da74f05bbfca9d59", "filename": "gcc/testsuite/gfortran.dg/g77/README", "status": "added", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2FREADME?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,201 @@\n+The g77 testsuite is being transferred to the gfortran testsuite.\n+This file documents the status of each test case.\n+\n+\tY\tTest has been transferred.\n+        Y XFAIL This test has been transferred but fails\n+\tN\tThis feature will not be supported by gfortran.\n+\tF\tThis test fails with gfortran.  Not transferred (yet).\n+\t?\tWe looked at this case, but haven't decided.\n+\n+Directory g77.dg\n+\n+12632.f\t\t\t\tY\n+20010216-1.f\t\t\tY\n+7388.f\t\t\t\tY\n+f77-edit-apostrophe-out.f\tY\n+f77-edit-colon-out.f\t\tY\n+f77-edit-h-out.f\t\tY\n+f77-edit-i-in.f\t\t\tY\n+f77-edit-i-out.f\t\tY\n+f77-edit-s-out.f\t\tY  XFAIL PR 16434\n+f77-edit-slash-out.f\t\tY\n+f77-edit-t-in.f\t\t\tY  XFAIL PR 16436\n+f77-edit-t-out.f\t\tY\n+f77-edit-x-out.f\t\tY  XFAIL PR 16435\n+fbackslash.f\t\t\t?\n+fcase-preserve.f\t\t?\n+ff90-1.f\t\t\t?\n+ffixed-form-1.f\t\t\tY\n+ffixed-form-2.f\t\t\tY\n+ffixed-line-length-0.f\t\tF  PR 16464\n+ffixed-line-length-132.f\tF  PR 16464\n+ffixed-line-length-7.f\t\tF  PR 16464\n+ffixed-line-length-72.f\t\tF  PR 16464\n+ffixed-line-length-none.f\tF  PR 16464\n+ffree-form-1.f\t\t\tY\n+ffree-form-2.f\t\t\tY\n+ffree-form-3.f\t\t\tY\n+fno-backslash.f\t\t\t?\n+fno-f90-1.f\t\t\t?\n+fno-fixed-form-1.f\t\t?\n+fno-onetrip.f\t\t\t?\n+fno-typeless-boz.f\t\t?\n+fno-underscoring.f\t\tY\n+fno-vxt-1.f\t\t\t?\n+fonetrip.f\t\t\t?\n+ftypeless-boz.f\t\t\t?\n+fugly-assumed.f\t\t\t?\n+funderscoring.f\t\t\tY\n+fvxt-1.f\t\t\t?\n+pr3743-1.f\t\t\t?\n+pr3743-2.f\t\t\t?\n+pr3743-3.f\t\t\t?\n+pr3743-4.f\t\t\t?\n+pr5473.f\t\t\t?\n+pr9258.f\t\t\tY\n+strlen0.f\t\t\tY\n+\n+\n+Directory g77.dg/bprob\n+g77-bprob-1.f\n+\n+\n+Directory g77.dg/gcov\n+gcov-1.f \n+\n+Directory g77.f-torture/compile\n+12002.f\t\t\t\tY\n+13060.f\t\t\t\tY\n+19990218-0.f\t\t\tY\n+19990305-0.f\t\t\tY\n+19990419-0.f\t\t\tY\n+19990502-0.f\t\t\tY\n+19990502-1.f\t\t\tY\n+19990525-0.f\t\t\tY\n+19990826-1.f\t\t\tY\n+19990826-3.f\t\t\tY\n+19990905-0.f\t\t\tY  XFAIL PR 16511\n+19990905-2.f\t\t\tY\n+20000412-1.f\t\t\tY\n+20000511-1.f\t\t\tY\n+20000511-2.f\t\t\tY\n+20000518.f\t\t\tY\n+20000601-1.f\t\t\tY\n+20000601-2.f\t\t\tY\n+20000629-1.f\t\t\tY\n+20000630-2.f\t\t\tY\n+20010115.f\t\t\tY\n+20010321-1.f\t\t\tY\n+20010426.f\t\t\tY\n+20010519-1.f\t\t\tY  Add dg-warnings for ASSIGN\n+20020307-1.f\t\t\tY\n+20030115-1.f\t\t\tY  Add dg-warnings for ASSIGN\n+20030326-1.f\t\t\tY  XFAIL PR 16512\n+8485.f\t\t\t\tY\n+960317-1.f\t\t\tY\n+970125-0.f\t\t\tY  Add dg-excess-errors. Investigate.later.\n+970915-0.f\t\t\tY\n+980310-1.f\t\t\tY\n+980310-2.f\t\t\tY\n+980310-3.f\t\t\tY\n+980310-4.f\t\t\tY\n+980310-6.f\t\t\tY\n+980310-7.f\t\t\tY\n+980310-8.f\t\t\tY\n+980419-2.f\t\t\tY\n+980424-0.f\t\t\tY\n+980427-0.f\t\t\tY\n+980519-2.f\t\t\tY  Modify slightly\n+980729-0.f\t\t\tY\n+981117-1.f\t\t\tY\n+990115-1.f\t\t\tY  Declare variable RANK\n+alpha1.f\t\t\tY  Work around PR 16508 and PR 16509\n+toon_1.f\t\t\tY\n+xformat.f\t\t\tY  Add dg-warning for extension\n+cpp.F\t\t\t\tY\n+cpp2.F\t\t\t\tY\n+\n+g77.f-torture/execute\n+10197.f & 10197.x\n+13037.f\n+1832.f\n+19981119-0.f\n+19990313-0.f\n+19990313-1.f\n+19990313-2.f\n+19990313-3.f\n+19990325-0.f\n+19990325-1.f\n+19990419-1.f\n+19990826-0.f\n+19990826-2.f\n+20000503-1.f\n+20001111.f\n+20001201.f & 20001201.x\n+20010116.f\n+20010426.f\n+20010430.f\n+20010610.f\n+5122.f\n+6177.f\n+6367.f & 6367.x\n+947.f\n+970625-2.f\n+970816-3.f\n+971102-1.f\n+980520-1.f\n+980628-0.f\n+980628-1.f\n+980628-10.f\n+980628-2.f\n+980628-3.f\n+980628-4.f & 980628-4.x\n+980628-5.f & 980628-5.x\n+980628-6.f & 980628-6.x\n+980628-7.f\n+980628-8.f\n+980628-9.f\n+980701-0.f\n+980701-1.f\n+CVS\n+alpha2.f & alpha2.x\n+auto0.f & auto0.x\n+auto1.f & auto1.x\n+cabs.f\n+claus.f\n+complex_1.f\n+cpp.F\n+cpp2.F\n+dcomplex.f\n+dnrm2.f\n+erfc.f\n+exp.f\n+f90-intrinsic-bit.f\n+f90-intrinsic-mathematical.f\n+f90-intrinsic-numeric.f\n+int8421.f\n+intrinsic-f2c-z.f\n+intrinsic-unix-bessel.f\n+intrinsic-unix-erf.f\n+intrinsic-vax-cd.f\n+intrinsic77.f\n+io0.f & io0.x\n+io1.f & io1.x\n+labug1.f\n+large_vec.f\n+le.f\n+select.f\n+short.f\n+u77-test.f & u77-test.x\n+\n+Directory g77.f-torture/noncompile\n+19981216-0.f\t\t\tY Accepted by gfortran\n+19990218-1.f\t\t\tY g77 issued warning.\n+19990826-4.f\t\t\t?\n+19990905-1.f\t\t\tY XFAIL 16520  gfortran ICE on invalid\n+9263.f\t\t\t\tY\n+970626-2.f\t\t\t?\n+980615-0.f                      Y\n+980616-0.f\t\t\tY\n+check0.f\t\t\tY\n+select_no_compile.f\t\tY"}, {"sha": "3febba9d02a2910ab824da9c35a76157468ce0fd", "filename": "gcc/testsuite/gfortran.dg/g77/check0.f", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcheck0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcheck0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fcheck0.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,12 @@\n+c { dg-do compile }\n+CCC Abort fixed by:\n+CCC1998-04-21  Jim Wilson  <wilson@cygnus.com>\n+CCC\n+CCC        * stmt.c (check_seenlabel): When search for line number note for\n+CCC        warning, handle case where there is no such note.\n+      logical l(10)\n+      integer i(10)\n+      goto (10,20),l ! { dg-error \"Selection expression in computed GOTO\" \"\" }\n+      goto (10,20),i ! { dg-error \"Selection expression in computed GOTO\" \"\" }\n+ 10   stop\n+ 20   end"}, {"sha": "242562e9212c702b792e10713e99bc32ca518bb3", "filename": "gcc/testsuite/gfortran.dg/g77/select_no_compile.f", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fselect_no_compile.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa57acc95aa3225ff703c22e0359cff174031fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fselect_no_compile.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fg77%2Fselect_no_compile.f?ref=6aa57acc95aa3225ff703c22e0359cff174031fa", "patch": "@@ -0,0 +1,11 @@\n+c { dg-do compile }\n+       integer*1 one\n+       integer*2 two\n+       parameter (one=1)\n+       parameter (two=2)\n+       select case (I)\n+       case (one) ! { dg-error \"Expression in CASE statement\" \"\" }\n+       case (two) ! { dg-error \"Expression in CASE statement\" \"\" }\n+       end select\n+       end\n+    "}]}