{"sha": "83387bbd28cd1d7e0c45a5e7f807713116ecb410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMzODdiYmQyOGNkMWQ3ZTBjNDVhNWU3ZjgwNzcxMzExNmVjYjQxMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-06-23T11:30:32Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-06-23T11:30:32Z"}, "message": "parse_numbers.h (_Number_help): Fix divide-by-zero.\n\n\t* include/bits/parse_numbers.h (_Number_help): Fix divide-by-zero.\n\t* include/std/chrono (_Checked_integral_constant): Allow zero.\n\t* testsuite/20_util/duration/literals/values.cc: Test non-positive\n\tvalues and digit separators.\n\nFrom-SVN: r211890", "tree": {"sha": "f6d875ca56fa30af1dfb0d9afa2c9fa4b9cab7f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6d875ca56fa30af1dfb0d9afa2c9fa4b9cab7f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83387bbd28cd1d7e0c45a5e7f807713116ecb410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83387bbd28cd1d7e0c45a5e7f807713116ecb410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83387bbd28cd1d7e0c45a5e7f807713116ecb410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83387bbd28cd1d7e0c45a5e7f807713116ecb410/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "463036be82cef539763c51afd5d94c51bd9eb66c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463036be82cef539763c51afd5d94c51bd9eb66c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463036be82cef539763c51afd5d94c51bd9eb66c"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "4c67c60d36ffc27fa2aab54246c785c1aa72b3a2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=83387bbd28cd1d7e0c45a5e7f807713116ecb410", "patch": "@@ -1,3 +1,10 @@\n+2014-06-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/parse_numbers.h (_Number_help): Fix divide-by-zero.\n+\t* include/std/chrono (_Checked_integral_constant): Allow zero.\n+\t* testsuite/20_util/duration/literals/values.cc: Test non-positive\n+\tvalues and digit separators.\n+\n 2014-06-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n "}, {"sha": "f46c59c44da91dc7e04c30fe9e56499163ce242c", "filename": "libstdc++-v3/include/bits/parse_numbers.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fparse_numbers.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fparse_numbers.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fparse_numbers.h?ref=83387bbd28cd1d7e0c45a5e7f807713116ecb410", "patch": "@@ -190,10 +190,11 @@ namespace __parse_int\n       using __digit = _Digit<_Base, _Dig>;\n       using __valid_digit = typename __digit::__valid;\n       using __next = _Number_help<_Base,\n-\t\t\t\t  _Pow / (_Base * __valid_digit::value),\n+\t\t\t\t  __valid_digit::value ? _Pow / _Base : _Pow,\n \t\t\t\t  _Digs...>;\n       using type = __ull_constant<_Pow * __digit::value + __next::type::value>;\n-      static_assert((type::value / _Pow) == __digit::value, \"overflow\");\n+      static_assert((type::value / _Pow) == __digit::value,\n+\t\t    \"integer literal does not fit in unsigned long long\");\n     };\n \n   template<unsigned _Base, unsigned long long _Pow, char _Dig>\n@@ -214,7 +215,6 @@ namespace __parse_int\n     { };\n \n //------------------------------------------------------------------------------\n-//  This _Parse_int is the same 'level' as the old _Base_dispatch.\n \n   template<char... _Digs>\n     struct _Parse_int;"}, {"sha": "88eaa169f0eba18fb68d3bde549ea621d294fdf5", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=83387bbd28cd1d7e0c45a5e7f807713116ecb410", "patch": "@@ -791,7 +791,7 @@ _GLIBCXX_END_NAMESPACE_VERSION\n       struct _Checked_integral_constant\n       : integral_constant<_Rep, static_cast<_Rep>(_Val)>\n       {\n-\tstatic_assert(_Checked_integral_constant::value > 0\n+\tstatic_assert(_Checked_integral_constant::value >= 0\n \t\t      && _Checked_integral_constant::value == _Val,\n \t\t      \"literal value cannot be represented by duration type\");\n       };"}, {"sha": "ce86358adfa9f8416f0b5552160f8c70965742ea", "filename": "libstdc++-v3/testsuite/20_util/duration/literals/values.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Fvalues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83387bbd28cd1d7e0c45a5e7f807713116ecb410/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Fvalues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Fvalues.cc?ref=83387bbd28cd1d7e0c45a5e7f807713116ecb410", "patch": "@@ -56,6 +56,12 @@ test03()\n   VERIFY( workday == std::chrono::hours(8) );\n   auto fworkday = 8.0h;\n   VERIFY( (fworkday == std::chrono::duration<long double, std::ratio<3600,1>>(8.0L)) );\n+  auto immediate = 0s;\n+  VERIFY( immediate == std::chrono::seconds(0) );\n+  auto minute_ago = -1min;\n+  VERIFY( minute_ago == std::chrono::minutes(-1) );\n+  auto separated = 1'000'000s;\n+  VERIFY( separated == std::chrono::seconds(1'000'000) );\n }\n \n int"}]}