{"sha": "16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "node_id": "C_kwDOANBUbNoAKDE2Y2U4MjJlZDE0ZTY2MzVlZTJmZmNiYTM5NGJiYThlOTM0YmM2ZGQ", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2021-10-20T12:09:30Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2021-10-20T12:38:12Z"}, "message": "AArch64: Add support for __builtin_roundeven[f] (PR100966)\n\nEnable __builtin_roundeven[f] by changing existing frintn to roundeven.\n\n2021-10-20  Wilco Dijkstra  <wdijkstr@arm.com>\n\ngcc/\n\tPR target/100966\n\t* config/aarch64/aarch64.md (frint_pattern): Update comment.\n\t* config/aarch64/aarch64-simd-builtins.def: Change frintn to roundeven.\n\t* config/aarch64/arm_fp16.h: Change frintn to roundeven.\n\t* config/aarch64/arm_neon.h: Likewise.\n\t* config/aarch64/iterators.md (frint_pattern): Use roundeven for FRINTN.\n\ngcc/testsuite/\n\tPR target/100966\n\t* gcc.target/aarch64/frint.x: Add roundeven tests.\n\t* gcc.target/aarch64/frint_double.c: Likewise.\n\t* gcc.target/aarch64/frint_float.c: Likewise.", "tree": {"sha": "1f6aac281419a9fd945582d4525cc8403266ccac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f6aac281419a9fd945582d4525cc8403266ccac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/comments", "author": null, "committer": null, "parents": [{"sha": "4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4824ed41ba7cd63e60fd9f8769a58b79935a90d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4824ed41ba7cd63e60fd9f8769a58b79935a90d1"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "be1c5b543fe5f364250c32de30c9f0b33b694f97", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -506,7 +506,7 @@\n   BUILTIN_VHSDF (UNOP, nearbyint, 2, FP)\n   BUILTIN_VHSDF (UNOP, rint, 2, FP)\n   BUILTIN_VHSDF (UNOP, round, 2, FP)\n-  BUILTIN_VHSDF_HSDF (UNOP, frintn, 2, FP)\n+  BUILTIN_VHSDF_HSDF (UNOP, roundeven, 2, FP)\n \n   VAR1 (UNOP, btrunc, 2, FP, hf)\n   VAR1 (UNOP, ceil, 2, FP, hf)"}, {"sha": "1a39470a1feeb8d23a3d0d4f8a9b54535f769fd9", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -5920,7 +5920,7 @@\n ;; -------------------------------------------------------------------\n \n ;; frint floating-point round to integral standard patterns.\n-;; Expands to btrunc, ceil, floor, nearbyint, rint, round, frintn.\n+;; Expands to btrunc, ceil, floor, nearbyint, rint, round, roundeven.\n \n (define_insn \"<frint_pattern><mode>2\"\n   [(set (match_operand:GPF_F16 0 \"register_operand\" \"=w\")"}, {"sha": "c2235460f5522afc2767e8bb212197b50a07ab8a", "filename": "gcc/config/aarch64/arm_fp16.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Farm_fp16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Farm_fp16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_fp16.h?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -383,7 +383,7 @@ __extension__ extern __inline float16_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndnh_f16 (float16_t __a)\n {\n-  return __builtin_aarch64_frintnhf (__a);\n+  return __builtin_aarch64_roundevenhf (__a);\n }\n \n __extension__ extern __inline float16_t"}, {"sha": "1768c6b56c132cd1648b2ff8aeeddd09e676234a", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -26359,35 +26359,35 @@ __extension__ extern __inline float32_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndns_f32 (float32_t __a)\n {\n-  return __builtin_aarch64_frintnsf (__a);\n+  return __builtin_aarch64_roundevensf (__a);\n }\n \n __extension__ extern __inline float32x2_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndn_f32 (float32x2_t __a)\n {\n-  return __builtin_aarch64_frintnv2sf (__a);\n+  return __builtin_aarch64_roundevenv2sf (__a);\n }\n \n __extension__ extern __inline float64x1_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndn_f64 (float64x1_t __a)\n {\n-  return (float64x1_t) {__builtin_aarch64_frintndf (__a[0])};\n+  return (float64x1_t) {__builtin_aarch64_roundevendf (__a[0])};\n }\n \n __extension__ extern __inline float32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndnq_f32 (float32x4_t __a)\n {\n-  return __builtin_aarch64_frintnv4sf (__a);\n+  return __builtin_aarch64_roundevenv4sf (__a);\n }\n \n __extension__ extern __inline float64x2_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndnq_f64 (float64x2_t __a)\n {\n-  return __builtin_aarch64_frintnv2df (__a);\n+  return __builtin_aarch64_roundevenv2df (__a);\n }\n \n /* vrndp  */\n@@ -32792,14 +32792,14 @@ __extension__ extern __inline float16x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndn_f16 (float16x4_t __a)\n {\n-  return __builtin_aarch64_frintnv4hf (__a);\n+  return __builtin_aarch64_roundevenv4hf (__a);\n }\n \n __extension__ extern __inline float16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndnq_f16 (float16x8_t __a)\n {\n-  return __builtin_aarch64_frintnv8hf (__a);\n+  return __builtin_aarch64_roundevenv8hf (__a);\n }\n \n __extension__ extern __inline float16x4_t"}, {"sha": "e4af27b058c953737e21c13f8886a7813fd790a2", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -3084,7 +3084,7 @@\n \t\t\t\t(UNSPEC_FRINTI \"nearbyint\")\n \t\t\t\t(UNSPEC_FRINTX \"rint\")\n \t\t\t\t(UNSPEC_FRINTA \"round\")\n-\t\t\t\t(UNSPEC_FRINTN \"frintn\")])\n+\t\t\t\t(UNSPEC_FRINTN \"roundeven\")])\n \n ;; frint suffix for floating-point rounding instructions.\n (define_int_attr frint_suffix [(UNSPEC_FRINTZ \"z\") (UNSPEC_FRINTP \"p\")"}, {"sha": "d598a25ff21b8feeca6a96de79848b2fbde7f31e", "filename": "gcc/testsuite/gcc.target/aarch64/frint.x", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint.x?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -4,6 +4,7 @@ extern GPF SUFFIX(floor) (GPF);\n extern GPF SUFFIX(nearbyint) (GPF);\n extern GPF SUFFIX(rint) (GPF);\n extern GPF SUFFIX(round) (GPF);\n+extern GPF SUFFIX(roundeven) (GPF);\n \n GPF test1a (GPF x)\n {\n@@ -64,3 +65,14 @@ GPF test6b (GPF x)\n {\n   return SUFFIX(round)(x);\n }\n+\n+GPF test7a (GPF x)\n+{\n+  return SUFFIX(__builtin_roundeven)(x);\n+}\n+\n+GPF test7b (GPF x)\n+{\n+  return SUFFIX(roundeven)(x);\n+}\n+"}, {"sha": "1d28eb09e11842802ab632a7696de4407263f8ce", "filename": "gcc/testsuite/gcc.target/aarch64/frint_double.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint_double.c?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -12,3 +12,4 @@\n /* { dg-final { scan-assembler-times \"frinti\\td\\[0-9\\]\" 2 } } */\n /* { dg-final { scan-assembler-times \"frintx\\td\\[0-9\\]\" 2 } } */\n /* { dg-final { scan-assembler-times \"frinta\\td\\[0-9\\]\" 2 } } */\n+/* { dg-final { scan-assembler-times \"frintn\\td\\[0-9\\]\" 2 } } */"}, {"sha": "530cf975db3d52c30bce43d0c40229b2b375cdea", "filename": "gcc/testsuite/gcc.target/aarch64/frint_float.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint_float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ce822ed14e6635ee2ffcba394bba8e934bc6dd/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint_float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Ffrint_float.c?ref=16ce822ed14e6635ee2ffcba394bba8e934bc6dd", "patch": "@@ -12,3 +12,4 @@\n /* { dg-final { scan-assembler-times \"frinti\\ts\\[0-9\\]\" 2 } } */\n /* { dg-final { scan-assembler-times \"frintx\\ts\\[0-9\\]\" 2 } } */\n /* { dg-final { scan-assembler-times \"frinta\\ts\\[0-9\\]\" 2 } } */\n+/* { dg-final { scan-assembler-times \"frintn\\ts\\[0-9\\]\" 2 } } */"}]}