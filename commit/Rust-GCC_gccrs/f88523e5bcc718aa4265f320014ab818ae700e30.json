{"sha": "f88523e5bcc718aa4265f320014ab818ae700e30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4NTIzZTViY2M3MThhYTQyNjVmMzIwMDE0YWI4MThhZTcwMGUzMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-04-26T16:49:10Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-04-26T16:49:10Z"}, "message": "tree.h (crc32_unsigned_n): Declare.\n\n\t* tree.h (crc32_unsigned_n): Declare.\n\t(crc32_unsigned, crc32_unsigned): Make inline.\n\t* tree.c (crc32_unsigned_bits): Replace with ...\n\t(crc32_unsigned_n): ... this.\n\t(crc32_unsigned, crc32_byte): Remove.\n\t(crc32_string): Remove unnecessary braces.\n\nFrom-SVN: r247281", "tree": {"sha": "805faaf806794221b6d0f6b5c373c8e0e074ebf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/805faaf806794221b6d0f6b5c373c8e0e074ebf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f88523e5bcc718aa4265f320014ab818ae700e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88523e5bcc718aa4265f320014ab818ae700e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88523e5bcc718aa4265f320014ab818ae700e30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88523e5bcc718aa4265f320014ab818ae700e30/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffb77fd6c7c5e6cebdbb03750833793749d7402e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffb77fd6c7c5e6cebdbb03750833793749d7402e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffb77fd6c7c5e6cebdbb03750833793749d7402e"}], "stats": {"total": 74, "additions": 43, "deletions": 31}, "files": [{"sha": "c07c14690e5337fdcb862e4edee89c40c1d776b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88523e5bcc718aa4265f320014ab818ae700e30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88523e5bcc718aa4265f320014ab818ae700e30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f88523e5bcc718aa4265f320014ab818ae700e30", "patch": "@@ -1,3 +1,12 @@\n+2017-04-26  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree.h (crc32_unsigned_n): Declare.\n+\t(crc32_unsigned, crc32_unsigned): Make inline.\n+\t* tree.c (crc32_unsigned_bits): Replace with ...\n+\t(crc32_unsigned_n): ... this.\n+\t(crc32_unsigned, crc32_byte): Remove.\n+\t(crc32_string): Remove unnecessary braces.\n+\n 2017-04-25  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-cp.c (estimate_local_effects): Convert sreal to int."}, {"sha": "826af99a9b937532520cb911a030117d97971203", "filename": "gcc/tree.c", "status": "modified", "additions": 23, "deletions": 29, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88523e5bcc718aa4265f320014ab818ae700e30/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88523e5bcc718aa4265f320014ab818ae700e30/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=f88523e5bcc718aa4265f320014ab818ae700e30", "patch": "@@ -9611,38 +9611,34 @@ dump_tree_statistics (void)\n \f\n #define FILE_FUNCTION_FORMAT \"_GLOBAL__%s_%s\"\n \n-/* Generate a crc32 of a byte.  */\n+/* Generate a crc32 of the low BYTES bytes of VALUE.  */\n \n-static unsigned\n-crc32_unsigned_bits (unsigned chksum, unsigned value, unsigned bits)\n+unsigned\n+crc32_unsigned_n (unsigned chksum, unsigned value, unsigned bytes)\n {\n-  unsigned ix;\n-\n-  for (ix = bits; ix--; value <<= 1)\n+  /* This relies on the raw feedback's top 4 bits being zero.  */\n+#define FEEDBACK(X) ((X) * 0x04c11db7)\n+#define SYNDROME(X) (FEEDBACK ((X) & 1) ^ FEEDBACK ((X) & 2) \\\n+\t\t     ^ FEEDBACK ((X) & 4) ^ FEEDBACK ((X) & 8))\n+  static const unsigned syndromes[16] =\n     {\n-      unsigned feedback;\n-      \n-      feedback = (value ^ chksum) & 0x80000000 ? 0x04c11db7 : 0;\n-      chksum <<= 1;\n-      chksum ^= feedback;\n-    }\n-  return chksum;\n-}\n+      SYNDROME(0x0), SYNDROME(0x1), SYNDROME(0x2), SYNDROME(0x3),\n+      SYNDROME(0x4), SYNDROME(0x5), SYNDROME(0x6), SYNDROME(0x7),\n+      SYNDROME(0x8), SYNDROME(0x9), SYNDROME(0xa), SYNDROME(0xb),\n+      SYNDROME(0xc), SYNDROME(0xd), SYNDROME(0xe), SYNDROME(0xf),\n+    };\n+#undef FEEDBACK\n+#undef SYNDROME\n \n-/* Generate a crc32 of a 32-bit unsigned.  */\n-\n-unsigned\n-crc32_unsigned (unsigned chksum, unsigned value)\n-{\n-  return crc32_unsigned_bits (chksum, value, 32);\n-}\n+  value <<= (32 - bytes * 8);\n+  for (unsigned ix = bytes * 2; ix--; value <<= 4)\n+    {\n+      unsigned feedback = syndromes[((value ^ chksum) >> 28) & 0xf];\n \n-/* Generate a crc32 of a byte.  */\n+      chksum = (chksum << 4) ^ feedback;\n+    }\n \n-unsigned\n-crc32_byte (unsigned chksum, char byte)\n-{\n-  return crc32_unsigned_bits (chksum, (unsigned) byte << 24, 8);\n+  return chksum;\n }\n \n /* Generate a crc32 of a string.  */\n@@ -9651,9 +9647,7 @@ unsigned\n crc32_string (unsigned chksum, const char *string)\n {\n   do\n-    {\n-      chksum = crc32_byte (chksum, *string);\n-    }\n+    chksum = crc32_byte (chksum, *string);\n   while (*string++);\n   return chksum;\n }"}, {"sha": "4ff19ce6f82d7e4c53f0af2b99dadf0ed872a6aa", "filename": "gcc/tree.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f88523e5bcc718aa4265f320014ab818ae700e30/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f88523e5bcc718aa4265f320014ab818ae700e30/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=f88523e5bcc718aa4265f320014ab818ae700e30", "patch": "@@ -4688,9 +4688,18 @@ inlined_function_outer_scope_p (const_tree block)\n        function_args_iter_next (&(ITER)))\n \n /* In tree.c */\n+extern unsigned crc32_unsigned_n (unsigned, unsigned, unsigned);\n extern unsigned crc32_string (unsigned, const char *);\n-extern unsigned crc32_byte (unsigned, char);\n-extern unsigned crc32_unsigned (unsigned, unsigned);\n+inline unsigned\n+crc32_unsigned (unsigned chksum, unsigned value)\n+{\n+  return crc32_unsigned_n (chksum, value, 4);\n+}\n+inline unsigned\n+crc32_byte (unsigned chksum, char byte)\n+{\n+  return crc32_unsigned_n (chksum, byte, 1);\n+}\n extern void clean_symbol_name (char *);\n extern tree get_file_function_name (const char *);\n extern tree get_callee_fndecl (const_tree);"}]}