{"sha": "a82892595bc3b2a84b13455711a609138dbcb052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgyODkyNTk1YmMzYjJhODRiMTM0NTU3MTFhNjA5MTM4ZGJjYjA1Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-11-12T16:21:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-11-12T16:21:59Z"}, "message": "cgraph.h (varpool_node_name): Declare.\n\n\t* cgraph.h (varpool_node_name): Declare.\n\t* cgraphunit.c (process_function_and_variable_attributes): Set force_output\n\tflag on used variables.\n\t* ipa.c (function_and_variable_visibility): Dump externally visible and needed\n\tvariables.\n\t* varpool.c (varpool_node_name): Export.\n\t(decide_is_variable_needed): Check COMDAT for externally visible vars;\n\tignore needed flag.\n\nFrom-SVN: r154121", "tree": {"sha": "fc25b09495438c43fe8c72dd5a37344a2338dc1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc25b09495438c43fe8c72dd5a37344a2338dc1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a82892595bc3b2a84b13455711a609138dbcb052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82892595bc3b2a84b13455711a609138dbcb052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a82892595bc3b2a84b13455711a609138dbcb052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a82892595bc3b2a84b13455711a609138dbcb052/comments", "author": null, "committer": null, "parents": [{"sha": "06bd7f563b5358d34b592e9d630ad770c3ec15c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bd7f563b5358d34b592e9d630ad770c3ec15c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bd7f563b5358d34b592e9d630ad770c3ec15c2"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "d616cb7dc772e30d09f05f18c170b11aac4f1f79", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a82892595bc3b2a84b13455711a609138dbcb052", "patch": "@@ -1,3 +1,14 @@\n+2009-11-12 Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.h (varpool_node_name): Declare.\n+\t* cgraphunit.c (process_function_and_variable_attributes): Set force_output\n+\tflag on used variables.\n+\t* ipa.c (function_and_variable_visibility): Dump externally visible and needed\n+\tvariables.\n+\t* varpool.c (varpool_node_name): Export.\n+\t(decide_is_variable_needed): Check COMDAT for externally visible vars;\n+\tignore needed flag.\n+\n 2009-11-12 Uros Bizjak <ubizjak@gmail.com>\n \n \tPR middle-end/41930"}, {"sha": "46fee67e6e33d37566c3fdc76d3124e5cc8e48cd", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=a82892595bc3b2a84b13455711a609138dbcb052", "patch": "@@ -531,6 +531,7 @@ bool varpool_assemble_decl (struct varpool_node *node);\n bool varpool_analyze_pending_decls (void);\n void varpool_remove_unreferenced_decls (void);\n void varpool_empty_needed_queue (void);\n+const char * varpool_node_name (struct varpool_node *node);\n \n /* Walk all reachable static variables.  */\n #define FOR_EACH_STATIC_VARIABLE(node) \\"}, {"sha": "377e4353fdb551fe590453cfc41393bc20d5105d", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=a82892595bc3b2a84b13455711a609138dbcb052", "patch": "@@ -884,6 +884,7 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n       if (lookup_attribute (\"used\", DECL_ATTRIBUTES (decl)))\n \t{\n \t  mark_decl_referenced (decl);\n+\t  vnode->force_output = true;\n \t  if (vnode->finalized)\n \t    varpool_mark_needed_node (vnode);\n \t}"}, {"sha": "bf8faa95fc9282cffecbe0dc410af972476b8c54", "filename": "gcc/ipa.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=a82892595bc3b2a84b13455711a609138dbcb052", "patch": "@@ -292,7 +292,8 @@ function_and_variable_visibility (bool whole_program)\n \n   for (node = cgraph_nodes; node; node = node->next)\n     {\n-      gcc_assert (!DECL_WEAK (node->decl) || TREE_PUBLIC (node->decl) || DECL_EXTERNAL (node->decl));\n+      gcc_assert ((!DECL_WEAK (node->decl) && !DECL_COMDAT (node->decl))\n+      \t          || TREE_PUBLIC (node->decl) || DECL_EXTERNAL (node->decl));\n       if (cgraph_externally_visible_p (node, whole_program))\n         {\n \t  gcc_assert (!node->global.inlined_to);\n@@ -317,7 +318,7 @@ function_and_variable_visibility (bool whole_program)\n     {\n       if (!vnode->finalized)\n         continue;\n-      gcc_assert ((!DECL_WEAK (vnode->decl) || DECL_COMMON (vnode->decl))\n+      gcc_assert ((!DECL_WEAK (vnode->decl) && !DECL_COMMON (vnode->decl) && !DECL_COMDAT (vnode->decl))\n       \t\t  || TREE_PUBLIC (vnode->decl) || DECL_EXTERNAL (node->decl));\n       if (vnode->needed\n \t  && (DECL_COMDAT (vnode->decl) || TREE_PUBLIC (vnode->decl))\n@@ -352,6 +353,11 @@ function_and_variable_visibility (bool whole_program)\n \tif (node->local.externally_visible)\n \t  fprintf (dump_file, \" %s\", cgraph_node_name (node));\n       fprintf (dump_file, \"\\n\\n\");\n+      fprintf (dump_file, \"\\nMarking externally visible variables:\");\n+      for (vnode = varpool_nodes_queue; vnode; vnode = vnode->next_needed)\n+\tif (vnode->externally_visible)\n+\t  fprintf (dump_file, \" %s\", varpool_node_name (vnode));\n+      fprintf (dump_file, \"\\n\\n\");\n     }\n   cgraph_function_flags_ready = true;\n   return 0;\n@@ -410,6 +416,14 @@ whole_program_function_and_variable_visibility (void)\n   for (vnode = varpool_nodes_queue; vnode; vnode = vnode->next_needed)\n     if (vnode->externally_visible && !DECL_COMDAT (vnode->decl))\n       varpool_mark_needed_node (vnode);\n+  if (dump_file)\n+    {\n+      fprintf (dump_file, \"\\nNeeded variables:\");\n+      for (vnode = varpool_nodes_queue; vnode; vnode = vnode->next_needed)\n+\tif (vnode->needed)\n+\t  fprintf (dump_file, \" %s\", varpool_node_name (vnode));\n+      fprintf (dump_file, \"\\n\\n\");\n+    }\n   return 0;\n }\n "}, {"sha": "90a9ace0ff90d4501c6794eb6c14308c206a57eb", "filename": "gcc/varpool.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a82892595bc3b2a84b13455711a609138dbcb052/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=a82892595bc3b2a84b13455711a609138dbcb052", "patch": "@@ -80,7 +80,7 @@ static GTY(()) struct varpool_node *varpool_first_unanalyzed_node;\n static GTY(()) struct varpool_node *varpool_assembled_nodes_queue;\n \n /* Return name of the node used in debug output.  */\n-static const char *\n+const char *\n varpool_node_name (struct varpool_node *node)\n {\n   return lang_hooks.decl_printable_name (node->decl, 2);\n@@ -229,7 +229,8 @@ bool\n decide_is_variable_needed (struct varpool_node *node, tree decl)\n {\n   /* If the user told us it is used, then it must be so.  */\n-  if (node->externally_visible || node->force_output)\n+  if ((node->externally_visible && !DECL_COMDAT (decl))\n+      || node->force_output)\n     return true;\n \n   /* ??? If the assembler name is set by hand, it is possible to assemble\n@@ -239,11 +240,6 @@ decide_is_variable_needed (struct varpool_node *node, tree decl)\n       && TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl)))\n     return true;\n \n-  /* If we decided it was needed before, but at the time we didn't have\n-     the definition available, then it's still needed.  */\n-  if (node->needed)\n-    return true;\n-\n   /* Externally visible variables must be output.  The exception is\n      COMDAT variables that must be output only when they are needed.  */\n   if (TREE_PUBLIC (decl)"}]}