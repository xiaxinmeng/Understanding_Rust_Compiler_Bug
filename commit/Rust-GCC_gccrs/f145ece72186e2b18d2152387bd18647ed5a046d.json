{"sha": "f145ece72186e2b18d2152387bd18647ed5a046d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE0NWVjZTcyMTg2ZTJiMThkMjE1MjM4N2JkMTg2NDdlZDVhMDQ2ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:21:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:21:03Z"}, "message": "[multiple changes]\n\n2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb, sem_util.ads, sem_ch6.adb, sem_ch7.adb, sem_ch8.adb:\n\tMinor reformatting.\n\t* sem_ch12.adb (Analyze_Formal_Package_Declaration): Set the\n\tSPARK_Mode from the context.\n\n2015-10-16  Bob Duff  <duff@adacore.com>\n\n\t* sem_util.adb (Requires_Transient_Scope):\n\tIf Typ is a generic formal incomplete type, look at the actual\n\ttype. Otherwise, we don't notice that the actual type is tagged,\n\thas a variant part, etc, causing a mismatch of calling conventions\n\tbetween caller and callee.\n\n2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.ads: Move the declaration of enumeration\n\tliteral E_Abstract_State above E_Entry.  Update the upper bound\n\tof subtype Overloadable_Kind.\n\n2015-10-16  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_attr.adb: Minor editorial changes.\n\nFrom-SVN: r228878", "tree": {"sha": "80e8036bd8fae94a5b5e2a3ba443e626a26499e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e8036bd8fae94a5b5e2a3ba443e626a26499e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f145ece72186e2b18d2152387bd18647ed5a046d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f145ece72186e2b18d2152387bd18647ed5a046d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f145ece72186e2b18d2152387bd18647ed5a046d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f145ece72186e2b18d2152387bd18647ed5a046d/comments", "author": null, "committer": null, "parents": [{"sha": "6b6254db8a902343e79632c547696915bc1e21de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6254db8a902343e79632c547696915bc1e21de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6254db8a902343e79632c547696915bc1e21de"}], "stats": {"total": 105, "additions": 85, "deletions": 20}, "files": [{"sha": "3c949fccc1f39bda243746b10a53c51b6e85a2bd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -1,3 +1,28 @@\n+2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb, sem_util.ads, sem_ch6.adb, sem_ch7.adb, sem_ch8.adb:\n+\tMinor reformatting.\n+\t* sem_ch12.adb (Analyze_Formal_Package_Declaration): Set the\n+\tSPARK_Mode from the context.\n+\n+2015-10-16  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_util.adb (Requires_Transient_Scope):\n+\tIf Typ is a generic formal incomplete type, look at the actual\n+\ttype. Otherwise, we don't notice that the actual type is tagged,\n+\thas a variant part, etc, causing a mismatch of calling conventions\n+\tbetween caller and callee.\n+\n+2015-10-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.ads: Move the declaration of enumeration\n+\tliteral E_Abstract_State above E_Entry.  Update the upper bound\n+\tof subtype Overloadable_Kind.\n+\n+2015-10-16  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_attr.adb: Minor editorial changes.\n+\n 2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch5.adb, sem_ch3.adb, frontend.adb, exp_ch7.adb, exp_ch7.ads,"}, {"sha": "b11814992fd931b48ee9ed26be8dd10ac1069ff3", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -4819,15 +4819,15 @@ package Einfo is\n       --  A procedure, created by a procedure declaration or a procedure\n       --  body that acts as its own declaration.\n \n-      E_Entry,\n-      --  An entry, created by an entry declaration in a task or protected\n-      --  object.\n-\n       E_Abstract_State,\n       --  A state abstraction. Used to designate entities introduced by aspect\n       --  or pragma Abstract_State. The entity carries the various properties\n       --  of the state.\n \n+      E_Entry,\n+      --  An entry, created by an entry declaration in a task or protected\n+      --  object.\n+\n       --------------------\n       -- Other Entities --\n       --------------------\n@@ -5147,8 +5147,8 @@ package Einfo is\n    --  E_Function\n    --  E_Operator\n    --  E_Procedure\n-   --  E_Entry\n-       E_Abstract_State;\n+   --  E_Abstract_State\n+       E_Entry;\n \n    subtype Private_Kind                is Entity_Kind range\n        E_Record_Type_With_Private .."}, {"sha": "87819271f4e057180711926dcf69729fe9bba4df", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -5783,7 +5783,7 @@ package body Exp_Attr is\n          --  c) If the prefix is a task type, the size is obtained from the\n          --  size variable created for each task type\n \n-         --  d) If no storage_size was specified for the type, there is no\n+         --  d) If no Storage_Size was specified for the type, there is no\n          --  size variable, and the value is a system-specific default.\n \n          else\n@@ -5824,7 +5824,7 @@ package body Exp_Attr is\n \n             elsif Present (Storage_Size_Variable (Ptyp)) then\n \n-               --  Static storage size pragma given for type: retrieve value\n+               --  Static Storage_Size pragma given for type: retrieve value\n                --  from its allocated storage variable.\n \n                Rewrite (N,"}, {"sha": "fb0d487ef382d8f249d75017139c00beaacaff76", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -8898,9 +8898,9 @@ package body Exp_Util is\n       --  Remove_Side_Effects to avoid a never ending loop in the frontend.\n \n       elsif not Tagged_Type_Expansion\n-         and then not Comes_From_Source (N)\n-         and then Nkind (Parent (N)) = N_Object_Renaming_Declaration\n-         and then Is_Class_Wide_Type (Typ)\n+        and then not Comes_From_Source (N)\n+        and then Nkind (Parent (N)) = N_Object_Renaming_Declaration\n+        and then Is_Class_Wide_Type (Typ)\n       then\n          return True;\n       end if;"}, {"sha": "94b2a3927712ea4706fc2eb6f2f5a95bca3798a9", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -2645,6 +2645,14 @@ package body Sem_Ch12 is\n       Set_Inner_Instances (Formal, New_Elmt_List);\n       Push_Scope  (Formal);\n \n+      --  Manually set the SPARK_Mode from the context because the package\n+      --  declaration is never analyzed.\n+\n+      Set_SPARK_Pragma               (Formal, SPARK_Mode_Pragma);\n+      Set_SPARK_Aux_Pragma           (Formal, SPARK_Mode_Pragma);\n+      Set_SPARK_Pragma_Inherited     (Formal);\n+      Set_SPARK_Aux_Pragma_Inherited (Formal);\n+\n       if Is_Child_Unit (Gen_Unit) and then Parent_Installed then\n \n          --  Similarly, we have to make the name of the formal visible in the"}, {"sha": "fd5c01f0f2ff445764a8e18e27efb3f7b1f021c0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -1296,7 +1296,7 @@ package body Sem_Ch6 is\n          Set_Actual_Subtypes (N, Current_Scope);\n \n          Set_SPARK_Pragma (Body_Id, SPARK_Mode_Pragma);\n-         Set_SPARK_Pragma_Inherited (Body_Id, True);\n+         Set_SPARK_Pragma_Inherited (Body_Id);\n \n          --  Analyze any aspect specifications that appear on the generic\n          --  subprogram body.\n@@ -3453,7 +3453,7 @@ package body Sem_Ch6 is\n       --  Set SPARK_Mode from context\n \n       Set_SPARK_Pragma (Body_Id, SPARK_Mode_Pragma);\n-      Set_SPARK_Pragma_Inherited (Body_Id, True);\n+      Set_SPARK_Pragma_Inherited (Body_Id);\n \n       --  If the return type is an anonymous access type whose designated type\n       --  is the limited view of a class-wide type and the non-limited view is"}, {"sha": "70f5dfdfb795320dd3634d401fcc71826e6b5a20", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -734,12 +734,12 @@ package body Sem_Ch7 is\n          --  Set SPARK_Mode from context\n \n          Set_SPARK_Pragma (Body_Id, SPARK_Mode_Pragma);\n-         Set_SPARK_Pragma_Inherited (Body_Id, True);\n+         Set_SPARK_Pragma_Inherited (Body_Id);\n \n          --  Set elaboration code SPARK mode the same for now\n \n          Set_SPARK_Aux_Pragma (Body_Id, SPARK_Pragma (Body_Id));\n-         Set_SPARK_Aux_Pragma_Inherited (Body_Id, True);\n+         Set_SPARK_Aux_Pragma_Inherited (Body_Id);\n       end if;\n \n       --  Inherit the \"ghostness\" of the subprogram spec. Note that this\n@@ -1048,8 +1048,8 @@ package body Sem_Ch7 is\n       if Ekind (Id) = E_Package then\n          Set_SPARK_Pragma               (Id, SPARK_Mode_Pragma);\n          Set_SPARK_Aux_Pragma           (Id, SPARK_Mode_Pragma);\n-         Set_SPARK_Pragma_Inherited     (Id, True);\n-         Set_SPARK_Aux_Pragma_Inherited (Id, True);\n+         Set_SPARK_Pragma_Inherited     (Id);\n+         Set_SPARK_Aux_Pragma_Inherited (Id);\n       end if;\n \n       --  A package declared within a Ghost refion is automatically Ghost"}, {"sha": "db697d664167973ad9f7de67f60a4a9a5f4337ba", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -2776,7 +2776,7 @@ package body Sem_Ch8 is\n       --  Set SPARK mode from current context\n \n       Set_SPARK_Pragma (New_S, SPARK_Mode_Pragma);\n-      Set_SPARK_Pragma_Inherited (New_S, True);\n+      Set_SPARK_Pragma_Inherited (New_S);\n \n       Rename_Spec := Find_Corresponding_Spec (N);\n "}, {"sha": "b0c0591ab081131624ce8e5558ae942aab44b0e5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -23,6 +23,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Treepr; -- ???For debugging code below\n+\n with Aspects;  use Aspects;\n with Atree;    use Atree;\n with Casing;   use Casing;\n@@ -16856,6 +16858,24 @@ package body Sem_Util is\n    --  efficiency. Note: when this temporary code is removed, the documentation\n    --  of dQ in debug.adb should be removed.\n \n+   procedure Results_Differ (Id : Entity_Id);\n+   --  ???Debugging code. Called when the Old_ and New_ results differ. Will be\n+   --  removed when New_Requires_Transient_Scope becomes\n+   --  Requires_Transient_Scope and Old_Requires_Transient_Scope is eliminated.\n+\n+   procedure Results_Differ (Id : Entity_Id) is\n+   begin\n+      if False then -- False to disable; True for debugging\n+         Treepr.Print_Tree_Node (Id);\n+\n+         if Old_Requires_Transient_Scope (Id) =\n+           New_Requires_Transient_Scope (Id)\n+         then\n+            raise Program_Error;\n+         end if;\n+      end if;\n+   end Results_Differ;\n+\n    function Requires_Transient_Scope (Id : Entity_Id) return Boolean is\n       Old_Result : constant Boolean := Old_Requires_Transient_Scope (Id);\n \n@@ -16877,6 +16897,10 @@ package body Sem_Util is\n             null;\n          end if;\n \n+         if New_Result /= Old_Result then\n+            Results_Differ (Id);\n+         end if;\n+\n          return New_Result;\n       end;\n    end Requires_Transient_Scope;\n@@ -17108,7 +17132,7 @@ package body Sem_Util is\n    begin\n       --  This is a private type which is not completed yet. This can only\n       --  happen in a default expression (of a formal parameter or of a\n-      --  record component). Do not expand transient scope in this case\n+      --  record component). Do not expand transient scope in this case.\n \n       if No (Typ) then\n          return False;\n@@ -17121,6 +17145,14 @@ package body Sem_Util is\n       then\n          return False;\n \n+      --  If Typ is a generic formal incomplete type, then we want to look at\n+      --  the actual type.\n+\n+      elsif Ekind (Typ) = E_Record_Subtype\n+        and then Present (Cloned_Subtype (Typ))\n+      then\n+         return New_Requires_Transient_Scope (Cloned_Subtype (Typ));\n+\n       --  Functions returning tagged types may dispatch on result so their\n       --  returned value is allocated on the secondary stack, even in the\n       --  definite case. Is_Tagged_Type includes controlled types and"}, {"sha": "6955094b7a2195e61fd4d8ec828843051249e278", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f145ece72186e2b18d2152387bd18647ed5a046d/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=f145ece72186e2b18d2152387bd18647ed5a046d", "patch": "@@ -818,7 +818,7 @@ package Sem_Util is\n    --  returned. Otherwise the Etype of the node is returned.\n \n    function Get_Body_From_Stub (N : Node_Id) return Node_Id;\n-   --  Return the body node for a stub.\n+   --  Return the body node for a stub\n \n    function Get_Cursor_Type\n      (Aspect : Node_Id;"}]}