{"sha": "930c55993f514c51aca0374650029d99056412a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMwYzU1OTkzZjUxNGM1MWFjYTAzNzQ2NTAwMjlkOTkwNTY0MTJhMw==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2019-07-31T11:51:21Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2019-07-31T11:51:21Z"}, "message": "Remove amdgcn expcnt waits.\n\n2019-07-31  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn-valu.md\n\t(scatter<mode>_insn_1offset<exec_scatter>): Remove s_waitcnt.\n\t(scatter<mode>_insn_1offset_ds<exec_scatter>): Likewise.\n\t(scatter<mode>_insn_2offsets<exec_scatter>): Likewise.\n\t* config/gcn/gcn.c (gcn_md_reorg): Add delayeduse and reads to\n\tstruct ilist. Add nops for delayeduse insns.\n\t* config/gcn/gcn.md (delayeduse): New attribute.\n\t(*movbi): Remove s_waitcnt from stores.\n\t(*mov<mode>_insn): Likewise.\n\t(*movti_insn): Likewise. Add delayeduse attribute.\n\t(sync_compare_and_swap<mode>_insn): Add delayeduse attribute.\n\t(atomic_store<mode>): Remove or adjust s_waitcnt.\n\nFrom-SVN: r273931", "tree": {"sha": "33a7d4810d8aa18f48b7e86b657146d4ed4a0f5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33a7d4810d8aa18f48b7e86b657146d4ed4a0f5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/930c55993f514c51aca0374650029d99056412a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930c55993f514c51aca0374650029d99056412a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930c55993f514c51aca0374650029d99056412a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930c55993f514c51aca0374650029d99056412a3/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f86c2e7196bdf285c0245064be96a0b2816e013a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f86c2e7196bdf285c0245064be96a0b2816e013a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f86c2e7196bdf285c0245064be96a0b2816e013a"}], "stats": {"total": 105, "additions": 67, "deletions": 38}, "files": [{"sha": "5bfe7bc09b19261e365d1ea2079356221758d269", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930c55993f514c51aca0374650029d99056412a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930c55993f514c51aca0374650029d99056412a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=930c55993f514c51aca0374650029d99056412a3", "patch": "@@ -1,3 +1,18 @@\n+2019-07-31  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md\n+\t(scatter<mode>_insn_1offset<exec_scatter>): Remove s_waitcnt.\n+\t(scatter<mode>_insn_1offset_ds<exec_scatter>): Likewise.\n+\t(scatter<mode>_insn_2offsets<exec_scatter>): Likewise.\n+\t* config/gcn/gcn.c (gcn_md_reorg): Add delayeduse and reads to\n+\tstruct ilist. Add nops for delayeduse insns.\n+\t* config/gcn/gcn.md (delayeduse): New attribute.\n+\t(*movbi): Remove s_waitcnt from stores.\n+\t(*mov<mode>_insn): Likewise.\n+\t(*movti_insn): Likewise. Add delayeduse attribute.\n+\t(sync_compare_and_swap<mode>_insn): Add delayeduse attribute.\n+\t(atomic_store<mode>): Remove or adjust s_waitcnt.\n+\n 2019-07-31  Richard Biener  <rguenther@suse.de>\n \n \t* vr-values.h (vr_values::swap_vr_value): New."}, {"sha": "66b822962aeed7be022aaacc27183d1932d74bf3", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930c55993f514c51aca0374650029d99056412a3/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930c55993f514c51aca0374650029d99056412a3/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=930c55993f514c51aca0374650029d99056412a3", "patch": "@@ -863,15 +863,12 @@\n     if (AS_FLAT_P (as))\n       {\n \tif (TARGET_GCN5_PLUS)\n-\t  sprintf (buf, \"flat_store%%s2\\t%%0, %%2 offset:%%1%s\\;\"\n-\t\t   \"s_waitcnt\\texpcnt(0)\", glc);\n+\t  sprintf (buf, \"flat_store%%s2\\t%%0, %%2 offset:%%1%s\", glc);\n \telse\n-\t  sprintf (buf, \"flat_store%%s2\\t%%0, %%2%s\\;s_waitcnt\\texpcnt(0)\",\n-\t\t   glc);\n+\t  sprintf (buf, \"flat_store%%s2\\t%%0, %%2%s\", glc);\n       }\n     else if (AS_GLOBAL_P (as))\n-      sprintf (buf, \"global_store%%s2\\t%%0, %%2, off offset:%%1%s\\;\"\n-\t       \"s_waitcnt\\texpcnt(0)\", glc);\n+      sprintf (buf, \"global_store%%s2\\t%%0, %%2, off offset:%%1%s\", glc);\n     else\n       gcc_unreachable ();\n \n@@ -895,7 +892,7 @@\n   {\n     addr_space_t as = INTVAL (operands[3]);\n     static char buf[200];\n-    sprintf (buf, \"ds_write%%b2\\t%%0, %%2 offset:%%1%s\\;s_waitcnt\\texpcnt(0)\",\n+    sprintf (buf, \"ds_write%%b2\\t%%0, %%2 offset:%%1%s\",\n \t     (AS_GDS_P (as) ? \" gds\" : \"\"));\n     return buf;\n   }\n@@ -929,8 +926,8 @@\n \t/* Work around assembler bug in which a 64-bit register is expected,\n \tbut a 32-bit value would be correct.  */\n \tint reg = REGNO (operands[1]) - FIRST_VGPR_REG;\n-\tsprintf (buf, \"global_store%%s3\\tv[%d:%d], %%3, %%0 offset:%%2%s\\;\"\n-\t\t      \"s_waitcnt\\texpcnt(0)\", reg, reg + 1, glc);\n+\tsprintf (buf, \"global_store%%s3\\tv[%d:%d], %%3, %%0 offset:%%2%s\",\n+\t\t reg, reg + 1, glc);\n       }\n     else\n       gcc_unreachable ();"}, {"sha": "7df22c8286fa2ad4ced3d7b0be7526a14f5170cd", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930c55993f514c51aca0374650029d99056412a3/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930c55993f514c51aca0374650029d99056412a3/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=930c55993f514c51aca0374650029d99056412a3", "patch": "@@ -4516,7 +4516,9 @@ gcn_md_reorg (void)\n   {\n     rtx_insn *insn;\n     attr_unit unit;\n+    attr_delayeduse delayeduse;\n     HARD_REG_SET writes;\n+    HARD_REG_SET reads;\n     int age;\n   } back[max_waits];\n   int oldest = 0;\n@@ -4535,6 +4537,7 @@ gcn_md_reorg (void)\n \n       attr_type itype = get_attr_type (insn);\n       attr_unit iunit = get_attr_unit (insn);\n+      attr_delayeduse idelayeduse = get_attr_delayeduse (insn);\n       HARD_REG_SET ireads, iwrites;\n       CLEAR_HARD_REG_SET (ireads);\n       CLEAR_HARD_REG_SET (iwrites);\n@@ -4610,6 +4613,14 @@ gcn_md_reorg (void)\n \t\t  (regs, reg_class_contents[(int) VGPR_REGS]))\n \t\tnops_rqd = 2 - prev_insn->age;\n \t    }\n+\n+\t  /* Store that requires input registers are not overwritten by\n+\t     following instruction.  */\n+\t  if ((prev_insn->age + nops_rqd) < 1\n+\t      && prev_insn->delayeduse == DELAYEDUSE_YES\n+\t      && ((hard_reg_set_intersect_p\n+\t\t   (prev_insn->reads, iwrites))))\n+\t    nops_rqd = 1 - prev_insn->age;\n \t}\n \n       /* Insert the required number of NOPs.  */\n@@ -4637,7 +4648,9 @@ gcn_md_reorg (void)\n       /* Track the current instruction as a previous instruction.  */\n       back[oldest].insn = insn;\n       back[oldest].unit = iunit;\n+      back[oldest].delayeduse = idelayeduse;\n       COPY_HARD_REG_SET (back[oldest].writes, iwrites);\n+      COPY_HARD_REG_SET (back[oldest].reads, ireads);\n       back[oldest].age = 0;\n       oldest = (oldest + 1) % max_waits;\n "}, {"sha": "bbd2db2951519046e5423a37fb488fd3b351577e", "filename": "gcc/config/gcn/gcn.md", "status": "modified", "additions": 33, "deletions": 29, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/930c55993f514c51aca0374650029d99056412a3/gcc%2Fconfig%2Fgcn%2Fgcn.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/930c55993f514c51aca0374650029d99056412a3/gcc%2Fconfig%2Fgcn%2Fgcn.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.md?ref=930c55993f514c51aca0374650029d99056412a3", "patch": "@@ -285,6 +285,11 @@\n \n (define_attr \"laneselect\" \"yes,no\" (const_string \"no\"))\n \n+; Identify instructions that require a \"Manually Inserted Wait State\" if\n+; their inputs are overwritten by subsequent instructions.\n+\n+(define_attr \"delayeduse\" \"yes,no\" (const_string \"no\"))\n+\n ;; }}}\n ;; {{{ Iterators useful across the wole machine description\n \n@@ -475,15 +480,15 @@\n     case 6:\n       return \"s_load_dword\\t%0, %A1\\;s_waitcnt\\tlgkmcnt(0)\";\n     case 7:\n-      return \"s_store_dword\\t%1, %A0\\;s_waitcnt\\texpcnt(0)\";\n+      return \"s_store_dword\\t%1, %A0\";\n     case 8:\n       return \"flat_load_dword\\t%0, %A1%O1%g1\\;s_waitcnt\\t0\";\n     case 9:\n-      return \"flat_store_dword\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\";\n+      return \"flat_store_dword\\t%A0, %1%O0%g0\";\n     case 10:\n       return \"global_load_dword\\t%0, %A1%O1%g1\\;s_waitcnt\\tvmcnt(0)\";\n     case 11:\n-      return \"global_store_dword\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\";\n+      return \"global_store_dword\\t%A0, %1%O0%g0\";\n     default:\n       gcc_unreachable ();\n     }\n@@ -506,20 +511,20 @@\n   s_movk_i32\\t%0, %1\n   s_mov_b32\\t%0, %1\n   s_buffer_load%s0\\t%0, s[0:3], %1\\;s_waitcnt\\tlgkmcnt(0)\n-  s_buffer_store%s1\\t%1, s[0:3], %0\\;s_waitcnt\\texpcnt(0)\n+  s_buffer_store%s1\\t%1, s[0:3], %0\n   s_load_dword\\t%0, %A1\\;s_waitcnt\\tlgkmcnt(0)\n-  s_store_dword\\t%1, %A0\\;s_waitcnt\\texpcnt(0)\n+  s_store_dword\\t%1, %A0\n   v_mov_b32\\t%0, %1\n   v_readlane_b32\\t%0, %1, 0\n   v_writelane_b32\\t%0, %1, 0\n   flat_load_dword\\t%0, %A1%O1%g1\\;s_waitcnt\\t0\n-  flat_store_dword\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\n+  flat_store_dword\\t%A0, %1%O0%g0\n   v_mov_b32\\t%0, %1\n-  ds_write_b32\\t%A0, %1%O0\\;s_waitcnt\\texpcnt(0)\n+  ds_write_b32\\t%A0, %1%O0\n   ds_read_b32\\t%0, %A1%O1\\;s_waitcnt\\tlgkmcnt(0)\n   s_mov_b32\\t%0, %1\n   global_load_dword\\t%0, %A1%O1%g1\\;s_waitcnt\\tvmcnt(0)\n-  global_store_dword\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\"\n+  global_store_dword\\t%A0, %1%O0%g0\"\n   [(set_attr \"type\" \"sop1,sopk,sop1,smem,smem,smem,smem,vop1,vop3a,vop3a,flat,\n \t\t     flat,vop1,ds,ds,sop1,flat,flat\")\n    (set_attr \"exec\" \"*,*,*,*,*,*,*,*,none,none,*,*,*,*,*,*,*,*\")\n@@ -541,12 +546,12 @@\n   v_readlane_b32\\t%0, %1, 0\n   v_writelane_b32\\t%0, %1, 0\n   flat_load%o1\\t%0, %A1%O1%g1\\;s_waitcnt\\t0\n-  flat_store%s0\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\n+  flat_store%s0\\t%A0, %1%O0%g0\n   v_mov_b32\\t%0, %1\n-  ds_write%b0\\t%A0, %1%O0\\;s_waitcnt\\texpcnt(0)\n+  ds_write%b0\\t%A0, %1%O0\n   ds_read%u1\\t%0, %A1%O1\\;s_waitcnt\\tlgkmcnt(0)\n   global_load%o1\\t%0, %A1%O1%g1\\;s_waitcnt\\tvmcnt(0)\n-  global_store%s0\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\"\n+  global_store%s0\\t%A0, %1%O0%g0\"\n   [(set_attr \"type\"\n \t     \"sop1,sopk,sop1,vop1,vop3a,vop3a,flat,flat,vop1,ds,ds,flat,flat\")\n    (set_attr \"exec\" \"*,*,*,*,none,none,*,*,*,*,*,*,*\")\n@@ -564,18 +569,18 @@\n   s_mov_b64\\t%0, %1\n   s_mov_b64\\t%0, %1\n   #\n-  s_store_dwordx2\\t%1, %A0\\;s_waitcnt\\texpcnt(0)\n+  s_store_dwordx2\\t%1, %A0\n   s_load_dwordx2\\t%0, %A1\\;s_waitcnt\\tlgkmcnt(0)\n   #\n   #\n   #\n   #\n   flat_load_dwordx2\\t%0, %A1%O1%g1\\;s_waitcnt\\t0\n-  flat_store_dwordx2\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\n-  ds_write_b64\\t%A0, %1%O0\\;s_waitcnt\\texpcnt(0)\n+  flat_store_dwordx2\\t%A0, %1%O0%g0\n+  ds_write_b64\\t%A0, %1%O0\n   ds_read_b64\\t%0, %A1%O1\\;s_waitcnt\\tlgkmcnt(0)\n   global_load_dwordx2\\t%0, %A1%O1%g1\\;s_waitcnt\\tvmcnt(0)\n-  global_store_dwordx2\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\"\n+  global_store_dwordx2\\t%A0, %1%O0%g0\"\n   \"(reload_completed && !MEM_P (operands[0]) && !MEM_P (operands[1])\n     && !gcn_sgpr_move_p (operands[0], operands[1]))\n    || (GET_CODE (operands[1]) == CONST_INT && !gcn_constant64_p (operands[1]))\"\n@@ -617,16 +622,16 @@\n   \"\"\n   \"@\n   #\n-  s_store_dwordx4\\t%1, %A0\\;s_waitcnt\\texpcnt(0)\n+  s_store_dwordx4\\t%1, %A0\n   s_load_dwordx4\\t%0, %A1\\;s_waitcnt\\tlgkmcnt(0)\n-  flat_store_dwordx4\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\n+  flat_store_dwordx4\\t%A0, %1%O0%g0\n   flat_load_dwordx4\\t%0, %A1%O1%g1\\;s_waitcnt\\t0\n   #\n   #\n   #\n-  global_store_dwordx4\\t%A0, %1%O0%g0\\;s_waitcnt\\texpcnt(0)\n+  global_store_dwordx4\\t%A0, %1%O0%g0\n   global_load_dwordx4\\t%0, %A1%O1%g1\\;s_waitcnt\\tvmcnt(0)\n-  ds_write_b128\\t%A0, %1%O0\\;s_waitcnt\\texpcnt(0)\n+  ds_write_b128\\t%A0, %1%O0\n   ds_read_b128\\t%0, %A1%O1\\;s_waitcnt\\tlgkmcnt(0)\"\n   \"reload_completed\n    && REG_P (operands[0])\n@@ -647,6 +652,7 @@\n   }\n   [(set_attr \"type\" \"mult,smem,smem,flat,flat,vmult,vmult,vmult,flat,flat,\\\n \t\t     ds,ds\")\n+   (set_attr \"delayeduse\" \"*,*,yes,*,*,*,*,*,*,*,*,*\")\n    (set_attr \"length\" \"*,12,12,12,12,*,*,*,12,12,12,12\")])\n \n ;; }}}\n@@ -1612,7 +1618,8 @@\n    global_atomic_cmpswap<X>\\t%0, %A1, %2%O1 glc\\;s_waitcnt\\tvmcnt(0)\"\n   [(set_attr \"type\" \"smem,flat,flat\")\n    (set_attr \"length\" \"12\")\n-   (set_attr \"gcn_version\" \"gcn5,*,gcn5\")])\n+   (set_attr \"gcn_version\" \"gcn5,*,gcn5\")\n+   (set_attr \"delayeduse\" \"*,yes,*\")])\n \n (define_insn \"sync_compare_and_swap<mode>_lds_insn\"\n   [(set (match_operand:SIDI 0 \"register_operand\"    \"= v\")\n@@ -1715,14 +1722,11 @@\n \tswitch (which_alternative)\n \t  {\n \t  case 0:\n-\t    return \"s_dcache_wb_vol\\;s_store%o1\\t%1, %A0 glc\\;\"\n-\t\t   \"s_waitcnt\\texpcnt(0)\";\n+\t    return \"s_dcache_wb_vol\\;s_store%o1\\t%1, %A0 glc\";\n \t  case 1:\n-\t    return \"buffer_wbinvl1_vol\\;flat_store%o1\\t%A0, %1%O0 glc\\;\"\n-\t\t   \"s_waitcnt\\texpcnt(0)\";\n+\t    return \"buffer_wbinvl1_vol\\;flat_store%o1\\t%A0, %1%O0 glc\";\n \t  case 2:\n-\t    return \"buffer_wbinvl1_vol\\;global_store%o1\\t%A0, %1%O0 glc\\;\"\n-\t           \"s_waitcnt\\texpcnt(0)\";\n+\t    return \"buffer_wbinvl1_vol\\;global_store%o1\\t%A0, %1%O0 glc\";\n \t  }\n \tbreak;\n       case MEMMODEL_ACQ_REL:\n@@ -1732,13 +1736,13 @@\n \t  {\n \t  case 0:\n \t    return \"s_dcache_wb_vol\\;s_store%o1\\t%1, %A0 glc\\;\"\n-\t\t   \"s_waitcnt\\texpcnt(0)\\;s_dcache_inv_vol\";\n+\t\t   \"s_waitcnt\\tlgkmcnt(0)\\;s_dcache_inv_vol\";\n \t  case 1:\n \t    return \"buffer_wbinvl1_vol\\;flat_store%o1\\t%A0, %1%O0 glc\\;\"\n-\t\t   \"s_waitcnt\\texpcnt(0)\\;buffer_wbinvl1_vol\";\n+\t\t   \"s_waitcnt\\t0\\;buffer_wbinvl1_vol\";\n \t  case 2:\n \t    return \"buffer_wbinvl1_vol\\;global_store%o1\\t%A0, %1%O0 glc\\;\"\n-\t\t   \"s_waitcnt\\texpcnt(0)\\;buffer_wbinvl1_vol\";\n+\t\t   \"s_waitcnt\\tvmcnt(0)\\;buffer_wbinvl1_vol\";\n \t  }\n \tbreak;\n       }"}]}