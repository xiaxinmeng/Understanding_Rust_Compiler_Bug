{"sha": "7c81497574411797ac55b9abfab1275bf3241078", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M4MTQ5NzU3NDQxMTc5N2FjNTViOWFiZmFiMTI3NWJmMzI0MTA3OA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-08-08T14:55:52Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-08-08T14:55:52Z"}, "message": "constexpr.c (inline_asm_in_constexpr_error): New.\n\n\t* constexpr.c (inline_asm_in_constexpr_error): New.\n\t(cxx_eval_constant_expression) <case ASM_EXPR>: Call it.\n\t(potential_constant_expression_1) <case ASM_EXPR>: Likewise.\n\n\t* g++.dg/cpp2a/inline-asm3.C: New test.\n\nFrom-SVN: r274210", "tree": {"sha": "e5e389ec951d66518978ff3b9fb8a093647175ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5e389ec951d66518978ff3b9fb8a093647175ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c81497574411797ac55b9abfab1275bf3241078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c81497574411797ac55b9abfab1275bf3241078", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c81497574411797ac55b9abfab1275bf3241078", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c81497574411797ac55b9abfab1275bf3241078/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb0de9b60cdc362915e06dfe8a373205d93b232d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0de9b60cdc362915e06dfe8a373205d93b232d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb0de9b60cdc362915e06dfe8a373205d93b232d"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "3af901c78ea26ff2dee66d0dcd426b1893ba132c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7c81497574411797ac55b9abfab1275bf3241078", "patch": "@@ -1,3 +1,9 @@\n+2019-08-08  Marek Polacek  <polacek@redhat.com>\n+\n+\t* constexpr.c (inline_asm_in_constexpr_error): New.\n+\t(cxx_eval_constant_expression) <case ASM_EXPR>: Call it.\n+\t(potential_constant_expression_1) <case ASM_EXPR>: Likewise.\n+\n 2019-08-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* semantics.c (finish_omp_clauses): For C_ORT_OMP"}, {"sha": "23f2a027e2f57268e6ca91bd7912ae48f9cc3c55", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=7c81497574411797ac55b9abfab1275bf3241078", "patch": "@@ -4411,6 +4411,17 @@ lookup_placeholder (const constexpr_ctx *ctx, bool lval, tree type)\n   return ob;\n }\n \n+/* Complain about an attempt to evaluate inline assembly.  */\n+\n+static void\n+inline_asm_in_constexpr_error (location_t loc)\n+{\n+  auto_diagnostic_group d;\n+  error_at (loc, \"inline assembly is not a constant expression\");\n+  inform (loc, \"only unevaluated inline assembly is allowed in a \"\n+\t  \"%<constexpr%> function in C++2a\");\n+}\n+\n /* Attempt to reduce the expression T to a constant value.\n    On failure, issue diagnostic and return error_mark_node.  */\n /* FIXME unify with c_fully_fold */\n@@ -5291,13 +5302,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \n     case ASM_EXPR:\n       if (!ctx->quiet)\n-\t{\n-\t  error_at (cp_expr_loc_or_input_loc (t),\n-\t\t    \"inline assembly is not a constant expression\");\n-\t  inform (cp_expr_loc_or_input_loc (t),\n-\t\t  \"only unevaluated inline assembly is allowed in a \"\n-\t\t  \"%<constexpr%> function in C++2a\");\n-\t}\n+\tinline_asm_in_constexpr_error (cp_expr_loc_or_input_loc (t));\n       *non_constant_p = true;\n       return t;\n \n@@ -6488,10 +6493,9 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n       return false;\n \n     case ASM_EXPR:\n-      /* In C++2a, unevaluated inline assembly is permitted in constexpr\n-\t functions.  If it's used in earlier standard modes, we pedwarn in\n-\t cp_parser_asm_definition.  */\n-      return true;\n+      if (flags & tf_error)\n+\tinline_asm_in_constexpr_error (loc);\n+      return false;\n \n     case OBJ_TYPE_REF:\n       if (cxx_dialect >= cxx2a)"}, {"sha": "be085243d370ea343cf195ad1fa170a12c6fd3aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c81497574411797ac55b9abfab1275bf3241078", "patch": "@@ -1,3 +1,7 @@\n+2019-08-08  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp2a/inline-asm3.C: New test.\n+\n 2019-08-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91359"}, {"sha": "b636e3b2d8759f415de3d84b63151c21cdec8bc8", "filename": "gcc/testsuite/g++.dg/cpp2a/inline-asm3.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Finline-asm3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c81497574411797ac55b9abfab1275bf3241078/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Finline-asm3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Finline-asm3.C?ref=7c81497574411797ac55b9abfab1275bf3241078", "patch": "@@ -0,0 +1,12 @@\n+// P1668R1: Permit unevaluated inline asm in constexpr functions\n+// { dg-do compile { target c++2a } }\n+// { dg-additional-options \"-Wno-pedantic\" }\n+\n+constexpr int\n+foo ()\n+{\n+ constexpr int i = ({ asm(\"\"); 42; }); // { dg-error \"inline assembly is not a constant expression\" }\n+ return i;\n+}\n+\n+constexpr int i = foo ();"}]}