{"sha": "38afef28a3c5af53e3c4e582f8a071f2dca91618", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhZmVmMjhhM2M1YWY1M2UzYzRlNTgyZjhhMDcxZjJkY2E5MTYxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T09:45:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T09:45:27Z"}, "message": "[multiple changes]\n\n2010-09-10  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-util.adb (Executable_Of): Fix CE when the project does not\n\tcontain a Builder package.\n\n2010-09-10  Vincent Celier  <celier@adacore.com>\n\n\t* prj-ext.adb (Initialize_Project_Path): Add <prefix>/lib/gpr/<target>\n\tto the project path, if Prefix and Target_Name are defined.\n\t* prj-tree.ads (Project_Node_Tree_Data): New component Target_Name\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* checks.adb (Ensure_Valid): If the expression is a boolean expression\n\tor short-circuit operation, do no emit a validity check: only the\n\telementary operands of the expression need checking.\n\n2010-09-10  Ben Brosgol  <brosgol@adacore.com>\n\n\t* gnat_rm.texi: Document Short_Descriptors.\n\n2010-09-10  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-taprop-linux.adb, s-taskin.ads (Task_Alternate_Stack): Default\n\tinitialize to Null_Address.\n\t(Enter_Task): Do not set up an alternate stack for foreign threads.\n\nFrom-SVN: r164149", "tree": {"sha": "20e2d444c0696d09f6e8ef992b4bc959dce87426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20e2d444c0696d09f6e8ef992b4bc959dce87426"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38afef28a3c5af53e3c4e582f8a071f2dca91618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38afef28a3c5af53e3c4e582f8a071f2dca91618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38afef28a3c5af53e3c4e582f8a071f2dca91618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38afef28a3c5af53e3c4e582f8a071f2dca91618/comments", "author": null, "committer": null, "parents": [{"sha": "eafedef3836563374ab1c4509e2a386c8156af7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafedef3836563374ab1c4509e2a386c8156af7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafedef3836563374ab1c4509e2a386c8156af7f"}], "stats": {"total": 100, "additions": 85, "deletions": 15}, "files": [{"sha": "66db4373016760dba409724fc3c6836f8e590b10", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -1,3 +1,30 @@\n+2010-09-10  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-util.adb (Executable_Of): Fix CE when the project does not\n+\tcontain a Builder package.\n+\n+2010-09-10  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-ext.adb (Initialize_Project_Path): Add <prefix>/lib/gpr/<target>\n+\tto the project path, if Prefix and Target_Name are defined.\n+\t* prj-tree.ads (Project_Node_Tree_Data): New component Target_Name\n+\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Ensure_Valid): If the expression is a boolean expression\n+\tor short-circuit operation, do no emit a validity check: only the\n+\telementary operands of the expression need checking.\n+\n+2010-09-10  Ben Brosgol  <brosgol@adacore.com>\n+\n+\t* gnat_rm.texi: Document Short_Descriptors.\n+\n+2010-09-10  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-taprop-linux.adb, s-taskin.ads (Task_Alternate_Stack): Default\n+\tinitialize to Null_Address.\n+\t(Enter_Task): Do not set up an alternate stack for foreign threads.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* opt.adb (Short_Descriptors): New flag"}, {"sha": "9b10f12625606c182702c6048ded71266ab4b6be", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -4108,6 +4108,17 @@ package body Checks is\n          end if;\n       end if;\n \n+      --  If this is a boolean expression, only its elementary consituents\n+      --  need checking: if they are valid, a boolean or short-circuit\n+      --  operation with them will be valid as well.\n+\n+      if Base_Type (Typ) = Standard_Boolean\n+        and then\n+          (Nkind (Expr) in N_Op or else Nkind (Expr) in N_Short_Circuit)\n+      then\n+         return;\n+      end if;\n+\n       --  If we fall through, a validity check is required\n \n       Insert_Valid_Check (Expr);"}, {"sha": "15c7f4f1636defbc171a3971126a766a3b43b960", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -186,6 +186,7 @@ Implementation Defined Pragmas\n * Pragma Restriction_Warnings::\n * Pragma Shared::\n * Pragma Short_Circuit_And_Or::\n+* Pragma Short_Descriptors::\n * Pragma Source_File_Name::\n * Pragma Source_File_Name_Project::\n * Pragma Source_Reference::\n@@ -803,6 +804,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Restriction_Warnings::\n * Pragma Shared::\n * Pragma Short_Circuit_And_Or::\n+* Pragma Short_Descriptors::\n * Pragma Source_File_Name::\n * Pragma Source_File_Name_Project::\n * Pragma Source_Reference::\n@@ -2208,8 +2210,9 @@ you can construct your own extension unit following the above\n definition.  Note that such a package is a child of @code{System}\n and thus is considered part of the implementation.  To compile\n it you will have to use the appropriate switch for compiling\n-system units.  @xref{Top, @value{EDITION} User's Guide, About This\n-Guide,, gnat_ugn, @value{EDITION} User's Guide}, for details.\n+system units.\n+@xref{Top, @value{EDITION} User's Guide, About This Guide, gnat_ugn, @value{EDITION} User's Guide},\n+for details.\n \n @node Pragma Extensions_Allowed\n @unnumberedsec Pragma Extensions_Allowed\n@@ -3793,7 +3796,7 @@ type Day is (Mon, Tue, Wed, Thu, Fri, Sat, Sun);\n @end smallexample\n \n @noindent\n-then the ordering imposed by the language is reasonable, and \n+then the ordering imposed by the language is reasonable, and\n clients can depend on it, writing for example:\n \n @smallexample @c ada\n@@ -4430,7 +4433,23 @@ short-circuited logical operators. If this configuration pragma occurs locally\n within the file being compiled, it applies only to the file being compiled.\n There is no requirement that all units in a partition use this option.\n \n-semantics are identical to pragma Atomic.\n+@node Pragma Short_Descriptors\n+@unnumberedsec Pragma Short_Descriptors\n+@findex Short_Descriptors\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Short_Descriptors\n+@end smallexample\n+\n+@noindent\n+In VMS versions of the compiler, this configuration pragma causes all\n+occurrences of the mechanism types Descriptor[_xxx] to be treated as\n+Short_Descriptor[_xxx]. This is helpful in porting legacy applications from a\n+32-bit environment to a 64-bit environment. This pragma is ignored for non-VMS\n+versions.\n+\n @node Pragma Source_File_Name\n @unnumberedsec Pragma Source_File_Name\n @findex Source_File_Name"}, {"sha": "77d3379a302020ec8c06f483d1cca1ac0c059a3b", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -250,13 +250,21 @@ package body Prj.Ext is\n                Prefix := new String'(Executable_Prefix_Path);\n \n                if Prefix.all /= \"\" then\n+                  if Tree.Target_Name /= null and then\n+                    Tree.Target_Name.all /= \"\"\n+                  then\n+                     Add_Str_To_Name_Buffer\n+                       (Path_Separator & Prefix.all &\n+                        \"lib\" & Directory_Separator & \"gpr\" &\n+                        Directory_Separator & Tree.Target_Name.all);\n+                  end if;\n+\n                   Add_Str_To_Name_Buffer\n                     (Path_Separator & Prefix.all &\n                      \"share\" & Directory_Separator & \"gpr\");\n                   Add_Str_To_Name_Buffer\n                     (Path_Separator & Prefix.all &\n-                     Directory_Separator & \"lib\" &\n-                     Directory_Separator & \"gnat\");\n+                     \"lib\" & Directory_Separator & \"gnat\");\n                end if;\n \n             else"}, {"sha": "e4c9583e73427f103549f1651db31d7ec62cab08", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1470,7 +1470,11 @@ package Prj.Tree is\n       --  project-tree specific so that one can load the same tree twice but\n       --  have two views of it, for instance.\n \n-      Project_Path : String_Access;\n+      Target_Name : String_Access := null;\n+      --  The target name, if any, specified with the gprbuild or gprclean\n+      --  switch --target=.\n+\n+      Project_Path : String_Access := null;\n       --  The project path, manipulated through subprograms in prj-ext.ads.\n       --  As a special case, if the first character is '#:\" or this variable is\n       --  unset, this means that the PATH has not been fully initialized yet"}, {"sha": "7700b8ec19fdb8a120baaafd04c86200989b2342", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -187,7 +187,7 @@ package body Prj.Util is\n             Executable_Extension_On_Target := Saved_EEOT;\n             return Result;\n \n-         else\n+         elsif Builder_Package /= No_Package then\n             --  We still want to take into account cases where the suffix is\n             --  specified in the project itself, as opposed to the config file.\n             --  Unfortunately, when the project was processed, they are both\n@@ -208,11 +208,10 @@ package body Prj.Util is\n                Result :=  Executable_Name (File);\n                Executable_Extension_On_Target := Saved_EEOT;\n                return Result;\n-\n-            else\n-               return File;\n             end if;\n          end if;\n+\n+         return File;\n       end Add_Suffix;\n \n    --  Start of processing for Executable_Of"}, {"sha": "38b4cf6f53b3cbed7e4183a73e256aba4e6819ed", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2010, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -717,7 +717,9 @@ package body System.Task_Primitives.Operations is\n \n       Specific.Set (Self_ID);\n \n-      if Use_Alternate_Stack then\n+      if Use_Alternate_Stack\n+        and then Self_ID.Common.Task_Alternate_Stack /= Null_Address\n+      then\n          declare\n             Stack  : aliased stack_t;\n             Result : Interfaces.C.int;"}, {"sha": "3ec38bbf6c5567ce33ba5a3d056a26e6fa18afae", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38afef28a3c5af53e3c4e582f8a071f2dca91618/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=38afef28a3c5af53e3c4e582f8a071f2dca91618", "patch": "@@ -523,7 +523,7 @@ package System.Tasking is\n       --  Activator writes it, once, before Self starts executing. Thereafter,\n       --  Self only reads it.\n \n-      Task_Alternate_Stack : System.Address;\n+      Task_Alternate_Stack : System.Address := System.Null_Address;\n       --  The address of the alternate signal stack for this task, if any\n       --\n       --  Protection: Only accessed by Self"}]}