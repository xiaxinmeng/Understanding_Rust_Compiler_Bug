{"sha": "b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2OGE4ZGZjYzhlMjJkZDkzMmQ0NjAxNTlkODEyOTFhOWZlMWFlNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-26T21:29:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-26T21:29:30Z"}, "message": "re PR tree-optimization/59014 (wrong code at -Os and above on x86_64-linux-gnu)\n\n\tPR tree-optimization/59014\n\t* tree-vrp.c (register_edge_assert_for_1): Don't look\n\tthrough conversions from non-integral types or through\n\tnarrowing conversions.\n\n\t* gcc.c-torture/execute/pr59014.c: New test.\n\nFrom-SVN: r205417", "tree": {"sha": "407359a1473c6b19e60a324574dc162ae044dae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/407359a1473c6b19e60a324574dc162ae044dae0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70ec86ee185d7527b392739bf72a0f37410ed0b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ec86ee185d7527b392739bf72a0f37410ed0b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ec86ee185d7527b392739bf72a0f37410ed0b4"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "b50232b79ea77c7584c8e8c5a7e5a82070f8fbc4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "patch": "@@ -1,5 +1,10 @@\n 2013-11-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/59014\n+\t* tree-vrp.c (register_edge_assert_for_1): Don't look\n+\tthrough conversions from non-integral types or through\n+\tnarrowing conversions.\n+\n \tPR target/59229\n \t* config/i386/i386.c (device_alg): Fix up formatting.\n \t(ix86_expand_set_or_movmem): Handle max_size < epilogue_size_needed"}, {"sha": "a2a81170166ec5137d7d8e2f5af2465dbcf7f1ff", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "patch": "@@ -1,5 +1,8 @@\n 2013-11-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/59014\n+\t* gcc.c-torture/execute/pr59014.c: New test.\n+\n \tPR target/59229\n \t* gcc.c-torture/execute/pr59229.c: New test.\n "}, {"sha": "10bf81a462f235735d9dd52d6d54cc086b6de06e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr59014.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59014.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59014.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr59014.c?ref=b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "patch": "@@ -0,0 +1,25 @@\n+/* PR tree-optimization/59014 */\n+\n+int a = 2, b, c, d;\n+\n+int\n+foo ()\n+{\n+  for (;; c++)\n+    if ((b > 0) | (a & 1))\n+      ;\n+    else\n+      {\n+\td = a;\n+\treturn 0;\n+      }\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  if (d != 2)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "1ec9c163911bdbedfb3d45b6d5d30a55a8f6df73", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b168a8dfcc8e22dd932d460159d81291a9fe1ae6/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=b168a8dfcc8e22dd932d460159d81291a9fe1ae6", "patch": "@@ -5438,9 +5438,13 @@ register_edge_assert_for_1 (tree op, enum tree_code code,\n     }\n   else if (CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (op_def)))\n     {\n-      /* Recurse through the type conversion.  */\n-      retval |= register_edge_assert_for_1 (gimple_assign_rhs1 (op_def),\n-\t\t\t\t\t    code, e, bsi);\n+      /* Recurse through the type conversion, unless it is a narrowing\n+\t conversion or conversion from non-integral type.  */\n+      tree rhs = gimple_assign_rhs1 (op_def);\n+      if (INTEGRAL_TYPE_P (TREE_TYPE (rhs))\n+\t  && (TYPE_PRECISION (TREE_TYPE (rhs))\n+\t      <= TYPE_PRECISION (TREE_TYPE (op))))\n+\tretval |= register_edge_assert_for_1 (rhs, code, e, bsi);\n     }\n \n   return retval;"}]}