{"sha": "6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNmN2VhZTY4OTk0OTFiYTg3NTlmOGRhNmE4NmM4ZTI3MDczZDZmOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T13:16:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T13:16:24Z"}, "message": "[multiple changes]\n\n2014-08-04  Doug Rupp  <rupp@adacore.com>\n\n\t* g-calend.adb (timeval_to_duration, duration_to_timeval): Change sec\n\tformal to long_long.\n\t* g-calend.ads (timeval): Bump up size to accomodate sec type.\n\t* s-taprop-linux.adb (timeval_to_duration): Change sec formal to\n\tlong_long\n\t* s-osprim-posix.adb (timeval): Bump up size to accomodate\n\tnew sec type.\n\t(timeval_to_duration): Change sec formal to Long_Long_Integer\n\t* s-osinte-darwin.adb (timeval): Bump up\n\tsize to accomodate new sec type.\n\t(timeval_to_duration): Change sec formal to long_long\n\t* s-osinte-android.adb: Likewise.\n\t* cal.c (__gnat_timeal_to_duration, __gnat_duration_to_timeval): Change\n\tsec formal from long to long long.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb (Resolve_Qualified_Expression): Make sure\n\tDo_Range_Check flag gets set.\n\nFrom-SVN: r213587", "tree": {"sha": "73c1d8724a11d5b770c663c6bdccda7de328fbed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73c1d8724a11d5b770c663c6bdccda7de328fbed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/comments", "author": null, "committer": null, "parents": [{"sha": "bc3c2eca1aa80b667f9e80773919755669d03e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3c2eca1aa80b667f9e80773919755669d03e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3c2eca1aa80b667f9e80773919755669d03e82"}], "stats": {"total": 108, "additions": 79, "deletions": 29}, "files": [{"sha": "57abdb5a46baf8123ec81c19bcb03dc1f6adfc42", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -1,3 +1,25 @@\n+2014-08-04  Doug Rupp  <rupp@adacore.com>\n+\n+\t* g-calend.adb (timeval_to_duration, duration_to_timeval): Change sec\n+\tformal to long_long.\n+\t* g-calend.ads (timeval): Bump up size to accomodate sec type.\n+\t* s-taprop-linux.adb (timeval_to_duration): Change sec formal to\n+\tlong_long\n+\t* s-osprim-posix.adb (timeval): Bump up size to accomodate\n+\tnew sec type.\n+\t(timeval_to_duration): Change sec formal to Long_Long_Integer\n+\t* s-osinte-darwin.adb (timeval): Bump up\n+\tsize to accomodate new sec type.\n+\t(timeval_to_duration): Change sec formal to long_long\n+\t* s-osinte-android.adb: Likewise.\n+\t* cal.c (__gnat_timeal_to_duration, __gnat_duration_to_timeval): Change\n+\tsec formal from long to long long.\n+\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Qualified_Expression): Make sure\n+\tDo_Range_Check flag gets set.\n+\n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads, einfo.adb (Is_Standard_String_Type): New function."}, {"sha": "14921dcf4402132408f8823d37a6718b115f5ab3", "filename": "gcc/ada/cal.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fcal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fcal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcal.c?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -59,16 +59,16 @@\n #endif\n \n void\n-__gnat_timeval_to_duration (struct timeval *t, long *sec, long *usec)\n+__gnat_timeval_to_duration (struct timeval *t, long long *sec, long *usec)\n {\n-  *sec  = (long) t->tv_sec;\n+  *sec  = (long long) t->tv_sec;\n   *usec = (long) t->tv_usec;\n }\n \n void\n-__gnat_duration_to_timeval (long sec, long usec, struct timeval *t)\n+__gnat_duration_to_timeval (long long sec, long usec, struct timeval *t)\n {\n-  /* here we are doing implicit conversion from a long to the struct timeval\n+  /* here we are doing implicit conversion to the struct timeval\n      fields types. */\n \n   t->tv_sec = sec;"}, {"sha": "8f309de72513ed7057fdf26db2b2bdaafdd81b5b", "filename": "gcc/ada/g-calend.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fg-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fg-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.adb?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2012, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body GNAT.Calendar is\n+with Interfaces.C.Extensions;\n \n+package body GNAT.Calendar is\n    use Ada.Calendar;\n    use Interfaces;\n \n@@ -341,12 +342,12 @@ package body GNAT.Calendar is\n \n       procedure timeval_to_duration\n         (T    : not null access timeval;\n-         sec  : not null access C.long;\n+         sec  : not null access C.Extensions.long_long;\n          usec : not null access C.long);\n       pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n       Micro : constant := 10**6;\n-      sec   : aliased C.long;\n+      sec   : aliased C.Extensions.long_long;\n       usec  : aliased C.long;\n \n    begin\n@@ -361,22 +362,22 @@ package body GNAT.Calendar is\n    function To_Timeval (D : Duration) return timeval is\n \n       procedure duration_to_timeval\n-        (Sec  : C.long;\n+        (Sec  : C.Extensions.long_long;\n          Usec : C.long;\n          T : not null access timeval);\n       pragma Import (C, duration_to_timeval, \"__gnat_duration_to_timeval\");\n \n       Micro  : constant := 10**6;\n       Result : aliased timeval;\n-      sec    : C.long;\n+      sec    : C.Extensions.long_long;\n       usec   : C.long;\n \n    begin\n       if D = 0.0 then\n          sec  := 0;\n          usec := 0;\n       else\n-         sec  := C.long (D - 0.5);\n+         sec  := C.Extensions.long_long (D - 0.5);\n          usec := C.long ((D - Duration (sec)) * Micro - 0.5);\n       end if;\n "}, {"sha": "4234061e724663023b3488d4b9ac76128c2573f0", "filename": "gcc/ada/g-calend.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fg-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fg-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-calend.ads?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -162,7 +162,7 @@ private\n    --  This is a dummy declaration that should be the largest possible timeval\n    --  structure of all supported targets.\n \n-   type timeval is array (1 .. 2) of Interfaces.C.long;\n+   type timeval is array (1 .. 3) of Interfaces.C.long;\n \n    function Julian_Day\n      (Year  : Ada.Calendar.Year_Number;"}, {"sha": "df5e19125ec4a4677ae2ad0fb1a3aa9d38f450f6", "filename": "gcc/ada/s-osinte-android.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-osinte-android.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-osinte-android.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-android.adb?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---                     Copyright (C) 1995-2012, AdaCore                     --\n+--                     Copyright (C) 1995-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,9 @@ pragma Polling (Off);\n --  This package encapsulates all direct interfaces to OS services\n --  that are needed by children of System.\n \n-with Interfaces.C; use Interfaces.C;\n+with Interfaces.C;            use Interfaces.C;\n+with Interfaces.C.Extentions; use Interfaces.C.Extentions;\n+\n package body System.OS_Interface is\n \n    -----------------\n@@ -88,16 +90,19 @@ package body System.OS_Interface is\n \n       use Interfaces;\n \n-      type timeval is array (1 .. 2) of C.long;\n+      type timeval is array (1 .. 3) of C.long;\n+      --  The timeval array is sized to contain long_long sec and long usec.\n+      --  If long_long'Size = long'Size then it will be overly large but that\n+      --  won't effect the implementation since it's not accessed directly.\n \n       procedure timeval_to_duration\n         (T    : not null access timeval;\n-         sec  : not null access C.long;\n+         sec  : not null access C.Extensions.long_long;\n          usec : not null access C.long);\n       pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n       Micro  : constant := 10**6;\n-      sec    : aliased C.long;\n+      sec    : aliased C.Extensions.long_long;\n       usec   : aliased C.long;\n       TV     : aliased timeval;\n       Result : int;"}, {"sha": "e5add8a89bb28d06ec8e039a82ecf5261c0bb29a", "filename": "gcc/ada/s-osinte-darwin.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-osinte-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-osinte-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-darwin.adb?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1999-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,9 +35,11 @@ pragma Polling (Off);\n --  Turn off polling, we do not want ATC polling to take place during\n --  tasking operations. It causes infinite loops and other problems.\n \n-package body System.OS_Interface is\n+with Interfaces.C.Extensions;\n \n+package body System.OS_Interface is\n    use Interfaces.C;\n+   use Interfaces.C.Extensions;\n \n    -----------------\n    -- To_Duration --\n@@ -97,16 +99,19 @@ package body System.OS_Interface is\n \n       use Interfaces;\n \n-      type timeval is array (1 .. 2) of C.long;\n+      type timeval is array (1 .. 3) of C.long;\n+      --  The timeval array is sized to contain long_long sec and long usec.\n+      --  If long_long'Size = long'Size then it will be overly large but that\n+      --  won't effect the implementation since it's not accessed directly.\n \n       procedure timeval_to_duration\n         (T    : not null access timeval;\n-         sec  : not null access C.long;\n+         sec  : not null access C.Extensions.long_long;\n          usec : not null access C.long);\n       pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n       Micro  : constant := 10**6;\n-      sec    : aliased C.long;\n+      sec    : aliased C.Extensions.long_long;\n       usec   : aliased C.long;\n       TV     : aliased timeval;\n       Result : int;"}, {"sha": "04aece75e05d148a5dcbbad8a07016fc3ea4c6a5", "filename": "gcc/ada/s-osprim-posix.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-osprim-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-osprim-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-posix.adb?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,16 +54,21 @@ package body System.OS_Primitives is\n    -----------\n \n    function Clock return Duration is\n-      type timeval is array (1 .. 2) of Long_Integer;\n+\n+      type timeval is array (1 .. 3) of Long_Integer;\n+      --  The timeval array is sized to contain Long_Long_Integer sec and\n+      --  Long_Integer usec. If Long_Long_Integer'Size = Long_Integer'Size then\n+      --  it will be overly large but that will not effect the implementation\n+      --  since it is not accessed directly.\n \n       procedure timeval_to_duration\n         (T    : not null access timeval;\n-         sec  : not null access Long_Integer;\n+         sec  : not null access Long_Long_Integer;\n          usec : not null access Long_Integer);\n       pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n       Micro  : constant := 10**6;\n-      sec    : aliased Long_Integer;\n+      sec    : aliased Long_Long_Integer;\n       usec   : aliased Long_Integer;\n       TV     : aliased timeval;\n       Result : Integer;"}, {"sha": "ba5c2122ed9274b2bd811a05f168cc537b96f663", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -39,6 +39,7 @@ pragma Polling (Off);\n --  operations. It causes infinite loops and other problems.\n \n with Interfaces.C;\n+with Interfaces.C.Extensions;\n \n with System.Task_Info;\n with System.Tasking.Debug;\n@@ -61,6 +62,7 @@ package body System.Task_Primitives.Operations is\n    use System.Tasking.Debug;\n    use System.Tasking;\n    use Interfaces.C;\n+   use Interfaces.C.Extensions;\n    use System.OS_Interface;\n    use System.Parameters;\n    use System.OS_Primitives;\n@@ -629,12 +631,12 @@ package body System.Task_Primitives.Operations is\n \n       procedure timeval_to_duration\n         (T    : not null access timeval;\n-         sec  : not null access C.long;\n+         sec  : not null access C.Extensions.long_long;\n          usec : not null access C.long);\n       pragma Import (C, timeval_to_duration, \"__gnat_timeval_to_duration\");\n \n       Micro  : constant := 10**6;\n-      sec    : aliased C.long;\n+      sec    : aliased C.Extensions.long_long;\n       usec   : aliased C.long;\n       TV     : aliased timeval;\n       Result : int;"}, {"sha": "1594f23a036085eccd6afc840d984929efe114e6", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf7eae6899491ba8759f8da6a86c8e27073d6f9/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6cf7eae6899491ba8759f8da6a86c8e27073d6f9", "patch": "@@ -9058,6 +9058,16 @@ package body Sem_Res is\n \n       Analyze_Dimension (N);\n       Eval_Qualified_Expression (N);\n+\n+      --  If we still have a qualified expression after the static evaluation,\n+      --  then apply a scalar range check if needed. The reason that we do this\n+      --  after the Eval call is that otherwise, the application of the range\n+      --  check may convert an illegal static expression and result in warning\n+      --  rather than giving an error (e.g Integer'(Integer'Last + 1)).\n+\n+      if Nkind (N) = N_Qualified_Expression and then Is_Scalar_Type (Typ) then\n+         Apply_Scalar_Range_Check (Expr, Typ);\n+      end if;\n    end Resolve_Qualified_Expression;\n \n    ------------------------------"}]}