{"sha": "813d6db9c42ae27854356c87f0fa16b0f9079118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzZDZkYjljNDJhZTI3ODU0MzU2Yzg3ZjBmYTE2YjBmOTA3OTExOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-01-23T15:43:59Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-01-23T15:43:59Z"}, "message": "Remove predictors that are unrealiable.\n\n2018-01-23  Martin Liska  <mliska@suse.cz>\n\n\t* predict.def (PRED_INDIR_CALL): Set probability to PROB_EVEN in\n\torder to ignore the predictor.\n\t(PRED_POLYMORPHIC_CALL): Likewise.\n\t(PRED_RECURSIVE_CALL): Likewise.\n\nFrom-SVN: r256988", "tree": {"sha": "bf904d9fa75ede80506f4ff8781fe497534ac014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf904d9fa75ede80506f4ff8781fe497534ac014"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/813d6db9c42ae27854356c87f0fa16b0f9079118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813d6db9c42ae27854356c87f0fa16b0f9079118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/813d6db9c42ae27854356c87f0fa16b0f9079118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/813d6db9c42ae27854356c87f0fa16b0f9079118/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66ce8ff7603b3b717fff93d706b1cf3548ba4671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66ce8ff7603b3b717fff93d706b1cf3548ba4671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66ce8ff7603b3b717fff93d706b1cf3548ba4671"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "3238e70f63ee95393930b2e02c72c5b5135b5559", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813d6db9c42ae27854356c87f0fa16b0f9079118/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813d6db9c42ae27854356c87f0fa16b0f9079118/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=813d6db9c42ae27854356c87f0fa16b0f9079118", "patch": "@@ -1,3 +1,10 @@\n+2018-01-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* predict.def (PRED_INDIR_CALL): Set probability to PROB_EVEN in\n+\torder to ignore the predictor.\n+\t(PRED_POLYMORPHIC_CALL): Likewise.\n+\t(PRED_RECURSIVE_CALL): Likewise.\n+\n 2018-01-23  Martin Liska  <mliska@suse.cz>\n \n \t* tree-profile.c (tree_profiling): Print function header to"}, {"sha": "2d932e9fd11645d3ebeee9b2cdeb2742a10f0e7f", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813d6db9c42ae27854356c87f0fa16b0f9079118/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813d6db9c42ae27854356c87f0fa16b0f9079118/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=813d6db9c42ae27854356c87f0fa16b0f9079118", "patch": "@@ -4216,7 +4216,7 @@ test_prediction_value_range ()\n \tcontinue;\n \n       unsigned p = 100 * predictors[i].probability / REG_BR_PROB_BASE;\n-      ASSERT_TRUE (p > 50 && p <= 100);\n+      ASSERT_TRUE (p >= 50 && p <= 100);\n     }\n }\n "}, {"sha": "4ed97ed165c4d386aee2fd8c287de36ea4eed1f7", "filename": "gcc/predict.def", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/813d6db9c42ae27854356c87f0fa16b0f9079118/gcc%2Fpredict.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/813d6db9c42ae27854356c87f0fa16b0f9079118/gcc%2Fpredict.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.def?ref=813d6db9c42ae27854356c87f0fa16b0f9079118", "patch": "@@ -118,15 +118,11 @@ DEF_PREDICTOR (PRED_TREE_FPOPCODE, \"fp_opcode (on trees)\", HITRATE (90), 0)\n /* Branch guarding call is probably taken.  */\n DEF_PREDICTOR (PRED_CALL, \"call\", HITRATE (67), 0)\n \n-/* PRED_CALL is not very reliable predictor and it turns out to be even\n-   less reliable for indirect calls and polymorphic calls.  For spec2k6\n-   the predictio nis slightly in the direction of taking the call.  */\n-DEF_PREDICTOR (PRED_INDIR_CALL, \"indirect call\", HITRATE (86), 0)\n-DEF_PREDICTOR (PRED_POLYMORPHIC_CALL, \"polymorphic call\", HITRATE (59), 0)\n-\n-/* Recursive calls are usually not taken or the function will recurse\n-   indefinitely.  */\n-DEF_PREDICTOR (PRED_RECURSIVE_CALL, \"recursive call\", HITRATE (75), 0)\n+/* Call predictors are for now ignored, lets leave the predictor\n+   to measure its benefit.  */\n+DEF_PREDICTOR (PRED_INDIR_CALL, \"indirect call\", PROB_EVEN, 0)\n+DEF_PREDICTOR (PRED_POLYMORPHIC_CALL, \"polymorphic call\", PROB_EVEN, 0)\n+DEF_PREDICTOR (PRED_RECURSIVE_CALL, \"recursive call\", PROB_EVEN, 0)\n \n /* Branch causing function to terminate is probably not taken.  */\n DEF_PREDICTOR (PRED_TREE_EARLY_RETURN, \"early return (on trees)\", HITRATE (66),"}]}