{"sha": "a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRlYmUxMDQ1NDBlN2I2ZDNjNjM3ZDc5M2RiY2Q1MTcxYjRiODIwOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-01T20:51:11Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-01T20:51:11Z"}, "message": "* config.sub, config.guess: Import from upstream.\n\nFrom-SVN: r209988", "tree": {"sha": "ca2b122a7d438ddb25694196cfc6f2e9128b017e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca2b122a7d438ddb25694196cfc6f2e9128b017e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e14b9135f169d290f59cad9d5fd521d2022955c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14b9135f169d290f59cad9d5fd521d2022955c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14b9135f169d290f59cad9d5fd521d2022955c7"}], "stats": {"total": 215, "additions": 41, "deletions": 174}, "files": [{"sha": "0a765d980aebd4c9338767cfa5474cecee9c6804", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "patch": "@@ -1,3 +1,7 @@\n+2014-05-01  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config.sub, config.guess: Import from upstream.\n+\n 2014-04-29  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* MAINTAINERS (Write After Approval): Put myself in correct order."}, {"sha": "1f5c50c0d1529d50b94dc3533ca72a47f0fa5849", "filename": "config.guess", "status": "modified", "additions": 27, "deletions": 165, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2013 Free Software Foundation, Inc.\n+#   Copyright 1992-2014 Free Software Foundation, Inc.\n \n-timestamp='2013-06-10'\n+timestamp='2014-03-23'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2013 Free Software Foundation, Inc.\n+Copyright 1992-2014 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -149,7 +149,7 @@ Linux|GNU|GNU/*)\n \tLIBC=gnu\n \t#endif\n \tEOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC'`\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n \t;;\n esac\n \n@@ -826,7 +826,7 @@ EOF\n     *:MINGW*:*)\n \techo ${UNAME_MACHINE}-pc-mingw32\n \texit ;;\n-    i*:MSYS*:*)\n+    *:MSYS*:*)\n \techo ${UNAME_MACHINE}-pc-msys\n \texit ;;\n     i*:windows32*:*)\n@@ -969,10 +969,10 @@ EOF\n \teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n \ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n \t;;\n-    or1k:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+    openrisc*:Linux:*:*)\n+\techo or1k-unknown-linux-${LIBC}\n \texit ;;\n-    or32:Linux:*:*)\n+    or32:Linux:*:* | or1k*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n     padre:Linux:*:*)\n@@ -1260,16 +1260,26 @@ EOF\n \tif test \"$UNAME_PROCESSOR\" = unknown ; then\n \t    UNAME_PROCESSOR=powerpc\n \tfi\n-\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n-\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\tgrep IS_64BIT_ARCH >/dev/null\n-\t    then\n-\t\tcase $UNAME_PROCESSOR in\n-\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n-\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n-\t\tesac\n+\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n+\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t    grep IS_64BIT_ARCH >/dev/null\n+\t\tthen\n+\t\t    case $UNAME_PROCESSOR in\n+\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\t    esac\n+\t\tfi\n \t    fi\n+\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n+\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n+\t    # that puts up a graphical alert prompting to install\n+\t    # developer tools.  Any system running Mac OS X 10.7 or\n+\t    # later (Darwin 11 and later) is required to have a 64-bit\n+\t    # processor. This is not true of the ARM version of Darwin\n+\t    # that Apple uses in portable devices.\n+\t    UNAME_PROCESSOR=x86_64\n \tfi\n \techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n \texit ;;\n@@ -1361,154 +1371,6 @@ EOF\n \texit ;;\n esac\n \n-eval $set_cc_for_build\n-cat >$dummy.c <<EOF\n-#ifdef _SEQUENT_\n-# include <sys/types.h>\n-# include <sys/utsname.h>\n-#endif\n-main ()\n-{\n-#if defined (sony)\n-#if defined (MIPSEB)\n-  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n-     I don't know....  */\n-  printf (\"mips-sony-bsd\\n\"); exit (0);\n-#else\n-#include <sys/param.h>\n-  printf (\"m68k-sony-newsos%s\\n\",\n-#ifdef NEWSOS4\n-\t\"4\"\n-#else\n-\t\"\"\n-#endif\n-\t); exit (0);\n-#endif\n-#endif\n-\n-#if defined (__arm) && defined (__acorn) && defined (__unix)\n-  printf (\"arm-acorn-riscix\\n\"); exit (0);\n-#endif\n-\n-#if defined (hp300) && !defined (hpux)\n-  printf (\"m68k-hp-bsd\\n\"); exit (0);\n-#endif\n-\n-#if defined (NeXT)\n-#if !defined (__ARCHITECTURE__)\n-#define __ARCHITECTURE__ \"m68k\"\n-#endif\n-  int version;\n-  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n-  if (version < 4)\n-    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n-  else\n-    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n-  exit (0);\n-#endif\n-\n-#if defined (MULTIMAX) || defined (n16)\n-#if defined (UMAXV)\n-  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n-#else\n-#if defined (CMU)\n-  printf (\"ns32k-encore-mach\\n\"); exit (0);\n-#else\n-  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n-#endif\n-#endif\n-#endif\n-\n-#if defined (__386BSD__)\n-  printf (\"i386-pc-bsd\\n\"); exit (0);\n-#endif\n-\n-#if defined (sequent)\n-#if defined (i386)\n-  printf (\"i386-sequent-dynix\\n\"); exit (0);\n-#endif\n-#if defined (ns32000)\n-  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n-#endif\n-#endif\n-\n-#if defined (_SEQUENT_)\n-    struct utsname un;\n-\n-    uname(&un);\n-\n-    if (strncmp(un.version, \"V2\", 2) == 0) {\n-\tprintf (\"i386-sequent-ptx2\\n\"); exit (0);\n-    }\n-    if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n-\tprintf (\"i386-sequent-ptx1\\n\"); exit (0);\n-    }\n-    printf (\"i386-sequent-ptx\\n\"); exit (0);\n-\n-#endif\n-\n-#if defined (vax)\n-# if !defined (ultrix)\n-#  include <sys/param.h>\n-#  if defined (BSD)\n-#   if BSD == 43\n-      printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n-#   else\n-#    if BSD == 199006\n-      printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n-#    else\n-      printf (\"vax-dec-bsd\\n\"); exit (0);\n-#    endif\n-#   endif\n-#  else\n-    printf (\"vax-dec-bsd\\n\"); exit (0);\n-#  endif\n-# else\n-    printf (\"vax-dec-ultrix\\n\"); exit (0);\n-# endif\n-#endif\n-\n-#if defined (alliant) && defined (i860)\n-  printf (\"i860-alliant-bsd\\n\"); exit (0);\n-#endif\n-\n-  exit (1);\n-}\n-EOF\n-\n-$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n-\t{ echo \"$SYSTEM_NAME\"; exit; }\n-\n-# Apollos put the system type in the environment.\n-\n-test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }\n-\n-# Convex versions that predate uname can use getsysinfo(1)\n-\n-if [ -x /usr/convex/getsysinfo ]\n-then\n-    case `getsysinfo -f cpu_type` in\n-    c1*)\n-\techo c1-convex-bsd\n-\texit ;;\n-    c2*)\n-\tif getsysinfo -f scalar_acc\n-\tthen echo c32-convex-bsd\n-\telse echo c2-convex-bsd\n-\tfi\n-\texit ;;\n-    c34*)\n-\techo c34-convex-bsd\n-\texit ;;\n-    c38*)\n-\techo c38-convex-bsd\n-\texit ;;\n-    c4*)\n-\techo c4-convex-bsd\n-\texit ;;\n-    esac\n-fi\n-\n cat >&2 <<EOF\n $0: unable to guess system type\n "}, {"sha": "d654d03cdcd2226a5d7584890717e674a8122f4f", "filename": "config.sub", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ebe104540e7b6d3c637d793dbcd5171b4b8209/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=a4ebe104540e7b6d3c637d793dbcd5171b4b8209", "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2013 Free Software Foundation, Inc.\n+#   Copyright 1992-2014 Free Software Foundation, Inc.\n \n-timestamp='2013-10-01'\n+timestamp='2014-05-01'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -68,7 +68,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2013 Free Software Foundation, Inc.\n+Copyright 1992-2014 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -283,8 +283,10 @@ case $basic_machine in\n \t| mips64vr5900 | mips64vr5900el \\\n \t| mipsisa32 | mipsisa32el \\\n \t| mipsisa32r2 | mipsisa32r2el \\\n+\t| mipsisa32r6 | mipsisa32r6el \\\n \t| mipsisa64 | mipsisa64el \\\n \t| mipsisa64r2 | mipsisa64r2el \\\n+\t| mipsisa64r6 | mipsisa64r6el \\\n \t| mipsisa64sb1 | mipsisa64sb1el \\\n \t| mipsisa64sr71k | mipsisa64sr71kel \\\n \t| mipsr5900 | mipsr5900el \\\n@@ -296,8 +298,7 @@ case $basic_machine in\n \t| nds32 | nds32le | nds32be \\\n \t| nios | nios2 | nios2eb | nios2el \\\n \t| ns16k | ns32k \\\n-\t| open8 \\\n-\t| or1k | or32 \\\n+\t| open8 | or1k | or1knd | or32 \\\n \t| pdp10 | pdp11 | pj | pjl \\\n \t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n \t| pyramid \\\n@@ -402,8 +403,10 @@ case $basic_machine in\n \t| mips64vr5900-* | mips64vr5900el-* \\\n \t| mipsisa32-* | mipsisa32el-* \\\n \t| mipsisa32r2-* | mipsisa32r2el-* \\\n+\t| mipsisa32r6-* | mipsisa32r6el-* \\\n \t| mipsisa64-* | mipsisa64el-* \\\n \t| mipsisa64r2-* | mipsisa64r2el-* \\\n+\t| mipsisa64r6-* | mipsisa64r6el-* \\\n \t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n \t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n \t| mipsr5900-* | mipsr5900el-* \\\n@@ -415,6 +418,7 @@ case $basic_machine in\n \t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n \t| none-* | np1-* | ns16k-* | ns32k-* \\\n \t| open8-* \\\n+\t| or1k*-* \\\n \t| orion-* \\\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n@@ -1376,7 +1380,7 @@ case $os in\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n \t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es*)\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)\n@@ -1594,9 +1598,6 @@ case $basic_machine in\n \tmips*-*)\n \t\tos=-elf\n \t\t;;\n-\tor1k-*)\n-\t\tos=-elf\n-\t\t;;\n \tor32-*)\n \t\tos=-coff\n \t\t;;"}]}