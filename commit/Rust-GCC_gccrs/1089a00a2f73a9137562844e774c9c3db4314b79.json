{"sha": "1089a00a2f73a9137562844e774c9c3db4314b79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA4OWEwMGEyZjczYTkxMzc1NjI4NDRlNzc0YzljM2RiNDMxNGI3OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:53:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:53:23Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r177116", "tree": {"sha": "adb1b8d08bc07de799a32b3b7bf01c920869b337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adb1b8d08bc07de799a32b3b7bf01c920869b337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1089a00a2f73a9137562844e774c9c3db4314b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1089a00a2f73a9137562844e774c9c3db4314b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1089a00a2f73a9137562844e774c9c3db4314b79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1089a00a2f73a9137562844e774c9c3db4314b79/comments", "author": null, "committer": null, "parents": [{"sha": "5cc9353d576ed4c79203f5c47cf74bf03418b1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc9353d576ed4c79203f5c47cf74bf03418b1a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc9353d576ed4c79203f5c47cf74bf03418b1a4"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "e2b891d60f8f89ef45a37f3ff3d0c9368e68aecf", "filename": "gcc/ada/s-osinte-linux.ads", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1089a00a2f73a9137562844e774c9c3db4314b79/gcc%2Fada%2Fs-osinte-linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1089a00a2f73a9137562844e774c9c3db4314b79/gcc%2Fada%2Fs-osinte-linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-linux.ads?ref=1089a00a2f73a9137562844e774c9c3db4314b79", "patch": "@@ -120,37 +120,35 @@ package System.OS_Interface is\n    SIGLTHRDBG : constant := System.Linux.SIGLTHRDBG;\n \n    SIGADAABORT : constant := SIGABRT;\n-   --  Change this if you want to use another signal for task abort.\n-   --  SIGTERM might be a good one.\n+   --  Change this to use another signal for task abort. SIGTERM might be a\n+   --  good one.\n \n    type Signal_Set is array (Natural range <>) of Signal;\n \n-   Unmasked    : constant Signal_Set := (\n+   Unmasked : constant Signal_Set := (\n       SIGTRAP,\n       --  To enable debugging on multithreaded applications, mark SIGTRAP to\n       --  be kept unmasked.\n \n       SIGBUS,\n \n       SIGTTIN, SIGTTOU, SIGTSTP,\n-      --  Keep these three signals unmasked so that background processes\n-      --  and IO behaves as normal \"C\" applications\n+      --  Keep these three signals unmasked so that background processes and IO\n+      --  behaves as normal \"C\" applications\n \n       SIGPROF,\n       --  To avoid confusing the profiler\n \n       SIGKILL, SIGSTOP,\n-      --  These two signals actually cannot be masked;\n-      --  POSIX simply won't allow it.\n+      --  These two signals actually can't be masked (POSIX won't allow it)\n \n       SIGLTHRRES, SIGLTHRCAN, SIGLTHRDBG);\n-      --  These three signals are used by GNU/LinuxThreads starting from\n-      --  glibc 2.1 (future 2.2).\n+      --  These three signals are used by GNU/LinuxThreads starting from glibc\n+      --  2.1 (future 2.2).\n \n-   Reserved    : constant Signal_Set :=\n-   --  I am not sure why the following two signals are reserved.\n-   --  I guess they are not supported by this version of GNU/Linux.\n-     (SIGVTALRM, SIGUNUSED);\n+   Reserved : constant Signal_Set := (SIGVTALRM, SIGUNUSED);\n+   --  Not clear why these two signals are reserved. Perhaps they are not\n+   --  supported by this version of GNU/Linux ???\n \n    type sigset_t is private;\n \n@@ -268,10 +266,10 @@ package System.OS_Interface is\n      Ada.Unchecked_Conversion (System.Address, Thread_Body);\n \n    type pthread_t is new unsigned_long;\n-   subtype Thread_Id        is pthread_t;\n+   subtype Thread_Id is pthread_t;\n \n-   function To_pthread_t is new Ada.Unchecked_Conversion\n-     (unsigned_long, pthread_t);\n+   function To_pthread_t is\n+     new Ada.Unchecked_Conversion (unsigned_long, pthread_t);\n \n    type pthread_mutex_t     is limited private;\n    type pthread_cond_t      is limited private;\n@@ -555,7 +553,7 @@ private\n    type pthread_mutex_t is new System.Linux.pthread_mutex_t;\n \n    type unsigned_long_long_t is mod 2 ** 64;\n-   --  Interfaces.C.Extensions isn't preelaborated so cannot be with-ed\n+   --  Interfaces.C.Extensions isn't preelaborated so cannot be with'ed\n \n    type pthread_cond_t is array (0 .. 47) of unsigned_char;\n    pragma Convention (C, pthread_cond_t);"}]}