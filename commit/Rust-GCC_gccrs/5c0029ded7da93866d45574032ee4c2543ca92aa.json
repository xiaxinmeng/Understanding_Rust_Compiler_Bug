{"sha": "5c0029ded7da93866d45574032ee4c2543ca92aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwMDI5ZGVkN2RhOTM4NjZkNDU1NzQwMzJlZTRjMjU0M2NhOTJhYQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2013-09-16T21:15:46Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2013-09-16T21:15:46Z"}, "message": "rl78.c (rl78_asm_file_start): Specify alternate vregs location for RL78/G10.\n\n* config/rl78/rl78.c (rl78_asm_file_start): Specify alternate\nvregs location for RL78/G10.\n(rl78_expand_prologue): Avoid SEL on G10.\n(rl78_expand_epilogue): Likewise.\n(rl78_peep_movhi_p): Can't move a constant to memory in HImode.\n* config/rl78/rl78.h (TARGET_CPU_CPP_BUILTINS): Define\n__RL78_G10__ when appropriate.\n(ASM_SPEC): Pass -mg10 along to the assembler.\n* config/rl78/rl78.md (sel_rb): Disable for G10.\n* config/rl78/rl78.opt: Add -mg10 option.\n* config/rl78/t-rl78: Add -mg10 multilib.\n\n* config/rl78/lib2mul.c: Enable for RL78/G10.\n* config/rl78/lib2div.c: Likewise.\n* config/rl78/lshrsi3.S: Use vregs.h.\n* config/rl78/cmpsi2.S: Likewise.\n* config/rl78/trampoline.S: Likewise.\n* config/rl78/mulsi2.S: Likewise.  Disable for RL78/G10.\n\nFrom-SVN: r202637", "tree": {"sha": "ca39e481d4043f5d69add06ef190a5ec3d62d059", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca39e481d4043f5d69add06ef190a5ec3d62d059"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c0029ded7da93866d45574032ee4c2543ca92aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0029ded7da93866d45574032ee4c2543ca92aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c0029ded7da93866d45574032ee4c2543ca92aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0029ded7da93866d45574032ee4c2543ca92aa/comments", "author": null, "committer": null, "parents": [{"sha": "ea0f3e87b9dd370eaa2ff7cb0a842b0107f24963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0f3e87b9dd370eaa2ff7cb0a842b0107f24963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea0f3e87b9dd370eaa2ff7cb0a842b0107f24963"}], "stats": {"total": 178, "additions": 111, "deletions": 67}, "files": [{"sha": "cc1935997dc3fe784b3798d2067c8b8d7d493cde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -1,3 +1,17 @@\n+2013-09-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rl78/rl78.c (rl78_asm_file_start): Specify alternate\n+\tvregs location for RL78/G10.\n+\t(rl78_expand_prologue): Avoid SEL on G10.\n+\t(rl78_expand_epilogue): Likewise.\n+\t(rl78_peep_movhi_p): Can't move a constant to memory in HImode.\n+\t* config/rl78/rl78.h (TARGET_CPU_CPP_BUILTINS): Define\n+\t__RL78_G10__ when appropriate.\n+\t(ASM_SPEC): Pass -mg10 along to the assembler.\n+\t* config/rl78/rl78.md (sel_rb): Disable for G10.\n+\t* config/rl78/rl78.opt: Add -mg10 option.\n+\t* config/rl78/t-rl78: Add -mg10 multilib.\n+\n 2013-09-16  Xinliang David Li  <davidxl@google.com>\n \n \t* tree-if-conv.c (main_tree_if_conversion): Check new flag."}, {"sha": "d99cecfbff1e52f96931bbfb6ecc40ee5e652239", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 50, "deletions": 15, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -259,10 +259,20 @@ rl78_asm_file_start (void)\n {\n   int i;\n \n-  for (i = 0; i < 8; i++)\n+  if (TARGET_G10)\n     {\n-      fprintf (asm_out_file, \"r%d\\t=\\t0x%x\\n\", 8 + i, 0xffef0 + i);\n-      fprintf (asm_out_file, \"r%d\\t=\\t0x%x\\n\", 16 + i, 0xffee8 + i);\n+      /* The memory used is 0xffec8 to 0xffedf; real registers are in\n+\t 0xffee0 to 0xffee7.  */\n+      for (i = 8; i < 32; i++)\n+\tfprintf (asm_out_file, \"r%d\\t=\\t0x%x\\n\", i, 0xffec0 + i);\n+    }\n+  else\n+    {\n+      for (i = 0; i < 8; i++)\n+\t{\n+\t  fprintf (asm_out_file, \"r%d\\t=\\t0x%x\\n\", 8 + i, 0xffef0 + i);\n+\t  fprintf (asm_out_file, \"r%d\\t=\\t0x%x\\n\", 16 + i, 0xffee8 + i);\n+\t}\n     }\n \n   opt_pass *rl78_devirt_pass = make_pass_rl78_devirt (g);\n@@ -1018,19 +1028,26 @@ rl78_expand_prologue (void)\n   if (flag_stack_usage_info)\n     current_function_static_stack_size = cfun->machine->framesize;\n \n-  if (is_interrupt_func (cfun->decl))\n+  if (is_interrupt_func (cfun->decl) && !TARGET_G10)\n     emit_insn (gen_sel_rb (GEN_INT (0)));\n \n   for (i = 0; i < 16; i++)\n     if (cfun->machine->need_to_push [i])\n       {\n-\tint need_bank = i/4;\n-\tif (need_bank != rb)\n+\tif (TARGET_G10)\n \t  {\n-\t    emit_insn (gen_sel_rb (GEN_INT (need_bank)));\n-\t    rb = need_bank;\n+\t    emit_move_insn (gen_rtx_REG (HImode, 0), gen_rtx_REG (HImode, i*2));\n+\t    F (emit_insn (gen_push (gen_rtx_REG (HImode, 0))));\n \t  }\n-\tF (emit_insn (gen_push (gen_rtx_REG (HImode, i*2))));\n+\telse {\n+\t  int need_bank = i/4;\n+\t  if (need_bank != rb)\n+\t    {\n+\t      emit_insn (gen_sel_rb (GEN_INT (need_bank)));\n+\t      rb = need_bank;\n+\t    }\n+\t  F (emit_insn (gen_push (gen_rtx_REG (HImode, i*2))));\n+\t}\n       }\n   if (rb != 0)\n     emit_insn (gen_sel_rb (GEN_INT (0)));\n@@ -1085,14 +1102,22 @@ rl78_expand_epilogue (void)\n   for (i = 15; i >= 0; i--)\n     if (cfun->machine->need_to_push [i])\n       {\n-\tint need_bank = i / 4;\n-\n-\tif (need_bank != rb)\n+\tif (TARGET_G10)\n \t  {\n-\t    emit_insn (gen_sel_rb (GEN_INT (need_bank)));\n-\t    rb = need_bank;\n+\t    emit_insn (gen_pop (gen_rtx_REG (HImode, 0)));\n+\t    emit_move_insn (gen_rtx_REG (HImode, i*2), gen_rtx_REG (HImode, 0));\n+\t  }\n+\telse\n+\t  {\n+\t    int need_bank = i / 4;\n+\n+\t    if (need_bank != rb)\n+\t      {\n+\t\temit_insn (gen_sel_rb (GEN_INT (need_bank)));\n+\t\trb = need_bank;\n+\t      }\n+\t    emit_insn (gen_pop (gen_rtx_REG (HImode, i * 2)));\n \t  }\n-\temit_insn (gen_pop (gen_rtx_REG (HImode, i * 2)));\n       }\n \n   if (rb != 0)\n@@ -1630,6 +1655,16 @@ rl78_peep_movhi_p (rtx *operands)\n   fprintf (stderr, \"\\033[0m\");\n #endif\n \n+  /* You can move a constant to memory as QImode, but not HImode.  */\n+  if (GET_CODE (operands[0]) == MEM\n+      && GET_CODE (operands[1]) != REG)\n+    {\n+#if DEBUG_PEEP\n+      fprintf (stderr, \"no peep: move constant to memory\\n\");\n+#endif\n+      return false;\n+    }\n+\n   if (rtx_equal_p (operands[0], operands[3]))\n     {\n #if DEBUG_PEEP"}, {"sha": "8cf634eeb9f9078e42296314f52e213fd00a24ab", "filename": "gcc/config/rl78/rl78.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Frl78.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Frl78.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.h?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -32,6 +32,8 @@\n \tbuiltin_define (\"__RL78_MUL_RL78__\"); \t\\\n       if (RL78_MUL_G13)\t\t\t\t\\\n \tbuiltin_define (\"__RL78_MUL_G13__\"); \t\\\n+      if (TARGET_G10)\t\t\t\t\\\n+\tbuiltin_define (\"__RL78_G10__\"); \t\\\n     }                                           \\\n   while (0)\n \n@@ -44,6 +46,7 @@\n #undef  ASM_SPEC\n #define ASM_SPEC \"\\\n %{mrelax:-relax} \\\n+%{mg10} \\\n \"\n \n #undef  LINK_SPEC"}, {"sha": "9b573c10363a7589f2d57622a81986da1f2f0e0e", "filename": "gcc/config/rl78/rl78.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Frl78.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Frl78.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.opt?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -45,3 +45,7 @@ Enum(rl78_mul_types) String(g13) Value(MUL_G13)\n mrelax\n Target\n Enable assembler and linker relaxation.\n+\n+mg10\n+Target Mask(G10)\n+Target the RL78/G10 series"}, {"sha": "30705b3e5e519242db144541381d5cd13c30ca44", "filename": "gcc/config/rl78/t-rl78", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Ft-rl78", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/gcc%2Fconfig%2Frl78%2Ft-rl78", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Ft-rl78?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -20,3 +20,8 @@\n \n rl78-c.o: $(srcdir)/config/rl78/rl78-c.c $(RTL_H) $(TREE_H) $(CONFIG_H) $(TM_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n+\n+# Enable multilibs:\n+\n+MULTILIB_OPTIONS    = mg10\n+MULTILIB_DIRNAMES   = g10"}, {"sha": "728360ca8cc3f3b9eda61ead3a08da3619cd03c0", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -1,3 +1,12 @@\n+2013-09-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rl78/lib2mul.c: Enable for RL78/G10.\n+\t* config/rl78/lib2div.c: Likewise.\n+\t* config/rl78/lshrsi3.S: Use vregs.h.\n+\t* config/rl78/cmpsi2.S: Likewise.\n+\t* config/rl78/trampoline.S: Likewise.\n+\t* config/rl78/mulsi2.S: Likewise.  Disable for RL78/G10.\n+\n 2013-09-14  DJ Delorie  <dj@redhat.com>\n \t    Nick Clifton  <nickc@redhat.com>\n "}, {"sha": "7fdc76a03f65cf9e0ca5877eff754a423b4fb7ff", "filename": "libgcc/config/rl78/cmpsi2.S", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Fcmpsi2.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Fcmpsi2.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Fcmpsi2.S?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -21,8 +21,7 @@\n ; <http://www.gnu.org/licenses/>.\n \n \n-; clobberable\n-r8\t=\t0xffef0\n+#include \"vregs.h\"\n \n \t.text\n "}, {"sha": "b37f55a94ac9b2b8e36f25af59e42d3dfd2af750", "filename": "libgcc/config/rl78/lib2div.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Flib2div.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Flib2div.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Flib2div.c?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -34,7 +34,7 @@ typedef int           word_type     __attribute__ ((mode (__word__)));\n #define C3B(a,b,c) a##b##c\n #define C3(a,b,c) C3B(a,b,c)\n \n-#if 0\n+#ifdef __RL78_G10__\n \n #define UINT_TYPE\tuint32_type\n #define SINT_TYPE\tsint32_type"}, {"sha": "fee50817722789ef5c5fb305da064dbdda5bad58", "filename": "libgcc/config/rl78/lib2mul.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Flib2mul.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Flib2mul.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Flib2mul.c?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -30,12 +30,25 @@ typedef unsigned int  uint08_type   __attribute__ ((mode (QI)));\n #define C3B(a,b,c) a##b##c\n #define C3(a,b,c) C3B(a,b,c)\n \n+#ifdef __RL78_G10__\n+\n+#define UINT_TYPE\tuint32_type\n+#define BITS_MINUS_1\t31\n+#define NAME_MODE\tsi\n+\n+#include \"rl78-mul.h\"\n+\n+#undef UINT_TYPE\n+#undef BITS_MINUS_1\n+#undef NAME_MODE\n \n #define UINT_TYPE\tuint16_type\n #define BITS_MINUS_1\t15\n #define NAME_MODE\thi\n \n-/*#include \"rl78-mul.h\"*/\n+#include \"rl78-mul.h\"\n+\n+#endif\n \n #undef UINT_TYPE\n #undef BITS_MINUS_1"}, {"sha": "8bd997897aa06b650b5ba02e829a5de59471a801", "filename": "libgcc/config/rl78/lshrsi3.S", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Flshrsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Flshrsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Flshrsi3.S?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -20,22 +20,7 @@\n ; see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n ; <http://www.gnu.org/licenses/>.\n \n-r8\t=\t0xffef0\n-r16\t=\t0xffee8\n-r9\t=\t0xffef1\n-r17\t=\t0xffee9\n-r10\t=\t0xffef2\n-r18\t=\t0xffeea\n-r11\t=\t0xffef3\n-r19\t=\t0xffeeb\n-r12\t=\t0xffef4\n-r20\t=\t0xffeec\n-r13\t=\t0xffef5\n-r21\t=\t0xffeed\n-r14\t=\t0xffef6\n-r22\t=\t0xffeee\n-r15\t=\t0xffef7\n-r23\t=\t0xffeef\n+#include \"vregs.h\"\n \t\n \t.text\n \t.global\t___lshrsi3"}, {"sha": "1ce45ba3402c78517ff89db8e21a5fe547d65ade", "filename": "libgcc/config/rl78/mulsi3.S", "status": "modified", "additions": 8, "deletions": 29, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Fmulsi3.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Fmulsi3.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Fmulsi3.S?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -22,35 +22,12 @@\n \n ;; 32x32=32 multiply\n \n-; real\n-; GAS defines r0..r7 as aliases for real registers; we want the saddr\n-; forms here.\n-r_0\t=\t0xffef8\n-r_1\t=\t0xffef9\n-r_2\t=\t0xffefa\n-r_3\t=\t0xffefb\n-r_4\t=\t0xffefc\n-r_5\t=\t0xffefd\n-r_6\t=\t0xffefe\n-r_7\t=\t0xffeff\n-; clobberable\n-r8\t=\t0xffef0\n-r9\t=\t0xffef1\n-r10\t=\t0xffef2\n-r11\t=\t0xffef3\n-r12\t=\t0xffef4\n-r13\t=\t0xffef5\n-r14\t=\t0xffef6\n-r15\t=\t0xffef7\n-; preserved\n-r16\t=\t0xffee8\n-r17\t=\t0xffee9\n-r18\t=\t0xffeea\n-r19\t=\t0xffeeb\n-r20\t=\t0xffeec\n-r21\t=\t0xffeed\n-r22\t=\t0xffeee\n-r23\t=\t0xffeef\n+#include \"vregs.h\"\n+ \n+; the G10 only has one register bank, so cannot use these optimized\n+; versions.  Use the C version instead.\n+\n+#ifndef __RL78_G10__\n \n \n ;----------------------------------------------------------------------\n@@ -221,3 +198,5 @@ ___mulhi3:\n \n .Lmul_hi_done:\n \tret\n+\n+#endif"}, {"sha": "59d429eb589ffcfac7f13610aa2a86c06e00637b", "filename": "libgcc/config/rl78/trampoline.S", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Ftrampoline.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0029ded7da93866d45574032ee4c2543ca92aa/libgcc%2Fconfig%2Frl78%2Ftrampoline.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frl78%2Ftrampoline.S?ref=5c0029ded7da93866d45574032ee4c2543ca92aa", "patch": "@@ -32,9 +32,7 @@\n \n */\n \n-r8\t=\t0xffef0\n-r10\t=\t0xffef2\n-r14\t=\t0xffef6\n+#include \"vregs.h\"\n \n \t.data\n \t.p2align\t1"}]}