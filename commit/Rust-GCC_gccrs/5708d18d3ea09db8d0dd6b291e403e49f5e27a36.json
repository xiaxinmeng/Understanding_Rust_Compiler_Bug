{"sha": "5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwOGQxOGQzZWEwOWRiOGQwZGQ2YjI5MWU0MDNlNDlmNWUyN2EzNg==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@apple.com", "date": "2007-01-01T20:58:38Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2007-01-01T20:58:38Z"}, "message": "configure.ac (HAVE_GAS_LITERAL16): Add autoconf check for .literal16.\n\n\t* configure.ac (HAVE_GAS_LITERAL16): Add autoconf check for\n\t.literal16.\n\t* config/darwin.c (machopic_select_rtx_section): Use\n\tHAVE_GAS_LITERAL16.\n\t(darwin_mergeable_constant_section): Likewise.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\nFrom-SVN: r120315", "tree": {"sha": "c5fc3c76a74146dbda56af77954e005136bcde0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5fc3c76a74146dbda56af77954e005136bcde0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/comments", "author": null, "committer": null, "parents": [{"sha": "03c72655bab1ea9c7023e95066e81777c21e372d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c72655bab1ea9c7023e95066e81777c21e372d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c72655bab1ea9c7023e95066e81777c21e372d"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "fa68d1c0c24263826b84360b89c85cc4b47e9b50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "patch": "@@ -1,5 +1,16 @@\n+2007-01-01  Mike Stump  <mrs@apple.com>\n+\n+\t* configure.ac (HAVE_GAS_LITERAL16): Add autoconf check for\n+\t.literal16.\n+\t* config/darwin.c (machopic_select_rtx_section): Use\n+\tHAVE_GAS_LITERAL16.\n+\t(darwin_mergeable_constant_section): Likewise.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2007-01-01  Jan Hubicka  <jh@suse.cz>\n \t    Andrew Pinski  <pinskia@gmail.com>\n \n \t* cgraphunit.c (cgraph_optimize): Call cgraph_add_new_functions\n \tbefore starting IPA passes.\n+"}, {"sha": "e1a530a12e4d4505ee293aa2eb6a5314b94f3898", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "patch": "@@ -754,6 +754,12 @@\n /* Define if your assembler and linker support .hidden. */\n #undef HAVE_GAS_HIDDEN\n \n+/* Define if your assembler supports .literal16. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GAS_LITERAL16\n+#endif\n+\n+\n /* Define if your assembler supports specifying the maximum number of bytes to\n    skip when using the GAS .p2align command. */\n #ifndef USED_FOR_TARGET"}, {"sha": "1c7747cc04ce5be983cd5720b55ae1b501b57084", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "patch": "@@ -1131,6 +1131,10 @@ darwin_mergeable_string_section (tree exp,\n   return readonly_data_section;\n }\n \n+#ifndef HAVE_GAS_LITERAL16\n+#define HAVE_GAS_LITERAL16 0\n+#endif\n+\n static section *\n darwin_mergeable_constant_section (tree exp,\n \t\t\t\t   unsigned HOST_WIDE_INT align)\n@@ -1156,7 +1160,8 @@ darwin_mergeable_constant_section (tree exp,\n \t       && TREE_INT_CST_LOW (size) == 8\n \t       && TREE_INT_CST_HIGH (size) == 0)\n         return darwin_sections[literal8_section];\n-      else if (TARGET_64BIT\n+      else if (HAVE_GAS_LITERAL16\n+\t       && TARGET_64BIT\n                && TREE_CODE (size) == INTEGER_CST\n                && TREE_INT_CST_LOW (size) == 16\n                && TREE_INT_CST_HIGH (size) == 0)\n@@ -1321,7 +1326,8 @@ machopic_select_rtx_section (enum machine_mode mode, rtx x,\n \t   && (GET_CODE (x) == CONST_INT\n \t       || GET_CODE (x) == CONST_DOUBLE))\n     return darwin_sections[literal4_section];\n-  else if (TARGET_64BIT\n+  else if (HAVE_GAS_LITERAL16\n+\t   && TARGET_64BIT\n \t   && GET_MODE_SIZE (mode) == 16\n \t   && (GET_CODE (x) == CONST_INT\n \t       || GET_CODE (x) == CONST_DOUBLE"}, {"sha": "3aaf361cf40ea19576c83245fe738c48dcbf6462", "filename": "gcc/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "patch": "@@ -13737,6 +13737,43 @@ _ACEOF\n \n fi\n \n+echo \"$as_me:$LINENO: checking assembler for .literal16\" >&5\n+echo $ECHO_N \"checking assembler for .literal16... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_literal16+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_literal16=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 8 \\) \\* 1000 + 0`\n+  then gcc_cv_as_literal16=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '.literal16' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_literal16=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_literal16\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_literal16\" >&6\n+if test $gcc_cv_as_literal16 = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_GAS_LITERAL16 1\n+_ACEOF\n+\n+fi\n+\n echo \"$as_me:$LINENO: checking assembler for working .subsection -1\" >&5\n echo $ECHO_N \"checking assembler for working .subsection -1... $ECHO_C\" >&6\n if test \"${gcc_cv_as_subsection_m1+set}\" = set; then"}, {"sha": "a0832bf5125d9fe4e51aec5d25330b3528eca992", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708d18d3ea09db8d0dd6b291e403e49f5e27a36/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=5708d18d3ea09db8d0dd6b291e403e49f5e27a36", "patch": "@@ -2051,6 +2051,12 @@ gcc_GAS_CHECK_FEATURE([.p2align with maximum skip], gcc_cv_as_max_skip_p2align,\n   [Define if your assembler supports specifying the maximum number\n    of bytes to skip when using the GAS .p2align command.])])\n \n+gcc_GAS_CHECK_FEATURE([.literal16], gcc_cv_as_literal16,\n+ [2,8,0],,\n+ [.literal16],,\n+[AC_DEFINE(HAVE_GAS_LITERAL16, 1,\n+  [Define if your assembler supports .literal16.])])\n+\n gcc_GAS_CHECK_FEATURE([working .subsection -1], gcc_cv_as_subsection_m1,\n  [elf,2,9,0],,\n  [conftest_label1: .word 0"}]}