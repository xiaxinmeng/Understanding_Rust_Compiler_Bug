{"sha": "3edc56a9e5499b79239967350162066d99eaf95a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VkYzU2YTllNTQ5OWI3OTIzOTk2NzM1MDE2MjA2NmQ5OWVhZjk1YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-06-04T16:44:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-06-04T16:44:51Z"}, "message": "function.c (trampolines_created): New variable.\n\n\t* function.c (trampolines_created): New variable.\n\t(expand_function_end): Set it when doing INITIALIZE_TRAMPOLINE.\n\t* function.h (trampolines_created): Add.\n\t* config/s390/linux.h (ASM_FILE_END): Define.\n\t* config/alpha/linux-elf.h (ASM_FILE_END): Define.\n\t* config/m68k/linux.h (ASM_FILE_END): Define.\n\t* config/rs6000/linux.h (ASM_FILE_END): Define.\n\t* config/rs6000/linux64.h (ASM_FILE_END): Define.\n\t* config/rs6000/ppc-asm.h: Add .note.GNU-stack on powerpc-linux.\n\t* config/sparc/linux.h (ASM_FILE_END): Define.\n\t* config/sparc/linux64.h (ASM_FILE_END): Define.\n\t* config/i386/i386.c (ix86_asm_file_end): Use SUBTARGET_FILE_END.\n\t* config/i386/linux.h (SUBTARGET_FILE_END): Define.\n\t* config/i386/linux64.h (SUBTARGET_FILE_END): Define.\n\nFrom-SVN: r67447", "tree": {"sha": "183ccc7e9327b3b5ce962ea21bd520f0b9da84dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183ccc7e9327b3b5ce962ea21bd520f0b9da84dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3edc56a9e5499b79239967350162066d99eaf95a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edc56a9e5499b79239967350162066d99eaf95a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3edc56a9e5499b79239967350162066d99eaf95a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3edc56a9e5499b79239967350162066d99eaf95a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2c49530bb30888afa711911c98fc8d9bf6ee380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c49530bb30888afa711911c98fc8d9bf6ee380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c49530bb30888afa711911c98fc8d9bf6ee380"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "6bb5c6af19b9e55db7a6a9eb976fe2cad18aa0f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -1,3 +1,20 @@\n+2003-06-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* function.c (trampolines_created): New variable.\n+\t(expand_function_end): Set it when doing INITIALIZE_TRAMPOLINE.\n+\t* function.h (trampolines_created): Add.\n+\t* config/s390/linux.h (ASM_FILE_END): Define.\n+\t* config/alpha/linux-elf.h (ASM_FILE_END): Define.\n+\t* config/m68k/linux.h (ASM_FILE_END): Define.\n+\t* config/rs6000/linux.h (ASM_FILE_END): Define.\n+\t* config/rs6000/linux64.h (ASM_FILE_END): Define.\n+\t* config/rs6000/ppc-asm.h: Add .note.GNU-stack on powerpc-linux.\n+\t* config/sparc/linux.h (ASM_FILE_END): Define.\n+\t* config/sparc/linux64.h (ASM_FILE_END): Define.\n+\t* config/i386/i386.c (ix86_asm_file_end): Use SUBTARGET_FILE_END.\n+\t* config/i386/linux.h (SUBTARGET_FILE_END): Define.\n+\t* config/i386/linux64.h (SUBTARGET_FILE_END): Define.\n+\n Wed Jun  4 18:39:33 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (min_insn_size, k8_avoid_jump_misspredicts): New functions"}, {"sha": "c7319f31ffeb604524b896f0a74969e522fa4eb3", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -41,3 +41,10 @@ Boston, MA 02111-1307, USA.  */\n #undef LIB_SPEC\n #define LIB_SPEC \\\n \"%{pthread:-lpthread} %{shared:-lc}%{!shared:%{profile:-lc_p}%{!profile:-lc}} \"\n+\n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)"}, {"sha": "f2d94c20cdc4fa2a05a65124dd6a4df001a7abc3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -4729,6 +4729,10 @@ ix86_asm_file_end (file)\n       output_asm_insn (\"mov{l}\\t{%1, %0|%0, %1}\", xops);\n       output_asm_insn (\"ret\", xops);\n     }\n+\n+#ifdef SUBTARGET_FILE_END\n+  SUBTARGET_FILE_END (file);\n+#endif\n }\n \n /* Emit code for the SET_GOT patterns.  */"}, {"sha": "3041368f27d294fbab20467869f118a8f0aae433", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -219,6 +219,13 @@ Boston, MA 02111-1307, USA.  */\n \t   : \"=d\"(BASE))\n #endif\n \n+#define SUBTARGET_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n "}, {"sha": "341ef32feb17f86b09ee163f640b2342866996ae", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -67,6 +67,13 @@ Boston, MA 02111-1307, USA.  */\n \n #define MULTILIB_DEFAULTS { \"m64\" }\n \n+#define SUBTARGET_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  \n    Don't use this at all if inhibit_libc is used.  */"}, {"sha": "82015d300ae9acb6925aefbe446edceb3aa6f41f", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -334,3 +334,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n      : \"d\" (_beg), \"d\" (_len)\t\t\t\t\t\t\\\n      : \"%d0\", \"%d2\", \"%d3\");\t\t\t\t\t\t\\\n }\n+\n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)"}, {"sha": "7234d13617160715df1298f6972071809792c425", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -86,6 +86,13 @@\n /* We don't need to generate entries in .fixup.  */\n #undef RELOCATABLE_NEEDS_FIXUP\n \n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n "}, {"sha": "f611471900b54b61f11ab01acfd7629d33ae9399", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -503,6 +503,14 @@ while (0)\n #undef DRAFT_V4_STRUCT_RET\n #define DRAFT_V4_STRUCT_RET (!TARGET_64BIT)\n \n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (! TARGET_64BIT)\t\t\t\t\t\t\t\\\n+      named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t   SECTION_DEBUG\t\t\t\t\\\n+\t\t\t   | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n "}, {"sha": "74e14836286f43df4f22c1bf03e6f0a0a032d19a", "filename": "gcc/config/rs6000/ppc-asm.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Frs6000%2Fppc-asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Frs6000%2Fppc-asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppc-asm.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -157,3 +157,8 @@ FUNC_NAME(name):\n GLUE(.L,name): \\\n \t.size FUNC_NAME(name),GLUE(.L,name)-FUNC_NAME(name)\n #endif\n+\n+#if defined __linux__ && !defined __powerpc64__\n+\t.section .note.GNU-stack\n+\t.previous\n+#endif"}, {"sha": "e4b34537a010fa3ca6cb77fc725c46bcb087b525", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -121,6 +121,12 @@ Boston, MA 02111-1307, USA.  */\n   { \"link_arch31\",\tLINK_ARCH31_SPEC },\t\\\n   { \"link_arch64\",\tLINK_ARCH64_SPEC },\t\\\n \n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n \n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */"}, {"sha": "c78f1562e9a6daf7f7a6e43dee620bf3ac78e56c", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -259,6 +259,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef CTORS_SECTION_ASM_OP\n #undef DTORS_SECTION_ASM_OP\n \n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n "}, {"sha": "0bb1e646b1d39b97d3edece6f4ea4daa7b611b97", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -324,6 +324,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef CTORS_SECTION_ASM_OP\n #undef DTORS_SECTION_ASM_OP\n \n+#define ASM_FILE_END(FILE) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    named_section_flags (\".note.GNU-stack\",\t\t\t\t\\\n+\t\t\t SECTION_DEBUG\t\t\t\t\t\\\n+\t\t\t | (trampolines_created ? SECTION_CODE : 0));\t\\\n+  } while (0)\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n "}, {"sha": "9924bb589b7474201128a075fdfef9abdb9a84b9", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -129,6 +129,9 @@ int current_function_uses_only_leaf_regs;\n    post-instantiation libcalls.  */\n int virtuals_instantiated;\n \n+/* Nonzero if at least one trampoline has been created.  */\n+int trampolines_created;\n+\n /* Assign unique numbers to labels generated for profiling, debugging, etc.  */\n static GTY(()) int funcdef_no;\n \n@@ -7024,6 +7027,7 @@ expand_function_end (filename, line, end_bindings)\n       emit_block_move (blktramp, initial_trampoline,\n \t\t       GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n #endif\n+      trampolines_created = 1;\n       INITIALIZE_TRAMPOLINE (tramp, XEXP (DECL_RTL (function), 0), context);\n       seq = get_insns ();\n       end_sequence ();"}, {"sha": "f9db14c3cbc0724b1a269ae2fd2e74b4a4145ce3", "filename": "gcc/function.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3edc56a9e5499b79239967350162066d99eaf95a/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=3edc56a9e5499b79239967350162066d99eaf95a", "patch": "@@ -513,6 +513,9 @@ extern GTY(()) struct function *cfun;\n /* Nonzero if we've already converted virtual regs to hard regs.  */\n extern int virtuals_instantiated;\n \n+/* Nonzero if at least one trampoline has been created.  */\n+extern int trampolines_created;\n+\n /* For backward compatibility... eventually these should all go away.  */\n #define current_function_name (cfun->name)\n #define current_function_pops_args (cfun->pops_args)"}]}