{"sha": "30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmYzgwY2ZhNjU0NmZmZDViM2U1ZTFmZTA2NzlhODI3OTQ3NmY0ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:15:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:15:47Z"}, "message": "[multiple changes]\n\n2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb: Minor reformatting.\n\n2015-05-22  Jose Ruiz  <ruiz@adacore.com>\n\n\t* a-reatim.adb: Minor change, fix typo.\n\nFrom-SVN: r223533", "tree": {"sha": "917c22a54ca9a5c3042168e6256a194ad085ae21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/917c22a54ca9a5c3042168e6256a194ad085ae21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/comments", "author": null, "committer": null, "parents": [{"sha": "90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d6b7bc3a61e77363377ef6e5dfc71cf8ecff71"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "7e59e554eaf9a4ad1f6a01d4d26800b6429f68e1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "patch": "@@ -1,3 +1,11 @@\n+2015-05-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb: Minor reformatting.\n+\n+2015-05-22  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* a-reatim.adb: Minor change, fix typo.\n+\n 2015-05-22  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.ads: Minor addition of ??? comment."}, {"sha": "1b4d4d8605c59c644881be4b2bf774f561826e04", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "patch": "@@ -330,7 +330,7 @@ package body Ada.Real_Time is\n             Out_Of_Range;\n          end if;\n \n-      --  Same for negative values of seconds, fundge up and check low bound\n+      --  Same for negative values of seconds, fudge up and check low bound\n \n       else\n          Fudged_Result := Duration (Result_SC + Fudge) + TS_Fraction;"}, {"sha": "eb2c095c2103ba95fdd46551fbea1dd4fa504e3c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=30fc80cfa6546ffd5b3e5e1fe0679a8279476f4e", "patch": "@@ -3893,8 +3893,8 @@ package body Sem_Ch13 is\n                  (\"indexing function must have at least two parameters\");\n                return;\n \n-            --  For a derived type, check that no indexing aspect is\n-            --  specified for the type if it is also inherited\n+            --  For a derived type, check that no indexing aspect is specified\n+            --  for the type if it is also inherited\n \n             elsif Is_Derived_Type (Ent) then\n                declare\n@@ -3904,8 +3904,7 @@ package body Sem_Ch13 is\n                   if Attr = Name_Constant_Indexing then\n                      Inherited :=\n                        Find_Aspect (Etype (Ent), Aspect_Constant_Indexing);\n-\n-                  elsif Attr = Name_Variable_Indexing then\n+                  else pragma Assert (Attr = Name_Variable_Indexing);\n                      Inherited :=\n                         Find_Aspect (Etype (Ent), Aspect_Variable_Indexing);\n                   end if;\n@@ -3914,15 +3913,15 @@ package body Sem_Ch13 is\n                      if Debug_Flag_Dot_XX then\n                         null;\n \n-                     --  Indicate the operation that must be overridden,\n-                     --  rather than redefining the indexing aspect\n+                     --  Indicate the operation that must be overridden, rather\n+                     --  than redefining the indexing aspect\n \n                      else\n                         Illegal_Indexing\n                           (\"indexing function already inherited \"\n                            & \"from parent type\");\n                         Error_Msg_NE\n-                          (\"!override& instead\",\n+                          (\"!override & instead\",\n                            N, Entity (Expression (Inherited)));\n                         return;\n                      end if;"}]}