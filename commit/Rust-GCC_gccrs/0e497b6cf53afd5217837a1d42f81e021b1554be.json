{"sha": "0e497b6cf53afd5217837a1d42f81e021b1554be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU0OTdiNmNmNTNhZmQ1MjE3ODM3YTFkNDJmODFlMDIxYjE1NTRiZQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-07-07T18:24:00Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2004-07-07T18:24:00Z"}, "message": "configure.host: Enable hash synchronization on Darwin.\n\n2004-07-07  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* configure.host: Enable hash synchronization on Darwin.\n\t* sysdep/powerpc/locks.h (compare_and_swap): Use '\\n' instead of\n\t';', since this is a comment on Darwin.\n\t(compare_and_swap_release): Likewise.\n\nFrom-SVN: r84214", "tree": {"sha": "f139418133c35b3fbb6df78e889682f1f8d85563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f139418133c35b3fbb6df78e889682f1f8d85563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e497b6cf53afd5217837a1d42f81e021b1554be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e497b6cf53afd5217837a1d42f81e021b1554be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e497b6cf53afd5217837a1d42f81e021b1554be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e497b6cf53afd5217837a1d42f81e021b1554be/comments", "author": null, "committer": null, "parents": [{"sha": "fc72b3800247719e3cde796bc36f860ae4c74d7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc72b3800247719e3cde796bc36f860ae4c74d7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc72b3800247719e3cde796bc36f860ae4c74d7b"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "3a0ec3e7fcbb55b2aa1adae3a97edf97b34c9004", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e497b6cf53afd5217837a1d42f81e021b1554be/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e497b6cf53afd5217837a1d42f81e021b1554be/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0e497b6cf53afd5217837a1d42f81e021b1554be", "patch": "@@ -1,10 +1,17 @@\n+2004-07-07  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* configure.host: Enable hash synchronization on Darwin.\n+\t* sysdep/powerpc/locks.h (compare_and_swap): Use '\\n' instead of\n+\t';', since this is a comment on Darwin.\n+\t(compare_and_swap_release): Likewise.\n+\n 2004-07-06  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* java/net/URLStreamHandler.java (parseURL): Canonicalize\n \tfile portion of URL in addition to spec for file: protocol.\n \n 2004-07-05  Anthony Green  <green@redhat.com>\n-\t\n+\n \t* java/io/File.java (toURI): Merge from Classpath.\n \n 2004-07-05  Bryce McKinlay  <mckinlay@redhat.com>\n@@ -13,7 +20,7 @@\n \tbefore passing to URL constructor. Rethrow any MalformedURLException\n \tas a RuntimeException. Catch MalformedURLException specifically, not\n \tall exceptions.\n-\t\n+\n 2004-07-05  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* java/util/Locale.java (readObject): Intern strings read from object\n@@ -30,7 +37,7 @@\n \t* Makefile.in: Regenerated.\n \n 2004-07-03  Mark Wielaard  <mark@klomp.org>\n-            Anthony Green  <green@redhat.com>\n+\t    Anthony Green  <green@redhat.com>\n \n \t* java/net/URL.java (getFile): Clarify return value doc.\n \t(getPath): Return null if file is empty - not empty String."}, {"sha": "5971945b70fb551175df8a26ed343eafccc4f654", "filename": "libjava/configure.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e497b6cf53afd5217837a1d42f81e021b1554be/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e497b6cf53afd5217837a1d42f81e021b1554be/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=0e497b6cf53afd5217837a1d42f81e021b1554be", "patch": "@@ -233,7 +233,7 @@ EOF\n \tesac\n \t;;\n   powerpc*-*-darwin*)\n-\tenable_hash_synchronization_default=no\n+\tenable_hash_synchronization_default=yes\n \tslow_pthread_self=\n \tcan_unwind_signal=yes\n \t;;"}, {"sha": "5a6a945e494709185923f9dc384097915fcbcb0f", "filename": "libjava/sysdep/powerpc/locks.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e497b6cf53afd5217837a1d42f81e021b1554be/libjava%2Fsysdep%2Fpowerpc%2Flocks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e497b6cf53afd5217837a1d42f81e021b1554be/libjava%2Fsysdep%2Fpowerpc%2Flocks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fpowerpc%2Flocks.h?ref=0e497b6cf53afd5217837a1d42f81e021b1554be", "patch": "@@ -33,12 +33,12 @@ compare_and_swap (volatile obj_addr_t *addr, obj_addr_t old,\n   int ret;\n \n   __asm__ __volatile__ (\n-\t   \"0:    \" _LARX \"%0,0,%1 ;\"\n-\t   \"      xor. %0,%3,%0;\"\n-\t   \"      bne 1f;\"\n-\t   \"      \" _STCX \"%2,0,%1;\"\n-\t   \"      bne- 0b;\"\n-\t   \"1:    \"\n+\t   \"0:    \" _LARX \"%0,0,%1 \\n\"\n+\t   \"      xor. %0,%3,%0\\n\"\n+\t   \"      bne 1f\\n\"\n+\t   \"      \" _STCX \"%2,0,%1\\n\"\n+\t   \"      bne- 0b\\n\"\n+\t   \"1:   \\n\"\n \t: \"=&r\" (ret)\n \t: \"r\" (addr), \"r\" (new_val), \"r\" (old)\n \t: \"cr0\", \"memory\");\n@@ -67,12 +67,12 @@ compare_and_swap_release (volatile obj_addr_t *addr, obj_addr_t old,\n   __asm__ __volatile__ (\"sync\" : : : \"memory\");\n \n   __asm__ __volatile__ (\n-\t   \"0:    \" _LARX \"%0,0,%1 ;\"\n-\t   \"      xor. %0,%3,%0;\"\n-\t   \"      bne 1f;\"\n-\t   \"      \" _STCX \"%2,0,%1;\"\n-\t   \"      bne- 0b;\"\n-\t   \"1:    \"\n+\t   \"0:    \" _LARX \"%0,0,%1 \\n\"\n+\t   \"      xor. %0,%3,%0\\n\"\n+\t   \"      bne 1f\\n\"\n+\t   \"      \" _STCX \"%2,0,%1\\n\"\n+\t   \"      bne- 0b\\n\"\n+\t   \"1:   \\n\"\n \t: \"=&r\" (ret)\n \t: \"r\" (addr), \"r\" (new_val), \"r\" (old)\n \t: \"cr0\", \"memory\");"}]}