{"sha": "aa424b01a1291050106737b4dded3de16da986b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0MjRiMDFhMTI5MTA1MDEwNjczN2I0ZGRlZDNkZTE2ZGE5ODZiNg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2009-04-18T11:48:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2009-04-18T11:48:19Z"}, "message": "tree.c (function_args_count): Remove.\n\n\t* tree.c (function_args_count): Remove.\n\t* tree.h: Remove the prototype for function_args_count.\n\nFrom-SVN: r146312", "tree": {"sha": "3ed439ad4c47d4d271b9d68c28f8cd9a445c8e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ed439ad4c47d4d271b9d68c28f8cd9a445c8e52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa424b01a1291050106737b4dded3de16da986b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa424b01a1291050106737b4dded3de16da986b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa424b01a1291050106737b4dded3de16da986b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa424b01a1291050106737b4dded3de16da986b6/comments", "author": null, "committer": null, "parents": [{"sha": "613a896b5802a4825303b417974cea6a68b84030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613a896b5802a4825303b417974cea6a68b84030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613a896b5802a4825303b417974cea6a68b84030"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "fa02ee6fe2e123688a4bf32634f802dd695b4a54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa424b01a1291050106737b4dded3de16da986b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa424b01a1291050106737b4dded3de16da986b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa424b01a1291050106737b4dded3de16da986b6", "patch": "@@ -1,3 +1,8 @@\n+2009-04-18  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* tree.c (function_args_count): Remove.\n+\t* tree.h: Remove the prototype for function_args_count.\n+\n 2009-04-18  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* tree-iterator.c (expr_only): Remove."}, {"sha": "9fe6db3ed984c8f0d613bb4a3b493ccd374c9f9f", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa424b01a1291050106737b4dded3de16da986b6/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa424b01a1291050106737b4dded3de16da986b6/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=aa424b01a1291050106737b4dded3de16da986b6", "patch": "@@ -9071,26 +9071,6 @@ prototype_p (tree fntype)\n   return (t != NULL_TREE);\n }\n \n-/* Return the number of arguments that a function has.  */\n-\n-int\n-function_args_count (tree fntype)\n-{\n-  function_args_iterator args_iter;\n-  tree t;\n-  int num = 0;\n-\n-  if (fntype)\n-    {\n-      FOREACH_FUNCTION_ARGS(fntype, t, args_iter)\n-\t{\n-\t  num++;\n-\t}\n-    }\n-\n-  return num;\n-}\n-\n /* If BLOCK is inlined from an __attribute__((__artificial__))\n    routine, return pointer to location from where it has been\n    called.  */"}, {"sha": "793dcf38c71dc740e159dd474544e0e5eb7cdf8c", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa424b01a1291050106737b4dded3de16da986b6/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa424b01a1291050106737b4dded3de16da986b6/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=aa424b01a1291050106737b4dded3de16da986b6", "patch": "@@ -4655,7 +4655,6 @@ extern tree create_artificial_label (void);\n extern const char *get_name (tree);\n extern bool stdarg_p (tree);\n extern bool prototype_p (tree);\n-extern int function_args_count (tree);\n extern bool auto_var_in_fn_p (const_tree, const_tree);\n \f\n /* In gimplify.c */"}]}