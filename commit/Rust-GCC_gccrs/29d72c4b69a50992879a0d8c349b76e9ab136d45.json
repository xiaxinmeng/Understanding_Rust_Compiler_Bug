{"sha": "29d72c4b69a50992879a0d8c349b76e9ab136d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlkNzJjNGI2OWE1MDk5Mjg3OWEwZDhjMzQ5Yjc2ZTlhYjEzNmQ0NQ==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-11-17T23:31:20Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-11-17T23:31:20Z"}, "message": "(simplify_binary_operation): Do (x - (x & y)) -> (x & ~y).\n\nFrom-SVN: r8494", "tree": {"sha": "f42b01a7bad7022f724bea094fc0e47e0d20fffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f42b01a7bad7022f724bea094fc0e47e0d20fffb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29d72c4b69a50992879a0d8c349b76e9ab136d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d72c4b69a50992879a0d8c349b76e9ab136d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29d72c4b69a50992879a0d8c349b76e9ab136d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29d72c4b69a50992879a0d8c349b76e9ab136d45/comments", "author": null, "committer": null, "parents": [{"sha": "b76f773b543a91d50e21b1a3417a01505bedad3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b76f773b543a91d50e21b1a3417a01505bedad3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b76f773b543a91d50e21b1a3417a01505bedad3e"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "487cc3f33c3ec627463d2c20bc356edcb0b0366d", "filename": "gcc/cse.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29d72c4b69a50992879a0d8c349b76e9ab136d45/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29d72c4b69a50992879a0d8c349b76e9ab136d45/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=29d72c4b69a50992879a0d8c349b76e9ab136d45", "patch": "@@ -3718,6 +3718,15 @@ simplify_binary_operation (code, mode, op0, op1)\n \t  /* Don't let a relocatable value get a negative coeff.  */\n \t  if (GET_CODE (op1) == CONST_INT && GET_MODE (op0) != VOIDmode)\n \t    return plus_constant (op0, - INTVAL (op1));\n+\n+\t  /* (x - (x & y)) -> (x & ~y) */\n+\t  if (GET_CODE (op1) == AND)\n+\t    {\n+\t     if (rtx_equal_p (op0, XEXP (op1, 0)))\n+\t       return cse_gen_binary (AND, mode, op0, gen_rtx (NOT, mode, XEXP (op1, 1)));\n+\t     if (rtx_equal_p (op0, XEXP (op1, 1)))\n+\t       return cse_gen_binary (AND, mode, op0, gen_rtx (NOT, mode, XEXP (op1, 0)));\n+\t   }\n \t  break;\n \n \tcase MULT:"}]}