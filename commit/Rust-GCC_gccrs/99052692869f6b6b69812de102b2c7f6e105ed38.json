{"sha": "99052692869f6b6b69812de102b2c7f6e105ed38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwNTI2OTI4NjlmNmI2YjY5ODEyZGUxMDJiMmM3ZjZlMTA1ZWQzOA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2009-05-18T12:53:22Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2009-05-18T12:53:22Z"}, "message": "sh.c (expand_cbranchdi4): Use a scratch register for the none zero constant operand except for EQ and NE...\n\n\t* config/sh/sh.c (expand_cbranchdi4): Use a scratch register\n\tfor the none zero constant operand except for EQ and NE\n\tcomprisons even when the first operand is R0.\n\nFrom-SVN: r147661", "tree": {"sha": "aba1a238f5d6edfe3bc0b8afee3403a4cc17a199", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aba1a238f5d6edfe3bc0b8afee3403a4cc17a199"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99052692869f6b6b69812de102b2c7f6e105ed38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99052692869f6b6b69812de102b2c7f6e105ed38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99052692869f6b6b69812de102b2c7f6e105ed38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99052692869f6b6b69812de102b2c7f6e105ed38/comments", "author": null, "committer": null, "parents": [{"sha": "f4aa38482cd7374e7fd6e0ff968f6c84e0823a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4aa38482cd7374e7fd6e0ff968f6c84e0823a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4aa38482cd7374e7fd6e0ff968f6c84e0823a0a"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "575773f06188525181e81f04780dd311716d772b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99052692869f6b6b69812de102b2c7f6e105ed38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99052692869f6b6b69812de102b2c7f6e105ed38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=99052692869f6b6b69812de102b2c7f6e105ed38", "patch": "@@ -1,3 +1,9 @@\n+2009-05-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (expand_cbranchdi4): Use a scratch register\n+\tfor the none zero constant operand except for EQ and NE\n+\tcomprisons even when the first operand is R0.\n+\n 2009-05-18  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/2064.md: Remove trailing whitespaces."}, {"sha": "363934d74daf5993dc84565193482227df5486d1", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99052692869f6b6b69812de102b2c7f6e105ed38/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99052692869f6b6b69812de102b2c7f6e105ed38/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=99052692869f6b6b69812de102b2c7f6e105ed38", "patch": "@@ -1632,7 +1632,8 @@ expand_cbranchdi4 (rtx *operands, enum rtx_code comparison)\n   operands[2] = op2h;\n   operands[4] = NULL_RTX;\n   if (reload_completed\n-      && ! arith_reg_or_0_operand (op2h, SImode) && true_regnum (op1h)\n+      && ! arith_reg_or_0_operand (op2h, SImode)\n+      && (true_regnum (op1h) || (comparison != EQ && comparison != NE))\n       && (msw_taken != LAST_AND_UNUSED_RTX_CODE\n \t  || msw_skip != LAST_AND_UNUSED_RTX_CODE))\n     {\n@@ -1662,8 +1663,12 @@ expand_cbranchdi4 (rtx *operands, enum rtx_code comparison)\n   if (lsw_taken != LAST_AND_UNUSED_RTX_CODE)\n     {\n       if (reload_completed\n-\t  && ! arith_reg_or_0_operand (op2l, SImode) && true_regnum (op1l))\n-\toperands[4] = scratch;\n+\t  && ! arith_reg_or_0_operand (op2l, SImode)\n+\t  && (true_regnum (op1l) || (lsw_taken != EQ && lsw_taken != NE)))\n+\t{\n+\t  emit_move_insn (scratch, operands[2]);\n+\t  operands[2] = scratch;\n+\t}\n       expand_cbranchsi4 (operands, lsw_taken, lsw_taken_prob);\n     }\n   if (msw_skip != LAST_AND_UNUSED_RTX_CODE)"}]}