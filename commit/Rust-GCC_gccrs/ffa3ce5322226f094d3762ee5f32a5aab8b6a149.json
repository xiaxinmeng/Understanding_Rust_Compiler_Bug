{"sha": "ffa3ce5322226f094d3762ee5f32a5aab8b6a149", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhM2NlNTMyMjIyNmYwOTRkMzc2MmVlNWYzMmE1YWFiOGI2YTE0OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-10-20T12:25:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-10-20T12:25:18Z"}, "message": "* x86-tune-costs.h (core_cost): Fix div, move and sqrt latencies.\n\nFrom-SVN: r253934", "tree": {"sha": "45ccdf6b4cb4d3800ba25eb1e27db7b275249498", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45ccdf6b4cb4d3800ba25eb1e27db7b275249498"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa3ce5322226f094d3762ee5f32a5aab8b6a149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa3ce5322226f094d3762ee5f32a5aab8b6a149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa3ce5322226f094d3762ee5f32a5aab8b6a149", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa3ce5322226f094d3762ee5f32a5aab8b6a149/comments", "author": null, "committer": null, "parents": [{"sha": "1031b5772a3f2daee0bf01d7d155955833d05c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1031b5772a3f2daee0bf01d7d155955833d05c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1031b5772a3f2daee0bf01d7d155955833d05c1b"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "184a6294bf16cbffa80ae9e3e45d55467de7604c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa3ce5322226f094d3762ee5f32a5aab8b6a149/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa3ce5322226f094d3762ee5f32a5aab8b6a149/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffa3ce5322226f094d3762ee5f32a5aab8b6a149", "patch": "@@ -1,3 +1,7 @@\n+2017-10-19  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* x86-tune-costs.h (core_cost): Fix div, move and sqrt latencies.\n+\n 2017-10-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82603"}, {"sha": "3f7a4f23c92e4db8c7aee347c6bd1f63116d2757", "filename": "gcc/config/i386/x86-tune-costs.h", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa3ce5322226f094d3762ee5f32a5aab8b6a149/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa3ce5322226f094d3762ee5f32a5aab8b6a149/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune-costs.h?ref=ffa3ce5322226f094d3762ee5f32a5aab8b6a149", "patch": "@@ -2305,38 +2305,40 @@ struct processor_costs core_cost = {\n    COSTS_N_INSNS (4),\t\t\t/*\t\t\t\t HI */\n    COSTS_N_INSNS (3),\t\t\t/*\t\t\t\t SI */\n    COSTS_N_INSNS (4),\t\t\t/*\t\t\t\t DI */\n-   COSTS_N_INSNS (2)},\t\t\t/*\t\t\t      other */\n+   COSTS_N_INSNS (4)},\t\t\t/*\t\t\t      other */\n   0,\t\t\t\t\t/* cost of multiply per each bit set */\n-  {COSTS_N_INSNS (18),\t\t\t/* cost of a divide/mod for QI */\n-   COSTS_N_INSNS (26),\t\t\t/*\t\t\t    HI */\n-   COSTS_N_INSNS (42),\t\t\t/*\t\t\t    SI */\n-   COSTS_N_INSNS (74),\t\t\t/*\t\t\t    DI */\n-   COSTS_N_INSNS (74)},\t\t\t/*\t\t\t    other */\n+  {COSTS_N_INSNS (8),\t\t\t/* cost of a divide/mod for QI */\n+   COSTS_N_INSNS (8),\t\t\t/*\t\t\t    HI */\n+   /* 8-11 */\n+   COSTS_N_INSNS (11),\t\t\t/*\t\t\t    SI */\n+   /* 24-81 */\n+   COSTS_N_INSNS (81),\t\t\t/*\t\t\t    DI */\n+   COSTS_N_INSNS (81)},\t\t\t/*\t\t\t    other */\n   COSTS_N_INSNS (1),\t\t\t/* cost of movsx */\n   COSTS_N_INSNS (1),\t\t\t/* cost of movzx */\n   8,\t\t\t\t\t/* \"large\" insn */\n   17,\t\t\t\t\t/* MOVE_RATIO */\n-  4,\t\t\t\t     /* cost for loading QImode using movzbl */\n+  6,\t\t\t\t     /* cost for loading QImode using movzbl */\n   {4, 4, 4},\t\t\t\t/* cost of loading integer registers\n \t\t\t\t\t   in QImode, HImode and SImode.\n \t\t\t\t\t   Relative to reg-reg move (2).  */\n-  {4, 4, 4},\t\t\t\t/* cost of storing integer registers */\n-  4,\t\t\t\t\t/* cost of reg,reg fld/fst */\n-  {12, 12, 12},\t\t\t\t/* cost of loading fp registers\n+  {6, 6, 6},\t\t\t\t/* cost of storing integer registers */\n+  2,\t\t\t\t\t/* cost of reg,reg fld/fst */\n+  {6, 6, 8},\t\t\t\t/* cost of loading fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n-  {6, 6, 8},\t\t\t\t/* cost of storing fp registers\n+  {8, 6, 10},\t\t\t\t/* cost of storing fp registers\n \t\t\t\t\t   in SFmode, DFmode and XFmode */\n   2,\t\t\t\t\t/* cost of moving MMX register */\n-  {8, 8},\t\t\t\t/* cost of loading MMX registers\n+  {6, 6},\t\t\t\t/* cost of loading MMX registers\n \t\t\t\t\t   in SImode and DImode */\n-  {8, 8},\t\t\t\t/* cost of storing MMX registers\n+  {6, 6},\t\t\t\t/* cost of storing MMX registers\n \t\t\t\t\t   in SImode and DImode */\n   2,\t\t\t\t\t/* cost of moving SSE register */\n-  {8, 8, 8},\t\t\t\t/* cost of loading SSE registers\n+  {6, 6, 6},\t\t\t\t/* cost of loading SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  {8, 8, 8},\t\t\t\t/* cost of storing SSE registers\n+  {6, 6, 6},\t\t\t\t/* cost of storing SSE registers\n \t\t\t\t\t   in SImode, DImode and TImode */\n-  5,\t\t\t\t\t/* MMX or SSE register to integer */\n+  2,\t\t\t\t\t/* MMX or SSE register to integer */\n   64,\t\t\t\t\t/* size of l1 cache.  */\n   512,\t\t\t\t\t/* size of l2 cache.  */\n   64,\t\t\t\t\t/* size of prefetch block */\n@@ -2345,10 +2347,11 @@ struct processor_costs core_cost = {\n   3,\t\t\t\t\t/* Branch cost */\n   COSTS_N_INSNS (3),\t\t\t/* cost of FADD and FSUB insns.  */\n   COSTS_N_INSNS (5),\t\t\t/* cost of FMUL instruction.  */\n+  /* 10-24 */\n   COSTS_N_INSNS (24),\t\t\t/* cost of FDIV instruction.  */\n   COSTS_N_INSNS (1),\t\t\t/* cost of FABS instruction.  */\n   COSTS_N_INSNS (1),\t\t\t/* cost of FCHS instruction.  */\n-  COSTS_N_INSNS (24),\t\t\t/* cost of FSQRT instruction.  */\n+  COSTS_N_INSNS (23),\t\t\t/* cost of FSQRT instruction.  */\n \n   COSTS_N_INSNS (1),\t\t\t/* cost of cheap SSE instruction.  */\n   COSTS_N_INSNS (3),\t\t\t/* cost of ADDSS/SD SUBSS/SD insns.  */"}]}