{"sha": "cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2YzI3YWMyMTEzZWE3Yzk0YTkwZmI4NGZiNWM3OGU5ZDBkODRiZg==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2016-03-22T11:09:03Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2016-03-22T11:09:03Z"}, "message": "re PR target/70325 (ICE on __builtin_ia32_storedquqi256_mask)\n\n\nPR target/70325\ngcc/\n\t* config/i386/i386.c (def_builtin): Handle\n\tOPTION_MASK_ISA_AVX512VL to be and-ed with other\n\tbits.\n\t(const struct builtin_description bdesc_special_args[]):\n\tRemove duplicate ISA bits.\ngcc/testsuite/\n\t* gcc.target/i386/pr70325.c: New test.\n\nFrom-SVN: r234395", "tree": {"sha": "22c889ca74c06b0a8099fb4243357e07763e567a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22c889ca74c06b0a8099fb4243357e07763e567a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/comments", "author": null, "committer": null, "parents": [{"sha": "b01915ed169065d75895d504a97337f071d9c4f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01915ed169065d75895d504a97337f071d9c4f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01915ed169065d75895d504a97337f071d9c4f7"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "16515a54a00a9d2e7cff7e9c86a526bb27eea683", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "patch": "@@ -1,3 +1,12 @@\n+2016-03-22  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/70325\n+\t* config/i386/i386.c (def_builtin): Handle\n+\tOPTION_MASK_ISA_AVX512VL to be and-ed with other\n+\tbits.\n+\t(const struct builtin_description bdesc_special_args[]):\n+\tRemove duplicate ISA bits.\n+\n 2016-03-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70329"}, {"sha": "ebddd89e40e1d48d0f0b1f62c7db302944ee22c6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "patch": "@@ -32429,6 +32429,17 @@ def_builtin (HOST_WIDE_INT mask, const char *name,\n     {\n       ix86_builtins_isa[(int) code].isa = mask;\n \n+      if (mask & ix86_isa_flags & OPTION_MASK_ISA_AVX512VL)\n+\t  mask &= ~OPTION_MASK_ISA_AVX512VL;\n+\n+      /* OPTION_MASK_ISA_AVX512VL has special meaning. Despite of generic case,\n+\t where any bit set means that built-in is enable, this bit must be *and-ed*\n+\t with another one. E.g.: OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL\n+\t means that *both* cpuid bits must be set for the built-in to be available.\n+\t Handle this here.  */\n+      if (mask & ix86_isa_flags & OPTION_MASK_ISA_AVX512VL)\n+\t  mask &= ~OPTION_MASK_ISA_AVX512VL;\n+\n       mask &= ~OPTION_MASK_ISA_64BIT;\n       if (mask == 0\n \t  || (mask & ix86_isa_flags) != 0\n@@ -34094,9 +34105,9 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_permvarv16hi_mask, \"__builtin_ia32_permvarhi256_mask\", IX86_BUILTIN_VPERMVARHI256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI },\n   { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_permvarv8hi_mask, \"__builtin_ia32_permvarhi128_mask\", IX86_BUILTIN_VPERMVARHI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI },\n   { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16hi3_mask, \"__builtin_ia32_vpermt2varhi256_mask\", IX86_BUILTIN_VPERMT2VARHI256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI },\n-  { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16hi3_maskz, \"__builtin_ia32_vpermt2varhi256_maskz\", IX86_BUILTIN_VPERMT2VARHI256_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI },\n+  { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16hi3_maskz, \"__builtin_ia32_vpermt2varhi256_maskz\", IX86_BUILTIN_VPERMT2VARHI256_MASKZ, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI },\n   { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv8hi3_mask, \"__builtin_ia32_vpermt2varhi128_mask\", IX86_BUILTIN_VPERMT2VARHI128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI },\n-  { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv8hi3_maskz, \"__builtin_ia32_vpermt2varhi128_maskz\", IX86_BUILTIN_VPERMT2VARHI128_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI },\n+  { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv8hi3_maskz, \"__builtin_ia32_vpermt2varhi128_maskz\", IX86_BUILTIN_VPERMT2VARHI128_MASKZ, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI },\n   { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermi2varv16hi3_mask, \"__builtin_ia32_vpermi2varhi256_mask\", IX86_BUILTIN_VPERMI2VARHI256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI },\n   { OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermi2varv8hi3_mask, \"__builtin_ia32_vpermi2varhi128_mask\", IX86_BUILTIN_VPERMI2VARHI128, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI },\n   { OPTION_MASK_ISA_AVX512VL, CODE_FOR_rcp14v4df_mask, \"__builtin_ia32_rcp14pd256_mask\", IX86_BUILTIN_RCP14PD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V4DF_UQI },\n@@ -34811,9 +34822,9 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_permvarv32qi_mask, \"__builtin_ia32_permvarqi256_mask\", IX86_BUILTIN_VPERMVARQI256_MASK, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_V32QI_USI },\n   { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_permvarv16qi_mask, \"__builtin_ia32_permvarqi128_mask\", IX86_BUILTIN_VPERMVARQI128_MASK, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI },\n   { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv32qi3_mask, \"__builtin_ia32_vpermt2varqi256_mask\", IX86_BUILTIN_VPERMT2VARQI256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_V32QI_USI },\n-  { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv32qi3_maskz, \"__builtin_ia32_vpermt2varqi256_maskz\", IX86_BUILTIN_VPERMT2VARQI256_MASKZ, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_V32QI_USI },\n+  { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv32qi3_maskz, \"__builtin_ia32_vpermt2varqi256_maskz\", IX86_BUILTIN_VPERMT2VARQI256_MASKZ, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_V32QI_USI },\n   { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16qi3_mask, \"__builtin_ia32_vpermt2varqi128_mask\", IX86_BUILTIN_VPERMT2VARQI128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI },\n-  { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16qi3_maskz, \"__builtin_ia32_vpermt2varqi128_maskz\", IX86_BUILTIN_VPERMT2VARQI128_MASKZ, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI },\n+  { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16qi3_maskz, \"__builtin_ia32_vpermt2varqi128_maskz\", IX86_BUILTIN_VPERMT2VARQI128_MASKZ, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI },\n   { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermi2varv32qi3_mask, \"__builtin_ia32_vpermi2varqi256_mask\", IX86_BUILTIN_VPERMI2VARQI256, UNKNOWN, (int) V32QI_FTYPE_V32QI_V32QI_V32QI_USI },\n   { OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermi2varv16qi3_mask, \"__builtin_ia32_vpermi2varqi128_mask\", IX86_BUILTIN_VPERMI2VARQI128, UNKNOWN, (int) V16QI_FTYPE_V16QI_V16QI_V16QI_UHI },\n };"}, {"sha": "65324b0feed439bd7b4dd6ea642b6e982ad5aae5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "patch": "@@ -1,3 +1,8 @@\n+2016-03-22  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\n+\tPR target/70325\n+\t* gcc.target/i386/pr70325.c: New test.\n+\n 2016-03-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/70329"}, {"sha": "e2b9342658c3efe2e91fb69d336a9ab52c38dc46", "filename": "gcc/testsuite/gcc.target/i386/pr70325.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70325.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70325.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70325.c?ref=cd6c27ac2113ea7c94a90fb84fb5c78e9d0d84bf", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/70325 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512vl -O2\" } */\n+\n+typedef char C __attribute((__vector_size__(32)));\n+typedef int I __attribute((__vector_size__(32)));\n+\n+void\n+f(int a,I b)\n+{\n+  __builtin_ia32_storedquqi256_mask((C*)f,(C)b,a); /* { dg-warning \"implicit declaration of function\" } */\n+}"}]}