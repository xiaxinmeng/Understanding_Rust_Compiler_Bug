{"sha": "4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2OWVmZGY3ZDkyYmMwYTAxOGE2NjRmY2NjNmQ3MTVlOWRlMGQ5Zg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-14T12:23:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-14T12:23:34Z"}, "message": "[multiple changes]\n\n2016-06-14  Tristan Gingold  <gingold@adacore.com>\n\n\t* einfo.adb, einfo.ads (Has_Timing_Event,\n\tSet_Has_Timing_Event): Add Has_Timing_Event flag.\n\t(Write_Entity_Flags): Display * sem_util.ads, sem_util.adb:\n\t(Propagate_Type_Has_Flags): New procedure to factorize code.\n\t* exp_ch3.adb (Expand_Freeze_Array_Type,\n\tExpand_Freeze_Record_Type): Call Propagate_Type_Has_Flags.\n\t* sem_ch3.adb (Access_Type_Decalaration): Initialize\n\tHas_Timing_Event flag.\t(Analyze_Object_Declaration):\n\tMove code that check No_Local_Timing_Events near\n\tthe code that check No_Local_Protected_Objects.\n\t(Analyze_Private_Extension_Declaration, Array_Type_Declaration)\n\t(Build_Derived_Type, Copy_Array_Base_Type_Attributes,\n\tProcess_Full_View) (Record_Type_Definition): Call\n\tPropagate_Type_Has_Flags.\n\t* sem_ch4.adb (Analyze_Allocator): Check No_Local_Timing_Events.\n\t* sem_ch7.adb (New_Private_Type): Set Has_Timing_Event on the\n\tTiming_Event type.\n\t(Uninstall_Declaration): Call Propagate_Type_Has_Flags.\n\t* sem_ch9.adb (Analyze_Protected_Definition): Call\n\tPropagate_Type_Has_Flags.\n\n2016-06-14  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem.ads: Minor style fix.\n\nFrom-SVN: r237434", "tree": {"sha": "44902dbb1fb8d8b10c405d92dde10e67b48d26df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44902dbb1fb8d8b10c405d92dde10e67b48d26df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/comments", "author": null, "committer": null, "parents": [{"sha": "44900051ac48c87701dbbf3d485386013d56c97c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44900051ac48c87701dbbf3d485386013d56c97c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44900051ac48c87701dbbf3d485386013d56c97c"}], "stats": {"total": 199, "additions": 137, "deletions": 62}, "files": [{"sha": "479c7f0488732b4d7f39be93fa233db6ff158cc9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -1,3 +1,30 @@\n+2016-06-14  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* einfo.adb, einfo.ads (Has_Timing_Event,\n+\tSet_Has_Timing_Event): Add Has_Timing_Event flag.\n+\t(Write_Entity_Flags): Display * sem_util.ads, sem_util.adb:\n+\t(Propagate_Type_Has_Flags): New procedure to factorize code.\n+\t* exp_ch3.adb (Expand_Freeze_Array_Type,\n+\tExpand_Freeze_Record_Type): Call Propagate_Type_Has_Flags.\n+\t* sem_ch3.adb (Access_Type_Decalaration): Initialize\n+\tHas_Timing_Event flag.\t(Analyze_Object_Declaration):\n+\tMove code that check No_Local_Timing_Events near\n+\tthe code that check No_Local_Protected_Objects.\n+\t(Analyze_Private_Extension_Declaration, Array_Type_Declaration)\n+\t(Build_Derived_Type, Copy_Array_Base_Type_Attributes,\n+\tProcess_Full_View) (Record_Type_Definition): Call\n+\tPropagate_Type_Has_Flags.\n+\t* sem_ch4.adb (Analyze_Allocator): Check No_Local_Timing_Events.\n+\t* sem_ch7.adb (New_Private_Type): Set Has_Timing_Event on the\n+\tTiming_Event type.\n+\t(Uninstall_Declaration): Call Propagate_Type_Has_Flags.\n+\t* sem_ch9.adb (Analyze_Protected_Definition): Call\n+\tPropagate_Type_Has_Flags.\n+\n+2016-06-14  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem.ads: Minor style fix.\n+\n 2016-06-14  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Analyze_Associations): An actual parameter"}, {"sha": "8f4a1347615a38ed84296ed9e0276aaa63394953", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -601,10 +601,21 @@ package body Einfo is\n    --    Is_Exception_Handler            Flag286\n    --    Rewritten_For_C                 Flag287\n    --    Predicates_Ignored              Flag288\n+   --    Has_Timing_Event                Flag289\n \n-   --    (unused)                        Flag289\n-   --    (unused)                        Flag300\n+   --    (unused)                        Flag290\n+\n+   --    (unused)                        Flag291\n+   --    (unused)                        Flag292\n+   --    (unused)                        Flag293\n+   --    (unused)                        Flag294\n+   --    (unused)                        Flag295\n+   --    (unused)                        Flag296\n+   --    (unused)                        Flag297\n+   --    (unused)                        Flag298\n+   --    (unused)                        Flag299\n \n+   --    (unused)                        Flag300\n    --    (unused)                        Flag301\n    --    (unused)                        Flag302\n    --    (unused)                        Flag303\n@@ -1879,6 +1890,11 @@ package body Einfo is\n       return Flag228 (Id);\n    end Has_Thunks;\n \n+   function Has_Timing_Event (Id : E) return B is\n+   begin\n+      return Flag289 (Base_Type (Id));\n+   end Has_Timing_Event;\n+\n    function Has_Unchecked_Union (Id : E) return B is\n    begin\n       return Flag123 (Base_Type (Id));\n@@ -4867,6 +4883,11 @@ package body Einfo is\n       Set_Flag228 (Id, V);\n    end Set_Has_Thunks;\n \n+   procedure Set_Has_Timing_Event (Id : E; V : B := True) is\n+   begin\n+      Set_Flag289 (Id, V);\n+   end Set_Has_Timing_Event;\n+\n    procedure Set_Has_Unchecked_Union (Id : E; V : B := True) is\n    begin\n       pragma Assert (Id = Base_Type (Id));\n@@ -8972,6 +8993,7 @@ package body Einfo is\n       W (\"Has_Storage_Size_Clause\",         Flag23  (Id));\n       W (\"Has_Stream_Size_Clause\",          Flag184 (Id));\n       W (\"Has_Task\",                        Flag30  (Id));\n+      W (\"Has_Timing_Event\",                Flag289 (Id));\n       W (\"Has_Thunks\",                      Flag228 (Id));\n       W (\"Has_Unchecked_Union\",             Flag123 (Id));\n       W (\"Has_Unknown_Discriminants\",       Flag72  (Id));"}, {"sha": "405455d1b0e376b809f62c7e754948d4c06cfa5c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -2050,6 +2050,12 @@ package Einfo is\n --       such an object must create the required tasks. Note: the flag is not\n --       set on access types, even if they designate an object that Has_Task.\n \n+--    Has_Timing_Event (Flag289) [base type only]\n+--       Defined in all type entities. Set on language defined type\n+--       Ada.Real_Time.Timing_Events.Timing_Event, and also (recursively) on\n+--       any composite type which has a component for which Has_Timing_Event\n+--       is set. Used for the No_Local_Timing_Event restriction.\n+\n --    Has_Thunks (Flag228)\n --       Applies to E_Constant entities marked Is_Tag. True for secondary tag\n --       referencing a dispatch table whose contents are pointers to thunks.\n@@ -5507,6 +5513,7 @@ package Einfo is\n    --    Has_Static_Predicate                (Flag269)\n    --    Has_Static_Predicate_Aspect         (Flag259)\n    --    Has_Task                            (Flag30)   (base type only)\n+   --    Has_Timing_Event                    (Flag289)  (base type only)\n    --    Has_Unchecked_Union                 (Flag123)  (base type only)\n    --    Has_Volatile_Components             (Flag87)   (base type only)\n    --    In_Use                              (Flag8)\n@@ -6960,6 +6967,7 @@ package Einfo is\n    function Has_Storage_Size_Clause             (Id : E) return B;\n    function Has_Stream_Size_Clause              (Id : E) return B;\n    function Has_Task                            (Id : E) return B;\n+   function Has_Timing_Event                    (Id : E) return B;\n    function Has_Thunks                          (Id : E) return B;\n    function Has_Unchecked_Union                 (Id : E) return B;\n    function Has_Unknown_Discriminants           (Id : E) return B;\n@@ -7629,6 +7637,7 @@ package Einfo is\n    procedure Set_Has_Storage_Size_Clause         (Id : E; V : B := True);\n    procedure Set_Has_Stream_Size_Clause          (Id : E; V : B := True);\n    procedure Set_Has_Task                        (Id : E; V : B := True);\n+   procedure Set_Has_Timing_Event                (Id : E; V : B := True);\n    procedure Set_Has_Thunks                      (Id : E; V : B := True);\n    procedure Set_Has_Unchecked_Union             (Id : E; V : B := True);\n    procedure Set_Has_Unknown_Discriminants       (Id : E; V : B := True);\n@@ -8413,6 +8422,7 @@ package Einfo is\n    pragma Inline (Has_Storage_Size_Clause);\n    pragma Inline (Has_Stream_Size_Clause);\n    pragma Inline (Has_Task);\n+   pragma Inline (Has_Timing_Event);\n    pragma Inline (Has_Thunks);\n    pragma Inline (Has_Unchecked_Union);\n    pragma Inline (Has_Unknown_Discriminants);\n@@ -8922,6 +8932,7 @@ package Einfo is\n    pragma Inline (Set_Has_Storage_Size_Clause);\n    pragma Inline (Set_Has_Stream_Size_Clause);\n    pragma Inline (Set_Has_Task);\n+   pragma Inline (Set_Has_Timing_Event);\n    pragma Inline (Set_Has_Thunks);\n    pragma Inline (Set_Has_Unchecked_Union);\n    pragma Inline (Set_Has_Unknown_Discriminants);"}, {"sha": "b5074174211e6e446b7d8161625a6e99ef1c56f2", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -4612,13 +4612,12 @@ package body Exp_Ch3 is\n          --  been a private type at the point of definition. Same if component\n          --  type is controlled or contains protected objects.\n \n-         Set_Has_Task       (Base, Has_Task      (Comp_Typ));\n-         Set_Has_Protected  (Base, Has_Protected (Comp_Typ));\n+         Propagate_Type_Has_Flags (Base, Comp_Typ);\n          Set_Has_Controlled_Component\n-                            (Base, Has_Controlled_Component\n+                              (Base, Has_Controlled_Component\n                                                  (Comp_Typ)\n-                                     or else\n-                                   Is_Controlled (Comp_Typ));\n+                                       or else\n+                                     Is_Controlled (Comp_Typ));\n \n          if No (Init_Proc (Base)) then\n \n@@ -5185,13 +5184,7 @@ package body Exp_Ch3 is\n       while Present (Comp) loop\n          Comp_Typ := Etype (Comp);\n \n-         if Has_Task (Comp_Typ) then\n-            Set_Has_Task (Typ);\n-         end if;\n-\n-         if Has_Protected (Comp_Typ) then\n-            Set_Has_Protected (Typ);\n-         end if;\n+         Propagate_Type_Has_Flags (Typ, Comp_Typ);\n \n          --  Do not set Has_Controlled_Component on a class-wide equivalent\n          --  type. See Make_CW_Equivalent_Type."}, {"sha": "c52f6b492e7c719fd892d7a472967c7f28900bb2", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,7 +122,7 @@\n --        xx : x := y * z;\n --      end record;\n \n---      for x'small use 0.25\n+--      for x'small use 0.25;\n \n --  The expander is in charge of dealing with fixed-point, and of course the\n --  small declaration, which is not too late, since the declaration of type q"}, {"sha": "9f13bd9d031a17ff9344dff4a9123815e9357f51", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 19, "deletions": 34, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -1437,8 +1437,9 @@ package body Sem_Ch3 is\n       --  and to Has_Protected.\n \n       Set_Has_Task                 (T, False);\n-      Set_Has_Controlled_Component (T, False);\n       Set_Has_Protected            (T, False);\n+      Set_Has_Timing_Event         (T, False);\n+      Set_Has_Controlled_Component (T, False);\n \n       --  Initialize field Finalization_Master explicitly to Empty, to avoid\n       --  problems where an incomplete view of this entity has been previously\n@@ -3585,6 +3586,12 @@ package body Sem_Ch3 is\n          end if;\n       end if;\n \n+      --  Check for violation of No_Local_Timing_Events\n+\n+      if Has_Timing_Event (T) and then not Is_Library_Level_Entity (Id) then\n+         Check_Restriction (No_Local_Timing_Events, Id);\n+      end if;\n+\n       --  The actual subtype of the object is the nominal subtype, unless\n       --  the nominal one is unconstrained and obtained from the expression.\n \n@@ -4362,15 +4369,6 @@ package body Sem_Ch3 is\n          Set_In_Private_Part (Id);\n       end if;\n \n-      --  Check for violation of No_Local_Timing_Events\n-\n-      if Restriction_Check_Required (No_Local_Timing_Events)\n-        and then not Is_Library_Level_Entity (Id)\n-        and then Is_RTE (Etype (Id), RE_Timing_Event)\n-      then\n-         Check_Restriction (No_Local_Timing_Events, N);\n-      end if;\n-\n    <<Leave>>\n       --  Initialize the refined state of a variable here because this is a\n       --  common destination for legal and illegal object declarations.\n@@ -4515,9 +4513,8 @@ package body Sem_Ch3 is\n       Init_Size_Align      (T);\n       Set_Default_SSO      (T);\n \n-      Set_Etype            (T,            Parent_Base);\n-      Set_Has_Task         (T, Has_Task  (Parent_Base));\n-      Set_Has_Protected    (T, Has_Task  (Parent_Base));\n+      Set_Etype            (T,                Parent_Base);\n+      Propagate_Type_Has_Flags (T, Parent_Base);\n \n       Set_Convention       (T, Convention     (Parent_Type));\n       Set_First_Rep_Item   (T, First_Rep_Item (Parent_Type));\n@@ -5576,8 +5573,7 @@ package body Sem_Ch3 is\n \n          Set_First_Index       (Implicit_Base, First_Index (T));\n          Set_Component_Type    (Implicit_Base, Element_Type);\n-         Set_Has_Task          (Implicit_Base, Has_Task (Element_Type));\n-         Set_Has_Protected     (Implicit_Base, Has_Protected (Element_Type));\n+         Propagate_Type_Has_Flags (Implicit_Base, Element_Type);\n          Set_Component_Size    (Implicit_Base, Uint_0);\n          Set_Packed_Array_Impl_Type (Implicit_Base, Empty);\n          Set_Has_Controlled_Component (Implicit_Base,\n@@ -5603,8 +5599,7 @@ package body Sem_Ch3 is\n          Set_Is_Constrained           (T, False);\n          Set_First_Index              (T, First (Subtype_Marks (Def)));\n          Set_Has_Delayed_Freeze       (T, True);\n-         Set_Has_Task                 (T, Has_Task      (Element_Type));\n-         Set_Has_Protected            (T, Has_Protected (Element_Type));\n+         Propagate_Type_Has_Flags     (T, Element_Type);\n          Set_Has_Controlled_Component (T, Has_Controlled_Component\n                                                         (Element_Type)\n                                             or else\n@@ -8951,12 +8946,11 @@ package body Sem_Ch3 is\n    begin\n       --  Set common attributes\n \n-      Set_Scope              (Derived_Type, Current_Scope);\n+      Set_Scope                (Derived_Type, Current_Scope);\n \n-      Set_Etype              (Derived_Type,                Parent_Base);\n-      Set_Ekind              (Derived_Type, Ekind         (Parent_Base));\n-      Set_Has_Task           (Derived_Type, Has_Task      (Parent_Base));\n-      Set_Has_Protected      (Derived_Type, Has_Protected (Parent_Base));\n+      Set_Etype                (Derived_Type,                Parent_Base);\n+      Set_Ekind                (Derived_Type, Ekind         (Parent_Base));\n+      Propagate_Type_Has_Flags (Derived_Type, Parent_Base);\n \n       Set_Size_Info          (Derived_Type,                     Parent_Type);\n       Set_RM_Size            (Derived_Type, RM_Size            (Parent_Type));\n@@ -13713,8 +13707,7 @@ package body Sem_Ch3 is\n       Set_Component_Size           (T1, Component_Size           (T2));\n       Set_Has_Controlled_Component (T1, Has_Controlled_Component (T2));\n       Set_Has_Non_Standard_Rep     (T1, Has_Non_Standard_Rep     (T2));\n-      Set_Has_Protected            (T1, Has_Protected            (T2));\n-      Set_Has_Task                 (T1, Has_Task                 (T2));\n+      Propagate_Type_Has_Flags     (T1, T2);\n       Set_Is_Packed                (T1, Is_Packed                (T2));\n       Set_Has_Aliased_Components   (T1, Has_Aliased_Components   (T2));\n       Set_Has_Atomic_Components    (T1, Has_Atomic_Components    (T2));\n@@ -19931,9 +19924,7 @@ package body Sem_Ch3 is\n                Set_Class_Wide_Type\n                  (Base_Type (Full_T), Class_Wide_Type (Priv_T));\n \n-               Set_Has_Task (Class_Wide_Type (Priv_T), Has_Task      (Full_T));\n-               Set_Has_Protected\n-                            (Class_Wide_Type (Priv_T), Has_Protected (Full_T));\n+               Propagate_Type_Has_Flags (Class_Wide_Type (Priv_T), Full_T);\n             end if;\n          end;\n       end if;\n@@ -21289,13 +21280,7 @@ package body Sem_Ch3 is\n             Init_Component_Location (Component);\n          end if;\n \n-         if Has_Task (Etype (Component)) then\n-            Set_Has_Task (T);\n-         end if;\n-\n-         if Has_Protected (Etype (Component)) then\n-            Set_Has_Protected (T);\n-         end if;\n+         Propagate_Type_Has_Flags (T, Etype (Component));\n \n          if Ekind (Component) /= E_Component then\n             null;"}, {"sha": "20d1a740765632b7f34a63e34f0f8b30a55d60a3", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -812,6 +812,14 @@ package body Sem_Ch4 is\n          Check_Restriction (No_Local_Protected_Objects, N);\n       end if;\n \n+      --  Likewise for No_Local_Timing_Events\n+\n+      if Has_Timing_Event (Designated_Type (Acc_Type))\n+        and then not Is_Library_Level_Entity (Acc_Type)\n+      then\n+         Check_Restriction (No_Local_Timing_Events, N);\n+      end if;\n+\n       --  If the No_Streams restriction is set, check that the type of the\n       --  object is not, and does not contain, any subtype derived from\n       --  Ada.Streams.Root_Stream_Type. Note that we guard the call to"}, {"sha": "bb47589004908353d4e3bbcc16b150e65bf39b1b", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -47,6 +47,7 @@ with Nlists;    use Nlists;\n with Opt;       use Opt;\n with Output;    use Output;\n with Restrict;  use Restrict;\n+with Rtsfind;   use Rtsfind;\n with Sem;       use Sem;\n with Sem_Aux;   use Sem_Aux;\n with Sem_Cat;   use Sem_Cat;\n@@ -2446,6 +2447,12 @@ package body Sem_Ch7 is\n          Set_Is_Limited_Record           (Id, Limited_Present (Def));\n          Set_Has_Delayed_Freeze          (Id, True);\n \n+         --  Recognize Ada.Real_Time.Timing_Events.Timing_Events here\n+\n+         if Is_RTE (Id, RE_Timing_Event) then\n+            Set_Has_Timing_Event (Id);\n+         end if;\n+\n          --  Create a class-wide type with the same attributes\n \n          Make_Class_Wide_Type (Id);\n@@ -2578,8 +2585,8 @@ package body Sem_Ch7 is\n             Set_Finalize_Storage_Only\n                               (Priv, Finalize_Storage_Only\n                                                    (Base_Type (Full)));\n-            Set_Has_Task      (Priv, Has_Task      (Base_Type (Full)));\n-            Set_Has_Protected (Priv, Has_Protected (Base_Type (Full)));\n+            Propagate_Type_Has_Flags\n+                              (Priv, Base_Type (Full));\n             Set_Has_Controlled_Component\n                               (Priv, Has_Controlled_Component\n                                                    (Base_Type (Full)));"}, {"sha": "adfd27d0e981ab0661188ade0bb688793e5d313b", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -1937,16 +1937,8 @@ package body Sem_Ch9 is\n       while Present (E) loop\n          if Ekind_In (E, E_Function, E_Procedure) then\n             Set_Convention (E, Convention_Protected);\n-\n-         elsif Is_Task_Type (Etype (E))\n-           or else Has_Task (Etype (E))\n-         then\n-            Set_Has_Task (Current_Scope);\n-\n-         elsif Is_Protected_Type (Etype (E))\n-           or else Has_Protected (Etype (E))\n-         then\n-            Set_Has_Protected (Current_Scope);\n+         else\n+            Propagate_Type_Has_Flags (Current_Scope, Etype (E));\n          end if;\n \n          Next_Entity (E);"}, {"sha": "6237d7b5d0cba91f7b80e00a682f6778398de54f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -18300,6 +18300,27 @@ package body Sem_Util is\n       Set_Sloc (Endl, Loc);\n    end Process_End_Label;\n \n+   ------------------------------\n+   -- Propagate_Type_Has_Flags --\n+   ------------------------------\n+\n+   procedure Propagate_Type_Has_Flags\n+     (Typ      : Entity_Id;\n+      Comp_Typ : Entity_Id) is\n+   begin\n+      if Has_Task (Comp_Typ) then\n+         Set_Has_Task (Typ);\n+      end if;\n+\n+      if Has_Protected (Comp_Typ) then\n+         Set_Has_Protected (Typ);\n+      end if;\n+\n+      if Has_Timing_Event (Comp_Typ) then\n+         Set_Has_Timing_Event (Typ);\n+      end if;\n+   end Propagate_Type_Has_Flags;\n+\n    ---------------------------------------\n    -- Record_Possible_Part_Of_Reference --\n    ---------------------------------------"}, {"sha": "d0e3d4ee87f67404148de65a131155a1fdf60bcc", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4969efdf7d92bc0a018a664fccc6d715e9de0d9f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=4969efdf7d92bc0a018a664fccc6d715e9de0d9f", "patch": "@@ -2003,6 +2003,15 @@ package Sem_Util is\n    --  parameter Ent gives the entity to which the End_Label refers,\n    --  and to which cross-references are to be generated.\n \n+   procedure Propagate_Type_Has_Flags\n+     (Typ      : Entity_Id;\n+      Comp_Typ : Entity_Id);\n+   --  Set Has_Task, Has_Protected and Has_Timing_Event on Typ when the flags\n+   --  are set on Comp_Typ. This follows the definition of these flags which\n+   --  are set (recursively) on any composite type which has a component marked\n+   --  by one of these flags. This procedure can only set flags for Typ, and\n+   --  never clear them. Comp_Typ is the type of a component or a parent.\n+\n    procedure Record_Possible_Part_Of_Reference\n      (Var_Id : Entity_Id;\n       Ref    : Node_Id);"}]}