{"sha": "433e4164339f18d0b8798968444a56b681b5232c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMzZTQxNjQzMzlmMThkMGI4Nzk4OTY4NDQ0YTU2YjY4MWI1MjMyYw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-11-05T12:14:45Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2014-11-05T12:14:45Z"}, "message": "Reorganize post-ra pipeline for targets without register allocation.\n\n\t* passes.def (pass_compute_alignments, pass_duplicate_computed_gotos,\n\tpass_variable_tracking, pass_free_cfg, pass_machine_reorg,\n\tpass_cleanup_barriers, pass_delay_slots,\n\tpass_split_for_shorten_branches, pass_convert_to_eh_region_ranges,\n\tpass_shorten_branches, pass_est_nothrow_function_flags,\n\tpass_dwarf2_frame, pass_final): Move outside of pass_postreload and\n\tinto pass_late_compilation.\n\t(pass_late_compilation): Add.\n\t* passes.c (pass_data_late_compilation, pass_late_compilation,\n\tmake_pass_late_compilation): New.\n\t* timevar.def (TV_LATE_COMPILATION): New.\n\nFrom-SVN: r217124", "tree": {"sha": "88c6a7cd78cd2d08ee7660f43cdd212ed29d680e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c6a7cd78cd2d08ee7660f43cdd212ed29d680e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/433e4164339f18d0b8798968444a56b681b5232c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/433e4164339f18d0b8798968444a56b681b5232c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/433e4164339f18d0b8798968444a56b681b5232c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/433e4164339f18d0b8798968444a56b681b5232c/comments", "author": null, "committer": null, "parents": [{"sha": "e0d14c396aaa626e054284cf96a250c7aaf907e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0d14c396aaa626e054284cf96a250c7aaf907e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0d14c396aaa626e054284cf96a250c7aaf907e4"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "922283e5cebd92a0c4fefafd1b5ead027dba3ffa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433e4164339f18d0b8798968444a56b681b5232c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433e4164339f18d0b8798968444a56b681b5232c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=433e4164339f18d0b8798968444a56b681b5232c", "patch": "@@ -1,5 +1,17 @@\n 2014-11-05  Bernd Schmidt  <bernds@codesourcery.com>\n \n+\t* passes.def (pass_compute_alignments, pass_duplicate_computed_gotos,\n+\tpass_variable_tracking, pass_free_cfg, pass_machine_reorg,\n+\tpass_cleanup_barriers, pass_delay_slots,\n+\tpass_split_for_shorten_branches, pass_convert_to_eh_region_ranges,\n+\tpass_shorten_branches, pass_est_nothrow_function_flags,\n+\tpass_dwarf2_frame, pass_final): Move outside of pass_postreload and\n+\tinto pass_late_compilation.\n+\t(pass_late_compilation): Add.\n+\t* passes.c (pass_data_late_compilation, pass_late_compilation,\n+\tmake_pass_late_compilation): New.\n+\t* timevar.def (TV_LATE_COMPILATION): New.\n+\n \t* target.def (omit_struct_return_reg): New data hook.\n \t* doc/tm.texi.in: Add @hook TARGET_OMIT_STRUCT_RETURN_REG.\n \t* doc/tm.texi: Regenerate."}, {"sha": "9ec0ebfc629a27070de10880c882dc3999180a2e", "filename": "gcc/passes.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433e4164339f18d0b8798968444a56b681b5232c/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433e4164339f18d0b8798968444a56b681b5232c/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=433e4164339f18d0b8798968444a56b681b5232c", "patch": "@@ -576,6 +576,44 @@ make_pass_postreload (gcc::context *ctxt)\n   return new pass_postreload (ctxt);\n }\n \n+namespace {\n+\n+const pass_data pass_data_late_compilation =\n+{\n+  RTL_PASS, /* type */\n+  \"*all-late_compilation\", /* name */\n+  OPTGROUP_NONE, /* optinfo_flags */\n+  TV_LATE_COMPILATION, /* tv_id */\n+  PROP_rtl, /* properties_required */\n+  0, /* properties_provided */\n+  0, /* properties_destroyed */\n+  0, /* todo_flags_start */\n+  0, /* todo_flags_finish */\n+};\n+\n+class pass_late_compilation : public rtl_opt_pass\n+{\n+public:\n+  pass_late_compilation (gcc::context *ctxt)\n+    : rtl_opt_pass (pass_data_late_compilation, ctxt)\n+  {}\n+\n+  /* opt_pass methods: */\n+  virtual bool gate (function *)\n+  {\n+    return reload_completed || targetm.no_register_allocation;\n+  }\n+\n+}; // class pass_late_compilation\n+\n+} // anon namespace\n+\n+static rtl_opt_pass *\n+make_pass_late_compilation (gcc::context *ctxt)\n+{\n+  return new pass_late_compilation (ctxt);\n+}\n+\n \n \n /* Set the static pass number of pass PASS to ID and record that"}, {"sha": "6f6a4931bc5866efaf00e75da64bc269a47ba7d5", "filename": "gcc/passes.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433e4164339f18d0b8798968444a56b681b5232c/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433e4164339f18d0b8798968444a56b681b5232c/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=433e4164339f18d0b8798968444a56b681b5232c", "patch": "@@ -417,6 +417,9 @@ along with GCC; see the file COPYING3.  If not see\n \t      NEXT_PASS (pass_split_before_regstack);\n \t      NEXT_PASS (pass_stack_regs_run);\n \t  POP_INSERT_PASSES ()\n+      POP_INSERT_PASSES ()\n+      NEXT_PASS (pass_late_compilation);\n+      PUSH_INSERT_PASSES_WITHIN (pass_late_compilation)\n \t  NEXT_PASS (pass_compute_alignments);\n \t  NEXT_PASS (pass_variable_tracking);\n \t  NEXT_PASS (pass_free_cfg);"}, {"sha": "b74cbb0bca730fcf341f055cb9acd17f8ba67c2b", "filename": "gcc/timevar.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433e4164339f18d0b8798968444a56b681b5232c/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433e4164339f18d0b8798968444a56b681b5232c/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=433e4164339f18d0b8798968444a56b681b5232c", "patch": "@@ -272,6 +272,7 @@ DEFTIMEVAR (TV_EARLY_LOCAL\t     , \"early local passes\")\n DEFTIMEVAR (TV_OPTIMIZE\t\t     , \"unaccounted optimizations\")\n DEFTIMEVAR (TV_REST_OF_COMPILATION   , \"rest of compilation\")\n DEFTIMEVAR (TV_POSTRELOAD\t     , \"unaccounted post reload\")\n+DEFTIMEVAR (TV_LATE_COMPILATION\t     , \"unaccounted late compilation\")\n DEFTIMEVAR (TV_REMOVE_UNUSED\t     , \"remove unused locals\")\n DEFTIMEVAR (TV_ADDRESS_TAKEN\t     , \"address taken\")\n DEFTIMEVAR (TV_TODO\t\t     , \"unaccounted todo\")"}]}