{"sha": "fabc9e2248253f837eeb6efdee3f82497b24ee96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiYzllMjI0ODI1M2Y4MzdlZWI2ZWZkZWUzZjgyNDk3YjI0ZWU5Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-10-06T16:39:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-10-06T16:39:00Z"}, "message": "arm.c (arm_emit_probe_stack_range): Adjust comment.\n\n\t* config/arm/arm.c (arm_emit_probe_stack_range): Adjust comment.\n\t(output_probe_stack_range): Rotate the loop and simplify.\n\t(thumb1_expand_prologue): Tweak sorry message.\n\t* config/arm/arm.md (probe_stack): Use bare string.\n\nFrom-SVN: r228534", "tree": {"sha": "02cf3c219e197b007b2a20fb290309ce3f61777c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02cf3c219e197b007b2a20fb290309ce3f61777c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fabc9e2248253f837eeb6efdee3f82497b24ee96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabc9e2248253f837eeb6efdee3f82497b24ee96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabc9e2248253f837eeb6efdee3f82497b24ee96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabc9e2248253f837eeb6efdee3f82497b24ee96/comments", "author": null, "committer": null, "parents": [{"sha": "7c9bb341b06dba75504f91d485907a4562d11347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9bb341b06dba75504f91d485907a4562d11347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9bb341b06dba75504f91d485907a4562d11347"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "6204617f0715a4df37f9eed1393e3d150e304869", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabc9e2248253f837eeb6efdee3f82497b24ee96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabc9e2248253f837eeb6efdee3f82497b24ee96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fabc9e2248253f837eeb6efdee3f82497b24ee96", "patch": "@@ -1,3 +1,10 @@\n+2015-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/arm/arm.c (arm_emit_probe_stack_range): Adjust comment.\n+\t(output_probe_stack_range): Rotate the loop and simplify.\n+\t(thumb1_expand_prologue): Tweak sorry message.\n+\t* config/arm/arm.md (probe_stack): Use bare string.\n+\n 2015-10-06  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc (lm32-elf): Add newlib-stdint.h to tm_file."}, {"sha": "0bf1164845cc7bbb34de4f9e3bab74c855c2800c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabc9e2248253f837eeb6efdee3f82497b24ee96/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabc9e2248253f837eeb6efdee3f82497b24ee96/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=fabc9e2248253f837eeb6efdee3f82497b24ee96", "patch": "@@ -21262,11 +21262,12 @@ arm_emit_probe_stack_range (HOST_WIDE_INT first, HOST_WIDE_INT size,\n \n       /* Step 3: the loop\n \n-\t while (TEST_ADDR != LAST_ADDR)\n+\t do\n \t   {\n \t     TEST_ADDR = TEST_ADDR + PROBE_INTERVAL\n \t     probe at TEST_ADDR\n \t   }\n+\t while (TEST_ADDR != LAST_ADDR)\n \n \t probes at FIRST + N * PROBE_INTERVAL for values of N from 1\n \t until it is equal to ROUNDED_SIZE.  */\n@@ -21311,22 +21312,22 @@ output_probe_stack_range (rtx reg1, rtx reg2)\n \n   ASM_GENERATE_INTERNAL_LABEL (loop_lab, \"LPSRL\", labelno++);\n \n+  /* Loop.  */\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, loop_lab);\n \n-   /* Test if TEST_ADDR == LAST_ADDR.  */\n+  /* TEST_ADDR = TEST_ADDR + PROBE_INTERVAL.  */\n   xops[0] = reg1;\n-  xops[1] = reg2;\n-  output_asm_insn (\"cmp\\t%0, %1\", xops);\n+  xops[1] = GEN_INT (PROBE_INTERVAL);\n+  output_asm_insn (\"sub\\t%0, %0, %1\", xops);\n \n-  if (TARGET_THUMB2)\n-    fputs (\"\\tittt\\tne\\n\", asm_out_file);\n+  /* Probe at TEST_ADDR.  */\n+  output_asm_insn (\"str\\tr0, [%0, #0]\", xops);\n \n-  /* TEST_ADDR = TEST_ADDR + PROBE_INTERVAL.  */\n-  xops[1] = GEN_INT (PROBE_INTERVAL);\n-  output_asm_insn (\"subne\\t%0, %0, %1\", xops);\n+  /* Test if TEST_ADDR == LAST_ADDR.  */\n+  xops[1] = reg2;\n+  output_asm_insn (\"cmp\\t%0, %1\", xops);\n \n-  /* Probe at TEST_ADDR and branch.  */\n-  output_asm_insn (\"strne\\tr0, [%0, #0]\", xops);\n+  /* Branch.  */\n   fputs (\"\\tbne\\t\", asm_out_file);\n   assemble_name_raw (asm_out_file, loop_lab);\n   fputc ('\\n', asm_out_file);\n@@ -24869,7 +24870,7 @@ thumb1_expand_prologue (void)\n \n   /* If we have a frame, then do stack checking.  FIXME: not implemented.  */\n   if (flag_stack_check == STATIC_BUILTIN_STACK_CHECK && size)\n-    sorry (\"-fstack-check=specific for THUMB1\");\n+    sorry (\"-fstack-check=specific for Thumb-1\");\n \n   amount = offsets->outgoing_args - offsets->saved_regs;\n   amount -= 4 * thumb1_extra_regs_pushed (offsets, true);"}, {"sha": "c5985bbb50665085d5a8e1e39cc276237a361bbc", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fabc9e2248253f837eeb6efdee3f82497b24ee96/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fabc9e2248253f837eeb6efdee3f82497b24ee96/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=fabc9e2248253f837eeb6efdee3f82497b24ee96", "patch": "@@ -8262,9 +8262,7 @@\n   [(set (match_operand 0 \"memory_operand\" \"=m\")\n         (unspec [(const_int 0)] UNSPEC_PROBE_STACK))]\n   \"TARGET_32BIT\"\n-{\n-  return \"str%?\\\\tr0, %0\";\n-}\n+  \"str%?\\\\tr0, %0\"\n   [(set_attr \"type\" \"store1\")\n    (set_attr \"predicable\" \"yes\")]\n )"}]}