{"sha": "7de9e0a108c8bde8750dc0575afbb4aaa6bf978f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RlOWUwYTEwOGM4YmRlODc1MGRjMDU3NWFmYmI0YWFhNmJmOTc4Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2010-10-08T04:40:59Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2010-10-08T04:40:59Z"}, "message": "re PR debug/45673 (-fcompare-debug failure with minor difference in dumps)\n\nPR debug/45673\nPR debug/45604\nPR debug/45419\nPR debug/45408\n* tree-pretty-print.c (dump_generic_node): Explicitly dump the\ntype of MEM_REFs to INTEGER_CSTs.\n\nFrom-SVN: r165149", "tree": {"sha": "8928b411deda7d3ae2c7cb5cc355f5b0c3585060", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8928b411deda7d3ae2c7cb5cc355f5b0c3585060"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f/comments", "author": null, "committer": null, "parents": [{"sha": "5bd84829f73d467f67746090cd781973d674f2f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd84829f73d467f67746090cd781973d674f2f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd84829f73d467f67746090cd781973d674f2f3"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "3525466c3d9bf0aac43915dea56afe1447e445d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7de9e0a108c8bde8750dc0575afbb4aaa6bf978f", "patch": "@@ -1,3 +1,12 @@\n+2010-10-08  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/45673\n+\tPR debug/45604\n+\tPR debug/45419\n+\tPR debug/45408\n+\t* tree-pretty-print.c (dump_generic_node): Explicitly dump the\n+\ttype of MEM_REFs to INTEGER_CSTs.\n+\n 2010-10-07  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/m68hc11/m68hc11.c (m68hc11_print_operand): Call"}, {"sha": "8ec2dedbb1e51b0cd24a66fb567f86592d6a72f0", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7de9e0a108c8bde8750dc0575afbb4aaa6bf978f/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=7de9e0a108c8bde8750dc0575afbb4aaa6bf978f", "patch": "@@ -801,6 +801,10 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n     case MEM_REF:\n       {\n \tif (integer_zerop (TREE_OPERAND (node, 1))\n+\t    /* Dump the types of INTEGER_CSTs explicitly, for we can't\n+\t       infer them and MEM_ATTR caching will share MEM_REFs\n+\t       with differently-typed op0s.  */\n+\t    && TREE_CODE (TREE_OPERAND (node, 0)) != INTEGER_CST\n \t    /* Same pointer types, but ignoring POINTER_TYPE vs.\n \t       REFERENCE_TYPE.  */\n \t    && (TREE_TYPE (TREE_TYPE (TREE_OPERAND (node, 0)))\n@@ -1163,6 +1167,10 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n \t      || (TREE_CODE (op0) == MEM_REF\n \t\t  && TREE_CODE (TREE_OPERAND (op0, 0)) != ADDR_EXPR\n \t\t  && integer_zerop (TREE_OPERAND (op0, 1))\n+\t\t  /* Dump the types of INTEGER_CSTs explicitly, for we\n+\t\t     can't infer them and MEM_ATTR caching will share\n+\t\t     MEM_REFs with differently-typed op0s.  */\n+\t\t  && TREE_CODE (TREE_OPERAND (op0, 0)) != INTEGER_CST\n \t\t  /* Same pointer types, but ignoring POINTER_TYPE vs.\n \t\t     REFERENCE_TYPE.  */\n \t\t  && (TREE_TYPE (TREE_TYPE (TREE_OPERAND (op0, 0)))"}]}