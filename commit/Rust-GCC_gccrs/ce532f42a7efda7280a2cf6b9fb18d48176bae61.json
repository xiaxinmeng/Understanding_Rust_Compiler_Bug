{"sha": "ce532f42a7efda7280a2cf6b9fb18d48176bae61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1MzJmNDJhN2VmZGE3MjgwYTJjZjZiOWZiMThkNDgxNzZiYWU2MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:23:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-12T13:23:23Z"}, "message": "[multiple changes]\n\n2013-04-12  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Input_List): Detect an illegal dependency\n\tclause where both input and output lists are null.\n\t(Analyze_Pragma): Update the grammar of pragma Depends.\n\n2013-04-12  Vincent Celier  <celier@adacore.com>\n\n\t* gnatbind.adb (No_Restriction_List): Exclude restrictions that\n\ttake a parameter value, not a count.\n\t* prj.ads, prj.adb (Remove_All_Restricted_Languages): New procedure.\n\t* projects.texi: Complete documentation of attribute Roots.\n\n2013-04-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch3.adb, exp_util.ads, checks.adb, freeze.adb, sem_attr.adb,\n\tsem_ch3.adb: Minor reformatting.\n\t* exp_ch4.adb (Size_In_Storage_Elements): Minor documentation\n\timprovement: note that the computation is pessimistic for bit\n\tpacked arrays.\n\t* gnat_rm.texi (Range_Length): Fix minor error in description\n\tof attribute.\n\nFrom-SVN: r197912", "tree": {"sha": "c6e061c40a19735dc657379219f3feb87a598eb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e061c40a19735dc657379219f3feb87a598eb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce532f42a7efda7280a2cf6b9fb18d48176bae61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce532f42a7efda7280a2cf6b9fb18d48176bae61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce532f42a7efda7280a2cf6b9fb18d48176bae61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce532f42a7efda7280a2cf6b9fb18d48176bae61/comments", "author": null, "committer": null, "parents": [{"sha": "d62520f3cf12ac65efcefaad12c63ba8e8348003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d62520f3cf12ac65efcefaad12c63ba8e8348003", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d62520f3cf12ac65efcefaad12c63ba8e8348003"}], "stats": {"total": 102, "additions": 88, "deletions": 14}, "files": [{"sha": "cf86c6f8ccb93afe8adfa18160c06bce0a3502aa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -1,3 +1,26 @@\n+2013-04-12  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Input_List): Detect an illegal dependency\n+\tclause where both input and output lists are null.\n+\t(Analyze_Pragma): Update the grammar of pragma Depends.\n+\n+2013-04-12  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatbind.adb (No_Restriction_List): Exclude restrictions that\n+\ttake a parameter value, not a count.\n+\t* prj.ads, prj.adb (Remove_All_Restricted_Languages): New procedure.\n+\t* projects.texi: Complete documentation of attribute Roots.\n+\n+2013-04-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch3.adb, exp_util.ads, checks.adb, freeze.adb, sem_attr.adb,\n+\tsem_ch3.adb: Minor reformatting.\n+\t* exp_ch4.adb (Size_In_Storage_Elements): Minor documentation\n+\timprovement: note that the computation is pessimistic for bit\n+\tpacked arrays.\n+\t* gnat_rm.texi (Range_Length): Fix minor error in description\n+\tof attribute.\n+\n 2013-04-12  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb (Find_Aspect): New routine."}, {"sha": "73aefb0698ca527bd07f85f04b560fcc5532aff3", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -996,7 +996,7 @@ package body Checks is\n          elsif Dsiz <= Standard_Long_Long_Integer_Size then\n             Ctyp := Standard_Long_Long_Integer;\n \n-            --  No check type exists, use runtime call\n+         --  No check type exists, use runtime call\n \n          else\n             if Nkind (N) = N_Op_Add then"}, {"sha": "e16adfb56ca0b5defdb148c008f226dd7b8d41cc", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -2780,8 +2780,8 @@ package body Exp_Ch3 is\n \n          --  Loop through components, skipping pragmas, in 2 steps. The first\n          --  step deals with regular components. The second step deals with\n-         --  components have per object constraints, and no explicit initia-\n-         --  lization.\n+         --  components that have per object constraints and no explicit\n+         --  initialization.\n \n          Has_POC := False;\n \n@@ -2799,9 +2799,7 @@ package body Exp_Ch3 is\n             --  Leave any processing of per-object constrained component for\n             --  the second pass.\n \n-            if Has_Access_Constraint (Id)\n-              and then No (Expression (Decl))\n-            then\n+            if Has_Access_Constraint (Id) and then No (Expression (Decl)) then\n                Has_POC := True;\n \n             --  Regular component cases"}, {"sha": "7eca831d2772e7ce98486e347ebf48857d0813ce", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -4149,6 +4149,10 @@ package body Exp_Ch4 is\n          --  are too large, and which in the absence of a check results in\n          --  undetected chaos ???\n \n+         --  Note in particular that this is a pessimistic estimate in the\n+         --  case of packed array types, where an array element might occupy\n+         --  just a fraction of a storage element???\n+\n          declare\n             Len : Node_Id;\n             Res : Node_Id;"}, {"sha": "39d1c0b0b848446e2ce6da00c3dcb80e413b81af", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -345,7 +345,7 @@ package Exp_Util is\n    --  This procedure ensures that type referenced by Typ is defined. For the\n    --  case of a type other than an Itype, nothing needs to be done, since\n    --  all such types have declaration nodes. For Itypes, an N_Itype_Reference\n-   --  node is generated and inserted at the given node N. This is typically\n+   --  node is generated and inserted as an action on node N. This is typically\n    --  used to ensure that an Itype is properly defined outside a conditional\n    --  construct when it is referenced in more than one branch.\n "}, {"sha": "6731022c3f5dd4a5b01616032f1c846975a6a8ca", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3484,7 +3484,7 @@ package body Freeze is\n                                  Set_Is_Packed            (Btyp);\n                                  Set_Has_Non_Standard_Rep (Btyp);\n \n-                                 --  Otherwise give an error message\n+                              --  Otherwise give an error message\n \n                               else\n                                  Error_Msg_NE"}, {"sha": "29ba674911223755a2b4549c7bf3e5a37e2b6be6", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -7135,7 +7135,7 @@ what is passed to @code{Allocate} and returned from @code{Deallocate}.\n the number of values represented by the subtype (zero for a null\n range).  The result is static for static subtypes.  @code{Range_Length}\n applied to the index subtype of a one dimensional array always gives the\n-same result as @code{Range} applied to the array itself.\n+same result as @code{Length} applied to the array itself.\n \n @node Ref\n @unnumberedsec Ref"}, {"sha": "b332b13b85a5b75b2ae5b8aa3704918e057f53d8", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -176,6 +176,15 @@ procedure Gnatbind is\n          Max_Storage_At_Blocking         => True,\n          --  Not checkable at compile time\n \n+         No_Specification_Of_Aspect      => True,\n+         --  Requires a parameter value, not a count\n+\n+         No_Use_Of_Attribute             => True,\n+         --  Requires a parameter value, not a count\n+\n+         No_Use_Of_Pragma                => True,\n+         --  Requires a parameter value, not a count\n+\n          others                          => False);\n \n       Additional_Restrictions_Listed : Boolean := False;"}, {"sha": "9e0e0aa38d1492e5009d04bd3962f830f25d8fcb", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,6 +112,15 @@ package body Prj is\n         new Restricted_Lang'(Name => Name_Find, Next => Restricted_Languages);\n    end Add_Restricted_Language;\n \n+   -------------------------------------\n+   -- Remove_All_Restricted_Languages --\n+   -------------------------------------\n+\n+   procedure Remove_All_Restricted_Languages is\n+   begin\n+      Restricted_Languages := null;\n+   end Remove_All_Restricted_Languages;\n+\n    -------------------\n    -- Add_To_Buffer --\n    -------------------"}, {"sha": "66f878688d0ace59361b3f70a6e799ba06698046", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,10 @@ package Prj is\n    --  Call by gprbuild for each language specify by switch\n    --  --restricted-to-languages=.\n \n+   procedure Remove_All_Restricted_Languages;\n+   --  Call by gprbuild in CodePeer mode to ignore switches\n+   --  --restricted-to-languages=.\n+\n    function Is_Allowed_Language (Name : Name_Id) return Boolean;\n    --  Returns True if --restricted-to-languages= is not used or if Name\n    --  is one of the restricted languages.\n@@ -1829,6 +1833,7 @@ package Prj is\n \n    Gprbuild_Flags : constant Processing_Flags;\n    Gprclean_Flags : constant Processing_Flags;\n+   Gprexec_Flags  : constant Processing_Flags;\n    Gnatmake_Flags : constant Processing_Flags;\n    --  Flags used by the various tools. They all display the error messages\n    --  through Prj.Err.\n@@ -2003,6 +2008,18 @@ private\n                        Missing_Source_Files       => Error,\n                        Ignore_Missing_With        => False);\n \n+   Gprexec_Flags :  constant Processing_Flags :=\n+                      (Report_Error               => null,\n+                       When_No_Sources            => Silent,\n+                       Require_Sources_Other_Lang => False,\n+                       Allow_Duplicate_Basenames  => False,\n+                       Compiler_Driver_Mandatory  => False,\n+                       Error_On_Unknown_Language  => True,\n+                       Require_Obj_Dirs           => Silent,\n+                       Allow_Invalid_External     => Error,\n+                       Missing_Source_Files       => Silent,\n+                       Ignore_Missing_With        => False);\n+\n    Gnatmake_Flags : constant Processing_Flags :=\n                       (Report_Error               => null,\n                        When_No_Sources            => Error,"}, {"sha": "695bdb7ca40f1f98407beab5fce36a443308074c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce532f42a7efda7280a2cf6b9fb18d48176bae61/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ce532f42a7efda7280a2cf6b9fb18d48176bae61", "patch": "@@ -8986,9 +8986,13 @@ package body Sem_Prag is\n          --    null\n          --  | DEPENDENCY_CLAUSE {, DEPENDENCY_CLAUSE}\n \n-         --  DEPENDENCY_CLAUSE ::= OUTPUT_LIST =>[+] INPUT_LIST\n+         --  DEPENDENCY_CLAUSE ::=\n+         --    OUTPUT_LIST =>[+] INPUT_LIST\n+         --  | NULL_DEPENDENCY_CLAUSE\n \n-         --  OUTPUT_LIST ::= null | OUTPUT | (OUTPUT {, OUTPUT})\n+         --  NULL_DEPENDENCY_CLAUSE ::= null => INPUT_LIST\n+\n+         --  OUTPUT_LIST ::= OUTPUT | (OUTPUT {, OUTPUT})\n \n          --  INPUT_LIST ::= null | INPUT | (INPUT {, INPUT})\n \n@@ -9141,6 +9145,16 @@ package body Sem_Prag is\n                         Seen      => Inputs_Seen,\n                         Null_Seen => Null_Input_Seen);\n                   end if;\n+\n+                  --  Detect an illegal dependency clause of the form\n+\n+                  --    (null =>[+] null)\n+\n+                  if Null_Output_Seen and then Null_Input_Seen then\n+                     Error_Msg_N\n+                       (\"null dependency clause cannot have a null input list\",\n+                        Inputs);\n+                  end if;\n                end Analyze_Input_List;\n \n                --------------------------"}]}