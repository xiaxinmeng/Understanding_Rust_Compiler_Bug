{"sha": "65f7ed64ca282f4c084499723a96c47085faaab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmN2VkNjRjYTI4MmY0YzA4NDQ5OTcyM2E5NmM0NzA4NWZhYWFiOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-04T09:12:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-04T09:12:18Z"}, "message": "[multiple changes]\n\n2012-10-04  Vincent Celier  <celier@adacore.com>\n\n\t* prj-proc.adb (Recursive_Process): Use project directory\n\tdisplay path name as the value of 'Project_Dir.\n\n2012-10-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb (Expand_Compare_Minimize_Eliminate_Overflow):\n\tDeal with case where we get a bignum operand and cannot do a\n\trange analysis.\n\t* sem_eval.adb (Why_Not_Static): Deal with bignum operands\n\n2012-10-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Find_Unary_Types): Within an instance, an\n\tinterpretation that involves a predefied arithmetic operator is\n\tnot a candidate if the corresponding generic formal type is not\n\ta numeric type.\n\t* sem_util.ads, sem_util.adb (Corresonding_Generic_Type): If a\n\ttype is a generic actual type within an instance, return the\n\tcorresponding formal in the generic unit, otherwise return\n\tAny_Type.\n\nFrom-SVN: r192071", "tree": {"sha": "5c4a4a3d3a91aa0e0ba8ef824071967b4ac40d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c4a4a3d3a91aa0e0ba8ef824071967b4ac40d15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f7ed64ca282f4c084499723a96c47085faaab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f7ed64ca282f4c084499723a96c47085faaab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f7ed64ca282f4c084499723a96c47085faaab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f7ed64ca282f4c084499723a96c47085faaab8/comments", "author": null, "committer": null, "parents": [{"sha": "a40ada7ef7d7a4e6d66af16425d1135d15129404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40ada7ef7d7a4e6d66af16425d1135d15129404", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40ada7ef7d7a4e6d66af16425d1135d15129404"}], "stats": {"total": 126, "additions": 115, "deletions": 11}, "files": [{"sha": "b976f9cba7eb3136de853e40771ea1e9f678734f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -1,3 +1,26 @@\n+2012-10-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-proc.adb (Recursive_Process): Use project directory\n+\tdisplay path name as the value of 'Project_Dir.\n+\n+2012-10-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_Compare_Minimize_Eliminate_Overflow):\n+\tDeal with case where we get a bignum operand and cannot do a\n+\trange analysis.\n+\t* sem_eval.adb (Why_Not_Static): Deal with bignum operands\n+\n+2012-10-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Find_Unary_Types): Within an instance, an\n+\tinterpretation that involves a predefied arithmetic operator is\n+\tnot a candidate if the corresponding generic formal type is not\n+\ta numeric type.\n+\t* sem_util.ads, sem_util.adb (Corresonding_Generic_Type): If a\n+\ttype is a generic actual type within an instance, return the\n+\tcorresponding formal in the generic unit, otherwise return\n+\tAny_Type.\n+\n 2012-10-04  Robert Dewar  <dewar@adacore.com>\n \n \t* checks.adb (Minimize_Eliminate_Overflow_Checks): Dont reanalyze"}, {"sha": "f47bae4b91886dfef62facdeeab351fa8a0ef1eb", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -2325,9 +2325,12 @@ package body Exp_Ch4 is\n       Minimize_Eliminate_Overflow_Checks\n         (Right_Opnd (N), Rlo, Rhi, Top_Level => False);\n \n-      --  See if the range information decides the result of the comparison\n+      --  See if the range information decides the result of the comparison.\n+      --  We can only do this if we in fact have full range information (which\n+      --  won't be the case if either operand is bignum at this stage).\n \n-      case N_Op_Compare (Nkind (N)) is\n+      if Llo /= No_Uint and then Rlo /= No_Uint then\n+         case N_Op_Compare (Nkind (N)) is\n          when N_Op_Eq =>\n             if Llo = Lhi and then Rlo = Rhi and then Llo = Rlo then\n                Set_True;\n@@ -2369,12 +2372,13 @@ package body Exp_Ch4 is\n             elsif Llo > Rhi or else Lhi < Rlo then\n                Set_True;\n             end if;\n-      end case;\n+         end case;\n \n-      --  All done if we did the rewrite\n+         --  All done if we did the rewrite\n \n-      if Nkind (N) not in N_Op_Compare then\n-         return;\n+         if Nkind (N) not in N_Op_Compare then\n+            return;\n+         end if;\n       end if;\n \n       --  Otherwise, time to do the comparison"}, {"sha": "cb9d533c7657ca3e64f0f65a1abe179f904d013d", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -2850,7 +2850,7 @@ package body Prj.Proc is\n             Add_Attributes\n               (Project,\n                Name,\n-               Name_Id (Project.Directory.Name),\n+               Name_Id (Project.Directory.Display_Name),\n                In_Tree.Shared,\n                Project.Decl,\n                Prj.Attr.Attribute_First,"}, {"sha": "9d63e886aaf2c1a241cf4a268377cb82ee55ad9a", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -5888,14 +5888,36 @@ package body Sem_Ch4 is\n    begin\n       if not Is_Overloaded (R) then\n          if Is_Numeric_Type (Etype (R)) then\n-            Add_One_Interp (N, Op_Id, Base_Type (Etype (R)));\n+\n+            --  In an instance a generic actual may be a numeric type even if\n+            --  the formal in the generic unit was not. In that case, the\n+            --  predefined operator was not a possible interpretation in the\n+            --  generic, and cannot be one in the instance.\n+\n+            if In_Instance\n+              and then\n+                not Is_Numeric_Type (Corresponding_Generic_Type (Etype (R)))\n+            then\n+               null;\n+            else\n+               Add_One_Interp (N, Op_Id, Base_Type (Etype (R)));\n+            end if;\n          end if;\n \n       else\n          Get_First_Interp (R, Index, It);\n          while Present (It.Typ) loop\n             if Is_Numeric_Type (It.Typ) then\n-               Add_One_Interp (N, Op_Id, Base_Type (It.Typ));\n+               if In_Instance\n+                 and then\n+                   not Is_Numeric_Type\n+                     (Corresponding_Generic_Type (Etype (It.Typ)))\n+               then\n+                  null;\n+\n+               else\n+                  Add_One_Interp (N, Op_Id, Base_Type (It.Typ));\n+               end if;\n             end if;\n \n             Get_Next_Interp (Index, It);"}, {"sha": "95a240eb0a7d2bc2bd4276511a689ffc62cff8c7", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -37,6 +37,7 @@ with Namet;    use Namet;\n with Nmake;    use Nmake;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n+with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n@@ -5419,10 +5420,12 @@ package body Sem_Eval is\n             return;\n          end if;\n \n-         --  Type must be scalar or string type\n+         --  Type must be scalar or string type (but allow Bignum, since this\n+         --  is really a scalar type from our point of view in this diagnosis).\n \n          if not Is_Scalar_Type (Typ)\n            and then not Is_String_Type (Typ)\n+           and then not Is_RTE (Typ, RE_Bignum)\n          then\n             Error_Msg_N\n               (\"static expression must have scalar or string type \" &\n@@ -5539,7 +5542,14 @@ package body Sem_Eval is\n \n          when N_Function_Call =>\n             Why_Not_Static_List (Parameter_Associations (N));\n-            Error_Msg_N (\"non-static function call (RM 4.9(6,18))!\", N);\n+\n+            --  Complain about non-static function call unless we have Bignum\n+            --  which means that the underlying expression is really some\n+            --  scalar arithmetic operation.\n+\n+            if not Is_RTE (Typ, RE_Bignum) then\n+               Error_Msg_N (\"non-static function call (RM 4.9(6,18))!\", N);\n+            end if;\n \n          when N_Parameter_Association =>\n             Why_Not_Static (Explicit_Actual_Parameter (N));"}, {"sha": "2202c886766a26a38e806a057dd30b8b27f4942f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -2489,6 +2489,45 @@ package body Sem_Util is\n       return Plist;\n    end Copy_Parameter_List;\n \n+   --------------------------------\n+   -- Corresponding_Generic_Type --\n+   --------------------------------\n+\n+   function Corresponding_Generic_Type (T : Entity_Id) return Entity_Id is\n+      Inst : Entity_Id;\n+      Gen  : Entity_Id;\n+      Typ  : Entity_Id;\n+\n+   begin\n+      if not Is_Generic_Actual_Type (T) then\n+         return Any_Type;\n+\n+      else\n+         Inst := Scope (T);\n+\n+         if Is_Wrapper_Package (Inst) then\n+            Inst := Related_Instance (Inst);\n+         end if;\n+\n+         Gen  :=\n+           Generic_Parent\n+             (Specification (Unit_Declaration_Node (Inst)));\n+\n+         --  Generic actual has the same name as the corresponding formal\n+\n+         Typ := First_Entity (Gen);\n+         while Present (Typ) loop\n+            if Chars (Typ) = Chars (T) then\n+               return Typ;\n+            end if;\n+\n+            Next_Entity (Typ);\n+         end loop;\n+\n+         return Any_Type;\n+      end if;\n+   end Corresponding_Generic_Type;\n+\n    --------------------\n    -- Current_Entity --\n    --------------------"}, {"sha": "1b089b85ee790d7993146780d1ccbd2098ff988d", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f7ed64ca282f4c084499723a96c47085faaab8/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=65f7ed64ca282f4c084499723a96c47085faaab8", "patch": "@@ -299,6 +299,12 @@ package Sem_Util is\n    --  create a new compatible record type. Loc is the source location assigned\n    --  to the created nodes.\n \n+   function Corresponding_Generic_Type (T : Entity_Id) return Entity_Id;\n+   --  If a type is a generic actual type, return the corresponding formal in\n+   --  the generic parent unit. There is no direct link in the tree for this\n+   --  attribute, except in the case of formal private and derived types.\n+   --  Possible optimization???\n+\n    function Current_Entity (N : Node_Id) return Entity_Id;\n    pragma Inline (Current_Entity);\n    --  Find the currently visible definition for a given identifier, that is to"}]}