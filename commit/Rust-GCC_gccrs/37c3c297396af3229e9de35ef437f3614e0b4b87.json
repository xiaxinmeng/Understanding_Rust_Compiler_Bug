{"sha": "37c3c297396af3229e9de35ef437f3614e0b4b87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdjM2MyOTczOTZhZjMyMjllOWRlMzVlZjQzN2YzNjE0ZTBiNGI4Nw==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-09-23T15:35:23Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-09-23T20:45:14Z"}, "message": "[nvptx] Split up function ref plus const\n\nWith test-case gcc.c-torture/compile/pr92231.c, we run into:\n...\nnvptx-as: ptxas terminated with signal 11 [Segmentation fault], core dumped^M\ncompiler exited with status 1\nFAIL: gcc.c-torture/compile/pr92231.c   -O0  (test for excess errors)\n...\ndue to using a function reference plus constant as operand:\n...\n  mov.u64 %r24,bar+4096';\n...\n\nFix this by splitting such an insn into:\n...\n  mov.u64 %r24,bar';\n  add.u64 %r24,%r24,4096';\n...\n\nTested on nvptx.\n\ngcc/ChangeLog:\n\n\t* config/nvptx/nvptx.md: Don't allow operand containing sum of\n\tfunction ref and const.", "tree": {"sha": "c91df8dfdce5c553b91ed3c5ffd631ae6df8e16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c91df8dfdce5c553b91ed3c5ffd631ae6df8e16f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37c3c297396af3229e9de35ef437f3614e0b4b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c3c297396af3229e9de35ef437f3614e0b4b87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c3c297396af3229e9de35ef437f3614e0b4b87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c3c297396af3229e9de35ef437f3614e0b4b87/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b27d8eedc7a4c0e8276345107790e6b3c023cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b27d8eedc7a4c0e8276345107790e6b3c023cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74b27d8eedc7a4c0e8276345107790e6b3c023cb"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "035f6e0151b28e4200a223d3775359c9a3dab099", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37c3c297396af3229e9de35ef437f3614e0b4b87/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37c3c297396af3229e9de35ef437f3614e0b4b87/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=37c3c297396af3229e9de35ef437f3614e0b4b87", "patch": "@@ -146,6 +146,13 @@\n   return true;\n })\n \n+;; Test for a function symbol ref operand\n+(define_predicate \"symbol_ref_function_operand\"\n+  (match_code \"symbol_ref\")\n+{\n+  return SYMBOL_REF_FUNCTION_P (op);\n+})\n+\n (define_attr \"predicable\" \"false,true\"\n   (const_string \"true\"))\n \n@@ -241,6 +248,17 @@\n }\n   [(set_attr \"subregs_ok\" \"true\")])\n \n+;; ptxas segfaults on 'mov.u64 %r24,bar+4096', so break it up.\n+(define_split\n+  [(set (match_operand:DI 0 \"nvptx_register_operand\")\n+\t(const:DI (plus:DI (match_operand:DI 1 \"symbol_ref_function_operand\")\n+\t\t\t   (match_operand 2 \"const_int_operand\"))))]\n+  \"\"\n+  [(set (match_dup 0) (match_dup 1))\n+   (set (match_dup 0) (plus:DI (match_dup 0) (match_dup 2)))\n+  ]\n+  \"\")\n+\n (define_insn \"*mov<mode>_insn\"\n   [(set (match_operand:SDFM 0 \"nonimmediate_operand\" \"=R,R,m\")\n \t(match_operand:SDFM 1 \"general_operand\" \"RF,m,R\"))]"}]}