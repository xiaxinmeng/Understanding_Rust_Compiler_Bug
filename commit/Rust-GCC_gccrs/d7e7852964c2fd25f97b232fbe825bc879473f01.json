{"sha": "d7e7852964c2fd25f97b232fbe825bc879473f01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdlNzg1Mjk2NGMyZmQyNWY5N2IyMzJmYmU4MjViYzg3OTQ3M2YwMQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1998-06-17T13:29:22Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-06-17T13:29:22Z"}, "message": "except.c (add_new_handler): fix bug in finding last region handler.\n\nWed Jun 17 16:25:38 EDT 1998  Andrew MacLeod  (amacleod@cygnus.com)\n      * except.c (add_new_handler): fix bug in finding last region handler.\n      * libgcc2.c (find_exception_handler): Pass exception table pointer\n      to runtime type matcher, not the match info field.\n\nFrom-SVN: r20541", "tree": {"sha": "c597dafe52b7c2eb4875f0af97119c1d683f0501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c597dafe52b7c2eb4875f0af97119c1d683f0501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7e7852964c2fd25f97b232fbe825bc879473f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e7852964c2fd25f97b232fbe825bc879473f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e7852964c2fd25f97b232fbe825bc879473f01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e7852964c2fd25f97b232fbe825bc879473f01/comments", "author": null, "committer": null, "parents": [{"sha": "3301dc51911505b0c7e9b60160ddf6666bd31424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3301dc51911505b0c7e9b60160ddf6666bd31424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3301dc51911505b0c7e9b60160ddf6666bd31424"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "b6f2d3d3dc5175d546053f4d6bcf88eba9e926e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e7852964c2fd25f97b232fbe825bc879473f01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e7852964c2fd25f97b232fbe825bc879473f01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7e7852964c2fd25f97b232fbe825bc879473f01", "patch": "@@ -1,3 +1,9 @@\n+Wed Jun 17 16:25:38 EDT 1998  Andrew MacLeod  (amacleod@cygnus.com)\n+\n+\t* except.c (add_new_handler): fix bug in finding last region handler.\n+\t* libgcc2.c (find_exception_handler): Pass exception table pointer\n+\tto runtime type matcher, not the match info field.\n+\n Wed Jun 17 15:57:48 EDT 1998  Andrew MacLeod  (amacleod@cygnus.com)\n \n \t* eh-common.h (struct eh_context): Add comment for hidden use of"}, {"sha": "d707a0ebbb85782bc20ace89bf43126ad7b8df3a", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e7852964c2fd25f97b232fbe825bc879473f01/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e7852964c2fd25f97b232fbe825bc879473f01/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=d7e7852964c2fd25f97b232fbe825bc879473f01", "patch": "@@ -750,7 +750,8 @@ add_new_handler (region, newhandler)\n   else \n     {\n       for ( ; last->next != NULL; last = last->next)\n-        last->next = newhandler;\n+        ;\n+      last->next = newhandler;\n     }\n }\n "}, {"sha": "1fc703e84d245c43c12f589baab126c322da3aaf", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e7852964c2fd25f97b232fbe825bc879473f01/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e7852964c2fd25f97b232fbe825bc879473f01/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=d7e7852964c2fd25f97b232fbe825bc879473f01", "patch": "@@ -3424,7 +3424,7 @@ find_exception_handler (void *pc, exception_descriptor *table, void *eh_info)\n                   /* match info but no matcher is NOT a match */\n                   if (matcher) \n                     {\n-                      ret = (*matcher)(eh_info, tab[pos].match_info, table);\n+                      ret = (*matcher)(eh_info, &tab[pos], table);\n                       if (ret)\n                         {\n                           ((__eh_info *)eh_info)->coerced_value = ret;"}]}