{"sha": "ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE0YTExYmE1MjdjODI0MzgxMzBkZTc0YzBlOWViZGQ5ZjU1ZmRlOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-07-31T17:33:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-07-31T17:33:29Z"}, "message": "20050314-1.c: Dump and cleanup lim1 pass only.\n\n\t* gcc.dg/tree-ssa/20050314-1.c: Dump and cleanup lim1 pass only.\n\t* gcc.dg/tree-ssa/pr23109.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-7.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-32.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-33.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-34.c: Ditto.\n\t* gcc.dg/tree-ssa/loop-35.c: Ditto.\n\t* gcc.dg/tree-ssa/restrict-3.c: Ditto.\n\t* gcc.dg/tree-ssa/ssa-lim-2.c: Ditto.\n\t* gcc.dg/tree-ssa/ssa-lim-1.c: Ditto.\n\t* gcc.dg/tree-ssa/ssa-lim-3.c: Ditto.\n\t* gcc.dg/tree-ssa/ssa-lim-6.c: Ditto.\n\t* gcc.dg/tree-ssa/structopt-1.c: Ditto.\n\t* g++.dg/tree-ssa/pr33615.C: Ditto.\n\t* g++.dg/tree-ssa/restrict1.C: Ditto.\n\t* c-c++-common/restrict-2.c: Ditto.\n\t* gfortran.dg/pr32921.f: Ditto.\n\t* gcc.dg/tree-ssa/ssa-dse-10.c: Dump and cleanup dse1 pass only.\n\t* gcc.dg/fold-compare-2.c: Dump and cleanup vrp1 pass only.\n\t* gcc.dg/tree-ssa/vrp47.c: Ditto.\n\t* gcc.dg/tree-ssa/pr25501.c: Dump and cleanup mergephi1 pass only.\n\t* gcc.dg/tree-ssa/pr15349.c: Dump and cleanup mergephi2 pass only.\n\t* gcc.dg/tree-ssa/tailrecursion-1.c: Dump and cleanup tailr1 pass only.\n\t* gcc.dg/tree-ssa/tailrecursion-2.c: Ditto.\n\t* gcc.dg/tree-ssa/tailrecursion-3.c: Ditto.\n\t* gcc.dg/tree-ssa/tailrecursion-4.c: Ditto.\n\t* gcc.dg/tree-ssa/tailrecursion-6.c: Ditto.\n\nFrom-SVN: r176978", "tree": {"sha": "28652ca35f32b3bab502b139e568751a1f397ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28652ca35f32b3bab502b139e568751a1f397ebd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "360dffa36fce7f798cc3fc31db9f60372053d69d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360dffa36fce7f798cc3fc31db9f60372053d69d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360dffa36fce7f798cc3fc31db9f60372053d69d"}], "stats": {"total": 140, "additions": 85, "deletions": 55}, "files": [{"sha": "3a78ad1454f7113817fcf4be56ab5bbdefd013c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,3 +1,33 @@\n+2011-07-31  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/tree-ssa/20050314-1.c: Dump and cleanup lim1 pass only.\n+\t* gcc.dg/tree-ssa/pr23109.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-7.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-32.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-33.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-34.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-35.c: Ditto.\n+\t* gcc.dg/tree-ssa/restrict-3.c: Ditto.\n+\t* gcc.dg/tree-ssa/ssa-lim-2.c: Ditto.\n+\t* gcc.dg/tree-ssa/ssa-lim-1.c: Ditto.\n+\t* gcc.dg/tree-ssa/ssa-lim-3.c: Ditto.\n+\t* gcc.dg/tree-ssa/ssa-lim-6.c: Ditto.\n+\t* gcc.dg/tree-ssa/structopt-1.c: Ditto.\n+\t* g++.dg/tree-ssa/pr33615.C: Ditto.\n+\t* g++.dg/tree-ssa/restrict1.C: Ditto.\n+\t* c-c++-common/restrict-2.c: Ditto.\n+\t* gfortran.dg/pr32921.f: Ditto.\n+\t* gcc.dg/tree-ssa/ssa-dse-10.c: Dump and cleanup dse1 pass only.\n+\t* gcc.dg/fold-compare-2.c: Dump and cleanup vrp1 pass only.\n+\t* gcc.dg/tree-ssa/vrp47.c: Ditto.\n+\t* gcc.dg/tree-ssa/pr25501.c: Dump and cleanup mergephi1 pass only.\n+\t* gcc.dg/tree-ssa/pr15349.c: Dump and cleanup mergephi2 pass only.\n+\t* gcc.dg/tree-ssa/tailrecursion-1.c: Dump and cleanup tailr1 pass only.\n+\t* gcc.dg/tree-ssa/tailrecursion-2.c: Ditto.\n+\t* gcc.dg/tree-ssa/tailrecursion-3.c: Ditto.\n+\t* gcc.dg/tree-ssa/tailrecursion-4.c: Ditto.\n+\t* gcc.dg/tree-ssa/tailrecursion-6.c: Ditto.\n+\n 2011-07-31  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* lib/gcc-dg.exp (cleanup-dump): Also remove .exe. and"}, {"sha": "3f71b77b9ced926cd94892f8d8bd7d5eba0f58bd", "filename": "gcc/testsuite/c-c++-common/restrict-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Frestrict-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Frestrict-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Frestrict-2.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-strict-aliasing -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O -fno-strict-aliasing -fdump-tree-lim1-details\" } */\n \n void foo (float * __restrict__ a, float * __restrict__ b, int n, int j)\n {\n@@ -11,4 +11,4 @@ void foo (float * __restrict__ a, float * __restrict__ b, int n, int j)\n /* We should move the RHS of the store out of the loop.  */\n \n /* { dg-final { scan-tree-dump-times \"Moving statement\" 11 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "801b33447df14a930c36c0c83b6aee7c6865ed3c", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr33615.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr33615.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr33615.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr33615.C?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fnon-call-exceptions -fdump-tree-lim-details -w\" } */\n+/* { dg-options \"-O -fnon-call-exceptions -fdump-tree-lim1-details -w\" } */\n \n extern volatile int y;\n \n@@ -17,4 +17,4 @@ foo (double a, int x)\n // The expression 1.0 / 0.0 should not be treated as a loop invariant\n // if it may throw an exception.\n // { dg-final { scan-tree-dump-times \"invariant up to\" 0 \"lim1\" } }\n-// { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } }\n+// { dg-final { cleanup-tree-dump \"lim1\" } }"}, {"sha": "682de7e54a7e9a91933ef9a289ffceea1137c4dd", "filename": "gcc/testsuite/g++.dg/tree-ssa/restrict1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict1.C?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n \n struct Foo\n {"}, {"sha": "9746b85c5e7d8af96111c7aee868d0c8e52b59a0", "filename": "gcc/testsuite/gcc.dg/fold-compare-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-compare-2.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n \n extern void abort (void);\n \n@@ -16,5 +16,5 @@ main(void)\n }\n \n /* { dg-final { scan-tree-dump-times \"Removing basic block\" 2 \"vrp1\" } } */\n-/* { dg-final { cleanup-tree-dump \"vrp\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp1\" } } */\n "}, {"sha": "108297336e77c5075da9c6fdd00ba37ce5d382e3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050314-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O1 -fdump-tree-lim1-details\" } */\n \n float a[100];\n \n@@ -18,4 +18,4 @@ void xxx (void)\n    cannot read nor write the memory.  */\n \n /* { dg-final { scan-tree-dump-times \"Moving statement\" 1 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "f0c8d30575ebc51ff1c9e39cd37e2d447301f060", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-32.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-32.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n \n int x;\n int a[100];\n@@ -43,4 +43,4 @@ void test3(struct a *A)\n }\n \n /* { dg-final { scan-tree-dump-times \"Executing store motion of\" 3 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "dcb282e1f83ba24be068ee6e8df0a9c70b3280cf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-33.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-33.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n \n int x;\n int a[100];\n@@ -37,4 +37,4 @@ void test5(struct a *A, unsigned b)\n }\n \n /* { dg-final { scan-tree-dump-times \"Executing store motion of\" 4 \"lim1\" { xfail lp64 } } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "125a2202d193c3966972bf61623191d0b7a0f7a3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-34.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-34.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n \n int r[6];\n \n@@ -18,4 +18,4 @@ void f (int n)\n \n \n /* { dg-final { scan-tree-dump-times \"Executing store motion of r\" 6 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "638db7e5726ab2caf72161651c6287b296815065", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-35.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-35.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n \n int x;\n int a[100];\n@@ -62,4 +62,4 @@ void test4(struct a *A, unsigned long b)\n /* long index not hoisted for avr target PR 36561 */\n /* { dg-final { scan-tree-dump-times \"Executing store motion of\" 8 \"lim1\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { scan-tree-dump-times \"Executing store motion of\" 6 \"lim1\" { target { \"avr-*-*\" } } } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "38e19e6aa5c706b6d0a075712c4a39b1cd0bb5bb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-7.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/19828 */\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O1 -fdump-tree-lim1-details\" } */\n \n int cst_fun1 (int) __attribute__((__const__));\n int cst_fun2 (int) __attribute__((__const__));\n@@ -32,4 +32,4 @@ int xxx (void)\n    with k = 0 may be invalid.  */\n \n /* { dg-final { scan-tree-dump-times \"Moving statement\" 2 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "26c1938424ac00dd5219437982f2e337dbfa0e13", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr15349.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr15349.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,6 +1,6 @@\n /* PR 15349.  Merge two PHI nodes.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-mergephi\" } */\n+/* { dg-options \"-O1 -fdump-tree-mergephi2\" } */\n \n int\n foo (int a, int b)\n@@ -23,4 +23,4 @@ foo (int a, int b)\n }\n \n /* { dg-final { scan-tree-dump-times \"PHI\" 1 \"mergephi2\"} } */\n-/* { dg-final { cleanup-tree-dump \"mergephi\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"mergephi2\" } } */"}, {"sha": "73fd84d92828fe62998ac32a9618966a1b158e3d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr23109.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23109.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23109.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23109.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -funsafe-math-optimizations -ftrapping-math -fdump-tree-recip -fdump-tree-lim\" } */\n+/* { dg-options \"-O2 -funsafe-math-optimizations -ftrapping-math -fdump-tree-recip -fdump-tree-lim1\" } */\n /* { dg-warning \"-fassociative-math disabled\" \"\" { target *-*-* } 1 } */\n \n double F[2] = { 0., 0. }, e = 0.;\n@@ -32,5 +32,5 @@ int main()\n /* { dg-final { scan-tree-dump-not \"reciptmp\" \"lim1\" } } */\n /* { dg-final { scan-tree-dump-not \"reciptmp\" \"recip\" } } */\n /* { dg-final { cleanup-tree-dump \"recip\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */\n "}, {"sha": "1fb2c7eba8074323b136725a40d1b38fed35cb64", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr25501.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25501.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25501.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr25501.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -3,7 +3,7 @@\n    actually merged, causing a segfault later.  Make sure that does not\n    happen any more.  */\n \n-/* { dg-options \"-O1 -fdump-tree-mergephi\" } */\n+/* { dg-options \"-O1 -fdump-tree-mergephi1\" } */\n \n int\n foo (int a)\n@@ -33,4 +33,4 @@ foo (int a)\n }\n \n /* { dg-final { scan-tree-dump-times \"Removing basic block\" 0 \"mergephi1\"} } */\n-/* { dg-final { cleanup-tree-dump \"mergephi\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"mergephi1\" } } */"}, {"sha": "95cc1a2e3a2680002d5006a2b82830214a602fb5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/restrict-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frestrict-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frestrict-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frestrict-3.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fno-strict-aliasing -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O -fno-strict-aliasing -fdump-tree-lim1-details\" } */\n \n void f(int * __restrict__ r,\n        int a[__restrict__ 16][16],\n@@ -15,4 +15,4 @@ void f(int * __restrict__ r,\n /* We should apply store motion to the store to *r.  */\n \n /* { dg-final { scan-tree-dump \"Executing store motion of \\\\\\*r\" \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "c2e27c82dd6d92c3a99f285869c81df6b242a4ea", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-10.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -w -fdump-tree-dse-vops\" } */\n+/* { dg-options \"-O -w -fdump-tree-dse1-vops\" } */\n \n __extension__ typedef __SIZE_TYPE__ size_t;\n typedef struct _IO_FILE FILE;\n@@ -1520,4 +1520,4 @@ void func_encode(void)\n }\n \n /* { dg-final { scan-tree-dump-times \" xxxinfo = {}\" 1 \"dse1\"} } */\n-/* { dg-final { cleanup-tree-dump \"dse\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}, {"sha": "3952a9a38ac85299da4761093ebde221472fefe7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-1.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-lim\" } */\n+/* { dg-options \"-O -fdump-tree-lim1\" } */\n \n /* This is a variant that does cause fold to place a cast to\n    int before testing bit 1.  */\n@@ -19,4 +19,4 @@ quantum_toffoli (int control1, int control2, int target,\n }\n \n /* { dg-final { scan-tree-dump-times \"1 <<\" 3 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "2106b62323fbbcc93c6da6c57dfddf2aab1973f9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-2.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-lim\" } */\n+/* { dg-options \"-O -fdump-tree-lim1\" } */\n \n /* This is a variant that doesn't cause fold to place a cast to\n    int before testing bit 1.  */\n@@ -19,4 +19,4 @@ int size)\n }\n \n /* { dg-final { scan-tree-dump-times \"1 <<\" 3 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "a81857c0c3de228eec5f53ee9864e8de70d0c5be", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-3.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O -fdump-tree-lim1-details\" } */\n \n struct { int x; int y; } global;\n void foo(int n)\n@@ -11,4 +11,4 @@ void foo(int n)\n \n /* { dg-final { scan-tree-dump \"Executing store motion of global.y\" \"lim1\" } } */\n /* { dg-final { scan-tree-dump \"Moving statement.*global.x.*out of loop 1\" \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "100a23027363d768b8dcf79ac313b32b161155b2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-lim-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-lim-6.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n \n double a[16][64], y[64], x[16];\n void foo(void)\n@@ -11,4 +11,4 @@ void foo(void)\n }\n \n /* { dg-final { scan-tree-dump \"Executing store motion of y\" \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "e5fe291d96a627386a17ac1e3b687f5bb1774f6c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/structopt-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstructopt-1.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n int x; int y;\n struct { int x; int y; } global;\n int foo() {\n@@ -12,4 +12,4 @@ int foo() {\n \n /* { dg-final { scan-tree-dump-times \"Executing store motion of global.y\" 1 \"lim1\" } } */\n /* XXX: We should also check for the load motion of global.x, but there is no easy way to do this.  */\n-/* { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "c725d79494e156ff33f018b8220aa57913bda951", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-1.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr-details\" } */\n+/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr1-details\" } */\n int\n t(int a)\n {\n@@ -9,4 +9,4 @@ t(int a)\n \t\treturn 0;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr1\"} } */\n-/* { dg-final { cleanup-tree-dump \"tailr\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"tailr1\" } } */"}, {"sha": "ae2989d76976390fffc5986af7f8adcac8b65bb6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-2.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr-details\" } */\n+/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr1-details\" } */\n int\n t(char *a)\n {\n@@ -10,4 +10,4 @@ t(char *a)\n \t\treturn 0;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr1\"} } */\n-/* { dg-final { cleanup-tree-dump \"tailr\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"tailr1\" } } */"}, {"sha": "6ab2cd1885323f1dc4b175faeac21bf39a63d29d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-3.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr-details\" } */\n+/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr1-details\" } */\n int\n t(int a)\n {\n@@ -13,4 +13,4 @@ t(int a)\n \treturn r;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr1\"} } */\n-/* { dg-final { cleanup-tree-dump \"tailr\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"tailr1\" } } */"}, {"sha": "a17573cf22671297b54cb37a477525e551dc034b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-4.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr-details\" } */\n+/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr1-details\" } */\n int\n t(int a)\n {\n@@ -15,4 +15,4 @@ t(int a)\n \treturn r;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 2 \"tailr1\"} } */\n-/* { dg-final { cleanup-tree-dump \"tailr\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"tailr1\" } } */"}, {"sha": "e994cc424a0673a371bc1678985d6ad53ddac36a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-6.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr-details\" } */\n+/* { dg-options \"-O1 -foptimize-sibling-calls -fdump-tree-tailr1-details\" } */\n int\n foo (int a)\n {\n@@ -9,4 +9,4 @@ foo (int a)\n \t\treturn 0;\n }\n /* { dg-final { scan-tree-dump-times \"Eliminated tail recursion\" 1 \"tailr1\"} } */\n-/* { dg-final { cleanup-tree-dump \"tailr\\[1-2\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"tailr1\" } } */"}, {"sha": "19e1911e77bfe645543a8db0a340d6e473545c1c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp47.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp47.c?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -4,8 +4,8 @@\n    jumps when evaluating an && condition.  VRP is not able to optimize\n    this.  */\n /* { dg-do compile { target { ! \"mips*-*-* s390*-*-*  avr-*-* mn10300-*-*\" } } } */\n-/* { dg-options \"-O2 -fdump-tree-vrp -fdump-tree-dom\" } */\n-/* { dg-options \"-O2 -fdump-tree-vrp -fdump-tree-dom -march=i586\" { target { i?86-*-* && ilp32 } } } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-dom1\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1 -fdump-tree-dom1 -march=i586\" { target { i?86-*-* && ilp32 } } } */\n \n int h(int x, int y)\n {\n@@ -44,5 +44,5 @@ int f(int x)\n /* { dg-final { scan-tree-dump-times \"x\\[^ \\]* \\[|\\] y\" 1 \"vrp1\" } } */\n /* { dg-final { scan-tree-dump-times \"x\\[^ \\]* \\\\^ 1\" 1 \"vrp1\" } } */\n \n-/* { dg-final { cleanup-tree-dump \"vrp\\[0-9\\]\" } } */\n-/* { dg-final { cleanup-tree-dump \"dom\\[0-9\\]\" } } */\n+/* { dg-final { cleanup-tree-dump \"vrp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"dom1\" } } */"}, {"sha": "fe8e5c487ab4c811835aca536074d8c3651fe76d", "filename": "gcc/testsuite/gfortran.dg/pr32921.f", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr32921.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba4a11ba527c82438130de74c0e9ebdd9f55fde8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr32921.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr32921.f?ref=ba4a11ba527c82438130de74c0e9ebdd9f55fde8", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-O2 -fdump-tree-lim\" }\n+! { dg-options \"-O2 -fdump-tree-lim1\" }\n ! gfortran -c -m32 -O2 -S junk.f\n !\n       MODULE LES3D_DATA\n@@ -46,5 +46,5 @@ SUBROUTINE EXTRAPI()\n       RETURN\n       END\n ! { dg-final { scan-tree-dump-times \"stride\" 4 \"lim1\" } }\n-! { dg-final { cleanup-tree-dump \"lim\\[1-2\\]\" } }\n+! { dg-final { cleanup-tree-dump \"lim1\" } }\n ! { dg-final { cleanup-modules \"LES3D_DATA\" } }"}]}