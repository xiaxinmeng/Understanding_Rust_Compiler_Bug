{"sha": "e930780c1eb7656f60a9e3d42ad5f91432fad363", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzMDc4MGMxZWI3NjU2ZjYwYTllM2Q0MmFkNWY5MTQzMmZhZDM2Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-01-24T14:06:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-01-24T14:06:13Z"}, "message": "type_traits: Implement is_signed and is_unsigned.\n\n2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/type_traits: Implement is_signed and is_unsigned.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\tis_signed/is_signed.cc: New.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\tis_signed/typedefs.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\tis_unsigned/is_unsigned.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\tis_unsigned/typedefs.cc: Likewise.\n\nFrom-SVN: r94160", "tree": {"sha": "e3562576248e2b27e95999f4d251a631c24a630e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3562576248e2b27e95999f4d251a631c24a630e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e930780c1eb7656f60a9e3d42ad5f91432fad363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e930780c1eb7656f60a9e3d42ad5f91432fad363", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e930780c1eb7656f60a9e3d42ad5f91432fad363", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e930780c1eb7656f60a9e3d42ad5f91432fad363/comments", "author": null, "committer": null, "parents": [{"sha": "226c62c799e992c841f0cc0ea11b336dfa1dad06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226c62c799e992c841f0cc0ea11b336dfa1dad06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226c62c799e992c841f0cc0ea11b336dfa1dad06"}], "stats": {"total": 226, "additions": 226, "deletions": 0}, "files": [{"sha": "8b9518154e0d2119e1501005892d8b93f0f6b20b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e930780c1eb7656f60a9e3d42ad5f91432fad363", "patch": "@@ -1,3 +1,15 @@\n+2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/type_traits: Implement is_signed and is_unsigned.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\tis_signed/is_signed.cc: New.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\tis_signed/typedefs.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\tis_unsigned/is_unsigned.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\tis_unsigned/typedefs.cc: Likewise.\n+\n 2005-01-23  Paolo Carlini  <pcarlini@suse.de>\n \n \t* docs/html/ext/lwg-active.html, lwg-defects.html: Import Revision 34."}, {"sha": "34c1c9fd076ef3572f53662b001d5f7d7c67cf5d", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=e930780c1eb7656f60a9e3d42ad5f91432fad363", "patch": "@@ -517,6 +517,24 @@ namespace tr1\n     struct has_virtual_destructor\n     : public false_type { };\n \n+  template<typename>\n+    struct is_signed\n+    : public false_type { };\n+  _DEFINE_SPEC(0, is_signed, signed char, true)\n+  _DEFINE_SPEC(0, is_signed, short, true)\n+  _DEFINE_SPEC(0, is_signed, int, true)\n+  _DEFINE_SPEC(0, is_signed, long, true)\n+  _DEFINE_SPEC(0, is_signed, long long, true)\n+\n+  template<typename>\n+    struct is_unsigned\n+    : public false_type { };\n+  _DEFINE_SPEC(0, is_unsigned, unsigned char, true)\n+  _DEFINE_SPEC(0, is_unsigned, unsigned short, true)\n+  _DEFINE_SPEC(0, is_unsigned, unsigned int, true)\n+  _DEFINE_SPEC(0, is_unsigned, unsigned long, true)\n+  _DEFINE_SPEC(0, is_unsigned, unsigned long long, true)\n+\n   template<typename _Tp>\n     struct alignment_of\n     : public integral_constant<std::size_t, __alignof__(_Tp)> { };"}, {"sha": "a987df279a1ac309f645a51269b8d3bf400aa1b0", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_signed/is_signed.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_signed%2Fis_signed.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_signed%2Fis_signed.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_signed%2Fis_signed.cc?ref=e930780c1eb7656f60a9e3d42ad5f91432fad363", "patch": "@@ -0,0 +1,62 @@\n+// 2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.5.3 Type properties\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::is_signed;\n+  using namespace __gnu_test;\n+  \n+  VERIFY( (test_category<is_signed, void>(false)) );\n+  \n+  VERIFY( (test_category<is_signed, char>(false)) );\n+  VERIFY( (test_category<is_signed, signed char>(true)) );\n+  VERIFY( (test_category<is_signed, unsigned char>(false)) );\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  VERIFY( (test_category<is_signed, wchar_t>(false)) );\n+#endif\n+  VERIFY( (test_category<is_signed, short>(true)) );\n+  VERIFY( (test_category<is_signed, unsigned short>(false)) );\n+  VERIFY( (test_category<is_signed, int>(true)) );\n+  VERIFY( (test_category<is_signed, unsigned int>(false)) );\n+  VERIFY( (test_category<is_signed, long>(true)) );\n+  VERIFY( (test_category<is_signed, unsigned long>(false)) );\n+  VERIFY( (test_category<is_signed, long long>(true)) );\n+  VERIFY( (test_category<is_signed, unsigned long long>(false)) );\n+\n+  VERIFY( (test_category<is_signed, float>(false)) );\n+  VERIFY( (test_category<is_signed, double>(false)) );\n+  VERIFY( (test_category<is_signed, long double>(false)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<is_signed, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "52a528a5fb3c559256e80429c469fb7b4e9cbe44", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_signed/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_signed%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_signed%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_signed%2Ftypedefs.cc?ref=e930780c1eb7656f60a9e3d42ad5f91432fad363", "patch": "@@ -0,0 +1,36 @@\n+// 2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::is_signed<int>            test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "fc444b50326c54bb4f8ee0eb26fae35d747f2972", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_unsigned/is_unsigned.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_unsigned%2Fis_unsigned.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_unsigned%2Fis_unsigned.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_unsigned%2Fis_unsigned.cc?ref=e930780c1eb7656f60a9e3d42ad5f91432fad363", "patch": "@@ -0,0 +1,62 @@\n+// 2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.5.3 Type properties\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::is_unsigned;\n+  using namespace __gnu_test;\n+  \n+  VERIFY( (test_category<is_unsigned, void>(false)) );\n+  \n+  VERIFY( (test_category<is_unsigned, char>(false)) );\n+  VERIFY( (test_category<is_unsigned, signed char>(false)) );\n+  VERIFY( (test_category<is_unsigned, unsigned char>(true)) );\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+  VERIFY( (test_category<is_unsigned, wchar_t>(false)) );\n+#endif\n+  VERIFY( (test_category<is_unsigned, short>(false)) );\n+  VERIFY( (test_category<is_unsigned, unsigned short>(true)) );\n+  VERIFY( (test_category<is_unsigned, int>(false)) );\n+  VERIFY( (test_category<is_unsigned, unsigned int>(true)) );\n+  VERIFY( (test_category<is_unsigned, long>(false)) );\n+  VERIFY( (test_category<is_unsigned, unsigned long>(true)) );\n+  VERIFY( (test_category<is_unsigned, long long>(false)) );\n+  VERIFY( (test_category<is_unsigned, unsigned long long>(true)) );\n+\n+  VERIFY( (test_category<is_unsigned, float>(false)) );\n+  VERIFY( (test_category<is_unsigned, double>(false)) );\n+  VERIFY( (test_category<is_unsigned, long double>(false)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<is_unsigned, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "195a80c2738ca8a0578a2274d5b89e607c1530bc", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_unsigned/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_unsigned%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e930780c1eb7656f60a9e3d42ad5f91432fad363/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_unsigned%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_unsigned%2Ftypedefs.cc?ref=e930780c1eb7656f60a9e3d42ad5f91432fad363", "patch": "@@ -0,0 +1,36 @@\n+// 2005-01-24  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::is_unsigned<int>          test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}]}