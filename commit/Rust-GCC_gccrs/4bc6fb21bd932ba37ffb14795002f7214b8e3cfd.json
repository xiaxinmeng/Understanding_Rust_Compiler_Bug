{"sha": "4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJjNmZiMjFiZDkzMmJhMzdmZmIxNDc5NTAwMmY3MjE0YjhlM2NmZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-22T07:39:39Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-10T07:16:17Z"}, "message": "Remove __cplusplus >= 201103\n\nRight now, we require a C++11 compiler, so the check is not needed any\nlonger.\n\ngcc/analyzer/ChangeLog:\n\n\t* program-state.cc (program_state::operator=): Remove\n\t__cplusplus >= 201103.\n\t(program_state::program_state): Likewise.\n\t* program-state.h: Likewise.\n\t* region-model.h (class region_model): Remove dead code.\n\ngcc/ChangeLog:\n\n\t* bitmap.h (class auto_bitmap): Remove\n\t__cplusplus >= 201103.\n\t* config/aarch64/aarch64.c: Likewise.\n\t* gimple-ssa-store-merging.c (store_immediate_info::store_immediate_info):\n\tLikewise.\n\t* sbitmap.h: Likewise.", "tree": {"sha": "54d97943e8f4b9aef56c20a449593ea5e815fe68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54d97943e8f4b9aef56c20a449593ea5e815fe68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a682f4197f9f39808febfd1862e722d7675d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a682f4197f9f39808febfd1862e722d7675d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3a682f4197f9f39808febfd1862e722d7675d34"}], "stats": {"total": 27, "additions": 1, "deletions": 26}, "files": [{"sha": "5c690b08fd33e53cb2696be0d0a4c2ad9f07f7ab", "filename": "gcc/analyzer/program-state.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fanalyzer%2Fprogram-state.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fanalyzer%2Fprogram-state.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-state.cc?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -731,7 +731,6 @@ program_state::operator= (const program_state &other)\n   return *this;\n }\n \n-#if __cplusplus >= 201103\n /* Move constructor for program_state (when building with C++11).  */\n program_state::program_state (program_state &&other)\n : m_region_model (other.m_region_model),\n@@ -747,7 +746,6 @@ program_state::program_state (program_state &&other)\n \n   m_valid = other.m_valid;\n }\n-#endif\n \n /* program_state's dtor.  */\n "}, {"sha": "f16fe6ba984c6923432cb158b4b25698a7c3da75", "filename": "gcc/analyzer/program-state.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fanalyzer%2Fprogram-state.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fanalyzer%2Fprogram-state.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fprogram-state.h?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -192,11 +192,7 @@ class program_state\n   program_state (const extrinsic_state &ext_state);\n   program_state (const program_state &other);\n   program_state& operator= (const program_state &other);\n-\n-#if __cplusplus >= 201103\n   program_state (program_state &&other);\n-#endif\n-\n   ~program_state ();\n \n   hashval_t hash () const;"}, {"sha": "a169396dcb50d2d2426c907425ae465c8570b663", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -414,11 +414,6 @@ class region_model\n   region_model (region_model_manager *mgr);\n   region_model (const region_model &other);\n   ~region_model ();\n-\n-#if 0//__cplusplus >= 201103\n-  region_model (region_model &&other);\n-#endif\n-\n   region_model &operator= (const region_model &other);\n \n   bool operator== (const region_model &other) const;"}, {"sha": "26138556b2a506f3e2b2246603a75b71496faaa9", "filename": "gcc/bitmap.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -951,10 +951,8 @@ class auto_bitmap\n   // Prevent making a copy that references our bitmap.\n   auto_bitmap (const auto_bitmap &);\n   auto_bitmap &operator = (const auto_bitmap &);\n-#if __cplusplus >= 201103L\n   auto_bitmap (auto_bitmap &&);\n   auto_bitmap &operator = (auto_bitmap &&);\n-#endif\n \n   bitmap_head m_bits;\n };"}, {"sha": "04855cbd5761701fadb53cf0830cdbb69434fdc7", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -221,9 +221,7 @@ class pure_scalable_type_info\n      predicate in each predicate argument register.  This means that\n      we need at least 12 pieces.  */\n   static const unsigned int MAX_PIECES = NUM_FP_ARG_REGS + NUM_PR_ARG_REGS;\n-#if __cplusplus >= 201103L\n   static_assert (MAX_PIECES >= 8, \"Need to store at least 8 predicates\");\n-#endif\n \n   /* Describes one piece of a PST.  Each piece is one of:\n "}, {"sha": "123c92d9b44bfaa0b0aac61a87545ec6b3a4017b", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -1595,17 +1595,9 @@ store_immediate_info::store_immediate_info (unsigned HOST_WIDE_INT bs,\n   : bitsize (bs), bitpos (bp), bitregion_start (brs), bitregion_end (bre),\n     stmt (st), order (ord), rhs_code (rhscode), n (nr),\n     ins_stmt (ins_stmtp), bit_not_p (bitnotp), ops_swapped_p (false),\n-    lp_nr (nr2)\n-#if __cplusplus >= 201103L\n-    , ops { op0r, op1r }\n+    lp_nr (nr2), ops { op0r, op1r }\n {\n }\n-#else\n-{\n-  ops[0] = op0r;\n-  ops[1] = op1r;\n-}\n-#endif\n \n /* Struct representing a group of stores to contiguous memory locations.\n    These are produced by the second phase (coalescing) and consumed in the"}, {"sha": "17660e5a65ec129378aa0ef3116ca3561a638ca7", "filename": "gcc/sbitmap.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fsbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bc6fb21bd932ba37ffb14795002f7214b8e3cfd/gcc%2Fsbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.h?ref=4bc6fb21bd932ba37ffb14795002f7214b8e3cfd", "patch": "@@ -301,10 +301,8 @@ class auto_sbitmap\n   /* Prevent making a copy that refers to our sbitmap.  */\n   auto_sbitmap (const auto_sbitmap &);\n   auto_sbitmap &operator = (const auto_sbitmap &);\n-#if __cplusplus >= 201103L\n   auto_sbitmap (auto_sbitmap &&);\n   auto_sbitmap &operator = (auto_sbitmap &&);\n-#endif\n \n   /* The bitmap we are managing.  */\n   sbitmap m_bitmap;"}]}