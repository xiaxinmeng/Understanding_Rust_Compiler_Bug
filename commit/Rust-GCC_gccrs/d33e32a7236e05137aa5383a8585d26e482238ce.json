{"sha": "d33e32a7236e05137aa5383a8585d26e482238ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzZTMyYTcyMzZlMDUxMzdhYTUzODNhODU4NWQyNmU0ODIyMzhjZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-05T16:38:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-05T16:38:17Z"}, "message": "re PR target/83604 (ICE in copy_to_mode_reg, at explow.c:630)\n\n\tPR target/83604\n\t* config/i386/sse.md (VI248_VLBW): Rename to ...\n\t(VI248_AVX512VL): ... this.  Don't guard V32HI with TARGET_AVX512BW.\n\t(vpshrd_<mode><mask_name>, vpshld_<mode><mask_name>,\n\tvpshrdv_<mode>, vpshrdv_<mode>_mask, vpshrdv_<mode>_maskz,\n\tvpshrdv_<mode>_maskz_1, vpshldv_<mode>, vpshldv_<mode>_mask,\n\tvpshldv_<mode>_maskz, vpshldv_<mode>_maskz_1): Use VI248_AVX512VL\n\tmode iterator instead of VI248_VLBW.\n\n\t* gcc.target/i386/pr83604.c: New test.\n\nFrom-SVN: r256280", "tree": {"sha": "8ed086a1effd409635d93a2dc38ed92b2c33935c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ed086a1effd409635d93a2dc38ed92b2c33935c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d33e32a7236e05137aa5383a8585d26e482238ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33e32a7236e05137aa5383a8585d26e482238ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d33e32a7236e05137aa5383a8585d26e482238ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d33e32a7236e05137aa5383a8585d26e482238ce/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b2a6901f931591e664bea4ec8a3922524fd8af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b2a6901f931591e664bea4ec8a3922524fd8af8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b2a6901f931591e664bea4ec8a3922524fd8af8"}], "stats": {"total": 135, "additions": 81, "deletions": 54}, "files": [{"sha": "e1042b89ddd93557f927a21c9e2f2db8bf53a2ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d33e32a7236e05137aa5383a8585d26e482238ce", "patch": "@@ -1,3 +1,14 @@\n+2018-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/83604\n+\t* config/i386/sse.md (VI248_VLBW): Rename to ...\n+\t(VI248_AVX512VL): ... this.  Don't guard V32HI with TARGET_AVX512BW.\n+\t(vpshrd_<mode><mask_name>, vpshld_<mode><mask_name>,\n+\tvpshrdv_<mode>, vpshrdv_<mode>_mask, vpshrdv_<mode>_maskz,\n+\tvpshrdv_<mode>_maskz_1, vpshldv_<mode>, vpshldv_<mode>_mask,\n+\tvpshldv_<mode>_maskz, vpshldv_<mode>_maskz_1): Use VI248_AVX512VL\n+\tmode iterator instead of VI248_VLBW.\n+\n 2018-01-05  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-fnsummary.c (record_modified_bb_info): Add OP."}, {"sha": "0030a008e12767aa5c76017be4570f83b51b94c3", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d33e32a7236e05137aa5383a8585d26e482238ce", "patch": "@@ -448,8 +448,8 @@\n (define_mode_iterator VI2_AVX2_AVX512BW\n   [(V32HI \"TARGET_AVX512BW\") (V16HI \"TARGET_AVX2\") V8HI])\n \n-(define_mode_iterator VI248_VLBW\n-  [(V32HI \"TARGET_AVX512BW\") V16SI V8DI\n+(define_mode_iterator VI248_AVX512VL\n+  [V32HI V16SI V8DI\n    (V16HI \"TARGET_AVX512VL\") (V8SI \"TARGET_AVX512VL\")\n    (V4DI \"TARGET_AVX512VL\") (V8HI \"TARGET_AVX512VL\")\n    (V4SI \"TARGET_AVX512VL\") (V2DI \"TARGET_AVX512VL\")])\n@@ -20116,46 +20116,46 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vpshrd_<mode><mask_name>\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 2 \"nonimmediate_operand\" \"vm\")\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI248_AVX512VL\n+\t  [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI248_AVX512VL 2 \"nonimmediate_operand\" \"vm\")\n \t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n \t  UNSPEC_VPSHRD))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrd<ssemodesuffix>\\t{%3, %2, %1, %0<mask_operand4>|%0<mask_operand4>, %1, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vpshld_<mode><mask_name>\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 2 \"nonimmediate_operand\" \"vm\")\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI248_AVX512VL\n+\t  [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"v\")\n+\t   (match_operand:VI248_AVX512VL 2 \"nonimmediate_operand\" \"vm\")\n \t   (match_operand:SI 3 \"const_0_to_255_operand\" \"n\")]\n \t  UNSPEC_VPSHLD))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshld<ssemodesuffix>\\t{%3, %2, %1, %0<mask_operand4>|%0<mask_operand4>, %1, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))])\n \n (define_insn \"vpshrdv_<mode>\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI248_AVX512VL\n+\t  [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"0\")\n+\t   (match_operand:VI248_AVX512VL 2 \"register_operand\" \"v\")\n+\t   (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_VPSHRDV))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrdv<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vpshrdv_<mode>_mask\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW\n-\t  (unspec:VI248_VLBW\n-\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI248_AVX512VL\n+\t  (unspec:VI248_AVX512VL\n+\t    [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n \t    UNSPEC_VPSHRDV)\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n@@ -20165,10 +20165,10 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_expand \"vpshrdv_<mode>_maskz\"\n-  [(match_operand:VI248_VLBW 0 \"register_operand\")\n-   (match_operand:VI248_VLBW 1 \"register_operand\")\n-   (match_operand:VI248_VLBW 2 \"register_operand\")\n-   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\")\n+  [(match_operand:VI248_AVX512VL 0 \"register_operand\")\n+   (match_operand:VI248_AVX512VL 1 \"register_operand\")\n+   (match_operand:VI248_AVX512VL 2 \"register_operand\")\n+   (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\")\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VBMI2\"\n {\n@@ -20180,39 +20180,39 @@\n })\n \n (define_insn \"vpshrdv_<mode>_maskz_1\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW\n-\t  (unspec:VI248_VLBW\n-\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI248_AVX512VL\n+\t  (unspec:VI248_AVX512VL\n+\t    [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n \t    UNSPEC_VPSHRDV)\n-\t  (match_operand:VI248_VLBW 4 \"const0_operand\" \"C\")\n+\t  (match_operand:VI248_AVX512VL 4 \"const0_operand\" \"C\")\n \t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshrdv<ssemodesuffix>\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vpshldv_<mode>\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(unspec:VI248_VLBW\n-\t  [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t   (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(unspec:VI248_AVX512VL\n+\t  [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"0\")\n+\t   (match_operand:VI248_AVX512VL 2 \"register_operand\" \"v\")\n+\t   (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n \t  UNSPEC_VPSHLDV))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshldv<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3 }\"\n    [(set_attr (\"prefix\") (\"evex\"))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"vpshldv_<mode>_mask\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW\n-\t  (unspec:VI248_VLBW\n-\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI248_AVX512VL\n+\t  (unspec:VI248_AVX512VL\n+\t    [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n \t    UNSPEC_VPSHLDV)\n \t  (match_dup 1)\n \t  (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\")))]\n@@ -20222,10 +20222,10 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_expand \"vpshldv_<mode>_maskz\"\n-  [(match_operand:VI248_VLBW 0 \"register_operand\")\n-   (match_operand:VI248_VLBW 1 \"register_operand\")\n-   (match_operand:VI248_VLBW 2 \"register_operand\")\n-   (match_operand:VI248_VLBW 3 \"nonimmediate_operand\")\n+  [(match_operand:VI248_AVX512VL 0 \"register_operand\")\n+   (match_operand:VI248_AVX512VL 1 \"register_operand\")\n+   (match_operand:VI248_AVX512VL 2 \"register_operand\")\n+   (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\")\n    (match_operand:<avx512fmaskmode> 4 \"register_operand\")]\n   \"TARGET_AVX512VBMI2\"\n {\n@@ -20237,14 +20237,14 @@\n })\n \n (define_insn \"vpshldv_<mode>_maskz_1\"\n-  [(set (match_operand:VI248_VLBW 0 \"register_operand\" \"=v\")\n-\t(vec_merge:VI248_VLBW\n-\t  (unspec:VI248_VLBW\n-\t    [(match_operand:VI248_VLBW 1 \"register_operand\" \"0\")\n-\t     (match_operand:VI248_VLBW 2 \"register_operand\" \"v\")\n-\t     (match_operand:VI248_VLBW 3 \"nonimmediate_operand\" \"vm\")]\n+  [(set (match_operand:VI248_AVX512VL 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VI248_AVX512VL\n+\t  (unspec:VI248_AVX512VL\n+\t    [(match_operand:VI248_AVX512VL 1 \"register_operand\" \"0\")\n+\t     (match_operand:VI248_AVX512VL 2 \"register_operand\" \"v\")\n+\t     (match_operand:VI248_AVX512VL 3 \"nonimmediate_operand\" \"vm\")]\n \t    UNSPEC_VPSHLDV)\n-\t  (match_operand:VI248_VLBW 4 \"const0_operand\" \"C\")\n+\t  (match_operand:VI248_AVX512VL 4 \"const0_operand\" \"C\")\n \t  (match_operand:<avx512fmaskmode> 5 \"register_operand\" \"Yk\")))]\n   \"TARGET_AVX512VBMI2\"\n   \"vpshldv<ssemodesuffix>\\t{%3, %2, %0%{%5%}%{z%}|%0%{%5%}%{z%}, %2, %3 }\""}, {"sha": "685298befd261dfda0adc775fe36531194125846", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d33e32a7236e05137aa5383a8585d26e482238ce", "patch": "@@ -1,3 +1,8 @@\n+2018-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/83604\n+\t* gcc.target/i386/pr83604.c: New test.\n+\n 2018-01-05  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.dg/vect/vect-align-4.c: New test."}, {"sha": "c6ff2a406f530be1e48f0f6f9af32de7fd8133e2", "filename": "gcc/testsuite/gcc.target/i386/pr83604.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83604.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d33e32a7236e05137aa5383a8585d26e482238ce/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83604.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr83604.c?ref=d33e32a7236e05137aa5383a8585d26e482238ce", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/83604 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mno-avx\" } */\n+\n+typedef short V __attribute__((__vector_size__(64)));\n+\n+__attribute__((target (\"avx512vbmi2\"))) V\n+foo (V x, V y, V z)\n+{\n+  return __builtin_ia32_vpshrdv_v32hi (x, y, z);\n+}"}]}