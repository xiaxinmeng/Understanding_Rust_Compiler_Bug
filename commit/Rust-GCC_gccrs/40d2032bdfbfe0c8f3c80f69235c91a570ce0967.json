{"sha": "40d2032bdfbfe0c8f3c80f69235c91a570ce0967", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBkMjAzMmJkZmJmZTBjOGYzYzgwZjY5MjM1YzkxYTU3MGNlMDk2Nw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-29T02:31:51Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-12-29T02:31:51Z"}, "message": "(sh_expand_prologue): Clear extra_push at start.\n\n(sh_expand_prologue): Clear extra_push at start.  Clear\ncurrent_function_anonymous_args if set.  Clear shiftsyms array.\n(sh_expand_epilogue): Don't clear extra_push,\ncurrent_function_pretend_args_size, current_function_anonymous_args,\nand shiftsyms array.\n\nFrom-SVN: r8697", "tree": {"sha": "ff8f699dcde510fc30c972ba7f5f9f894debac3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff8f699dcde510fc30c972ba7f5f9f894debac3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40d2032bdfbfe0c8f3c80f69235c91a570ce0967", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d2032bdfbfe0c8f3c80f69235c91a570ce0967", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d2032bdfbfe0c8f3c80f69235c91a570ce0967", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d2032bdfbfe0c8f3c80f69235c91a570ce0967/comments", "author": null, "committer": null, "parents": [{"sha": "369c7ab612f67350d529fc7b0a94d95a2d0e6a5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/369c7ab612f67350d529fc7b0a94d95a2d0e6a5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/369c7ab612f67350d529fc7b0a94d95a2d0e6a5e"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "4b76a602e300d7540e1113efa13008a1ec0313a2", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d2032bdfbfe0c8f3c80f69235c91a570ce0967/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d2032bdfbfe0c8f3c80f69235c91a570ce0967/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=40d2032bdfbfe0c8f3c80f69235c91a570ce0967", "patch": "@@ -2106,18 +2106,23 @@ void\n sh_expand_prologue ()\n {\n   int live_regs_mask;\n-  int d;\n+  int d, i;\n   extern tree current_function_decl;\n   live_regs_mask = calc_live_regs (&d);\n \n   /* We have pretend args if we had an object sent partially in registers\n      and partially on the stack - eg a large structure */\n   output_stack_adjust (-current_function_pretend_args_size);\n \n+  extra_push = 0;\n+\n+  /* This is set by SETUP_VARARGS to indicate that this is a varargs\n+     routine.  Clear it here so that the next function isn't affected.  */\n   if (current_function_anonymous_args)\n     {\n+      current_function_anonymous_args = 0;\n+\n       /* Push arg regs as if they'd been provided by caller in stack */\n-      int i;\n       for (i = 0; i < NPARM_REGS; i++)\n \t{\n \t  int rn = NPARM_REGS + FIRST_PARM_REG - i - 1;\n@@ -2139,18 +2144,19 @@ sh_expand_prologue ()\n       add_function (IDENTIFIER_POINTER (DECL_NAME (current_function_decl)));\n     }\n \n-\n+  /* ??? Hack.  Clear out the table set up by gen_shifty_op since this\n+     info does not apply to the next function.  */\n+  for (i = 0; i < 32; i++)\n+    shiftsyms[i] = 0;\n }\n \n void\n sh_expand_epilogue ()\n {\n   int live_regs_mask;\n-  int d;\n-  int i;\n+  int d, i;\n \n   live_regs_mask = calc_live_regs (&d);\n-\n   \n   if (frame_pointer_needed)\n     {\n@@ -2170,13 +2176,6 @@ sh_expand_epilogue ()\n     }\n \n   output_stack_adjust (extra_push + current_function_pretend_args_size);\n-\n-  extra_push = 0;\n-  current_function_pretend_args_size = 0;\n-  current_function_anonymous_args = 0;\n-  for (i = 0; i < 32; i++)\n-    shiftsyms[i] = 0;\n-\n }\n \n /* Define the offset between two registers, one to be eliminated, and"}]}