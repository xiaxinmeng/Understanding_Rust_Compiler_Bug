{"sha": "908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA4ZDFkM2FlYWYxYTQwZDkzMDhkYzA5YWFjNmU5NGQ3ODk5MWFmMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-10-23T11:10:28Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-10-23T11:10:28Z"}, "message": "PR libstdc++/82644 document IS 29124 support\n\nAlso fix declarations of special functions in C++17, to import them into\nthe global namespace in <math.h>, and to prevent defining the\nnon-standard hypergeometric functions in strict mode.\n\n\tPR libstdc++/82644\n\t* doc/xml/manual/intro.xml: Include new section.\n\t* doc/xml/manual/status_cxxis29124.xml: New section on IS 29124\n\tstatus.\n\t* include/bits/specfun.h [__STRICT_ANSI__] (hyperg, hypergf, hypergl)\n\t(conf_hyperg, conf_hypergf, conf_hypergl): Don't declare.\n\t* include/c_compatibility/math.h: Import special functions into\n\tglobal namespace for C++17.\n\t* testsuite/26_numerics/headers/cmath/82644.cc: New test.\n\t* testsuite/26_numerics/headers/cmath/functions_global_c++17.cc: New\n\ttest.\n\nFrom-SVN: r254004", "tree": {"sha": "82b188dba5472017bf9c97d9ccaea52cf744580d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82b188dba5472017bf9c97d9ccaea52cf744580d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a31c3216c53ffaeb21ec76e4491611bb40792b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a31c3216c53ffaeb21ec76e4491611bb40792b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a31c3216c53ffaeb21ec76e4491611bb40792b4"}], "stats": {"total": 477, "additions": 475, "deletions": 2}, "files": [{"sha": "d22a9b93da560afe626dd88e7571ab7e070b7124", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -1,3 +1,17 @@\n+2017-10-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/82644\n+\t* doc/xml/manual/intro.xml: Include new section.\n+\t* doc/xml/manual/status_cxxis29124.xml: New section on IS 29124\n+\tstatus.\n+\t* include/bits/specfun.h [__STRICT_ANSI__] (hyperg, hypergf, hypergl)\n+\t(conf_hyperg, conf_hypergf, conf_hypergl): Don't declare.\n+\t* include/c_compatibility/math.h: Import special functions into\n+\tglobal namespace for C++17.\n+\t* testsuite/26_numerics/headers/cmath/82644.cc: New test.\n+\t* testsuite/26_numerics/headers/cmath/functions_global_c++17.cc: New\n+\ttest.\n+\n 2017-10-21  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/experimental/filesystem/path/itr/traversal.cc: Do not"}, {"sha": "2df9c5fa6a79f1501f95ca744841fa4cfcc6be4a", "filename": "libstdc++-v3/doc/xml/manual/intro.xml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fintro.xml?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -50,6 +50,10 @@\n     <!-- Section 01.6 : Status C++ TR24733 -->\n     <xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\" parse=\"xml\" href=\"status_cxxtr24733.xml\">\n     </xi:include>\n+\n+    <!-- Section 01.7 : Status C++ IS 24733 -->\n+    <xi:include xmlns:xi=\"http://www.w3.org/2001/XInclude\" parse=\"xml\" href=\"status_cxxis29124.xml\">\n+    </xi:include>\n   </section>\n \n   <!-- Section 02 : License -->"}, {"sha": "40a90fc99443b355ea3fe0158c5db82d3c2c4e71", "filename": "libstdc++-v3/doc/xml/manual/status_cxxis29124.xml", "status": "added", "additions": 315, "deletions": 0, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxxis29124.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxxis29124.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxxis29124.xml?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -0,0 +1,315 @@\n+<section xmlns=\"http://docbook.org/ns/docbook\" version=\"5.0\"\n+\t xml:id=\"status.iso.specfun\" xreflabel=\"Status C++ 29124\">\n+<?dbhtml filename=\"status_iso_cxxis29124.html\"?>\n+\n+<info><title>C++ IS 29124</title>\n+  <keywordset>\n+    <keyword>ISO C++</keyword>\n+    <keyword>Special Functions</keyword>\n+  </keywordset>\n+</info>\n+\n+<para>\n+This table is based on the table of contents of ISO/IEC FDIS 29124\n+Doc No: N3060 Date: 2010-03-06\n+Extensions to the C++ Library to support mathematical special functions\n+</para>\n+\n+<para>\n+Complete support for IS 29124 is in GCC 6.1 and later releases, when using\n+at least C++11 (for older releases or C++98/C++03 use TR1 instead).\n+For C++11 and C++14 the additions to the library are not declared by their\n+respective headers unless <code>__STDCPP_WANT_MATH_SPEC_FUNCS__</code>\n+is defined as a macro that expands to a non-zero integer constant.\n+For C++17 the special functions are always declared (since GCC 7.1).\n+</para>\n+\n+<para>\n+When the special functions are declared the macro\n+<code>__STDCPP_MATH_SPEC_FUNCS__</code> is defined to <code>201003L</code>.\n+</para>\n+\n+<para>\n+In addition to the special functions defined in IS 29124, for\n+non-strict modes (i.e. <code>-std=gnu++NN</code> modes) the\n+hypergeometric functions and confluent hypergeometric functions\n+from TR1 are also provided, defined in namespace\n+<code>__gnu_cxx</code>.\n+</para>\n+\n+<!-- Status is Yes or No, Broken/Partial-->\n+<!--\n+   Yes\n+\n+   No\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+   Broken/Partial\n+      <?dbhtml bgcolor=\"#B0B0B0\" ?>\n+-->\n+<table frame=\"all\" xml:id=\"table.specfun_status\">\n+<title>C++ Special Functions Implementation Status</title>\n+\n+<tgroup cols=\"4\" align=\"left\" colsep=\"0\" rowsep=\"1\">\n+<colspec colname=\"c1\"/>\n+<colspec colname=\"c2\"/>\n+<colspec colname=\"c3\"/>\n+<colspec colname=\"c4\"/>\n+\n+  <thead>\n+    <row>\n+      <entry>Section</entry>\n+      <entry>Description</entry>\n+      <entry>Status</entry>\n+      <entry>Comments</entry>\n+    </row>\n+  </thead>\n+  <tbody>\n+    <row>\n+      <?dbhtml bgcolor=\"#B0B0B0\" ?>\n+      <entry>7</entry>\n+      <entry>Macro names</entry>\n+      <entry>Partial</entry>\n+      <entry>No diagnostic for inconsistent definitions of\n+             <code>__STDCPP_WANT_MATH_SPEC_FUNCS__</code></entry>\n+    </row>\n+    <row>\n+      <entry>8</entry>\n+      <entry>Mathematical special functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1</entry>\n+      <entry>Additions to header <code>&lt;cmath&gt;</code> synopsis</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.1</entry>\n+      <entry>associated Laguerre polynomials</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.2</entry>\n+      <entry>associated Legendre functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.3</entry>\n+      <entry>beta function</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.4</entry>\n+      <entry>(complete) elliptic integral of the first kind</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.5</entry>\n+      <entry>(complete) elliptic integral of the second kind</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.6</entry>\n+      <entry>(complete) elliptic integral of the third kind</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.7</entry>\n+      <entry>regular modified cylindrical Bessel functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.8</entry>\n+      <entry>cylindrical Bessel functions (of the first kind)</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.9</entry>\n+      <entry>irregular modified cylindrical Bessel functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.10</entry>\n+      <entry>cylindrical Neumann functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.11</entry>\n+      <entry>(incomplete) elliptic integral of the first kind</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.12</entry>\n+      <entry>(incomplete) elliptic integral of the second kind</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.13</entry>\n+      <entry>(incomplete) elliptic integral of the third kind</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.14</entry>\n+      <entry>exponential integral</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.15</entry>\n+      <entry>Hermite polynomials</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.16</entry>\n+      <entry>Laguerre polynomials</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.17</entry>\n+      <entry>Legendre polynomials</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.18</entry>\n+      <entry>Riemann zeta function</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.19</entry>\n+      <entry>spherical Bessel functions (of the first kind)</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.20</entry>\n+      <entry>spherical associated Legendre functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.1.21</entry>\n+      <entry>spherical Neumann functions</entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <entry>8.2</entry>\n+      <entry>Additions to header <code>&lt;math.h&gt;</code></entry>\n+      <entry>Y</entry>\n+      <entry/>\n+    </row>\n+    <row>\n+      <?dbhtml bgcolor=\"#B0B0B0\" ?>\n+      <entry>8.3</entry>\n+      <entry>The header <code>&lt;ctgmath&gt;</code></entry>\n+      <entry>Partial</entry>\n+      <entry>Conflicts with C++ 2011 requirements.</entry>\n+    </row>\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry>8.4</entry>\n+      <entry>The header <code>&lt;tgmath.h&gt;</code></entry>\n+      <entry>N</entry>\n+      <entry>Conflicts with C++ 2011 requirements.</entry>\n+    </row>\n+  </tbody>\n+</tgroup>\n+</table>\n+\n+<section xml:id=\"iso.specfun.specific\" xreflabel=\"Implementation Specific\"><info><title>Implementation Specific Behavior</title></info>\n+\n+   <para>For behaviour which is specified by the 2011 standard,\n+      see <link linkend=\"iso.2011.specific\">C++ 2011 Implementation\n+      Specific Behavior</link>. This section documents behaviour which\n+      is required by IS 29124.\n+   </para>\n+\n+   <para>\n+     <emphasis>7.2 [macro.user]/3 /4</emphasis> The functions declared in\n+     Clause 8 are only declared when\n+     <code>__STDCPP_WANT_MATH_SPEC_FUNCS__ == 1</code>\n+     (or in C++17 mode, for GCC 7.1 and later).\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.1 [sf.cmath.Lnm]/1</emphasis> The effect of calling\n+     these functions with <code>n >= 128</code> or <code>m >= 128</code>\n+     should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.2 [sf.cmath.Plm]/3</emphasis> The effect of calling\n+     these functions with <code>l >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.3 [sf.cmath.I]/3</emphasis> The effect of calling\n+     these functions with <code>nu >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.8 [sf.cmath.J]/3</emphasis> The effect of calling\n+     these functions with <code>nu >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.9 [sf.cmath.K]/3</emphasis> The effect of calling\n+     these functions with <code>nu >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.10 [sf.cmath.N]/3</emphasis> The effect of calling\n+     these functions with <code>nu >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.15 [sf.cmath.Hn]/3</emphasis> The effect of calling\n+     these functions with <code>n >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.16 [sf.cmath.Ln]/3</emphasis> The effect of calling\n+     these functions with <code>n >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.17 [sf.cmath.Pl]/3</emphasis> The effect of calling\n+     these functions with <code>l >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.19 [sf.cmath.j]/3</emphasis> The effect of calling\n+     these functions with <code>n >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.20 [sf.cmath.Ylm]/3</emphasis> The effect of calling\n+     these functions with <code>l >= 128</code> should be described here.\n+   </para>\n+\n+   <para>\n+     <emphasis>8.1.21 [sf.cmath.n]/3</emphasis> The effect of calling\n+     these functions with <code>n >= 128</code> should be described here.\n+   </para>\n+\n+</section>\n+\n+</section>"}, {"sha": "6bb3ec0968104b977c2005b4f47cf8f7afa4ad0f", "filename": "libstdc++-v3/include/bits/specfun.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -1201,6 +1201,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n+#ifndef __STRICT_ANSI__\n namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -1305,6 +1306,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace __gnu_cxx\n+#endif // __STRICT_ANSI__\n \n #pragma GCC visibility pop\n "}, {"sha": "28c7c8368f0e5b61ff0a6c929066f72566c3bbd6", "filename": "libstdc++-v3/include/c_compatibility/math.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fmath.h?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -111,7 +111,7 @@ using std::tgamma;\n using std::trunc;\n #endif // C++11 && _GLIBCXX_USE_C99_MATH_TR1\n \n-#if __STDCPP_WANT_MATH_SPEC_FUNCS__ == 1\n+#if _GLIBCXX_USE_STD_SPEC_FUNCS\n using std::assoc_laguerref;\n using std::assoc_laguerrel;\n using std::assoc_laguerre;\n@@ -175,7 +175,7 @@ using std::sph_legendre;\n using std::sph_neumannf;\n using std::sph_neumannl;\n using std::sph_neumann;\n-#endif // __STDCPP_WANT_MATH_SPEC_FUNCS__\n+#endif // _GLIBCXX_USE_STD_SPEC_FUNCS\n \n #endif // _GLIBCXX_MATH_H\n #endif // __cplusplus"}, {"sha": "956541a67d96a78befac078ff835a3442eca2194", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/82644.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F82644.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F82644.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2F82644.cc?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -0,0 +1,27 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-D__STDCPP_WANT_MATH_SPEC_FUNCS__ -D__STRICT_ANSI__\" }\n+// { dg-do compile { target c++11 } }\n+\n+#define conf_hyperg 1\n+#define conf_hypergf 2\n+#define conf_hypergl 3\n+#define hyperg 4\n+#define hypergf 5\n+#define hypergl 6\n+#include <cmath>     // PR libstdc++/82644"}, {"sha": "ce3a0dd4ac292e80fe19ada14cec4f3876b9a0e6", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/functions_global_c++17.cc", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ffunctions_global_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908d1d3aeaf1a40d9308dc09aac6e94d78991af1/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ffunctions_global_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ffunctions_global_c%2B%2B17.cc?ref=908d1d3aeaf1a40d9308dc09aac6e94d78991af1", "patch": "@@ -0,0 +1,111 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile }\n+\n+#include <math.h>\n+\n+namespace gnu\n+{\n+  using ::acos;\n+  using ::asin;\n+  using ::atan;\n+  using ::atan2;\n+  using ::ceil;\n+  using ::cos;\n+  using ::cosh;\n+  using ::exp;\n+  using ::fabs;\n+  using ::floor;\n+  using ::fmod;\n+  using ::frexp;\n+  using ::ldexp;\n+  using ::log;\n+  using ::log10;\n+  using ::modf;\n+  using ::pow;\n+  using ::sin;\n+  using ::sinh;\n+  using ::sqrt;\n+  using ::tan;\n+  using ::tanh;\n+\n+  using ::assoc_laguerre;\n+  using ::assoc_laguerref;\n+  using ::assoc_laguerrel;\n+  using ::assoc_legendre;\n+  using ::assoc_legendref;\n+  using ::assoc_legendrel;\n+  using ::beta;\n+  using ::betaf;\n+  using ::betal;\n+  using ::comp_ellint_1;\n+  using ::comp_ellint_1f;\n+  using ::comp_ellint_1l;\n+  using ::comp_ellint_2;\n+  using ::comp_ellint_2f;\n+  using ::comp_ellint_2l;\n+  using ::comp_ellint_3;\n+  using ::comp_ellint_3f;\n+  using ::comp_ellint_3l;\n+  using ::cyl_bessel_i;\n+  using ::cyl_bessel_if;\n+  using ::cyl_bessel_il;\n+  using ::cyl_bessel_j;\n+  using ::cyl_bessel_jf;\n+  using ::cyl_bessel_jl;\n+  using ::cyl_bessel_k;\n+  using ::cyl_bessel_kf;\n+  using ::cyl_bessel_kl;\n+  using ::cyl_neumann;\n+  using ::cyl_neumannf;\n+  using ::cyl_neumannl;\n+  using ::ellint_1;\n+  using ::ellint_1f;\n+  using ::ellint_1l;\n+  using ::ellint_2;\n+  using ::ellint_2f;\n+  using ::ellint_2l;\n+  using ::ellint_3;\n+  using ::ellint_3f;\n+  using ::ellint_3l;\n+  using ::expint;\n+  using ::expintf;\n+  using ::expintl;\n+  using ::hermite;\n+  using ::hermitef;\n+  using ::hermitel;\n+  using ::laguerre;\n+  using ::laguerref;\n+  using ::laguerrel;\n+  using ::legendre;\n+  using ::legendref;\n+  using ::legendrel;\n+  using ::riemann_zeta;\n+  using ::riemann_zetaf;\n+  using ::riemann_zetal;\n+  using ::sph_bessel;\n+  using ::sph_besself;\n+  using ::sph_bessell;\n+  using ::sph_legendre;\n+  using ::sph_legendref;\n+  using ::sph_legendrel;\n+  using ::sph_neumann;\n+  using ::sph_neumannf;\n+  using ::sph_neumannl;\n+}"}]}