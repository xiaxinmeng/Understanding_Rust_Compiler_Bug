{"sha": "a59e9305af116b773cf8240a7f3c50c24f9aab9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU5ZTkzMDVhZjExNmI3NzNjZjgyNDBhN2YzYzUwYzI0ZjlhYWI5Yg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2005-11-15T14:03:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:03:10Z"}, "message": "sem_ch7.adb (Install_Parent_Private_Declarations): New procedure nested within Analyze_Package_Specification to install the...\n\n2005-11-14  Gary Dismukes  <dismukes@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb (Install_Parent_Private_Declarations): New procedure\n\tnested within Analyze_Package_Specification to install the private\n\tdeclarations and use clauses within each of the parent units of a\n\tpackage instance of a generic child package.\n\t(Analyze_Package_Specification): When entering a private part of a\n\tpackage associated with a generic instance or formal package, the\n\tprivate declarations of the parent must be installed (by calling new\n\tprocedure Install_Parent_Private_Declarations).\n\tChange name Is_Package to Is_Package_Or_Generic_Package\n\t(Preserve_Full_Attributes): For a synchronized type, the corresponding\n\trecord is absent in a generic context, which does not indicate a\n\tcompiler error.\n\nFrom-SVN: r107002", "tree": {"sha": "136ec9faf25b55b76a92477dd12fb68397510af6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/136ec9faf25b55b76a92477dd12fb68397510af6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a59e9305af116b773cf8240a7f3c50c24f9aab9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59e9305af116b773cf8240a7f3c50c24f9aab9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59e9305af116b773cf8240a7f3c50c24f9aab9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59e9305af116b773cf8240a7f3c50c24f9aab9b/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e660dbf7fe236acf74dfde6945bcc20d5468d2af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e660dbf7fe236acf74dfde6945bcc20d5468d2af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e660dbf7fe236acf74dfde6945bcc20d5468d2af"}], "stats": {"total": 101, "additions": 95, "deletions": 6}, "files": [{"sha": "e538970b5a4e02eb55c8198f9b2cc63bfbc5151d", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 95, "deletions": 6, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59e9305af116b773cf8240a7f3c50c24f9aab9b/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59e9305af116b773cf8240a7f3c50c24f9aab9b/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a59e9305af116b773cf8240a7f3c50c24f9aab9b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -195,7 +195,7 @@ package body Sem_Ch7 is\n          Spec_Id := Current_Entity_In_Scope (Defining_Entity (N));\n \n          if Present (Spec_Id)\n-           and then Is_Package (Spec_Id)\n+           and then Is_Package_Or_Generic_Package (Spec_Id)\n          then\n             Pack_Decl := Unit_Declaration_Node (Spec_Id);\n \n@@ -213,7 +213,7 @@ package body Sem_Ch7 is\n             return;\n          end if;\n \n-         if Is_Package (Spec_Id)\n+         if Is_Package_Or_Generic_Package (Spec_Id)\n            and then\n              (Scope (Spec_Id) = Standard_Standard\n                or else Is_Child_Unit (Spec_Id))\n@@ -713,6 +713,14 @@ package body Sem_Ch7 is\n       --  the error message \"Unchecked_Union may not complete discriminated\n       --  partial view\".\n \n+      procedure Install_Parent_Private_Declarations (Inst_Id : Entity_Id);\n+      --  Given the package entity of a generic package instantiation or\n+      --  formal package whose corresponding generic is a child unit, installs\n+      --  the private declarations of each of the child unit's parents.\n+      --  This has to be done at the point of entering the instance package's\n+      --  private part rather than being done in Sem_Ch12.Install_Parent\n+      --  (which is where the parents' visible declarations are installed).\n+\n       ---------------------\n       -- Clear_Constants --\n       ---------------------\n@@ -881,6 +889,70 @@ package body Sem_Ch7 is\n          end loop;\n       end Inspect_Unchecked_Union_Completion;\n \n+      -----------------------------------------\n+      -- Install_Parent_Private_Declarations --\n+      -----------------------------------------\n+\n+      procedure Install_Parent_Private_Declarations (Inst_Id : Entity_Id) is\n+         Inst_Par  : Entity_Id := Inst_Id;\n+         Gen_Par   : Entity_Id;\n+         Inst_Node : Node_Id;\n+\n+      begin\n+         Gen_Par :=\n+           Generic_Parent (Specification (Unit_Declaration_Node (Inst_Par)));\n+         while Present (Gen_Par) and then Is_Child_Unit (Gen_Par) loop\n+            Inst_Node := Get_Package_Instantiation_Node (Inst_Par);\n+\n+            if (Nkind (Inst_Node) = N_Package_Instantiation\n+                  or else Nkind (Inst_Node) = N_Formal_Package_Declaration)\n+              and then Nkind (Name (Inst_Node)) = N_Expanded_Name\n+            then\n+               Inst_Par := Entity (Prefix (Name (Inst_Node)));\n+\n+               if Present (Renamed_Entity (Inst_Par)) then\n+                  Inst_Par := Renamed_Entity (Inst_Par);\n+               end if;\n+\n+               Gen_Par :=\n+                 Generic_Parent\n+                   (Specification (Unit_Declaration_Node (Inst_Par)));\n+\n+               --  Install the private declarations and private use clauses\n+               --  of a parent instance of the child instance.\n+\n+               if Present (Gen_Par) then\n+                  Install_Private_Declarations (Inst_Par);\n+                  Set_Use (Private_Declarations\n+                             (Specification\n+                                (Unit_Declaration_Node (Inst_Par))));\n+\n+               --  If we've reached the end of the generic instance parents,\n+               --  then finish off by looping through the nongeneric parents\n+               --  and installing their private declarations.\n+\n+               else\n+                  while Present (Inst_Par)\n+                    and then Inst_Par /= Standard_Standard\n+                    and then (not In_Open_Scopes (Inst_Par)\n+                                or else not In_Private_Part (Inst_Par))\n+                  loop\n+                     Install_Private_Declarations (Inst_Par);\n+                     Set_Use (Private_Declarations\n+                                (Specification\n+                                   (Unit_Declaration_Node (Inst_Par))));\n+                     Inst_Par := Scope (Inst_Par);\n+                  end loop;\n+\n+                  exit;\n+               end if;\n+\n+            else\n+               exit;\n+            end if;\n+         end loop;\n+      end Install_Parent_Private_Declarations;\n+\n    --  Start of processing for Analyze_Package_Specification\n \n    begin\n@@ -974,6 +1046,20 @@ package body Sem_Ch7 is\n          Install_Private_With_Clauses (Id);\n       end if;\n \n+      --  If this is a package associated with a generic instance or formal\n+      --  package, then the private declarations of each of the generic's\n+      --  parents must be installed at this point.\n+\n+      if Is_Generic_Instance (Id)\n+        or else\n+          (Nkind (Unit_Declaration_Node (Id)) = N_Generic_Package_Declaration\n+             and then\n+           Nkind (Original_Node (Unit_Declaration_Node (Id)))\n+             = N_Formal_Package_Declaration)\n+      then\n+         Install_Parent_Private_Declarations (Id);\n+      end if;\n+\n       --  Analyze private part if present. The flag In_Private_Part is\n       --  reset in End_Package_Scope.\n \n@@ -1472,9 +1558,10 @@ package body Sem_Ch7 is\n       Last_Entity : Entity_Id;\n \n    begin\n-      pragma Assert (Is_Package (P) or else Is_Record_Type (P));\n+      pragma Assert\n+        (Is_Package_Or_Generic_Package (P) or else Is_Record_Type (P));\n \n-      if Is_Package (P) then\n+      if Is_Package_Or_Generic_Package (P) then\n          Last_Entity := First_Private_Entity (P);\n       else\n          Last_Entity := Empty;\n@@ -1702,8 +1789,10 @@ package body Sem_Ch7 is\n                      Set_Access_Disp_Table\n                        (Priv, Access_Disp_Table\n                                (Corresponding_Record_Type (Base_Type (Full))));\n+\n+                  --  Generic context, or previous errors\n+\n                   else\n-                     pragma Assert (Serious_Errors_Detected > 0);\n                      null;\n                   end if;\n "}]}