{"sha": "243501b772ee3aaef5bdf31afe24af90fe43428b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzNTAxYjc3MmVlM2FhZWY1YmRmMzFhZmUyNGFmOTBmZTQzNDI4Yg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-11T20:24:27Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-12-11T20:24:27Z"}, "message": "intrinsic.texi (MAXLOC): Update documentation for character arrays and KIND argument.\n\n2017-12-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\t* intrinsic.texi (MAXLOC): Update documentation for\n\tcharacter arrays and KIND argument.\n\t(MINLOC): Likewise.\n\nFrom-SVN: r255546", "tree": {"sha": "6c92cf3c779523b58b2e4b3b3ce16c5e6a6433d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c92cf3c779523b58b2e4b3b3ce16c5e6a6433d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243501b772ee3aaef5bdf31afe24af90fe43428b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243501b772ee3aaef5bdf31afe24af90fe43428b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243501b772ee3aaef5bdf31afe24af90fe43428b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243501b772ee3aaef5bdf31afe24af90fe43428b/comments", "author": null, "committer": null, "parents": [{"sha": "ee61f88010e61b2d78c449349a8dd08f3b5a2c8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee61f88010e61b2d78c449349a8dd08f3b5a2c8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee61f88010e61b2d78c449349a8dd08f3b5a2c8a"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "ca20af33e2e1952a3062caae8876ef216cef3928", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243501b772ee3aaef5bdf31afe24af90fe43428b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243501b772ee3aaef5bdf31afe24af90fe43428b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=243501b772ee3aaef5bdf31afe24af90fe43428b", "patch": "@@ -1,3 +1,9 @@\n+2017-12-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* intrinsic.texi (MAXLOC): Update documentation for\n+\tcharacter arrays and KIND argument.\n+\t(MINLOC): Likewise.\n+\n 2017-12-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/45689"}, {"sha": "d8139453ce5613044ee4c065ca957e89ec69aa59", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243501b772ee3aaef5bdf31afe24af90fe43428b/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243501b772ee3aaef5bdf31afe24af90fe43428b/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=243501b772ee3aaef5bdf31afe24af90fe43428b", "patch": "@@ -9994,18 +9994,21 @@ that of the first such element in array element order.  If the array has\n zero size, or all of the elements of @var{MASK} are @code{.FALSE.}, then\n the result is an array of zeroes.  Similarly, if @var{DIM} is supplied\n and all of the elements of @var{MASK} along a given row are zero, the\n-result value for that row is zero.\n+result value for that row is zero. If the optional argument @var{KIND}\n+is present, the result is an integer of kind @var{KIND}, otherwise it is of\n+default kind.\n \n @item @emph{Standard}:\n-Fortran 95 and later\n+Fortran 95 and later; @var{ARRAY} of @code{CHARACTER} and the\n+@var{KIND} argument are available in Fortran 2003 and later.\n \n @item @emph{Class}:\n Transformational function\n \n @item @emph{Syntax}:\n @multitable @columnfractions .80\n-@item @code{RESULT = MAXLOC(ARRAY, DIM [, MASK])}\n-@item @code{RESULT = MAXLOC(ARRAY [, MASK])}\n+@item @code{RESULT = MAXLOC(ARRAY, DIM [, MASK] [,KIND])}\n+@item @code{RESULT = MAXLOC(ARRAY [, MASK] [,KIND])}\n @end multitable\n \n @item @emph{Arguments}:\n@@ -10017,6 +10020,8 @@ Transformational function\n inclusive.  It may not be an optional dummy argument.\n @item @var{MASK}  @tab Shall be an array of type @code{LOGICAL},\n and conformable with @var{ARRAY}.\n+@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+expression indicating the kind parameter of the result.\n @end multitable\n \n @item @emph{Return value}:\n@@ -10342,29 +10347,34 @@ that of the first such element in array element order.  If the array has\n zero size, or all of the elements of @var{MASK} are @code{.FALSE.}, then\n the result is an array of zeroes.  Similarly, if @var{DIM} is supplied\n and all of the elements of @var{MASK} along a given row are zero, the\n-result value for that row is zero.\n+result value for that row is zero. If the optional argument @var{KIND}\n+is present, the result is an integer of kind @var{KIND}, otherwise it is of\n+default kind.\n \n @item @emph{Standard}:\n-Fortran 95 and later\n+Fortran 95 and later; @var{ARRAY} of @code{CHARACTER} and the\n+@var{KIND} argument are available in Fortran 2003 and later.\n \n @item @emph{Class}:\n Transformational function\n \n @item @emph{Syntax}:\n @multitable @columnfractions .80\n-@item @code{RESULT = MINLOC(ARRAY, DIM [, MASK])}\n-@item @code{RESULT = MINLOC(ARRAY [, MASK])}\n+@item @code{RESULT = MINLOC(ARRAY, DIM [, MASK] [,KIND])}\n+@item @code{RESULT = MINLOC(ARRAY [, MASK], [,KIND])}\n @end multitable\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-@item @var{ARRAY} @tab Shall be an array of type @code{INTEGER} or\n-@code{REAL}.\n+@item @var{ARRAY} @tab Shall be an array of type @code{INTEGER},\n+@code{REAL} or @code{CHARACTER}.\n @item @var{DIM}   @tab (Optional) Shall be a scalar of type\n @code{INTEGER}, with a value between one and the rank of @var{ARRAY},\n inclusive.  It may not be an optional dummy argument.\n @item @var{MASK}  @tab Shall be an array of type @code{LOGICAL},\n and conformable with @var{ARRAY}.\n+@item @var{KIND} @tab (Optional) An @code{INTEGER} initialization\n+expression indicating the kind parameter of the result.\n @end multitable\n \n @item @emph{Return value}:"}]}