{"sha": "0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZjODFkNzhmOWU5N2QwZmI5YjdhNmMwNTExODk3NThiMWQyYWIwMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-08-17T12:47:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-08-17T12:47:30Z"}, "message": "cp-tree.h (struct lang_type): Remove template_info field.\n\n\t* cp-tree.h (struct lang_type): Remove template_info field.\n\t(CLASSTYPE_TEMPLATE_INFO): Use TYPE_LANG_SLOT_1.\n\t(TEMPLATE_TEMPLATE_PARM_TEMPLATE_INFO): Likewise.\n\nFrom-SVN: r251148", "tree": {"sha": "440e20b103f664c94f51c3c8107ce4b238667b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/440e20b103f664c94f51c3c8107ce4b238667b83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "157d38bafa44f8f53001b96c9a5d41bb9bf1d57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157d38bafa44f8f53001b96c9a5d41bb9bf1d57a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157d38bafa44f8f53001b96c9a5d41bb9bf1d57a"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "2ab058dfe013c60edeb50ec3844310ba1217e2b4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01", "patch": "@@ -1,3 +1,9 @@\n+2017-08-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (struct lang_type): Remove template_info field.\n+\t(CLASSTYPE_TEMPLATE_INFO): Use TYPE_LANG_SLOT_1.\n+\t(TEMPLATE_TEMPLATE_PARM_TEMPLATE_INFO): Likewise.\n+\n 2017-08-14  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/81117"}, {"sha": "f6b0b9214a65c12d10ffdd36c0d6204085953dae", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0fc81d78f9e97d0fb9b7a6c051189758b1d2ab01", "patch": "@@ -471,9 +471,12 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n      At present, only the six low-order bits are used.\n \n    TYPE_LANG_SLOT_1\n+     For a FUNCTION_TYPE or METHOD_TYPE, this is TYPE_RAISES_EXCEPTIONS.\n+     For a POINTER_TYPE (to a METHOD_TYPE), this is TYPE_PTRMEMFUNC_TYPE.\n      For an ENUMERAL_TYPE, this is ENUM_TEMPLATE_INFO.\n-     For a FUNCTION_TYPE or METHOD_TYPE, this is TYPE_RAISES_EXCEPTIONS\n-     For a POINTER_TYPE (to a METHOD_TYPE), this is TYPE_PTRMEMFUNC_TYPE\n+     For a RECORD_TYPE or UNION_TYPE this is CLASSTYPE_TEMPLATE_INFO,\n+     For a BOUND_TEMPLATE_TEMPLATE_PARM_TYPE this is also\n+     TEMPLATE_TEMPLATE_PARM_TEMPLATE_INFO.\n \n   BINFO_VIRTUALS\n      For a binfo, this is a TREE_LIST.  There is an entry for each\n@@ -2001,7 +2004,6 @@ struct GTY(()) lang_type {\n   vec<tree, va_gc> * GTY((reorder (\"resort_type_method_vec\"))) methods;\n   tree key_method;\n   tree decl_list;\n-  tree template_info;\n   tree befriending_classes;\n   /* In a RECORD_TYPE, information specific to Objective-C++, such\n      as a list of adopted protocols or a pointer to a corresponding\n@@ -3276,7 +3278,7 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n \n /* Template information for a RECORD_TYPE or UNION_TYPE.  */\n #define CLASSTYPE_TEMPLATE_INFO(NODE) \\\n-  (LANG_TYPE_CLASS_CHECK (RECORD_OR_UNION_CHECK (NODE))->template_info)\n+  (TYPE_LANG_SLOT_1 (RECORD_OR_UNION_CHECK (NODE)))\n \n /* Template information for an ENUMERAL_TYPE.  Although an enumeration may\n    not be a primary template, it may be declared within the scope of a\n@@ -3287,8 +3289,7 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n \n /* Template information for a template template parameter.  */\n #define TEMPLATE_TEMPLATE_PARM_TEMPLATE_INFO(NODE) \\\n-  (LANG_TYPE_CLASS_CHECK (BOUND_TEMPLATE_TEMPLATE_PARM_TYPE_CHECK (NODE)) \\\n-   ->template_info)\n+  (TYPE_LANG_SLOT_1 (BOUND_TEMPLATE_TEMPLATE_PARM_TYPE_CHECK (NODE)))\n \n /* Template information for an ENUMERAL_, RECORD_, UNION_TYPE, or\n    BOUND_TEMPLATE_TEMPLATE_PARM type.  This ignores any alias"}]}