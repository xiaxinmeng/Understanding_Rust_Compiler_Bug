{"sha": "d0803c0cf815ee85711cd36f5d429f784ec6ac26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA4MDNjMGNmODE1ZWU4NTcxMWNkMzZmNWQ0MjlmNzg0ZWM2YWMyNg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-12-08T21:26:11Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-12-08T21:26:11Z"}, "message": "re PR fortran/65173 (ICE while compiling wrong code)\n\n2016-12-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/65173\n\tPR fortran/69064\n\tPR fortran/69859\n\tPR fortran/78350\n\t* gfortran.h (gfc_namespace): Remove old_cl_list member.\n\t* parse.c (use_modules, next_statement): old_cl_list is gone.\n\t(clear_default_charlen): Remove no longer used function.\n\t(reject_statement): Do not try ot clean up gfc_charlen structure(s)\n\tthat may have been added to a cl_list list.\n\t* symbol.c (gfc_new_charlen): old_cl_list structure is gone.\n\n2016-12-07  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/65173\n\tPR fortran/69064\n\tPR fortran/69859\n\tPR fortran/78350\n\t* gfortran.dg/misplaced_implicit_character.f90: Adjust errors.\n\t* gfortran.dg/charlen_01.f90: New test.\n\t* gfortran.dg/charlen_02.f90: Ditto.\n\t* gfortran.dg/charlen_03.f90: Ditto.\n\t* gfortran.dg/charlen_04.f90: Ditto.\n\t* gfortran.dg/charlen_05.f90: Ditto.\n\t* gfortran.dg/charlen_06.f90: Ditto.\n\t* gfortran.dg/charlen_07.f90: Ditto.\n\t* gfortran.dg/charlen_08.f90: Ditto.\n\t* gfortran.dg/charlen_09.f90: Ditto.\n\t* gfortran.dg/charlen_10.f90: Ditto.\n\t* gfortran.dg/charlen_11.f90: Ditto.\n\t* gfortran.dg/charlen_12.f90: Ditto.\n\t* gfortran.dg/charlen_13.f90: Ditto.\n\t* gfortran.dg/charlen_14.f90: Ditto.\n\t* gfortran.dg/charlen_15.f90: Ditto.\n\t* gfortran.dg/charlen_16.f90: Ditto.\n\nFrom-SVN: r243463", "tree": {"sha": "0dcf60be34df4e190072841358f65e1621e21e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dcf60be34df4e190072841358f65e1621e21e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0803c0cf815ee85711cd36f5d429f784ec6ac26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0803c0cf815ee85711cd36f5d429f784ec6ac26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0803c0cf815ee85711cd36f5d429f784ec6ac26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0803c0cf815ee85711cd36f5d429f784ec6ac26/comments", "author": null, "committer": null, "parents": [{"sha": "7e964f49026322eb357412e38ba98e14325ca80c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e964f49026322eb357412e38ba98e14325ca80c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e964f49026322eb357412e38ba98e14325ca80c"}], "stats": {"total": 244, "additions": 194, "deletions": 50}, "files": [{"sha": "eb5e987128cd2afa35cdb05ae54d6798ff1505e6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -1,3 +1,16 @@\n+2016-12-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/65173\n+\tPR fortran/69064\n+\tPR fortran/69859\n+\tPR fortran/78350\n+\t* gfortran.h (gfc_namespace): Remove old_cl_list member.\n+\t* parse.c (use_modules, next_statement): old_cl_list is gone.\n+\t(clear_default_charlen): Remove no longer used function.\n+\t(reject_statement): Do not try ot clean up gfc_charlen structure(s)\n+\tthat may have been added to a cl_list list.\n+\t* symbol.c (gfc_new_charlen): old_cl_list structure is gone.\n+\n 2016-12-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/78659"}, {"sha": "fcd3a3fabc32f2d8dd7b3dc3cbb91bf45f87e42d", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -1768,7 +1768,7 @@ typedef struct gfc_namespace\n   /* !$ACC ROUTINE names.  */\n   gfc_oacc_routine_name *oacc_routine_names;\n \n-  gfc_charlen *cl_list, *old_cl_list;\n+  gfc_charlen *cl_list;\n \n   gfc_dt_list *derived_types;\n "}, {"sha": "b72863a2e5854717f162f7a1da7d154202d50cfb", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 3, "deletions": 33, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -116,7 +116,6 @@ use_modules (void)\n   gfc_pop_error (&old_error);\n   gfc_commit_symbols ();\n   gfc_warning_check ();\n-  gfc_current_ns->old_cl_list = gfc_current_ns->cl_list;\n   gfc_current_ns->old_equiv = gfc_current_ns->equiv;\n   gfc_current_ns->old_data = gfc_current_ns->data;\n   last_was_use_stmt = false;\n@@ -1386,7 +1385,6 @@ next_statement (void)\n \n   gfc_new_block = NULL;\n \n-  gfc_current_ns->old_cl_list = gfc_current_ns->cl_list;\n   gfc_current_ns->old_equiv = gfc_current_ns->equiv;\n   gfc_current_ns->old_data = gfc_current_ns->data;\n   for (;;)\n@@ -2483,41 +2481,13 @@ accept_statement (gfc_statement st)\n }\n \n \n-/* Clear default character types with charlen pointers that are about\n-   to become invalid.  */\n-\n-static void\n-clear_default_charlen (gfc_namespace *ns, const gfc_charlen *cl,\n-\t\t       const gfc_charlen *end)\n-{\n-  gfc_typespec *ts;\n-\n-  for (ts = &ns->default_type[0]; ts < &ns->default_type[GFC_LETTERS]; ts++)\n-      if (ts->type == BT_CHARACTER)\n-\t{\n-\t  const gfc_charlen *cl2;\n-\t  for (cl2 = cl; cl2 != end; cl2 = cl2->next)\n-\t    if (ts->u.cl == cl2)\n-\t      {\n-\t\tts->u.cl = NULL;\n-\t\tts->type = BT_UNKNOWN;\n-\t\tbreak;\n-\t      }\n-\t }\n-}\n-\n-/* Undo anything tentative that has been built for the current\n-   statement.  */\n+/* Undo anything tentative that has been built for the current statement,\n+   except if a gfc_charlen structure has been added to current namespace's\n+   list of gfc_charlen structure.  */\n \n static void\n reject_statement (void)\n {\n-  /* Revert to the previous charlen chain.  */\n-  clear_default_charlen (gfc_current_ns,\n-\t\t\t gfc_current_ns->cl_list, gfc_current_ns->old_cl_list);\n-  gfc_free_charlen (gfc_current_ns->cl_list, gfc_current_ns->old_cl_list);\n-  gfc_current_ns->cl_list = gfc_current_ns->old_cl_list;\n-\n   gfc_free_equiv_until (gfc_current_ns->equiv, gfc_current_ns->old_equiv);\n   gfc_current_ns->equiv = gfc_current_ns->old_equiv;\n "}, {"sha": "882be92efaf780cf432c6e493e203d5c337a714a", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -3794,31 +3794,22 @@ gfc_charlen*\n gfc_new_charlen (gfc_namespace *ns, gfc_charlen *old_cl)\n {\n   gfc_charlen *cl;\n+\n   cl = gfc_get_charlen ();\n \n   /* Copy old_cl.  */\n   if (old_cl)\n     {\n-      /* Put into namespace, but don't allow reject_statement\n-\t to free it if old_cl is given.  */\n-      gfc_charlen **prev = &ns->cl_list;\n-      cl->next = ns->old_cl_list;\n-      while (*prev != ns->old_cl_list)\n-\tprev = &(*prev)->next;\n-      *prev = cl;\n-      ns->old_cl_list = cl;\n       cl->length = gfc_copy_expr (old_cl->length);\n       cl->length_from_typespec = old_cl->length_from_typespec;\n       cl->backend_decl = old_cl->backend_decl;\n       cl->passed_length = old_cl->passed_length;\n       cl->resolved = old_cl->resolved;\n     }\n-  else\n-    {\n-      /* Put into namespace.  */\n-      cl->next = ns->cl_list;\n-      ns->cl_list = cl;\n-    }\n+\n+  /* Put into namespace.  */\n+  cl->next = ns->cl_list;\n+  ns->cl_list = cl;\n \n   return cl;\n }"}, {"sha": "7fe0e96a05cda1b3ec860ad03275f2934cc0ae4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -1,3 +1,26 @@\n+2016-12-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/65173\n+\tPR fortran/69064\n+\tPR fortran/69859\n+\tPR fortran/78350\n+\t* gfortran.dg/misplaced_implicit_character.f90: Adjust errors.\n+\t* gfortran.dg/charlen_01.f90: New test.\n+\t* gfortran.dg/charlen_02.f90: Ditto.\n+\t* gfortran.dg/charlen_03.f90: Ditto.\n+\t* gfortran.dg/charlen_04.f90: Ditto.\n+\t* gfortran.dg/charlen_05.f90: Ditto.\n+\t* gfortran.dg/charlen_06.f90: Ditto.\n+\t* gfortran.dg/charlen_07.f90: Ditto.\n+\t* gfortran.dg/charlen_08.f90: Ditto.\n+\t* gfortran.dg/charlen_09.f90: Ditto.\n+\t* gfortran.dg/charlen_10.f90: Ditto.\n+\t* gfortran.dg/charlen_11.f90: Ditto.\n+\t* gfortran.dg/charlen_12.f90: Ditto.\n+\t* gfortran.dg/charlen_13.f90: Ditto.\n+\t* gfortran.dg/charlen_14.f90: Ditto.\n+\t* gfortran.dg/charlen_15.f90: Ditto.\n+\n 2016-12-08  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/78671"}, {"sha": "1a980fd1bd1ca1f9bacd009e3168cd84c0ef72e8", "filename": "gcc/testsuite/gfortran.dg/charlen_01.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_01.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_01.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_01.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program min_obj\n+   implicit none\n+   integer, parameter :: a = 128\n+   type :: param_t\n+      integer :: n= 0\n+      real*8, dimension(256), allocatable :: x           ! { dg-error \"must have a deferred shape\" }\n+      real*8, dimension(2,256), allocatable :: bounds    ! { dg-error \"must have a deferred shape\" }\n+      character(a), dimension(256), allocatable :: names ! { dg-error \"must have a deferred shape\" }\n+   end type param_t\n+   contains\n+      subroutine extrace_params_from_section ( )\n+         character(*), dimension(), parameter :: &      ! { dg-error \"expression in array specification\" }\n+         & char_params = ['element', 'parametrization']\n+      end subroutine extrace_params_from_section\n+end program min_obj"}, {"sha": "264050384629453d07e0ba8729d7bd54ed1a7d5a", "filename": "gcc/testsuite/gfortran.dg/charlen_02.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_02.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_02.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_02.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character(1), allocatable :: n(256) ! { dg-error \"must have a deferred shape\" }\n+   end type\n+end"}, {"sha": "37f4bd88998ccdce62e19122f18ef87283f407aa", "filename": "gcc/testsuite/gfortran.dg/charlen_03.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_03.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_03.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_03.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character(:), allocatable :: x(n) ! { dg-error \"must have a deferred shape\" }\n+   end type\n+end\n+! { dg-excess-errors \"must be of INTEGER type\" }\n+"}, {"sha": "f93465f2ae6ddb67f6e2adbefa956c202ece5ce5", "filename": "gcc/testsuite/gfortran.dg/charlen_04.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_04.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_04.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_04.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character(*), allocatable :: x(*)  ! { dg-error \"must have a deferred shape\" }\n+   end type\n+end\n+! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "0eb0015bf38c5692dec448d61588990201518338", "filename": "gcc/testsuite/gfortran.dg/charlen_05.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_05.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_05.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_05.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character(*) :: x y  ! { dg-error \"error in data declaration\" }\n+   end type\n+end\n+! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "e20d6047f68775babd31fa78d884ae56fb696182", "filename": "gcc/testsuite/gfortran.dg/charlen_06.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_06.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_06.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_06.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character(*) :: x+1  ! { dg-error \"error in data declaration\" }\n+   end type\n+end\n+! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "b1f5627a2fbc52ce62413b86c99c8ac7664fd03d", "filename": "gcc/testsuite/gfortran.dg/charlen_07.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_07.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_07.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_07.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+   end type\n+   type, extends(t) :: t2\n+      character x =  ! { dg-error \"error in data declaration\" }\n+   end type\n+end"}, {"sha": "bab23b01b34cff043a5a7fe5558218e99aea484c", "filename": "gcc/testsuite/gfortran.dg/charlen_08.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_08.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_08.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_08.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+   end type\n+   type, extends(t) :: t2\n+      character x 'x'  ! { dg-error \"error in data declaration\" }\n+   end type\n+end"}, {"sha": "99b022bdfc4679d4265c00bce35e7306a0c4e67e", "filename": "gcc/testsuite/gfortran.dg/charlen_09.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_09.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_09.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_09.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+   end type\n+   type, extends(t) :: t2\n+      character x(:)       ! { dg-error \"must have an explicit shape\" }\n+   end type\n+end"}, {"sha": "2d7ba6cf0f767e163bef33611c14359c15b39506", "filename": "gcc/testsuite/gfortran.dg/charlen_10.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_10.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character(:), allocatable :: x(y)1  ! { dg-error \"must have a deferred shape\" }\n+   end type\n+end\n+! { dg-excess-errors \"must be of INTEGER type\" } \n+"}, {"sha": "d0635f97bb4eb42910e59c0deecf399593ed3644", "filename": "gcc/testsuite/gfortran.dg/charlen_11.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_11.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+   type t\n+      character, allocatable :: z1(:), z1(:)    ! { dg-error \"already declared at\" }\n+   end type\n+end"}, {"sha": "cbf68d8d62fd0dca9ac66af2c39283e864d4cfcb", "filename": "gcc/testsuite/gfortran.dg/charlen_12.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_12.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! PR fortran/65173\n+program p\n+    type t\n+       character, allocatable :: z1(:) ! { dg-error \".\" }\n+       character, allocatable :: z1(:) ! { dg-error \"already declared at\" }\n+    end type\n+end"}, {"sha": "d89b71c9dcb29a8db4308e6a81e07c9d60db258b", "filename": "gcc/testsuite/gfortran.dg/charlen_13.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_13.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_13.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_13.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR fortran/69859\n+program p\n+   type t\n+      character(2), allocatable :: a(*) ! { dg-error \"must have a deferred shape\" }\n+      character(*), allocatable :: b(2) ! { dg-error \"must have a deferred shape\" }\n+      character(*), allocatable :: c(*) ! { dg-error \"must have a deferred shape\" }\n+   end type\n+end\n+! { dg-excess-errors \"needs to be a constant specification\" } "}, {"sha": "a9607853891fe5bef0bc4a7e4d51eca0c9190c91", "filename": "gcc/testsuite/gfortran.dg/charlen_14.f90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_14.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+! PR fortran/69064\n+subroutine setup_check_path(path)             ! { dg-error \"has no IMPLICIT type\" }\n+  implicit none\n+  character(len=path_len),intent(inout)::path ! { dg-error \"Scalar INTEGER expression\" }\n+end"}, {"sha": "e141f1eb3ac60eec0ebb11625a0faab204821ce4", "filename": "gcc/testsuite/gfortran.dg/charlen_15.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_15.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+! PR fortran/78350 \n+module m\n+   type t\n+      character(2) :: c(1) = [character(3) :: 'abc']\n+   end type\n+   type(t) :: x\n+end\n+program foo\n+  use m\n+  if (trim(x%c(1)) /= 'ab') call abort\n+end program foo\n+! { dg-final { cleanup-modules \"m\" } }\n+"}, {"sha": "826f733c82dcaa4a3f7b1ad279cd93dd68e66bd9", "filename": "gcc/testsuite/gfortran.dg/charlen_16.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcharlen_16.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do run }\n+! PR fortran/78350 \n+program p\n+   type t\n+      character(2) :: c(1) = [character(3) :: 'abc']\n+   end type\n+   type(t) :: x\n+   if (trim(x%c(1)) /= 'ab') call abort\n+end"}, {"sha": "fc79b80d0f45754ac8b85861f5a2bd82d120fcd5", "filename": "gcc/testsuite/gfortran.dg/misplaced_implicit_character.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fmisplaced_implicit_character.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0803c0cf815ee85711cd36f5d429f784ec6ac26/gcc%2Ftestsuite%2Fgfortran.dg%2Fmisplaced_implicit_character.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmisplaced_implicit_character.f90?ref=d0803c0cf815ee85711cd36f5d429f784ec6ac26", "patch": "@@ -3,6 +3,6 @@\n subroutine s\n   real x ! { dg-error \"\" }\n   implicit character (a) ! { dg-error \"IMPLICIT statement at .1. cannot follow data declaration statement at .2.\" }\n-\n-  a1 = 'z' ! { dg-error \"Symbol .a1. at .1. has no IMPLICIT type\" }\n+  x = 1\n+  a = 'a'\n end subroutine s"}]}