{"sha": "18c05628a6a75bce5be48547edb9c75e3f6dab76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjMDU2MjhhNmE3NWJjZTViZTQ4NTQ3ZWRiOWM3NWUzZjZkYWI3Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-08-21T19:34:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-08-21T19:34:34Z"}, "message": "nvptx.md (allocate_stack): Emit sorry during expansion.\n\n\t* config/nvptx/nvptx.md (allocate_stack): Emit sorry during\n\texpansion.\n\t* config/nvptx/nvptx.c (nvptx_declare_function_name): Look at\n\tcrtl->stack_alignment_needed to determine alignment.\n\t(nvptx_get_drap_rtx): New.\n\t(TARGET_GET_DRAP_RTX): Override.\n\t* config/nvptx/nvptx.h (MAX_STACK_ALIGNMENT): Set.\n\nFrom-SVN: r227084", "tree": {"sha": "0d75ce9c1a368d40ad192cfd905132245b4c2bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d75ce9c1a368d40ad192cfd905132245b4c2bb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c05628a6a75bce5be48547edb9c75e3f6dab76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c05628a6a75bce5be48547edb9c75e3f6dab76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c05628a6a75bce5be48547edb9c75e3f6dab76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c05628a6a75bce5be48547edb9c75e3f6dab76/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7717e0f19e46c0accd55b48b67d0408f037b4a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7717e0f19e46c0accd55b48b67d0408f037b4a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7717e0f19e46c0accd55b48b67d0408f037b4a7a"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "61a3360e20eb3897ebe8a786511f7555e4b03782", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18c05628a6a75bce5be48547edb9c75e3f6dab76", "patch": "@@ -1,3 +1,13 @@\n+2015-08-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/nvptx.md (allocate_stack): Emit sorry during\n+\texpansion.\n+\t* config/nvptx/nvptx.c (nvptx_declare_function_name): Look at\n+\tcrtl->stack_alignment_needed to determine alignment.\n+\t(nvptx_get_drap_rtx): New.\n+\t(TARGET_GET_DRAP_RTX): Override.\n+\t* config/nvptx/nvptx.h (MAX_STACK_ALIGNMENT): Set.\n+\n 2015-08-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* config.build: Remove case for m68000-hp-hpux* | m68k-hp-hpux*."}, {"sha": "8f74a14199a9c25d9cc6eb2be57ca4283da31862", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=18c05628a6a75bce5be48547edb9c75e3f6dab76", "patch": "@@ -598,9 +598,11 @@ nvptx_declare_function_name (FILE *file, const char *name, const_tree decl)\n   sz = get_frame_size ();\n   if (sz > 0 || cfun->machine->has_call_with_sc)\n     {\n+      int alignment = crtl->stack_alignment_needed / BITS_PER_UNIT;\n+\n       fprintf (file, \"\\t.reg.u%d %%frame;\\n\"\n-\t       \"\\t.local.align 8 .b8 %%farray[\" HOST_WIDE_INT_PRINT_DEC\"];\\n\",\n-\t       BITS_PER_WORD, sz == 0 ? 1 : sz);\n+\t       \"\\t.local.align %d .b8 %%farray[\" HOST_WIDE_INT_PRINT_DEC\"];\\n\",\n+\t       BITS_PER_WORD, alignment, sz == 0 ? 1 : sz);\n       fprintf (file, \"\\tcvta.local.u%d %%frame, %%farray;\\n\",\n \t       BITS_PER_WORD);\n     }\n@@ -726,6 +728,14 @@ nvptx_function_ok_for_sibcall (tree, tree)\n   return false;\n }\n \n+/* Return Dynamic ReAlignment Pointer RTX.  For PTX there isn't any.  */\n+\n+static rtx\n+nvptx_get_drap_rtx (void)\n+{\n+  return NULL_RTX;\n+}\n+\n /* Implement the TARGET_CALL_ARGS hook.  Record information about one\n    argument to the next call.  */\n \n@@ -2118,6 +2128,8 @@ nvptx_file_end (void)\n #define TARGET_LIBCALL_VALUE nvptx_libcall_value\n #undef TARGET_FUNCTION_OK_FOR_SIBCALL\n #define TARGET_FUNCTION_OK_FOR_SIBCALL nvptx_function_ok_for_sibcall\n+#undef TARGET_GET_DRAP_RTX\n+#define TARGET_GET_DRAP_RTX nvptx_get_drap_rtx\n #undef TARGET_SPLIT_COMPLEX_ARG\n #define TARGET_SPLIT_COMPLEX_ARG hook_bool_const_tree_true\n #undef TARGET_RETURN_IN_MEMORY"}, {"sha": "60a922af93fec96dae016783b3aff025f88b5f00", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=18c05628a6a75bce5be48547edb9c75e3f6dab76", "patch": "@@ -52,6 +52,8 @@\n #define BIGGEST_ALIGNMENT 64\n #define STRICT_ALIGNMENT 1\n \n+#define MAX_STACK_ALIGNMENT (1024 * 8)\n+\n /* Copied from elf.h and other places.  We'd otherwise use\n    BIGGEST_ALIGNMENT and fail a number of testcases.  */\n #define MAX_OFILE_ALIGNMENT (32768 * 8)"}, {"sha": "b857e53bb22053de7f35423362fd4f79a7dd44d7", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c05628a6a75bce5be48547edb9c75e3f6dab76/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=18c05628a6a75bce5be48547edb9c75e3f6dab76", "patch": "@@ -1241,6 +1241,12 @@\n    (match_operand 1 \"nvptx_register_operand\")]\n   \"\"\n {\n+  /* The ptx documentation specifies an alloca intrinsic (for 32 bit\n+     only)  but notes it is not implemented.  The assembler emits a\n+     confused error message.  Issue a blunt one now instead.  */\n+  sorry (\"target cannot support alloca.\");\n+  emit_insn (gen_nop ());\n+  DONE;\n   if (TARGET_ABI64)\n     emit_insn (gen_allocate_stack_di (operands[0], operands[1]));\n   else"}]}