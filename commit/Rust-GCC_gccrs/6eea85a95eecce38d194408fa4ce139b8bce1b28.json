{"sha": "6eea85a95eecce38d194408fa4ce139b8bce1b28", "node_id": "C_kwDOANBUbNoAKDZlZWE4NWE5NWVlY2NlMzhkMTk0NDA4ZmE0Y2UxMzliOGJjZTFiMjg", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-01T00:17:51Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-12-01T00:17:51Z"}, "message": "Daily bump.", "tree": {"sha": "f5585e36fade51450b562ea7a9a3885c1ed35f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5585e36fade51450b562ea7a9a3885c1ed35f3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eea85a95eecce38d194408fa4ce139b8bce1b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eea85a95eecce38d194408fa4ce139b8bce1b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eea85a95eecce38d194408fa4ce139b8bce1b28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eea85a95eecce38d194408fa4ce139b8bce1b28/comments", "author": null, "committer": null, "parents": [{"sha": "d13c359a49291f0a1206adbad4065677010b7e4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d13c359a49291f0a1206adbad4065677010b7e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d13c359a49291f0a1206adbad4065677010b7e4b"}], "stats": {"total": 302, "additions": 301, "deletions": 1}, "files": [{"sha": "33e0e3eb5859e3f48baa7f6a9482ef3061af6566", "filename": "gcc/ChangeLog", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,106 @@\n+2022-11-30  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* config/pa/pa.md (addvdi3): Force operand 2 to a register.\n+\tRemove \"addi,tsv,*\" instruction from unamed pattern.\n+\t(subvdi3): Force operand 1 to a register.\n+\tRemove \"subi,tsv\" instruction from from unamed pattern.\n+\n+2022-11-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.md (aarch64_cpymemdi): Specify clobber of CC reg.\n+\t(*aarch64_cpymemdi): Likewise.\n+\t(aarch64_movmemdi): Likewise.\n+\t(aarch64_setmemdi): Likewise.\n+\t(*aarch64_setmemdi): Likewise.\n+\n+2022-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-switch-conversion.cc (bit_test_cluster::emit): Remove\n+\tdead variable bt_range.\n+\n+2022-11-30  Iskander Shakirzyanov  <iskander@ispras.ru>\n+\t    Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\tPR driver/107787\n+\t* common.opt (Warray-bounds): Turn into alias of\n+\t-Warray-bounds=1.\n+\t* builtins.cc (c_strlen): Use OPT_Warray_bounds_\n+\tinstead of OPT_Warray_bounds.\n+\t* diagnostic-spec.cc (nowarn_spec_t::nowarn_spec_t): Ditto.\n+\t* gimple-array-bounds.cc (array_bounds_checker::check_array_ref,\n+\tarray_bounds_checker::check_mem_ref,\n+\tarray_bounds_checker::check_addr_expr,\n+\tarray_bounds_checker::check_array_bounds): Ditto.\n+\t* gimple-ssa-warn-restrict.cc (maybe_diag_access_bounds): Ditto.\n+\n+2022-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/101301\n+\tPR tree-optimization/103680\n+\t* tree-switch-conversion.cc (bit_test_cluster::emit):\n+\tHandle correctly remaining probability.\n+\t(switch_decision_tree::try_switch_expansion): Fix BB's count\n+\twhere a cluster expansion happens.\n+\t(switch_decision_tree::emit_cmp_and_jump_insns): Fill up also\n+\tBB count.\n+\t(switch_decision_tree::do_jump_if_equal): Likewise.\n+\t(switch_decision_tree::emit_case_nodes): Handle special case\n+\tfor BT expansion which can also fallback to a default BB.\n+\t* tree-switch-conversion.h (cluster::cluster): Add\n+\tm_default_prob probability.\n+\n+2022-11-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107919\n+\t* gimple-predicate-analysis.cc (simplify_1): Rename to ...\n+\t(simplify_1a): .. this.\n+\t(simplify_1b): New.\n+\t(predicate::simplify): Call both simplify_1a and simplify_1b.\n+\n+2022-11-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-uninit.cc (find_uninit_use): Dump the edge for a\n+\tPHI node.\n+\n+2022-11-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107919\n+\t* gimple-predicate-analysis.cc (predicate::simplify_2):\n+\tHandle predicates of arbitrary length.\n+\n+2022-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/107835\n+\t* tree-chrec.cc (chrec_apply): Don't handle \"{a,\u00a0+,\u00a0a}\u00a0(x-1)\"\n+\tas\u00a0\"a*x\" if type is a pointer type.\n+\n+2022-11-30  Paul-Antoine Arras  <pa@codesourcery.com>\n+\n+\t* config/gcn/gcn.cc (gcn_omp_device_kind_arch_isa): Add gfx803.\n+\t* config/gcn/t-omp-device: Add gfx803.\n+\n+2022-11-30  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* config/loongarch/linux.h (STACK_CHECK_MOVING_SP):\n+\tDefine this macro to 1.\n+\t* config/loongarch/loongarch.cc (STACK_CLASH_PROTECTION_GUARD_SIZE):\n+\tSize of guard page.\n+\t(loongarch_first_stack_step): Return the size of the first drop stack\n+\taccording to whether stack checking is performed.\n+\t(loongarch_emit_probe_stack_range): Adjust the method of stack checking in prologue.\n+\t(loongarch_output_probe_stack_range): Delete useless code.\n+\t(loongarch_expand_prologue): Adjust the method of stack checking in prologue.\n+\t(loongarch_option_override_internal): Enforce that interval is the same\n+\tsize as size so the mid-end does the right thing.\n+\t* config/loongarch/loongarch.h (STACK_CLASH_MAX_UNROLL_PAGES):\n+\tNew macro decide whether to loop stack detection.\n+\n+2022-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/103546\n+\t* doc/invoke.texi (Static Analyzer Options): Add isatty, ferror,\n+\tfileno, and getc to the list of functions known to the analyzer.\n+\n 2022-11-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/107852"}, {"sha": "f0a26d37c1680bde1dfb22b294150c85a88b78f8", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1 +1 @@\n-20221130\n+20221201"}, {"sha": "a7724cd1f450e98a045b4fc14fb95a4d47d05095", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,59 @@\n+2022-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* region-model-impl-calls.cc (class kf_fgets): Move to sm-file.cc.\n+\t(kf_fgets::impl_call_pre): Likewise.\n+\t(class kf_fread): Likewise.\n+\t(kf_fread::impl_call_pre): Likewise.\n+\t(class kf_getchar): Likewise.\n+\t(class kf_stdio_output_fn): Likewise.\n+\t(register_known_functions): Move registration of\n+\tBUILT_IN_FPRINTF, BUILT_IN_FPRINTF_UNLOCKED, BUILT_IN_FPUTC,\n+\tBUILT_IN_FPUTC_UNLOCKED, BUILT_IN_FPUTS, BUILT_IN_FPUTS_UNLOCKED,\n+\tBUILT_IN_FWRITE, BUILT_IN_FWRITE_UNLOCKED, BUILT_IN_PRINTF,\n+\tBUILT_IN_PRINTF_UNLOCKED, BUILT_IN_PUTC, BUILT_IN_PUTCHAR,\n+\tBUILT_IN_PUTCHAR_UNLOCKED, BUILT_IN_PUTC_UNLOCKED, BUILT_IN_PUTS,\n+\tBUILT_IN_PUTS_UNLOCKED, BUILT_IN_VFPRINTF, BUILT_IN_VPRINTF,\n+\t\"getchar\", \"fgets\", \"fgets_unlocked\", and \"fread\" to\n+\tregister_known_file_functions.\n+\t* sm-file.cc (class kf_stdio_output_fn): Move here from\n+\tregion-model-impl-calls.cc.\n+\t(class kf_fgets): Likewise.\n+\t(class kf_fread): Likewise.\n+\t(class kf_getchar): Likewise.\n+\t(register_known_file_functions): Move registration of\n+\tBUILT_IN_FPRINTF, BUILT_IN_FPRINTF_UNLOCKED, BUILT_IN_FPUTC,\n+\tBUILT_IN_FPUTC_UNLOCKED, BUILT_IN_FPUTS, BUILT_IN_FPUTS_UNLOCKED,\n+\tBUILT_IN_FWRITE, BUILT_IN_FWRITE_UNLOCKED, BUILT_IN_PRINTF,\n+\tBUILT_IN_PRINTF_UNLOCKED, BUILT_IN_PUTC, BUILT_IN_PUTCHAR,\n+\tBUILT_IN_PUTCHAR_UNLOCKED, BUILT_IN_PUTC_UNLOCKED, BUILT_IN_PUTS,\n+\tBUILT_IN_PUTS_UNLOCKED, BUILT_IN_VFPRINTF, BUILT_IN_VPRINTF,\n+\t\"fgets\", \"fgets_unlocked\", \"fread\", and \"getchar\" to here from\n+\tregister_known_functions.\n+\n+2022-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/103546\n+\t* analyzer.h (register_known_file_functions): New decl.\n+\t* program-state.cc (sm_state_map::replay_call_summary): Rejct\n+\tattempts to store sm-state for caller_sval that can't have\n+\tassociated state.\n+\t* region-model-impl-calls.cc (register_known_functions): Call\n+\tregister_known_file_functions.\n+\t* sm-fd.cc (class kf_isatty): New.\n+\t(register_known_fd_functions): Register it.\n+\t* sm-file.cc (class kf_ferror): New.\n+\t(class kf_fileno): New.\n+\t(class kf_getc): New.\n+\t(register_known_file_functions): New.\n+\n+2022-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105784\n+\t* region-model-manager.cc\n+\t(region_model_manager::maybe_fold_binop): For POINTER_PLUS_EXPR,\n+\tPLUS_EXPR and MINUS_EXPR, eliminate requirement that the final\n+\ttype matches that of arg0 in favor of a cast.\n+\n 2022-11-24  Martin Liska  <mliska@suse.cz>\n \n \t* varargs.cc: Fix Clang warnings."}, {"sha": "008b26efc079aedeb0510d3598b62d4afd690046", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,11 @@\n+2022-11-30  Iskander Shakirzyanov  <iskander@ispras.ru>\n+\t    Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\tPR driver/107787\n+\t* c-common.cc (fold_offsetof,\n+\tconvert_vector_to_array_for_subscript): Use OPT_Warray_bounds_\n+\tinstead of OPT_Warray_bounds.\n+\n 2022-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c.opt (fcontract-role=, fcontract-semantic=): Terminate descriptions"}, {"sha": "0cc1897e243b15bd835da40a4d5ac0e7076b2ca5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,9 @@\n+2022-11-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107542\n+\t* typeck.cc (cp_build_binary_op): In the SPACESHIP_EXPR case,\n+\thandle an error_mark_node result type.\n+\n 2022-11-29  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/107864"}, {"sha": "74346eab2ef265b2c83550cf865e484b2616c486", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,31 @@\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_TEXI_FILES): Add d/implement-d.texi.\n+\t* gdc.texi: Adjust introduction, include implement-d.texi.\n+\t* implement-d.texi: New file.\n+\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in: Only include doc/include when building documentation.\n+\t(d.html): Rename html directory to $(build_htmldir)/gdc.\n+\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.texi: Separate indices into options and keywords.\n+\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.texi: Update gdc option documentation.\n+\t* lang.opt (frevert=intpromote): Correct documentation.\n+\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/107592\n+\t* toir.cc (IRVisitor::push_unrolled_continue_label): New method.\n+\t(IRVisitor::pop_unrolled_continue_label): New method.\n+\t(IRVisitor::visit (UnrolledLoopStatement *)): Use them instead of\n+\tpush_continue_label and pop_continue_label.\n+\n 2022-11-23  Martin Liska  <mliska@suse.cz>\n \n \t* Make-lang.in: Use it as $DO_LINK_MUTEX."}, {"sha": "fbb7ed559ce3b1f97bd49da96944e0fcee33f0ad", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,7 @@\n+2022-11-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* parse.cc (parse_omp_structured_block): Remove extra semicolon.\n+\n 2022-11-29  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "fdcc303fdeb6d8d86cae597919518ccc9830f622", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,79 @@\n+2022-11-30  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/mops_5.c: New test.\n+\t* gcc.target/aarch64/mops_6.c: Likewise.\n+\t* gcc.target/aarch64/mops_7.c: Likewise.\n+\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/107592\n+\t* gdc.dg/pr107592.d: New test.\n+\n+2022-11-30  Iskander Shakirzyanov  <iskander@ispras.ru>\n+\t    Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\tPR driver/107787\n+\t* gcc.dg/Warray-bounds-34.c: Correct the regular expression\n+\tfor -Warray-bounds=.\n+\t* gcc.dg/Warray-bounds-43.c: Likewise.\n+\t* gcc.dg/pr107787.c: New test.\n+\n+2022-11-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/107919\n+\t* g++.dg/warn/Wuninitialized-pr107919-1.C: New testcase.\n+\n+2022-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/107835\n+\t* gcc.c-torture/compile/pr107835.c: New test.\n+\n+2022-11-30  Alexandre Oliva  <oliva@adacore.com>\n+\n+\tPR target/107304\n+\t* gcc.target/i386/pr107304.c: dg-require ifunc support.\n+\n+2022-11-30  Lulu Cheng  <chenglulu@loongson.cn>\n+\n+\t* lib/target-supports.exp:\n+\t* gcc.target/loongarch/stack-check-alloca-1.c: New test.\n+\t* gcc.target/loongarch/stack-check-alloca-2.c: New test.\n+\t* gcc.target/loongarch/stack-check-alloca-3.c: New test.\n+\t* gcc.target/loongarch/stack-check-alloca-4.c: New test.\n+\t* gcc.target/loongarch/stack-check-alloca-5.c: New test.\n+\t* gcc.target/loongarch/stack-check-alloca-6.c: New test.\n+\t* gcc.target/loongarch/stack-check-alloca.h: New test.\n+\t* gcc.target/loongarch/stack-check-cfa-1.c: New test.\n+\t* gcc.target/loongarch/stack-check-cfa-2.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-1.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-2.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-3.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-4.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-5.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-6.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue-7.c: New test.\n+\t* gcc.target/loongarch/stack-check-prologue.h: New test.\n+\n+2022-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/103546\n+\t* gcc.dg/analyzer/ferror-1.c: New test.\n+\t* gcc.dg/analyzer/fileno-1.c: New test.\n+\t* gcc.dg/analyzer/flex-with-call-summaries.c: New test.\n+\t* gcc.dg/analyzer/flex-without-call-summaries.c: New test.\n+\t* gcc.dg/analyzer/getc-1.c: New test.\n+\t* gcc.dg/analyzer/isatty-1.c: New test.\n+\n+2022-11-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105784\n+\t* gcc.dg/analyzer/torture/fold-ptr-arith-pr105784.c: New test.\n+\n+2022-11-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107542\n+\t* g++.dg/cpp2a/spaceship-sfinae2.C: New test.\n+\n 2022-11-29  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "7fd11535f5460e5274a5cad0d6766929d426d137", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,17 @@\n+2022-11-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (OpenMP Context Selectors): Add 'gfx803' to gcn's isa.\n+\n+2022-11-30  Paul-Antoine Arras  <pa@codesourcery.com>\n+\n+\t* testsuite/libgomp.c/declare-variant-4-fiji.c: New test.\n+\t* testsuite/libgomp.c/declare-variant-4-gfx803.c: New test.\n+\t* testsuite/libgomp.c/declare-variant-4-gfx900.c: New test.\n+\t* testsuite/libgomp.c/declare-variant-4-gfx906.c: New test.\n+\t* testsuite/libgomp.c/declare-variant-4-gfx908.c: New test.\n+\t* testsuite/libgomp.c/declare-variant-4-gfx90a.c: New test.\n+\t* testsuite/libgomp.c/declare-variant-4.h: New header file.\n+\n 2022-11-28  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* libgomp.texi (OpenMP 5.2): Mark end-directive as Y."}, {"sha": "6dbe4ba30d8d8427f103ae6168a80ce7d112f869", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eea85a95eecce38d194408fa4ce139b8bce1b28/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eea85a95eecce38d194408fa4ce139b8bce1b28/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=6eea85a95eecce38d194408fa4ce139b8bce1b28", "patch": "@@ -1,3 +1,8 @@\n+2022-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR web/107749\n+\t* update_web_docs_git: Add gdc to MANUALS.\n+\n 2022-11-23  Sam James  <sam@gentoo.org>\n \n \t* gcc_release (XZ): Add -T0."}]}