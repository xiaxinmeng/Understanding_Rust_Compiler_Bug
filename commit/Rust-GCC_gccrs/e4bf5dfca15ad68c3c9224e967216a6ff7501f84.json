{"sha": "e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiZjVkZmNhMTVhZDY4YzNjOTIyNGU5NjcyMTZhNmZmNzUwMWY4NA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2007-09-07T04:18:40Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2007-09-07T04:18:40Z"}, "message": "re PR libstdc++/33203 (libstdc++-v3 build broken on i386-pc-mingw32)\n\n\tPR libstdc++/33203\n\t* configure.host (error_constants_dir):  New variable,\n\tdefaulting to os/generic.\n\t( mingw32*): Overide default.\n\t* configure.ac (ERROR_CONSTANTS_SRCDIR): New.\n\t* configure: Regenerate.\n\t* include/Makefile.am (host_headers): Add\n\t$(ERROR_CONSTANTS_SRCDIR)/error_constants.h .\n\t* include/Makefile.in: Regenerate.\n\t* include/std/system_error (enum posix_errno): Remove.\n\tInclude <bits/error_constants.h> instead.\n\t* config/os/mingw32/error_constants.h: New.\n\t* config/os/generic/error_constants.h: New.\n\nFrom-SVN: r128228", "tree": {"sha": "098c7c8d3758271a7b929965b5460afab61399cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/098c7c8d3758271a7b929965b5460afab61399cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/comments", "author": null, "committer": null, "parents": [{"sha": "3fd406847c6942d6400b16094cc780364e174d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd406847c6942d6400b16094cc780364e174d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd406847c6942d6400b16094cc780364e174d81"}], "stats": {"total": 434, "additions": 320, "deletions": 114}, "files": [{"sha": "969c8048825c95e84ac2d7a926820f52f5d3b60a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -1,3 +1,19 @@\n+2007-09-07  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR libstdc++/33203\n+\t* configure.host (error_constants_dir):  New variable,\n+\tdefaulting to os/generic.\n+\t( mingw32*): Overide default.\n+\t* configure.ac (ERROR_CONSTANTS_SRCDIR): New.\n+\t* configure: Regenerate.\n+\t* include/Makefile.am (host_headers): Add\n+\t$(ERROR_CONSTANTS_SRCDIR)/error_constants.h .\n+\t* include/Makefile.in: Regenerate.\n+\t* include/std/system_error (enum posix_errno): Remove.\n+\tInclude <bits/error_constants.h> instead.\n+\t* config/os/mingw32/error_constants.h: New.\n+\t* config/os/generic/error_constants.h: New.\n+\n 2007-09-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/lib/libstdc++.exp: Check CXXFLAGS."}, {"sha": "8b0a6bf2799b1f06a8b405e5518b6eefc173421d", "filename": "libstdc++-v3/config/os/generic/error_constants.h", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgeneric%2Ferror_constants.h?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -0,0 +1,157 @@\n+// Specific definitions for generic platforms  -*- C++ -*-\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+/** @file error_constants.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n+#ifndef _GLIBCXX_ERROR_CONSTANTS\n+#  define _GLIBCXX_ERROR_CONSTANTS 1\n+\n+#include <bits/c++config.h>\n+#include <cerrno>\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n+ enum posix_errno\n+    {\n+      address_family_not_supported = \t\tEAFNOSUPPORT,\n+      address_in_use = \t\t\t\tEADDRINUSE,\n+      address_not_available = \t\t\tEADDRNOTAVAIL,\n+      already_connected = \t\t\tEISCONN,\n+      argument_list_too_long = \t\t\tE2BIG,\n+      argument_out_of_domain = \t\t\tEDOM,\n+      bad_address = \t\t\t\tEFAULT,\n+      bad_file_descriptor = \t\t\tEBADF,\n+\n+#ifdef _GLIBCXX_HAVE_EBADMSG\n+      bad_message = \t\t\t\tEBADMSG,\n+#endif\n+\n+      broken_pipe = \t\t\t\tEPIPE,\n+      connection_aborted = \t\t\tECONNABORTED,\n+      connection_already_in_progress = \t\tEALREADY,\n+      connection_refused = \t\t\tECONNREFUSED,\n+      connection_reset = \t\t\tECONNRESET,\n+      cross_device_link = \t\t\tEXDEV,\n+      destination_address_required = \t\tEDESTADDRREQ,\n+      device_or_resource_busy = \t\tEBUSY,\n+      directory_not_empty = \t\t\tENOTEMPTY,\n+      executable_format_error = \t\tENOEXEC,\n+      file_exists = \t       \t\t\tEEXIST,\n+      file_too_large = \t\t\t\tEFBIG,\n+      filename_too_long = \t\t\tENAMETOOLONG,\n+      function_not_supported = \t\t\tENOSYS,\n+      host_unreachable = \t\t\tEHOSTUNREACH,\n+      identifier_removed = \t\t\tEIDRM,\n+      illegal_byte_sequence = \t\t\tEILSEQ,\n+      inappropriate_io_control_operation = \tENOTTY,\n+      interrupted = \t\t\t\tEINTR,\n+      invalid_argument = \t\t\tEINVAL,\n+      invalid_seek = \t\t\t\tESPIPE,\n+      io_error = \t\t\t\tEIO,\n+      is_a_directory = \t\t\t\tEISDIR,\n+      message_size = \t\t\t\tEMSGSIZE,\n+      network_down = \t\t\t\tENETDOWN,\n+      network_reset = \t\t\t\tENETRESET,\n+      network_unreachable = \t\t\tENETUNREACH,\n+      no_buffer_space = \t\t\tENOBUFS,\n+      no_child_process = \t\t\tECHILD,\n+\n+#ifdef _GLIBCXX_HAVE_ENOLINK\n+      no_link = \t\t\t\tENOLINK,\n+#endif\n+      no_lock_available = \t\t\tENOLCK,\n+\n+#ifdef _GLIBCXX_HAVE_ENODATA\n+      no_message_available = \t\t\tENODATA, \n+#endif\n+\n+      no_message = \t\t\t\tENOMSG, \n+      no_protocol_option = \t\t\tENOPROTOOPT,\n+      no_space_on_device = \t\t\tENOSPC,\n+\n+#ifdef _GLIBCXX_HAVE_ENOSR\n+      no_stream_resources = \t\t\tENOSR,\n+#endif\n+\n+      no_such_device_or_address = \t\tENXIO,\n+      no_such_device = \t\t\t\tENODEV,\n+      no_such_file_or_directory = \t\tENOENT,\n+      no_such_process = \t\t\tESRCH,\n+      not_a_directory = \t\t\tENOTDIR,\n+      not_a_socket = \t\t\t\tENOTSOCK,\n+\n+#ifdef _GLIBCXX_HAVE_ENOSTR\n+      not_a_stream = \t\t\t\tENOSTR,\n+#endif\n+\n+      not_connected = \t\t\t\tENOTCONN,\n+      not_enough_memory = \t\t\tENOMEM,\n+      not_supported = \t\t\t\tENOTSUP,\n+      operation_canceled = \t\t\tECANCELED,\n+      operation_in_progress = \t\t\tEINPROGRESS,\n+      operation_not_permitted = \t\tEPERM,\n+      operation_not_supported = \t\tEOPNOTSUPP,\n+      operation_would_block = \t\t\tEWOULDBLOCK,\n+#ifdef _GLIBCXX_HAVE_EOWNERDEAD\n+      owner_dead = \t\t\t\tEOWNERDEAD,\n+#endif\n+      permission_denied = \t\t\tEACCES,\n+#ifdef _GLIBCXX_HAVE_EPROTO\n+      protocol_error = \t\t\t\tEPROTO,\n+#endif\n+      protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n+      read_only_file_system = \t\t\tEROFS,\n+      resource_deadlock_would_occur = \t\tEDEADLK,\n+      resource_unavailable_try_again = \t\tEAGAIN,\n+      result_out_of_range = \t\t\tERANGE,\n+#ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE\n+      state_not_recoverable = \t\t\tENOTRECOVERABLE,\n+#endif\n+\n+#ifdef _GLIBCXX_HAVE_ETIME\n+      stream_timeout = \t\t\t\tETIME,\n+#endif\n+\n+      text_file_busy = \t\t\t\tETXTBSY,\n+      timed_out = \t\t\t\tETIMEDOUT,\n+      too_many_files_open_in_system = \t\tENFILE,\n+      too_many_files_open = \t\t\tEMFILE,\n+      too_many_links = \t\t\t\tEMLINK,\n+      too_many_synbolic_link_levels = \t\tELOOP,\n+      value_too_large = \t\t\tEOVERFLOW,\n+      wrong_protocol_type = \t\t\tEPROTOTYPE,\n+      no_posix_equivalent = 1L << 16\n+    };\n+\n+_GLIBCXX_END_NAMESPACE\n+\n+#endif"}, {"sha": "85d9273582fc12c76a754a53932fb3456aa657f0", "filename": "libstdc++-v3/config/os/mingw32/error_constants.h", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Ferror_constants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Ferror_constants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Ferror_constants.h?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -0,0 +1,131 @@\n+// Specific definitions for mingw32 platform  -*- C++ -*-\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+/** @file error_constants.h\n+ *  This is an internal header file, included by other library headers.\n+ *  You should not attempt to use it directly.\n+ */\n+\n+#ifndef _GLIBCXX_ERROR_CONSTANTS\n+#  define _GLIBCXX_ERROR_CONSTANTS\n+\n+#include <bits/c++config.h>\n+#include <cerrno>\n+\n+\n+_GLIBCXX_BEGIN_NAMESPACE(std)\n+\n+// Most of the commented-out error codes are socket-related and could be\n+// replaced bu Winsock WSA-prefixed equivalents. \n+  enum posix_errno\n+    {\n+//    address_family_not_supported = \t\tEAFNOSUPPORT,\n+//    address_in_use = \t\t\t\tEADDRINUSE,\n+//    address_not_available = \t\t\tEADDRNOTAVAIL,\n+//    already_connected = \t\t\tEISCONN,\n+      argument_list_too_long = \t\t\tE2BIG,\n+      argument_out_of_domain = \t\t\tEDOM,\n+      bad_address = \t\t\t\tEFAULT,\n+      bad_file_descriptor = \t\t\tEBADF,\n+//    bad_message = \t\t\t\tEBADMSG,\n+      broken_pipe = \t\t\t\tEPIPE,\n+//    connection_aborted = \t\t\tECONNABORTED,\n+//    connection_already_in_progress = \t\tEALREADY,\n+//    connection_refused = \t\t\tECONNREFUSED,\n+//    connection_reset = \t\t\tECONNRESET,\n+//    cross_device_link = \t\t\tEXDEV,\n+//    destination_address_required = \t\tEDESTADDRREQ,\n+      device_or_resource_busy = \t\tEBUSY,\n+      directory_not_empty = \t\t\tENOTEMPTY,\n+      executable_format_error = \t\tENOEXEC,\n+      file_exists = \t       \t\t\tEEXIST,\n+      file_too_large = \t\t\t\tEFBIG,\n+      filename_too_long = \t\t\tENAMETOOLONG,\n+      function_not_supported = \t\t\tENOSYS,\n+//    host_unreachable = \t\t\tEHOSTUNREACH,\n+//    identifier_removed = \t\t\tEIDRM,\n+      illegal_byte_sequence = \t\t\tEILSEQ,\n+      inappropriate_io_control_operation = \tENOTTY,\n+      interrupted = \t\t\t\tEINTR,\n+      invalid_argument = \t\t\tEINVAL,\n+      invalid_seek = \t\t\t\tESPIPE,\n+      io_error = \t\t\t\tEIO,\n+      is_a_directory = \t\t\t\tEISDIR,\n+//    message_size = \t\t\t\tEMSGSIZE,\n+//    network_down = \t\t\t\tENETDOWN,\n+//    network_reset = \t\t\t\tENETRESET,\n+//    network_unreachable = \t\t\tENETUNREACH,\n+//    no_buffer_space = \t\t\tENOBUFS,\n+//    no_child_process = \t\t\tECHILD,\n+//    no_link = \t\t\t\tENOLINK,\n+      no_lock_available = \t\t\tENOLCK,\n+//    no_message_available = \t\t\tENODATA, \n+//    no_message = \t\t\t\tENOMSG, \n+//    no_protocol_option = \t\t\tENOPROTOOPT,\n+//    no_space_on_device = \t\t\tENOSPC,\n+//    no_stream_resources = \t\t\tENOSR,\n+      no_such_device_or_address = \t\tENXIO,\n+      no_such_device = \t\t\t\tENODEV,\n+      no_such_file_or_directory = \t\tENOENT,\n+      no_such_process = \t\t\tESRCH,\n+      not_a_directory = \t\t\tENOTDIR,\n+//    not_a_socket = \t\t\t\tENOTSOCK,\n+//    not_a_stream = \t\t\t\tENOSTR,\n+//    not_connected = \t\t\t\tENOTCONN,\n+      not_enough_memory = \t\t\tENOMEM,\n+//    not_supported = \t\t\t\tENOTSUP,\n+//    operation_canceled = \t\t\tECANCELED,\n+//    operation_in_progress = \t\t\tEINPROGRESS,\n+//    operation_not_permitted = \t\tEPERM,\n+//    operation_not_supported = \t\tEOPNOTSUPP,\n+//    operation_would_block = \t\t\tEWOULDBLOCK,\n+//    owner_dead = \t\t\t\tEOWNERDEAD,\n+      permission_denied = \t\t\tEACCES,\n+//    protocol_error = \t\t\t\tEPROTO,\n+//    protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n+      read_only_file_system = \t\t\tEROFS,\n+      resource_deadlock_would_occur = \t\tEDEADLK,\n+      resource_unavailable_try_again = \t\tEAGAIN,\n+      result_out_of_range = \t\t\tERANGE,\n+//    state_not_recoverable = \t\t\tENOTRECOVERABLE,\n+//    stream_timeout = \t\t\t\tETIME,\n+//    text_file_busy = \t\t\t\tETXTBSY,\n+//    timed_out = \t\t\t\tETIMEDOUT,\n+      too_many_files_open_in_system = \t\tENFILE,\n+      too_many_files_open = \t\t\tEMFILE,\n+      too_many_links = \t\t\t\tEMLINK,\n+ //   too_many_synbolic_link_levels = \t\tELOOP,\n+ //   value_too_large = \t\t\tEOVERFLOW,\n+ //   wrong_protocol_type = \t\t\tEPROTOTYPE,\n+      no_posix_equivalent = 1L << 16\n+   };\n+\n+_GLIBCXX_END_NAMESPACE\n+\n+#endif"}, {"sha": "e2371b936c28c88270856c1c7dfe8e53f20abd51", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -458,7 +458,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM lt_ECHO LDFLAGS CXXCPP enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_C_GLOBAL_TRUE GLIBCXX_C_HEADERS_C_GLOBAL_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE GLIBCXX_C_HEADERS_EXTRA_TRUE GLIBCXX_C_HEADERS_EXTRA_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV LTLIBICONV SYMVER_FILE port_specific_symbol_files ENABLE_SYMVERS_TRUE ENABLE_SYMVERS_FALSE ENABLE_SYMVERS_GNU_TRUE ENABLE_SYMVERS_GNU_FALSE ENABLE_SYMVERS_GNU_NAMESPACE_TRUE ENABLE_SYMVERS_GNU_NAMESPACE_FALSE ENABLE_SYMVERS_DARWIN_TRUE ENABLE_SYMVERS_DARWIN_FALSE ENABLE_VISIBILITY_TRUE ENABLE_VISIBILITY_FALSE GLIBCXX_LDBL_COMPAT_TRUE GLIBCXX_LDBL_COMPAT_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR CPU_DEFINES_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS libtool_VERSION multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar glibcxx_builddir glibcxx_srcdir toplevel_srcdir CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LN_S AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CPP CPPFLAGS EGREP LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM lt_ECHO LDFLAGS CXXCPP enable_shared enable_static GLIBCXX_HOSTED_TRUE GLIBCXX_HOSTED_FALSE GLIBCXX_BUILD_PCH_TRUE GLIBCXX_BUILD_PCH_FALSE glibcxx_PCHFLAGS CSTDIO_H BASIC_FILE_H BASIC_FILE_CC check_msgfmt glibcxx_MOFILES glibcxx_POFILES glibcxx_localedir USE_NLS CLOCALE_H CMESSAGES_H CCODECVT_CC CCOLLATE_CC CCTYPE_CC CMESSAGES_CC CMONEY_CC CNUMERIC_CC CTIME_H CTIME_CC CLOCALE_CC CLOCALE_INTERNAL_H ALLOCATOR_H ALLOCATOR_NAME C_INCLUDE_DIR GLIBCXX_C_HEADERS_C_TRUE GLIBCXX_C_HEADERS_C_FALSE GLIBCXX_C_HEADERS_C_STD_TRUE GLIBCXX_C_HEADERS_C_STD_FALSE GLIBCXX_C_HEADERS_C_GLOBAL_TRUE GLIBCXX_C_HEADERS_C_GLOBAL_FALSE GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE GLIBCXX_C_HEADERS_EXTRA_TRUE GLIBCXX_C_HEADERS_EXTRA_FALSE DEBUG_FLAGS GLIBCXX_BUILD_DEBUG_TRUE GLIBCXX_BUILD_DEBUG_FALSE EXTRA_CXX_FLAGS glibcxx_thread_h WERROR SECTION_FLAGS SECTION_LDFLAGS OPT_LDFLAGS LIBMATHOBJS LIBICONV LTLIBICONV SYMVER_FILE port_specific_symbol_files ENABLE_SYMVERS_TRUE ENABLE_SYMVERS_FALSE ENABLE_SYMVERS_GNU_TRUE ENABLE_SYMVERS_GNU_FALSE ENABLE_SYMVERS_GNU_NAMESPACE_TRUE ENABLE_SYMVERS_GNU_NAMESPACE_FALSE ENABLE_SYMVERS_DARWIN_TRUE ENABLE_SYMVERS_DARWIN_FALSE ENABLE_VISIBILITY_TRUE ENABLE_VISIBILITY_FALSE GLIBCXX_LDBL_COMPAT_TRUE GLIBCXX_LDBL_COMPAT_FALSE baseline_dir ATOMICITY_SRCDIR ATOMIC_WORD_SRCDIR CPU_DEFINES_SRCDIR ABI_TWEAKS_SRCDIR OS_INC_SRCDIR ERROR_CONSTANTS_SRCDIR glibcxx_prefixdir gxx_include_dir glibcxx_toolexecdir glibcxx_toolexeclibdir GLIBCXX_INCLUDES TOPLEVEL_INCLUDES OPTIMIZE_CXXFLAGS WARN_FLAGS LIBSUPCXX_PICFLAGS LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -93835,6 +93835,7 @@ ATOMICITY_SRCDIR=config/${atomicity_dir}\n ATOMIC_WORD_SRCDIR=config/${atomic_word_dir}\n CPU_DEFINES_SRCDIR=config/${cpu_defines_dir}\n OS_INC_SRCDIR=config/${os_include_dir}\n+ERROR_CONSTANTS_SRCDIR=config/${error_constants_dir}\n ABI_TWEAKS_SRCDIR=config/${abi_tweaks_dir}\n \n \n@@ -95437,6 +95438,7 @@ s,@ATOMIC_WORD_SRCDIR@,$ATOMIC_WORD_SRCDIR,;t t\n s,@CPU_DEFINES_SRCDIR@,$CPU_DEFINES_SRCDIR,;t t\n s,@ABI_TWEAKS_SRCDIR@,$ABI_TWEAKS_SRCDIR,;t t\n s,@OS_INC_SRCDIR@,$OS_INC_SRCDIR,;t t\n+s,@ERROR_CONSTANTS_SRCDIR@,$ERROR_CONSTANTS_SRCDIR,;t t\n s,@glibcxx_prefixdir@,$glibcxx_prefixdir,;t t\n s,@gxx_include_dir@,$gxx_include_dir,;t t\n s,@glibcxx_toolexecdir@,$glibcxx_toolexecdir,;t t"}, {"sha": "a89e21df8a85219c76d15d0cf1223db3b1e38fd5", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -329,12 +329,14 @@ ATOMICITY_SRCDIR=config/${atomicity_dir}\n ATOMIC_WORD_SRCDIR=config/${atomic_word_dir}\n CPU_DEFINES_SRCDIR=config/${cpu_defines_dir}\n OS_INC_SRCDIR=config/${os_include_dir}\n+ERROR_CONSTANTS_SRCDIR=config/${error_constants_dir}\n ABI_TWEAKS_SRCDIR=config/${abi_tweaks_dir}\n AC_SUBST(ATOMICITY_SRCDIR)\n AC_SUBST(ATOMIC_WORD_SRCDIR)\n AC_SUBST(CPU_DEFINES_SRCDIR)\n AC_SUBST(ABI_TWEAKS_SRCDIR)\n AC_SUBST(OS_INC_SRCDIR)\n+AC_SUBST(ERROR_CONSTANTS_SRCDIR)\n \n \n # Determine cross-compile flags and AM_CONDITIONALs."}, {"sha": "b916abacc7e2960379299cae9ad50c149d73d8ee", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -42,6 +42,10 @@\n #   cpu_defines_dir        location of cpu_defines.h\n #                          defaults to generic.\n #\n+#\n+#   error_constants_dir    location of error_constants.h\n+#                          defaults to os/generic.\n+#\n # It possibly modifies the following variables:\n #\n #   OPT_LDFLAGS            extra flags to pass when linking the library, of\n@@ -71,6 +75,7 @@ atomicity_dir=\"cpu/generic\"\n cpu_defines_dir=\"cpu/generic\"\n try_cpu=generic\n abi_tweaks_dir=\"cpu/generic\"\n+error_constants_dir=\"os/generic\"\n \n # HOST-SPECIFIC OVERRIDES\n # Set any CPU-dependent bits.\n@@ -161,6 +166,7 @@ fi\n \n # Set any OS-dependent bits.\n # Set the os_include_dir.\n+# Set the error_costants_dir.\n # Set c_model, c_compatibility here.\n # If atomic ops and/or numeric limits are OS-specific rather than\n # CPU-specifc, set those here too.\n@@ -238,6 +244,7 @@ case \"${host_os}\" in\n     ;;\n   mingw32*)\n     os_include_dir=\"os/mingw32\"\n+    error_constants_dir=\"os/mingw32\"\n     ;;\n   netbsd*)\n     os_include_dir=\"os/bsd/netbsd\""}, {"sha": "53ede2bc3f58836eaa76634fc2d56b4ad02d7eda", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -756,6 +756,7 @@ host_headers = \\\n \t${glibcxx_srcdir}/$(ATOMIC_WORD_SRCDIR)/atomic_word.h \\\n \t${glibcxx_srcdir}/$(ABI_TWEAKS_SRCDIR)/cxxabi_tweaks.h \\\n \t${glibcxx_srcdir}/$(CPU_DEFINES_SRCDIR)/cpu_defines.h \\\n+\t${glibcxx_srcdir}/$(ERROR_CONSTANTS_SRCDIR)/error_constants.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdc++.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdtr1c++.h \\\n \t${glibcxx_srcdir}/include/precompiled/extc++.h "}, {"sha": "4f779a0de626412b54915169ecb9b04cfc70335d", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -118,6 +118,7 @@ ENABLE_SYMVERS_GNU_TRUE = @ENABLE_SYMVERS_GNU_TRUE@\n ENABLE_SYMVERS_TRUE = @ENABLE_SYMVERS_TRUE@\n ENABLE_VISIBILITY_FALSE = @ENABLE_VISIBILITY_FALSE@\n ENABLE_VISIBILITY_TRUE = @ENABLE_VISIBILITY_TRUE@\n+ERROR_CONSTANTS_SRCDIR = @ERROR_CONSTANTS_SRCDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n FGREP = @FGREP@\n@@ -983,6 +984,7 @@ host_headers = \\\n \t${glibcxx_srcdir}/$(ATOMIC_WORD_SRCDIR)/atomic_word.h \\\n \t${glibcxx_srcdir}/$(ABI_TWEAKS_SRCDIR)/cxxabi_tweaks.h \\\n \t${glibcxx_srcdir}/$(CPU_DEFINES_SRCDIR)/cpu_defines.h \\\n+\t${glibcxx_srcdir}/$(ERROR_CONSTANTS_SRCDIR)/error_constants.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdc++.h \\\n \t${glibcxx_srcdir}/include/precompiled/stdtr1c++.h \\\n \t${glibcxx_srcdir}/include/precompiled/extc++.h "}, {"sha": "495360caf05a03dfb0ea123dc86e3c38deccea0c", "filename": "libstdc++-v3/include/std/system_error", "status": "modified", "additions": 1, "deletions": 113, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bf5dfca15ad68c3c9224e967216a6ff7501f84/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsystem_error?ref=e4bf5dfca15ad68c3c9224e967216a6ff7501f84", "patch": "@@ -41,7 +41,7 @@\n #endif\n \n #include <bits/c++config.h>\n-#include <cerrno>\n+#include <bits/error_constants.h>\n #include <iosfwd>\n #include <stdexcept>\n \n@@ -53,118 +53,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   extern const error_category& system_category;\n \n-  enum posix_errno\n-    {\n-      address_family_not_supported = \t\tEAFNOSUPPORT,\n-      address_in_use = \t\t\t\tEADDRINUSE,\n-      address_not_available = \t\t\tEADDRNOTAVAIL,\n-      already_connected = \t\t\tEISCONN,\n-      argument_list_too_long = \t\t\tE2BIG,\n-      argument_out_of_domain = \t\t\tEDOM,\n-      bad_address = \t\t\t\tEFAULT,\n-      bad_file_descriptor = \t\t\tEBADF,\n-\n-#ifdef _GLIBCXX_HAVE_EBADMSG\n-      bad_message = \t\t\t\tEBADMSG,\n-#endif\n-\n-      broken_pipe = \t\t\t\tEPIPE,\n-      connection_aborted = \t\t\tECONNABORTED,\n-      connection_already_in_progress = \t\tEALREADY,\n-      connection_refused = \t\t\tECONNREFUSED,\n-      connection_reset = \t\t\tECONNRESET,\n-      cross_device_link = \t\t\tEXDEV,\n-      destination_address_required = \t\tEDESTADDRREQ,\n-      device_or_resource_busy = \t\tEBUSY,\n-      directory_not_empty = \t\t\tENOTEMPTY,\n-      executable_format_error = \t\tENOEXEC,\n-      file_exists = \t       \t\t\tEEXIST,\n-      file_too_large = \t\t\t\tEFBIG,\n-      filename_too_long = \t\t\tENAMETOOLONG,\n-      function_not_supported = \t\t\tENOSYS,\n-      host_unreachable = \t\t\tEHOSTUNREACH,\n-      identifier_removed = \t\t\tEIDRM,\n-      illegal_byte_sequence = \t\t\tEILSEQ,\n-      inappropriate_io_control_operation = \tENOTTY,\n-      interrupted = \t\t\t\tEINTR,\n-      invalid_argument = \t\t\tEINVAL,\n-      invalid_seek = \t\t\t\tESPIPE,\n-      io_error = \t\t\t\tEIO,\n-      is_a_directory = \t\t\t\tEISDIR,\n-      message_size = \t\t\t\tEMSGSIZE,\n-      network_down = \t\t\t\tENETDOWN,\n-      network_reset = \t\t\t\tENETRESET,\n-      network_unreachable = \t\t\tENETUNREACH,\n-      no_buffer_space = \t\t\tENOBUFS,\n-      no_child_process = \t\t\tECHILD,\n-\n-#ifdef _GLIBCXX_HAVE_ENOLINK\n-      no_link = \t\t\t\tENOLINK,\n-#endif\n-      no_lock_available = \t\t\tENOLCK,\n-\n-#ifdef _GLIBCXX_HAVE_ENODATA\n-      no_message_available = \t\t\tENODATA, \n-#endif\n-\n-      no_message = \t\t\t\tENOMSG, \n-      no_protocol_option = \t\t\tENOPROTOOPT,\n-      no_space_on_device = \t\t\tENOSPC,\n-\n-#ifdef _GLIBCXX_HAVE_ENOSR\n-      no_stream_resources = \t\t\tENOSR,\n-#endif\n-\n-      no_such_device_or_address = \t\tENXIO,\n-      no_such_device = \t\t\t\tENODEV,\n-      no_such_file_or_directory = \t\tENOENT,\n-      no_such_process = \t\t\tESRCH,\n-      not_a_directory = \t\t\tENOTDIR,\n-      not_a_socket = \t\t\t\tENOTSOCK,\n-\n-#ifdef _GLIBCXX_HAVE_ENOSTR\n-      not_a_stream = \t\t\t\tENOSTR,\n-#endif\n-\n-      not_connected = \t\t\t\tENOTCONN,\n-      not_enough_memory = \t\t\tENOMEM,\n-      not_supported = \t\t\t\tENOTSUP,\n-      operation_canceled = \t\t\tECANCELED,\n-      operation_in_progress = \t\t\tEINPROGRESS,\n-      operation_not_permitted = \t\tEPERM,\n-      operation_not_supported = \t\tEOPNOTSUPP,\n-      operation_would_block = \t\t\tEWOULDBLOCK,\n-#ifdef _GLIBCXX_HAVE_EOWNERDEAD\n-      owner_dead = \t\t\t\tEOWNERDEAD,\n-#endif\n-      permission_denied = \t\t\tEACCES,\n-#ifdef _GLIBCXX_HAVE_EPROTO\n-      protocol_error = \t\t\t\tEPROTO,\n-#endif\n-      protocol_not_supported = \t\t\tEPROTONOSUPPORT,\n-      read_only_file_system = \t\t\tEROFS,\n-      resource_deadlock_would_occur = \t\tEDEADLK,\n-      resource_unavailable_try_again = \t\tEAGAIN,\n-      result_out_of_range = \t\t\tERANGE,\n-#ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE\n-      state_not_recoverable = \t\t\tENOTRECOVERABLE,\n-#endif\n-\n-#ifdef _GLIBCXX_HAVE_ETIME\n-      stream_timeout = \t\t\t\tETIME,\n-#endif\n-\n-      text_file_busy = \t\t\t\tETXTBSY,\n-      timed_out = \t\t\t\tETIMEDOUT,\n-      too_many_files_open_in_system = \t\tENFILE,\n-      too_many_files_open = \t\t\tEMFILE,\n-      too_many_links = \t\t\t\tEMLINK,\n-      too_many_synbolic_link_levels = \t\tELOOP,\n-      value_too_large = \t\t\tEOVERFLOW,\n-      wrong_protocol_type = \t\t\tEPROTOTYPE,\n-      no_posix_equivalent = 1L << 16\n-    };\n-\n   struct error_category\n   {\n     error_category() { }"}]}