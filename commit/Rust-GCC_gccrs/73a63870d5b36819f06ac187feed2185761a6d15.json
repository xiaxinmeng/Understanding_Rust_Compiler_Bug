{"sha": "73a63870d5b36819f06ac187feed2185761a6d15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhNjM4NzBkNWIzNjgxOWYwNmFjMTg3ZmVlZDIxODU3NjFhNmQxNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-02-17T15:01:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-02-17T15:01:40Z"}, "message": "re PR tree-optimization/39204 (ICE in compute_antic)\n\n2009-02-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39204\n\t* tree-ssa-pre.c (phi_translate_1): Lookup the value-number\n\tof the PHI arg.\n\n\t* gcc.dg/torture/pr39204.c: New testcase.\n\nFrom-SVN: r144233", "tree": {"sha": "3f74ad84325241290e2fc14ac6671923403fcebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f74ad84325241290e2fc14ac6671923403fcebe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73a63870d5b36819f06ac187feed2185761a6d15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a63870d5b36819f06ac187feed2185761a6d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73a63870d5b36819f06ac187feed2185761a6d15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73a63870d5b36819f06ac187feed2185761a6d15/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f2f555a97a392fb6e4e1951da89b9f64b335b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2f555a97a392fb6e4e1951da89b9f64b335b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2f555a97a392fb6e4e1951da89b9f64b335b73"}], "stats": {"total": 145, "additions": 145, "deletions": 0}, "files": [{"sha": "ef1160461a74182ea854f791a2562b44d8e15a43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73a63870d5b36819f06ac187feed2185761a6d15", "patch": "@@ -1,3 +1,9 @@\n+2009-02-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39204\n+\t* tree-ssa-pre.c (phi_translate_1): Lookup the value-number\n+\tof the PHI arg.\n+\n 2009-02-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/soft-fp/double.h: Update from glibc CVS."}, {"sha": "bf7b705f6cd43a42a376dff9d8b04c5b14f735f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73a63870d5b36819f06ac187feed2185761a6d15", "patch": "@@ -1,3 +1,8 @@\n+2009-02-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39204\n+\t* gcc.dg/torture/pr39204.c: New testcase.\n+\n 2009-02-17  Bingfeng Mei <bmei@broadcom.com>\n \n \t* gcc.dg/vect/vect-outer-5.c: Require vect_float support."}, {"sha": "4604b7079d1f6fbf3c5634532574aa2f4023017e", "filename": "gcc/testsuite/gcc.dg/torture/pr39204.c", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39204.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39204.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39204.c?ref=73a63870d5b36819f06ac187feed2185761a6d15", "patch": "@@ -0,0 +1,131 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-w\" } */\n+\n+typedef unsigned int size_t;\n+typedef unsigned char __u_char;\n+typedef unsigned short int __u_short;\n+typedef unsigned int __u_int;\n+typedef unsigned long int __u_long;\n+typedef signed char __int8_t;\n+typedef unsigned char __uint8_t;\n+typedef signed short int __int16_t;\n+typedef unsigned short int __uint16_t;\n+typedef signed int __int32_t;\n+typedef unsigned int __uint32_t;\n+__extension__ typedef signed long long int __int64_t;\n+__extension__ typedef unsigned long long int __uint64_t;\n+__extension__ typedef long long int __quad_t;\n+__extension__ typedef unsigned long long int __u_quad_t;\n+__extension__ typedef __u_quad_t __dev_t;\n+__extension__ typedef unsigned int __uid_t;\n+__extension__ typedef unsigned int __gid_t;\n+__extension__ typedef unsigned long int __ino_t;\n+__extension__ typedef __u_quad_t __ino64_t;\n+__extension__ typedef unsigned int __mode_t;\n+__extension__ typedef unsigned int __nlink_t;\n+__extension__ typedef long int __off_t;\n+__extension__ typedef __quad_t __off64_t;\n+__extension__ typedef int __pid_t;\n+__extension__ typedef struct {\n+    int __val[2];\n+} __fsid_t;\n+__extension__ typedef long int __clock_t;\n+__extension__ typedef unsigned int __id_t;\n+typedef struct _IO_FILE FILE;\n+typedef struct _IO_FILE __FILE;\n+typedef struct {\n+    int __count;\n+    union   {\n+\tunsigned int __wch;\n+\tchar __wchb[4];\n+    }\n+    __value;\n+} __mbstate_t;\n+typedef struct {\n+    __off_t __pos;\n+    __mbstate_t __state;\n+} _G_fpos_t;\n+typedef struct {\n+    __off64_t __pos;\n+    __mbstate_t __state;\n+} _G_fpos64_t;\n+typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));\n+typedef struct _IO_FILE _IO_FILE;\n+extern struct _IO_FILE_plus _IO_2_1_stderr_;\n+extern int fputs (__const char *__restrict __s, FILE * __restrict __stream);\n+extern char *strstr (__const char *__haystack, __const char *__needle)\n+     __attribute__ ((__nonnull__ (1, 2)));\n+     extern char *rindex (__const char *__s, int __c)   __attribute__ ((__nonnull__ (1)));\n+extern size_t strlen (__const char *__s) __attribute__ ((__nothrow__))\n+     __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n+     char *mystrlwr (char *string);\n+     char *m_replace_filename (const char *path, const char *filename);\n+     typedef struct LINE {\n+\t char *text;\n+\t struct LINE *next;\n+\t int flags;\n+     } LINE;\n+typedef struct TOC {\n+    char *text;\n+    char *alt;\n+    struct TOC *next;\n+    int root;\n+    int texinfoable;\n+    int htmlable;\n+    int otherfile;\n+} TOC;\n+static int _empty_count;\n+extern char *_word_substitution[256];\n+static void _output_sorted_nested_toc (TOC ** list, unsigned int num_items);\n+static char *_do_text_substitution (char *input);\n+static int _toc_scmp (const void *e1, const void *e2)\n+{\n+  TOC *t1 = *((TOC **) e1);\n+  TOC *t2 = *((TOC **) e2);\n+  return mystricmp (t1->text, t2->text);\n+}\n+static void _output_buffered_text (void) { if (_empty_count) ; }\n+void _post_process_filename (char *filename)\n+{\n+  int code_scanning = 0;\n+  char *new_filename, *p;\n+  char *line;\n+  FILE *f1 = 0, *f2 = 0;\n+  if (!new_filename || strlen (new_filename) < 2)\n+    new_filename[strlen (filename) - 1] = 'x';\n+  if (!f1 || !f2)\n+    while ((line = m_fgets (f1)))\n+      {\n+\tline = _do_text_substitution (line);\n+\tfputs (line, f2);\n+      }\n+  if (remove (filename))\n+    cancel:\n+\tif (f1)\n+\t  if (f2)\n+\t    if (new_filename)\n+\t      ;\n+}\n+static void _close_html_file (FILE * file)\n+{\n+  int f;\n+  for (f = 0; _word_substitution[f]; f++)\n+    ;\n+}\n+static __attribute__((always_inline))\n+char * _do_text_substitution (char *input)\n+{\n+  int start, end, middle, f;\n+  char *temp, *found, *reader;\n+  for (f = 0; _word_substitution[f]; f++)\n+    {\n+      reader = input;\n+      while ((found = strstr (reader, _word_substitution[f])))\n+\t{\n+\t  start = found - input;\n+\t  input = temp;\n+\t  reader = temp + start + middle;\n+\t}\n+    }\n+  return input;\n+}"}, {"sha": "0238d233f32f80af0fa05c75320e4fe8ccbe29fb", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73a63870d5b36819f06ac187feed2185761a6d15/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=73a63870d5b36819f06ac187feed2185761a6d15", "patch": "@@ -1707,6 +1707,9 @@ phi_translate_1 (pre_expr expr, bitmap_set_t set1, bitmap_set_t set2,\n \t    tree def = PHI_ARG_DEF (phi, e->dest_idx);\n \t    pre_expr newexpr;\n \n+\t    if (TREE_CODE (def) == SSA_NAME)\n+\t      def = VN_INFO (def)->valnum;\n+\n \t    /* Handle constant. */\n \t    if (is_gimple_min_invariant (def))\n \t      return get_or_alloc_expr_for_constant (def);"}]}