{"sha": "575a62352656475e46054570556afa5b2ecd6882", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1YTYyMzUyNjU2NDc1ZTQ2MDU0NTcwNTU2YWZhNWIyZWNkNjg4Mg==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-09T10:13:35Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-09T10:13:35Z"}, "message": "vms-c.c (vms_construct_include_filename): New function.\n\n2012-03-09  Tristan Gingold  <gingold@adacore.com>\n\n\t* config/vms/vms-c.c (vms_construct_include_filename): New function.\n\t(vms_c_register_includes): Reference it.\n\nFrom-SVN: r185133", "tree": {"sha": "c5b021a53417cd026ba2d1ed98fff04bba18c8f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5b021a53417cd026ba2d1ed98fff04bba18c8f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/575a62352656475e46054570556afa5b2ecd6882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575a62352656475e46054570556afa5b2ecd6882", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575a62352656475e46054570556afa5b2ecd6882", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575a62352656475e46054570556afa5b2ecd6882/comments", "author": null, "committer": null, "parents": [{"sha": "0d7de0e10b5ca459aecadd115cd818e161c3db3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7de0e10b5ca459aecadd115cd818e161c3db3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7de0e10b5ca459aecadd115cd818e161c3db3f"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "3b05846fb6dca61bec54ab49e2640fbda897ae1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575a62352656475e46054570556afa5b2ecd6882/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575a62352656475e46054570556afa5b2ecd6882/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=575a62352656475e46054570556afa5b2ecd6882", "patch": "@@ -1,3 +1,8 @@\n+2012-03-09  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/vms/vms-c.c (vms_construct_include_filename): New function.\n+\t(vms_c_register_includes): Reference it.\n+\n 2012-03-09  Andrew Pinski  <apinski@cavium.com>\n \n \tPR middle-end/51988\n@@ -7,8 +12,8 @@\n \tvalue_replacement instead of just the singleton one.\n \t(value_replacement): Change return type to int.  Return 0 instead of\n \tfalse.\n-\tAllow the middle basic block to contain more than just the definings\n-\ttatement. \n+\tAllow the middle basic block to contain more than just the defining\n+\tstatement.\n \tHandle non empty middle basic blocks.\n \t* Makefile.in (tree-ssa-phiopt.o): Add tree-pretty-print.h.\n "}, {"sha": "69b054d3d8bde61223634f6775be79a2fade693b", "filename": "gcc/config/vms/vms-c.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/575a62352656475e46054570556afa5b2ecd6882/gcc%2Fconfig%2Fvms%2Fvms-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/575a62352656475e46054570556afa5b2ecd6882/gcc%2Fconfig%2Fvms%2Fvms-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms-c.c?ref=575a62352656475e46054570556afa5b2ecd6882", "patch": "@@ -304,6 +304,36 @@ vms_c_register_pragma (void)\n   c_register_pragma (NULL, \"__extern_prefix\", vms_pragma_extern_prefix);\n }\n \n+/* Canonicalize the filename (remove directory prefix, force the .h extension),\n+   and append it to the directory to create the path, but don't\n+   turn / into // or // into ///; // may be a namespace escape.  */\n+\n+static char *\n+vms_construct_include_filename (const char *fname, cpp_dir *dir)\n+{\n+  size_t dlen, flen;\n+  char *path;\n+  const char *fbasename = lbasename (fname);\n+  size_t i;\n+\n+  dlen = dir->len;\n+  flen = strlen (fbasename) + 2;\n+  path = XNEWVEC (char, dlen + 1 + flen + 1);\n+  memcpy (path, dir->name, dlen);\n+  if (dlen && !IS_DIR_SEPARATOR (path[dlen - 1]))\n+    path[dlen++] = '/';\n+  for (i = 0; i < flen; i++)\n+    if (fbasename[i] == '.')\n+      break;\n+    else\n+      path[dlen + i] = TOLOWER (fbasename[i]);\n+  path[dlen + i + 0] = '.';\n+  path[dlen + i + 1] = 'h';\n+  path[dlen + i + 2] = 0;\n+\n+  return path;\n+}\n+\n /* Standard modules list.  */\n static const char * const vms_std_modules[] = { \"rtldef\", \"starlet_c\", NULL };\n \n@@ -341,7 +371,7 @@ vms_c_register_includes (const char *sysroot,\n               p->next = NULL;\n               p->name = path;\n               p->sysp = 1;\n-              p->construct = 0;\n+              p->construct = vms_construct_include_filename;\n               p->user_supplied_p = 0;\n               add_cpp_dir_path (p, SYSTEM);\n             }"}]}