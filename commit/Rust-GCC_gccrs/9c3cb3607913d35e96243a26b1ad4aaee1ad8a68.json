{"sha": "9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzY2IzNjA3OTEzZDM1ZTk2MjQzYTI2YjFhZDRhYWVlMWFkOGE2OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-04-27T11:26:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-04-27T11:26:12Z"}, "message": "re PR tree-optimization/65875 (ICE: Segmentation fault)\n\n\tPR tree-optimization/65875\n\t* tree-vrp.c (update_value_range): If in is_new case setting\n\told_vr to VR_VARYING, also set new_vr to it.  Remove\n\told_vr->type == VR_VARYING test.\n\t(vrp_visit_phi_node): Return SSA_PROP_VARYING instead of\n\tSSA_PROP_INTERESTING if update_value_range returned true,\n\tbut new range is VR_VARYING.\n\n\t* gcc.c-torture/compile/pr65875.c: New test.\n\nFrom-SVN: r222458", "tree": {"sha": "71ff1501327cc81f60701d41ac26e0c9f1cb2a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71ff1501327cc81f60701d41ac26e0c9f1cb2a32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97d87f7502351f80784f77dbeb4119def98c133d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d87f7502351f80784f77dbeb4119def98c133d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d87f7502351f80784f77dbeb4119def98c133d"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "ea2fb2a8458f59d75537d9b21a9a685cd8efe9f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "patch": "@@ -1,3 +1,13 @@\n+2015-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65875\n+\t* tree-vrp.c (update_value_range): If in is_new case setting\n+\told_vr to VR_VARYING, also set new_vr to it.  Remove\n+\told_vr->type == VR_VARYING test.\n+\t(vrp_visit_phi_node): Return SSA_PROP_VARYING instead of\n+\tSSA_PROP_INTERESTING if update_value_range returned true,\n+\tbut new range is VR_VARYING.\n+\n 2015-04-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* combine.c (sign_extend_short_imm): New."}, {"sha": "c25b518b22b0ca03116ccb5b4ebfde142e34004f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "patch": "@@ -1,3 +1,8 @@\n+2015-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65875\n+\t* gcc.c-torture/compile/pr65875.c: New test.\n+\n 2015-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/52085"}, {"sha": "26d2a25e9ef68108f901e9e4b1eee5974fa27d2d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr65875.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65875.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65875.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65875.c?ref=9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "patch": "@@ -0,0 +1,24 @@\n+/* PR tree-optimization/65875 */\n+\n+int a, b, c, d, e, f, g;\n+\n+void\n+foo (void)\n+{\n+  long h = 0, i;\n+  if (g < 0)\n+    i = -g;\n+  for (; b;)\n+    for (; c;)\n+      if (e)\n+\th = 1;\n+  for (; f;)\n+    if (a)\n+      break;\n+  if (h > i)\n+    while (h > i)\n+      {\n+\td = 0;\n+\th--;\n+      }\n+}"}, {"sha": "0ade55c0b54380ef9a02a5fcc857716ee362b9f8", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3cb3607913d35e96243a26b1ad4aaee1ad8a68/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=9c3cb3607913d35e96243a26b1ad4aaee1ad8a68", "patch": "@@ -886,13 +886,18 @@ update_value_range (const_tree var, value_range_t *new_vr)\n   if (is_new)\n     {\n       /* Do not allow transitions up the lattice.  The following\n-         is slightly more awkward than just new_vr->type < old_vr->type\n+\t is slightly more awkward than just new_vr->type < old_vr->type\n \t because VR_RANGE and VR_ANTI_RANGE need to be considered\n \t the same.  We may not have is_new when transitioning to\n-\t UNDEFINED or from VARYING.  */\n-      if (new_vr->type == VR_UNDEFINED\n-\t  || old_vr->type == VR_VARYING)\n-\tset_value_range_to_varying (old_vr);\n+\t UNDEFINED.  If old_vr->type is VARYING, we shouldn't be\n+\t called.  */\n+      if (new_vr->type == VR_UNDEFINED)\n+\t{\n+\t  BITMAP_FREE (new_vr->equiv);\n+\t  set_value_range_to_varying (old_vr);\n+\t  set_value_range_to_varying (new_vr);\n+\t  return true;\n+\t}\n       else\n \tset_value_range (old_vr, new_vr->type, new_vr->min, new_vr->max,\n \t\t\t new_vr->equiv);\n@@ -8941,6 +8946,9 @@ vrp_visit_phi_node (gphi *phi)\n \t  fprintf (dump_file, \"\\n\");\n \t}\n \n+      if (vr_result.type == VR_VARYING)\n+\treturn SSA_PROP_VARYING;\n+\n       return SSA_PROP_INTERESTING;\n     }\n "}]}