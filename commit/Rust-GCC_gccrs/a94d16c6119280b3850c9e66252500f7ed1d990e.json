{"sha": "a94d16c6119280b3850c9e66252500f7ed1d990e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0ZDE2YzYxMTkyODBiMzg1MGM5ZTY2MjUyNTAwZjdlZDFkOTkwZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:32:37Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-04-06T19:32:37Z"}, "message": "(do_include): For missing header file...\n\n(do_include): For missing header file, if -M, don't\noutput dependencies, and warning not error if no dependency is\nneeded.\n\nFrom-SVN: r4033", "tree": {"sha": "4846c073944c9bc6f8634c6c4e9e38710d4653b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4846c073944c9bc6f8634c6c4e9e38710d4653b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a94d16c6119280b3850c9e66252500f7ed1d990e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94d16c6119280b3850c9e66252500f7ed1d990e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94d16c6119280b3850c9e66252500f7ed1d990e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94d16c6119280b3850c9e66252500f7ed1d990e/comments", "author": null, "committer": null, "parents": [{"sha": "677ff44144c9a085fd89f336776cbac272df05cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677ff44144c9a085fd89f336776cbac272df05cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677ff44144c9a085fd89f336776cbac272df05cf"}], "stats": {"total": 34, "additions": 9, "deletions": 25}, "files": [{"sha": "bcc583edc13d443574cb32c65d380c1b6b0fd8ef", "filename": "gcc/cccp.c", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94d16c6119280b3850c9e66252500f7ed1d990e/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94d16c6119280b3850c9e66252500f7ed1d990e/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=a94d16c6119280b3850c9e66252500f7ed1d990e", "patch": "@@ -3984,34 +3984,18 @@ do_include (buf, limit, op, keyword)\n \n     strncpy (fname, fbeg, flen);\n     fname[flen] = 0;\n-    if (search_start)\n+    /* If -M was specified, and this header file won't be added to the\n+       dependency list, then don't count this as an error, because we can\n+       still produce correct output.  Otherwise, we can't produce correct\n+       output, because there may be dependencies we need inside the missing\n+       file, and we don't know what directory this missing file exists in.  */\n+    if (print_deps\n+\t&& (print_deps <= (angle_brackets || (system_include_depth > 0))))\n+      warning (\"No include path in which to find %s\", fname);\n+    else if (search_start)\n       error_from_errno (fname);\n     else\n       error (\"No include path in which to find %s\", fname);\n-    \n-    /* For -M, add this file to the dependencies.  */\n-    if (print_deps > (angle_brackets || (system_include_depth > 0))) {\n-      /* Break the line before this.  */\n-      deps_output (\"\", 0);\n-\n-      /* If it was requested as a system header file,\n-\t then assume it belongs in the first place to look for such.  */\n-      if (angle_brackets) {\n-\tfor (searchptr = search_start; searchptr; searchptr = searchptr->next) {\n-\t  if (searchptr->fname) {\n-\t    if (searchptr->fname[0] == 0)\n-\t      continue;\n-\t    deps_output (searchptr->fname, 0);\n-\t    deps_output (\"/\", 0);\n-\t    break;\n-\t  }\n-\t}\n-      }\n-      /* Otherwise, omit the directory, as if the file existed\n-\t in the directory with the source.  */\n-      deps_output (fbeg, flen);\n-      deps_output (\" \", 0);\n-    }\n   } else {\n     struct stat stat_f;\n "}]}