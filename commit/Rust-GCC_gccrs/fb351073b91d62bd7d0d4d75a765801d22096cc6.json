{"sha": "fb351073b91d62bd7d0d4d75a765801d22096cc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIzNTEwNzNiOTFkNjJiZDdkMGQ0ZDc1YTc2NTgwMWQyMjA5NmNjNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:41:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:41:01Z"}, "message": "(const_hash, SYMHASH): Use HOST_WIDE_INT instead of int when casting\npointers to integers.\n\nFrom-SVN: r1753", "tree": {"sha": "408a66ddf191df76f5028985c791dfbf6d54873c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/408a66ddf191df76f5028985c791dfbf6d54873c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb351073b91d62bd7d0d4d75a765801d22096cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb351073b91d62bd7d0d4d75a765801d22096cc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb351073b91d62bd7d0d4d75a765801d22096cc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb351073b91d62bd7d0d4d75a765801d22096cc6/comments", "author": null, "committer": null, "parents": [{"sha": "d69c4bd158c6072fa4cd8e58b236871b16259820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69c4bd158c6072fa4cd8e58b236871b16259820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69c4bd158c6072fa4cd8e58b236871b16259820"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "cd36603178a42c6f8921666fab9a26994b7ba25c", "filename": "gcc/varasm.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb351073b91d62bd7d0d4d75a765801d22096cc6/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb351073b91d62bd7d0d4d75a765801d22096cc6/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=fb351073b91d62bd7d0d4d75a765801d22096cc6", "patch": "@@ -1425,7 +1425,7 @@ clear_const_double_mem ()\n struct addr_const\n {\n   rtx base;\n-  int offset;\n+  HOST_WIDE_INT offset;\n };\n \n static void\n@@ -1548,7 +1548,8 @@ const_hash (exp)\n \t Instead, we include the array size because the constructor could\n \t be shorter.  */\n       if (TREE_CODE (TREE_TYPE (exp)) == RECORD_TYPE)\n-\thi = ((int) TREE_TYPE (exp) & ((1 << HASHBITS) - 1)) % MAX_HASH_TABLE;\n+\thi = ((HOST_WIDE_INT) TREE_TYPE (exp) & ((1 << HASHBITS) - 1))\n+\t  % MAX_HASH_TABLE;\n       else\n \thi = ((5 + int_size_in_bytes (TREE_TYPE (exp)))\n \t       & ((1 << HASHBITS) - 1)) % MAX_HASH_TABLE;\n@@ -2048,7 +2049,7 @@ static struct pool_sym *const_rtx_sym_hash_table[MAX_RTX_HASH_TABLE];\n    The argument is XSTR (... , 0)  */\n \n #define SYMHASH(LABEL)\t\\\n-  ((((int) (LABEL)) & ((1 << HASHBITS) - 1))  % MAX_RTX_HASH_TABLE)\n+  ((((HOST_WIDE_INT) (LABEL)) & ((1 << HASHBITS) - 1))  % MAX_RTX_HASH_TABLE)\n \f\n /* Initialize constant pool hashing for next function.  */\n "}]}