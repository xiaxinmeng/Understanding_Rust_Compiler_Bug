{"sha": "d6c2b67dea0b9a24b14cba657f73ff8914768e8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZjMmI2N2RlYTBiOWEyNGIxNGNiYTY1N2Y3M2ZmODkxNDc2OGU4Zg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-12-03T15:37:16Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-12-03T15:37:16Z"}, "message": "tm.texi (Misc): Document TARGET_FOLD_BUILTIN.\n\n2004-12-03  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* doc/tm.texi (Misc): Document TARGET_FOLD_BUILTIN.\n\nFrom-SVN: r91685", "tree": {"sha": "6c8f96ac6252de70a482222f1c0f530e847b5a71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c8f96ac6252de70a482222f1c0f530e847b5a71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6c2b67dea0b9a24b14cba657f73ff8914768e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c2b67dea0b9a24b14cba657f73ff8914768e8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c2b67dea0b9a24b14cba657f73ff8914768e8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c2b67dea0b9a24b14cba657f73ff8914768e8f/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf67a14509df6d685d280b7be4ed0f0996fcbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf67a14509df6d685d280b7be4ed0f0996fcbc5"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4ad5bda34fc167219755fb5f0e78bd60d9f43d59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2b67dea0b9a24b14cba657f73ff8914768e8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2b67dea0b9a24b14cba657f73ff8914768e8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6c2b67dea0b9a24b14cba657f73ff8914768e8f", "patch": "@@ -1,3 +1,7 @@\n+2004-12-03  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* doc/tm.texi (Misc): Document TARGET_FOLD_BUILTIN.\n+\n 2004-12-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* mklibgcc.in: Put back the default set of EXTRA_MULTILIB_PART."}, {"sha": "dfc1878d69cf8446125fb5b7280af4e5cfa1cc12", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6c2b67dea0b9a24b14cba657f73ff8914768e8f/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6c2b67dea0b9a24b14cba657f73ff8914768e8f/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d6c2b67dea0b9a24b14cba657f73ff8914768e8f", "patch": "@@ -9339,6 +9339,15 @@ ignored.  This function should return the result of the call to the\n built-in function.\n @end deftypefn\n \n+@deftypefn {Target Hook} tree TARGET_FOLD_BUILTIN (tree @var{exp}, bool @var{ignore})\n+\n+Expand a call to a machine specific built-in function that was set up by\n+@samp{TARGET_INIT_BUILTINS}.  @var{exp} is the expression for the\n+function call; the result is another tree containing a simplified\n+expression for the call's result.  If @var{ignore} is true the\n+value will be ignored.\n+@end deftypefn\n+\n @defmac MD_CAN_REDIRECT_BRANCH (@var{branch1}, @var{branch2})\n \n Take a branch insn in @var{branch1} and another in @var{branch2}."}]}