{"sha": "c608a6846408b980c58a301afcced74628dae731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYwOGE2ODQ2NDA4Yjk4MGM1OGEzMDFhZmNjZWQ3NDYyOGRhZTczMQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-07-30T17:39:27Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-07-30T17:39:27Z"}, "message": "sh.md (cond_delay_slot): New attribute.\n\n\t* sh.md (cond_delay_slot): New attribute.\n\t(cbranch delay): Use it for anulled-true case.\n\t(stuff_delay_slot): New pattern.\n\t* sh.c (print_operand, case '.'): Don't print .s / /s fore zero-length\n\tdelay slot insn.\n\t(gen_far_branch): Emit stuff_delay_slot pattern.\n\nFrom-SVN: r55878", "tree": {"sha": "7612c3dc4c84583f8bcae27a3ea0730c2276857a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7612c3dc4c84583f8bcae27a3ea0730c2276857a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c608a6846408b980c58a301afcced74628dae731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c608a6846408b980c58a301afcced74628dae731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c608a6846408b980c58a301afcced74628dae731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c608a6846408b980c58a301afcced74628dae731/comments", "author": null, "committer": null, "parents": [{"sha": "0a7564014ae889d9eea364e919d7b0367ecf8816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a7564014ae889d9eea364e919d7b0367ecf8816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a7564014ae889d9eea364e919d7b0367ecf8816"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "cd1da7b7d4c4a8f6760dc96cec49deb6f88f62cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c608a6846408b980c58a301afcced74628dae731/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c608a6846408b980c58a301afcced74628dae731/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c608a6846408b980c58a301afcced74628dae731", "patch": "@@ -1,3 +1,12 @@\n+Tue Jul 30 18:31:31 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.md (cond_delay_slot): New attribute.\n+\t(cbranch delay): Use it for anulled-true case.\n+\t(stuff_delay_slot): New pattern.\n+\t* sh.c (print_operand, case '.'): Don't print .s / /s fore zero-length\n+\tdelay slot insn.\n+\t(gen_far_branch): Emit stuff_delay_slot pattern.\n+\n Tue Jul 30 11:21:44 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* unroll.c (copy_loop_body): Don't copy NOTE_INSN_LOOP_CONT."}, {"sha": "d727a678638636fdc4f764072d14dc01e89201d7", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c608a6846408b980c58a301afcced74628dae731/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c608a6846408b980c58a301afcced74628dae731/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=c608a6846408b980c58a301afcced74628dae731", "patch": "@@ -346,7 +346,8 @@ print_operand (stream, x, code)\n     {\n     case '.':\n       if (final_sequence\n-\t  && ! INSN_ANNULLED_BRANCH_P (XVECEXP (final_sequence, 0, 0)))\n+\t  && ! INSN_ANNULLED_BRANCH_P (XVECEXP (final_sequence, 0, 0))\n+\t  && get_attr_length (XVECEXP (final_sequence, 0, 1)))\n \tfprintf (stream, ASSEMBLER_DIALECT ? \"/s\" : \".s\");\n       break;\n     case ',':\n@@ -3212,6 +3213,11 @@ gen_far_branch (bp)\n   JUMP_LABEL (jump) = bp->far_label;\n   if (! invert_jump (insn, label, 1))\n     abort ();\n+  (emit_insn_after\n+   (gen_stuff_delay_slot\n+    (GEN_INT (INSN_UID (XEXP (SET_SRC (PATTERN (jump)), 0))),\n+     GEN_INT (recog_memoized (insn) == CODE_FOR_branch_false)),\n+    insn));\n   /* Prevent reorg from undoing our splits.  */\n   gen_block_redirect (jump, bp->address += 2, 2);\n }"}, {"sha": "7016e74ec484139cbf592ec43d47b64e3bc93ddc", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c608a6846408b980c58a301afcced74628dae731/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c608a6846408b980c58a301afcced74628dae731/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=c608a6846408b980c58a301afcced74628dae731", "patch": "@@ -696,6 +696,10 @@\n \t (eq_attr \"length\" \"2\") (const_string \"yes\")\n \t ] (const_string \"no\")))\n \n+(define_attr \"cond_delay_slot\" \"yes,no\"\n+  (cond [(eq_attr \"in_delay_slot\" \"yes\") (const_string \"yes\")\n+\t ] (const_string \"no\")))\n+\n (define_attr \"is_sfunc\" \"\"\n   (if_then_else (eq_attr \"type\" \"sfunc\") (const_int 1) (const_int 0)))\n \n@@ -738,7 +742,7 @@\n (define_delay\n   (and (eq_attr \"type\" \"cbranch\")\n        (ne (symbol_ref \"TARGET_SH2\") (const_int 0)))\n-  [(eq_attr \"in_delay_slot\" \"yes\") (eq_attr \"in_delay_slot\" \"yes\") (nil)])\n+  [(eq_attr \"in_delay_slot\" \"yes\") (eq_attr \"cond_delay_slot\" \"yes\") (nil)])\n \f\n ;; -------------------------------------------------------------------------\n ;; SImode signed integer comparisons\n@@ -5141,6 +5145,18 @@\n   \"TARGET_SH1\"\n   \"\"\n   [(set_attr \"length\" \"0\")])\n+\n+;; This one is used to preemt an insn from beyond the bra / braf / jmp\n+;; being pulled into the delay slot of a condbranch that has been made to\n+;; jump around the unconditional jump because it was out of range.\n+(define_insn \"stuff_delay_slot\"\n+  [(set (pc)\n+\t(unspec [(match_operand 0 \"const_int_operand\" \"\") (pc)] UNSPEC_BBR))\n+   (set (reg:SI T_REG) (match_operand 1 \"const_int_operand\" \"\"))]\n+  \"TARGET_SH1\"\n+  \"\"\n+  [(set_attr \"length\" \"0\")\n+   (set_attr \"cond_delay_slot\" \"yes\")])\n \f\n ;; Conditional branch insns\n "}]}