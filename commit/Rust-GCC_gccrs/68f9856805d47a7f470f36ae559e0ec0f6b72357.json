{"sha": "68f9856805d47a7f470f36ae559e0ec0f6b72357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhmOTg1NjgwNWQ0N2E3ZjQ3MGYzNmFlNTU5ZTBlYzBmNmI3MjM1Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-10-20T16:54:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-10-20T16:54:47Z"}, "message": "config.gcc: Add support for arm926ejs, arm1026ejs, arm1136js, arm1136jfs, and armv6j.\n\n\t* config.gcc: Add support for arm926ejs, arm1026ejs, arm1136js,\n\tarm1136jfs, and armv6j.\n\t* config/arm/arm.c (FL_ARCH6J): New macro.\n\t(FL_VFPV2): Likewise.\n\t(all_cores): Add entries for arm926ejs, arm1026ejs, arm1136js,\n\tand arm1136jfs.\n\t(all_architectures): Add entry for armv6j.\n\t(arm_override_options): Add entries for arm926ejs, arm1026ejs,\n\tarm1136js, and arm1136jfs.\n\t* config/arm/arm.h (TARGET_CPU_arm926ej_s): New macro.\n\t(TARGET_CPU_arm1026ej_s): Likewise.\n\t(TARGET_CPU_arm1136j_s): Likewise.\n\t(TARGET_CPU_arm1136jf_s): Likewise.\n\t* doc/invoke.texi: Document new ARM cores and architecture\n\tvariants.\n\nFrom-SVN: r72709", "tree": {"sha": "53bb9b9d2bf734a521ad7bd97ba5e3650513490d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53bb9b9d2bf734a521ad7bd97ba5e3650513490d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68f9856805d47a7f470f36ae559e0ec0f6b72357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f9856805d47a7f470f36ae559e0ec0f6b72357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f9856805d47a7f470f36ae559e0ec0f6b72357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f9856805d47a7f470f36ae559e0ec0f6b72357/comments", "author": null, "committer": null, "parents": [{"sha": "df2ddbb3106f805292ff20a77babccf591806958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2ddbb3106f805292ff20a77babccf591806958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2ddbb3106f805292ff20a77babccf591806958"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "4dbe1ee1c61ce77305e3c2743940064071ccf33a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68f9856805d47a7f470f36ae559e0ec0f6b72357/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68f9856805d47a7f470f36ae559e0ec0f6b72357/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=68f9856805d47a7f470f36ae559e0ec0f6b72357", "patch": "@@ -6642,8 +6642,10 @@ assembly code.  Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{arm7500}, @samp{arm7500fe}, @samp{arm7tdmi}, @samp{arm8},\n @samp{strongarm}, @samp{strongarm110}, @samp{strongarm1100},\n @samp{arm8}, @samp{arm810}, @samp{arm9}, @samp{arm9e}, @samp{arm920},\n-@samp{arm920t}, @samp{arm940t}, @samp{arm9tdmi}, @samp{arm10tdmi},\n-@samp{arm1020t}, @samp{xscale}, @samp{iwmmxt}, @samp{ep9312}.\n+@samp{arm920t}, @samp{arm926ejs}, @samp{arm940t}, @samp{arm9tdmi},\n+@samp{arm10tdmi}, @samp{arm1020t}, @samp{arm1026ejs},\n+@samp{arm1136js}, @samp{arm1136jfs} ,@samp{xscale}, @samp{iwmmxt},\n+@samp{ep9312}.\n \n @itemx -mtune=@var{name}\n @opindex mtune\n@@ -6663,7 +6665,8 @@ name to determine what kind of instructions it can emit when generating\n assembly code.  This option can be used in conjunction with or instead\n of the @option{-mcpu=} option.  Permissible names are: @samp{armv2},\n @samp{armv2a}, @samp{armv3}, @samp{armv3m}, @samp{armv4}, @samp{armv4t},\n-@samp{armv5}, @samp{armv5t}, @samp{armv5te}, @samp{iwmmxt}, @samp{ep9312}.\n+@samp{armv5}, @samp{armv5t}, @samp{armv5te}, @samp{armv6j},\n+@samp{iwmmxt}, @samp{ep9312}.\n \n @item -mfpe=@var{number}\n @itemx -mfp=@var{number}"}]}