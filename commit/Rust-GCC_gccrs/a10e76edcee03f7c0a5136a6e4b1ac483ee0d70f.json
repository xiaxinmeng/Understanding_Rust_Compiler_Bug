{"sha": "a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEwZTc2ZWRjZWUwM2Y3YzBhNTEzNmE2ZTRiMWFjNDgzZWUwZDcwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-18T11:16:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-18T11:16:33Z"}, "message": "re PR target/89361 (s390 broken without S390_USE_TARGET_ATTRIBUTE, likely since r257489)\n\n\tPR target/89361\n\t* config/s390/s390.c (s390_indirect_branch_attrvalue,\n\ts390_indirect_branch_settings): Define unconditionally.\n\t(s390_set_current_function): Likewise, but guard the whole body except\n\tthe s390_indirect_branch_settings call with\n\t#if S390_USE_TARGET_ATTRIBUTE.\n\t(TARGET_SET_CURRENT_FUNCTION): Redefine unconditionally.\n\nFrom-SVN: r268983", "tree": {"sha": "3ad14e446778823e3bd3f99e6e19fe78d0d41ddf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ad14e446778823e3bd3f99e6e19fe78d0d41ddf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14653c37cf034f95b553ad242e123e611c40f2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14653c37cf034f95b553ad242e123e611c40f2f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14653c37cf034f95b553ad242e123e611c40f2f5"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "45b5d5d0e986722c618c5c353f276b6cfb2167da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f", "patch": "@@ -1,5 +1,13 @@\n 2019-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/89361\n+\t* config/s390/s390.c (s390_indirect_branch_attrvalue,\n+\ts390_indirect_branch_settings): Define unconditionally.\n+\t(s390_set_current_function): Likewise, but guard the whole body except\n+\tthe s390_indirect_branch_settings call with\n+\t#if S390_USE_TARGET_ATTRIBUTE.\n+\t(TARGET_SET_CURRENT_FUNCTION): Redefine unconditionally.\n+\n \t* config/s390/s390.md (*<risbg_n>_ior_and_sr_ze,\n \t*<risbg_n>_<mode>_ior_and_lshiftrt, *<risbg_n>_sidi_ior_and_lshiftrt):\n \tUse HOST_WIDE_INT_M1U instead of ~(0ULL)."}, {"sha": "aff271806b77b6ffd165078704c35d7f3b5e3e9b", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=a10e76edcee03f7c0a5136a6e4b1ac483ee0d70f", "patch": "@@ -15462,6 +15462,7 @@ s390_can_inline_p (tree caller, tree callee)\n \n   return ret;\n }\n+#endif\n \n /* Set VAL to correct enum value according to the indirect-branch or\n    function-return attribute in ATTR.  */\n@@ -15535,6 +15536,7 @@ s390_indirect_branch_settings (tree fndecl)\n     s390_indirect_branch_attrvalue (attr, &cfun->machine->function_return_mem);\n }\n \n+#if S390_USE_TARGET_ATTRIBUTE\n /* Restore targets globals from NEW_TREE and invalidate s390_previous_fndecl\n    cache.  */\n \n@@ -15550,13 +15552,15 @@ s390_activate_target_options (tree new_tree)\n     TREE_TARGET_GLOBALS (new_tree) = save_target_globals_default_opts ();\n   s390_previous_fndecl = NULL_TREE;\n }\n+#endif\n \n /* Establish appropriate back-end context for processing the function\n    FNDECL.  The argument might be NULL to indicate processing at top\n    level, outside of any function scope.  */\n static void\n s390_set_current_function (tree fndecl)\n {\n+#if S390_USE_TARGET_ATTRIBUTE\n   /* Only change the context if the function changes.  This hook is called\n      several times in the course of compiling a function, and we don't want to\n      slow things down too much or call target_reinit when it isn't safe.  */\n@@ -15588,10 +15592,9 @@ s390_set_current_function (tree fndecl)\n   if (old_tree != new_tree)\n     s390_activate_target_options (new_tree);\n   s390_previous_fndecl = fndecl;\n-\n+#endif\n   s390_indirect_branch_settings (fndecl);\n }\n-#endif\n \n /* Implement TARGET_USE_BY_PIECES_INFRASTRUCTURE_P.  */\n \n@@ -16331,10 +16334,10 @@ s390_case_values_threshold (void)\n #undef TARGET_ASM_FILE_END\n #define TARGET_ASM_FILE_END s390_asm_file_end\n \n-#if S390_USE_TARGET_ATTRIBUTE\n #undef TARGET_SET_CURRENT_FUNCTION\n #define TARGET_SET_CURRENT_FUNCTION s390_set_current_function\n \n+#if S390_USE_TARGET_ATTRIBUTE\n #undef TARGET_OPTION_VALID_ATTRIBUTE_P\n #define TARGET_OPTION_VALID_ATTRIBUTE_P s390_valid_target_attribute_p\n "}]}