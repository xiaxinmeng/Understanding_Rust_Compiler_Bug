{"sha": "2799d9729358b527be72986976d98cae55be4707", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5OWQ5NzI5MzU4YjUyN2JlNzI5ODY5NzZkOThjYWU1NWJlNDcwNw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2011-09-27T00:02:54Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-09-27T00:02:54Z"}, "message": "re PR libstdc++/48698 (gnu-versioned-namespace problems)\n\n2011-09-26  Benjamin Kosnik  <bkoz@redhat.com\n            Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\tPR libstdc++/48698\n\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Set libtool_VERSION here.\n\t* configure.ac: Move AC_SUBST of libtool_VERSION past call to\n\tGLIBCXX_ENABLE_SYMVERS.\n\t* configure: Regenerate.\n\t* include/bits/c++config: Use __7 as versioned namespace name.\n\t* config/abi/pre/gnu-versioned-namespace.ver: Change mangling as\n\tper above.\n\t* include/c_global/cwchar: Adjust nested namespaces.\n\t* testsuite/20_util/bind/48698.cc: Add test case.\n\t* testsuite/ext/profile/mutex_extensions_neg.cc: Change line number.\n\nFrom-SVN: r179221", "tree": {"sha": "c7e5cfc13b50c93a7499aad398a80645438df998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7e5cfc13b50c93a7499aad398a80645438df998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2799d9729358b527be72986976d98cae55be4707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2799d9729358b527be72986976d98cae55be4707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2799d9729358b527be72986976d98cae55be4707", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2799d9729358b527be72986976d98cae55be4707/comments", "author": null, "committer": null, "parents": [{"sha": "59d605ad393aad35059e056816d9ebd4b4a19a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d605ad393aad35059e056816d9ebd4b4a19a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d605ad393aad35059e056816d9ebd4b4a19a7d"}], "stats": {"total": 200, "additions": 126, "deletions": 74}, "files": [{"sha": "05f7ef262ca064b6271ad8acb7c71e6a24b7fba4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -1,3 +1,18 @@\n+2011-09-25  Benjamin Kosnik  <bkoz@redhat.com\n+            Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/48698\n+\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Set libtool_VERSION here.\n+\t* configure.ac: Move AC_SUBST of libtool_VERSION past call to\n+\tGLIBCXX_ENABLE_SYMVERS.\n+\t* configure: Regenerate.\n+\t* include/bits/c++config: Use __7 as versioned namespace name.\n+\t* config/abi/pre/gnu-versioned-namespace.ver: Change mangling as\n+\tper above.\n+\t* include/c_global/cwchar: Adjust nested namespaces.\n+\t* testsuite/20_util/bind/48698.cc: Add test case.\n+\t* testsuite/ext/profile/mutex_extensions_neg.cc: Change line number.\n+\n 2011-09-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tRevert (no longer necessary post r179130):"}, {"sha": "1b9d025efc3e87976b0088705ebe92a698c16434", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -3054,10 +3054,15 @@ dnl\n dnl Add version tags to symbols in shared library (or not), additionally\n dnl marking other symbols as private/local (or not).\n dnl\n+dnl Sets libtool_VERSION, and determines shared library SONAME.\n+dnl\n+dnl  This depends on GLIBCXX CHECK_LINKER_FEATURES, but without it assumes no.\n+dnl\n dnl --enable-symvers=style adds a version script to the linker call when\n dnl       creating the shared library.  The choice of version script is\n dnl       controlled by 'style'.\n dnl --disable-symvers does not.\n+dnl\n dnl  +  Usage:  GLIBCXX_ENABLE_SYMVERS[(DEFAULT)]\n dnl       Where DEFAULT is either 'yes' or 'no'.  Passing `yes' tries to\n dnl       choose a default style based on linker characteristics.  Passing\n@@ -3194,7 +3199,10 @@ changequote([,])dnl\n   fi\n fi\n \n-# Everything parsed; figure out what file to use.\n+# For libtool versioning info, format is CURRENT:REVISION:AGE\n+libtool_VERSION=6:17:0\n+\n+# Everything parsed; figure out what files and settings to use.\n case $enable_symvers in\n   no)\n     SYMVER_FILE=config/abi/pre/none.ver\n@@ -3205,6 +3213,7 @@ case $enable_symvers in\n \t      [Define to use GNU versioning in the shared library.])\n     ;;\n   gnu-versioned-namespace)\n+    libtool_VERSION=7:0:0\n     SYMVER_FILE=config/abi/pre/gnu-versioned-namespace.ver\n     AC_DEFINE(_GLIBCXX_SYMVER_GNU_NAMESPACE, 1,\n \t      [Define to use GNU namespace versioning in the shared library.])"}, {"sha": "32bcf67d8194ceffc5846a7a1fae43086309b53b", "filename": "libstdc++-v3/config/abi/pre/gnu-versioned-namespace.ver", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -20,23 +20,23 @@\n ## with this library; see the file COPYING3.  If not see\n ## <http://www.gnu.org/licenses/>.\n \n-GLIBCXX_5.0 {\n+GLIBCXX_7.0 {\n \n   global:\n \n     # Names inside the 'extern' block are demangled names.\n     extern \"C++\"\n     {\n-      std::_6::*;\n+      std::__7::*;\n       std::*\n     };\n \n     # locale\n-    _ZNSt2_69has_facetINS_*;\n+    _ZNSt3__79has_facetINS_*;\n \n     # hash \n-    _ZNSt8__detail2_612__prime_listE;\n-    _ZNSt3tr18__detail2_612__prime_listE;\n+    _ZNSt8__detail3__712__prime_listE;\n+    _ZNSt3tr18__detail3__712__prime_listE;\n \n     # thread/mutex/condition_variable/future\n     __once_proxy;\n@@ -73,41 +73,41 @@ GLIBCXX_5.0 {\n     _ZTv0_n*;\n \n     # std::__detail::_List_node_base\n-    _ZNSt8__detail2_615_List_node_base7_M_hook*;\n-    _ZNSt8__detail2_615_List_node_base9_M_unhookEv;\n-    _ZNSt8__detail2_615_List_node_base10_M_reverseEv;\n-    _ZNSt8__detail2_615_List_node_base11_M_transfer*;\n-    _ZNSt8__detail2_615_List_node_base4swapER*;\n+    _ZNSt8__detail3__715_List_node_base7_M_hook*;\n+    _ZNSt8__detail3__715_List_node_base9_M_unhookEv;\n+    _ZNSt8__detail3__715_List_node_base10_M_reverseEv;\n+    _ZNSt8__detail3__715_List_node_base11_M_transfer*;\n+    _ZNSt8__detail3__715_List_node_base4swapER*;\n \n     # std::__convert_to_v\n-    _ZNSt2_614__convert_to_v*;\n+    _ZNSt3__714__convert_to_v*;\n \n     # std::__copy_streambufs\n-    _ZNSt2_617__copy_streambufsI*;\n-    _ZNSt2_621__copy_streambufs_eofI*;\n+    _ZNSt3__717__copy_streambufsI*;\n+    _ZNSt3__721__copy_streambufs_eofI*;\n \n     # __gnu_cxx::__atomic_add\n     # __gnu_cxx::__exchange_and_add\n-    _ZN9__gnu_cxx2_612__atomic_addEPV[il][il];\n-    _ZN9__gnu_cxx2_618__exchange_and_addEPV[li][il];\n+    _ZN9__gnu_cxx3__712__atomic_addEPV[il][il];\n+    _ZN9__gnu_cxx3__718__exchange_and_addEPV[li][il];\n \n     # __gnu_cxx::__pool\n-    _ZN9__gnu_cxx2_66__poolILb[01]EE13_M_initializeEv;\n-    _ZN9__gnu_cxx2_66__poolILb[01]EE16_M_reserve_blockE[jm][jm];\n-    _ZN9__gnu_cxx2_66__poolILb[01]EE16_M_reclaim_blockEPc[jm];\n-    _ZN9__gnu_cxx2_66__poolILb[01]EE10_M_destroyEv;\n-    _ZN9__gnu_cxx2_66__poolILb1EE16_M_get_thread_idEv;\n+    _ZN9__gnu_cxx3__76__poolILb[01]EE13_M_initializeEv;\n+    _ZN9__gnu_cxx3__76__poolILb[01]EE16_M_reserve_blockE[jm][jm];\n+    _ZN9__gnu_cxx3__76__poolILb[01]EE16_M_reclaim_blockEPc[jm];\n+    _ZN9__gnu_cxx3__76__poolILb[01]EE10_M_destroyEv;\n+    _ZN9__gnu_cxx3__76__poolILb1EE16_M_get_thread_idEv;\n \n-    _ZN9__gnu_cxx2_617__pool_alloc_base9_M_refillE[jm];    \n-    _ZN9__gnu_cxx2_617__pool_alloc_base16_M_get_free_listE[jm];\n-    _ZN9__gnu_cxx2_617__pool_alloc_base12_M_get_mutexEv;\n+    _ZN9__gnu_cxx3__717__pool_alloc_base9_M_refillE[jm];    \n+    _ZN9__gnu_cxx3__717__pool_alloc_base16_M_get_free_listE[jm];\n+    _ZN9__gnu_cxx3__717__pool_alloc_base12_M_get_mutexEv;\n \n-    _ZN9__gnu_cxx2_69free_list6_M_getE[jm];\n-    _ZN9__gnu_cxx2_69free_list8_M_clearEv;\n+    _ZN9__gnu_cxx3__79free_list6_M_getE[jm];\n+    _ZN9__gnu_cxx3__79free_list8_M_clearEv;\n \n     # __gnu_cxx::stdio_sync_filebuf\n-    _ZTVN9__gnu_cxx2_618stdio_sync_filebufI[cw]St2_611char_traitsI[cw]EEE;\n-    _ZN9__gnu_cxx2_618stdio_sync_filebufI[cw]NSt2_611char_traitsI[cw]EEE[5-9]*;\n+    _ZTVN9__gnu_cxx3__718stdio_sync_filebufI[cw]St3__711char_traitsI[cw]EEE;\n+    _ZN9__gnu_cxx3__718stdio_sync_filebufI[cw]NSt3__711char_traitsI[cw]EEE[5-9]*;\n \n     # debug mode\n     _ZN11__gnu_debug19_Safe_sequence_base12_M_get_mutexEv;\n@@ -212,7 +212,7 @@ CXXABI_2.0 {\n     _ZSt15_Fnv_hash_bytesPKv*;\n \n     # __gnu_cxx::_verbose_terminate_handler()\n-    _ZN9__gnu_cxx2_627__verbose_terminate_handlerEv;\n+    _ZN9__gnu_cxx3__727__verbose_terminate_handlerEv;\n \n     # *_type_info classes, ctor and dtor\n     _ZN10__cxxabiv117__array_type_info*;"}, {"sha": "ef663beee0c8bb569e62bc31c0564ea189c03f77", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -645,6 +645,7 @@ GLIBCXX_LDBL_COMPAT_FALSE\n GLIBCXX_LDBL_COMPAT_TRUE\n ENABLE_VISIBILITY_FALSE\n ENABLE_VISIBILITY_TRUE\n+libtool_VERSION\n ENABLE_SYMVERS_SOL2_FALSE\n ENABLE_SYMVERS_SOL2_TRUE\n ENABLE_SYMVERS_SUN_FALSE\n@@ -788,7 +789,6 @@ build_vendor\n build_cpu\n build\n multi_basedir\n-libtool_VERSION\n target_alias\n host_alias\n build_alias\n@@ -2825,10 +2825,6 @@ ac_config_headers=\"$ac_config_headers config.h\"\n # exported.  Only used at the end of this file.\n ### am handles this now?  ORIGINAL_LD_FOR_MULTILIBS=$LD\n \n-# For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:17:0\n-\n-\n # Find the rest of the source tree framework.\n # Default to --enable-multilib\n # Check whether --enable-multilib was given.\n@@ -11489,7 +11485,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11492 \"configure\"\n+#line 11488 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11595,7 +11591,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11598 \"configure\"\n+#line 11594 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14953,7 +14949,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 14956 \"configure\"\n+#line 14952 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15321,7 +15317,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15324 \"configure\"\n+#line 15320 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15358,7 +15354,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15361 \"configure\"\n+#line 15357 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15395,7 +15391,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15398 \"configure\"\n+#line 15394 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15433,7 +15429,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15436 \"configure\"\n+#line 15432 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15509,7 +15505,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15512 \"configure\"\n+#line 15508 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15551,7 +15547,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15554 \"configure\"\n+#line 15550 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15585,7 +15581,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15588 \"configure\"\n+#line 15584 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -63971,7 +63967,6 @@ $as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n   fi\n \n \n-\n  # Check whether --enable-linux-futex was given.\n if test \"${enable_linux_futex+set}\" = set; then :\n   enableval=$enable_linux_futex;\n@@ -64497,7 +64492,6 @@ ac_config_commands=\"$ac_config_commands include/gstdint.h\"\n \n \n \n-# This depends on GLIBCXX CHECK_LINKER_FEATURES, but without it assumes no.\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU c++filt\" >&5\n $as_echo_n \"checking for GNU c++filt... \" >&6; }\n@@ -64735,7 +64729,10 @@ $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n   fi\n fi\n \n-# Everything parsed; figure out what file to use.\n+# For libtool versioning info, format is CURRENT:REVISION:AGE\n+libtool_VERSION=6:17:0\n+\n+# Everything parsed; figure out what files and settings to use.\n case $enable_symvers in\n   no)\n     SYMVER_FILE=config/abi/pre/none.ver\n@@ -64747,6 +64744,7 @@ $as_echo \"#define _GLIBCXX_SYMVER_GNU 1\" >>confdefs.h\n \n     ;;\n   gnu-versioned-namespace)\n+    libtool_VERSION=7:0:0\n     SYMVER_FILE=config/abi/pre/gnu-versioned-namespace.ver\n \n $as_echo \"#define _GLIBCXX_SYMVER_GNU_NAMESPACE 1\" >>confdefs.h\n@@ -64897,6 +64895,8 @@ fi\n $as_echo \"$glibcxx_ptrdiff_t_is_i\" >&6; }\n \n \n+\n+\n  # Check whether --enable-visibility was given.\n if test \"${enable_visibility+set}\" = set; then :\n   enableval=$enable_visibility;"}, {"sha": "eb2fe85a7c48bb63f1ac77b44fcc2daa433d5d21", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -11,10 +11,6 @@ AC_CONFIG_HEADER(config.h)\n # exported.  Only used at the end of this file.\n ### am handles this now?  ORIGINAL_LD_FOR_MULTILIBS=$LD\n \n-# For libtool versioning info, format is CURRENT:REVISION:AGE\n-libtool_VERSION=6:17:0\n-AC_SUBST(libtool_VERSION)\n-\n # Find the rest of the source tree framework.\n AM_ENABLE_MULTILIB(, ..)\n \n@@ -305,13 +301,13 @@ fi\n # Check for _Unwind_GetIPInfo.\n GCC_CHECK_UNWIND_GETIPINFO\n \n-\n GCC_LINUX_FUTEX([AC_DEFINE(HAVE_LINUX_FUTEX, 1, [Define if futex syscall is available.])])\n \n GCC_HEADER_STDINT(include/gstdint.h)\n \n-# This depends on GLIBCXX CHECK_LINKER_FEATURES, but without it assumes no.\n GLIBCXX_ENABLE_SYMVERS([yes])\n+AC_SUBST(libtool_VERSION)\n+\n GLIBCXX_ENABLE_VISIBILITY([yes])\n \n ac_ldbl_compat=no"}, {"sha": "8c61de311d43e5337644273ccda4e7f674b6ca66", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -176,41 +176,42 @@ namespace std\n \n \n // Defined if inline namespaces are used for versioning.\n-#define _GLIBCXX_INLINE_VERSION\n+#define _GLIBCXX_INLINE_VERSION \n \n // Inline namespace for symbol versioning.\n #if _GLIBCXX_INLINE_VERSION\n+\n namespace std\n {\n-  inline namespace _6 { }\n+  inline namespace __7 { }\n \n-  namespace rel_ops { inline namespace _6 { } }\n+  namespace rel_ops { inline namespace __7 { } }\n \n   namespace tr1\n   {\n-    inline namespace _6 { }\n-    namespace placeholders { inline namespace _6 { } }\n-    namespace regex_constants { inline namespace _6 { } }\n-    namespace __detail { inline namespace _6 { } }\n+    inline namespace __7 { }\n+    namespace placeholders { inline namespace __7 { } }\n+    namespace regex_constants { inline namespace __7 { } }\n+    namespace __detail { inline namespace __7 { } }\n   }\n \n-  namespace decimal { inline namespace _6 { } }\n+  namespace decimal { inline namespace __7 { } }\n \n-  namespace chrono { inline namespace _6 { } }\n-  namespace placeholders { inline namespace _6 { } }\n-  namespace regex_constants { inline namespace _6 { } }\n-  namespace this_thread { inline namespace _6 { } }\n+  namespace chrono { inline namespace __7 { } }\n+  namespace placeholders { inline namespace __7 { } }\n+  namespace regex_constants { inline namespace __7 { } }\n+  namespace this_thread { inline namespace __7 { } }\n \n-  namespace __detail { inline namespace _6 { } }\n-  namespace __regex { inline namespace _6 { } }\n+  namespace __detail { inline namespace __7 { } }\n+  namespace __regex { inline namespace __7 { } }\n }\n \n namespace __gnu_cxx\n {\n-  inline namespace _6 { }\n-  namespace __detail { inline namespace _6 { } }\n+  inline namespace __7 { }\n+  namespace __detail { inline namespace __7 { } }\n }\n-# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace _6 {\n+# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace __7 {\n # define _GLIBCXX_END_NAMESPACE_VERSION }\n #else\n # define _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -227,7 +228,7 @@ namespace std\n   namespace __cxx1998\n   {\n #if _GLIBCXX_INLINE_VERSION\n- inline namespace _6 { }\n+ inline namespace __7 { }\n #endif\n   }\n "}, {"sha": "a2b1168f9a0bb691cf753e731deb1f210d9f57f7", "filename": "libstdc++-v3/include/c_global/cwchar", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcwchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcwchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_global%2Fcwchar?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -136,6 +136,8 @@ namespace std\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n   using ::wint_t;\n \n   using ::btowc;\n@@ -207,8 +209,6 @@ namespace std _GLIBCXX_VISIBILITY(default)\n   using ::wcsstr;\n   using ::wmemchr;\n \n-_GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n #ifndef __CORRECT_ISO_CPP_WCHAR_H_PROTO\n   inline wchar_t*\n   wcschr(wchar_t* __p, wchar_t __c)"}, {"sha": "a623735f3eb34ad215006c9548510bb2d47dde18", "filename": "libstdc++-v3/testsuite/20_util/bind/48698.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2F48698.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2F48698.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fbind%2F48698.cc?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.7.11 Function template bind\n+\n+#include <functional>\n+\n+int f(int i);\n+\n+// Don't want placeholders to interfere with a possibly-versioned namespace.\n+int g()\n+{\n+  std::bind(f, std::placeholders::_6);\n+}"}, {"sha": "ba515b7fb6b4141af39ec4f5a067282bd8ab16d6", "filename": "libstdc++-v3/testsuite/ext/profile/mutex_extensions_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2799d9729358b527be72986976d98cae55be4707/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions_neg.cc?ref=2799d9729358b527be72986976d98cae55be4707", "patch": "@@ -25,4 +25,4 @@\n \n #include <vector>\n \n-// { dg-error \"multiple inlined namespaces\" \"\" { target *-*-* } 255 }\n+// { dg-error \"multiple inlined namespaces\" \"\" { target *-*-* } 256 }"}]}