{"sha": "6ac0aed81501d236ed456b54a85684ac03dde713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjMGFlZDgxNTAxZDIzNmVkNDU2YjU0YTg1Njg0YWMwM2RkZTcxMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-02-05T01:40:51Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-02-05T01:40:51Z"}, "message": "compiler: correct parse of parenthesized select case\n    \n    We used to mishandle `select { case (<-c): }` and friends.\n    \n    The test case for this is https://golang.org/cl/91657.\n    \n    Fixes golang/go#20923\n    \n    Reviewed-on: https://go-review.googlesource.com/91695\n\nFrom-SVN: r257374", "tree": {"sha": "66c3dca0610f5d50be8c2f5de46c6000fa5fd5a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c3dca0610f5d50be8c2f5de46c6000fa5fd5a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ac0aed81501d236ed456b54a85684ac03dde713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac0aed81501d236ed456b54a85684ac03dde713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac0aed81501d236ed456b54a85684ac03dde713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac0aed81501d236ed456b54a85684ac03dde713/comments", "author": null, "committer": null, "parents": [{"sha": "59597e373547a60ee635083f06ef322f8537f7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59597e373547a60ee635083f06ef322f8537f7c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59597e373547a60ee635083f06ef322f8537f7c0"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "257ca95199eb6cb7d834941e3b1a455c2a6e3fb6", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac0aed81501d236ed456b54a85684ac03dde713/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac0aed81501d236ed456b54a85684ac03dde713/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=6ac0aed81501d236ed456b54a85684ac03dde713", "patch": "@@ -1,4 +1,4 @@\n-9057b8f71e6078f140938fe60be9aaa7d59a3a2b\n+2f7ac42a3f83b78d97912ce1e86296b2af4f52b7\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "86d3510475e089fde5da570bcf5c96a73f71e482", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ac0aed81501d236ed456b54a85684ac03dde713/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ac0aed81501d236ed456b54a85684ac03dde713/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=6ac0aed81501d236ed456b54a85684ac03dde713", "patch": "@@ -5160,7 +5160,18 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n \n   Expression* e;\n   if (saw_comma || !this->peek_token()->is_op(OPERATOR_CHANOP))\n-    e = this->expression(PRECEDENCE_NORMAL, true, true, NULL, NULL);\n+    {\n+      e = this->expression(PRECEDENCE_NORMAL, true, true, NULL, NULL);\n+      if (e->receive_expression() != NULL)\n+\t{\n+\t  *is_send = false;\n+\t  *channel = e->receive_expression()->channel();\n+\t  // This is 'case (<-c):'.  We now expect ':'.  If we see\n+\t  // '<-', then we have case (<-c)<-v:\n+\t  if (!this->peek_token()->is_op(OPERATOR_CHANOP))\n+\t    return true;\n+\t}\n+    }\n   else\n     {\n       // case <-c:\n@@ -5189,14 +5200,17 @@ Parse::send_or_recv_stmt(bool* is_send, Expression** channel, Expression** val,\n \n   if (this->peek_token()->is_op(OPERATOR_EQ))\n     {\n-      if (!this->advance_token()->is_op(OPERATOR_CHANOP))\n+      *is_send = false;\n+      this->advance_token();\n+      Location recvloc = this->location();\n+      Expression* recvexpr = this->expression(PRECEDENCE_NORMAL, false,\n+\t\t\t\t\t      true, NULL, NULL);\n+      if (recvexpr->receive_expression() == NULL)\n \t{\n-\t  go_error_at(this->location(), \"missing %<<-%>\");\n+\t  go_error_at(recvloc, \"missing %<<-%>\");\n \t  return false;\n \t}\n-      *is_send = false;\n-      this->advance_token();\n-      *channel = this->expression(PRECEDENCE_NORMAL, false, true, NULL, NULL);\n+      *channel = recvexpr->receive_expression()->channel();\n       if (saw_comma)\n \t{\n \t  // case v, e = <-c:"}]}