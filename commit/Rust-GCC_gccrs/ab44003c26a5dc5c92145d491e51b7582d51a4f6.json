{"sha": "ab44003c26a5dc5c92145d491e51b7582d51a4f6", "node_id": "C_kwDOANBUbNoAKGFiNDQwMDNjMjZhNWRjNWM5MjE0NWQ0OTFlNTFiNzU4MmQ1MWE0ZjY", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-05-28T13:44:39Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-06-07T11:23:48Z"}, "message": "Fix non-mod-rs files' external module loading paths\n\ngcc/rust/ChangeLog:\n\n\t* Make-lang.in: Add \"rust-dir-owner.o\".\n\t* ast/rust-ast.cc: Include \"rust-dir-owner.h\".\n\t(Module::process_file_path):\n\tHandle non-mod-rs external file modules properly.\n\t* parse/rust-parse-impl.h: Include \"rust-dir-owner.h\".\n\t(Parser::parse_module):\n\tHandle non-mod-rs external file modules properly.\n\t* util/rust-dir-owner.cc: New file.\n\t* util/rust-dir-owner.h: New file.\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/compile/test_mod.rs: Moved to...\n\t* rust/compile/issue-1089/test_mod.rs: ...here.\n\t* rust/compile/mod_missing_middle.rs: Fix paths.\n\t* rust/compile/missing_middle/both_path.rs: Moved to...\n\t* rust/compile/mod_missing_middle/missing_middle/both_path.rs: ...here.\n\t* rust/compile/missing_middle/explicit.not.rs: Moved to...\n\t* rust/compile/mod_missing_middle/missing_middle/explicit.not.rs: ...here.\n\t* rust/compile/missing_middle/other.rs: Moved to...\n\t* rust/compile/mod_missing_middle/missing_middle/explicit.not/other.rs: ...here.\n\t* rust/compile/missing_middle/inner_path.rs: Moved to...\n\t* rust/compile/mod_missing_middle/missing_middle/inner_path.rs: ...here.\n\t* rust/compile/missing_middle/outer_path.rs: Moved to...\n\t* rust/compile/mod_missing_middle/missing_middle/outer_path.rs: ...here.\n\t* rust/compile/missing_middle/sub/mod.rs: Moved to...\n\t* rust/compile/mod_missing_middle/missing_middle/sub/mod.rs: ...here.\n\t* rust/compile/torture/modules/mod.rs: Moved to...\n\t* rust/compile/torture/extern_mod1/modules/mod.rs: ...here.\n\t* rust/execute/torture/modules/mod.rs: Moved to...\n\t* rust/execute/torture/extern_mod4/modules/mod.rs: ...here.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "d164f6915e0aeeed1368beb0bfa3297772af08c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d164f6915e0aeeed1368beb0bfa3297772af08c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab44003c26a5dc5c92145d491e51b7582d51a4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab44003c26a5dc5c92145d491e51b7582d51a4f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab44003c26a5dc5c92145d491e51b7582d51a4f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab44003c26a5dc5c92145d491e51b7582d51a4f6/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b40ba2e03c4ff030adb7ce8ce00e5315c46cb3"}], "stats": {"total": 135, "additions": 123, "deletions": 12}, "files": [{"sha": "8c12b1e2b557b2078155f73f5facae96ba2006f1", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "patch": "@@ -178,6 +178,7 @@ GRS_OBJS = \\\n     rust/rust-builtins.o \\\n     rust/rust-feature.o \\\n     rust/rust-feature-gate.o \\\n+    rust/rust-dir-owner.o \\\n     $(END)\n # removed object files from here\n "}, {"sha": "dd7aaa6730df9c2cf0d61b672dee7ef17439d47b", "filename": "gcc/rust/ast/rust-ast.cc", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Fast%2Frust-ast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Fast%2Frust-ast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.cc?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rust-lex.h\"\n #include \"rust-parse.h\"\n #include \"rust-operators.h\"\n+#include \"rust-dir-owner.h\"\n \n /* Compilation unit used for various AST-related functions that would make\n  * the headers too long if they were defined inline and don't receive any\n@@ -3310,21 +3311,37 @@ Module::process_file_path ()\n \n   // This corresponds to the path of the file 'including' the module. So the\n   // file that contains the 'mod <file>;' directive\n-  std::string including_fname (outer_filename);\n+  std::string including_fpath (outer_filename);\n \n   std::string expected_file_path = module_name + \".rs\";\n   std::string expected_dir_path = \"mod.rs\";\n \n-  auto dir_slash_pos = including_fname.rfind (file_separator);\n+  auto dir_slash_pos = including_fpath.rfind (file_separator);\n   std::string current_directory_name;\n+  std::string including_fname;\n \n-  // If we haven't found a file_separator, then we have to look for files in the\n-  // current directory ('.')\n+  // If we haven't found a file_separator, then we may have to look for files in\n+  // the current directory ('.')\n   if (dir_slash_pos == std::string::npos)\n-    current_directory_name = std::string (\".\") + file_separator;\n+    {\n+      including_fname = std::move (including_fpath);\n+      including_fpath = std::string (\".\") + file_separator + including_fname;\n+      dir_slash_pos = 1;\n+    }\n   else\n-    current_directory_name\n-      = including_fname.substr (0, dir_slash_pos) + file_separator;\n+    {\n+      including_fname = including_fpath.substr (dir_slash_pos + 1);\n+    }\n+\n+  current_directory_name\n+    = including_fpath.substr (0, dir_slash_pos) + file_separator;\n+\n+  auto path_string = filename_from_path_attribute (get_outer_attrs ());\n+\n+  std::string including_subdir;\n+  if (path_string.empty () && module_scope.empty ()\n+      && get_file_subdir (including_fname, including_subdir))\n+    current_directory_name += including_subdir + file_separator;\n \n   // Handle inline module declarations adding path components.\n   for (auto const &name : module_scope)\n@@ -3333,7 +3350,6 @@ Module::process_file_path ()\n       current_directory_name.append (file_separator);\n     }\n \n-  auto path_string = filename_from_path_attribute (get_outer_attrs ());\n   if (!path_string.empty ())\n     {\n       module_file = current_directory_name + path_string;"}, {"sha": "d6b045bd1a3f9d77347d1c7b47306e36a12cbd66", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "patch": "@@ -25,6 +25,7 @@\n #define INCLUDE_ALGORITHM\n #include \"rust-diagnostics.h\"\n #include \"rust-make-unique.h\"\n+#include \"rust-dir-owner.h\"\n \n namespace Rust {\n // Left binding powers of operations.\n@@ -2430,8 +2431,25 @@ Parser<ManagedTokenSource>::parse_module (AST::Visibility vis,\n \t// parse inner attributes\n \tAST::AttrVec inner_attrs = parse_inner_attributes ();\n \n+\tstd::string default_path = name;\n+\n+\tif (inline_module_stack.empty ())\n+\t  {\n+\t    std::string filename = lexer.get_filename ();\n+\t    auto slash_idx = filename.rfind (file_separator);\n+\t    if (slash_idx == std::string::npos)\n+\t      slash_idx = 0;\n+\t    else\n+\t      slash_idx++;\n+\t    filename = filename.substr (slash_idx);\n+\n+\t    std::string subdir;\n+\t    if (get_file_subdir (filename, subdir))\n+\t      default_path = subdir + file_separator + name;\n+\t  }\n+\n \tstd::string module_path_name\n-\t  = extract_module_path (inner_attrs, outer_attrs, name);\n+\t  = extract_module_path (inner_attrs, outer_attrs, default_path);\n \tInlineModuleStackScope scope (*this, std::move (module_path_name));\n \n \t// parse items"}, {"sha": "24bbe7b3a285637e3a3ad3c56c2e1d538a7b40c5", "filename": "gcc/rust/util/rust-dir-owner.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Futil%2Frust-dir-owner.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Futil%2Frust-dir-owner.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-dir-owner.cc?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "patch": "@@ -0,0 +1,42 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// Handles non-mod-rs and mod-rs file differentiation\n+\n+#include \"rust-system.h\"\n+#include \"rust-dir-owner.h\"\n+\n+namespace Rust {\n+\n+// extracts the owned subdirectory name from a file name\n+bool\n+get_file_subdir (const std::string &filename, std::string &subdir)\n+{\n+  // directory owning filenames\n+  if (filename == \"mod.rs\" || filename == \"lib.rs\" || filename == \"main.rs\")\n+    return false;\n+\n+  // files not ending in \".rs\" are directory owners\n+  if (filename.size () < 3 || filename.compare (filename.size () - 3, 3, \".rs\"))\n+    return false;\n+\n+  subdir = filename.substr (0, filename.size () - 3);\n+  return true;\n+}\n+\n+} // namespace Rust"}, {"sha": "0134f54a428aca66d07d69fc019ad0ce47f68b8e", "filename": "gcc/rust/util/rust-dir-owner.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Futil%2Frust-dir-owner.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Frust%2Futil%2Frust-dir-owner.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-dir-owner.h?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "patch": "@@ -0,0 +1,34 @@\n+// Copyright (C) 2023 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// Handles non-mod-rs and mod-rs file differentiation\n+\n+#ifndef RUST_DIR_OWNER\n+#define RUST_DIR_OWNER\n+\n+#include \"rust-system.h\"\n+\n+namespace Rust {\n+\n+// extracts the owned subdirectory name from a file name\n+bool\n+get_file_subdir (const std::string &filename, std::string &subdir);\n+\n+} // namespace Rust\n+\n+#endif // RUST_DIR_OWNER"}, {"sha": "6e9c19b3fa4ad461ff68ec42f0c62679cc92a589", "filename": "gcc/testsuite/rust/compile/issue-1089/test_mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1089%2Ftest_mod.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1089%2Ftest_mod.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1089%2Ftest_mod.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/test_mod.rs"}, {"sha": "0f8371345acc0c557b84a376479da0e1b6ae587b", "filename": "gcc/testsuite/rust/compile/mod_missing_middle.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "patch": "@@ -7,20 +7,20 @@ mod missing_middle {\n     mod explicit;\n }\n \n-#[path = \"missing_middle\"]\n+#[path = \"mod_missing_middle/missing_middle\"]\n mod with_outer_path_attr {\n     #[path = \"outer_path.rs\"]\n     mod inner;\n }\n \n mod with_inner_path_attr {\n-    #![path = \"missing_middle\"]\n+    #![path = \"mod_missing_middle/missing_middle\"]\n \n     #[path = \"inner_path.rs\"]\n     mod inner;\n }\n \n-#[path = \"missing_middle\"]\n+#[path = \"mod_missing_middle/missing_middle\"]\n mod with_both_path_attr {\n     #![path = \"this_is_ignored\"]\n "}, {"sha": "5e5ad15457aa2887c7acda6f80993a55c2b956b7", "filename": "gcc/testsuite/rust/compile/mod_missing_middle/missing_middle/both_path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fboth_path.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fboth_path.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fboth_path.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/missing_middle/both_path.rs"}, {"sha": "e28288b0f995b2691ca3ccf16e5c1a8a530a9510", "filename": "gcc/testsuite/rust/compile/mod_missing_middle/missing_middle/explicit.not.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fexplicit.not.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fexplicit.not.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fexplicit.not.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/missing_middle/explicit.not.rs"}, {"sha": "0c0884ec968ef84c9fbfccb8e4e36be067ee17e7", "filename": "gcc/testsuite/rust/compile/mod_missing_middle/missing_middle/explicit.not/other.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fexplicit.not%2Fother.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fexplicit.not%2Fother.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fexplicit.not%2Fother.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/missing_middle/other.rs"}, {"sha": "daf4e3cc25aef6421227d1a4d7d64c00bc03ba85", "filename": "gcc/testsuite/rust/compile/mod_missing_middle/missing_middle/inner_path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Finner_path.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Finner_path.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Finner_path.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/missing_middle/inner_path.rs"}, {"sha": "fbe5074191bd59bfbbc7ceba4c564620f6d4d9aa", "filename": "gcc/testsuite/rust/compile/mod_missing_middle/missing_middle/outer_path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fouter_path.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fouter_path.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fouter_path.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/missing_middle/outer_path.rs"}, {"sha": "f099d61e04a29f4a6752a5d1fe2f1aaa3b7d36ac", "filename": "gcc/testsuite/rust/compile/mod_missing_middle/missing_middle/sub/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fsub%2Fmod.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fsub%2Fmod.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmod_missing_middle%2Fmissing_middle%2Fsub%2Fmod.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/missing_middle/sub/mod.rs"}, {"sha": "3d65176b6c3870ac4093c1145c86e4ca97ac070f", "filename": "gcc/testsuite/rust/compile/torture/extern_mod1/modules/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod1%2Fmodules%2Fmod.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod1%2Fmodules%2Fmod.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fextern_mod1%2Fmodules%2Fmod.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/compile/torture/modules/mod.rs"}, {"sha": "9020aaf4bb8dfd2705fe59578a1664e6dacce93b", "filename": "gcc/testsuite/rust/execute/torture/extern_mod4/modules/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fextern_mod4%2Fmodules%2Fmod.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab44003c26a5dc5c92145d491e51b7582d51a4f6/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fextern_mod4%2Fmodules%2Fmod.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fextern_mod4%2Fmodules%2Fmod.rs?ref=ab44003c26a5dc5c92145d491e51b7582d51a4f6", "previous_filename": "gcc/testsuite/rust/execute/torture/modules/mod.rs"}]}