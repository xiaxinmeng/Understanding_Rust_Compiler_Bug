{"sha": "7d8f4ff955130fe12853c14f6909c8c9868d2144", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4ZjRmZjk1NTEzMGZlMTI4NTNjMTRmNjkwOWM4Yzk4NjhkMjE0NA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-06-17T19:11:56Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-06-17T19:11:56Z"}, "message": "2003-06-17  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetSocketAddress.java\n\t(InetSocketAddress): Use wildcard address if addr is null.\n\t(InetSocketAddress): Dont duplicate implementation.\n\t(InetSocketAddress): Throw exception when hostname is null.\n\t* java/net/Socket.java:\n\tReworked imports.\n\t(Socket): Throw exception when raddr is null, handle case when laddr\n\tis null.\n\nFrom-SVN: r68106", "tree": {"sha": "53d149bf6edc47478ce21e8fc9959d026a950946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53d149bf6edc47478ce21e8fc9959d026a950946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8f4ff955130fe12853c14f6909c8c9868d2144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8f4ff955130fe12853c14f6909c8c9868d2144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8f4ff955130fe12853c14f6909c8c9868d2144", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8f4ff955130fe12853c14f6909c8c9868d2144/comments", "author": null, "committer": null, "parents": [{"sha": "6f3aed57fb4258b97b6c068bd7aef10f45f272d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f3aed57fb4258b97b6c068bd7aef10f45f272d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f3aed57fb4258b97b6c068bd7aef10f45f272d5"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "4f06213570135324ed18e08866e413ed0f3385ce", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8f4ff955130fe12853c14f6909c8c9868d2144/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8f4ff955130fe12853c14f6909c8c9868d2144/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7d8f4ff955130fe12853c14f6909c8c9868d2144", "patch": "@@ -1,3 +1,14 @@\n+2003-06-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetSocketAddress.java\n+\t(InetSocketAddress): Use wildcard address if addr is null.\n+\t(InetSocketAddress): Dont duplicate implementation.\n+\t(InetSocketAddress): Throw exception when hostname is null.\n+\t* java/net/Socket.java:\n+\tReworked imports.\n+\t(Socket): Throw exception when raddr is null, handle case when laddr\n+\tis null.\n+\n 2003-06-17  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/DirectByteBufferImpl.java"}, {"sha": "c720fbcfe61875b943d51a6122add1cb15157e83", "filename": "libjava/java/net/InetSocketAddress.java", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8f4ff955130fe12853c14f6909c8c9868d2144/libjava%2Fjava%2Fnet%2FInetSocketAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8f4ff955130fe12853c14f6909c8c9868d2144/libjava%2Fjava%2Fnet%2FInetSocketAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetSocketAddress.java?ref=7d8f4ff955130fe12853c14f6909c8c9868d2144", "patch": "@@ -69,6 +69,9 @@ public InetSocketAddress(InetAddress addr, int port)\n   {\n     if (port < 0 || port > 65535)\n       throw new IllegalArgumentException();\n+\n+    if (addr == null)\n+      addr = InetAddress.ANY_IF;\n   \n     this.addr = addr;\n     this.port = port;\n@@ -85,25 +88,9 @@ public InetSocketAddress(InetAddress addr, int port)\n   public InetSocketAddress(int port)\n     throws IllegalArgumentException\n   {\n-    if (port < 0 || port > 65535)\n-      throw new IllegalArgumentException();\n-\n-    this.port = port;\n-    \n-    try\n-      {\n-\tbyte[] any = { 0, 0, 0, 0 };\n-\tthis.addr = InetAddress.getByAddress (any);\n-\tthis.hostname = \"0.0.0.0\";\n-      }\n-    catch (UnknownHostException e)\n-      {\n-        this.addr = null;\n-\tthis.hostname = \"\";\n-      }\n+    this ((InetAddress) null, port);\n   }\n \n-\n   /**\n    * Constructs an InetSocketAddress instance.\n    *\n@@ -115,7 +102,8 @@ public InetSocketAddress(int port)\n   public InetSocketAddress(String hostname, int port)\n     throws IllegalArgumentException\n   {\n-    if (port < 0 || port > 65535)\n+    if (port < 0 || port > 65535\n+\t|| hostname == null)\n       throw new IllegalArgumentException();\n \n     this.port = port;"}, {"sha": "38b31ec8cc8948dcd6e596d37fe177f0f2a073c4", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8f4ff955130fe12853c14f6909c8c9868d2144/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8f4ff955130fe12853c14f6909c8c9868d2144/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=7d8f4ff955130fe12853c14f6909c8c9868d2144", "patch": "@@ -37,7 +37,9 @@\n \n package java.net;\n \n-import java.io.*;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n import java.nio.channels.SocketChannel;\n import java.nio.channels.IllegalBlockingModeException;\n \n@@ -87,8 +89,6 @@\n \n   private boolean closed = false;\n \n-  // Constructors\n-\n   /**\n    * Initializes a new instance of <code>Socket</code> object without \n    * connecting to a remote host.  This useful for subclasses of socket that \n@@ -282,15 +282,22 @@ private Socket(InetAddress raddr, int rport, InetAddress laddr, int lport,\n   {\n     this();\n \n+    if (raddr == null)\n+      throw new NullPointerException ();\n+    \n     if (impl == null)\n       throw new IOException(\"Cannot initialize Socket implementation\");\n \n     SecurityManager sm = System.getSecurityManager();\n     if (sm != null)\n       sm.checkConnect(raddr.getHostName(), rport);\n \n-    // bind/connect socket\n-    bind (new InetSocketAddress (laddr, lport));\n+    // bind socket\n+    SocketAddress bindaddr =\n+      laddr == null ? null : new InetSocketAddress (laddr, lport);\n+    bind (bindaddr);\n+    \n+    // connect socket\n     connect (new InetSocketAddress (raddr, rport));\n \n     // FIXME: JCL p. 1586 says if localPort is unspecified, bind to any port,"}]}