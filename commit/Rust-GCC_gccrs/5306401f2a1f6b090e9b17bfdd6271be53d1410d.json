{"sha": "5306401f2a1f6b090e9b17bfdd6271be53d1410d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMwNjQwMWYyYTFmNmIwOTBlOWIxN2JmZGQ2MjcxYmU1M2QxNDEwZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-02-07T17:20:26Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-02-07T17:20:26Z"}, "message": "lra-constraints.c (process_alt_operands): Fix recently added comment.\n\n2013-02-07  Vladimir Makarov  <vmakarov@redhat.com>\n\n\t* lra-constraints.c (process_alt_operands): Fix recently added\n\tcomment.\n\nFrom-SVN: r195857", "tree": {"sha": "52e3fc5d2911f4829d595b205c8d47dd7f49a824", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52e3fc5d2911f4829d595b205c8d47dd7f49a824"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5306401f2a1f6b090e9b17bfdd6271be53d1410d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5306401f2a1f6b090e9b17bfdd6271be53d1410d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5306401f2a1f6b090e9b17bfdd6271be53d1410d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5306401f2a1f6b090e9b17bfdd6271be53d1410d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "027ece11c1e1e4ea23a92b49699934a192d155cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/027ece11c1e1e4ea23a92b49699934a192d155cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/027ece11c1e1e4ea23a92b49699934a192d155cc"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "ac9081217fc7ea834dbeefe9d63c93de7a4c3630", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5306401f2a1f6b090e9b17bfdd6271be53d1410d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5306401f2a1f6b090e9b17bfdd6271be53d1410d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5306401f2a1f6b090e9b17bfdd6271be53d1410d", "patch": "@@ -1,3 +1,8 @@\n+2013-02-07  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* lra-constraints.c (process_alt_operands): Fix recently added\n+\tcomment.\n+\n 2013-02-07  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/56225"}, {"sha": "af68c3aee4c35180b3df67c65b655db33fa02d95", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5306401f2a1f6b090e9b17bfdd6271be53d1410d/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5306401f2a1f6b090e9b17bfdd6271be53d1410d/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=5306401f2a1f6b090e9b17bfdd6271be53d1410d", "patch": "@@ -1896,10 +1896,10 @@ process_alt_operands (int only_alternative)\n \t\t\t\t\t     mode, hard_regno[nop])\n \t\t\t: in_class_p (op, this_alternative, NULL))))\n \t\t{\n-\t\t  /* Strict_low_part requires reload the register not\n-\t\t     the sub-register.  In this case we should check\n-\t\t     that a final reload hard reg can hold the\n-\t\t     value.  */\n+\t\t  /* Strict_low_part requires to reload the register\n+\t\t     not the sub-register.  In this case we should\n+\t\t     check that a final reload hard reg can hold the\n+\t\t     value mode.  */\n \t\t  if (curr_static_id->operand[nop].strict_low\n \t\t      && REG_P (op)\n \t\t      && hard_regno[nop] < 0"}]}