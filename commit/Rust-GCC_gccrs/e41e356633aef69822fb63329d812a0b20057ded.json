{"sha": "e41e356633aef69822fb63329d812a0b20057ded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQxZTM1NjYzM2FlZjY5ODIyZmI2MzMyOWQ4MTJhMGIyMDA1N2RlZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-08T17:37:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-08T20:42:59Z"}, "message": "libstdc++: Regenerate configure script\n\nThis seems to be a missing piece of r11-6492.\n\nlibstdc++-v3/ChangeLog:\n\n\t* configure: Regenerate.", "tree": {"sha": "16547213dd39db11e24e9d81007273cbfc029b9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16547213dd39db11e24e9d81007273cbfc029b9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e41e356633aef69822fb63329d812a0b20057ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41e356633aef69822fb63329d812a0b20057ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41e356633aef69822fb63329d812a0b20057ded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41e356633aef69822fb63329d812a0b20057ded/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "014b6dbcaa80fc46c792c270244e7eeef7dce75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014b6dbcaa80fc46c792c270244e7eeef7dce75f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/014b6dbcaa80fc46c792c270244e7eeef7dce75f"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "13f2e697ed2833feb1a71851ddb5ac42c80305e3", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e41e356633aef69822fb63329d812a0b20057ded/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e41e356633aef69822fb63329d812a0b20057ded/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e41e356633aef69822fb63329d812a0b20057ded", "patch": "@@ -12130,7 +12130,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12143 \"configure\"\n+#line 12133 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12236,7 +12236,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12249 \"configure\"\n+#line 12239 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14981,16 +14981,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -15112,7 +15102,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n # project, but have not yet been accepted: they are GCC-local changes\n # for the time being.  (See\n # https://lists.gnu.org/archive/html/libtool-patches/2018-05/msg00000.html)\n-linux* | k*bsd*-gnu | kopensolaris*-gnu | uclinuxfdpiceabi)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu* | uclinuxfdpiceabi)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -15928,7 +15918,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15941 \"configure\"\n+#line 15921 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15963,7 +15953,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15976 \"configure\"\n+#line 15956 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15998,7 +15988,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16011 \"configure\"\n+#line 15991 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -16034,7 +16024,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16047 \"configure\"\n+#line 16027 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -16187,7 +16177,7 @@ $as_echo \"mutex\" >&6; }\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16200 \"configure\"\n+#line 16180 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -16229,7 +16219,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16242 \"configure\"\n+#line 16222 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -16263,7 +16253,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16276 \"configure\"\n+#line 16256 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };"}]}