{"sha": "df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY5NTcyNzI2YmRmMGIyZGFjMzNmNmZiZTQyNDhiYzBmNGQ2MDYyZA==", "commit": {"author": {"name": "Nicolas Roche", "email": "roche@adacore.com", "date": "2005-06-16T08:40:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:40:05Z"}, "message": "g-diopit.adb (Wildcard_Iterator): Return directly if Path is equal to \"\"\n\n2005-06-14  Nicolas Roche  <roche@adacore.com>\n\n\t* g-diopit.adb (Wildcard_Iterator): Return directly if Path is equal\n\tto \"\"\n\t(Next_Level): Fix minor bug in handling of ../dir case\n\t(Read): Add dir separator to Directory name so that \"\" is understood as\n\t \"/\"\n\nFrom-SVN: r101040", "tree": {"sha": "096832949eb15d57ecc08afbc3c9bcb235fb8112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/096832949eb15d57ecc08afbc3c9bcb235fb8112"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d/comments", "author": {"login": "Nikokrock", "id": 7796165, "node_id": "MDQ6VXNlcjc3OTYxNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/7796165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikokrock", "html_url": "https://github.com/Nikokrock", "followers_url": "https://api.github.com/users/Nikokrock/followers", "following_url": "https://api.github.com/users/Nikokrock/following{/other_user}", "gists_url": "https://api.github.com/users/Nikokrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikokrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikokrock/subscriptions", "organizations_url": "https://api.github.com/users/Nikokrock/orgs", "repos_url": "https://api.github.com/users/Nikokrock/repos", "events_url": "https://api.github.com/users/Nikokrock/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikokrock/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee936a698282bd39cd2fc1cb961a1a2d7f24de13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee936a698282bd39cd2fc1cb961a1a2d7f24de13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee936a698282bd39cd2fc1cb961a1a2d7f24de13"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "8fa2e4b4a6fa71d81982229fc48dc7943e60f7bf", "filename": "gcc/ada/g-diopit.adb", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d/gcc%2Fada%2Fg-diopit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9572726bdf0b2dac33f6fbe4248bc0f4d6062d/gcc%2Fada%2Fg-diopit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-diopit.adb?ref=df9572726bdf0b2dac33f6fbe4248bc0f4d6062d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2001-2003 Ada Core Technologies, Inc.            --\n+--                  Copyright (C) 2001-2005 Adacore, Inc.                   --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,8 +91,9 @@ package body GNAT.Directory_Operations.Iteration is\n \n             declare\n                Dir_Entry : constant String := Buffer (1 .. Last);\n-               Pathname  : constant String\n-                 := Make_Pathname (Directory, Dir_Entry);\n+               Pathname  : constant String :=\n+                             Make_Pathname (Directory, Dir_Entry);\n+\n             begin\n                if Regexp.Match (Dir_Entry, File_Regexp) then\n                   Quit  := False;\n@@ -203,7 +204,7 @@ package body GNAT.Directory_Operations.Iteration is\n                --  We have \"../dir\"\n \n                Read (Current_Path & \"..\",\n-                     SP (SP'First + 4 .. DS - 1),\n+                     SP (SP'First + 3 .. DS - 1),\n                      SP (DS .. SP'Last));\n             end if;\n \n@@ -308,7 +309,7 @@ package body GNAT.Directory_Operations.Iteration is\n       ----------\n \n       Quit : Boolean := False;\n-      --  Global state to be able to exit all recursive calls.\n+      --  Global state to be able to exit all recursive calls\n \n       procedure Read\n         (Directory      : String;\n@@ -322,8 +323,8 @@ package body GNAT.Directory_Operations.Iteration is\n          Last   : Natural;\n \n       begin\n-         if OS_Lib.Is_Directory (Directory) then\n-            Open (Dir, Directory);\n+         if OS_Lib.Is_Directory (Directory & Dir_Separator) then\n+            Open (Dir, Directory & Dir_Separator);\n \n             Dir_Iterator : loop\n                Read (Dir, Buffer, Last);\n@@ -343,7 +344,6 @@ package body GNAT.Directory_Operations.Iteration is\n                      (Dir_Entry = \"..\" and then File_Pattern /= \"..\"))\n                   then\n                      if Regexp.Match (Dir_Entry, File_Regexp) then\n-\n                         if Suffix_Pattern = \"\" then\n \n                            --  No more matching needed, call user's callback\n@@ -352,15 +352,12 @@ package body GNAT.Directory_Operations.Iteration is\n \n                            begin\n                               Action (Pathname, Index, Quit);\n-\n                            exception\n                               when others =>\n                                  Close (Dir);\n                                  raise;\n                            end;\n \n-                           exit Dir_Iterator when Quit;\n-\n                         else\n                            --  Down one level\n \n@@ -372,15 +369,21 @@ package body GNAT.Directory_Operations.Iteration is\n                   end if;\n                end;\n \n-               exit Dir_Iterator when Quit;\n+               --  Exit if Quit set by call to Action, either at this level\n+               --  or at at some lower recursive call to Next_Level.\n \n+               exit Dir_Iterator when Quit;\n             end loop Dir_Iterator;\n \n             Close (Dir);\n          end if;\n       end Read;\n \n    begin\n+      if Path = \"\" then\n+         return;\n+      end if;\n+\n       Next_Level (\"\", Path);\n    end Wildcard_Iterator;\n "}]}