{"sha": "6a66f28ed5619a2ecacdede659833cc71c9dba11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE2NmYyOGVkNTYxOWEyZWNhY2RlZGU2NTk4MzNjYzcxYzlkYmExMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-03-04T12:36:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-03-04T12:36:56Z"}, "message": "re PR tree-optimization/39358 (Wrong aliasing warning with lists)\n\n2009-03-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/39358\n\t* tree-ssa-structalias.c (do_sd_constraint): Fix check for\n\tescaped_id and callused_id.\n\t(solve_graph): Likewise.\n\n\t* g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C: New testcase.\n\t* g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C: Likewise.\n\nFrom-SVN: r144602", "tree": {"sha": "92c85ca3e2336e61a8a95e170ee3d512f57cdf2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92c85ca3e2336e61a8a95e170ee3d512f57cdf2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a66f28ed5619a2ecacdede659833cc71c9dba11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a66f28ed5619a2ecacdede659833cc71c9dba11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a66f28ed5619a2ecacdede659833cc71c9dba11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a66f28ed5619a2ecacdede659833cc71c9dba11/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0de290730e2c795d31f0c17d9ceede31d6b6161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0de290730e2c795d31f0c17d9ceede31d6b6161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0de290730e2c795d31f0c17d9ceede31d6b6161"}], "stats": {"total": 82, "additions": 75, "deletions": 7}, "files": [{"sha": "b75d2ddb3fac7deef9811df3e5db4f7696122756", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a66f28ed5619a2ecacdede659833cc71c9dba11", "patch": "@@ -1,3 +1,10 @@\n+2009-03-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39358\n+\t* tree-ssa-structalias.c (do_sd_constraint): Fix check for\n+\tescaped_id and callused_id.\n+\t(solve_graph): Likewise.\n+\n 2009-03-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39339"}, {"sha": "508b7e3d9a28d8bfd4e7cdf80bd7399a1a08e533", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a66f28ed5619a2ecacdede659833cc71c9dba11", "patch": "@@ -1,3 +1,9 @@\n+2009-03-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/39358\n+\t* g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C: New testcase.\n+\t* g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C: Likewise.\n+\n 2009-03-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39339"}, {"sha": "29414e00e366e244593b509b686c39a0fc20f891", "filename": "gcc/testsuite/g++.dg/warn/Wstrict-aliasing-bogus-escape-2.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-bogus-escape-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-bogus-escape-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-bogus-escape-2.C?ref=6a66f28ed5619a2ecacdede659833cc71c9dba11", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wstrict-aliasing\" } */\n+\n+#include<list>\n+\n+struct A\n+{\n+  virtual ~A();\n+};\n+\n+A* foo();\n+\n+void bar(std::list<int> x)\n+{\n+  std::list<int> y = x;\n+  if (*y.rbegin())\n+    delete foo();\n+}\n+"}, {"sha": "de6b2c477352a7811110abf933888df4a0c7a976", "filename": "gcc/testsuite/g++.dg/warn/Wstrict-aliasing-bogus-escape-3.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-bogus-escape-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-bogus-escape-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-bogus-escape-3.C?ref=6a66f28ed5619a2ecacdede659833cc71c9dba11", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wstrict-aliasing\" } */\n+\n+struct Node_base {};\n+\n+struct Node : Node_base\n+{\n+  int data;\n+};\n+\n+struct List\n+{\n+  Node_base node, *prev;\n+\n+  List() : prev(&node) { xyz(); }\n+\n+  void xyz();\n+\n+  int back() { return static_cast<Node*>(prev)->data; }\n+};\n+\n+struct A\n+{\n+  virtual ~A();\n+};\n+\n+A* foo();\n+\n+void bar()\n+{\n+  List y;\n+  if (y.back())\n+    delete foo();\n+}\n+"}, {"sha": "732bc6f7938692f928d8e6146614b7dd604b972b", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a66f28ed5619a2ecacdede659833cc71c9dba11/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=6a66f28ed5619a2ecacdede659833cc71c9dba11", "patch": "@@ -1524,8 +1524,8 @@ do_sd_constraint (constraint_graph_t graph, constraint_t c,\n      of a variable can also reach all other fields of the variable\n      we simply have to expand the solution to contain all sub-fields\n      if one sub-field is contained.  */\n-  if (c->rhs.var == escaped_id\n-      || c->rhs.var == callused_id)\n+  if (c->rhs.var == find (escaped_id)\n+      || c->rhs.var == find (callused_id))\n     {\n       bitmap vars = NULL;\n       /* In a first pass record all variables we need to add all\n@@ -1594,9 +1594,10 @@ do_sd_constraint (constraint_graph_t graph, constraint_t c,\n \t  /* Merging the solution from ESCAPED needlessly increases\n \t     the set.  Use ESCAPED as representative instead.\n \t     Same for CALLUSED.  */\n-\t  else if (get_varinfo (t)->id == escaped_id\n-\t\t   || get_varinfo (t)->id == callused_id)\n-\t    flag |= bitmap_set_bit (sol, get_varinfo (t)->id);\n+\t  else if (get_varinfo (t)->id == find (escaped_id))\n+\t    flag |= bitmap_set_bit (sol, escaped_id);\n+\t  else if (get_varinfo (t)->id == find (callused_id))\n+\t    flag |= bitmap_set_bit (sol, callused_id);\n \t  else if (add_graph_edge (graph, lhs, t))\n \t    flag |= bitmap_ior_into (sol, get_varinfo (t)->solution);\n \t}\n@@ -2516,8 +2517,8 @@ solve_graph (constraint_graph_t graph)\n \n \t      if (!solution_empty\n \t\t  /* Do not propagate the ESCAPED/CALLUSED solutions.  */\n-\t\t  && i != escaped_id\n-\t\t  && i != callused_id)\n+\t\t  && i != find (escaped_id)\n+\t\t  && i != find (callused_id))\n \t\t{\n \t\t  bitmap_iterator bi;\n "}]}