{"sha": "f7abdf36e580423f00d974704f5e8ae5e34ded32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhYmRmMzZlNTgwNDIzZjAwZDk3NDcwNGY1ZThhZTVlMzRkZWQzMg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2016-11-30T17:35:40Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2016-11-30T17:35:40Z"}, "message": "re PR tree-optimization/77856 (wrong code at -O2 on x86_64-linux-gnu in 32-bit mode)\n\n2016-11-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR tree-optimization/77856\n\t* lra-constraints.c (inherit_in_ebb): Check original regno for\n\tinvalid invariant regs too.  Set only clobbered hard regs for the\n\tinvalid invariant regs.\n\n2016-11-30  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR tree-optimization/77856\n\t* gcc.target/i386.c (pr77856.c): New.\n\nFrom-SVN: r243038", "tree": {"sha": "f80d2afbb2f124af6664421a6fc4f97b0bf8b676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80d2afbb2f124af6664421a6fc4f97b0bf8b676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7abdf36e580423f00d974704f5e8ae5e34ded32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7abdf36e580423f00d974704f5e8ae5e34ded32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7abdf36e580423f00d974704f5e8ae5e34ded32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7abdf36e580423f00d974704f5e8ae5e34ded32/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de683d58cfb792650c2549bf1522f45b03397bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de683d58cfb792650c2549bf1522f45b03397bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de683d58cfb792650c2549bf1522f45b03397bd7"}], "stats": {"total": 109, "additions": 105, "deletions": 4}, "files": [{"sha": "6abb47ff0a7c2b694fea5d7d2dda0a8550966e1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7abdf36e580423f00d974704f5e8ae5e34ded32", "patch": "@@ -1,3 +1,10 @@\n+2016-11-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR tree-optimization/77856\n+\t* lra-constraints.c (inherit_in_ebb): Check original regno for\n+\tinvalid invariant regs too.  Set only clobbered hard regs for the\n+\tinvalid invariant regs.\n+\n 2016-11-30  Pitchumani Sivanupandi  <pitchumani.sivanupandi@microchip.com>\n \n \tCommit files forgotten in r242966."}, {"sha": "260591acb06bbc4d567d59d02743bc90daf13645", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=f7abdf36e580423f00d974704f5e8ae5e34ded32", "patch": "@@ -5888,7 +5888,9 @@ inherit_in_ebb (rtx_insn *head, rtx_insn *tail)\n \t       && dst_regno >= lra_constraint_new_regno_start\n \t       && invariant_p (SET_SRC (curr_set))\n \t       && (cl = lra_get_allocno_class (dst_regno)) != NO_REGS\n-\t       && ! bitmap_bit_p (&invalid_invariant_regs, dst_regno))\n+\t       && ! bitmap_bit_p (&invalid_invariant_regs, dst_regno)\n+\t       && ! bitmap_bit_p (&invalid_invariant_regs,\n+\t\t\t\t  ORIGINAL_REGNO(regno_reg_rtx[dst_regno])))\n \t{\n \t  /* 'reload_pseudo <- invariant'.  */\n \t  if (ira_class_hard_regs_num[cl] <= max_small_class_regs_num)\n@@ -6159,16 +6161,20 @@ inherit_in_ebb (rtx_insn *head, rtx_insn *tail)\n \t  curr_id = lra_get_insn_recog_data (curr_insn);\n \t  for (reg = curr_id->regs; reg != NULL; reg = reg->next)\n \t    if (reg->type != OP_IN)\n-\t      bitmap_set_bit (&invalid_invariant_regs, reg->regno);\n+\t      {\n+\t\tbitmap_set_bit (&invalid_invariant_regs, reg->regno);\n+\t\tbitmap_set_bit (&invalid_invariant_regs,\n+\t\t\t\tORIGINAL_REGNO (regno_reg_rtx[reg->regno]));\n+\t      }\n \t  curr_static_id = curr_id->insn_static_data;\n \t  for (reg = curr_static_id->hard_regs; reg != NULL; reg = reg->next)\n \t    if (reg->type != OP_IN)\n \t      bitmap_set_bit (&invalid_invariant_regs, reg->regno);\n \t  if (curr_id->arg_hard_regs != NULL)\n \t    for (i = 0; (regno = curr_id->arg_hard_regs[i]) >= 0; i++)\n+\t      if (regno >= FIRST_PSEUDO_REGISTER)\n \t\tbitmap_set_bit (&invalid_invariant_regs,\n-\t\t\t\tregno >= FIRST_PSEUDO_REGISTER\n-\t\t\t\t? regno : regno - FIRST_PSEUDO_REGISTER);\n+\t\t\t\tregno - FIRST_PSEUDO_REGISTER);\n \t}\n       /* We reached the start of the current basic block.  */\n       if (prev_insn == NULL_RTX || prev_insn == PREV_INSN (head)"}, {"sha": "fe0edd71f66c33148d5f9afc56e1ebe59872b822", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f7abdf36e580423f00d974704f5e8ae5e34ded32", "patch": "@@ -1,3 +1,8 @@\n+2016-11-30  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR tree-optimization/77856\n+\t* gcc.target/i386.c (pr77856.c): New.\n+\n 2016-11-30  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/debug/dwarf2/ptrdmem-1.C: Don't XFAIL scan-assembler-not on AIX."}, {"sha": "81556bef7cf687da4a2d5181ffcd6146bc6edc38", "filename": "gcc/testsuite/gcc.target/i386/pr77856.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77856.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7abdf36e580423f00d974704f5e8ae5e34ded32/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77856.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77856.c?ref=f7abdf36e580423f00d974704f5e8ae5e34ded32", "patch": "@@ -0,0 +1,83 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+unsigned a, e;\n+\n+struct S0\n+{\n+  int f1;\n+  int f8;\n+} c = {4, 6};\n+\n+int b, f, g, h, i, j, l, p;\n+short d, o = -7;\n+char k, n = 5;\n+\n+unsigned fn1 (int p1, int p2)\n+{\n+  return p2 >= 2 || p1 >> p2 ? p1 : p1 << p2;\n+}\n+\n+static short fn2 (struct S0 p1)\n+{\n+  int *q = 0;\n+  int r = 7;\n+  if (!a)\n+    {\n+      c.f1 = 1;\n+      for (; c.f1; c.f1--)\n+\tif (fn1 (10 != 0, p1.f8))\n+\t  {\n+\t    short s = 9 << ~o % (d ^ n);\n+\t    int t = s >> h % ~d;\n+\t    p = r;\n+\t    r = s | p * (d && 9) | t;\n+\t    int u = i & c.f1;\n+\t    unsigned v = ~(~(u & h) | (~(8 >> c.f1) & i));\n+\t    int w = v;\n+\t    if (u < 9)\n+\t      w = c.f1;\n+\t    if (i > h && u)\n+\t      {\n+\t\t__builtin_printf (\"%d\\n\", c.f1);\n+\t\tcontinue;\n+\t      }\n+\t    c.f1 = w;\n+\t    if (!p)\n+\t      continue;\n+\t    return 0;\n+\t  }\n+      for (;;)\n+\t*q = 0;\n+    }\n+  return 0;\n+}\n+\n+static void fn3 ()\n+{\n+  fn2 (c);\n+  l = c.f1 < b;\n+  if (l)\n+    {\n+    L1:\n+      e = l | j / e % ~f;\n+      j = f - 4 % k < c.f1 / e / b - j - 1;\n+      if (l)\n+\t{\n+\t  __builtin_printf (\"%d\\n\", b);\n+\t  goto L1;\n+\t}\n+      int m[245];\n+      g = m[2];\n+    }\n+}\n+\n+int main ()\n+{\n+  fn3 ();\n+  if (c.f1 != 1)\n+    abort ();\n+  return 0;\n+}"}]}