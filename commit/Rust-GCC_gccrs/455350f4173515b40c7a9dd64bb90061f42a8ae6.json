{"sha": "455350f4173515b40c7a9dd64bb90061f42a8ae6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU1MzUwZjQxNzM1MTViNDBjN2E5ZGQ2NGJiOTAwNjFmNDJhOGFlNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-08T21:42:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-08T21:42:08Z"}, "message": "(aux_truncdfsf2): New pattern.\n\n(movsf): Use it instead of invalid SUBREG and truncdfsf2.\n\nFrom-SVN: r9902", "tree": {"sha": "4929f30be78d9efa1bb81168e420d9e0cbed6186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4929f30be78d9efa1bb81168e420d9e0cbed6186"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/455350f4173515b40c7a9dd64bb90061f42a8ae6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455350f4173515b40c7a9dd64bb90061f42a8ae6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/455350f4173515b40c7a9dd64bb90061f42a8ae6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/455350f4173515b40c7a9dd64bb90061f42a8ae6/comments", "author": null, "committer": null, "parents": [{"sha": "27f3162f4b0629f93767ef05fc826409254cd400", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f3162f4b0629f93767ef05fc826409254cd400", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f3162f4b0629f93767ef05fc826409254cd400"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "da113eda76ab39c316014c536477d40b958a3e06", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/455350f4173515b40c7a9dd64bb90061f42a8ae6/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/455350f4173515b40c7a9dd64bb90061f42a8ae6/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=455350f4173515b40c7a9dd64bb90061f42a8ae6", "patch": "@@ -2712,6 +2712,13 @@\n   \"frsp %0,%1\"\n   [(set_attr \"type\" \"fp\")])\n \n+(define_insn \"aux_truncdfsf2\"\n+  [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n+\t(unspec:SF [(match_operand:SF 1 \"gpc_reg_operand\" \"f\")] 0))]\n+  \"! TARGET_POWERPC && TARGET_HARD_FLOAT\"\n+  \"frsp %0,%1\"\n+  [(set_attr \"type\" \"fp\")])\n+\n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"gpc_reg_operand\" \"f\")))]\n@@ -4082,11 +4089,12 @@\n \t  /* If operands[1] is a register, it may have double-precision data\n \t     in it, so truncate it to single precision.  We need not do\n \t     this for POWERPC.  */\n-\t  if (! TARGET_POWERPC && GET_CODE (operands[1]) == REG)\n+\t  if (! TARGET_POWERPC && TARGET_HARD_FLOAT\n+\t      && GET_CODE (operands[1]) == REG)\n \t    {\n-\t      rtx newreg = reload_in_progress ? operands[1] : gen_reg_rtx (SFmode);\n-\t      emit_insn (gen_truncdfsf2 (newreg,\n-\t\t\t\t\t gen_rtx (SUBREG, DFmode, operands[1], 0)));\n+\t      rtx newreg\n+\t\t= reload_in_progress ? operands[1] : gen_reg_rtx (SFmode);\n+\t      emit_insn (gen_aux_truncdfsf2 (newreg, operands[1]));\n \t      operands[1] = newreg;\n \t    }\n "}]}