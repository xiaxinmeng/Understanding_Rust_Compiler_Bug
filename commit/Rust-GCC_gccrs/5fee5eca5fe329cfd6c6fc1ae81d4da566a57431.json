{"sha": "5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlZTVlY2E1ZmUzMjljZmQ2YzZmYzFhZTgxZDRkYTU2NmE1NzQzMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-06-27T15:26:38Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-06-27T15:26:38Z"}, "message": "Kill IDENTIFIER_TEMPLATE.\n\n\t* cp-tree.h (lang_identifier): Remove class_template_info field.\n\t(IDENTIFIER_TEMPLATE): Delete.\n\t* name-lookup.c (constructor_name_full): Subsume into ...\n\t(constructor_name): ... here.  Don't check IDENTIFIER_TEMPLATE.\n\t(constructor_name_p): Likewise.\n\t* mangle.c (write_source_name): Likewise.\n\t* ptree.c (cxx_print_identifier): Likewise.\n\nFrom-SVN: r249693", "tree": {"sha": "baf9396850db799ebf00b38cd49bf52b38e7b9ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baf9396850db799ebf00b38cd49bf52b38e7b9ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e708b94bb76dd6c3d0085bdbe5e4f70d2af11117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e708b94bb76dd6c3d0085bdbe5e4f70d2af11117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e708b94bb76dd6c3d0085bdbe5e4f70d2af11117"}], "stats": {"total": 48, "additions": 15, "deletions": 33}, "files": [{"sha": "0a911515b8fe4d2713a419a19931c05478a8158c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "patch": "@@ -1,3 +1,14 @@\n+2017-06-27  Nathan Sidwell  <nathan@acm.org>\n+\n+\tKill IDENTIFIER_TEMPLATE.\n+\t* cp-tree.h (lang_identifier): Remove class_template_info field.\n+\t(IDENTIFIER_TEMPLATE): Delete.\n+\t* name-lookup.c (constructor_name_full): Subsume into ...\n+\t(constructor_name): ... here.  Don't check IDENTIFIER_TEMPLATE.\n+\t(constructor_name_p): Likewise.\n+\t* mangle.c (write_source_name): Likewise.\n+\t* ptree.c (cxx_print_identifier): Likewise.\n+\n 2017-06-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR bootstrap/81216"}, {"sha": "1c7a08d2b83b5b7551bec006284b863e57b7c608", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "patch": "@@ -527,7 +527,6 @@ extern GTY(()) tree cp_global_trees[CPTI_MAX];\n struct GTY(()) lang_identifier {\n   struct c_common_identifier c_common;\n   cxx_binding *bindings;\n-  tree class_template_info;\n   tree label_value;\n };\n \n@@ -954,9 +953,6 @@ enum GTY(()) abstract_class_use {\n \n /* Macros for access to language-specific slots in an identifier.  */\n \n-#define IDENTIFIER_TEMPLATE(NODE)\t\\\n-  (LANG_IDENTIFIER_CAST (NODE)->class_template_info)\n-\n /* The IDENTIFIER_BINDING is the innermost cxx_binding for the\n     identifier.  Its PREVIOUS is the next outermost binding.  Each\n     VALUE field is a DECL for the associated declaration.  Thus,"}, {"sha": "0ba337533398dc34a55828d32d7776ed3e2c869a", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "patch": "@@ -1460,11 +1460,6 @@ write_source_name (tree identifier)\n {\n   MANGLE_TRACE_TREE (\"source-name\", identifier);\n \n-  /* Never write the whole template-id name including the template\n-     arguments; we only want the template name.  */\n-  if (IDENTIFIER_TEMPLATE (identifier))\n-    identifier = IDENTIFIER_TEMPLATE (identifier);\n-\n   write_unsigned_number (IDENTIFIER_LENGTH (identifier));\n   write_identifier (IDENTIFIER_POINTER (identifier));\n }"}, {"sha": "2ca71b6a5f0ed32f23ea4c55f67594591504ac4e", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "patch": "@@ -3183,27 +3183,12 @@ set_identifier_type_value (tree id, tree decl)\n }\n \n /* Return the name for the constructor (or destructor) for the\n-   specified class TYPE.  When given a template, this routine doesn't\n-   lose the specialization.  */\n-\n-static inline tree\n-constructor_name_full (tree type)\n-{\n-  return TYPE_IDENTIFIER (TYPE_MAIN_VARIANT (type));\n-}\n-\n-/* Return the name for the constructor (or destructor) for the\n-   specified class.  When given a template, return the plain\n-   unspecialized name.  */\n+   specified class.  */\n \n tree\n constructor_name (tree type)\n {\n-  tree name;\n-  name = constructor_name_full (type);\n-  if (IDENTIFIER_TEMPLATE (name))\n-    name = IDENTIFIER_TEMPLATE (name);\n-  return name;\n+  return TYPE_IDENTIFIER (TYPE_MAIN_VARIANT (type));\n }\n \n /* Returns TRUE if NAME is the name for the constructor for TYPE,\n@@ -3212,8 +3197,6 @@ constructor_name (tree type)\n bool\n constructor_name_p (tree name, tree type)\n {\n-  tree ctor_name;\n-\n   gcc_assert (MAYBE_CLASS_TYPE_P (type));\n \n   if (!name)\n@@ -3227,12 +3210,10 @@ constructor_name_p (tree name, tree type)\n       || TREE_CODE (type) == TYPEOF_TYPE)\n     return false;\n \n-  ctor_name = constructor_name_full (type);\n+  tree ctor_name = constructor_name (type);\n   if (name == ctor_name)\n     return true;\n-  if (IDENTIFIER_TEMPLATE (ctor_name)\n-      && name == IDENTIFIER_TEMPLATE (ctor_name))\n-    return true;\n+\n   return false;\n }\n "}, {"sha": "d377efc8cc51e1e2d489bdc0e51ac7afed3d62e1", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fee5eca5fe329cfd6c6fc1ae81d4da566a57431/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=5fee5eca5fe329cfd6c6fc1ae81d4da566a57431", "patch": "@@ -181,7 +181,6 @@ cxx_print_identifier (FILE *file, tree node, int indent)\n   fprintf (file, \"%s local bindings <%p>\", get_identifier_kind_name (node),\n \t   (void *) IDENTIFIER_BINDING (node));\n   print_node (file, \"label\", IDENTIFIER_LABEL_VALUE (node), indent + 4);\n-  print_node (file, \"template\", IDENTIFIER_TEMPLATE (node), indent + 4);\n }\n \n void"}]}