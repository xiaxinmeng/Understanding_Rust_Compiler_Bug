{"sha": "65701fd2476d9c1412c899d97d01902dbc3e1fb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU3MDFmZDI0NzZkOWMxNDEyYzg5OWQ5N2QwMTkwMmRiYzNlMWZiMw==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-09-19T04:52:22Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-09-19T04:52:22Z"}, "message": "Fix typo in init_reload.\n\nFrom-SVN: r2161", "tree": {"sha": "eec31c318781cba725fda73a33c4cc8400fb980c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eec31c318781cba725fda73a33c4cc8400fb980c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65701fd2476d9c1412c899d97d01902dbc3e1fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65701fd2476d9c1412c899d97d01902dbc3e1fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65701fd2476d9c1412c899d97d01902dbc3e1fb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65701fd2476d9c1412c899d97d01902dbc3e1fb3/comments", "author": null, "committer": null, "parents": [{"sha": "e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d76a395e5f1d93a17f4a353b8c80e620cb1597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d76a395e5f1d93a17f4a353b8c80e620cb1597"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "77387a0d6378792f602f0556f617658781adbcbb", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65701fd2476d9c1412c899d97d01902dbc3e1fb3/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65701fd2476d9c1412c899d97d01902dbc3e1fb3/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=65701fd2476d9c1412c899d97d01902dbc3e1fb3", "patch": "@@ -364,7 +364,7 @@ init_reload ()\n \n   /* See if reg+reg is a valid (and offsettable) address.  */\n \n-  for (i = 0; i < FIRST_PSEUDO_REGSTER; i++)\n+  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     {\n       tem = gen_rtx (PLUS, Pmode,\n \t\t     gen_rtx (REG, Pmode, FRAME_POINTER_REGNUM),"}]}