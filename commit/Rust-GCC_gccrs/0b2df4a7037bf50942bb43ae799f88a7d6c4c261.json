{"sha": "0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIyZGY0YTcwMzdiZjUwOTQyYmI0M2FlNzk5Zjg4YTdkNmM0YzI2MQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-03-11T08:03:02Z"}, "committer": {"name": "Bud Davis", "email": "bdavis@gcc.gnu.org", "date": "2005-03-11T08:03:02Z"}, "message": "[multiple changes]\n\n2005-03-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n\n        PR libfortran/20124\n        * gfortran.dg/pr20124.f90: New Test\n\n2005-03-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n\n        PR libfortran/20124\n        * write.c (output_float): Adds a nzero_real variable to store\n        the number of leading zeros whatever the format width is. Corrects\n        the rounding of numbers less than 10^(-width). Fixes typo in an\n        error message. Updates copyright years\n\nFrom-SVN: r96291", "tree": {"sha": "411601a3cc2297dfd35f8ff0cb7349f27c25de3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/411601a3cc2297dfd35f8ff0cb7349f27c25de3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/comments", "author": null, "committer": null, "parents": [{"sha": "cbefb99c9944240c248e7aa8dcd9bfd2b7ecc864", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbefb99c9944240c248e7aa8dcd9bfd2b7ecc864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbefb99c9944240c248e7aa8dcd9bfd2b7ecc864"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "109c8482ca81d1b176916cd9f0a06dc258618598", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "patch": "@@ -1,3 +1,8 @@\n+2005-03-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20124\n+\t* gfortran.dg/pr20124.f90: New Test\n+\n 2005-03-10  James A. Morrison  <phython@gcc.gnu.org>\n \n \tPR tree-optimization/20130"}, {"sha": "69f4f18b29c82de14c7d68cc9390156c54a0a220", "filename": "gcc/testsuite/gfortran.dg/pr20124.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20124.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20124.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr20124.f90?ref=0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do run }\n+! pr 20124\n+      character*80 line\n+      x = -.01\n+      y = .01\n+      write(line,'(2f10.2)') x, y\n+      if (line.ne.'     -0.01      0.01') call abort\n+      end"}, {"sha": "ac7e067e5c901ac66abcbbcacd498b93375efa54", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "patch": "@@ -1,3 +1,11 @@\n+2005-03-11  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/20124\n+\t* write.c (output_float): Adds a nzero_real variable to store\n+\tthe number of leading zeros whatever the format width is. Corrects\n+\tthe rounding of numbers less than 10^(-width). Fixes typo in an\n+\terror message. Updates copyright years\n+\n 2005-02-27  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* runtime/environ.c: Update copyright years."}, {"sha": "9c255d7d69ee47a5e6e27f0e18fb2fdf435e6018", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b2df4a7037bf50942bb43ae799f88a7d6c4c261/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=0b2df4a7037bf50942bb43ae799f88a7d6c4c261", "patch": "@@ -286,6 +286,8 @@ output_float (fnode *f, double value, int len)\n   int nzero;\n   /* Number of digits after the decimal point.  */\n   int nafter;\n+  /* Number of zeros after the decimal point, whatever the precision.  */\n+  int nzero_real;\n   int leadzero;\n   int nblanks;\n   int i;\n@@ -295,6 +297,9 @@ output_float (fnode *f, double value, int len)\n   w = f->u.real.w;\n   d = f->u.real.d;\n \n+  nzero_real = -1;\n+\n+\n   /* We should always know the field width and precision.  */\n   if (d < 0)\n     internal_error (\"Unspecified precision\");\n@@ -359,6 +364,7 @@ output_float (fnode *f, double value, int len)\n       if (nbefore < 0)\n \t{\n \t  nzero = -nbefore;\n+          nzero_real = nzero;\n \t  if (nzero > d)\n \t    nzero = d;\n \t  nafter = d - nzero;\n@@ -436,7 +442,17 @@ output_float (fnode *f, double value, int len)\n \n   /* Round the value.  */\n   if (nbefore + nafter == 0)\n-    ndigits = 0;\n+    {\n+      ndigits = 0;\n+      if (nzero_real == d && digits[0] >= '5')\n+        {\n+          /* We rounded to zero but shouldn't have */\n+          nzero--;\n+          nafter = 1;\n+          digits[0] = '1';\n+          ndigits = 1;\n+        }\n+    }\n   else if (nbefore + nafter < ndigits)\n     {\n       ndigits = nbefore + nafter;"}]}