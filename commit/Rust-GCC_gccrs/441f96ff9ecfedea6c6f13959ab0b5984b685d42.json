{"sha": "441f96ff9ecfedea6c6f13959ab0b5984b685d42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxZjk2ZmY5ZWNmZWRlYTZjNmYxMzk1OWFiMGI1OTg0YjY4NWQ0Mg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2014-07-15T14:11:06Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2014-07-15T14:11:06Z"}, "message": "re PR rtl-optimization/61772 (RTL if-conversion removes asm volatile goto)\n\n        PR rtl-optimization/61772\n        * ifcvt.c (dead_or_predicable): Check jump to be free of side\n        effects.\n\ntestsuite/\n        * gcc.dg/torture/pr61772.c: New test.\n\nFrom-SVN: r212563", "tree": {"sha": "db9eaec03210ccefc176254a40d5da17fac39b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db9eaec03210ccefc176254a40d5da17fac39b6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/441f96ff9ecfedea6c6f13959ab0b5984b685d42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441f96ff9ecfedea6c6f13959ab0b5984b685d42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441f96ff9ecfedea6c6f13959ab0b5984b685d42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441f96ff9ecfedea6c6f13959ab0b5984b685d42/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "603a0084b1bb600833e17822b18353f841b16467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603a0084b1bb600833e17822b18353f841b16467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603a0084b1bb600833e17822b18353f841b16467"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "f7771885b9e4654db0b09b2e3969f3b4a280d3fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=441f96ff9ecfedea6c6f13959ab0b5984b685d42", "patch": "@@ -1,3 +1,9 @@\n+2014-07-15  Michael Matz  <matz@suse.de>\n+\n+\tPR rtl-optimization/61772\n+\t* ifcvt.c (dead_or_predicable): Check jump to be free of side\n+\teffects.\n+\n 2014-07-15  Richard Biener  <rguenther@suse.de>\n \n \t* opts.c (default_options_table): Disable bit-ccp at -Og."}, {"sha": "faf9b30d6a2fbc555100e72c04243e6ae97592a7", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=441f96ff9ecfedea6c6f13959ab0b5984b685d42", "patch": "@@ -4138,6 +4138,8 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n \n   if (JUMP_P (end))\n     {\n+      if (!onlyjump_p (end))\n+\treturn FALSE;\n       if (head == end)\n \t{\n \t  head = end = NULL_RTX;"}, {"sha": "bed55399c5b8105c2e9669b223eb04801af64920", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=441f96ff9ecfedea6c6f13959ab0b5984b685d42", "patch": "@@ -1,3 +1,8 @@\n+2014-07-15  Michael Matz  <matz@suse.de>\n+\n+\tPR rtl-optimization/61772\n+\t* gcc.dg/torture/pr61772.c: New test.\n+\n 2014-07-15  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/ubsan/bounds-1.c: New test."}, {"sha": "da4c93e1d0d6f372d1b8a5d110968555606ffd5f", "filename": "gcc/testsuite/gcc.dg/torture/pr61772.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61772.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/441f96ff9ecfedea6c6f13959ab0b5984b685d42/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61772.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61772.c?ref=441f96ff9ecfedea6c6f13959ab0b5984b685d42", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-final { scan-assembler-times \"XXX\" 2 } } */\n+\n+static inline __attribute__((always_inline)) int dec_and_test (int *i)\n+{\n+    asm volatile goto (\"XXX %0, %l[cc_label]\"\n+\t\t       : : \"m\" (*i) : \"memory\" : cc_label);\n+    return 0;\n+cc_label:\n+    return 1;\n+}\n+extern int getit (int *);\n+int f (int *i, int cond)\n+{\n+  if (cond) {\n+      getit (0);\n+      if (dec_and_test (i))\n+\tgetit (i);\n+      return 42;\n+  }\n+  if (dec_and_test (i))\n+    (void)1;\n+  return getit (i);\n+}"}]}