{"sha": "12d635bdfc0704e152e403da3f7314b48edf805f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJkNjM1YmRmYzA3MDRlMTUyZTQwM2RhM2Y3MzE0YjQ4ZWRmODA1Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-10T14:35:03Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-10T14:35:03Z"}, "message": "(GO_IF_LEGITIMATE_ADDRESS): Verify that register is valid for use as base...\n\n(GO_IF_LEGITIMATE_ADDRESS): Verify that register is valid\nfor use as base register (un-allocated pseudos aren't when strict).\n\nFrom-SVN: r2731", "tree": {"sha": "7890a64e250c1cfedf34e579636b492468b6a688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7890a64e250c1cfedf34e579636b492468b6a688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12d635bdfc0704e152e403da3f7314b48edf805f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d635bdfc0704e152e403da3f7314b48edf805f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12d635bdfc0704e152e403da3f7314b48edf805f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12d635bdfc0704e152e403da3f7314b48edf805f/comments", "author": null, "committer": null, "parents": [{"sha": "d14774f07b73301fc68aae6bfc7e04f5de1c498d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14774f07b73301fc68aae6bfc7e04f5de1c498d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14774f07b73301fc68aae6bfc7e04f5de1c498d"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "533b633ca65c959c97672975cbb06d2560b8a325", "filename": "gcc/config/elxsi/elxsi.h", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12d635bdfc0704e152e403da3f7314b48edf805f/gcc%2Fconfig%2Felxsi%2Felxsi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12d635bdfc0704e152e403da3f7314b48edf805f/gcc%2Fconfig%2Felxsi%2Felxsi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Felxsi.h?ref=12d635bdfc0704e152e403da3f7314b48edf805f", "patch": "@@ -573,13 +573,17 @@ enum reg_class { NO_REGS, GENERAL_REGS, ALL_REGS, LIM_REG_CLASSES };\n   if (GET_CODE (X) == REG) goto ADDR;\t\t\t\t\t\\\n   if (CONSTANT_ADDRESS_P (X)) goto ADDR; \t\t\t\t\\\n   if (GET_CODE (X) == PLUS)\t\t\t\t\t\t\\\n-    { /* Handle [index]<address> represented with index-sum outermost */\\\n-      if (GET_CODE (XEXP (X, 0)) == REG && \\\n-\t  GET_CODE (XEXP (X, 1)) == CONST_INT) \\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      /* Handle [index]<address> represented with index-sum outermost */\\\n+      if (GET_CODE (XEXP (X, 0)) == REG\t\t\t\t\t\\\n+\t  && REG_OK_FOR_BASE_P (XEXP (X, 0))\t\t\t\t\\\n+\t  && GET_CODE (XEXP (X, 1)) == CONST_INT)\t\t\t\\\n \tgoto ADDR;\t\t\t\t\t\t\t\\\n-      if (GET_CODE (XEXP (X, 1)) == REG && \\\n-\t  GET_CODE (XEXP (X, 0)) == CONST_INT) \\\n-\tgoto ADDR; } \\\n+      if (GET_CODE (XEXP (X, 1)) == REG\t\t\t\t\t\\\n+\t  && REG_OK_FOR_BASE_P (XEXP (X, 0))\t\t\t\t\\\n+\t  && GET_CODE (XEXP (X, 0)) == CONST_INT)\t\t\t\\\n+\tgoto ADDR;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n  }\n \n \f"}]}