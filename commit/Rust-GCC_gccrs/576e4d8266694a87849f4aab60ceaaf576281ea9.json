{"sha": "576e4d8266694a87849f4aab60ceaaf576281ea9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc2ZTRkODI2NjY5NGE4Nzg0OWY0YWFiNjBjZWFhZjU3NjI4MWVhOQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-03-05T11:39:17Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-03-05T11:39:17Z"}, "message": "gnat.exp (gnat_init): Remove GNAT_UNDER_TEST_ORIG.\n\n\t* lib/gnat.exp (gnat_init): Remove GNAT_UNDER_TEST_ORIG.\n\t(gnat_target_compile): Likewise.\n\tReinitialize GNAT_UNDER_TEST if target changes.\n\tSet ADA_INCLUDE_PATH, ADA_OBJECTS_PATH in environment.\n\t(local_find_gnatmake): Pass full --GCC to gnatlink.\n\tRemove --LINK.\n\nFrom-SVN: r157240", "tree": {"sha": "25325b705f4536d871e15927ea47883dbc6a4755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25325b705f4536d871e15927ea47883dbc6a4755"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/576e4d8266694a87849f4aab60ceaaf576281ea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576e4d8266694a87849f4aab60ceaaf576281ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/576e4d8266694a87849f4aab60ceaaf576281ea9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/576e4d8266694a87849f4aab60ceaaf576281ea9/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "714902c8d41b98d1254a17cae94d9192ee8c7d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714902c8d41b98d1254a17cae94d9192ee8c7d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714902c8d41b98d1254a17cae94d9192ee8c7d82"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "989766b1e264e742ea92c74f49e0c2892772ab42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576e4d8266694a87849f4aab60ceaaf576281ea9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576e4d8266694a87849f4aab60ceaaf576281ea9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=576e4d8266694a87849f4aab60ceaaf576281ea9", "patch": "@@ -1,3 +1,12 @@\n+2010-03-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* lib/gnat.exp (gnat_init): Remove GNAT_UNDER_TEST_ORIG.\n+\t(gnat_target_compile): Likewise.\n+\tReinitialize GNAT_UNDER_TEST if target changes.\n+\tSet ADA_INCLUDE_PATH, ADA_OBJECTS_PATH in environment.\n+\t(local_find_gnatmake): Pass full --GCC to gnatlink.\n+\tRemove --LINK.\n+\n 2010-03-04  Andrew Pinski  <andrew_pinski@caviumnetworks.com>\n \n \tPR c/43248"}, {"sha": "90db48551822b88499959c587d6b630f55cc1ac0", "filename": "gcc/testsuite/lib/gnat.exp", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/576e4d8266694a87849f4aab60ceaaf576281ea9/gcc%2Ftestsuite%2Flib%2Fgnat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/576e4d8266694a87849f4aab60ceaaf576281ea9/gcc%2Ftestsuite%2Flib%2Fgnat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgnat.exp?ref=576e4d8266694a87849f4aab60ceaaf576281ea9", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n+# Copyright (C) 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -83,7 +83,6 @@ proc gnat_init { args } {\n     global gluefile wrap_flags\n     global gnat_initialized\n     global GNAT_UNDER_TEST\n-    global GNAT_UNDER_TEST_ORIG\n     global TOOL_EXECUTABLE\n     global gnat_libgcc_s_path\n     global gnat_target_current\n@@ -98,7 +97,6 @@ proc gnat_init { args } {\n \t} else {\n \t    set GNAT_UNDER_TEST \"[local_find_gnatmake]\"\n \t}\n-        set GNAT_UNDER_TEST_ORIG \"$GNAT_UNDER_TEST\"\n     }\n \n     if ![info exists tmpdir] then {\n@@ -129,22 +127,31 @@ proc gnat_target_compile { source dest type options } {\n     global gluefile wrap_flags\n     global srcdir\n     global GNAT_UNDER_TEST\n-    global GNAT_UNDER_TEST_ORIG\n     global TOOL_OPTIONS\n     global ld_library_path\n     global gnat_libgcc_s_path\n     global gnat_target_current\n \n-    # If we detect a change of target we need to recompute\n-    # the appropriate RTS by calling get_multilibs.\n+    # If we detect a change of target, we need to recompute both\n+    # GNAT_UNDER_TEST and the appropriate RTS.\n     if { $gnat_target_current!=\"[current_target_name]\" } {\n \tset gnat_target_current \"[current_target_name]\"\n \tif [info exists TOOL_OPTIONS] {\n-\t    set gnat_rts_opt \"--RTS=[get_multilibs ${TOOL_OPTIONS}]/libada\"\n+\t    set rtsdir \"[get_multilibs ${TOOL_OPTIONS}]/libada\"\n \t} else {\n-\t    set gnat_rts_opt \"--RTS=[get_multilibs]/libada\"\n+\t    set rtsdir \"[get_multilibs]/libada\"\n \t}\n-        set GNAT_UNDER_TEST \"$GNAT_UNDER_TEST_ORIG $gnat_rts_opt\"\n+\tif [info exists TOOL_EXECUTABLE] {\n+\t    set GNAT_UNDER_TEST \"$TOOL_EXECUTABLE\"\n+\t} else {\n+\t    set GNAT_UNDER_TEST \"[local_find_gnatmake]\"\n+\t}\n+        set GNAT_UNDER_TEST \"$GNAT_UNDER_TEST --RTS=$rtsdir\"\n+\n+\t# gnatlink looks for system.ads itself and has no --RTS option, so\n+\t# specify via environment\n+\tsetenv ADA_INCLUDE_PATH \"$rtsdir/adainclude\"\n+\tsetenv ADA_OBJECTS_PATH \"$rtsdir/adainclude\"\n     }\n \n     set ld_library_path \".:${gnat_libgcc_s_path}\"\n@@ -263,7 +270,13 @@ proc local_find_gnatmake {} {\n         }\n         if { $file != \"\" } {\n     \tset root [file dirname $file]\n-    \tset CC \"$file --GCC=$root/xgcc --GNATBIND=$root/gnatbind --GNATLINK=$root/gnatlink -cargs -B$root -largs --LINK=$root/xgcc -B$root -margs\";\n+\t# Need to pass full --GCC, including multilib flags, to gnatlink,\n+\t# otherwise gcc from PATH is invoked.\n+\tset dest [target_info name]\n+\tset gnatlink_gcc \"--GCC=$root/xgcc -B$root [board_info $dest multilib_flags]\"\n+\t# Escape blanks to get them through DejaGnu's exec machinery.\n+\tregsub -all {\\s} \"$gnatlink_gcc\" {\\\\&} gnatlink_gcc\n+    \tset CC \"$file --GCC=$root/xgcc --GNATBIND=$root/gnatbind --GNATLINK=$root/gnatlink -cargs -B$root -largs $gnatlink_gcc -margs\";\n         } else {\n     \tset CC [transform gnatmake]\n         }"}]}