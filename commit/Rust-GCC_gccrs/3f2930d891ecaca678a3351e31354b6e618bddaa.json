{"sha": "3f2930d891ecaca678a3351e31354b6e618bddaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyOTMwZDg5MWVjYWNhNjc4YTMzNTFlMzEzNTRiNmU2MThiZGRhYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-21T09:46:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-21T09:46:11Z"}, "message": "tree-flow.h (referenced_var): Move define ...\n\n2010-07-21  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow.h (referenced_var): Move define ...\n\t* tree-flow-inline.h (referenced_var): ... here as an inline\n\tfunction.  Assert here ...\n\t* tree-dfa.c (referenced_var_lookup): ... instead of here.\n\t* tree-ssa.c (maybe_optimize_var): Check if the variable\n\tis in referenced vars.\n\t(execute_update_addresses_taken): Remove old broken check.\n\t* gimple-pretty-print.c (pp_points_to_solution): Use\n\treferenced_var_lookup.\n\t* tree-into-ssa.c (dump_decl_set): Likewise.\n\nFrom-SVN: r162368", "tree": {"sha": "f2703985f3ba0f658ced8d1bb4ac68c69a393e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2703985f3ba0f658ced8d1bb4ac68c69a393e5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f2930d891ecaca678a3351e31354b6e618bddaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2930d891ecaca678a3351e31354b6e618bddaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f2930d891ecaca678a3351e31354b6e618bddaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f2930d891ecaca678a3351e31354b6e618bddaa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "370ae5992fa38d0161157ce8b237174d220054bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/370ae5992fa38d0161157ce8b237174d220054bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/370ae5992fa38d0161157ce8b237174d220054bf"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "313baf6c36d2860472afcee2792020f22b37098a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -1,3 +1,16 @@\n+2010-07-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow.h (referenced_var): Move define ...\n+\t* tree-flow-inline.h (referenced_var): ... here as an inline\n+\tfunction.  Assert here ...\n+\t* tree-dfa.c (referenced_var_lookup): ... instead of here.\n+\t* tree-ssa.c (maybe_optimize_var): Check if the variable\n+\tis in referenced vars.\n+\t(execute_update_addresses_taken): Remove old broken check.\n+\t* gimple-pretty-print.c (pp_points_to_solution): Use\n+\treferenced_var_lookup.\n+\t* tree-into-ssa.c (dump_decl_set): Likewise.\n+\n 2010-07-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/45003"}, {"sha": "6e1f6b782c2a051443e39ea117cae7e004fe4b84", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -534,11 +534,7 @@ pp_points_to_solution (pretty_printer *buffer, struct pt_solution *pt)\n       pp_string (buffer, \"{ \");\n       EXECUTE_IF_SET_IN_BITMAP (pt->vars, 0, i, bi)\n \t{\n-\t  struct tree_decl_minimal in;\n-\t  tree var;\n-\t  in.uid = i;\n-\t  var = (tree) htab_find_with_hash (gimple_referenced_vars (cfun),\n-\t\t\t\t\t    &in, i);\n+\t  tree var = referenced_var_lookup (i);\n \t  if (var)\n \t    {\n \t      dump_generic_node (buffer, var, 0, dump_flags, false);"}, {"sha": "461e2cf22772b771fe3d3837b5cee4fc4ab83b57", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -495,7 +495,6 @@ referenced_var_lookup (unsigned int uid)\n   struct tree_decl_minimal in;\n   in.uid = uid;\n   h = (tree) htab_find_with_hash (gimple_referenced_vars (cfun), &in, uid);\n-  gcc_assert (h || uid == 0);\n   return h;\n }\n "}, {"sha": "7103d238b095fe86becfa36ba54fa22e64a01cc2", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -98,6 +98,16 @@ next_htab_element (htab_iterator *hti)\n   return NULL;\n }\n \n+/* Get the variable with uid UID from the list of referenced vars.  */\n+\n+static inline tree\n+referenced_var (unsigned int uid)\n+{\n+  tree var = referenced_var_lookup (uid);\n+  gcc_assert (var || uid == 0);\n+  return var;\n+}\n+\n /* Initialize ITER to point to the first referenced variable in the\n    referenced_vars hashtable, and return that variable.  */\n "}, {"sha": "6209a844df34eefaf672eb015b92694b79c2564b", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -321,7 +321,6 @@ typedef struct\n extern tree referenced_var_lookup (unsigned int);\n extern bool referenced_var_check_and_insert (tree);\n #define num_referenced_vars htab_elements (gimple_referenced_vars (cfun))\n-#define referenced_var(i) referenced_var_lookup (i)\n \n #define num_ssa_names (VEC_length (tree, cfun->gimple_df->ssa_names))\n #define ssa_name(i) (VEC_index (tree, cfun->gimple_df->ssa_names, (i)))"}, {"sha": "e7c4eca1bb9ef470fbba121b377490734c680c4c", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -1470,11 +1470,7 @@ dump_decl_set (FILE *file, bitmap set)\n \n       EXECUTE_IF_SET_IN_BITMAP (set, 0, i, bi)\n \t{\n-\t  struct tree_decl_minimal in;\n-\t  tree var;\n-\t  in.uid = i;\n-\t  var = (tree) htab_find_with_hash (gimple_referenced_vars (cfun),\n-\t\t\t\t\t    &in, i);\n+\t  tree var = referenced_var_lookup (i);\n \t  if (var)\n \t    print_generic_expr (file, var, 0);\n \t  else"}, {"sha": "0be459118e5a59286475a2f906477a736480dadf", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f2930d891ecaca678a3351e31354b6e618bddaa/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=3f2930d891ecaca678a3351e31354b6e618bddaa", "patch": "@@ -1881,6 +1881,11 @@ maybe_optimize_var (tree var, bitmap addresses_taken, bitmap not_reg_needs)\n       || bitmap_bit_p (addresses_taken, DECL_UID (var)))\n     return false;\n \n+  /* If the variable is not in the list of referenced vars then we\n+     do not need to touch it nor can we rename it.  */\n+  if (!referenced_var_lookup (DECL_UID (var)))\n+    return false;\n+\n   if (TREE_ADDRESSABLE (var)\n       /* Do not change TREE_ADDRESSABLE if we need to preserve var as\n \t a non-register.  Otherwise we are confused and forget to\n@@ -2031,13 +2036,7 @@ execute_update_addresses_taken (bool do_optimize)\n \t unused vars from BLOCK trees which cause code generation\n \t differences for -g vs. -g0.  */\n       for (var = DECL_ARGUMENTS (cfun->decl); var; var = DECL_CHAIN (var))\n-\t{\n-\t  /* ???  Not all arguments are in referenced vars.  */\n-\t  if (!var_ann (var))\n-\t    continue;\n-\t  update_vops\n-\t    |= maybe_optimize_var (var, addresses_taken, not_reg_needs);\n-\t}\n+\tupdate_vops |= maybe_optimize_var (var, addresses_taken, not_reg_needs);\n       for (i = 0; VEC_iterate (tree, cfun->local_decls, i, var); ++i)\n \tupdate_vops |= maybe_optimize_var (var, addresses_taken, not_reg_needs);\n     }"}]}