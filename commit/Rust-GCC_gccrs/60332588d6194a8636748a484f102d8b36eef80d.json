{"sha": "60332588d6194a8636748a484f102d8b36eef80d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzMzI1ODhkNjE5NGE4NjM2NzQ4YTQ4NGYxMDJkOGIzNmVlZjgwZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-12-05T19:50:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-12-05T19:50:56Z"}, "message": "re PR debug/33739 (Failure of gfortran.dg/literal_character_constant_1_*.F with -m64 -g on Darwin)\n\n\tPR debug/33739\n\t* gfortran.h (gfc_file): Remove included_by field, add sibling and\n\tdown.\n\t(gfc_start_source_files, gfc_end_source_files): New prototypes.\n\t* parse.c (gfc_parse_file): Call gfc_start_source_files and\n\tgfc_end_source_files instead of calling the debugging hooks directly.\n\t* error.c (show_locus): Use up field instead of included_by.\n\t* scanner.c (change_file, gfc_start_source_files,\n\tgfc_end_source_files): New functions.\n\t(gfc_advance_line): Call change_file instead of calling debug hooks\n\tdirectly.\n\t(get_file): Set up rather than included_by.  Initialize down and\n\tsibling.\n\t(preprocessor_line, load_file): Don't set up field here.\n\n\t* gfortran.dg/debug_2.f: New test.\n\nFrom-SVN: r130629", "tree": {"sha": "cab5c222f0441c84dd8b90bf0301cd07c43d705d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cab5c222f0441c84dd8b90bf0301cd07c43d705d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60332588d6194a8636748a484f102d8b36eef80d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60332588d6194a8636748a484f102d8b36eef80d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60332588d6194a8636748a484f102d8b36eef80d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60332588d6194a8636748a484f102d8b36eef80d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bce623434fce35c3d515224b70e08d03fabce691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bce623434fce35c3d515224b70e08d03fabce691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bce623434fce35c3d515224b70e08d03fabce691"}], "stats": {"total": 157, "additions": 125, "deletions": 32}, "files": [{"sha": "3b290ac590e24740d0bda5891c375e17ed332f9b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -1,3 +1,20 @@\n+2007-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/33739\n+\t* gfortran.h (gfc_file): Remove included_by field, add sibling and\n+\tdown.\n+\t(gfc_start_source_files, gfc_end_source_files): New prototypes.\n+\t* parse.c (gfc_parse_file): Call gfc_start_source_files and\n+\tgfc_end_source_files instead of calling the debugging hooks directly.\n+\t* error.c (show_locus): Use up field instead of included_by.\n+\t* scanner.c (change_file, gfc_start_source_files,\n+\tgfc_end_source_files): New functions.\n+\t(gfc_advance_line): Call change_file instead of calling debug hooks\n+\tdirectly.\n+\t(get_file): Set up rather than included_by.  Initialize down and\n+\tsibling.\n+\t(preprocessor_line, load_file): Don't set up field here.\n+\n 2007-12-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34333"}, {"sha": "e25a4286b24100e078b68311bc3bc4d91b7c6f99", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -207,7 +207,7 @@ show_locus (locus *loc, int c1, int c2)\n     {\n       i = f->inclusion_line;\n \n-      f = f->included_by;\n+      f = f->up;\n       if (f == NULL) break;\n \n       error_printf (\"    Included at %s:%d:\", f->filename, i);"}, {"sha": "9f83c79538852b2d01aa36490647021cdc2cd07e", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -706,7 +706,7 @@ symbol_attribute;\n \n typedef struct gfc_file\n {\n-  struct gfc_file *included_by, *next, *up;\n+  struct gfc_file *next, *up, *sibling, *down;\n   int inclusion_line, line;\n   char *filename;\n } gfc_file;\n@@ -1938,6 +1938,9 @@ extern gfc_source_form gfc_current_form;\n extern const char *gfc_source_file;\n extern locus gfc_current_locus;\n \n+void gfc_start_source_files (void);\n+void gfc_end_source_files (void);\n+\n /* misc.c */\n void *gfc_getmem (size_t) ATTRIBUTE_MALLOC;\n void gfc_free (void *);"}, {"sha": "c941b4e5d2911b92c04e21ca922674724df44679", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -3289,10 +3289,7 @@ gfc_parse_file (void)\n   gfc_statement st;\n   locus prog_locus;\n \n-  /* If the debugger wants the name of the main source file,\n-     we give it.  */\n-  if (debug_hooks->start_end_main_source_file)\n-    (*debug_hooks->start_source_file) (0, gfc_source_file);\n+  gfc_start_source_files ();\n \n   top.state = COMP_NONE;\n   top.sym = NULL;\n@@ -3404,9 +3401,7 @@ gfc_parse_file (void)\n   goto loop;\n \n done:\n-  if (debug_hooks->start_end_main_source_file)\n-    (*debug_hooks->end_source_file) (0);\n-\n+  gfc_end_source_files ();\n   return SUCCESS;\n \n duplicate_main:"}, {"sha": "1bea10f1dac018fc7fcba25563ffad419279c22b", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 80, "deletions": 23, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -299,6 +299,65 @@ gfc_at_eol (void)\n   return (*gfc_current_locus.nextc == '\\0');\n }\n \n+static void\n+change_file (gfc_file *to)\n+{\n+  if (current_file == NULL)\n+    return;\n+\n+  while (current_file != to)\n+    if (current_file->down)\n+      {\n+\tgfc_file *f = current_file->down;\n+\t/* Ensure we don't enter it ever again.  */\n+\tcurrent_file->down = NULL;\n+\tcurrent_file = f;\n+\t(*debug_hooks->start_source_file) (current_file->inclusion_line,\n+\t\t\t\t\t   current_file->filename);\n+      }\n+    else if (current_file->sibling)\n+      current_file = current_file->sibling;\n+    else\n+      {\n+\tgcc_assert (current_file->up);\n+\t(*debug_hooks->end_source_file) (current_file->inclusion_line + 1);\n+\tcurrent_file = current_file->up;\n+      }\n+}\n+\n+void\n+gfc_start_source_files (void)\n+{\n+  /* If the debugger wants the name of the main source file,\n+     we give it.  */\n+  if (debug_hooks->start_end_main_source_file)\n+    (*debug_hooks->start_source_file) (0, gfc_source_file);\n+\n+  if (gfc_current_locus.lb && gfc_current_locus.lb->file)\n+    {\n+      current_file = gfc_current_locus.lb->file;\n+      while (current_file->up)\n+\tcurrent_file = current_file->up;\n+      change_file (gfc_current_locus.lb->file);\n+    }\n+  else\n+    current_file = NULL;\n+}\n+\n+void\n+gfc_end_source_files (void)\n+{\n+  if (current_file != NULL)\n+    {\n+      gfc_file *to = current_file;\n+      while (to->up)\n+\tto = to->up;\n+      change_file (to);\n+    }\n+\n+  if (debug_hooks->start_end_main_source_file)\n+    (*debug_hooks->end_source_file) (0);\n+}\n \n /* Advance the current line pointer to the next line.  */\n \n@@ -315,26 +374,11 @@ gfc_advance_line (void)\n     } \n \n   if (gfc_current_locus.lb->next\n-      && gfc_current_locus.lb->next->file != gfc_current_locus.lb->file)\n+      && gfc_current_locus.lb->next->file != gfc_current_locus.lb->file\n+      && !gfc_current_locus.lb->next->dbg_emitted)\n     {\n-      if (gfc_current_locus.lb->next->file\n-\t  && !gfc_current_locus.lb->next->dbg_emitted\n-\t  && gfc_current_locus.lb->file->up == gfc_current_locus.lb->next->file)\n-\t{\n-\t  /* We exit from an included file. */\n-\t  (*debug_hooks->end_source_file)\n-\t\t(gfc_linebuf_linenum (gfc_current_locus.lb->next));\n-\t  gfc_current_locus.lb->next->dbg_emitted = true;\n-\t}\n-      else if (gfc_current_locus.lb->next->file != gfc_current_locus.lb->file\n-\t       && !gfc_current_locus.lb->next->dbg_emitted)\n-\t{\n-\t  /* We enter into a new file.  */\n-\t  (*debug_hooks->start_source_file)\n-\t\t(gfc_linebuf_linenum (gfc_current_locus.lb),\n-\t\t gfc_current_locus.lb->next->file->filename);\n-\t  gfc_current_locus.lb->next->dbg_emitted = true;\n-\t}\n+      change_file (gfc_current_locus.lb->next->file);\n+      gfc_current_locus.lb->next->dbg_emitted = true;\n     }\n \n   gfc_current_locus.lb = gfc_current_locus.lb->next;\n@@ -1219,9 +1263,24 @@ get_file (const char *name, enum lc_reason reason ATTRIBUTE_UNUSED)\n   f->next = file_head;\n   file_head = f;\n \n-  f->included_by = current_file;\n+  f->up = current_file;\n+  /* Already cleared by gfc_getmem.\n+     f->down = NULL;\n+     f->sibling = NULL;  */\n   if (current_file != NULL)\n-    f->inclusion_line = current_file->line;\n+    {\n+      f->inclusion_line = current_file->line;\n+      if (current_file->down == NULL)\n+\tcurrent_file->down = f;\n+      else\n+\t{\n+\t  gfc_file *s;\n+\n+\t  for (s = current_file->down; s->sibling; s = s->sibling)\n+\t    ;\n+\t  s->sibling = f;\n+\t}\n+    }\n \n #ifdef USE_MAPPED_LOCATION\n   linemap_add (line_table, reason, false, f->filename, 1);\n@@ -1331,7 +1390,6 @@ preprocessor_line (char *c)\n   if (flag[1]) /* Starting new file.  */\n     {\n       f = get_file (filename, LC_RENAME);\n-      f->up = current_file;\n       current_file = f;\n     }\n \n@@ -1499,7 +1557,6 @@ load_file (const char *filename, bool initial)\n   /* Load the file.  */\n \n   f = get_file (filename, initial ? LC_RENAME : LC_ENTER);\n-  f->up = current_file;\n   current_file = f;\n   current_file->line = 1;\n   line = NULL;"}, {"sha": "0778f0700732e5869782a48d5c3c3107d7a145b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -1,3 +1,8 @@\n+2007-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/33739\n+\t* gfortran.dg/debug_2.f: New test.\n+\n 2007-12-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/elab1.ads: New test."}, {"sha": "66bc5f6f6a046e14c4154201562d55596a65af9b", "filename": "gcc/testsuite/gfortran.dg/debug_2.f", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug_2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60332588d6194a8636748a484f102d8b36eef80d/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug_2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug_2.f?ref=60332588d6194a8636748a484f102d8b36eef80d", "patch": "@@ -0,0 +1,16 @@\n+# 1 \"debug_2.F\"\n+# 1 \"<built-in>\"\n+# 1 \"<command line>\"\n+# 1 \"debug_2.F\"\n+# 3 \"debug_2.inc1\" 1\n+# 4 \"debug_2.inc2\" 1\n+! The above lines must be present as is.\n+! PR fortran/34084\n+! { dg-do compile }\n+! { dg-options \"-g\" }\n+      subroutine foo\n+      end subroutine foo\n+# 4 \"debug_2.inc1\" 2\n+# 2 \"debug_2.F\" 2\n+      program bar\n+      end program bar"}]}