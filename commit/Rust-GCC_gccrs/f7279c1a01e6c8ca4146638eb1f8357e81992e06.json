{"sha": "f7279c1a01e6c8ca4146638eb1f8357e81992e06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcyNzljMWEwMWU2YzhjYTQxNDY2MzhlYjFmODM1N2U4MTk5MmUwNg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-03-23T20:19:11Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-03-23T20:19:11Z"}, "message": "hashtable.h (_Hashtable(allocator_type)): Fix call to delegated constructor.\n\n2014-03-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/bits/hashtable.h (_Hashtable(allocator_type)): Fix call\n\tto delegated constructor.\n\t(_Hashtable(size_type, _H1, key_equal, allocator_type)): Likewise.\n\t(_Hashtable<_It>(_It, _It, size_type, _H1, key_equal, allocator_type)):\n\tLikewise.\n\t(_Hashtable(\n\tinitializer_list, size_type, _H1, key_equal, allocator_type)): Likewise.\n\nFrom-SVN: r208775", "tree": {"sha": "a34046ee9244d2d19cebc851ca8b378a4c537cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a34046ee9244d2d19cebc851ca8b378a4c537cb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7279c1a01e6c8ca4146638eb1f8357e81992e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7279c1a01e6c8ca4146638eb1f8357e81992e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7279c1a01e6c8ca4146638eb1f8357e81992e06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7279c1a01e6c8ca4146638eb1f8357e81992e06/comments", "author": null, "committer": null, "parents": [{"sha": "d570d678a43099b0399f942859368ce6c112225b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d570d678a43099b0399f942859368ce6c112225b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d570d678a43099b0399f942859368ce6c112225b"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "455c28df664b1416e1253d7fc852090c41b41683", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7279c1a01e6c8ca4146638eb1f8357e81992e06/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7279c1a01e6c8ca4146638eb1f8357e81992e06/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7279c1a01e6c8ca4146638eb1f8357e81992e06", "patch": "@@ -1,3 +1,13 @@\n+2014-03-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/hashtable.h (_Hashtable(allocator_type)): Fix call\n+\tto delegated constructor.\n+\t(_Hashtable(size_type, _H1, key_equal, allocator_type)): Likewise.\n+\t(_Hashtable<_It>(_It, _It, size_type, _H1, key_equal, allocator_type)):\n+\tLikewise.\n+\t(_Hashtable(\n+\tinitializer_list, size_type, _H1, key_equal, allocator_type)): Likewise.\n+\n 2014-03-23  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR libstdc++/60623"}, {"sha": "22e17d29d7b14ac1573265d0d5794ba364c58aca", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7279c1a01e6c8ca4146638eb1f8357e81992e06/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7279c1a01e6c8ca4146638eb1f8357e81992e06/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=f7279c1a01e6c8ca4146638eb1f8357e81992e06", "patch": "@@ -372,18 +372,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Use delegating constructors.\n       explicit\n       _Hashtable(const allocator_type& __a)\n-\t: _Hashtable(10, _H1(), __detail::_Mod_range_hashing(),\n-\t\t     __detail::_Default_ranged_hash(), key_equal(),\n-\t\t     __key_extract(), __a)\n+      : _Hashtable(10, _H1(), _H2(), _Hash(), key_equal(),\n+\t\t   __key_extract(), __a)\n       { }\n \n       explicit\n       _Hashtable(size_type __n = 10,\n \t\t const _H1& __hf = _H1(),\n \t\t const key_equal& __eql = key_equal(),\n \t\t const allocator_type& __a = allocator_type())\n-      : _Hashtable(__n, __hf, __detail::_Mod_range_hashing(),\n-\t\t   __detail::_Default_ranged_hash(), __eql,\n+      : _Hashtable(__n, __hf, _H2(), _Hash(), __eql,\n \t\t   __key_extract(), __a)\n       { }\n \n@@ -393,8 +391,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t   const _H1& __hf = _H1(),\n \t\t   const key_equal& __eql = key_equal(),\n \t\t   const allocator_type& __a = allocator_type())\n-\t: _Hashtable(__f, __l, __n, __hf, __detail::_Mod_range_hashing(),\n-\t\t     __detail::_Default_ranged_hash(), __eql,\n+\t: _Hashtable(__f, __l, __n, __hf, _H2(), _Hash(), __eql,\n \t\t     __key_extract(), __a)\n \t{ }\n \n@@ -403,9 +400,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t const _H1& __hf = _H1(),\n \t\t const key_equal& __eql = key_equal(),\n \t\t const allocator_type& __a = allocator_type())\n-      : _Hashtable(__l.begin(), __l.end(), __n, __hf,\n-\t\t   __detail::_Mod_range_hashing(),\n-\t\t   __detail::_Default_ranged_hash(), __eql,\n+      : _Hashtable(__l.begin(), __l.end(), __n, __hf, _H2(), _Hash(), __eql,\n \t\t   __key_extract(), __a)\n       { }\n "}]}