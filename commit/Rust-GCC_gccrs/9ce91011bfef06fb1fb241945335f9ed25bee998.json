{"sha": "9ce91011bfef06fb1fb241945335f9ed25bee998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNlOTEwMTFiZmVmMDZmYjFmYjI0MTk0NTMzNWY5ZWQyNWJlZTk5OA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-01-23T13:03:25Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-01-23T13:03:25Z"}, "message": "Clear hardware capabilities on libitm.so with Sun ld\n\n\t* clearcap.map: New file.\n\t* acinclude.m4 (LIBITM_CHECK_LINKER_HWCAP): New test.\n\t* configure.ac: Call it.\n\tClear HWCAP_LDFLAGS if defaulting to -mavx.\n\t* Makefile.am (AM_LDFLAGS): Add $(HWCAP_LDFLAGS)\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r183430", "tree": {"sha": "51a38715a0e7346a965322711a16d29cd887c919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51a38715a0e7346a965322711a16d29cd887c919"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ce91011bfef06fb1fb241945335f9ed25bee998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce91011bfef06fb1fb241945335f9ed25bee998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ce91011bfef06fb1fb241945335f9ed25bee998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ce91011bfef06fb1fb241945335f9ed25bee998/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "191879f9c2ca1c70d34acf91337bdf7bc3229eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/191879f9c2ca1c70d34acf91337bdf7bc3229eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/191879f9c2ca1c70d34acf91337bdf7bc3229eed"}], "stats": {"total": 186, "additions": 177, "deletions": 9}, "files": [{"sha": "2b5e1f404be5a6a35c86604b80e6f79bda073361", "filename": "libitm/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -1,3 +1,14 @@\n+2012-01-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* clearcap.map: New file.\n+\t* acinclude.m4 (LIBITM_CHECK_LINKER_HWCAP): New test.\n+\t* configure.ac: Call it.\n+\tClear HWCAP_LDFLAGS if defaulting to -mavx.\n+\t* Makefile.am (AM_LDFLAGS): Add $(HWCAP_LDFLAGS)\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2012-01-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libitm/51173"}, {"sha": "f1c351c21d5864ff17b2aea9c171307241e6a624", "filename": "libitm/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.am?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -21,7 +21,7 @@ AM_CFLAGS = $(XCFLAGS)\n AM_CXXFLAGS = $(XCFLAGS) -std=gnu++0x -funwind-tables -fno-exceptions \\\n \t-fno-rtti $(abi_version)\n AM_CCASFLAGS = $(XCFLAGS)\n-AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS)\n+AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS) $(HWCAP_LDFLAGS)\n \n toolexeclib_LTLIBRARIES = libitm.la\n nodist_toolexeclib_HEADERS = libitm.spec"}, {"sha": "22baeb8de85e437bf04370b7c9119e65044dcc72", "filename": "libitm/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -241,6 +241,7 @@ EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n GREP = @GREP@\n+HWCAP_LDFLAGS = @HWCAP_LDFLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n@@ -359,7 +360,7 @@ AM_CXXFLAGS = $(XCFLAGS) -std=gnu++0x -funwind-tables -fno-exceptions \\\n \t-fno-rtti $(abi_version)\n \n AM_CCASFLAGS = $(XCFLAGS)\n-AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS)\n+AM_LDFLAGS = $(XLDFLAGS) $(SECTION_LDFLAGS) $(OPT_LDFLAGS) $(HWCAP_LDFLAGS)\n toolexeclib_LTLIBRARIES = libitm.la\n nodist_toolexeclib_HEADERS = libitm.spec\n @LIBITM_BUILD_VERSIONED_SHLIB_FALSE@libitm_version_script = "}, {"sha": "1031f1f12c81d11e953fe6ba7d88855aa3a108d6", "filename": "libitm/acinclude.m4", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Facinclude.m4?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -260,6 +260,36 @@ AC_DEFUN([LIBITM_CHECK_LINKER_FEATURES], [\n ])\n \n \n+dnl\n+dnl Check if the linker used supports linker maps to clear hardware\n+dnl capabilities.  This is only supported by Sun ld at the moment.\n+dnl\n+dnl Defines:\n+dnl  HWCAP_LDFLAGS='-Wl,-M,clearcap.map' if possible\n+dnl  LD (as a side effect of testing)\n+dnl\n+AC_DEFUN([LIBITM_CHECK_LINKER_HWCAP], [\n+  test -z \"$HWCAP_LDFLAGS\" && HWCAP_LDFLAGS=''\n+  AC_REQUIRE([AC_PROG_LD])\n+\n+  ac_save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LFLAGS -Wl,-M,$srcdir/clearcap.map\"\n+\n+  AC_MSG_CHECKING([for ld that supports -Wl,-M,mapfile])\n+  AC_TRY_LINK([], [return 0;], [ac_hwcap_ldflags=yes],[ac_hwcap_ldflags=no])\n+  if test \"$ac_hwcap_ldflags\" = \"yes\"; then\n+    HWCAP_LDFLAGS=\"-Wl,-M,$srcdir/clearcap.map $HWCAP_LDFLAGS\"\n+  fi\n+  AC_MSG_RESULT($ac_hwcap_ldflags)\n+\n+  LDFLAGS=\"$ac_save_LDFLAGS\"\n+\n+  AC_SUBST(HWCAP_LDFLAGS)\n+\n+  AM_CONDITIONAL(HAVE_HWCAP, test $ac_hwcap_ldflags != no)\n+])\n+\n+\n dnl\n dnl Add version tags to symbols in shared library (or not), additionally\n dnl marking other symbols as private/local (or not)."}, {"sha": "bd8189b43ff5feaadef4ac54c5099115449fc599", "filename": "libitm/clearcap.map", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Fclearcap.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Fclearcap.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fclearcap.map?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -0,0 +1,14 @@\n+# Clear hardware capabilities emitted by Sun as: calls to the x86_avx.c\n+# functions are only emitted with -mavx.\n+#\n+# The v1 mapfile syntax has no support for clearing specific capabilities,\n+# so clear everything.\n+#\n+hwcap_1 = V0x0 OVERRIDE;\n+#\n+# If we can assume mapfile v2 syntax, we can specificially clear AVX.\n+#\n+#$mapfile_version 2\n+#CAPABILITY {\n+#\tHW -= AVX;\n+#};"}, {"sha": "5fc8703cd9c24d23b2fb5d7e7baa604cb2466fad", "filename": "libitm/configure", "status": "modified", "additions": 110, "deletions": 4, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -621,6 +621,9 @@ LIBITM_BUILD_VERSIONED_SHLIB_FALSE\n LIBITM_BUILD_VERSIONED_SHLIB_TRUE\n OPT_LDFLAGS\n SECTION_LDFLAGS\n+HAVE_HWCAP_FALSE\n+HAVE_HWCAP_TRUE\n+HWCAP_LDFLAGS\n libtool_VERSION\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -2225,6 +2228,51 @@ rm -f conftest.val\n   return $ac_retval\n \n } # ac_fn_c_compute_int\n+\n+# ac_fn_c_check_decl LINENO SYMBOL VAR\n+# ------------------------------------\n+# Tests whether SYMBOL is declared, setting cache variable VAR accordingly.\n+ac_fn_c_check_decl ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  as_decl_name=`echo $2|sed 's/ *(.*//'`\n+  as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\n+$as_echo_n \"checking whether $as_decl_name is declared... \" >&6; }\n+if { as_var=$3; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$4\n+int\n+main ()\n+{\n+#ifndef $as_decl_name\n+#ifdef __cplusplus\n+  (void) $as_decl_use;\n+#else\n+  (void) $as_decl_name;\n+#endif\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$3=yes\"\n+else\n+  eval \"$3=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+eval ac_res=\\$$3\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+\n+} # ac_fn_c_check_decl\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -11722,7 +11770,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11725 \"configure\"\n+#line 11773 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11828,7 +11876,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11831 \"configure\"\n+#line 11879 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16452,7 +16500,7 @@ $as_echo \"#define HAVE_TLS 1\" >>confdefs.h\n \n   fi\n \n-# See what sort of export controls are availible.\n+# See what sort of export controls are available.\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the target supports hidden visibility\" >&5\n $as_echo_n \"checking whether the target supports hidden visibility... \" >&6; }\n@@ -16559,6 +16607,8 @@ $as_echo \"#define HAVE_ATTRIBUTE_ALIAS 1\" >>confdefs.h\n \n   fi\n \n+# Check linker hardware capability support.\n+\n \n # Check whether --with-gnu-ld was given.\n if test \"${with_gnu_ld+set}\" = set; then :\n@@ -16669,6 +16719,59 @@ with_gnu_ld=$lt_cv_prog_gnu_ld\n \n \n \n+  test -z \"$HWCAP_LDFLAGS\" && HWCAP_LDFLAGS=''\n+\n+\n+  ac_save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LFLAGS -Wl,-M,$srcdir/clearcap.map\"\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ld that supports -Wl,-M,mapfile\" >&5\n+$as_echo_n \"checking for ld that supports -Wl,-M,mapfile... \" >&6; }\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_hwcap_ldflags=yes\n+else\n+  ac_hwcap_ldflags=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  if test \"$ac_hwcap_ldflags\" = \"yes\"; then\n+    HWCAP_LDFLAGS=\"-Wl,-M,$srcdir/clearcap.map $HWCAP_LDFLAGS\"\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_hwcap_ldflags\" >&5\n+$as_echo \"$ac_hwcap_ldflags\" >&6; }\n+\n+  LDFLAGS=\"$ac_save_LDFLAGS\"\n+\n+\n+\n+   if test $ac_hwcap_ldflags != no; then\n+  HAVE_HWCAP_TRUE=\n+  HAVE_HWCAP_FALSE='#'\n+else\n+  HAVE_HWCAP_TRUE='#'\n+  HAVE_HWCAP_FALSE=\n+fi\n+\n+\n+# If defaulting to -mavx, don't clear hwcaps.\n+ac_fn_c_check_decl \"$LINENO\" \"__AVX__\" \"ac_cv_have_decl___AVX__\" \"$ac_includes_default\"\n+if test \"x$ac_cv_have_decl___AVX__\" = x\"\"yes; then :\n+  HWCAP_LDFLAGS=''\n+fi\n+\n+\n+\n   # If we're not using GNU ld, then there's no point in even trying these\n   # tests.  Check for that first.  We should have already tested for gld\n   # by now (in libtool), but require it now just to be safe...\n@@ -16964,7 +17067,6 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: versioning on shared library symbols is $enable_symvers\" >&5\n $as_echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n-\n if test $enable_symvers = gnu; then\n \n $as_echo \"#define LIBITM_GNU_SYMBOL_VERSIONING 1\" >>confdefs.h\n@@ -17540,6 +17642,10 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n \n+if test -z \"${HAVE_HWCAP_TRUE}\" && test -z \"${HAVE_HWCAP_FALSE}\"; then\n+  as_fn_error \"conditional \\\"HAVE_HWCAP\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_TRUE}\" && test -z \"${LIBITM_BUILD_VERSIONED_SHLIB_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBITM_BUILD_VERSIONED_SHLIB\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "7b54371fa8897ee8bbf78f4d9f1ce737f27337ac", "filename": "libitm/configure.ac", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfigure.ac?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -1,5 +1,5 @@\n # Process this file with autoreconf to produce a configure script.\n-#   Copyright (C) 2011 Free Software Foundation, Inc.\n+#   Copyright (C) 2011, 2012 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -208,12 +208,17 @@ GCC_LINUX_FUTEX(:)\n # See if we support thread-local storage.\n GCC_CHECK_TLS\n \n-# See what sort of export controls are availible.\n+# See what sort of export controls are available.\n LIBITM_CHECK_ATTRIBUTE_VISIBILITY\n LIBITM_CHECK_ATTRIBUTE_DLLEXPORT\n LIBITM_CHECK_ATTRIBUTE_ALIAS\n-LIBITM_ENABLE_SYMVERS\n \n+# Check linker hardware capability support.\n+LIBITM_CHECK_LINKER_HWCAP\n+# If defaulting to -mavx, don't clear hwcaps.\n+AC_CHECK_DECL([__AVX__], [HWCAP_LDFLAGS=''])\n+\n+LIBITM_ENABLE_SYMVERS\n if test $enable_symvers = gnu; then\n   AC_DEFINE(LIBITM_GNU_SYMBOL_VERSIONING, 1,\n \t    [Define to 1 if GNU symbol versioning is used for libitm.])"}, {"sha": "094e44de51aa8574e2e788eae416d057523bf10a", "filename": "libitm/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ce91011bfef06fb1fb241945335f9ed25bee998/libitm%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2FMakefile.in?ref=9ce91011bfef06fb1fb241945335f9ed25bee998", "patch": "@@ -95,6 +95,7 @@ EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n FGREP = @FGREP@\n GREP = @GREP@\n+HWCAP_LDFLAGS = @HWCAP_LDFLAGS@\n INSTALL = @INSTALL@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@"}]}