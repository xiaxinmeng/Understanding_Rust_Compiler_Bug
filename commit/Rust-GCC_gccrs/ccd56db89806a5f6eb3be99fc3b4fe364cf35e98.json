{"sha": "ccd56db89806a5f6eb3be99fc3b4fe364cf35e98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkNTZkYjg5ODA2YTVmNmViM2JlOTlmYzNiNGZlMzY0Y2YzNWU5OA==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2019-08-05T21:51:22Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-13T21:58:57Z"}, "message": "In 'gcc/omp-oacc-kernels-decompose.cc', use langhook instead of accessing language-specific decl information\n\n\tgcc/\n\t* omp-oacc-kernels-decompose.cc (maybe_build_inner_data_region):\n\tUse langhook instead of accessing language-specific decl\n\tinformation.", "tree": {"sha": "dae339a0de0c77c6862efa163d8d7050a22eec25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dae339a0de0c77c6862efa163d8d7050a22eec25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccd56db89806a5f6eb3be99fc3b4fe364cf35e98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd56db89806a5f6eb3be99fc3b4fe364cf35e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccd56db89806a5f6eb3be99fc3b4fe364cf35e98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd56db89806a5f6eb3be99fc3b4fe364cf35e98/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e898ce7997733c29dcab9c3c62ca102c7f9fa6eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e898ce7997733c29dcab9c3c62ca102c7f9fa6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e898ce7997733c29dcab9c3c62ca102c7f9fa6eb"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "baad1b9a3482d3c448056be203ceda6d35bf928f", "filename": "gcc/omp-oacc-kernels-decompose.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccd56db89806a5f6eb3be99fc3b4fe364cf35e98/gcc%2Fomp-oacc-kernels-decompose.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccd56db89806a5f6eb3be99fc3b4fe364cf35e98/gcc%2Fomp-oacc-kernels-decompose.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-oacc-kernels-decompose.cc?ref=ccd56db89806a5f6eb3be99fc3b4fe364cf35e98", "patch": "@@ -25,7 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"backend.h\"\n #include \"target.h\"\n #include \"tree.h\"\n-#include \"cp/cp-tree.h\"\n+#include \"langhooks.h\"\n #include \"gimple.h\"\n #include \"tree-pass.h\"\n #include \"cgraph.h\"\n@@ -792,6 +792,12 @@ static gimple *\n maybe_build_inner_data_region (location_t loc, gimple *body,\n \t\t\t       tree inner_bind_vars, gimple *inner_cleanup)\n {\n+  /* Is this an instantiation of a template?  (In this case, we don't care what\n+     the generic decl is - just whether the function decl has one.)  */\n+  bool generic_inst_p\n+    = (lang_hooks.decls.get_generic_function_decl (current_function_decl)\n+       != NULL);\n+\n   /* Build data 'create (var)' clauses for these local variables.\n      Below we will add these to a data region enclosing the entire body\n      of the decomposed kernels region.  */\n@@ -802,8 +808,7 @@ maybe_build_inner_data_region (location_t loc, gimple *body,\n       next = TREE_CHAIN (v);\n       if (DECL_ARTIFICIAL (v)\n \t  || TREE_CODE (v) == CONST_DECL\n-\t  || (DECL_LANG_SPECIFIC (current_function_decl)\n-\t      && DECL_TEMPLATE_INSTANTIATION (current_function_decl)))\n+\t  || generic_inst_p)\n \t{\n \t  /* If this is an artificial temporary, it need not be mapped.  We\n \t     move its declaration into the bind inside the data region."}]}