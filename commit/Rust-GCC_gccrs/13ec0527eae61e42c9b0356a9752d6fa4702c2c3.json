{"sha": "13ec0527eae61e42c9b0356a9752d6fa4702c2c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNlYzA1MjdlYWU2MWU0MmM5YjAzNTZhOTc1MmQ2ZmE0NzAyYzJjMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-08-02T21:41:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-08-02T21:41:58Z"}, "message": "sparc.c (sparc_emit_membar_for_model): Add the implied StoreLoad barrier for atomic operations if before.\n\n\t* config/sparc/sparc.c (sparc_emit_membar_for_model) <SMM_TSO>: Add\n\tthe implied StoreLoad barrier for atomic operations if before.\n\nFrom-SVN: r201450", "tree": {"sha": "bcb6148b7d9d28bb66be04f13d7efe19d28bfb32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcb6148b7d9d28bb66be04f13d7efe19d28bfb32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13ec0527eae61e42c9b0356a9752d6fa4702c2c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ec0527eae61e42c9b0356a9752d6fa4702c2c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ec0527eae61e42c9b0356a9752d6fa4702c2c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ec0527eae61e42c9b0356a9752d6fa4702c2c3/comments", "author": null, "committer": null, "parents": [{"sha": "a572c4549742bb0876335f3be4c5a76fac555454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a572c4549742bb0876335f3be4c5a76fac555454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a572c4549742bb0876335f3be4c5a76fac555454"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "85ef86bc5948dee6fbff9494fd0d2b4d6175148d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec0527eae61e42c9b0356a9752d6fa4702c2c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec0527eae61e42c9b0356a9752d6fa4702c2c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13ec0527eae61e42c9b0356a9752d6fa4702c2c3", "patch": "@@ -1,3 +1,8 @@\n+2013-08-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.c (sparc_emit_membar_for_model) <SMM_TSO>: Add\n+\tthe implied StoreLoad barrier for atomic operations if before.\n+\n 2013-08-02  Jan Hubicka  <jh@suse.cz>\n \t    Martin Liska  <marxin.liska@gmail.com>\n "}, {"sha": "87cfacaa72cd2d98c38d53ce611d61b7f5f54bbb", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13ec0527eae61e42c9b0356a9752d6fa4702c2c3/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13ec0527eae61e42c9b0356a9752d6fa4702c2c3/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=13ec0527eae61e42c9b0356a9752d6fa4702c2c3", "patch": "@@ -11318,6 +11318,11 @@ sparc_emit_membar_for_model (enum memmodel model,\n       /* Total Store Ordering: all memory transactions with store semantics\n \t are followed by an implied StoreStore.  */\n       implied |= StoreStore;\n+\n+      /* If we're not looking for a raw barrer (before+after), then atomic\n+\t operations get the benefit of being both load and store.  */\n+      if (load_store == 3 && before_after == 1)\n+\timplied |= StoreLoad;\n       /* FALLTHRU */\n \n     case SMM_PSO:"}]}