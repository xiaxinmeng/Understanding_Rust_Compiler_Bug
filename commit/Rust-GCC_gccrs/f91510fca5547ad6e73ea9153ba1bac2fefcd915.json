{"sha": "f91510fca5547ad6e73ea9153ba1bac2fefcd915", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjkxNTEwZmNhNTU0N2FkNmU3M2VhOTE1M2JhMWJhYzJmZWZjZDkxNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-09T14:54:58Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-09T14:54:58Z"}, "message": "[multiple changes]\n\n2012-03-09  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* a-direct.adb: Do not strip the trailing directory separator\n\tfrom path, as this is already done inside Normalize_Pathname;\n\tdoing it again produces the wrong result on Windows for the\n\tdrive's root dir (i.e. \"X:\\\" becomes \"X:\").\n\n2012-03-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_attr.adb, freeze.adb, sem_attr.adb, aspects.adb, aspects.ads,\n\tsem_ch13.adb, snames.ads-tmpl (Exp_Attr.Expand_N_Attribute_Reference):\n\tAdd Attribute_Scalar_Storage_Order.\n\t(Sem_Attr.Analyze_Attribute, Eval_Attribute): Ditto.\n\t(Aspects): Add Aspect_Scalar_Storage_Order (Snames): Add\n\tName_Scalar_Storage_Order and Attribute_Scalar_Storage_Order.\n\t(Sem_Ch13.Analyze_Attribute_Definition_Clause): Add processing\n\tfor Scalar_Storage_Order.\n\t(Freeze): If Scalar_Storage_Order is specified, check that it\n\tis compatible with Bit_Order.\n\nFrom-SVN: r185142", "tree": {"sha": "6a98d02215b9f3fd2baa49ed97d699ac869f1708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a98d02215b9f3fd2baa49ed97d699ac869f1708"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f91510fca5547ad6e73ea9153ba1bac2fefcd915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91510fca5547ad6e73ea9153ba1bac2fefcd915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91510fca5547ad6e73ea9153ba1bac2fefcd915", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91510fca5547ad6e73ea9153ba1bac2fefcd915/comments", "author": null, "committer": null, "parents": [{"sha": "a1fc903a3f2f5eb03776b500f22115eb466d70c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1fc903a3f2f5eb03776b500f22115eb466d70c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1fc903a3f2f5eb03776b500f22115eb466d70c6"}], "stats": {"total": 173, "additions": 140, "deletions": 33}, "files": [{"sha": "90f87ddf670c67e43ef0c61b9cdabdf93824ca63", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -1,3 +1,23 @@\n+2012-03-09  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* a-direct.adb: Do not strip the trailing directory separator\n+\tfrom path, as this is already done inside Normalize_Pathname;\n+\tdoing it again produces the wrong result on Windows for the\n+\tdrive's root dir (i.e. \"X:\\\" becomes \"X:\").\n+\n+2012-03-09  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_attr.adb, freeze.adb, sem_attr.adb, aspects.adb, aspects.ads,\n+\tsem_ch13.adb, snames.ads-tmpl (Exp_Attr.Expand_N_Attribute_Reference):\n+\tAdd Attribute_Scalar_Storage_Order.\n+\t(Sem_Attr.Analyze_Attribute, Eval_Attribute): Ditto.\n+\t(Aspects): Add Aspect_Scalar_Storage_Order (Snames): Add\n+\tName_Scalar_Storage_Order and Attribute_Scalar_Storage_Order.\n+\t(Sem_Ch13.Analyze_Attribute_Definition_Clause): Add processing\n+\tfor Scalar_Storage_Order.\n+\t(Freeze): If Scalar_Storage_Order is specified, check that it\n+\tis compatible with Bit_Order.\n+\n 2012-03-09  Robert Dewar  <dewar@adacore.com>\n \n \t* s-osinte-linux.ads, sem_util.adb, s-taprop-linux.adb, exp_ch4.adb,"}, {"sha": "88e1d72078f07a24aaf862e542b94987e5493669", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -514,18 +514,10 @@ package body Ada.Directories is\n    begin\n       Local_Get_Current_Dir (Buffer'Address, Path_Len'Address);\n \n-      declare\n-         --  We need to resolve links because of A.16(47), since we must not\n-         --  return alternative names for files\n-         Cur : constant String := Normalize_Pathname (Buffer (1 .. Path_Len));\n+      --  We need to resolve links because of A.16(47), since we must not\n+      --  return alternative names for files\n+      return Normalize_Pathname (Buffer (1 .. Path_Len));\n \n-      begin\n-         if Cur'Length > 1 and then Cur (Cur'Last) = Dir_Separator then\n-            return Cur (1 .. Cur'Last - 1);\n-         else\n-            return Cur;\n-         end if;\n-      end;\n    end Current_Directory;\n \n    ----------------------"}, {"sha": "51f468c7889d47da64c7d230cec31241806b805b", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -278,6 +278,7 @@ package body Aspects is\n     Aspect_Pure_12                      => Aspect_Pure_12,\n     Aspect_Remote_Call_Interface        => Aspect_Remote_Call_Interface,\n     Aspect_Remote_Types                 => Aspect_Remote_Types,\n+    Aspect_Scalar_Storage_Order         => Aspect_Scalar_Storage_Order,\n     Aspect_Shared_Passive               => Aspect_Shared_Passive,\n     Aspect_Universal_Data               => Aspect_Universal_Data,\n     Aspect_Input                        => Aspect_Input,"}, {"sha": "84548a9d20d483af5e3a57ac16669d03ac624697", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -74,6 +74,7 @@ package Aspects is\n       Aspect_Predicate,                     -- GNAT\n       Aspect_Priority,\n       Aspect_Read,\n+      Aspect_Scalar_Storage_Order,          -- GNAT\n       Aspect_Simple_Storage_Pool,           -- GNAT\n       Aspect_Size,\n       Aspect_Small,\n@@ -188,6 +189,7 @@ package Aspects is\n                              Aspect_Pure_Function            => True,\n                              Aspect_Remote_Access_Type       => True,\n                              Aspect_Shared                   => True,\n+                             Aspect_Scalar_Storage_Order     => True,\n                              Aspect_Simple_Storage_Pool      => True,\n                              Aspect_Simple_Storage_Pool_Type => True,\n                              Aspect_Suppress_Debug_Info      => True,\n@@ -281,6 +283,7 @@ package Aspects is\n                         Aspect_Predicate               => Expression,\n                         Aspect_Priority                => Expression,\n                         Aspect_Read                    => Name,\n+                        Aspect_Scalar_Storage_Order    => Expression,\n                         Aspect_Simple_Storage_Pool     => Name,\n                         Aspect_Size                    => Expression,\n                         Aspect_Small                   => Expression,\n@@ -367,6 +370,7 @@ package Aspects is\n      Aspect_Remote_Access_Type           => Name_Remote_Access_Type,\n      Aspect_Remote_Call_Interface        => Name_Remote_Call_Interface,\n      Aspect_Remote_Types                 => Name_Remote_Types,\n+     Aspect_Scalar_Storage_Order         => Name_Scalar_Storage_Order,\n      Aspect_Shared                       => Name_Shared,\n      Aspect_Shared_Passive               => Name_Shared_Passive,\n      Aspect_Simple_Storage_Pool          => Name_Simple_Storage_Pool,"}, {"sha": "4f67ef97dce50796c6c3c5226fea871181da07d5", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -5672,7 +5672,8 @@ package body Exp_Attr is\n            Attribute_Definite                     |\n            Attribute_Null_Parameter               |\n            Attribute_Passed_By_Reference          |\n-           Attribute_Pool_Address                 =>\n+           Attribute_Pool_Address                 |\n+           Attribute_Scalar_Storage_Order         =>\n          null;\n \n       --  The following attributes are also handled by the back end, but return"}, {"sha": "51e87acfa2518d585e086139ffd90c731f56ef90", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -2129,6 +2129,28 @@ package body Freeze is\n             Next_Entity (Comp);\n          end loop;\n \n+         --  Check compatibility of Scalar_Storage_Order with Bit_Order, if the\n+         --  former is specified.\n+\n+         ADC := Get_Attribute_Definition_Clause\n+                  (Rec, Attribute_Scalar_Storage_Order);\n+\n+         if Present (ADC)\n+              and then\n+            Reverse_Bit_Order (Rec) /= Reverse_Storage_Order (Rec)\n+         then\n+            if Bytes_Big_Endian = not Reverse_Storage_Order (Rec) then\n+               Error_Msg_N\n+                 (\"Scalar_Storage_Order High_Order_First is inconsistent with\"\n+                  & \" Bit_Order\", ADC);\n+            else\n+               Error_Msg_N\n+                 (\"Scalar_Storage_Order Low_Order_First is inconsistent with\"\n+                  & \" Bit_Order\", ADC);\n+\n+            end if;\n+         end if;\n+\n          --  Deal with Bit_Order aspect specifying a non-default bit order\n \n          if Reverse_Bit_Order (Rec) and then Base_Type (Rec) = Rec then"}, {"sha": "3df48228deadf3cad614eb4c108cd6dacb4ae5e5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -4442,6 +4442,35 @@ package body Sem_Attr is\n          Check_Object_Reference (E1);\n          Set_Etype (N, Standard_Boolean);\n \n+      --------------------------\n+      -- Scalar_Storage_Order --\n+      --------------------------\n+\n+      when Attribute_Scalar_Storage_Order => Scalar_Storage_Order :\n+      begin\n+         Check_E0;\n+         Check_Type;\n+\n+         if not Is_Record_Type (P_Type) then\n+            Error_Attr_P (\"prefix of % attribute must be record type\");\n+         end if;\n+\n+         if Bytes_Big_Endian xor Reverse_Storage_Order (P_Type) then\n+            Rewrite (N,\n+              New_Occurrence_Of (RTE (RE_High_Order_First), Loc));\n+         else\n+            Rewrite (N,\n+              New_Occurrence_Of (RTE (RE_Low_Order_First), Loc));\n+         end if;\n+\n+         Set_Etype (N, RTE (RE_Bit_Order));\n+         Resolve (N);\n+\n+         --  Reset incorrect indication of staticness\n+\n+         Set_Is_Static_Expression (N, False);\n+      end Scalar_Storage_Order;\n+\n       -----------\n       -- Scale --\n       -----------\n@@ -7963,6 +7992,7 @@ package body Sem_Attr is\n            Attribute_Priority                   |\n            Attribute_Read                       |\n            Attribute_Result                     |\n+           Attribute_Scalar_Storage_Order       |\n            Attribute_Simple_Storage_Pool        |\n            Attribute_Storage_Pool               |\n            Attribute_Storage_Size               |"}, {"sha": "2a9255849680f607022d99ba1d311d3d7268bf0d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 54, "deletions": 19, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -1064,24 +1064,25 @@ package body Sem_Ch13 is\n \n                --  Aspects corresponding to attribute definition clauses\n \n-               when Aspect_Address             |\n-                    Aspect_Alignment           |\n-                    Aspect_Bit_Order           |\n-                    Aspect_Component_Size      |\n-                    Aspect_External_Tag        |\n-                    Aspect_Input               |\n-                    Aspect_Machine_Radix       |\n-                    Aspect_Object_Size         |\n-                    Aspect_Output              |\n-                    Aspect_Read                |\n-                    Aspect_Size                |\n-                    Aspect_Small               |\n-                    Aspect_Simple_Storage_Pool |\n-                    Aspect_Storage_Pool        |\n-                    Aspect_Storage_Size        |\n-                    Aspect_Stream_Size         |\n-                    Aspect_Value_Size          |\n-                    Aspect_Write               =>\n+               when Aspect_Address              |\n+                    Aspect_Alignment            |\n+                    Aspect_Bit_Order            |\n+                    Aspect_Component_Size       |\n+                    Aspect_External_Tag         |\n+                    Aspect_Input                |\n+                    Aspect_Machine_Radix        |\n+                    Aspect_Object_Size          |\n+                    Aspect_Output               |\n+                    Aspect_Read                 |\n+                    Aspect_Scalar_Storage_Order |\n+                    Aspect_Size                 |\n+                    Aspect_Small                |\n+                    Aspect_Simple_Storage_Pool  |\n+                    Aspect_Storage_Pool         |\n+                    Aspect_Storage_Size         |\n+                    Aspect_Stream_Size          |\n+                    Aspect_Value_Size           |\n+                    Aspect_Write                =>\n \n                   --  Construct the attribute definition clause\n \n@@ -2989,6 +2990,40 @@ package body Sem_Ch13 is\n             Analyze_Stream_TSS_Definition (TSS_Stream_Read);\n             Set_Has_Specified_Stream_Read (Ent);\n \n+         --------------------------\n+         -- Scalar_Storage_Order --\n+         --------------------------\n+\n+         --  Scalar_Storage_Order attribute definition clause\n+\n+         when Attribute_Scalar_Storage_Order => Scalar_Storage_Order : declare\n+         begin\n+            if not Is_Record_Type (U_Ent) then\n+               Error_Msg_N\n+                 (\"Scalar_Storage_Order can only be defined for record type\",\n+                  Nam);\n+\n+            elsif Duplicate_Clause then\n+               null;\n+\n+            else\n+               Analyze_And_Resolve (Expr, RTE (RE_Bit_Order));\n+\n+               if Etype (Expr) = Any_Type then\n+                  return;\n+\n+               elsif not Is_Static_Expression (Expr) then\n+                  Flag_Non_Static_Expr\n+                    (\"Scalar_Storage_Order requires static expression!\", Expr);\n+\n+               else\n+                  if (Expr_Value (Expr) = 0) /= Bytes_Big_Endian then\n+                     Set_Reverse_Storage_Order (U_Ent, True);\n+                  end if;\n+               end if;\n+            end if;\n+         end Scalar_Storage_Order;\n+\n          ----------\n          -- Size --\n          ----------\n@@ -6147,7 +6182,7 @@ package body Sem_Ch13 is\n          when Aspect_Address =>\n             T := RTE (RE_Address);\n \n-         when Aspect_Bit_Order =>\n+         when Aspect_Bit_Order | Aspect_Scalar_Storage_Order =>\n             T := RTE (RE_Bit_Order);\n \n          when Aspect_CPU =>"}, {"sha": "26cb3d9b605b3b3046dad9040cd55b3ac2537194", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f91510fca5547ad6e73ea9153ba1bac2fefcd915/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=f91510fca5547ad6e73ea9153ba1bac2fefcd915", "patch": "@@ -120,7 +120,7 @@ package Snames is\n    Name_uY : constant Name_Id := First_Name_Id + Character'Pos ('Y');\n    Name_uZ : constant Name_Id := First_Name_Id + Character'Pos ('Z');\n \n-   --  Note: the following table is read by the utility program XSNAMES and\n+   --  Note: the following table is read by the utility program XSNAMES, and\n    --  its format should not be changed without coordinating with this program.\n \n    N : constant Name_Id := First_Name_Id + 256;\n@@ -826,6 +826,7 @@ package Snames is\n    Name_Safe_Last                      : constant Name_Id := N + $;\n    Name_Safe_Small                     : constant Name_Id := N + $; -- Ada 83\n    Name_Same_Storage                   : constant Name_Id := N + $; -- Ada 12\n+   Name_Scalar_Storage_Order           : constant Name_Id := N + $; -- GNAT\n    Name_Scale                          : constant Name_Id := N + $;\n    Name_Scaling                        : constant Name_Id := N + $;\n    Name_Signed_Zeros                   : constant Name_Id := N + $;\n@@ -1387,6 +1388,7 @@ package Snames is\n       Attribute_Safe_Last,\n       Attribute_Safe_Small,\n       Attribute_Same_Storage,\n+      Attribute_Scalar_Storage_Order,\n       Attribute_Scale,\n       Attribute_Scaling,\n       Attribute_Signed_Zeros,"}]}