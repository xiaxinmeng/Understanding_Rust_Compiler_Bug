{"sha": "4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZmYWZkODYyMDlhYzIzZTE4YzNjOWUwYmY0YWM1YjNlMGQ2NWUwZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T11:15:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T11:15:30Z"}, "message": "[multiple changes]\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb (Check_One_Unit): Don't give unused entities\n\twarning for a package which is used as a generic parameter.\n\n2015-01-07  Bob Duff  <duff@adacore.com>\n\n\t* usage.adb (Usage): Correct documentation of\n\t-gnatw.f switches.\n\n2015-01-07  Robert Dewar  <dewar@adacore.com>\n\n\t* s-fileio.adb: Minor reformatting.\n\n2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Instantiate_Object): If formal is an anonymous\n\taccess to subprogram, replace its formals with new entities when\n\tbuilding the object declaration, both if actual is present and\n\twhen it is defaulted.\n\n2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Assignment): If left-hand side is a view\n\tconversion and type of expression has invariant, apply invariant\n\tcheck on expression.\n\n2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Create_Constrained_Components): A call to\n\tGather_Components may detect an error if an inherited discriminant\n\tthat controls a variant is non-static.\n\t* sem_aggr.adb (Resolve_Record_Aggregate, Step 5): The call to\n\tGather_Components may report an error if an inherited discriminant\n\tin a variant in non-static.\n\t* sem_util.adb (Gather_Components): If a non-static discriminant\n\tis inherited do not report error here, but let caller handle it.\n\t(Find_Actual): Small optimization.\n\nFrom-SVN: r219297", "tree": {"sha": "d1c00124910bba060bbbba253510b620a45c52dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1c00124910bba060bbbba253510b620a45c52dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/comments", "author": null, "committer": null, "parents": [{"sha": "91669e7ee545db170cc25c4b2b81867d85120fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91669e7ee545db170cc25c4b2b81867d85120fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91669e7ee545db170cc25c4b2b81867d85120fef"}], "stats": {"total": 250, "additions": 194, "deletions": 56}, "files": [{"sha": "5999da11bee337377fb10a8b040743da62173c45", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -1,3 +1,42 @@\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb (Check_One_Unit): Don't give unused entities\n+\twarning for a package which is used as a generic parameter.\n+\n+2015-01-07  Bob Duff  <duff@adacore.com>\n+\n+\t* usage.adb (Usage): Correct documentation of\n+\t-gnatw.f switches.\n+\n+2015-01-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-fileio.adb: Minor reformatting.\n+\n+2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Object): If formal is an anonymous\n+\taccess to subprogram, replace its formals with new entities when\n+\tbuilding the object declaration, both if actual is present and\n+\twhen it is defaulted.\n+\n+2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Assignment): If left-hand side is a view\n+\tconversion and type of expression has invariant, apply invariant\n+\tcheck on expression.\n+\n+2015-01-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Create_Constrained_Components): A call to\n+\tGather_Components may detect an error if an inherited discriminant\n+\tthat controls a variant is non-static.\n+\t* sem_aggr.adb (Resolve_Record_Aggregate, Step 5): The call to\n+\tGather_Components may report an error if an inherited discriminant\n+\tin a variant in non-static.\n+\t* sem_util.adb (Gather_Components): If a non-static discriminant\n+\tis inherited do not report error here, but let caller handle it.\n+\t(Find_Actual): Small optimization.\n+\n 2015-01-07  Bob Duff  <duff@adacore.com>\n \n \t* usage.adb (Usage): Document -gnatw.f switch."}, {"sha": "1d8882e3ad8b5a303fe1789507a5a24a4727e692", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -213,11 +213,12 @@ package body System.File_IO is\n    -----------\n \n    procedure Close (File_Ptr : access AFCB_Ptr) is\n-      Close_Status : int := 0;\n+      Close_Status : int     := 0;\n       Dup_Strm     : Boolean := False;\n-      File         : AFCB_Ptr renames File_Ptr.all;\n       Errno        : Integer := 0;\n \n+      File : AFCB_Ptr renames File_Ptr.all;\n+\n    begin\n       --  Take a task lock, to protect the global data value Open_Files\n "}, {"sha": "f14381b2ceab41e11a07933fbc87492abf3854b7", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -3984,6 +3984,13 @@ package body Sem_Aggr is\n                      Governed_By   => New_Assoc_List,\n                      Into          => Components,\n                      Report_Errors => Errors_Found);\n+\n+                  if Errors_Found then\n+                     Error_Msg_N\n+                       (\"discriminant controlling variant part is not static\",\n+                        N);\n+                     return;\n+                  end if;\n                end if;\n             end if;\n "}, {"sha": "b7e9343af321959f922eb1433ee7c195afae730c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 43, "deletions": 10, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -4690,7 +4690,10 @@ package body Sem_Ch12 is\n          Set_Parent            (Act_Decl_Id, Parent (Anon_Id));\n          Set_Chars             (Act_Decl_Id, Chars (Defining_Entity (N)));\n          Set_Sloc              (Act_Decl_Id, Sloc (Defining_Entity (N)));\n-         Set_Comes_From_Source (Act_Decl_Id, True);\n+\n+         --  Subprogram instance comes from source only if generic does\n+\n+         Set_Comes_From_Source (Act_Decl_Id, Comes_From_Source (Gen_Unit));\n \n          --  The signature may involve types that are not frozen yet, but the\n          --  subprogram will be frozen at the point the wrapper package is\n@@ -9879,6 +9882,43 @@ package body Sem_Ch12 is\n       Subt_Decl   : Node_Id             := Empty;\n       Subt_Mark   : Node_Id             := Empty;\n \n+      function Copy_Access_Def return Node_Id;\n+      --  If formal is an anonymous access, copy access definition of formal\n+      --  for generated object declaration.\n+\n+      ---------------------\n+      -- Copy_Access_Def --\n+      ---------------------\n+\n+      function Copy_Access_Def return Node_Id is\n+      begin\n+         Def := New_Copy_Tree (Acc_Def);\n+\n+         --  In addition, if formal is an access to subprogram we need to\n+         --  generate new formals for the signature of the default, so that\n+         --  the tree is properly formatted for ASIS use.\n+\n+         if Present (Access_To_Subprogram_Definition (Acc_Def)) then\n+            declare\n+               Par_Spec : Node_Id;\n+            begin\n+               Par_Spec :=\n+                 First (Parameter_Specifications\n+                          (Access_To_Subprogram_Definition (Def)));\n+               while Present (Par_Spec) loop\n+                  Set_Defining_Identifier (Par_Spec,\n+                    Make_Defining_Identifier (Sloc (Acc_Def),\n+                      Chars => Chars (Defining_Identifier (Par_Spec))));\n+                  Next (Par_Spec);\n+               end loop;\n+            end;\n+         end if;\n+\n+         return Def;\n+      end Copy_Access_Def;\n+\n+   --  Start of processing for Instantiate_Object\n+\n    begin\n       --  Formal may be an anonymous access\n \n@@ -10061,7 +10101,7 @@ package body Sem_Ch12 is\n             if Present (Subt_Mark) then\n                Def := New_Copy_Tree (Subt_Mark);\n             else pragma Assert (Present (Acc_Def));\n-               Def := Copy_Separate_Tree (Acc_Def);\n+               Def := Copy_Access_Def;\n             end if;\n \n             Decl_Node :=\n@@ -10142,15 +10182,8 @@ package body Sem_Ch12 is\n \n             if Present (Subt_Mark) then\n                Def := New_Copy (Subt_Mark);\n-\n             else pragma Assert (Present (Acc_Def));\n-\n-               --  If formal is an anonymous access, copy access definition of\n-               --  formal for object declaration.\n-               --  In the case of an access to subprogram we need to\n-               --  generate new formals for the signature of the default.\n-\n-               Def := Copy_Separate_Tree (Acc_Def);\n+               Def := Copy_Access_Def;\n             end if;\n \n             Decl_Node :="}, {"sha": "be69b412d13528b1ad8d9251d62fc2890da975da", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -13887,19 +13887,22 @@ package body Sem_Ch3 is\n       then\n          Collect_Fixed_Components (Typ);\n \n-         Gather_Components (\n-           Typ,\n-           Component_List (Type_Definition (Parent (Parent_Type))),\n-           Governed_By   => Assoc_List,\n-           Into          => Comp_List,\n-           Report_Errors => Errors);\n-         pragma Assert (not Errors);\n+         Gather_Components\n+           (Typ,\n+            Component_List (Type_Definition (Parent (Parent_Type))),\n+            Governed_By   => Assoc_List,\n+            Into          => Comp_List,\n+            Report_Errors => Errors);\n+\n+         --  Note: previously there was a check at this point that no errors\n+         --  were detected. As a consequence of AI05-220 there may be an error\n+         --  if an inherited discriminant that controls a variant has a non-\n+         --  static constraint.\n \n          --  If the tagged derivation has a type extension, collect all the\n          --  new components therein.\n \n-         if Present\n-              (Record_Extension_Part (Type_Definition (Parent (Typ))))\n+         if Present (Record_Extension_Part (Type_Definition (Parent (Typ))))\n          then\n             Old_C := First_Component (Typ);\n             while Present (Old_C) loop"}, {"sha": "5bac8b26f878c76059b1f1c69a8e5c222d672772", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -764,6 +764,18 @@ package body Sem_Ch5 is\n          Set_Referenced_Modified (Lhs, Out_Param => False);\n       end if;\n \n+      --  RM 7.3.2 (12/3)  An assignment to a view conversion (from a type\n+      --  to one of its ancestors) requires an invariant check. Apply check\n+      --  only if expression comes from source, otherwise it will be applied\n+      --  when value is assigned to source entity.\n+\n+      if Nkind (Lhs) = N_Type_Conversion\n+        and then Has_Invariants (Etype (Expression (Lhs)))\n+        and then Comes_From_Source (Expression (Lhs))\n+      then\n+         Insert_After (N, Make_Invariant_Call (Expression (Lhs)));\n+      end if;\n+\n       --  Final step. If left side is an entity, then we may be able to reset\n       --  the current tracked values to new safe values. We only have something\n       --  to do if the left side is an entity name, and expansion has not"}, {"sha": "3ba1085dbca8163c669a155a88bca96252db91c6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -5999,6 +5999,14 @@ package body Sem_Util is\n         and then Is_Overloadable (Entity (Name (Call)))\n         and then not Is_Overloaded (Name (Call))\n       then\n+         --  If node is name in call it is not an actual\n+\n+         if N = Name (Call) then\n+            Call := Empty;\n+            Formal := Empty;\n+            return;\n+         end if;\n+\n          --  Fall here if we are definitely a parameter\n \n          Actual := First_Actual (Call);\n@@ -6626,10 +6634,22 @@ package body Sem_Util is\n       Discrim_Value := Expression (Assoc);\n \n       if not Is_OK_Static_Expression (Discrim_Value) then\n-         Error_Msg_FE\n-           (\"value for discriminant & must be static!\",\n-            Discrim_Value, Discrim);\n-         Why_Not_Static (Discrim_Value);\n+\n+         --  If the variant part is governed by a discriminant of the type\n+         --  this is an error. If the variant part and the discriminant are\n+         --  inherited from an ancestor this is legal (AI05-120) unless the\n+         --  components are being gathered for an aggregate, in which case\n+         --  the caller must check Report_Errors.\n+\n+         if Scope (Original_Record_Component\n+                     ((Entity (First (Choices (Assoc)))))) = Typ\n+         then\n+            Error_Msg_FE\n+              (\"value for discriminant & must be static!\",\n+               Discrim_Value, Discrim);\n+            Why_Not_Static (Discrim_Value);\n+         end if;\n+\n          Report_Errors := True;\n          return;\n       end if;"}, {"sha": "1d0cfe6d325e5a6338e437c5f381cc6322a9583f", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 53, "deletions": 30, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -2457,38 +2457,61 @@ package body Sem_Warn is\n                            elsif Check_System_Aux then\n                               null;\n \n-                           --  Else give the warning\n+                           --  Else the warning may be needed\n \n                            else\n-                              --  Warn if we unreferenced flag set and we have\n-                              --  not had serious errors. The reason we inhibit\n-                              --  the message if there are errors is to prevent\n-                              --  false positives from disabling expansion.\n-\n-                              if not Has_Unreferenced (Entity (Name (Item)))\n-                                and then Serious_Errors_Detected = 0\n-                              then\n-                                 Error_Msg_N -- CODEFIX\n-                                   (\"?u?no entities of & are referenced!\",\n-                                    Name (Item));\n-                              end if;\n-\n-                              --  Look for renamings of this package, and flag\n-                              --  them as well. If the original package has\n-                              --  warnings off, we suppress the warning on the\n-                              --  renaming as well.\n-\n-                              Pack := Find_Package_Renaming (Munite, Lunit);\n-\n-                              if Present (Pack)\n-                                and then not Has_Warnings_Off (Lunit)\n-                                and then not Has_Unreferenced (Pack)\n-                              then\n-                                 Error_Msg_NE -- CODEFIX\n-                                   (\"?u?no entities of & are referenced!\",\n-                                     Unit_Declaration_Node (Pack),\n-                                     Pack);\n-                              end if;\n+                              declare\n+                                 Eitem : constant Entity_Id :=\n+                                           Entity (Name (Item));\n+\n+                              begin\n+                                 --  Warn if we unreferenced flag set and we\n+                                 --  have not had serious errors. The reason we\n+                                 --  inhibit the message if there are errors is\n+                                 --  to prevent false positives from disabling\n+                                 --  expansion.\n+\n+                                 if not Has_Unreferenced (Eitem)\n+                                   and then Serious_Errors_Detected = 0\n+                                 then\n+                                    --  Get possible package renaming\n+\n+                                    Pack :=\n+                                      Find_Package_Renaming (Munite, Lunit);\n+\n+                                    --  No warning if either the package or its\n+                                    --  renaming is used as a generic actual.\n+\n+                                    if Used_As_Generic_Actual (Eitem)\n+                                      or else\n+                                        (Present (Pack)\n+                                          and then\n+                                            Used_As_Generic_Actual (Pack))\n+                                    then\n+                                       exit;\n+                                    end if;\n+\n+                                    --  Here we give the warning\n+\n+                                    Error_Msg_N -- CODEFIX\n+                                      (\"?u?no entities of & are referenced!\",\n+                                       Name (Item));\n+\n+                                    --  Flag renaming of package as well. If\n+                                    --  the original package has warnings off,\n+                                    --  we suppress the warning on the renaming\n+                                    --  as well.\n+\n+                                    if Present (Pack)\n+                                      and then not Has_Warnings_Off (Lunit)\n+                                      and then not Has_Unreferenced (Pack)\n+                                    then\n+                                       Error_Msg_NE -- CODEFIX\n+                                         (\"?u?no entities of& are referenced!\",\n+                                          Unit_Declaration_Node (Pack), Pack);\n+                                    end if;\n+                                 end if;\n+                              end;\n                            end if;\n \n                            exit;"}, {"sha": "803c44d7a51caedc4f3ca52b9c5574284e214b8b", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=4ffafd86209ac23e18c3c9e0bf4ac5b3e0d65e0d", "patch": "@@ -502,7 +502,7 @@ begin\n    Write_Line (\"        f+   turn on warnings for unreferenced formal\");\n    Write_Line (\"        F*   turn off warnings for unreferenced formal\");\n    Write_Line (\"        .f   turn on warnings for suspicious Subp'Access\");\n-   Write_Line (\"        .F   turn off warnings for suspicious Subp'Access\");\n+   Write_Line (\"        .F*  turn off warnings for suspicious Subp'Access\");\n    Write_Line (\"        g*+  turn on warnings for unrecognized pragma\");\n    Write_Line (\"        G    turn off warnings for unrecognized pragma\");\n    Write_Line (\"        .g   turn on GNAT warnings\");"}]}