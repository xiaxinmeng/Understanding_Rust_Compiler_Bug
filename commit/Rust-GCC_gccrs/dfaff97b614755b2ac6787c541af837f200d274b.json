{"sha": "dfaff97b614755b2ac6787c541af837f200d274b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZhZmY5N2I2MTQ3NTViMmFjNjc4N2M1NDFhZjgzN2YyMDBkMjc0Yg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-08-04T08:12:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T08:12:01Z"}, "message": "exp_ch4.adb: Minor reformatting.\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb: Minor reformatting.\n\t* exp_attr.adb: Minor reformatting.\n\nFrom-SVN: r213541", "tree": {"sha": "9da0ae6d5644a04e391e1e64d53a9c1d25d107c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9da0ae6d5644a04e391e1e64d53a9c1d25d107c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfaff97b614755b2ac6787c541af837f200d274b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaff97b614755b2ac6787c541af837f200d274b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfaff97b614755b2ac6787c541af837f200d274b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaff97b614755b2ac6787c541af837f200d274b/comments", "author": null, "committer": null, "parents": [{"sha": "8575023cdc36ca4647811302e329a64e2df81634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8575023cdc36ca4647811302e329a64e2df81634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8575023cdc36ca4647811302e329a64e2df81634"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "d4e1dc8ae3d8ca81cac31e40e5dc81f234029a3d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaff97b614755b2ac6787c541af837f200d274b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaff97b614755b2ac6787c541af837f200d274b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dfaff97b614755b2ac6787c541af837f200d274b", "patch": "@@ -1,3 +1,8 @@\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting.\n+\t* exp_attr.adb: Minor reformatting.\n+\n 2014-08-04  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-fatgen.ads, s-fatgen.adb (S, P): New visible type declarations"}, {"sha": "4e1ba7f5ce8a7ba4fc4d346905c21cd7c6e55c3a", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaff97b614755b2ac6787c541af837f200d274b/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaff97b614755b2ac6787c541af837f200d274b/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=dfaff97b614755b2ac6787c541af837f200d274b", "patch": "@@ -6403,7 +6403,7 @@ package body Exp_Attr is\n          --  code in the floating-point attribute run-time library.\n \n          if Is_Floating_Point_Type (Ptyp) then\n-            declare\n+            Float_Valid : declare\n                Pkg : RE_Id;\n                Ftp : Entity_Id;\n \n@@ -6424,6 +6424,8 @@ package body Exp_Attr is\n                   return Entity (Exp_Name);\n                end Get_Fat_Entity;\n \n+            --  Start of processing for Float_Valid\n+\n             begin\n                case Float_Rep (Btyp) is\n \n@@ -6463,11 +6465,11 @@ package body Exp_Attr is\n                            --  Access to Fat_S\n \n                            Decl : constant Node_Id :=\n-                             Make_Object_Declaration (Loc,\n-                               Defining_Identifier => Temp,\n-                               Aliased_Present     => True,\n-                               Object_Definition   =>\n-                                 New_Occurrence_Of (Ptyp, Loc));\n+                                    Make_Object_Declaration (Loc,\n+                                      Defining_Identifier => Temp,\n+                                      Aliased_Present     => True,\n+                                      Object_Definition   =>\n+                                        New_Occurrence_Of (Ptyp, Loc));\n \n                         begin\n                            Set_Aspect_Specifications (Decl, New_List (\n@@ -6492,6 +6494,7 @@ package body Exp_Attr is\n                                  Expression =>\n                                    Unchecked_Convert_To (Fat_S,\n                                      Relocate_Node (Pref)))),\n+\n                              Suppress => All_Checks);\n \n                            Rewrite (Pref, New_Occurrence_Of (Temp, Loc));\n@@ -6525,7 +6528,7 @@ package body Exp_Attr is\n                           Left_Opnd  => Convert_To (Btyp, Pref),\n                           Right_Opnd => New_Occurrence_Of (Ptyp, Loc))));\n                end if;\n-            end;\n+            end Float_Valid;\n \n          --  Enumeration type with holes\n "}, {"sha": "e0f76fc51167d8758472b4868037e6e709e4c2ca", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaff97b614755b2ac6787c541af837f200d274b/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaff97b614755b2ac6787c541af837f200d274b/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=dfaff97b614755b2ac6787c541af837f200d274b", "patch": "@@ -6496,6 +6496,10 @@ package body Exp_Ch4 is\n          Apply_Arithmetic_Overflow_Check (N);\n          return;\n       end if;\n+\n+      --  Overflow checks for floating-point if -gnateF mode active\n+\n+      Check_Float_Op_Overflow (N);\n    end Expand_N_Op_Add;\n \n    ---------------------\n@@ -6704,6 +6708,10 @@ package body Exp_Ch4 is\n       elsif Is_Integer_Type (Typ) then\n          Apply_Divide_Checks (N);\n       end if;\n+\n+      --  Overflow checks for floating-point if -gnateF mode active\n+\n+      Check_Float_Op_Overflow (N);\n    end Expand_N_Op_Divide;\n \n    --------------------\n@@ -8462,6 +8470,10 @@ package body Exp_Ch4 is\n       elsif Is_Signed_Integer_Type (Etype (N)) then\n          Apply_Arithmetic_Overflow_Check (N);\n       end if;\n+\n+      --  Overflow checks for floating-point if -gnateF mode active\n+\n+      Check_Float_Op_Overflow (N);\n    end Expand_N_Op_Multiply;\n \n    --------------------\n@@ -9187,6 +9199,10 @@ package body Exp_Ch4 is\n       if Is_Signed_Integer_Type (Typ) or else Is_Fixed_Point_Type (Typ) then\n          Apply_Arithmetic_Overflow_Check (N);\n       end if;\n+\n+      --  Overflow checks for floating-point if -gnateF mode active\n+\n+      Check_Float_Op_Overflow (N);\n    end Expand_N_Op_Subtract;\n \n    ---------------------"}]}