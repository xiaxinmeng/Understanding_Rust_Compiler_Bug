{"sha": "68c27b2a702d073e21cd41c0080c849f7a4804ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhjMjdiMmE3MDJkMDczZTIxY2Q0MWMwMDgwYzg0OWY3YTQ4MDRjYQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-05-04T14:13:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-06T14:46:52Z"}, "message": "[Ada] Add assertions on tampering counts\n\ngcc/ada/\n\n\t* libgnat/a-conhel.adb: Assert that tampering counts remain\n\tbetween 0 and 2**31-1.  This makes debugging of\n\tfinalization-related bugs easier.", "tree": {"sha": "6b17c1d79cd1073f8ca379801961c3af200c00de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b17c1d79cd1073f8ca379801961c3af200c00de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68c27b2a702d073e21cd41c0080c849f7a4804ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c27b2a702d073e21cd41c0080c849f7a4804ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68c27b2a702d073e21cd41c0080c849f7a4804ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68c27b2a702d073e21cd41c0080c849f7a4804ca/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "885efc5e70f46c8fe38855815bb37fecc5783046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885efc5e70f46c8fe38855815bb37fecc5783046", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885efc5e70f46c8fe38855815bb37fecc5783046"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "316c866bc3a4796a59f115c1a7706ec2371921b9", "filename": "gcc/ada/libgnat/a-conhel.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68c27b2a702d073e21cd41c0080c849f7a4804ca/gcc%2Fada%2Flibgnat%2Fa-conhel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68c27b2a702d073e21cd41c0080c849f7a4804ca/gcc%2Fada%2Flibgnat%2Fa-conhel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-conhel.adb?ref=68c27b2a702d073e21cd41c0080c849f7a4804ca", "patch": "@@ -27,6 +27,13 @@\n \n package body Ada.Containers.Helpers is\n \n+   Max_Count : constant := 2**31 - 1;\n+   --  Used in assertions below, to make sure the counts don't wrap around.\n+   --  This can help detect bugs in which Adjust and Finalize calls are\n+   --  improperly generated. An extra Decrement could otherwise cause\n+   --  wraparound from 0 to 2**32-1. The highest count seen so far is\n+   --  around 25, so this should be plenty.\n+\n    package body Generic_Implementation is\n \n       use type SAC.Atomic_Unsigned;\n@@ -50,6 +57,7 @@ package body Ada.Containers.Helpers is\n       begin\n          if T_Check then\n             SAC.Increment (T_Counts.Busy);\n+            pragma Assert (T_Counts.Busy <= Max_Count);\n          end if;\n       end Busy;\n \n@@ -112,7 +120,9 @@ package body Ada.Containers.Helpers is\n       begin\n          if T_Check then\n             SAC.Increment (T_Counts.Lock);\n+            pragma Assert (T_Counts.Lock <= Max_Count);\n             SAC.Increment (T_Counts.Busy);\n+            pragma Assert (T_Counts.Busy <= Max_Count);\n          end if;\n       end Lock;\n \n@@ -158,6 +168,7 @@ package body Ada.Containers.Helpers is\n       begin\n          if T_Check then\n             SAC.Decrement (T_Counts.Busy);\n+            pragma Assert (T_Counts.Busy <= Max_Count);\n          end if;\n       end Unbusy;\n \n@@ -169,7 +180,9 @@ package body Ada.Containers.Helpers is\n       begin\n          if T_Check then\n             SAC.Decrement (T_Counts.Lock);\n+            pragma Assert (T_Counts.Lock <= Max_Count);\n             SAC.Decrement (T_Counts.Busy);\n+            pragma Assert (T_Counts.Busy <= Max_Count);\n          end if;\n       end Unlock;\n "}]}