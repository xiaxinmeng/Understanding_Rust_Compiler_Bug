{"sha": "d47d34bb22f756731475ea700d165f4d855d712f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3ZDM0YmIyMmY3NTY3MzE0NzVlYTcwMGQxNjVmNGQ4NTVkNzEyZg==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-07-24T18:06:37Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-07-24T18:06:37Z"}, "message": "re PR target/79041 (aarch64 backend emits R_AARCH64_ADR_PREL_PG_HI21 relocation despite -mpc-relative-literal-loads option being used)\n\nFix PR79041\n\nAs described in PR79041, -mcmodel=large -mpc-relative-literal-loads\nmay be used to avoid generating ADRP/ADD or ADRP/LDR.  However both\ntrunk and GCC7 may still emit ADRP for some constant pool literals.\nFix this by adding a aarch64_pcrelative_literal_loads check.\n\ngcc/\n\tPR target/79041\n\t* config/aarch64/aarch64.c (aarch64_classify_symbol):\n\tAvoid SYMBOL_SMALL_ABSOLUTE for literals with pc-relative literals\ngcc/testsuite/\n\t* gcc.target/aarch64/pr79041-2.c: New test.\n\nFrom-SVN: r250478", "tree": {"sha": "8022ed66e237c03caf3f6178e0821d7d27350ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8022ed66e237c03caf3f6178e0821d7d27350ecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d47d34bb22f756731475ea700d165f4d855d712f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47d34bb22f756731475ea700d165f4d855d712f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47d34bb22f756731475ea700d165f4d855d712f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47d34bb22f756731475ea700d165f4d855d712f/comments", "author": null, "committer": null, "parents": [{"sha": "26bca0ed48bcbd292d08bb2e83276658d6ea5434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26bca0ed48bcbd292d08bb2e83276658d6ea5434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26bca0ed48bcbd292d08bb2e83276658d6ea5434"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "e929c4d50d94bf1b25907ddf8958ffc4a791269c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d47d34bb22f756731475ea700d165f4d855d712f", "patch": "@@ -1,3 +1,9 @@\n+2017-07-24  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/79041\n+\t* config/aarch64/aarch64.c (aarch64_classify_symbol):\n+\tAvoid SYMBOL_SMALL_ABSOLUTE for literals with pc-relative literals.\n+\n 2017-07-24  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000-c.c: Add support for built-in functions"}, {"sha": "d753666ef67fc524260c41f36743df3649a0a98a", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d47d34bb22f756731475ea700d165f4d855d712f", "patch": "@@ -10193,7 +10193,7 @@ aarch64_classify_symbol (rtx x, rtx offset)\n \t  /* This is alright even in PIC code as the constant\n \t     pool reference is always PC relative and within\n \t     the same translation unit.  */\n-\t  if (CONSTANT_POOL_ADDRESS_P (x))\n+\t  if (!aarch64_pcrelative_literal_loads && CONSTANT_POOL_ADDRESS_P (x))\n \t    return SYMBOL_SMALL_ABSOLUTE;\n \t  else\n \t    return SYMBOL_FORCE_TO_MEM;"}, {"sha": "de46deffdcfb30ff6660594002799eef723bc111", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d47d34bb22f756731475ea700d165f4d855d712f", "patch": "@@ -1,3 +1,8 @@\n+2017-07-24  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR target/79041\n+\t* gcc.target/aarch64/pr79041-2.c: New test.\n+\n 2017-07-24  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-3-p9-runnable.c: Add new test file for"}, {"sha": "e7899725bad2b770f8488a07f99792113275bdf2", "filename": "gcc/testsuite/gcc.target/aarch64/pr79041-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr79041-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47d34bb22f756731475ea700d165f4d855d712f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr79041-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr79041-2.c?ref=d47d34bb22f756731475ea700d165f4d855d712f", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcmodel=large -mpc-relative-literal-loads\" } */\n+\n+__int128\n+t (void)\n+{\n+  return (__int128)1 << 80;\n+}\n+\n+/* { dg-final { scan-assembler \"adr\" } } */"}]}