{"sha": "4738c10dc60f8391036e7e8e63a7b14d1bf7201d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDczOGMxMGRjNjBmODM5MTAzNmU3ZThlNjNhN2IxNGQxYmY3MjAxZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:48:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-12T22:48:36Z"}, "message": "(put_var_into_stack): For CONCAT case, order of placement depends on\nFRAME_GROWS_DOWNWARD, not STACK_GROWS_DOWNWARD.\n\nFrom-SVN: r10344", "tree": {"sha": "f719a62934bbbd8b5d38f6d8e8b242f26a83d2b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f719a62934bbbd8b5d38f6d8e8b242f26a83d2b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4738c10dc60f8391036e7e8e63a7b14d1bf7201d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4738c10dc60f8391036e7e8e63a7b14d1bf7201d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4738c10dc60f8391036e7e8e63a7b14d1bf7201d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4738c10dc60f8391036e7e8e63a7b14d1bf7201d/comments", "author": null, "committer": null, "parents": [{"sha": "e7e5df70c8596075dc327addb1ebb10b36c58bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e5df70c8596075dc327addb1ebb10b36c58bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e5df70c8596075dc327addb1ebb10b36c58bab"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0f6805a3976ef35bd85f7e2174eca7651e0bf45a", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4738c10dc60f8391036e7e8e63a7b14d1bf7201d/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4738c10dc60f8391036e7e8e63a7b14d1bf7201d/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=4738c10dc60f8391036e7e8e63a7b14d1bf7201d", "patch": "@@ -1267,7 +1267,7 @@ put_var_into_stack (decl)\n \t We do it so they end up consecutive.  */\n       enum machine_mode part_mode = GET_MODE (XEXP (reg, 0));\n       tree part_type = TREE_TYPE (TREE_TYPE (decl));\n-#ifdef STACK_GROWS_DOWNWARD\n+#ifdef FRAME_GROWS_DOWNWARD\n       /* Since part 0 should have a lower address, do it second.  */\n       put_reg_into_stack (function, XEXP (reg, 1),\n \t\t\t  part_type, part_mode, part_mode);"}]}