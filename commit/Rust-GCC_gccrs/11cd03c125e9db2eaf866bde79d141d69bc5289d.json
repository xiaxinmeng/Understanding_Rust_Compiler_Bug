{"sha": "11cd03c125e9db2eaf866bde79d141d69bc5289d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFjZDAzYzEyNWU5ZGIyZWFmODY2YmRlNzlkMTQxZDY5YmM1Mjg5ZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2007-10-01T19:56:46Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2007-10-01T19:56:46Z"}, "message": "check_jni_methods.sh: Don't depend on diff -b ignoring a single trailing whitespace.\n\n* scripts/check_jni_methods.sh: Don't depend on diff -b ignoring\na single trailing whitespace.\n\nFrom-SVN: r128910", "tree": {"sha": "aa9536cd2c16e15b1f1484597cfe1e6646b9d8d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa9536cd2c16e15b1f1484597cfe1e6646b9d8d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11cd03c125e9db2eaf866bde79d141d69bc5289d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11cd03c125e9db2eaf866bde79d141d69bc5289d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11cd03c125e9db2eaf866bde79d141d69bc5289d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11cd03c125e9db2eaf866bde79d141d69bc5289d/comments", "author": null, "committer": null, "parents": [{"sha": "96cbc7348fbf93470d31eebca7daa1aa0108a092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96cbc7348fbf93470d31eebca7daa1aa0108a092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96cbc7348fbf93470d31eebca7daa1aa0108a092"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "c24ad7b80841fef01b64f1a5bc9dcbea22701bfa", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11cd03c125e9db2eaf866bde79d141d69bc5289d/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11cd03c125e9db2eaf866bde79d141d69bc5289d/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=11cd03c125e9db2eaf866bde79d141d69bc5289d", "patch": "@@ -1,3 +1,8 @@\n+2007-10-01  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* scripts/check_jni_methods.sh: Don't depend on diff -b ignoring\n+\ta single trailing whitespace.\n+\n 2007-08-22  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \n \t* java/util/EnumSet.java:"}, {"sha": "90a7735baf82a5cab94f02d74a6b0a922375fc12", "filename": "libjava/classpath/scripts/check_jni_methods.sh", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11cd03c125e9db2eaf866bde79d141d69bc5289d/libjava%2Fclasspath%2Fscripts%2Fcheck_jni_methods.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11cd03c125e9db2eaf866bde79d141d69bc5289d/libjava%2Fclasspath%2Fscripts%2Fcheck_jni_methods.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fscripts%2Fcheck_jni_methods.sh?ref=11cd03c125e9db2eaf866bde79d141d69bc5289d", "patch": "@@ -16,16 +16,16 @@ grep -h '^JNIEXPORT .* Java_' include/*.h | \\\n # Find all methods in the JNI C source files.\n find native/jni -name \\*.c | \\\n \txargs grep -h '^Java_' | \\\n-        LC_ALL=C sed -e 's,^\\(Java_[a-z_A-Z0-9]*\\) *(.*$,\\1,' > $TMPFILE2\n+        LC_ALL=C sed -e 's,^\\(Java_[a-z_A-Z0-9]*\\).*$,\\1,' > $TMPFILE2\n # Or in the the C++ files. (Note that cpp doesn't follow gnu conventions atm)\n # So we try to match both GNU style and some other style.\n find native/jni -name \\*.cpp | \\\n \txargs grep -h '^Java_' | \\\n-        LC_ALL=C sed -e 's,^\\(Java_[a-z_A-Z0-9]*\\) *(.*$,\\1,' >> $TMPFILE2\n+        LC_ALL=C sed -e 's,^\\(Java_[a-z_A-Z0-9]*\\).*$,\\1,' >> $TMPFILE2\n find native/jni -name \\*.cpp | \\\n \txargs egrep -h '^(JNIEXPORT .* JNICALL )?Java_' | \\\n \tcut -f4 -d\\  | \\\n-        LC_ALL=C sed -e 's,^\\JNIEXPORT .* JNICALL \\(Java_[a-z_A-Z0-9]*\\) *(.*$,\\1,' >> $TMPFILE2\n+        LC_ALL=C sed -e 's,^\\JNIEXPORT .* JNICALL \\(Java_[a-z_A-Z0-9]*\\).*$,\\1,' >> $TMPFILE2\n mv $TMPFILE2 $TMPFILE3\n sort $TMPFILE3 | uniq > $TMPFILE2\n rm $TMPFILE3\n@@ -40,15 +40,15 @@ EOF\n # Compare again silently.\n # Use fgrep and direct the output to /dev/null for compatibility with older\n # grep instead of using the non portable -q.\n-if diff -b -U 0 $TMPFILE $TMPFILE2 | grep '^[+-]Java' | \\\n+if diff -U 0 $TMPFILE $TMPFILE2 | grep '^[+-]Java' | \\\n     fgrep -v -f $TMPFILE3 > /dev/null;\n then\n   PROBLEM=1\n   echo \"Found a problem with the JNI methods declared and implemented.\"\n   echo \"(-) missing in implementation, (+) missing in header files\"\n \n   # Compare the found method lists.\n-  diff -b -U 0 $TMPFILE $TMPFILE2  | grep '^[+-]Java' | fgrep -v -f $TMPFILE3\n+  diff -U 0 $TMPFILE $TMPFILE2  | grep '^[+-]Java' | fgrep -v -f $TMPFILE3\n fi\n \n # Cleanup."}]}