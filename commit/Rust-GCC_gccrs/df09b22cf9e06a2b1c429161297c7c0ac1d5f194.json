{"sha": "df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwOWIyMmNmOWUwNmEyYjFjNDI5MTYxMjk3YzdjMGFjMWQ1ZjE5NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-05-24T09:40:28Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-05-24T09:40:28Z"}, "message": "gigi.h (gnat_init_gcc_fp): Declare.\n\n\t* gcc-interface/gigi.h (gnat_init_gcc_fp): Declare.\n\t* gcc-interface/trans.c (gigi): Call it.\n\t* gcc-interface/misc.c (gnat_init_gcc_fp): New function.\n\nFrom-SVN: r199287", "tree": {"sha": "12f4a2f0a23773760691343fad2addd89912572a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f4a2f0a23773760691343fad2addd89912572a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/comments", "author": null, "committer": null, "parents": [{"sha": "0e24192cc9ae888874557a6caeace67131724c03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e24192cc9ae888874557a6caeace67131724c03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e24192cc9ae888874557a6caeace67131724c03"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "c072ddf10bb00ec199273ab41567d2b3a657c66b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "patch": "@@ -1,3 +1,9 @@\n+2013-05-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/gigi.h (gnat_init_gcc_fp): Declare.\n+\t* gcc-interface/trans.c (gigi): Call it.\n+\t* gcc-interface/misc.c (gnat_init_gcc_fp): New function.\n+\n 2013-05-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/gigi.h (enum inline_status_t): New type."}, {"sha": "e2cc1466cab9e03e6717ab65a07e1f342c4b51a5", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "patch": "@@ -502,7 +502,13 @@ extern tree get_block_jmpbuf_decl (void);\n    for location information and flag propagation.  */\n extern void gnat_pushdecl (tree decl, Node_Id gnat_node);\n \n+/* Initialize the GCC support for exception handling.  */\n extern void gnat_init_gcc_eh (void);\n+\n+/* Initialize the GCC support for floating-point operations.  */\n+extern void gnat_init_gcc_fp (void);\n+\n+/* Install the builtin functions we might need.  */\n extern void gnat_install_builtins (void);\n \n /* Return an integer type with the number of bits of precision given by"}, {"sha": "7b168df4e038c45ea02e0dca984314d0f61b6dbe", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                           C Implementation File                          *\n  *                                                                          *\n- *          Copyright (C) 1992-2012, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2013, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -346,9 +346,7 @@ gnat_init (void)\n   return true;\n }\n \n-/* If we are using the GCC mechanism to process exception handling, we\n-   have to register the personality routine for Ada and to initialize\n-   various language dependent hooks.  */\n+/* Initialize the GCC support for exception handling.  */\n \n void\n gnat_init_gcc_eh (void)\n@@ -381,6 +379,28 @@ gnat_init_gcc_eh (void)\n   init_eh ();\n }\n \n+/* Initialize the GCC support for floating-point operations.  */\n+\n+void\n+gnat_init_gcc_fp (void)\n+{\n+  /* Disable FP optimizations that ignore the signedness of zero if\n+     S'Signed_Zeros is True, but don't override the user if not.  */\n+  if (Signed_Zeros_On_Target)\n+    flag_signed_zeros = 1;\n+  else if (!global_options_set.x_flag_signed_zeros)\n+    flag_signed_zeros = 0;\n+\n+  /* Assume that FP operations can trap if S'Machine_Overflow is True,\n+     but don't override the user if not.\n+\n+     ??? Alpha/VMS enables FP traps without declaring it.  */\n+  if (Machine_Overflows_On_Target || TARGET_ABI_OPEN_VMS)\n+    flag_trapping_math = 1;\n+  else if (!global_options_set.x_flag_trapping_math)\n+    flag_trapping_math = 0;\n+}\n+\n /* Print language-specific items in declaration NODE.  */\n \n static void"}, {"sha": "6c9407e4e3513290bd888b379ebcf5886d5ffcd5", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df09b22cf9e06a2b1c429161297c7c0ac1d5f194/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=df09b22cf9e06a2b1c429161297c7c0ac1d5f194", "patch": "@@ -677,6 +677,9 @@ gigi (Node_Id gnat_root, int max_gnat_node, int number_name ATTRIBUTE_UNUSED,\n   if (Exception_Mechanism == Back_End_Exceptions)\n     gnat_init_gcc_eh ();\n \n+  /* Initialize the GCC support for FP operations.  */\n+  gnat_init_gcc_fp ();\n+\n   /* Now translate the compilation unit proper.  */\n   Compilation_Unit_to_gnu (gnat_root);\n "}]}