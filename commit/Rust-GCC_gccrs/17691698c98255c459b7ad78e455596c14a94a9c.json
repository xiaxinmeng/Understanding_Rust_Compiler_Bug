{"sha": "17691698c98255c459b7ad78e455596c14a94a9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc2OTE2OThjOTgyNTVjNDU5YjdhZDc4ZTQ1NTU5NmMxNGE5NGE5Yw==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2017-08-22T13:43:27Z"}, "committer": {"name": "Sebastian Huber", "email": "sh@gcc.gnu.org", "date": "2017-08-22T13:43:27Z"}, "message": "[PowerPC/RTEMS] Enable -mcmodel option\n\ngcc/\n\t* config.gcc (powerpc-*-rtems*): Add rs6000/linux64.opt.\n\t* config/rs6000/rtems.h (ASM_PREFERRED_EH_DATA_FORMAT): New define.\n\t(DOT_SYMBOLS): Likewise.\n\t(MINIMAL_TOC_SECTION_ASM_OP): Likewise.\n\t(RELOCATABLE_NEEDS_FIXUP): Likewise.\n\t(RS6000_ABI_NAME): Likewise.\n\t(TARGET_CMODEL): Likewise.\n\t(TOC_SECTION_ASM_OP): Likewise.\n\t(SET_CMODEL): New macro.\n\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Evaluate cmodel options.\n\nFrom-SVN: r251275", "tree": {"sha": "c12451d662f25939ab33934ef8baa06b394ab836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c12451d662f25939ab33934ef8baa06b394ab836"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17691698c98255c459b7ad78e455596c14a94a9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17691698c98255c459b7ad78e455596c14a94a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17691698c98255c459b7ad78e455596c14a94a9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17691698c98255c459b7ad78e455596c14a94a9c/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd0835ce2d9d7f3450a5550497f313a1595ea68e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd0835ce2d9d7f3450a5550497f313a1595ea68e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd0835ce2d9d7f3450a5550497f313a1595ea68e"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "ab85c074f24241bc0bc359c013bc40d346a91b47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17691698c98255c459b7ad78e455596c14a94a9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17691698c98255c459b7ad78e455596c14a94a9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17691698c98255c459b7ad78e455596c14a94a9c", "patch": "@@ -1,3 +1,16 @@\n+2017-08-22  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* config.gcc (powerpc-*-rtems*): Add rs6000/linux64.opt.\n+\t* config/rs6000/rtems.h (ASM_PREFERRED_EH_DATA_FORMAT): New define.\n+\t(DOT_SYMBOLS): Likewise.\n+\t(MINIMAL_TOC_SECTION_ASM_OP): Likewise.\n+\t(RELOCATABLE_NEEDS_FIXUP): Likewise.\n+\t(RS6000_ABI_NAME): Likewise.\n+\t(TARGET_CMODEL): Likewise.\n+\t(TOC_SECTION_ASM_OP): Likewise.\n+\t(SET_CMODEL): New macro.\n+\t(SUBSUBTARGET_OVERRIDE_OPTIONS): Evaluate cmodel options.\n+\n 2017-08-22  Richard Biener  <rguenther@suse.de>\n \n \t* tree-inline.c (remap_type_1): Change asserts on TYPE_SIZE[_UNIT]"}, {"sha": "446cab3e257fcdd84526473ae1ddeb2912ee9045", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17691698c98255c459b7ad78e455596c14a94a9c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17691698c98255c459b7ad78e455596c14a94a9c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=17691698c98255c459b7ad78e455596c14a94a9c", "patch": "@@ -2442,7 +2442,7 @@ powerpc-*-rtems*spe*)\n \t;;\n powerpc-*-rtems*)\n \ttm_file=\"rs6000/biarch64.h ${tm_file} dbxelf.h elfos.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/rtems.h rtems.h\"\n-\textra_options=\"${extra_options} rs6000/sysv4.opt\"\n+\textra_options=\"${extra_options} rs6000/sysv4.opt rs6000/linux64.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-rtems rs6000/t-ppccomm\"\n \t;;\n powerpc*-*-linux*spe*)"}, {"sha": "7ea9ebdb77b6a9b7060ad2362318e0e12b9058ae", "filename": "gcc/config/rs6000/rtems.h", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17691698c98255c459b7ad78e455596c14a94a9c/gcc%2Fconfig%2Frs6000%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17691698c98255c459b7ad78e455596c14a94a9c/gcc%2Fconfig%2Frs6000%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frtems.h?ref=17691698c98255c459b7ad78e455596c14a94a9c", "patch": "@@ -37,6 +37,15 @@\n #undef\tTARGET_AIX\n #define\tTARGET_AIX TARGET_64BIT\n \n+/* Simplified copy and paste from linux64.h and freebsd64.h */\n+#undef DOT_SYMBOLS\n+#define DOT_SYMBOLS 0\n+\n+/* Copy and paste from linux64.h and freebsd64.h */\n+#undef TARGET_CMODEL\n+#define TARGET_CMODEL rs6000_current_cmodel\n+#define SET_CMODEL(opt) rs6000_current_cmodel = opt\n+\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n@@ -63,6 +72,15 @@\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n+/* Copy and paste from linux64.h and freebsd64.h */\n+#undef RELOCATABLE_NEEDS_FIXUP\n+#define RELOCATABLE_NEEDS_FIXUP \\\n+  (rs6000_isa_flags & rs6000_isa_flags_explicit & OPTION_MASK_RELOCATABLE)\n+\n+/* Copy and paste from linux64.h */\n+#undef\tRS6000_ABI_NAME\n+#define\tRS6000_ABI_NAME \"linux\"\n+\n /* Copy and paste from linux64.h and freebsd64.h */\n #define INVALID_64BIT \"-m%s not supported in this configuration\"\n \n@@ -95,6 +113,24 @@\n \t      rs6000_isa_flags |= OPTION_MASK_POWERPC64;\t\\\n \t      error (\"-m64 requires a PowerPC64 cpu\");\t\t\\\n \t    }\t\t\t\t\t\t\t\\\n+\t  if ((rs6000_isa_flags_explicit\t\t\t\\\n+\t\t& OPTION_MASK_MINIMAL_TOC) != 0)\t\t\\\n+\t    {\t\t\t\t\t\t\t\\\n+\t      if (global_options_set.x_rs6000_current_cmodel\t\\\n+\t\t  && rs6000_current_cmodel != CMODEL_SMALL)\t\\\n+\t\terror (\"-mcmodel incompatible with other toc options\"); \\\n+\t      SET_CMODEL (CMODEL_SMALL);\t\t\t\\\n+\t    }\t\t\t\t\t\t\t\\\n+\t  else\t\t\t\t\t\t\t\\\n+\t    {\t\t\t\t\t\t\t\\\n+\t      if (!global_options_set.x_rs6000_current_cmodel)\t\\\n+\t\tSET_CMODEL (CMODEL_MEDIUM);\t\t\t\\\n+\t      if (rs6000_current_cmodel != CMODEL_SMALL)\t\\\n+\t\t{\t\t\t\t\t\t\\\n+\t\t  TARGET_NO_FP_IN_TOC = 0;\t\t\t\\\n+\t\t  TARGET_NO_SUM_IN_TOC = 0;\t\t\t\\\n+\t\t}\t\t\t\t\t\t\\\n+\t    }\t\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n@@ -140,6 +176,30 @@\n #undef  RESTORE_FP_SUFFIX\n #define RESTORE_FP_SUFFIX \"\"\n \n+/* Copy and paste from linux64.h and freebsd64.h */\n+#undef\tASM_PREFERRED_EH_DATA_FORMAT\n+#define\tASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL) \\\n+  (TARGET_64BIT || flag_pic\t\t\t\t\t\t\\\n+   ? (((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel\t\t\\\n+      | (TARGET_64BIT ? DW_EH_PE_udata8 : DW_EH_PE_sdata4))\t\t\\\n+   : DW_EH_PE_absptr)\n+\n+/* Copy and paste from linux64.h and freebsd64.h */\n+#undef  TOC_SECTION_ASM_OP\n+#define TOC_SECTION_ASM_OP \\\n+  (TARGET_64BIT\t\t\t\t\t\t\\\n+   ? \"\\t.section\\t\\\".toc\\\",\\\"aw\\\"\"\t\t\t\\\n+   : \"\\t.section\\t\\\".got\\\",\\\"aw\\\"\")\n+\n+/* Copy and paste from linux64.h and freebsd64.h */\n+#undef  MINIMAL_TOC_SECTION_ASM_OP\n+#define MINIMAL_TOC_SECTION_ASM_OP \\\n+  (TARGET_64BIT\t\t\t\t\t\t\\\n+   ? \"\\t.section\\t\\\".toc1\\\",\\\"aw\\\"\"\t\t\t\\\n+   : (flag_pic\t\t\t\t\t\t\\\n+      ? \"\\t.section\\t\\\".got2\\\",\\\"aw\\\"\"\t\t\t\\\n+      : \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\"))\n+\n /* Copy and paste from linux64.h and freebsd64.h */\n #undef\tASM_DECLARE_FUNCTION_SIZE\n #define\tASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)\t\t\t\\"}]}