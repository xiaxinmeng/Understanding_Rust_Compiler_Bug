{"sha": "0c004537ffbedafce28ca062dbcb5951aaa7c289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMwMDQ1MzdmZmJlZGFmY2UyOGNhMDYyZGJjYjU5NTFhYWE3YzI4OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-12T09:29:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-12T09:29:14Z"}, "message": "200x-xx-xx Richard Sandiford <richard@codesourcery.com> Nathan Sidwell <nathan@codesourcery.com>\n\ngcc/\n200x-xx-xx  Richard Sandiford  <richard@codesourcery.com>\n\t    Nathan Sidwell  <nathan@codesourcery.com>\n\n\t* config/m68k/m68k.h (ASM_CPU_SPEC, ASM_SPEC, EXTRA_SPECS)\n\t(SUBTARGET_EXTRA_SPECS): New macros.\n\t* config/m68k/linux.h (ASM_SPEC): Remove CPU flags;\n\tuse %(asm_cpu_spec) instead.\n\t* config/m68k/m68k-none.h (ASM_SPEC): Likewise.\n\t* config/m68k/openbsd.h (ASM_SPEC): Likewise.\n\t* config/m68k/netbsd-elf.h (ASM_SPEC): Likewise.\n\t(EXTRA_SPECS): Rename to...\n\t(SUBTARGET_EXTRA_SPECS): ...this.\n\nCo-Authored-By: Nathan Sidwell <nathan@codesourcery.com>\n\nFrom-SVN: r120712", "tree": {"sha": "dc14beaf3d6a4b96c29b8cb62f3cf7eee3c9296b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc14beaf3d6a4b96c29b8cb62f3cf7eee3c9296b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c004537ffbedafce28ca062dbcb5951aaa7c289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c004537ffbedafce28ca062dbcb5951aaa7c289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c004537ffbedafce28ca062dbcb5951aaa7c289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c004537ffbedafce28ca062dbcb5951aaa7c289/comments", "author": null, "committer": null, "parents": [{"sha": "59fbf3cbc75f1c1bdc1cb643ea327934f0421f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59fbf3cbc75f1c1bdc1cb643ea327934f0421f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59fbf3cbc75f1c1bdc1cb643ea327934f0421f6e"}], "stats": {"total": 66, "additions": 45, "deletions": 21}, "files": [{"sha": "e7ea8d539845dc1e810ed13b88e5142f9710ea17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c004537ffbedafce28ca062dbcb5951aaa7c289", "patch": "@@ -1,3 +1,16 @@\n+2007-01-12  Richard Sandiford  <richard@codesourcery.com>\n+\t    Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (ASM_CPU_SPEC, ASM_SPEC, EXTRA_SPECS)\n+\t(SUBTARGET_EXTRA_SPECS): New macros.\n+\t* config/m68k/linux.h (ASM_SPEC): Remove CPU flags;\n+\tuse %(asm_cpu_spec) instead.\n+\t* config/m68k/m68k-none.h (ASM_SPEC): Likewise.\n+\t* config/m68k/openbsd.h (ASM_SPEC): Likewise.\n+\t* config/m68k/netbsd-elf.h (ASM_SPEC): Likewise.\n+\t(EXTRA_SPECS): Rename to...\n+\t(SUBTARGET_EXTRA_SPECS): ...this.\n+\n 2007-01-12  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Richard Sandiford  <richard@codesourcery.com>\n \t    Julian Brown  <julian@codesourcery.com>"}, {"sha": "b1f9e9771c8941ee99b51f2c327279ad44f66aff", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=0c004537ffbedafce28ca062dbcb5951aaa7c289", "patch": "@@ -23,6 +23,11 @@ Boston, MA 02110-1301, USA.  */\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (68k GNU/Linux with ELF)\");\n \n+/* Add %(asm_cpu_spec) to the svr4.h definition of ASM_SPEC.  */\n+#undef ASM_SPEC\n+#define ASM_SPEC \\\n+  \"%(asm_cpu_spec) %{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*}\"\n+\n /* for 68k machines this only needs to be TRUE for the 68000 */\n \n #undef STRICT_ALIGNMENT\n@@ -85,13 +90,6 @@ Boston, MA 02110-1301, USA.  */\n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n-/* We override the ASM_SPEC from svr4.h because we must pass -m68040 down\n-   to the assembler.  */\n-#undef ASM_SPEC\n-#define ASM_SPEC \\\n-  \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n-%{m68040} %{m68060:-m68040}\"\n-\n /* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate"}, {"sha": "6b30389e9c33d07232d28407faee503db6660cf8", "filename": "gcc/config/m68k/m68k-none.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fm68k-none.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-none.h?ref=0c004537ffbedafce28ca062dbcb5951aaa7c289", "patch": "@@ -18,13 +18,9 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n-/* Pass flags to gas indicating which type of processor we have.  */\n-\n #undef ASM_SPEC\n-#define ASM_SPEC \"\\\n-%{m68851}%{mno-68851}%{m68881}%{mno-68881}%{msoft-float:-mno-68881} %{m68000}%{m68302}%{mc68000}%{m68010}%{m68020}%{mc68020}%{m68030}%{m68040}%{m68020-40:-mc68040} %{m68020-60:-mc68040} %{m68060}%{mcpu32}%{m68332}%{m5200}%{m5206e}%{m528x}%{m5307}%{m5407}%{mcfv4e} \\\n-%{fPIC:--pcrel} %{fpic:--pcrel} %{msep-data:--pcrel} %{mid-shared-library:--pcrel} \\\n-\"\n+#define ASM_SPEC \"%(asm_cpu_spec) %{fPIC:--pcrel} %{fpic:--pcrel} \\\n+ %{msep-data:--pcrel} %{mid-shared-library:--pcrel}\"\n \n /* cc1/cc1plus always receives all the -m flags. If the specs strings above \n    are consistent with the flags in m68k.opt, there should be no need for"}, {"sha": "de8e27cc3fd2009ef74d770c13d6a3a9f595e5b1", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=0c004537ffbedafce28ca062dbcb5951aaa7c289", "patch": "@@ -39,6 +39,25 @@ Boston, MA 02110-1301, USA.  */\n %{!m68332:%{!m5200:%{!m5206e:%{!m528x:%{!m5307:%{!m5407:%{!mcfv4e:\\\n -%(VALUE)}}}}}}}}}}}}}}}}}}}\" },\n \n+/* Pass flags to gas indicating which type of processor we have.  This\n+   can be simplified when we can rely on the assembler supporting .cpu\n+   and .arch directives.  */\n+\n+#define ASM_CPU_SPEC \"\\\n+%{m68851}%{mno-68851} %{m68881}%{mno-68881} %{msoft-float:-mno-float} \\\n+%{m68000}%{m68302}%{mc68000}%{m68010}%{m68020}%{mc68020}%{m68030}\\\n+%{m68040}%{m68020-40:-m68040}%{m68020-60:-m68040}\\\n+%{m68060}%{mcpu32}%{m68332}%{m5200}%{m5206e}%{m528x}%{m5307}%{m5407}%{mcfv4e}\\\n+\"\n+\n+#define ASM_SPEC \"%(asm_cpu_spec)\"\n+\n+#define EXTRA_SPECS\t\t\t\t\t\\\n+  { \"asm_cpu_spec\", ASM_CPU_SPEC },\t\t\t\\\n+  SUBTARGET_EXTRA_SPECS\n+\n+#define SUBTARGET_EXTRA_SPECS\n+\n /* Note that some other tm.h files include this one and then override\n    many of the definitions that relate to assembler syntax.  */\n "}, {"sha": "c8dd1b9af34e51c1aeafe7faaa9672106a6cb54a", "filename": "gcc/config/m68k/netbsd-elf.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fnetbsd-elf.h?ref=0c004537ffbedafce28ca062dbcb5951aaa7c289", "patch": "@@ -46,7 +46,8 @@ Boston, MA 02110-1301, USA.  */\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 80\n #endif\n \n-#define EXTRA_SPECS \\\n+#undef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS \\\n   { \"netbsd_entry_point\",   NETBSD_ENTRY_POINT },\n \n \n@@ -66,13 +67,11 @@ Boston, MA 02110-1301, USA.  */\n #define CPP_SPEC NETBSD_CPP_SPEC\n \n \n-/* Provide an ASM_SPEC appropriate for NetBSD m68k ELF targets.  We pass\n-   on some CPU options, as well as PIC code generation options.  */\n+/* Provide an ASM_SPEC appropriate for NetBSD m68k ELF targets.  We need\n+   to passn PIC code generation options.  */\n \n #undef ASM_SPEC\n-#define ASM_SPEC \\\n-  \"%{m68010} %{m68020} %{m68030} %{m68040} %{m68060} \\\n-   %{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n+#define ASM_SPEC \"%(asm_cpu_spec) %{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n \n #define AS_NEEDS_DASH_FOR_PIPED_INPUT\n "}, {"sha": "2bc0af5ec19526bdd01f69772f07e1a933d52939", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c004537ffbedafce28ca062dbcb5951aaa7c289/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=0c004537ffbedafce28ca062dbcb5951aaa7c289", "patch": "@@ -34,9 +34,8 @@ Boston, MA 02110-1301, USA.  */\n #undef CPP_SPEC\n #define CPP_SPEC \"%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}\"\n \n-/* m68k as needs to know about the processor subtype.  */\n #undef ASM_SPEC\n-#define ASM_SPEC \"%{m68030} %{m68040} %{m68060} %{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n+#define ASM_SPEC \"%(asm_cpu_spec) %{fpic|fpie:-k} %{fPIC|fPIE:-k -K}\"\n \n #define AS_NEEDS_DASH_FOR_PIPED_INPUT\n "}]}