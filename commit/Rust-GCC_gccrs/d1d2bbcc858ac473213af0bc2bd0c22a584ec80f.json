{"sha": "d1d2bbcc858ac473213af0bc2bd0c22a584ec80f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFkMmJiY2M4NThhYzQ3MzIxM2FmMGJjMmJkMGMyMmE1ODRlYzgwZg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-05-11T14:44:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-07T16:23:16Z"}, "message": "[Ada] Replace obsolete calls that use global name buffer\n\ngcc/ada/\n\n\t* uname.adb (Get_Body_Name, Get_Parent_Body_Name,\n\tGet_Parent_Spec_Name, Get_Spec_Name, Is_Child_Name,\n\tIs_Body_Name, Is_Spec_Name, Name_To_Unit_Name): Use a local\n\tinstead of the global buffer.", "tree": {"sha": "07d9349b4c9a757137c2602205580c16c71b582e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07d9349b4c9a757137c2602205580c16c71b582e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1d2bbcc858ac473213af0bc2bd0c22a584ec80f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d2bbcc858ac473213af0bc2bd0c22a584ec80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1d2bbcc858ac473213af0bc2bd0c22a584ec80f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d2bbcc858ac473213af0bc2bd0c22a584ec80f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a547eea2669af282dfca4f3c38362f109b285308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a547eea2669af282dfca4f3c38362f109b285308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a547eea2669af282dfca4f3c38362f109b285308"}], "stats": {"total": 100, "additions": 53, "deletions": 47}, "files": [{"sha": "23911802a6f0f62f913f1f534caebe703be044d0", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 53, "deletions": 47, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1d2bbcc858ac473213af0bc2bd0c22a584ec80f/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1d2bbcc858ac473213af0bc2bd0c22a584ec80f/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=d1d2bbcc858ac473213af0bc2bd0c22a584ec80f", "patch": "@@ -47,15 +47,18 @@ package body Uname is\n    -------------------\n \n    function Get_Body_Name (N : Unit_Name_Type) return Unit_Name_Type is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n+      Append (Buffer, N);\n \n-      pragma Assert (Name_Len > 2\n-                       and then Name_Buffer (Name_Len - 1) = '%'\n-                       and then Name_Buffer (Name_Len) = 's');\n+      pragma Assert\n+        (Buffer.Length > 2\n+         and then Buffer.Chars (Buffer.Length - 1) = '%'\n+         and then Buffer.Chars (Buffer.Length) = 's');\n \n-      Name_Buffer (Name_Len) := 'b';\n-      return Name_Find;\n+      Buffer.Chars (Buffer.Length) := 'b';\n+\n+      return Name_Find (Buffer);\n    end Get_Body_Name;\n \n    -----------------------------------\n@@ -111,58 +114,61 @@ package body Uname is\n    --------------------------\n \n    function Get_Parent_Body_Name (N : Unit_Name_Type) return Unit_Name_Type is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n+      Append (Buffer, N);\n \n-      while Name_Buffer (Name_Len) /= '.' loop\n-         pragma Assert (Name_Len > 1); -- not a child or subunit name\n-         Name_Len := Name_Len - 1;\n+      while Buffer.Chars (Buffer.Length) /= '.' loop\n+         pragma Assert (Buffer.Length > 1); -- not a child or subunit name\n+         Buffer.Length := Buffer.Length - 1;\n       end loop;\n \n-      Name_Buffer (Name_Len) := '%';\n-      Name_Len := Name_Len + 1;\n-      Name_Buffer (Name_Len) := 'b';\n-      return Name_Find;\n+      Buffer.Chars (Buffer.Length) := '%';\n+      Append (Buffer, 'b');\n \n+      return Name_Find (Buffer);\n    end Get_Parent_Body_Name;\n \n    --------------------------\n    -- Get_Parent_Spec_Name --\n    --------------------------\n \n    function Get_Parent_Spec_Name (N : Unit_Name_Type) return Unit_Name_Type is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n+      Append (Buffer, N);\n \n-      while Name_Buffer (Name_Len) /= '.' loop\n-         if Name_Len = 1 then\n+      while Buffer.Chars (Buffer.Length) /= '.' loop\n+         if Buffer.Length = 1 then\n             return No_Unit_Name;\n          else\n-            Name_Len := Name_Len - 1;\n+            Buffer.Length := Buffer.Length - 1;\n          end if;\n       end loop;\n \n-      Name_Buffer (Name_Len) := '%';\n-      Name_Len := Name_Len + 1;\n-      Name_Buffer (Name_Len) := 's';\n-      return Name_Find;\n+      Buffer.Chars (Buffer.Length) := '%';\n+      Append (Buffer, 's');\n \n+      return Name_Find (Buffer);\n    end Get_Parent_Spec_Name;\n \n    -------------------\n    -- Get_Spec_Name --\n    -------------------\n \n    function Get_Spec_Name (N : Unit_Name_Type) return Unit_Name_Type is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n+      Append (Buffer, N);\n \n-      pragma Assert (Name_Len > 2\n-                       and then Name_Buffer (Name_Len - 1) = '%'\n-                       and then Name_Buffer (Name_Len) = 'b');\n+      pragma Assert\n+        (Buffer.Length > 2\n+         and then Buffer.Chars (Buffer.Length - 1) = '%'\n+         and then Buffer.Chars (Buffer.Length) = 'b');\n \n-      Name_Buffer (Name_Len) := 's';\n-      return Name_Find;\n+      Buffer.Chars (Buffer.Length) := 's';\n+\n+      return Name_Find (Buffer);\n    end Get_Spec_Name;\n \n    -------------------\n@@ -489,29 +495,29 @@ package body Uname is\n    ------------------\n \n    function Is_Body_Name (N : Unit_Name_Type) return Boolean is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n-      return Name_Len > 2\n-        and then Name_Buffer (Name_Len - 1) = '%'\n-        and then Name_Buffer (Name_Len) = 'b';\n+      Append (Buffer, N);\n+      return Buffer.Length > 2\n+        and then Buffer.Chars (Buffer.Length - 1) = '%'\n+        and then Buffer.Chars (Buffer.Length) = 'b';\n    end Is_Body_Name;\n \n    -------------------\n    -- Is_Child_Name --\n    -------------------\n \n    function Is_Child_Name (N : Unit_Name_Type) return Boolean is\n-      J : Natural;\n+      Buffer : Bounded_String;\n \n    begin\n-      Get_Name_String (N);\n-      J := Name_Len;\n+      Append (Buffer, N);\n \n-      while Name_Buffer (J) /= '.' loop\n-         if J = 1 then\n+      while Buffer.Chars (Buffer.Length) /= '.' loop\n+         if Buffer.Length = 1 then\n             return False; -- not a child or subunit name\n          else\n-            J := J - 1;\n+            Buffer.Length := Buffer.Length - 1;\n          end if;\n       end loop;\n \n@@ -589,24 +595,24 @@ package body Uname is\n    ------------------\n \n    function Is_Spec_Name (N : Unit_Name_Type) return Boolean is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n-      return Name_Len > 2\n-        and then Name_Buffer (Name_Len - 1) = '%'\n-        and then Name_Buffer (Name_Len) = 's';\n+      Append (Buffer, N);\n+      return Buffer.Length > 2\n+        and then Buffer.Chars (Buffer.Length - 1) = '%'\n+        and then Buffer.Chars (Buffer.Length) = 's';\n    end Is_Spec_Name;\n \n    -----------------------\n    -- Name_To_Unit_Name --\n    -----------------------\n \n    function Name_To_Unit_Name (N : Name_Id) return Unit_Name_Type is\n+      Buffer : Bounded_String;\n    begin\n-      Get_Name_String (N);\n-      Name_Buffer (Name_Len + 1) := '%';\n-      Name_Buffer (Name_Len + 2) := 's';\n-      Name_Len := Name_Len + 2;\n-      return Name_Find;\n+      Append (Buffer, N);\n+      Append (Buffer, \"%s\");\n+      return Name_Find (Buffer);\n    end Name_To_Unit_Name;\n \n    ---------------"}]}