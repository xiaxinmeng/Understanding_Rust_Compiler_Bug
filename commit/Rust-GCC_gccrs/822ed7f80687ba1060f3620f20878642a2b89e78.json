{"sha": "822ed7f80687ba1060f3620f20878642a2b89e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyZWQ3ZjgwNjg3YmExMDYwZjM2MjBmMjA4Nzg2NDJhMmI4OWU3OA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-07-31T04:52:36Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-07-31T04:52:36Z"}, "message": "gc.h (GC_CreateThread): Declare with WINAPI attribute.\n\n\t* include/gc.h (GC_CreateThread): Declare with WINAPI\n\tattribute.\n\t* win32_threads.c (GC_CreateThread): Make definitions consistent\n\twith declaration.  Cast &thread_table[i].handle to PHANDLE\n\tin call to DuplicateHandle\n\t(thread_start): Declare as static.\n\nFrom-SVN: r69990", "tree": {"sha": "80c5f1f071b174114f7b403b765d7a05135d75f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80c5f1f071b174114f7b403b765d7a05135d75f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/822ed7f80687ba1060f3620f20878642a2b89e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822ed7f80687ba1060f3620f20878642a2b89e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822ed7f80687ba1060f3620f20878642a2b89e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822ed7f80687ba1060f3620f20878642a2b89e78/comments", "author": null, "committer": null, "parents": [{"sha": "1aa0a5f67e3ce88116bff98bd677a8e93ec183e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa0a5f67e3ce88116bff98bd677a8e93ec183e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa0a5f67e3ce88116bff98bd677a8e93ec183e3"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "7e0d91098297a67b723040e0b7701604ca76b4f8", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822ed7f80687ba1060f3620f20878642a2b89e78/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822ed7f80687ba1060f3620f20878642a2b89e78/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=822ed7f80687ba1060f3620f20878642a2b89e78", "patch": "@@ -1,3 +1,12 @@\n+2003-07-31  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* include/gc.h (GC_CreateThread): Declare with WINAPI\n+\tattribute. \n+\t* win32_threads.c (GC_CreateThread): Make definitions consistent\n+\twith declaration.  Cast &thread_table[i].handle to PHANDLE\n+\tin call to DuplicateHandle\n+\t(thread_start): Declare as static.\n+\n 2003-07-30  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* dyn_load.c: Define __private_extern__ to match Apple's system "}, {"sha": "4444e991ff3bb759e7cbaa48a11a819e558c08e8", "filename": "boehm-gc/include/gc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822ed7f80687ba1060f3620f20878642a2b89e78/boehm-gc%2Finclude%2Fgc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822ed7f80687ba1060f3620f20878642a2b89e78/boehm-gc%2Finclude%2Fgc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fgc.h?ref=822ed7f80687ba1060f3620f20878642a2b89e78", "patch": "@@ -895,7 +895,7 @@ extern void GC_thr_init();\t/* Needed for Solaris/X86\t*/\n    * and does then use DllMain to keep track of thread creations.  But new code\n    * should be built to call GC_CreateThread.\n    */\n-  GC_API HANDLE GC_CreateThread(\n+   GC_API HANDLE WINAPI GC_CreateThread(\n       LPSECURITY_ATTRIBUTES lpThreadAttributes,\n       DWORD dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress,\n       LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId );"}, {"sha": "10cfef9d9eb073eaffff9febff9411cf07a6e20d", "filename": "boehm-gc/win32_threads.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822ed7f80687ba1060f3620f20878642a2b89e78/boehm-gc%2Fwin32_threads.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822ed7f80687ba1060f3620f20878642a2b89e78/boehm-gc%2Fwin32_threads.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fwin32_threads.c?ref=822ed7f80687ba1060f3620f20878642a2b89e78", "patch": "@@ -376,7 +376,7 @@ void GC_get_next_stack(char *start, char **lo, char **hi)\n \n /* We register threads from DllMain */\n \n-GC_API HANDLE GC_CreateThread(\n+GC_API HANDLE WINAPI GC_CreateThread(\n     LPSECURITY_ATTRIBUTES lpThreadAttributes, \n     DWORD dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, \n     LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId )\n@@ -397,9 +397,9 @@ typedef struct {\n     LPVOID param;\n } thread_args;\n \n-DWORD WINAPI thread_start(LPVOID arg);\n+static DWORD WINAPI thread_start(LPVOID arg);\n \n-HANDLE WINAPI GC_CreateThread(\n+GC_API HANDLE WINAPI GC_CreateThread(\n     LPSECURITY_ATTRIBUTES lpThreadAttributes, \n     DWORD dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, \n     LPVOID lpParameter, DWORD dwCreationFlags, LPDWORD lpThreadId )\n@@ -445,7 +445,7 @@ HANDLE WINAPI GC_CreateThread(\n \t\t    if (!DuplicateHandle(GetCurrentProcess(),\n \t\t\t\t \t thread_h,\n \t\t\t\t\t GetCurrentProcess(),\n-\t\t\t \t\t &thread_table[i].handle,\n+\t\t\t \t\t (PHANDLE) &thread_table[i].handle,\n \t\t\t  \t\t 0,\n \t\t\t\t\t 0,\n \t\t\t\t\t DUPLICATE_SAME_ACCESS)) {"}]}