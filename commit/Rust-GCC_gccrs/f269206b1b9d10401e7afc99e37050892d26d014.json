{"sha": "f269206b1b9d10401e7afc99e37050892d26d014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI2OTIwNmIxYjlkMTA0MDFlN2FmYzk5ZTM3MDUwODkyZDI2ZDAxNA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-06-30T08:07:01Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-06-30T08:07:01Z"}, "message": "[testsuite/guality] Use relative line numbers in gdb-test\n\n2018-06-30  Tom de Vries  <tdevries@suse.de>\n\n\t* gcc.dg/guality/pr45882.c (foo): Use relative line numbers.\n\t* lib/gcc-dg.exp (dg-final): New proc.\n\t* lib/gcc-gdb-test.exp (gdb-test): Add and handle additional line number\n\targument.\n\nFrom-SVN: r262269", "tree": {"sha": "43a31dc417b7a5a6b7708262ebb74c8cf1959aff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43a31dc417b7a5a6b7708262ebb74c8cf1959aff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f269206b1b9d10401e7afc99e37050892d26d014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f269206b1b9d10401e7afc99e37050892d26d014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f269206b1b9d10401e7afc99e37050892d26d014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f269206b1b9d10401e7afc99e37050892d26d014/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da34ca3f122f369f1121608c726c33400f0aced5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da34ca3f122f369f1121608c726c33400f0aced5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da34ca3f122f369f1121608c726c33400f0aced5"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "da2abc1937ed7c447e154ca1cd131971f675f521", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f269206b1b9d10401e7afc99e37050892d26d014", "patch": "@@ -1,3 +1,10 @@\n+2018-06-30  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.dg/guality/pr45882.c (foo): Use relative line numbers.\n+\t* lib/gcc-dg.exp (dg-final): New proc.\n+\t* lib/gcc-gdb-test.exp (gdb-test): Add and handle additional line number\n+\targument.\n+\n 2018-06-29  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/strlenopt-46.c: Define strnlen for targets like Solaris 10"}, {"sha": "02d74389ea05e829c2d7cf141c4a8458faeb47fa", "filename": "gcc/testsuite/gcc.dg/guality/pr45882.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45882.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45882.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45882.c?ref=f269206b1b9d10401e7afc99e37050892d26d014", "patch": "@@ -9,11 +9,11 @@ volatile short int v;\n __attribute__((noinline,noclone,used)) int\n foo (int i, int j)\n {\n-  int b = i;\t\t/* { dg-final { gdb-test bpline \"b\" \"7\" } } */\n-  int c = i + 4;\t/* { dg-final { gdb-test bpline \"c\" \"11\" } } */\n-  int d = a[i];\t\t/* { dg-final { gdb-test bpline \"d\" \"112\" } } */\n-  int e = a[i + 6];\t/* { dg-final { gdb-test bpline \"e\" \"142\" } } */\n-  ++v;\t\t\t/* { dg-line bpline } */\n+  int b = i;\t\t/* { dg-final { gdb-test .+4 \"b\" \"7\" } } */\n+  int c = i + 4;\t/* { dg-final { gdb-test .+3 \"c\" \"11\" } } */\n+  int d = a[i];\t\t/* { dg-final { gdb-test .+2 \"d\" \"112\" } } */\n+  int e = a[i + 6];\t/* { dg-final { gdb-test .+1 \"e\" \"142\" } } */\n+  ++v;\n   return ++j;\n }\n "}, {"sha": "6f88ce2213e3613b5430fec471990fdbf79c6aef", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=f269206b1b9d10401e7afc99e37050892d26d014", "patch": "@@ -114,6 +114,26 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n \t[concat $DG_TORTURE_OPTIONS $ADDITIONAL_TORTURE_OPTIONS]\n }\n \n+proc dg-final { args } {\n+    upvar dg-final-code final-code\n+\n+    if { [llength $args] > 2 } {\n+\terror \"[lindex $args 0]: too many arguments\"\n+    }\n+    set line [lindex $args 0]\n+    set code [lindex $args 1]\n+    set directive [lindex $code 0]\n+    set withline \\\n+\t[switch $directive {\n+\t    gdb-test {expr {1}}\n+\t    default  {expr {0}}\n+\t}]\n+    if { $withline == 1 } {\n+\tset code [linsert $code 1 $line]\n+    }\n+    append final-code \"$code\\n\"\n+}\n+\n global orig_environment_saved\n \n # Deduce generated files from tool flags, return finalcode string"}, {"sha": "c446f5b122dc10552bcd7426660963bc12c0edc6", "filename": "gcc/testsuite/lib/gcc-gdb-test.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f269206b1b9d10401e7afc99e37050892d26d014/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp?ref=f269206b1b9d10401e7afc99e37050892d26d014", "patch": "@@ -26,7 +26,7 @@\n #   calling print on it in gdb. When asking for the type it is\n #   the literal string with extra whitespace removed.\n # Argument 3 handles expected failures and the like\n-proc gdb-test { args } {\n+proc gdb-test { useline args } {\n     if { ![isnative] || [is_remote target] } { return }\n \n     if { [llength $args] >= 4 } {\n@@ -60,7 +60,7 @@ proc gdb-test { args } {\n     set cmd_file \"[file rootname [file tail $prog]].gdb\"\n \n     set fd [open $cmd_file \"w\"]\n-    set line [get-absolute-line \"\" [lindex $args 0]]\n+    set line [get-absolute-line $useline [lindex $args 0]]\n     puts $fd \"break $line\"\n     puts $fd \"run\"\n     puts $fd \"$command $var\""}]}