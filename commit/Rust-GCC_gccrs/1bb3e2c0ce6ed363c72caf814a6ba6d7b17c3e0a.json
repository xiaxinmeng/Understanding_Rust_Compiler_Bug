{"sha": "1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiM2UyYzBjZTZlZDM2M2M3MmNhZjgxNGE2YmE2ZDdiMTdjM2UwYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-29T09:34:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-04-29T09:34:50Z"}, "message": "aarch64: Fix ICE in aarch64_add_offset_1_temporaries [PR100302]\n\nIn PR94121 I've changed aarch64_add_offset_1 to use absu_hwi instead of\nabs_hwi because offset can be HOST_WIDE_INT_MIN.  As can be seen with\nthe testcase below, aarch64_add_offset_1_temporaries suffers from the same\nproblem and should be in sync with aarch64_add_offset_1, i.e. for\nHOST_WIDE_INT_MIN it needs a temporary.\n\n2021-04-29  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/100302\n\t* config/aarch64/aarch64.c (aarch64_add_offset_1_temporaries): Use\n\tabsu_hwi instead of abs_hwi.\n\n\t* gcc.target/aarch64/sve/pr100302.c: New test.", "tree": {"sha": "0b869e171ab7fa0aaea622bab40d861aff3fb781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b869e171ab7fa0aaea622bab40d861aff3fb781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b462deabf70e0f4bebb1f85118827d9c2eeffb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b462deabf70e0f4bebb1f85118827d9c2eeffb5"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "c2f4b27f6e4bc8c7ab103d8c623a7d6d50131352", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a", "patch": "@@ -4736,7 +4736,7 @@ aarch64_mov128_immediate (rtx imm)\n static unsigned int\n aarch64_add_offset_1_temporaries (HOST_WIDE_INT offset)\n {\n-  return abs_hwi (offset) < 0x1000000 ? 0 : 1;\n+  return absu_hwi (offset) < 0x1000000 ? 0 : 1;\n }\n \n /* A subroutine of aarch64_add_offset.  Set DEST to SRC + OFFSET for"}, {"sha": "de6e8f206461d9dbde011cefd4168ccbfdfa355f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr100302.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr100302.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr100302.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr100302.c?ref=1bb3e2c0ce6ed363c72caf814a6ba6d7b17c3e0a", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/100302 */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8.2-a+sve -O1 -ftree-loop-vectorize -fno-tree-scev-cprop --param vect-partial-vector-usage=0 -fvect-cost-model=unlimited\" } */\n+\n+long int x;\n+\n+void\n+foo (void)\n+{\n+  for (x = 0; x >= 0; ++x)\n+    ;\n+}"}]}