{"sha": "47cc28f568eff9f93ad63ca2cb730b865232f441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdjYzI4ZjU2OGVmZjlmOTNhZDYzY2EyY2I3MzBiODY1MjMyZjQ0MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-19T09:14:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-19T09:14:33Z"}, "message": "re PR tree-optimization/56350 (ICE in vectorizable_reduction, at tree-vect-loop.c:4731)\n\n\tPR tree-optimization/56350\n\t* tree-vect-loop.c (vectorizable_reduction): If orig_stmt, return false\n\tif haven't found reduction or nested cycle operand, rather than\n\tasserting we must find it.\n\n\t* gcc.dg/pr56350.c: New test.\n\nFrom-SVN: r196134", "tree": {"sha": "686b8fed7c73913c1f14dac6b8015d579d29103e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/686b8fed7c73913c1f14dac6b8015d579d29103e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47cc28f568eff9f93ad63ca2cb730b865232f441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47cc28f568eff9f93ad63ca2cb730b865232f441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47cc28f568eff9f93ad63ca2cb730b865232f441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47cc28f568eff9f93ad63ca2cb730b865232f441/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a475fd3dcbdbe5def1461111710ce6ab17e7d918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a475fd3dcbdbe5def1461111710ce6ab17e7d918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a475fd3dcbdbe5def1461111710ce6ab17e7d918"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "b4036f2a25c264c69a7edb2040d7fb72f6efab6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47cc28f568eff9f93ad63ca2cb730b865232f441", "patch": "@@ -1,5 +1,10 @@\n 2013-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/56350\n+\t* tree-vect-loop.c (vectorizable_reduction): If orig_stmt, return false\n+\tif haven't found reduction or nested cycle operand, rather than\n+\tasserting we must find it.\n+\n \tPR tree-optimization/56381\n \t* tree-ssa-pre.c (create_expression_by_pieces): Fix up last argument\n \tto fold_build3."}, {"sha": "94a237ba3650ef74dab1da0794a30a76ba96f6fe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47cc28f568eff9f93ad63ca2cb730b865232f441", "patch": "@@ -1,5 +1,8 @@\n 2013-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/56350\n+\t* gcc.dg/pr56350.c: New test.\n+\n \tPR tree-optimization/56381\n \t* g++.dg/opt/pr56381.C: New test.\n "}, {"sha": "899a507ee8bc8c5b96457bbd0e3e509800a1d370", "filename": "gcc/testsuite/gcc.dg/pr56350.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56350.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56350.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56350.c?ref=47cc28f568eff9f93ad63ca2cb730b865232f441", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/56350 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -ftree-vectorize\" } */\n+\n+int a, b, c;\n+\n+void\n+f (void)\n+{\n+  for (; c; c++)\n+    for (b = 0; b < 2; b++)\n+      a /= 8;\n+}"}, {"sha": "3693cd27a961a043003d2534950fed8617085842", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47cc28f568eff9f93ad63ca2cb730b865232f441/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=47cc28f568eff9f93ad63ca2cb730b865232f441", "patch": "@@ -4707,7 +4707,7 @@ vectorizable_reduction (gimple stmt, gimple_stmt_iterator *gsi,\n      The last use is the reduction variable.  In case of nested cycle this\n      assumption is not true: we use reduc_index to record the index of the\n      reduction variable.  */\n-  for (i = 0; i < op_type-1; i++)\n+  for (i = 0; i < op_type - 1; i++)\n     {\n       /* The condition of COND_EXPR is checked in vectorizable_condition().  */\n       if (i == 0 && code == COND_EXPR)\n@@ -4739,11 +4739,18 @@ vectorizable_reduction (gimple stmt, gimple_stmt_iterator *gsi,\n   if (!vectype_in)\n     vectype_in = tem;\n   gcc_assert (is_simple_use);\n-  gcc_assert (dt == vect_reduction_def\n-              || dt == vect_nested_cycle\n-              || ((dt == vect_internal_def || dt == vect_external_def\n-                   || dt == vect_constant_def || dt == vect_induction_def)\n-                   && nested_cycle && found_nested_cycle_def));\n+  if (!(dt == vect_reduction_def\n+\t|| dt == vect_nested_cycle\n+\t|| ((dt == vect_internal_def || dt == vect_external_def\n+\t     || dt == vect_constant_def || dt == vect_induction_def)\n+\t    && nested_cycle && found_nested_cycle_def)))\n+    {\n+      /* For pattern recognized stmts, orig_stmt might be a reduction,\n+\t but some helper statements for the pattern might not, or\n+\t might be COND_EXPRs with reduction uses in the condition.  */\n+      gcc_assert (orig_stmt);\n+      return false;\n+    }\n   if (!found_nested_cycle_def)\n     reduc_def_stmt = def_stmt;\n "}]}