{"sha": "5d264d62dc6d381510bea36469d50175fa6a39c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyNjRkNjJkYzZkMzgxNTEwYmVhMzY0NjlkNTAxNzVmYTZhMzljMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-03-05T17:53:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-03-05T17:53:28Z"}, "message": "re PR c++/60361 (unexpected 'use of parameter outside function body' error)\n\n\tPR c++/60361\n\t* parser.c (cp_parser_template_id): Don't set up a CPP_TEMPLATE_ID\n\tif re-parsing might succeed.\n\t* semantics.c (finish_id_expression): Use of a parameter outside\n\tthe function body is a parse error.\n\nFrom-SVN: r208351", "tree": {"sha": "e3868b266a6078ee25388808cfde2edd0ca93c82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3868b266a6078ee25388808cfde2edd0ca93c82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d264d62dc6d381510bea36469d50175fa6a39c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d264d62dc6d381510bea36469d50175fa6a39c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d264d62dc6d381510bea36469d50175fa6a39c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d264d62dc6d381510bea36469d50175fa6a39c2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "047023865e1edc63c708fb0f4475958119955928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047023865e1edc63c708fb0f4475958119955928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047023865e1edc63c708fb0f4475958119955928"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "9e7b9b77c9cd3ed065c269f1673ae794ef7d2be8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5d264d62dc6d381510bea36469d50175fa6a39c2", "patch": "@@ -1,5 +1,11 @@\n 2014-03-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60361\n+\t* parser.c (cp_parser_template_id): Don't set up a CPP_TEMPLATE_ID\n+\tif re-parsing might succeed.\n+\t* semantics.c (finish_id_expression): Use of a parameter outside\n+\tthe function body is a parse error.\n+\n \t* parser.c (cp_parser_mem_initializer): Set input_location\n \tproperly for init-list warning.\n \t(cp_parser_postfix_open_square_expression): Likewise."}, {"sha": "b56870d62255116fa71a1d80e260ac5f778be787", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5d264d62dc6d381510bea36469d50175fa6a39c2", "patch": "@@ -13466,7 +13466,12 @@ cp_parser_template_id (cp_parser *parser,\n      the effort required to do the parse, nor will we issue duplicate\n      error messages about problems during instantiation of the\n      template.  */\n-  if (start_of_id)\n+  if (start_of_id\n+      /* Don't do this if we had a parse error in a declarator; re-parsing\n+\t might succeed if a name changes meaning (60361).  */\n+      && !(cp_parser_error_occurred (parser)\n+\t   && cp_parser_parsing_tentatively (parser)\n+\t   && parser->in_declarator_p))\n     {\n       cp_token *token = cp_lexer_token_at (parser->lexer, start_of_id);\n "}, {"sha": "4081e0ec1d577339e668e82da787c5a7ccf1c5f2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5d264d62dc6d381510bea36469d50175fa6a39c2", "patch": "@@ -3246,7 +3246,7 @@ finish_id_expression (tree id_expression,\n \t  && DECL_CONTEXT (decl) == NULL_TREE\n \t  && !cp_unevaluated_operand)\n \t{\n-\t  error (\"use of parameter %qD outside function body\", decl);\n+\t  *error_msg = \"use of parameter outside function body\";\n \t  return error_mark_node;\n \t}\n     }"}, {"sha": "9a5b8791d24358d0b37cd17be98319b4e5d9577c", "filename": "gcc/testsuite/g++.dg/parse/ambig7.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fambig7.C?ref=5d264d62dc6d381510bea36469d50175fa6a39c2", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/60361\n+\n+struct Helper\n+{\n+  Helper(int a, void (*pfunc)());\n+};\n+\n+template <int I> void function();\n+\n+const int A = 1;\n+const int B = 2;\n+\n+Helper testOk(A, function<A>);\n+Helper testOk2(int(A), function<B>);\n+Helper testOk3((int(A)), function<A>);\n+Helper testFail(int(A), function<A>);"}, {"sha": "3c983cc748c4cc0d7409085834e67f734b414159", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-2.C?ref=5d264d62dc6d381510bea36469d50175fa6a39c2", "patch": "@@ -1,2 +1,2 @@\n-void f (int i, int p[i]); // { dg-error \"use of parameter .i. outside function body\" }\n+void f (int i, int p[i]); // { dg-error \"use of parameter.*outside function body\" }\n // { dg-prune-output \"array bound\" }"}, {"sha": "e49a1ec393520dbdeb6a803dbf79fd008e571162", "filename": "gcc/testsuite/g++.dg/parse/typename7.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d264d62dc6d381510bea36469d50175fa6a39c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftypename7.C?ref=5d264d62dc6d381510bea36469d50175fa6a39c2", "patch": "@@ -7,10 +7,9 @@\n \n struct A\n {\n-  template<typename>   void foo(int); // { dg-message \"note\" }\n-  template<typename T> void bar(T t) { // { dg-message \"note\" }\n+  template<typename>   void foo(int);\n+  template<typename T> void bar(T t) {\n     this->foo<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n-  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 12 }\n   template<typename T> void bad(T t) {\n     foo<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n };\n@@ -20,7 +19,6 @@ struct B\n {\n   void bar(T t) {\n     A().bar<typename T>(t); } // { dg-error \"expected|parse error|no matching\" }\n-  // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 22 }\n   void bad(T t) {\n     B<typename T>::bar(t); } // { dg-error \"invalid|qualified-id|not a template\" }\n };"}]}