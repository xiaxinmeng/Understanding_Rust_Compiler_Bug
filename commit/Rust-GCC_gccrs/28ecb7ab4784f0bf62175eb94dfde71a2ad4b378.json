{"sha": "28ecb7ab4784f0bf62175eb94dfde71a2ad4b378", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlY2I3YWI0Nzg0ZjBiZjYyMTc1ZWI5NGRmZGU3MWEyYWQ0YjM3OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-05-30T15:52:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-30T15:52:03Z"}, "message": "alpha.md (*setne_internal): Use match_operator instead of working down from insn.\n\n        * config/alpha/alpha.md (*setne_internal): Use match_operator\n        instead of working down from insn.\n\nFrom-SVN: r34268", "tree": {"sha": "f960f82038d4697272d77d07cbb942204514e10f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f960f82038d4697272d77d07cbb942204514e10f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378/comments", "author": null, "committer": null, "parents": [{"sha": "935d1834f18a86bed5292c9bfe55ecf81ba734fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935d1834f18a86bed5292c9bfe55ecf81ba734fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935d1834f18a86bed5292c9bfe55ecf81ba734fc"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "db9855e67c9b69937bb21128944cd65d98f814d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28ecb7ab4784f0bf62175eb94dfde71a2ad4b378", "patch": "@@ -1,3 +1,8 @@\n+2000-05-30  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/alpha/alpha.md (*setne_internal): Use match_operator\n+\tinstead of working down from insn.\n+\n 2000-05-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* invoke.texi (-Wtraditional): Update WRT function macros."}, {"sha": "34d3dafa9c2889066819150ee922418a63ba4cd1", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ecb7ab4784f0bf62175eb94dfde71a2ad4b378/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=28ecb7ab4784f0bf62175eb94dfde71a2ad4b378", "patch": "@@ -2520,16 +2520,6 @@\n ;; Next are all the integer comparisons, and conditional moves and branches\n ;; and some of the related define_expand's and define_split's.\n \n-(define_insn \"*setne_internal\"\n-  [(set (match_operand 0 \"register_operand\" \"=r\")\n-\t(ne (match_operand:DI 1 \"reg_or_8bit_operand\" \"rI\")\n-\t    (const_int 0)))]\n-  \"GET_MODE_CLASS (GET_MODE (operands[0])) == MODE_INT\n-   && GET_MODE_SIZE (GET_MODE (operands[0])) <= 8\n-   && GET_MODE (operands[0]) == GET_MODE (SET_SRC (PATTERN (insn)))\"\n-  \"cmpult $31,%1,%0\"\n-  [(set_attr \"type\" \"icmp\")])\n-\n (define_insn \"*setcc_internal\"\n   [(set (match_operand 0 \"register_operand\" \"=r\")\n \t(match_operator 1 \"alpha_comparison_operator\"\n@@ -2552,6 +2542,18 @@\n   \"cmp%c1 %r3,%2,%0\"\n   [(set_attr \"type\" \"icmp\")])\n \n+(define_insn \"*setne_internal\"\n+  [(set (match_operand 0 \"register_operand\" \"=r\")\n+\t(match_operator 1 \"signed_comparison_operator\"\n+\t\t\t  [(match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n+\t\t\t   (const_int 0)]))]\n+  \"GET_MODE_CLASS (GET_MODE (operands[0])) == MODE_INT\n+   && GET_MODE_SIZE (GET_MODE (operands[0])) <= 8\n+   && GET_CODE (operands[1]) == NE\n+   && GET_MODE (operands[0]) == GET_MODE (operands[1])\"\n+  \"cmpult $31,%2,%0\"\n+  [(set_attr \"type\" \"icmp\")])\n+\n ;; The mode folding trick can't be used with const_int operands, since\n ;; reload needs to know the proper mode.\n ;;"}]}