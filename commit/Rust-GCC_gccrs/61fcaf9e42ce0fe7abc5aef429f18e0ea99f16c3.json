{"sha": "61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmY2FmOWU0MmNlMGZlN2FiYzVhZWY0MjlmMThlMGVhOTlmMTZjMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-11T05:25:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-11T05:25:55Z"}, "message": "(PRINT_OPERAND): Define new code, D.\n\nFrom-SVN: r2394", "tree": {"sha": "2a9f72ba88d887e7646169fdb4951e33a6eb884b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a9f72ba88d887e7646169fdb4951e33a6eb884b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3/comments", "author": null, "committer": null, "parents": [{"sha": "c2fb3f5754b79756008a1af7983efa99a54f764a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2fb3f5754b79756008a1af7983efa99a54f764a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2fb3f5754b79756008a1af7983efa99a54f764a"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "6cbc39d9b5464bde5996cab96839a0f5617fac53", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=61fcaf9e42ce0fe7abc5aef429f18e0ea99f16c3", "patch": "@@ -1188,6 +1188,7 @@ VAX operand formatting codes:\n \n  letter\t   print\n    C\treverse branch condition\n+   D\t64-bit immediate operand\n    B\tthe low 8 bits of the complement of a constant operand\n    H\tthe low 16 bits of the complement of a constant operand\n    M\ta mask for the N highest bits of a word\n@@ -1198,6 +1199,10 @@ VAX operand formatting codes:\n    h\tthe low 16 bits of a negated constant operand\n    #\t'd' or 'g' depending on whether dfloat or gfloat is used  */\n \n+/* The purpose of D is to get around a quirk or bug in vax assembler\n+   whereby -1 in a 64-bit immediate operand means 0x00000000ffffffff,\n+   which is not a 64-bit minus one.  */\n+\n #define PRINT_OPERAND_PUNCT_VALID_P(CODE)\t\t\t\t\\\n   ((CODE) == '#')\n \n@@ -1206,6 +1211,8 @@ VAX operand formatting codes:\n   if (CODE == '#') fputc (ASM_DOUBLE_CHAR, FILE);\t\t\t\\\n   else if (CODE == 'C')\t\t\t\t\t\t\t\\\n     fputs (rev_cond_name (X), FILE);\t\t\t\t\t\\\n+  else if (CODE == 'D' && GET_CODE (X) == CONST_INT && INTVAL (X) < 0)\t\\\n+    fprintf (FILE, \"0xffffffff%08x\", INTVAL (X));\t\t\t\\\n   else if (CODE == 'P' && GET_CODE (X) == CONST_INT)\t\t\t\\\n     fprintf (FILE, \"$%d\", INTVAL (X) + 1);\t\t\t\t\\\n   else if (CODE == 'N' && GET_CODE (X) == CONST_INT)\t\t\t\\"}]}