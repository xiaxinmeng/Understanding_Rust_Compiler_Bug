{"sha": "b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE5YWVhMzJmYWQ2MTNhOTQwNWNlODc3NGY5YzRmYjhjOGFlNGY2Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-01T18:19:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-01T18:19:13Z"}, "message": "compiler: Reliably give errors on misuse of multiple value call.\n\nFrom-SVN: r184755", "tree": {"sha": "1d224f339691fe264cf8e099ff5ae5acd7df7f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d224f339691fe264cf8e099ff5ae5acd7df7f51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b/comments", "author": null, "committer": null, "parents": [{"sha": "5e4119eaa2f08c61e501e2989c6385b229dea2b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4119eaa2f08c61e501e2989c6385b229dea2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4119eaa2f08c61e501e2989c6385b229dea2b0"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "3c33a6dcd49bf06603da9c87a6478a15e169ebdf", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=b19aea32fad613a9405ce8774f9c4fb8c8ae4f6b", "patch": "@@ -622,26 +622,32 @@ Type::are_assignable_check_hidden(const Type* lhs, const Type* rhs,\n \t\t\t\t  std::string* reason)\n {\n   // Do some checks first.  Make sure the types are defined.\n-  if (rhs != NULL\n-      && rhs->forwarded()->forward_declaration_type() == NULL\n-      && rhs->is_void_type())\n+  if (rhs != NULL && !rhs->is_undefined())\n     {\n-      if (reason != NULL)\n-\t*reason = \"non-value used as value\";\n-      return false;\n+      if (rhs->is_void_type())\n+\t{\n+\t  if (reason != NULL)\n+\t    *reason = \"non-value used as value\";\n+\t  return false;\n+\t}\n+      if (rhs->is_call_multiple_result_type())\n+\t{\n+\t  if (reason != NULL)\n+\t    reason->assign(_(\"multiple value function call in \"\n+\t\t\t     \"single value context\"));\n+\t  return false;\n+\t}\n     }\n \n-  if (lhs != NULL && lhs->forwarded()->forward_declaration_type() == NULL)\n+  if (lhs != NULL && !lhs->is_undefined())\n     {\n       // Any value may be assigned to the blank identifier.\n       if (lhs->is_sink_type())\n \treturn true;\n \n       // All fields of a struct must be exported, or the assignment\n       // must be in the same package.\n-      if (check_hidden_fields\n-\t  && rhs != NULL\n-\t  && rhs->forwarded()->forward_declaration_type() == NULL)\n+      if (check_hidden_fields && rhs != NULL && !rhs->is_undefined())\n \t{\n \t  if (lhs->has_hidden_fields(NULL, reason)\n \t      || rhs->has_hidden_fields(NULL, reason))\n@@ -715,9 +721,6 @@ Type::are_assignable_check_hidden(const Type* lhs, const Type* rhs,\n     {\n       if (rhs->interface_type() != NULL)\n \treason->assign(_(\"need explicit conversion\"));\n-      else if (rhs->is_call_multiple_result_type())\n-\treason->assign(_(\"multiple value function call in \"\n-\t\t\t \"single value context\"));\n       else if (lhs->named_type() != NULL && rhs->named_type() != NULL)\n \t{\n \t  size_t len = (lhs->named_type()->name().length()"}]}