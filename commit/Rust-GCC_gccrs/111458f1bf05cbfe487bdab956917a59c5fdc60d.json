{"sha": "111458f1bf05cbfe487bdab956917a59c5fdc60d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTExNDU4ZjFiZjA1Y2JmZTQ4N2JkYWI5NTY5MTdhNTljNWZkYzYwZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-07-31T18:10:31Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-31T18:10:31Z"}, "message": "c-decl.c (mesg_implicit_function_declaration): Init to -1.\n\n\t* c-decl.c (mesg_implicit_function_declaration): Init to -1.\n\t(implicit_decl_warning): New function.\n\t(implicitly_declare): Use it.\n\t* c-typeck.c (build_external_ref): Use implicit_decl_warning\n\tto complain about implicit decls of builtins.\n\n\t* c-lang.c (lang_init): Set mesg_implicit_function_declaration\n\tbased on pedantic && flag_isoc99, if not already set.\n\t* c-tree.h: Declare mesg_implicit_function_declaration.\n\tPrototype implicit_decl_warning.\n\n\t* gcc.dg/c99-impl-decl-1.c: No longer XFAIL.\n\nFrom-SVN: r35385", "tree": {"sha": "71356bf58f3c89b7f453bb3fe8fa75cffb958203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71356bf58f3c89b7f453bb3fe8fa75cffb958203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/111458f1bf05cbfe487bdab956917a59c5fdc60d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111458f1bf05cbfe487bdab956917a59c5fdc60d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/111458f1bf05cbfe487bdab956917a59c5fdc60d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111458f1bf05cbfe487bdab956917a59c5fdc60d/comments", "author": null, "committer": null, "parents": [{"sha": "cdbca1727ce8d428964efcb2f20ee82142a2c762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdbca1727ce8d428964efcb2f20ee82142a2c762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdbca1727ce8d428964efcb2f20ee82142a2c762"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "846f61ea78e4e6778e123eea004b9c9344075054", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -1,3 +1,16 @@\n+2000-07-31  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* c-decl.c (mesg_implicit_function_declaration): Init to -1.\n+\t(implicit_decl_warning): New function.\n+\t(implicitly_declare): Use it.\n+\t* c-typeck.c (build_external_ref): Use implicit_decl_warning\n+\tto complain about implicit decls of builtins.\n+\n+\t* c-lang.c (lang_init): Set mesg_implicit_function_declaration\n+\tbased on pedantic && flag_isoc99, if not already set.\n+\t* c-tree.h: Declare mesg_implicit_function_declaration.\n+\tPrototype implicit_decl_warning.\n+\n 2000-07-30  Jeffrey D. Oldham  <oldham@codesourcery.com>\n \n \t* Makefile.in (ssa.o): Updated header files in dependences."}, {"sha": "a9eb6199136ecd54ce69ebd46a5db2e49eac8824", "filename": "gcc/c-decl.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -358,7 +358,7 @@ int warn_long_long = 1;\n /* Nonzero means message about use of implicit function declarations;\n  1 means warning; 2 means error. */\n \n-int mesg_implicit_function_declaration;\n+int mesg_implicit_function_declaration = -1;\n \n /* Nonzero means give string constants the type `const char *'\n    to get extra warnings from them.  These warnings will be too numerous\n@@ -2525,15 +2525,8 @@ implicitly_declare (functionid)\n \n   rest_of_decl_compilation (decl, NULL_PTR, 0, 0);\n \n-  if (mesg_implicit_function_declaration && implicit_warning)\n-    {\n-      if (mesg_implicit_function_declaration == 2)\n-        error (\"implicit declaration of function `%s'\",\n-                 IDENTIFIER_POINTER (functionid));\n-      else\n-        warning (\"implicit declaration of function `%s'\",\n-                 IDENTIFIER_POINTER (functionid));\n-    }\n+  if (implicit_warning)\n+    implicit_decl_warning (functionid);\n   else if (warn_traditional && traditional_warning)\n     warning (\"function `%s' was previously declared within a block\",\n \t     IDENTIFIER_POINTER (functionid));\n@@ -2546,6 +2539,17 @@ implicitly_declare (functionid)\n   return decl;\n }\n \n+void\n+implicit_decl_warning (id)\n+     tree id;\n+{\n+  char *name = IDENTIFIER_POINTER (id);\n+  if (mesg_implicit_function_declaration == 2)\n+    error (\"implicit declaration of function `%s'\", name);\n+  else if (mesg_implicit_function_declaration == 1)\n+    warning (\"implicit declaration of function `%s'\", name);\n+}\n+\n /* Return zero if the declaration NEWDECL is valid\n    when the declaration OLDDECL (assumed to be for the same name)\n    has already been seen."}, {"sha": "a34f306b4ffdcc95eed6d9a1b2ac2e280204b532", "filename": "gcc/c-lang.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -69,6 +69,15 @@ lang_init ()\n   if (flag_bounds_check < 0)\n     flag_bounds_check = flag_bounded_pointers;\n \n+  /* If still unspecified, make it match pedantic && -std=c99.  */\n+  if (mesg_implicit_function_declaration < 0)\n+    {\n+      if (pedantic && flag_isoc99)\n+\tmesg_implicit_function_declaration = flag_pedantic_errors ? 2 : 1;\n+      else\n+\tmesg_implicit_function_declaration = 0;\n+    }\n+\n   /* the beginning of the file is a new line; check for # */\n   /* With luck, we discover the real source file's name from that\n      and put it in input_filename.  */"}, {"sha": "0bb4efb710f326beb8068c04c4a47dcd96d6fe8a", "filename": "gcc/c-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -188,6 +188,7 @@ extern tree grokfield                           PARAMS ((const char *, int, tree\n extern tree groktypename                        PARAMS ((tree));\n extern tree groktypename_in_parm_context        PARAMS ((tree));\n extern tree implicitly_declare                  PARAMS ((tree));\n+extern void implicit_decl_warning               PARAMS ((tree));\n extern int  in_parm_level_p                     PARAMS ((void));\n extern void init_decl_processing                PARAMS ((void));\n extern void insert_block                        PARAMS ((tree));\n@@ -388,6 +389,9 @@ extern int warn_long_long;\n \n extern int system_header_p;\n \n+/* Warn about implicit declarations.  1 = warning, 2 = error.  */\n+extern int mesg_implicit_function_declaration;\n+\n /* Nonzero enables objc features.  */\n \n #define doing_objc_thang \\"}, {"sha": "e6fc2494da6cfbde1b2d8fd542318b9faf439f40", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -1417,9 +1417,10 @@ build_external_ref (id, fun)\n \t      /* Implicit declaration of built-in function.  Don't\n \t\t change the built-in declaration, but don't let this\n \t\t go by silently, either.  */\n-\t      pedwarn (\"implicit declaration of function `%s'\",\n-\t\t       IDENTIFIER_POINTER (DECL_NAME (decl)));\n-\t      C_DECL_ANTICIPATED (decl) = 0;  /* only issue this warning once */\n+\t      implicit_decl_warning (id);\n+\n+\t      /* only issue this warning once */\n+\t      C_DECL_ANTICIPATED (decl) = 0;\n \t      ref = decl;\n \t    }\n \t}"}, {"sha": "c1090c8f5ea1d9cd5b79b9a821d7da09fda9c738", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -1,3 +1,7 @@\n+2000-07-31  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* gcc.dg/c99-impl-decl-1.c: No longer XFAIL.\n+\n 2000-07-31  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/noncompile/voidparam-1.c: New test."}, {"sha": "6602bc71dd39078bdf9f07ea648277654ecd35b7", "filename": "gcc/testsuite/gcc.dg/c99-impl-decl-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-impl-decl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/111458f1bf05cbfe487bdab956917a59c5fdc60d/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-impl-decl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-impl-decl-1.c?ref=111458f1bf05cbfe487bdab956917a59c5fdc60d", "patch": "@@ -7,7 +7,7 @@ void\n foo (void)\n {\n   bar (); /* { dg-bogus \"warning\" \"warning in place of error\" } */\n-  /* { dg-error \"implicit\" \"C99 implicit declaration error\" { xfail *-*-* } 9 } */\n+ /* { dg-error \"implicit\" \"C99 implicit declaration error\" { target *-*-* } 9 } */\n }\n \n /* C90 subclause 7.1.7 says we can implicitly declare strcmp; C99 removes"}]}