{"sha": "8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0ZmU5NWQ5NDk5NzFmNGExYWZjNTA3MmRhNWE4MGY0YjI4YjJmMA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-09-05T07:55:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:55:17Z"}, "message": "lib-writ.adb: Update Copyright notice\n\n2005-09-01  Vincent Celier  <celier@adacore.com>\n\n\t* lib-writ.adb: Update Copyright notice\n\t(Write_With_Lines): On platforms where file names are case-insensitive,\n\trecord the file names in lower case.\n\t(Write_ALI): For D lines, on platforms where file names are\n\tcase-insensitive, record the file names in lower case.\n\nFrom-SVN: r103870", "tree": {"sha": "3f0710d3ca77645413376d033bb10ef18ca57624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f0710d3ca77645413376d033bb10ef18ca57624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "244480db09260422e323000b8106bfbf951762ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/244480db09260422e323000b8106bfbf951762ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/244480db09260422e323000b8106bfbf951762ce"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "76952b5ac72afc6714b10b64ee513579a25c25e3", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,8 @@ with Stringt;  use Stringt;\n with Tbuild;   use Tbuild;\n with Uname;    use Uname;\n \n-with System.WCh_Con; use System.WCh_Con;\n+with System.Case_Util; use System.Case_Util;\n+with System.WCh_Con;   use System.WCh_Con;\n \n package body Lib.Writ is\n \n@@ -684,11 +685,29 @@ package body Lib.Writ is\n                  or else (Ada_Version = Ada_83\n                            and then Full_Source_Name (Body_Fname) /= No_File)\n                then\n+                  --  Ensure that on platforms where the file names are not\n+                  --  case sensitive, the recorded file name is in lower case.\n+\n+                  if not File_Names_Case_Sensitive then\n+                     Get_Name_String (Body_Fname);\n+                     To_Lower (Name_Buffer (1 .. Name_Len));\n+                     Body_Fname := Name_Find;\n+                  end if;\n+\n                   Write_Info_Name (Body_Fname);\n                   Write_Info_Tab (49);\n                   Write_Info_Name\n                     (Lib_File_Name (Body_Fname, Body_Index));\n                else\n+                  --  Ensure that on platforms where the file names are not\n+                  --  case sensitive, the recorded file name is in lower case.\n+\n+                  if not File_Names_Case_Sensitive then\n+                     Get_Name_String (Fname);\n+                     To_Lower (Name_Buffer (1 .. Name_Len));\n+                     Fname := Name_Find;\n+                  end if;\n+\n                   Write_Info_Name (Fname);\n                   Write_Info_Tab (49);\n                   Write_Info_Name\n@@ -830,7 +849,7 @@ package body Lib.Writ is\n                      Nam : Node_Id := Defining_Unit_Name (S);\n \n                   begin\n-                     --  If it is a child unit, get its simple name.\n+                     --  If it is a child unit, get its simple name\n \n                      if Nkind (Nam) = N_Defining_Program_Unit_Name then\n                         Nam := Defining_Identifier (Nam);\n@@ -922,11 +941,7 @@ package body Lib.Writ is\n          Write_Info_Str (\" UA\");\n       end if;\n \n-      if Exception_Mechanism /= Front_End_Setjmp_Longjmp_Exceptions then\n-         if Unit_Exception_Table_Present then\n-            Write_Info_Str (\" UX\");\n-         end if;\n-\n+      if Exception_Mechanism = Back_End_Exceptions then\n          Write_Info_Str (\" ZX\");\n       end if;\n \n@@ -1059,6 +1074,8 @@ package body Lib.Writ is\n          Sind : Source_File_Index;\n          --  Index of corresponding source file\n \n+         Fname : File_Name_Type;\n+\n       begin\n          for J in 1 .. Num_Sdep loop\n             Unum := Sdep_Table (J);\n@@ -1071,7 +1088,18 @@ package body Lib.Writ is\n             --  Normal case of a unit entry with a source index\n \n             if Sind /= No_Source_File then\n-               Write_Info_Name (File_Name (Sind));\n+               Fname := File_Name (Sind);\n+\n+               --  Ensure that on platforms where the file names are not\n+               --  case sensitive, the recorded file name is in lower case.\n+\n+               if not File_Names_Case_Sensitive then\n+                  Get_Name_String (Fname);\n+                  To_Lower (Name_Buffer (1 .. Name_Len));\n+                  Fname := Name_Find;\n+               end if;\n+\n+               Write_Info_Name (Fname);\n                Write_Info_Tab (25);\n                Write_Info_Str (String (Time_Stamp (Sind)));\n                Write_Info_Char (' ');"}]}