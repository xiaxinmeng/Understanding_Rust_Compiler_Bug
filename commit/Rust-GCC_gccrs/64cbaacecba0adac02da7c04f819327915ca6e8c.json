{"sha": "64cbaacecba0adac02da7c04f819327915ca6e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRjYmFhY2VjYmEwYWRhYzAyZGE3YzA0ZjgxOTMyNzkxNWNhNmU4Yw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2008-01-09T21:22:19Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-01-09T21:22:19Z"}, "message": "re PR tree-optimization/34017 (ICE in lambda_loopnest_to_gcc_loopnest with -O2 -ftree-loop-linear)\n\n2008-01-09  Sebastian Pop  <sebastian.pop@amd.com>\n\n\tPR tree-optimization/34017\n\t* lambda-code.c (lambda_loopnest_to_gcc_loopnest): Generate code\n\talso for PHI_NODE expressions.\n\n\t* gcc.dg/tree-ssa/pr34017.c: New.\n\nFrom-SVN: r131435", "tree": {"sha": "9261d15e966c4aa492652b1e3fce9092f2351fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9261d15e966c4aa492652b1e3fce9092f2351fbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64cbaacecba0adac02da7c04f819327915ca6e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cbaacecba0adac02da7c04f819327915ca6e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64cbaacecba0adac02da7c04f819327915ca6e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64cbaacecba0adac02da7c04f819327915ca6e8c/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "684f4f6a331b9bf331d5a2b8d5d4e4ec6284660a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684f4f6a331b9bf331d5a2b8d5d4e4ec6284660a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684f4f6a331b9bf331d5a2b8d5d4e4ec6284660a"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "0748d1575a2aef1bcafd9f1643a84604cecb8111", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64cbaacecba0adac02da7c04f819327915ca6e8c", "patch": "@@ -1,3 +1,9 @@\n+2008-01-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/34017\n+\t* lambda-code.c (lambda_loopnest_to_gcc_loopnest): Generate code\n+\talso for PHI_NODE expressions.\n+\n 2008-01-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/34708"}, {"sha": "0b67231a58d2c689e9a72507b522d69f4a6fdbc4", "filename": "gcc/lambda-code.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2Flambda-code.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2Flambda-code.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-code.c?ref=64cbaacecba0adac02da7c04f819327915ca6e8c", "patch": "@@ -1675,7 +1675,6 @@ remove_iv (tree iv_stmt)\n     }\n }\n \n-\n /* Transform a lambda loopnest NEW_LOOPNEST, which had TRANSFORM applied to\n    it, back into gcc code.  This changes the\n    loops, their induction variables, and their bodies, so that they\n@@ -1699,6 +1698,7 @@ lambda_loopnest_to_gcc_loopnest (struct loop *old_loopnest,\n {\n   struct loop *temp;\n   size_t i = 0;\n+  int j;\n   size_t depth = 0;\n   VEC(tree,heap) *new_ivs = NULL;\n   tree oldiv;\n@@ -1837,8 +1837,6 @@ lambda_loopnest_to_gcc_loopnest (struct loop *old_loopnest,\n \t  tree newiv, stmts;\n \t  lambda_body_vector lbv, newlbv;\n \n-\t  gcc_assert (TREE_CODE (stmt) != PHI_NODE);\n-\n \t  /* Compute the new expression for the induction\n \t     variable.  */\n \t  depth = VEC_length (tree, new_ivs);\n@@ -1850,14 +1848,21 @@ lambda_loopnest_to_gcc_loopnest (struct loop *old_loopnest,\n \n \t  newiv = lbv_to_gcc_expression (newlbv, TREE_TYPE (oldiv),\n \t\t\t\t\t new_ivs, &stmts);\n-\t  if (stmts)\n+\n+\t  if (stmts && TREE_CODE (stmt) != PHI_NODE)\n \t    {\n \t      bsi = bsi_for_stmt (stmt);\n \t      bsi_insert_before (&bsi, stmts, BSI_SAME_STMT);\n \t    }\n \n \t  FOR_EACH_IMM_USE_ON_STMT (use_p, imm_iter)\n \t    propagate_value (use_p, newiv);\n+\n+\t  if (stmts && TREE_CODE (stmt) == PHI_NODE)\n+\t    for (j = 0; j < PHI_NUM_ARGS (stmt); j++)\n+\t      if (PHI_ARG_DEF (stmt, j) == newiv)\n+\t\tbsi_insert_on_edge (PHI_ARG_EDGE (stmt, j), stmts);\n+\n \t  update_stmt (stmt);\n \t}\n "}, {"sha": "8730974a7a782dd7ab46317499d57df5dc3ac373", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64cbaacecba0adac02da7c04f819327915ca6e8c", "patch": "@@ -1,3 +1,8 @@\n+2008-01-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\tPR tree-optimization/34017\n+\t* gcc.dg/tree-ssa/pr34017.c: New.\n+\n 2008-01-09  Richard Guenther  <rguenther@suse.de>\n \tAndrew Pinski  <andrew_pinski@playstation.sony.com>\n "}, {"sha": "ee279b7c8df897bb7632be5323aea9ddd28588f5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr34017.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64cbaacecba0adac02da7c04f819327915ca6e8c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr34017.c?ref=64cbaacecba0adac02da7c04f819327915ca6e8c", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-linear\" } */\n+\n+extern int s;\n+\n+void\n+foo (int *x, int y, int z)\n+{\n+ int m, n;\n+ int o;\n+ int p = x[0];\n+ o = s;\n+ for (m = 0; m < s; m++)\n+   for (n = 0; n < s; n++)\n+     {\n+       if (x[n] != p)\n+         continue;\n+       if (m > z)\n+         z = m;\n+       if (n < o)\n+         o = n;\n+     }\n+ for (m = y; m <= z; m++)\n+   {\n+   }\n+}"}]}