{"sha": "b2b0acbe2bec113381c9925cc29f26a402873350", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJiMGFjYmUyYmVjMTEzMzgxYzk5MjVjYzI5ZjI2YTQwMjg3MzM1MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-22T16:33:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-22T16:33:43Z"}, "message": "Makefile.in ($(lang_checks_parallelized)): Fix detection of -j argument.\n\ngcc/ChangeLog\n\n\t* Makefile.in ($(lang_checks_parallelized)): Fix detection\n\tof -j argument.\n\ngcc/ada/ChangeLog\n\n\t* gcc-interface/Make-lang.in (check-acats): Fix detection\n\tof -j argument.\n\nlibstdc++-v3/ChangeLog\n\n\t* testsuite/Makefile.am\n\t(check-DEJAGNU $(check_DEJAGNU_normal_targets)): Fix detection\n\tof -j argument.\n\t* testsuite/Makefile.in: Regenereate.\n\nFrom-SVN: r242705", "tree": {"sha": "68b7d62c12196c03879cc9079ae32120afa2a61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b7d62c12196c03879cc9079ae32120afa2a61c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2b0acbe2bec113381c9925cc29f26a402873350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b0acbe2bec113381c9925cc29f26a402873350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b0acbe2bec113381c9925cc29f26a402873350", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b0acbe2bec113381c9925cc29f26a402873350/comments", "author": null, "committer": null, "parents": [{"sha": "dba814afdab05e52f2b0809466d964daf5fb30d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba814afdab05e52f2b0809466d964daf5fb30d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba814afdab05e52f2b0809466d964daf5fb30d2"}], "stats": {"total": 141, "additions": 71, "deletions": 70}, "files": [{"sha": "b19a3005423d57bd01ba5954389c3834a0b0fa6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 54, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -1,3 +1,8 @@\n+2016-11-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* Makefile.in ($(lang_checks_parallelized)): Fix detection\n+\tof -j argument.\n+\n 2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config.gcc: Allow new rmprofile value for configure option\n@@ -38,8 +43,8 @@\n \n \tPR tree-optimization/78445\n \t* tree-if-conv.c (tree_if_conversion): If any_pred_load_store or\n-\tany_complicated_phi, version loop even if flag_tree_loop_if_convert is\n-\t1.  Formatting fix.\n+\tany_complicated_phi, version loop even if flag_tree_loop_if_convert\n+\tis 1.  Formatting fix.\n \n 2016-11-22  Martin Liska  <mliska@suse.cz>\n \n@@ -230,8 +235,7 @@\n \t* config/alpha/alpha.c (emit_unlikely_jump): Likewise.\n \t* config/arc/arc.c: Likewise.\n \t* config/arm/arm.c: Likewise.\n-\t* config/mn10300/mn10300.c (mn10300_legitimize_pic_address):\n-\tLikewise.\n+\t* config/mn10300/mn10300.c (mn10300_legitimize_pic_address): Likewise.\n \t* config/rs6000/rs6000.c (rs6000_expand_split_stack_prologue):\n \tLikewise.\n \t* config/spu/spu.c (spu_emit_branch_hint): Likewise.\n@@ -247,19 +251,16 @@\n \t* config/frv/frv.c (frv_optimize_membar_local): Likewise.\n \t* config/frv/frv.md: Likewise.\n \t* config/i386/i386-protos.h: Likewise.\n-\t* config/i386/i386.c (ix86_expand_split_stack_prologue):\n-\tLikewise.\n+\t* config/i386/i386.c (ix86_expand_split_stack_prologue): Likewise.\n \t(ix86_split_fp_branch): Likewise.\n \t(predict_jump): Likewise.\n \t* config/ia64/ia64.c: Likewise.\n \t* config/mcore/mcore.c: Likewise.\n-\t* config/rs6000/rs6000.c (rs6000_legitimize_tls_address):\n-\tLikewise.\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_tls_address): Likewise.\n \t* config/s390/s390.c: Likewise.\n \t* config/s390/s390.md: Likewise.\n \t* config/spu/spu.md: Likewise.\n-\t* config/tilegx/tilegx.c (tilegx_legitimize_tls_address):\n-\tLikewise.\n+\t* config/tilegx/tilegx.c (tilegx_legitimize_tls_address): Likewise.\n \t* lower-subreg.c (resolve_simple_move): Likewise.\n \n 2016-11-20  Jeff Law  <law@redhat.com>\n@@ -365,8 +366,7 @@\n \tbase types and CU or optimize implicit consts in them if\n \tcalc_base_type_die_sizes has been called during build_abbrev_table.\n \t(calc_base_type_die_sizes): If abbrev_opt_start, set\n-\tabbrev_opt_base_type_end to one plus largest base type's\n-\tdie_abbrev.\n+\tabbrev_opt_base_type_end to one plus largest base type's die_abbrev.\n \n 2016-11-18  Jeff Law  <law@redhat.com>\n \n@@ -432,9 +432,9 @@\n \tRe-apply after PR bootstrap/77359 is fixed:\n \t2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n-        * explow.c (get_dynamic_stack_size): Take known alignment of stack\n-        pointer + STACK_DYNAMIC_OFFSET into account when calculating the\n-        size needed.\n+\t* explow.c (get_dynamic_stack_size): Take known alignment of stack\n+\tpointer + STACK_DYNAMIC_OFFSET into account when calculating the\n+\tsize needed.\n \n 2016-11-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n@@ -460,15 +460,16 @@\n \t* expr.c (convert_modes): Likewise.\n \t* loop-doloop.c (doloop_optimize): Likewise.\n \t* postreload.c (reload_cse_simplify_set): Likewise.\n-\t* simplify-rtx.c (simplify_const_unary_operation): Likewise.\n+\t* simplify-rtx.c (simplify_const_unary_operation): Likewise\n \t(simplify_binary_operation_1, simplify_const_binary_operation):\n+\tLikewise.\n \t(simplify_const_relational_operation, simplify_immed_subreg): Likewise.\n \t* wide-int.h: Update documentation to recommend rtx_mode_t\n \tinstead of std::make_pair.\n \n 2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n- \t    Alan Hayward  <alan.hayward@arm.com>\n- \t    David Sherwood  <david.sherwood@arm.com>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n \n \t* tree.h (SET_DECL_MODE): New macro.\n \t* cfgexpand.c (avoid_deep_ter_for_debug): Use SET_DECL_MODE.\n@@ -507,8 +508,7 @@\n \t* config/arc/arc.md (cmem bit/sign-extend peephole2): New peephole\n \tto make better use of cmem loads in the case where a single bit is\n \tbeing accessed.\n-\t* config/arc/predicates.md (ge_lt_comparison_operator): New\n-\tpredicate.\n+\t* config/arc/predicates.md (ge_lt_comparison_operator): New predicate.\n \n 2016-11-17  Andrew Senkevich <andrew.senkevich@intel.com>\n \n@@ -519,19 +519,15 @@\n 2016-11-17  Kirill Yukhin  <kirill.yukhin@gmail.com>\n \t    Andrew Senkevich <andrew.senkevich@intel.com>\n \n-\t* common/config/i386/i386-common.c\n-\t(OPTION_MASK_ISA_AVX5124FMAPS_SET,\n-\tOPTION_MASK_ISA_AVX5124FMAPS_UNSET,\n-\tOPTION_MASK_ISA_AVX5124VNNIW_SET,\n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX5124FMAPS_SET,\n+\tOPTION_MASK_ISA_AVX5124FMAPS_UNSET, OPTION_MASK_ISA_AVX5124VNNIW_SET,\n \tOPTION_MASK_ISA_AVX5124VNNIW_UNSET): New.\n-\t(ix86_handle_option): Handle OPT_mavx5124fmaps,\n-\tOPT_mavx5124vnniw.\n+\t(ix86_handle_option): Handle OPT_mavx5124fmaps, OPT_mavx5124vnniw.\n \t* config.gcc: Add avx5124fmapsintrin.h, avx5124vnniwintrin.h.\n \t* config/i386/avx5124fmapsintrin.h: New file.\n \t* config/i386/avx5124vnniwintrin.h: Ditto.\n \t* config/i386/constraints.md (h): New constraint.\n-\t* config/i386/cpuid.h: (bit_AVX5124VNNIW,\n-\tbit_AVX5124FMAPS): New.\n+\t* config/i386/cpuid.h (bit_AVX5124VNNIW, bit_AVX5124FMAPS): New.\n \t* config/i386/driver-i386.c (host_detect_local_cpu):\n \tDetect avx5124fmaps, avx5124vnniw.\n \t* config/i386/i386-builtin-types.def: Add types\n@@ -560,17 +556,14 @@\n \tavx5124vnniw.\n \t(ix86_expand_builtin): Handle new builtins.\n \t(ix86_additional_allocno_class_p): New.\n-\t* config/i386/i386.h (TARGET_AVX5124FMAPS,\n-\tTARGET_AVX5124FMAPS_P,\n-\tTARGET_AVX5124VNNIW,\n-\tTARGET_AVX5124VNNIW_P): Define.\n+\t* config/i386/i386.h (TARGET_AVX5124FMAPS, TARGET_AVX5124FMAPS_P,\n+\tTARGET_AVX5124VNNIW, TARGET_AVX5124VNNIW_P): Define.\n \t(reg_class): Add MOD4_SSE_REGS.\n \t(MOD4_SSE_REG_P, MOD4_SSE_REGNO_P): New.\n \t* config/i386/i386.opt: Add mavx5124fmaps, mavx5124vnniw.\n \t* config/i386/immintrin.h: Include avx5124fmapsintrin.h,\n \tavx5124vnniwintrin.h.\n-\t* config/i386/sse.md (unspec): Add UNSPEC_VP4FMADD,\n-\tUNSPEC_VP4FNMADD,\n+\t* config/i386/sse.md (unspec): Add UNSPEC_VP4FMADD, UNSPEC_VP4FNMADD,\n \tUNSPEC_VP4DPWSSD, UNSPEC_VP4DPWSSDS.\n \t(define_mode_iterator IMOD4): New.\n \t(define_mode_attr imod4_narrow): Ditto.\n@@ -643,7 +636,7 @@\n \tis larger or equal to targetm.max_anchor_offset.\n \n 2016-11-17  Pip Cet  <pipcet@gmail.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/78355\n \t* doc/tm.texi.in (SLOW_UNALIGNED_ACCESS): Document that the macro only\n@@ -671,7 +664,7 @@\n \tfunction.\n \n 2016-11-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-            Richard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77848\n \t* tree-if-conv.c (tree_if_conversion): Always version loops unless\n@@ -949,7 +942,7 @@\n \t(atomic_fetch_add<mode>): Ditto.\n \t(atomic_fetch_addsf): Ditto.\n \t(atomic_fetch_<logic><mode>): Ditto.\n-\t* config/nvptx/nvptx.opt: (msoft-stack): New option.\n+\t* config/nvptx/nvptx.opt (msoft-stack): New option.\n \t(muniform-simt): Ditto.\n \t(mgomp): Ditto.\n \t* config/nvptx/t-nvptx (MULTILIB_OPTIONS): New.\n@@ -958,7 +951,7 @@\n \t(muniform-simt): Document\n \t(mgomp): Document.\n \t* doc/tm.texi: Regenerate.\n-\t* doc/tm.texi.in: (TARGET_SIMT_VF): New hook.\n+\t* doc/tm.texi.in (TARGET_SIMT_VF): New hook.\n \t* target.def: Define it.\n \t* target-insns.def (omp_simt_lane): New.\n \t(omp_simt_last_lane): New.\n@@ -973,17 +966,14 @@\n \tprototype.\n \t* config/mips/mips.h (ASM_OUTPUT_BEFORE_CASE_LABEL): New macro.\n \t(ASM_OUTPUT_CASE_END): Likewise.\n-\t* config/mips/mips.c (mips_set_text_contents_type): New\n-\tfunction.\n+\t* config/mips/mips.c (mips_set_text_contents_type): New function.\n \t(mips16_emit_constants): Record the pool's initial label number\n-\twith the `consttable' insn.  Emit a `consttable_end' insn at the\n-\tend.\n+\twith the `consttable' insn.  Emit a `consttable_end' insn at the end.\n \t(mips_final_prescan_insn): Call `mips_set_text_contents_type'\n \tfor `consttable' insns.\n \t(mips_final_postscan_insn): Call `mips_set_text_contents_type'\n \tfor `consttable_end' insns.\n-\t* config/mips/mips.md (unspec): Add UNSPEC_CONSTTABLE_END enum\n-\tvalue.\n+\t* config/mips/mips.md (unspec): Add UNSPEC_CONSTTABLE_END enum value.\n \t(consttable): Add operand.\n \t(consttable_end): New insn.\n \n@@ -1053,8 +1043,8 @@\n \t* arm/arm-fpus.def (vfpv2): New FPU, currently an alias for 'vfp'.\n \t(neon-vfpv3): New FPU, currently an alias for 'neon'.\n \t* arm/arm-tables.opt: Regenerated.\n-        * arm/t-aprofile (MULTILIB_REUSE): Add reuse rules for vfpv2 and\n-        neon-vfpv3.\n+\t* arm/t-aprofile (MULTILIB_REUSE): Add reuse rules for vfpv2 and\n+\tneon-vfpv3.\n \t* doc/invoke.texi (ARM: -mfpu): Document new options.  Note that 'vfp'\n \tand 'neon' are aliases for specific implementations.\n \n@@ -1164,7 +1154,8 @@\n \n 2016-11-16  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n-\t* tree-ssa-coalesce.c (register_default_def): Remove register_ssa_partition.\n+\t* tree-ssa-coalesce.c (register_default_def): Remove\n+\tregister_ssa_partition.\n \t(create_outofssa_var_map): Likewise.\n \t* tree-ssa-live.c (register_ssa_partition_check): Remove.\n \t* tree-ssa-live.h (register_ssa_partition): Likewise.\n@@ -1381,8 +1372,7 @@\n \n 2016-11-14  Martin Liska  <mliska@suse.cz>\n \n-\t* tree-ssa-dse.c (dse_optimize_stmt): Remove quotes and extra\n-\tnew line.\n+\t* tree-ssa-dse.c (dse_optimize_stmt): Remove quotes and extra new line.\n \n 2016-11-14  Prasad Ghangal  <prasad.ghangal@gmail.com>\n \t    Richard Biener  <rguenther@suse.de>\n@@ -2041,7 +2031,7 @@\n 2016-11-07  Jack Howarth  <howarth.at.gcc@gmail.com>\n \n \tPR driver/78206\n-\t* incpath.c: (remove_dup(): Also silently ignore EPERM.\n+\t* incpath.c (remove_dup): Also silently ignore EPERM.\n \n 2016-11-07  Martin Jambor  <mjambor@suse.cz>\n \n@@ -3256,7 +3246,7 @@\n \t* config/s390/s390.c (s390_adjust_loop_scan_osc): New function.\n \t(s390_adjust_loops): New function.\n \t(s390_reorg): Invoke s390_adjust_loops.\n-\t* config/s390/s390.md: (UNSPEC_OSC_BREAK): New constant.\n+\t* config/s390/s390.md (UNSPEC_OSC_BREAK): New constant.\n \t(\"osc_break\"): New insn definition.\n \n 2016-10-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n@@ -4824,7 +4814,7 @@\n \t(calculate_dominance_info_for_region): Likewise.\n \t(free_dominance_info_for_region): Likewise.\n \t* dominance.h: Add prototypes for introduced region-based functions\n-\ttree-if-conv.c: (build_region): New function.\n+\t* tree-if-conv.c (build_region): New function.\n \t(if_convertible_loop_p_1): Invoke local version of post-dominators\n \tcalculation before basic block predication with subsequent freeing\n \tpost-dominator info.\n@@ -20913,7 +20903,7 @@\n \n 2016-05-07  Jim Wilson  <jim.wilson@linaro.org>\n \n-\t* config/arm/arm.md: (arch): Add neon.\n+\t* config/arm/arm.md (arch): Add neon.\n \t(arch_enabled): Return yes for arch neon when TARGET_NEON.\n \t* config/arm/vfp.md (movdf_vfp): Add w/G as alternative 3.  Add\n \tneon_move as type for alt 3.  Add arch attr enabling alt 3 for neon.\n@@ -25109,7 +25099,7 @@\n 2016-03-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/70293\n-\t* config/i386/sse.md: (define_insn \"*vec_dup<mode>\"/AVX2):\n+\t* config/i386/sse.md (define_insn \"*vec_dup<mode>\"/AVX2):\n \tBlock third alternative for AVX-512VL target,\n \n 2016-03-21  Martin Liska  <mliska@suse.cz>"}, {"sha": "d1acededa7ad4610856fd9b3553e096192bd1818", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -3914,7 +3914,7 @@ check_p_subdirs=$(wordlist 1,$(check_p_count),$(wordlist 1, \\\n # testsuites like objc or go.\n $(lang_checks_parallelized): check-% : site.exp\n \t-rm -rf $(TESTSUITEDIR)/$*-parallel\n-\t@if [ \"$(filter -j, $(MFLAGS))\" = \"-j\" ]; then \\\n+\t@if [ -n \"$(filter -j%, $(MFLAGS))\" ]; then \\\n \t  test -d $(TESTSUITEDIR) || mkdir $(TESTSUITEDIR) || true; \\\n \t  test -d $(TESTSUITEDIR)/$*-parallel || mkdir $(TESTSUITEDIR)/$*-parallel || true; \\\n \t  GCC_RUNTEST_PARALLELIZE_DIR=`${PWD_COMMAND}`/$(TESTSUITEDIR)/$(check_p_tool)-parallel ; \\"}, {"sha": "ae124deb1f1dbb1e098e948f3e474f537894a561", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -1,3 +1,8 @@\n+2016-11-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc-interface/Make-lang.in (check-acats): Fix detection\n+\tof -j argument.\n+\n 2016-11-18  Richard Sandiford  <richard.sandiford@arm.com>\n  \t    Alan Hayward  <alan.hayward@arm.com>\n  \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "eb0489b4a503171da2eb6f13e93b63e6d8c40e9f", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -890,7 +890,7 @@ check-acats:\n \t@test -d $(ACATSDIR) || mkdir -p $(ACATSDIR); \\\n \trootme=`${PWD_COMMAND}`; export rootme; \\\n \tEXPECT=$(EXPECT); export EXPECT; \\\n-\tif [ -z \"$(CHAPTERS)\" ] && [ \"$(filter -j, $(MFLAGS))\" = \"-j\" ]; \\\n+\tif [ -z \"$(CHAPTERS)\" ] && [ -n \"$(filter -j%, $(MFLAGS))\" ]; \\\n \tthen \\\n \t  rm -rf $(ACATSDIR)-parallel; \\\n \t  mkdir $(ACATSDIR)-parallel; \\"}, {"sha": "55d20c3e89483db67cb7880f26deaea5ab371448", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -49,12 +49,12 @@\n \n 2016-11-22  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n-\tPR libgfortran/78449 \n+\tPR libgfortran/78449\n \t* gfortran.dg/ieee/ieee_8.f90 (aarch64*gnu, arm*gnu*): Mark xfail.\n \n 2016-11-21  Jeff Law  <law@redhat.com>\n \n-        PR target/68538\n+\tPR target/68538\n \t* gcc.c-torture/compile/pr68538.c: New test.\n \n 2016-11-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n@@ -147,7 +147,7 @@\n \t* gcc.target/m68k/pr48551.c: New test.\n \n 2016-11-20  Harald Anlauf  <anlauf@gmx.de>\n- \n+\n \tPR fortran/69741\n \t* gfortran.dg/forall_18.f90: New testcase.\n \n@@ -226,8 +226,8 @@\n 2016-11-18  Andrew Bennett  <andrew.bennett@imgtec.com>\n \t    Toma Tabacu  <toma.tabacu@imgtec.com>\n \n-\t* gcc.target/mips/inline-memcpy-1.c (dg-options): Add\n-\t(REQUIRES_STDLIB).\n+\t* gcc.target/mips/inline-memcpy-1.c (dg-options):\n+\tAdd (REQUIRES_STDLIB).\n \t* gcc.target/mips/inline-memcpy-2.c: Ditto.\n \t* gcc.target/mips/inline-memcpy-3.c: Ditto.\n \t* gcc.target/mips/inline-memcpy-4.c: Ditto.\n@@ -256,8 +256,7 @@\n \t* gcc.target/mips/mips.exp (mips_option_groups): Add stdlib.\n \t(mips_preprocess): Add ignore_output argument that when set\n \twill not return the pre-processed output.\n-\t(mips_arch_info): Update arguments for the call to\n-\tmips_preprocess.\n+\t(mips_arch_info): Update arguments for the call to mips_preprocess.\n \t(mips-dg-init): Ditto.\n \t(mips-dg-options): Check if a test having test option\n \t(REQUIRES_STDLIB) has the required sysroot support for\n@@ -356,7 +355,7 @@\n \t* gcc.target/aarch64/store_repeating_constant_2.c: Likewise.\n \n 2016-11-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-            Richard Biener  <rguenther@suse.de>\n+\t    Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77848\n \t* gfortran.dg/vect/pr77848.f: New test.\n@@ -531,7 +530,7 @@\n 2015-11-16  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.dg/optimize-bswapdi-3.c: Remove xfail.\n-\t* gcc.dg/optimize-bswaphi-1.c: Likewise. \t\n+\t* gcc.dg/optimize-bswaphi-1.c: Likewise.\n \t* gcc.dg/optimize-bswapsi-2.c: Likewise.\n \n 2016-11-16  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n@@ -616,9 +615,9 @@\n 2016-11-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/funcspec-56.inc: New file.\n-\t* gcc.target/i386.funcspec-5.c: Include funcspec-56.inc.  Remove\n+\t* gcc.target/i386/funcspec-5.c: Include funcspec-56.inc.  Remove\n \tcommon 32-bit and 64-bit function specific options.\n-\t* gcc.target/i386.funcspec-6.c: Ditto.\n+\t* gcc.target/i386/funcspec-6.c: Ditto.\n \n 2016-11-15  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "70197d9eb1ff4a210a8dd383ab34138bea44064b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -1,3 +1,10 @@\n+2016-11-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* testsuite/Makefile.am\n+\t(check-DEJAGNU $(check_DEJAGNU_normal_targets)): Fix detection\n+\tof -j argument.\n+\t* testsuite/Makefile.in: Regenereate.\n+\n 2016-11-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/78465\n@@ -7376,7 +7383,7 @@\n \t(is_assignable_v, is_copy_assignable_v, is_move_assignable_v)\n \t(is_destructible_v, is_trivially_constructible_v)\n \t(is_trivially_default_constructible_v)\n- \t(is_trivially_copy_constructible_v, is_trivially_move_constructible_v)\n+\t(is_trivially_copy_constructible_v, is_trivially_move_constructible_v)\n \t(is_trivially_assignable_v, is_trivially_copy_assignable_v)\n \t(is_trivially_move_assignable_v, is_trivially_destructible_v)\n \t(is_nothrow_constructible_v, is_nothrow_default_constructible_v)"}, {"sha": "65848f0166ec1e8b27c7b885f5ef4b3729b42ba9", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -117,7 +117,7 @@ $(check_DEJAGNU_normal_targets): check-DEJAGNUnormal%: normal%/site.exp\n check-DEJAGNU $(check_DEJAGNU_normal_targets): check-DEJAGNU%: site.exp\n \t$(if $*,@)AR=\"$(AR)\"; export AR; \\\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n-\tif [ -z \"$*\" ] && [ \"$(filter -j, $(MFLAGS))\" = \"-j\" ]; then \\\n+\tif [ -z \"$*\" ] && [ -n \"$(filter -j%, $(MFLAGS))\" ]; then \\\n \t  rm -rf normal-parallel || true; \\\n \t  mkdir normal-parallel; \\\n \t  $(MAKE) $(AM_MAKEFLAGS) $(check_DEJAGNU_normal_targets); \\"}, {"sha": "1cdf4b894ecbbf3060a53227697139e38380fffb", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b0acbe2bec113381c9925cc29f26a402873350/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b0acbe2bec113381c9925cc29f26a402873350/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=b2b0acbe2bec113381c9925cc29f26a402873350", "patch": "@@ -598,7 +598,7 @@ $(check_DEJAGNU_normal_targets): check-DEJAGNUnormal%: normal%/site.exp\n check-DEJAGNU $(check_DEJAGNU_normal_targets): check-DEJAGNU%: site.exp\n \t$(if $*,@)AR=\"$(AR)\"; export AR; \\\n \tRANLIB=\"$(RANLIB)\"; export RANLIB; \\\n-\tif [ -z \"$*\" ] && [ \"$(filter -j, $(MFLAGS))\" = \"-j\" ]; then \\\n+\tif [ -z \"$*\" ] && [ -n \"$(filter -j%, $(MFLAGS))\" ]; then \\\n \t  rm -rf normal-parallel || true; \\\n \t  mkdir normal-parallel; \\\n \t  $(MAKE) $(AM_MAKEFLAGS) $(check_DEJAGNU_normal_targets); \\"}]}