{"sha": "efa26eaae377bf2a5ce9b02b84f3963a0166e280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZhMjZlYWFlMzc3YmYyYTVjZTliMDJiODRmMzk2M2EwMTY2ZTI4MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-04-17T13:42:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-04-17T13:42:48Z"}, "message": "re PR rtl-optimization/53011 (ice in verify_loop_structure: bad sizes)\n\n2012-04-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/53011\n\t* tree-eh.c (cleanup_empty_eh_merge_phis): Properly discard\n\tloops when redirecting an entry or latch edge.\n\n\t* g++.dg/torture/pr53011.C: New testcase.\n\nFrom-SVN: r186529", "tree": {"sha": "a481bf2c7620ac00b781d4d362582751514e3c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a481bf2c7620ac00b781d4d362582751514e3c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efa26eaae377bf2a5ce9b02b84f3963a0166e280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efa26eaae377bf2a5ce9b02b84f3963a0166e280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efa26eaae377bf2a5ce9b02b84f3963a0166e280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efa26eaae377bf2a5ce9b02b84f3963a0166e280/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d51e8a2df2f9eadb6aa8a1bcf00d62e17b6ef4cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51e8a2df2f9eadb6aa8a1bcf00d62e17b6ef4cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51e8a2df2f9eadb6aa8a1bcf00d62e17b6ef4cf"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "e09d6724b6f620602b3bbdd058ab52fcf4f40100", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efa26eaae377bf2a5ce9b02b84f3963a0166e280", "patch": "@@ -1,3 +1,9 @@\n+2012-04-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/53011\n+\t* tree-eh.c (cleanup_empty_eh_merge_phis): Properly discard\n+\tloops when redirecting an entry or latch edge.\n+\n 2012-04-17  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* sel-sched.c (sel_global_init): Revert previous change."}, {"sha": "e1862c65b8fd4569fbc79c2ec709d5215b279319", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=efa26eaae377bf2a5ce9b02b84f3963a0166e280", "patch": "@@ -1,3 +1,8 @@\n+2012-04-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/53011\n+\t* g++.dg/torture/pr53011.C: New testcase.\n+\n 2012-04-16  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38543"}, {"sha": "2cd8a60332df29b5f697791d00544997d21985f9", "filename": "gcc/testsuite/g++.dg/torture/pr53011.C", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53011.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53011.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53011.C?ref=efa26eaae377bf2a5ce9b02b84f3963a0166e280", "patch": "@@ -0,0 +1,66 @@\n+// { dg-do compile }\n+\n+extern \"C\" class WvFastString;\n+typedef WvFastString& WvStringParm;\n+struct WvFastString {\n+  ~WvFastString();\n+  operator char* () {}\n+};\n+class WvString : WvFastString {};\n+class WvAddr {};\n+class WvIPAddr : WvAddr {};\n+struct WvIPNet : WvIPAddr {\n+  bool is_default() {}\n+};\n+template<class T, bool> struct WvTraits_Helper {\n+  static void release(T *obj) {\n+    delete obj;\n+  }\n+};\n+template<class From> struct WvTraits {\n+  static void release(From *obj) {\n+    WvTraits_Helper<From, 0>::release(obj);\n+  }\n+};\n+struct WvLink {\n+  void   *data;\n+  WvLink *next;\n+  bool    autofree;\n+  WvLink(bool, int) : autofree() {}\n+  bool get_autofree() {}\n+\n+  void unlink() {\n+    delete this;\n+  }\n+};\n+struct WvListBase {\n+  WvLink head, *tail;\n+  WvListBase() : head(0, 0) {}\n+};\n+template<class T> struct WvList : WvListBase {\n+  ~WvList() {\n+    zap();\n+  }\n+\n+  void zap(bool destroy = 1) {\n+    while (head.next) unlink_after(&head, destroy);\n+  }\n+\n+  void unlink_after(WvLink *after, bool destroy) {\n+    WvLink *next = 0;\n+    T *obj       = (destroy && next->get_autofree()) ? \n+                   static_cast<T*>(next->data) : 0;\n+\n+    if (tail) tail = after;\n+    next->unlink();\n+    WvTraits<T>::release(obj);\n+  }\n+};\n+typedef WvList<WvString>WvStringListBase;\n+class WvStringList : WvStringListBase {};\n+class WvSubProc {\n+  WvStringList last_args, env;\n+};\n+void addroute(WvIPNet& dest, WvStringParm table) {\n+  if (dest.is_default() || (table != \"default\")) WvSubProc checkProc;\n+}"}, {"sha": "0241a5f1bc43b05e34616d4ba8623d231b44875f", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efa26eaae377bf2a5ce9b02b84f3963a0166e280/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=efa26eaae377bf2a5ce9b02b84f3963a0166e280", "patch": "@@ -3916,6 +3916,21 @@ cleanup_empty_eh_merge_phis (basic_block new_bb, basic_block old_bb,\n   for (ei = ei_start (old_bb->preds); (e = ei_safe_edge (ei)); )\n     if (e->flags & EDGE_EH)\n       {\n+\t/* ???  CFG manipluation routines do not try to update loop\n+\t   form on edge redirection.  Do so manually here for now.  */\n+\t/* If we redirect a loop entry or latch edge that will either create\n+\t   a multiple entry loop or rotate the loop.  If the loops merge\n+\t   we may have created a loop with multiple latches.\n+\t   All of this isn't easily fixed thus cancel the affected loop\n+\t   and mark the other loop as possibly having multiple latches.  */\n+\tif (current_loops\n+\t    && e->dest == e->dest->loop_father->header)\n+\t  {\n+\t    e->dest->loop_father->header = NULL;\n+\t    e->dest->loop_father->latch = NULL;\n+\t    new_bb->loop_father->latch = NULL;\n+\t    loops_state_set (LOOPS_NEED_FIXUP|LOOPS_MAY_HAVE_MULTIPLE_LATCHES);\n+\t  }\n \tredirect_eh_edge_1 (e, new_bb, change_region);\n \tredirect_edge_succ (e, new_bb);\n \tflush_pending_stmts (e);"}]}