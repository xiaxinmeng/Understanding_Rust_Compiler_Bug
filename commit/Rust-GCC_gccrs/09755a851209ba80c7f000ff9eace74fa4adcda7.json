{"sha": "09755a851209ba80c7f000ff9eace74fa4adcda7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk3NTVhODUxMjA5YmE4MGM3ZjAwMGZmOWVhY2U3NGZhNGFkY2RhNw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2003-12-08T10:01:01Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2003-12-08T10:01:01Z"}, "message": "re PR libstdc++/12496 (wrong result for __atomic_add(&value, -1) when using -O0 -m64)\n\n2003-12-08  David S. Miller  <davem@redhat.com>\n\n\tPR libstdc++/12496\n\t* config/cpu/sparc/atomicity.h (__exchange_and_add, __atomic_add):\n\tExtend increment to _Atomic_word before giving to assembler.\n\nFrom-SVN: r74409", "tree": {"sha": "e6cee835a0f41fcd72603e166d05d15bb503e7b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6cee835a0f41fcd72603e166d05d15bb503e7b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09755a851209ba80c7f000ff9eace74fa4adcda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09755a851209ba80c7f000ff9eace74fa4adcda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09755a851209ba80c7f000ff9eace74fa4adcda7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09755a851209ba80c7f000ff9eace74fa4adcda7/comments", "author": null, "committer": null, "parents": [{"sha": "0875a894be8f4f38d2809c032665cb766e300e6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0875a894be8f4f38d2809c032665cb766e300e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0875a894be8f4f38d2809c032665cb766e300e6d"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "8d2c9ac2b794c29185c879e420a2da6952838078", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09755a851209ba80c7f000ff9eace74fa4adcda7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09755a851209ba80c7f000ff9eace74fa4adcda7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=09755a851209ba80c7f000ff9eace74fa4adcda7", "patch": "@@ -1,3 +1,9 @@\n+2003-12-08  David S. Miller  <davem@redhat.com>\n+\n+\tPR libstdc++/12496\n+\t* config/cpu/sparc/atomicity.h (__exchange_and_add, __atomic_add):\n+\tExtend increment to _Atomic_word before giving to assembler.\n+\n 2003-12-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/ext/enc_filebuf/char/13189.cc: Guard for __enc_traits."}, {"sha": "93e3dff519526549c7525203ec6571ffcecc7dbf", "filename": "libstdc++-v3/config/cpu/sparc/atomicity.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09755a851209ba80c7f000ff9eace74fa4adcda7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09755a851209ba80c7f000ff9eace74fa4adcda7/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fsparc%2Fatomicity.h?ref=09755a851209ba80c7f000ff9eace74fa4adcda7", "patch": "@@ -39,6 +39,7 @@ __attribute__ ((__unused__))\n __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n {\n   _Atomic_word __tmp1, __tmp2;\n+  _Atomic_word __val_extended = __val;\n \n   __asm__ __volatile__(\"1:\tldx\t[%2], %0\\n\\t\"\n \t\t       \"\tadd\t%0, %3, %1\\n\\t\"\n@@ -47,7 +48,7 @@ __exchange_and_add (volatile _Atomic_word *__mem, int __val)\n \t\t       \"\tbrnz,pn\t%0, 1b\\n\\t\"\n \t\t       \"\t nop\"\n \t\t       : \"=&r\" (__tmp1), \"=&r\" (__tmp2)\n-\t\t       : \"r\" (__mem), \"r\" (__val)\n+\t\t       : \"r\" (__mem), \"r\" (__val_extended)\n \t\t       : \"memory\");\n   return __tmp2;\n }\n@@ -57,6 +58,7 @@ __attribute__ ((__unused__))\n __atomic_add (volatile _Atomic_word* __mem, int __val)\n {\n   _Atomic_word __tmp1, __tmp2;\n+  _Atomic_word __val_extended = __val;\n \n   __asm__ __volatile__(\"1:\tldx\t[%2], %0\\n\\t\"\n \t\t       \"\tadd\t%0, %3, %1\\n\\t\"\n@@ -65,7 +67,7 @@ __atomic_add (volatile _Atomic_word* __mem, int __val)\n \t\t       \"\tbrnz,pn\t%0, 1b\\n\\t\"\n \t\t       \"\t nop\"\n \t\t       : \"=&r\" (__tmp1), \"=&r\" (__tmp2)\n-\t\t       : \"r\" (__mem), \"r\" (__val)\n+\t\t       : \"r\" (__mem), \"r\" (__val_extended)\n \t\t       : \"memory\");\n }\n "}]}