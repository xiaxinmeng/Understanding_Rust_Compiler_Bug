{"sha": "b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjY2ZlZDlhMGRmODJiZTA0ZDU2NWUyZjVlYmQzYzU4MWFkMmQ1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-04-12T17:49:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-04-12T17:49:11Z"}, "message": "combine.c (update_cfg_for_uncondjump): Instead of testing at_end assert it is always true.\n\n\t* combine.c (update_cfg_for_uncondjump): Instead of testing at_end\n\tassert it is always true.\n\t(try_combine): Don't call update_cfg_for_uncondjump for noop non-jump\n\tmoves.\n\nFrom-SVN: r172329", "tree": {"sha": "0a5d1975afe21288e2370086b2a251eee36003d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a5d1975afe21288e2370086b2a251eee36003d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf3caeaf0ac59e858ff2ae54e59dc5a2bf51961d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3caeaf0ac59e858ff2ae54e59dc5a2bf51961d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3caeaf0ac59e858ff2ae54e59dc5a2bf51961d"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "96f542caea66e3d78461e5a61fe3816ba38d33b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59", "patch": "@@ -1,3 +1,10 @@\n+2011-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* combine.c (update_cfg_for_uncondjump): Instead of testing at_end\n+\tassert it is always true.\n+\t(try_combine): Don't call update_cfg_for_uncondjump for noop non-jump\n+\tmoves.\n+\n 2011-04-12  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* c-parser.c (c_lex_one_token): Rewritten conditional used when"}, {"sha": "766118d668fa4d71e2147fd5b2a94054e1dabfe4", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=b4ccfed9a0df82be04d565e2f5ebd3c581ad2d59", "patch": "@@ -2490,13 +2490,12 @@ static void\n update_cfg_for_uncondjump (rtx insn)\n {\n   basic_block bb = BLOCK_FOR_INSN (insn);\n-  bool at_end = (BB_END (bb) == insn);\n+  gcc_assert (BB_END (bb) == insn);\n \n-  if (at_end)\n-    purge_dead_edges (bb);\n+  purge_dead_edges (bb);\n \n   delete_insn (insn);\n-  if (at_end && EDGE_COUNT (bb->succs) == 1)\n+  if (EDGE_COUNT (bb->succs) == 1)\n     {\n       rtx insn;\n \n@@ -4409,7 +4408,8 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n \n   /* A noop might also need cleaning up of CFG, if it comes from the\n      simplification of a jump.  */\n-  if (GET_CODE (newpat) == SET\n+  if (JUMP_P (i3)\n+      && GET_CODE (newpat) == SET\n       && SET_SRC (newpat) == pc_rtx\n       && SET_DEST (newpat) == pc_rtx)\n     {\n@@ -4418,6 +4418,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n     }\n \n   if (undobuf.other_insn != NULL_RTX\n+      && JUMP_P (undobuf.other_insn)\n       && GET_CODE (PATTERN (undobuf.other_insn)) == SET\n       && SET_SRC (PATTERN (undobuf.other_insn)) == pc_rtx\n       && SET_DEST (PATTERN (undobuf.other_insn)) == pc_rtx)"}]}