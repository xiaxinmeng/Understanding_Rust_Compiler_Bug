{"sha": "1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2OWQyNGU2MWExZmM3YTMxMzNjYTgyYmNlZjJhNWE0MzdkYTk5Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-05T19:54:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-05T19:54:16Z"}, "message": "re PR middle-end/44777 (ICE: SIGSEGV with -fprofile-use in gcc.c-torture/execute/comp-goto-2.c)\n\n\tPR middle-end/44777\n\t* profile.c (branch_prob): Split bbs that have exit edge\n\tand need a fake entry edge too.\n\n\t* gcc.dg/tree-prof/pr44777.c: New test.\n\nFrom-SVN: r182920", "tree": {"sha": "c1e56a37e6acbf3a34e12021d57db83b3eae63dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e56a37e6acbf3a34e12021d57db83b3eae63dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56494762bed42418501591de5c4d6e959feff017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56494762bed42418501591de5c4d6e959feff017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56494762bed42418501591de5c4d6e959feff017"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "9cbe9c0ffb6246fa6d52b043f9d0d8cc2101e19c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "patch": "@@ -1,3 +1,9 @@\n+2012-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/44777\n+\t* profile.c (branch_prob): Split bbs that have exit edge\n+\tand need a fake entry edge too.\n+\n 2012-01-05  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/49710"}, {"sha": "10ab756d567652ad192c4f42dfa861819e86ec1e", "filename": "gcc/profile.c", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "patch": "@@ -1,6 +1,6 @@\n /* Calculate branch probabilities, and basic block execution counts.\n    Copyright (C) 1990, 1991, 1992, 1993, 1994, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by James E. Wilson, UC Berkeley/Cygnus Support;\n    based on some ideas from Dain Samples of UC Berkeley.\n@@ -1040,6 +1040,41 @@ branch_prob (void)\n \t    fprintf (dump_file, \"Adding fake entry edge to bb %i\\n\",\n \t\t     bb->index);\n \t  make_edge (ENTRY_BLOCK_PTR, bb, EDGE_FAKE);\n+\t  /* Avoid bbs that have both fake entry edge and also some\n+\t     exit edge.  One of those edges wouldn't be added to the\n+\t     spanning tree, but we can't instrument any of them.  */\n+\t  if (have_exit_edge || need_exit_edge)\n+\t    {\n+\t      gimple_stmt_iterator gsi;\n+\t      gimple first;\n+\t      tree fndecl;\n+\n+\t      gsi = gsi_after_labels (bb);\n+\t      gcc_checking_assert (!gsi_end_p (gsi));\n+\t      first = gsi_stmt (gsi);\n+\t      if (is_gimple_debug (first))\n+\t\t{\n+\t\t  gsi_next_nondebug (&gsi);\n+\t\t  gcc_checking_assert (!gsi_end_p (gsi));\n+\t\t  first = gsi_stmt (gsi);\n+\t\t}\n+\t      /* Don't split the bbs containing __builtin_setjmp_receiver\n+\t\t or __builtin_setjmp_dispatcher calls.  These are very\n+\t\t special and don't expect anything to be inserted before\n+\t\t them.  */\n+\t      if (!is_gimple_call (first)\n+\t\t  || (fndecl = gimple_call_fndecl (first)) == NULL\n+\t\t  || DECL_BUILT_IN_CLASS (fndecl) != BUILT_IN_NORMAL\n+\t\t  || (DECL_FUNCTION_CODE (fndecl) != BUILT_IN_SETJMP_RECEIVER\n+\t\t      && (DECL_FUNCTION_CODE (fndecl)\n+\t\t\t  != BUILT_IN_SETJMP_DISPATCHER)))\n+\t\t{\n+\t\t  if (dump_file)\n+\t\t    fprintf (dump_file, \"Splitting bb %i after labels\\n\",\n+\t\t\t     bb->index);\n+\t\t  split_block_after_labels (bb);\n+\t\t}\n+\t    }\n \t}\n     }\n "}, {"sha": "d35dab996b5a791dcc757ed4c8914b0f16a0906f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "patch": "@@ -1,3 +1,8 @@\n+2012-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/44777\n+\t* gcc.dg/tree-prof/pr44777.c: New test.\n+\n 2012-01-05  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/49710"}, {"sha": "1c4da7f5f7dc6619562647f31e8744f44e4045cc", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr44777.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e69d24e61a1fc7a3133ca82bcef2a5a437da992/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr44777.c?ref=1e69d24e61a1fc7a3133ca82bcef2a5a437da992", "patch": "@@ -0,0 +1,43 @@\n+/* PR middle-end/44777 */\n+/* { dg-options \"-O0\" } */\n+/* A variant of gcc.c-torture/execute/comp-goto-2.c.  */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+#ifdef STACK_SIZE\n+#define DEPTH ((STACK_SIZE) / 512 + 1)\n+#else\n+#define DEPTH 1000\n+#endif\n+\n+#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+int\n+x (int a)\n+{\n+  __label__ xlab;\n+  void y (int a)\n+    {\n+      void *x = &&llab;\n+      if (a==-1)\n+\tgoto *x;\n+      if (a==0)\n+\tgoto xlab;\n+    llab:\n+      y (a-1);\n+    }\n+  y (a);\n+ xlab:;\n+  return a;\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+#if ! defined (NO_LABEL_VALUES) && !defined (NO_TRAMPOLINES)\n+  if (x (DEPTH) != DEPTH)\n+    abort ();\n+#endif\n+  exit (0);\n+}"}]}