{"sha": "4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUzNGIzMzhmNzAzZDcyZTFkNGE5MDExNmU5ZDJjNmFhMGEzZDVkOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-06T07:11:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-06T07:11:25Z"}, "message": "re PR c/82437 (false-positive -Wtautological-compare warning with -std=gnu89)\n\n\tPR c/82437\n\t* c-warn.c (warn_tautological_bitwise_comparison): Instead of\n\tusing to_widest use wide_int with the larger of the two precisions.\n\n\t* c-c++-common/Wtautological-compare-6.c: New test.\n\nFrom-SVN: r253476", "tree": {"sha": "1edd646c5ff05278d73442bec96be0300188aeaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1edd646c5ff05278d73442bec96be0300188aeaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd8d431f44377efe110b02163d693e60421acdeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8d431f44377efe110b02163d693e60421acdeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8d431f44377efe110b02163d693e60421acdeb"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "f70b6f838322ac9d80c847db095e4c92368c5c62", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "patch": "@@ -1,3 +1,9 @@\n+2017-10-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/82437\n+\t* c-warn.c (warn_tautological_bitwise_comparison): Instead of\n+\tusing to_widest use wide_int with the larger of the two precisions.\n+\n 2017-10-05  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* c-pretty-print.c (pp_c_parameter_type_list): Print ... for variadic"}, {"sha": "2eb4cf5dd41537ab498dbe608b5ca60f85ec24b2", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "patch": "@@ -356,16 +356,24 @@ warn_tautological_bitwise_comparison (location_t loc, tree_code code,\n     return;\n \n   /* Note that the two operands are from before the usual integer\n-     conversions, so their types might not be the same.  */\n-  widest_int res;\n+     conversions, so their types might not be the same.\n+     Use the larger of the two precisions and ignore bits outside\n+     of that.  */\n+  int prec = MAX (TYPE_PRECISION (TREE_TYPE (cst)),\n+\t\t  TYPE_PRECISION (TREE_TYPE (bitopcst)));\n+\n+  wide_int bitopcstw = wide_int::from (bitopcst, prec, UNSIGNED);\n+  wide_int cstw = wide_int::from (cst, prec, UNSIGNED);\n+\n+  wide_int res;\n   if (TREE_CODE (bitop) == BIT_AND_EXPR)\n-    res = wi::to_widest (bitopcst) & wi::to_widest (cst);\n+    res = bitopcstw & cstw;\n   else\n-    res = wi::to_widest (bitopcst) | wi::to_widest (cst);\n+    res = bitopcstw | cstw;\n \n   /* For BIT_AND only warn if (CST2 & CST1) != CST1, and\n      for BIT_OR only if (CST2 | CST1) != CST1.  */\n-  if (res == wi::to_widest (cst))\n+  if (res == cstw)\n     return;\n \n   if (code == EQ_EXPR)"}, {"sha": "1021c6ab563c590ff134a9a31fb238f4e871208e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "patch": "@@ -1,3 +1,8 @@\n+2017-10-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/82437\n+\t* c-c++-common/Wtautological-compare-6.c: New test.\n+\n 2017-10-06  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/graphite/id-15.c: No longer expect a code generation error."}, {"sha": "fcdca72e3f34a585fada8a3de230b9d5f86c0a09", "filename": "gcc/testsuite/c-c++-common/Wtautological-compare-6.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWtautological-compare-6.c?ref=4e34b338f703d72e1d4a90116e9d2c6aa0a3d5d8", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/82437 */\n+/* { dg-do compile { target int32plus } } */\n+/* { dg-options \"-Wtautological-compare\" } */\n+\n+int\n+foo (unsigned int x)\n+{\n+  if ((x & -1879048192) != -1879048192)\t/* { dg-bogus \"bitwise comparison always evaluates to\" } */\n+    return 0;\n+  return 1;\n+}"}]}