{"sha": "3eb4e360ee7ce6cf014834653222157a50d9cc79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViNGUzNjBlZTdjZTZjZjAxNDgzNDY1MzIyMjE1N2E1MGQ5Y2M3OQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-11-27T01:06:55Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-11-27T01:06:55Z"}, "message": "re PR middle-end/12769 (-mlongcall doesn't convert all calls to long calls for builtin functions)\n\n\tPR target/12769\n\t* config/rs6000/rs6000.c (init_cumulative_args): Set call_cookie\n\tfrom rs6000_default_long_calls for libcalls.\n\nFrom-SVN: r91362", "tree": {"sha": "fe6313223241f2a345807a6943eaa87cf9653bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe6313223241f2a345807a6943eaa87cf9653bcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb4e360ee7ce6cf014834653222157a50d9cc79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb4e360ee7ce6cf014834653222157a50d9cc79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb4e360ee7ce6cf014834653222157a50d9cc79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb4e360ee7ce6cf014834653222157a50d9cc79/comments", "author": null, "committer": null, "parents": [{"sha": "360e353587b4c3f654598babb476aed69f760b51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/360e353587b4c3f654598babb476aed69f760b51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/360e353587b4c3f654598babb476aed69f760b51"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "857aa8f10539fa9bef3c5ffdae3f2b886307c7c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb4e360ee7ce6cf014834653222157a50d9cc79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb4e360ee7ce6cf014834653222157a50d9cc79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3eb4e360ee7ce6cf014834653222157a50d9cc79", "patch": "@@ -1,3 +1,9 @@\n+2004-11-27  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR target/12769\n+\t* config/rs6000/rs6000.c (init_cumulative_args): Set call_cookie\n+\tfrom rs6000_default_long_calls for libcalls.\n+\n 2004-11-26  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expmed.c (extract_bit_field): When extracting from non-integer mode,"}, {"sha": "b7deebb000068a25e14cb34cd4dd9779237f9d54", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb4e360ee7ce6cf014834653222157a50d9cc79/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb4e360ee7ce6cf014834653222157a50d9cc79/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3eb4e360ee7ce6cf014834653222157a50d9cc79", "patch": "@@ -278,7 +278,8 @@ static GTY(()) int rs6000_sr_alias_set;\n /* Call distance, overridden by -mlongcall and #pragma longcall(1).\n    The only place that looks at this is rs6000_set_default_type_attributes;\n    everywhere else should rely on the presence or absence of a longcall\n-   attribute on the function declaration.  */\n+   attribute on the function declaration.  Exception: init_cumulative_args\n+   looks at it too, for libcalls.  */\n int rs6000_default_long_calls;\n const char *rs6000_longcall_switch;\n \n@@ -4699,10 +4700,11 @@ init_cumulative_args (CUMULATIVE_ARGS *cum, tree fntype,\n     cum->nargs_prototype = n_named_args;\n \n   /* Check for a longcall attribute.  */\n-  if (fntype\n-      && lookup_attribute (\"longcall\", TYPE_ATTRIBUTES (fntype))\n-      && !lookup_attribute (\"shortcall\", TYPE_ATTRIBUTES (fntype)))\n-    cum->call_cookie = CALL_LONG;\n+  if ((!fntype && rs6000_default_long_calls)\n+      || (fntype\n+\t  && lookup_attribute (\"longcall\", TYPE_ATTRIBUTES (fntype))\n+\t  && !lookup_attribute (\"shortcall\", TYPE_ATTRIBUTES (fntype))))\n+    cum->call_cookie |= CALL_LONG;\n \n   if (TARGET_DEBUG_ARG)\n     {"}]}