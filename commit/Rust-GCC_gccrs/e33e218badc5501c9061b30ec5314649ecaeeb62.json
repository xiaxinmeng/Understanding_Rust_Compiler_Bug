{"sha": "e33e218badc5501c9061b30ec5314649ecaeeb62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzZTIxOGJhZGM1NTAxYzkwNjFiMzBlYzUzMTQ2NDllY2FlZWI2Mg==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2005-05-04T21:38:23Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2005-05-04T21:38:23Z"}, "message": "re PR libfortran/21354 ([4.0 only] Rank 7 not handled correctly)\n\n2005-05-04  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/21354\n\t* m4/cshift1.m4: Change dimension of auxiliary arrays from\n\tGFC_MAX_DIMENSION - 1 to GFC_MAX_DIMENSION.\n\t* m4/eoshift1.m4: Likewise.\n\t* m4/eoshift3.m4: Likewise.\n\t* m4/ifunction.m4: Likewise.\n\t* m4/in_pack.m4: Likewise.\n\t* m4/in_unpack.m4: Likewise.\n\t* intrinsics/cshift0.c: Likewise.\n\t* intrinsics/eoshift0.c: Likewise.\n\t* intrinsics/eoshift2.c: Likewise.\n\t* intrinsics/random.c: Likewise.\n\t* intrinsics/spread_generic.c: Likewise.\n\t* intrinsics/stat.c: Likewise.\n\t* generated/all_l4.c: Regenerated.\n\t* generated/all_l8.c: Regenerated.\n\t* generated/any_l4.c: Regenerated.\n\t* generated/any_l8.c: Regenerated.\n\t* generated/count_4_l4.c: Regenerated.\n\t* generated/count_4_l8.c: Regenerated.\n\t* generated/count_8_l4.c: Regenerated.\n\t* generated/count_8_l8.c: Regenerated.\n\t* generated/cshift1_4.c: Regenerated.\n\t* generated/cshift1_8.c: Regenerated.\n\t* generated/eoshift1_4.c: Regenerated.\n\t* generated/eoshift1_8.c: Regenerated.\n\t* generated/eoshift3_4.c: Regenerated.\n\t* generated/eoshift3_8.c: Regenerated.\n\t* generated/in_pack_i4.c: Regenerated.\n\t* generated/in_pack_i8.c: Regenerated.\n\t* generated/in_unpack_i4.c: Regenerated.\n\t* generated/in_unpack_i8.c: Regenerated.\n\t* generated/maxloc0_4_i4.c: Regenerated.\n\t* generated/maxloc0_4_i8.c: Regenerated.\n\t* generated/maxloc0_4_r4.c: Regenerated.\n\t* generated/maxloc0_4_r8.c: Regenerated.\n\t* generated/maxloc0_8_i4.c: Regenerated.\n\t* generated/maxloc0_8_i8.c: Regenerated.\n\t* generated/maxloc0_8_r4.c: Regenerated.\n\t* generated/maxloc0_8_r8.c: Regenerated.\n\t* generated/maxloc1_4_i4.c: Regenerated.\n\t* generated/maxloc1_4_i8.c: Regenerated.\n\t* generated/maxloc1_4_r4.c: Regenerated.\n\t* generated/maxloc1_4_r8.c: Regenerated.\n\t* generated/maxloc1_8_i4.c: Regenerated.\n\t* generated/maxloc1_8_i8.c: Regenerated.\n\t* generated/maxloc1_8_r4.c: Regenerated.\n\t* generated/maxloc1_8_r8.c: Regenerated.\n\t* generated/maxval_i4.c: Regenerated.\n\t* generated/maxval_i8.c: Regenerated.\n\t* generated/maxval_r4.c: Regenerated.\n\t* generated/maxval_r8.c: Regenerated.\n\t* generated/minloc0_4_i4.c: Regenerated.\n\t* generated/minloc0_4_i8.c: Regenerated.\n\t* generated/minloc0_4_r4.c: Regenerated.\n\t* generated/minloc0_4_r8.c: Regenerated.\n\t* generated/minloc0_8_i4.c: Regenerated.\n\t* generated/minloc0_8_i8.c: Regenerated.\n\t* generated/minloc0_8_r4.c: Regenerated.\n\t* generated/minloc0_8_r8.c: Regenerated.\n\t* generated/minloc1_4_i4.c: Regenerated.\n\t* generated/minloc1_4_i8.c: Regenerated.\n\t* generated/minloc1_4_r4.c: Regenerated.\n\t* generated/minloc1_4_r8.c: Regenerated.\n\t* generated/minloc1_8_i4.c: Regenerated.\n\t* generated/minloc1_8_i8.c: Regenerated.\n\t* generated/minloc1_8_r4.c: Regenerated.\n\t* generated/minloc1_8_r8.c: Regenerated.\n\t* generated/minval_i4.c: Regenerated.\n\t* generated/minval_i8.c: Regenerated.\n\t* generated/minval_r4.c: Regenerated.\n\t* generated/minval_r8.c: Regenerated.\n\t* generated/product_c4.c: Regenerated.\n\t* generated/product_c8.c: Regenerated.\n\t* generated/product_i4.c: Regenerated.\n\t* generated/product_i8.c: Regenerated.\n\t* generated/product_r4.c: Regenerated.\n\t* generated/product_r8.c: Regenerated.\n\t* generated/sum_c4.c: Regenerated.\n\t* generated/sum_c8.c: Regenerated.\n\t* generated/sum_i4.c: Regenerated.\n\t* generated/sum_i8.c: Regenerated.\n\t* generated/sum_r4.c: Regenerated.\n\t* generated/sum_r8.c: Regenerated.\n\n2005-05-04  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/21354\n\tgfortran.dg/in_pack_rank7.f90:  New test.\n\nFrom-SVN: r99232", "tree": {"sha": "e67d83ffc94052a2e5db6bbbebcc19291313070a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e67d83ffc94052a2e5db6bbbebcc19291313070a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e33e218badc5501c9061b30ec5314649ecaeeb62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33e218badc5501c9061b30ec5314649ecaeeb62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e33e218badc5501c9061b30ec5314649ecaeeb62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e33e218badc5501c9061b30ec5314649ecaeeb62/comments", "author": null, "committer": null, "parents": [{"sha": "5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71"}], "stats": {"total": 1330, "additions": 865, "deletions": 465}, "files": [{"sha": "7058ed25f79752effae7cc42a25da19315cfd72b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -1,3 +1,8 @@\n+2005-05-04  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/21354\n+\tgfortran.dg/in_pack_rank7.f90:  New test.\n+\n 2005-05-03  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/15618"}, {"sha": "aa6286689c3cd6d10eb1af9909a921aabcf7205c", "filename": "gcc/testsuite/gfortran.dg/in_pack_rank7.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/gcc%2Ftestsuite%2Fgfortran.dg%2Fin_pack_rank7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/gcc%2Ftestsuite%2Fgfortran.dg%2Fin_pack_rank7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fin_pack_rank7.f90?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do run }\n+! PR 21354:  Rank 7 was not handled correctly by many library\n+!            functions, including in_pack.\n+program main\n+  real, dimension (2,2,2,2,2,2,2):: a\n+  a = 1.0\n+  call foo(a(2:1:-1,:,:,:,:,:,:))\n+end program main\n+\n+subroutine foo(a)\n+  real, dimension (2,2,2,2,2,2,2):: a\n+end subroutine foo"}, {"sha": "3e0b3613c5d3ac64c6bff8eec47069a2f7b6681e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -1,3 +1,90 @@\n+2005-05-04  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/21354\n+\t* m4/cshift1.m4: Change dimension of auxiliary arrays from\n+\tGFC_MAX_DIMENSION - 1 to GFC_MAX_DIMENSION.\n+\t* m4/eoshift1.m4: Likewise.\n+\t* m4/eoshift3.m4: Likewise.\n+\t* m4/ifunction.m4: Likewise.\n+\t* m4/in_pack.m4: Likewise.\n+\t* m4/in_unpack.m4: Likewise.\n+\t* intrinsics/cshift0.c: Likewise.\n+\t* intrinsics/eoshift0.c: Likewise.\n+\t* intrinsics/eoshift2.c: Likewise.\n+\t* intrinsics/random.c: Likewise.\n+\t* intrinsics/spread_generic.c: Likewise.\n+\t* intrinsics/stat.c: Likewise.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_4_l4.c: Regenerated.\n+\t* generated/count_4_l8.c: Regenerated.\n+\t* generated/count_8_l4.c: Regenerated.\n+\t* generated/count_8_l8.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/eoshift1_4.c: Regenerated.\n+\t* generated/eoshift1_8.c: Regenerated.\n+\t* generated/eoshift3_4.c: Regenerated.\n+\t* generated/eoshift3_8.c: Regenerated.\n+\t* generated/in_pack_i4.c: Regenerated.\n+\t* generated/in_pack_i8.c: Regenerated.\n+\t* generated/in_unpack_i4.c: Regenerated.\n+\t* generated/in_unpack_i8.c: Regenerated.\n+\t* generated/maxloc0_4_i4.c: Regenerated.\n+\t* generated/maxloc0_4_i8.c: Regenerated.\n+\t* generated/maxloc0_4_r4.c: Regenerated.\n+\t* generated/maxloc0_4_r8.c: Regenerated.\n+\t* generated/maxloc0_8_i4.c: Regenerated.\n+\t* generated/maxloc0_8_i8.c: Regenerated.\n+\t* generated/maxloc0_8_r4.c: Regenerated.\n+\t* generated/maxloc0_8_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc0_4_i4.c: Regenerated.\n+\t* generated/minloc0_4_i8.c: Regenerated.\n+\t* generated/minloc0_4_r4.c: Regenerated.\n+\t* generated/minloc0_4_r8.c: Regenerated.\n+\t* generated/minloc0_8_i4.c: Regenerated.\n+\t* generated/minloc0_8_i8.c: Regenerated.\n+\t* generated/minloc0_8_r4.c: Regenerated.\n+\t* generated/minloc0_8_r8.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n 2005-04-30  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/18958"}, {"sha": "2b070bbb30b4406457a99ac4a880379c34bce8eb", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(all_l4);\n void\n all_l4 (gfc_array_l4 *retarray, gfc_array_l4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_4 *base;\n   GFC_LOGICAL_4 *dest;\n   index_type rank;"}, {"sha": "29f4e2653acf195b19e976d25eee5ea0557a600a", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(all_l8);\n void\n all_l8 (gfc_array_l8 *retarray, gfc_array_l8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_8 *base;\n   GFC_LOGICAL_8 *dest;\n   index_type rank;"}, {"sha": "0dfbc7ae4d5fc762e4ca5c8436122c9c23d35e08", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(any_l4);\n void\n any_l4 (gfc_array_l4 *retarray, gfc_array_l4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_4 *base;\n   GFC_LOGICAL_4 *dest;\n   index_type rank;"}, {"sha": "94e4e27c67fcd31e71b9d6170ac3b12c0ad3baf3", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(any_l8);\n void\n any_l8 (gfc_array_l8 *retarray, gfc_array_l8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_8 *base;\n   GFC_LOGICAL_8 *dest;\n   index_type rank;"}, {"sha": "3f43cc14e804fd7df2e9f7e34229ad25e38a5353", "filename": "libgfortran/generated/count_4_l4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_4_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_4_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(count_4_l4);\n void\n count_4_l4 (gfc_array_i4 *retarray, gfc_array_l4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;"}, {"sha": "e8da4ef8179b12400a23c52775154cf16c4fc1bd", "filename": "libgfortran/generated/count_4_l8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_4_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_4_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(count_4_l8);\n void\n count_4_l8 (gfc_array_i4 *retarray, gfc_array_l8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;"}, {"sha": "fe4c88663eb1f3e85ecc63755a49cb7cd3e26bcb", "filename": "libgfortran/generated/count_8_l4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_8_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_8_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(count_8_l4);\n void\n count_8_l4 (gfc_array_i8 *retarray, gfc_array_l4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;"}, {"sha": "0bcfdb83d523fb189201013dbc0c2998f7766b42", "filename": "libgfortran/generated/count_8_l8.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_8_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcount_8_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(count_8_l8);\n void\n count_8_l8 (gfc_array_i8 *retarray, gfc_array_l8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_LOGICAL_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;"}, {"sha": "683ce703ff2bbdc269c2a17d7cd86c558e504ecf", "filename": "libgfortran/generated/cshift1_4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -45,24 +45,24 @@ cshift1_4 (const gfc_array_char * ret,\n \t\t      const gfc_array_i4 * h, const GFC_INTEGER_4 * pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the  array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const GFC_INTEGER_4 *hptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "6513b9103044d61b8b1576b3e330bf4770e80c90", "filename": "libgfortran/generated/cshift1_8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fcshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -45,24 +45,24 @@ cshift1_8 (const gfc_array_char * ret,\n \t\t      const gfc_array_i8 * h, const GFC_INTEGER_8 * pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the  array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const GFC_INTEGER_8 *hptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "6c2ad301728fc740771bbe06d42f18114d7363cf", "filename": "libgfortran/generated/eoshift1_4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -50,24 +50,24 @@ eoshift1_4 (const gfc_array_char *ret,\n \t\t       const GFC_INTEGER_4 *pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the shift array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const GFC_INTEGER_4 *hptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "c1d99c3de1542bf8863e6d63a36ef5f043fe0d32", "filename": "libgfortran/generated/eoshift1_8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -50,24 +50,24 @@ eoshift1_8 (const gfc_array_char *ret,\n \t\t       const GFC_INTEGER_8 *pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the shift array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const GFC_INTEGER_8 *hptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "088cfbeba498a40ba35f8763e1063ab377a43ab6", "filename": "libgfortran/generated/eoshift3_4.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift3_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift3_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -48,28 +48,28 @@ eoshift3_4 (gfc_array_char *ret, gfc_array_char *array,\n \t\t       GFC_INTEGER_4 *pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the shift array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const GFC_INTEGER_4 *hptr;\n   /* b.* indicates the bound array.  */\n-  index_type bstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type bstride[GFC_MAX_DIMENSIONS];\n   index_type bstride0;\n   const char *bptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "302b159c0c8500d7a4edd4dc5d24cf5134b09a7d", "filename": "libgfortran/generated/eoshift3_8.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift3_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Feoshift3_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -48,28 +48,28 @@ eoshift3_8 (gfc_array_char *ret, gfc_array_char *array,\n \t\t       GFC_INTEGER_8 *pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the shift array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const GFC_INTEGER_8 *hptr;\n   /* b.* indicates the bound array.  */\n-  index_type bstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type bstride[GFC_MAX_DIMENSIONS];\n   index_type bstride0;\n   const char *bptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "72a1519b299ad5e8f607f3bbf7b3832e8292b4b3", "filename": "libgfortran/generated/in_pack_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_pack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_pack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -39,9 +39,9 @@ Boston, MA 02111-1307, USA.  */\n GFC_INTEGER_4 *\n internal_pack_4 (gfc_array_i4 * source)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   index_type ssize;"}, {"sha": "51c6986a288623ed4d2cdf91f68c59bac3d95172", "filename": "libgfortran/generated/in_pack_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_pack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_pack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -39,9 +39,9 @@ Boston, MA 02111-1307, USA.  */\n GFC_INTEGER_8 *\n internal_pack_8 (gfc_array_i8 * source)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   index_type ssize;"}, {"sha": "92561a21d7e7812f10b8645dee542e4239308107", "filename": "libgfortran/generated/in_unpack_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_unpack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_unpack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -37,9 +37,9 @@ Boston, MA 02111-1307, USA.  */\n void\n internal_unpack_4 (gfc_array_i4 * d, const GFC_INTEGER_4 * src)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   index_type dsize;"}, {"sha": "1f3e6a23dd36e60a1fbeaf74f2a7475fa316b77b", "filename": "libgfortran/generated/in_unpack_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_unpack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fin_unpack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_unpack_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -37,9 +37,9 @@ Boston, MA 02111-1307, USA.  */\n void\n internal_unpack_8 (gfc_array_i8 * d, const GFC_INTEGER_8 * src)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   index_type dsize;"}, {"sha": "1839bdf6949867e5b11638b313df99add646577c", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "51aecb933273e53d3cd3726ec8cf2f82152dc536", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "53fd0dc81d2cf69197a31604cc4c4a7c7cfa0127", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "612c8f6b2fc8bbef6455ad8d5eaa07319a55e700", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "c496e130217eb4145993da2f7b118bbca0546191", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "1732564b84d6b4276df9bba0ef3fc72e7b5b8149", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "96f47474f0fcea6250576f13dbe4b75d9dedc748", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "36b3fcf9a85a4cfb8f3bda691614eda00789ad64", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ maxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mmaxloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "45e143f2008d729b7d100e193d07b1a897e1cc0c", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_4_i4);\n void\n maxloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "e196f9352565d3a96bcb93cd80f8fe869088ecdd", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_4_i8);\n void\n maxloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "cabd0c7faa932ae7cd29e74a54fa5140f2b02782", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_4_r4);\n void\n maxloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "44c38b861d1d6ba10e06f85ffccc7a498769a0e8", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_4_r8);\n void\n maxloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "e05a8a2f46e92d0a4f647fadcf449c63db103d62", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_8_i4);\n void\n maxloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "e2bf61c5c9198fd17262eea48550bf924eda6eb5", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_8_i8);\n void\n maxloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "acce8bcb1601128eac28b955af0e4a4b3d07f342", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_8_r4);\n void\n maxloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "f3487226a3da87eaa21996afed67e49a8f380db4", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(maxloc1_8_r8);\n void\n maxloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ maxloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mmaxloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mmaxloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "bf9d71219bf30dca792c8208ffe19e6399fadbcd", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(maxval_i4);\n void\n maxval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ maxval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mmaxval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mmaxval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "175b7f3c48862ed7358fdff44fb86395f9a1195e", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(maxval_i8);\n void\n maxval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ maxval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mmaxval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mmaxval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "fc86f69d0f60dd3a936826e26d5d8ed0e3ec856c", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(maxval_r4);\n void\n maxval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_REAL_4 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ maxval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mmaxval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mmaxval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "3d1a1cf89cb2cf9e4f8d6afb8e12521424a58fdc", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(maxval_r8);\n void\n maxval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_REAL_8 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ maxval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mmaxval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mmaxval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "8f2dd235b5f6118ded8b7fe2a689e3319dfa0b82", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -241,7 +246,7 @@ mminloc0_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 *array,\n     {\n       {\n         /* Implementation start.  */\n-  printf(\"mbase = %p, *mbase = %d, *base=%d\\n\");\n+\n   if (*mbase && *base < minval)\n     {\n       minval = *base;"}, {"sha": "0a50caaf7776575478b059498c31b9de76976565", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "59809d777ea544101b5202c50665dc2ee7de6e72", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "69d1cdb0422bffae5292a4a83f85721d38f25345", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "c8989fc56bb46a915e377300e2c0bd50bb8b44f0", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "8f1aa2441bbd411530e9b61a5c2655d07d1bd059", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "4407ddfd8c94c0a6ff5211c0771e9eca597e93c4", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "468322317ebcad5365aaef4d27b0b51aa4f33195", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -76,6 +76,9 @@ minloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array)\n       if (retarray->dim[0].stride == 0)\n \tretarray->dim[0].stride = 1;\n     }\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -192,6 +195,8 @@ mminloc0_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 *array,\n \tretarray->dim[0].stride = 1;\n     }\n \n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "04fadb6481fb9b3c01c8fb2ec065d45e7b529531", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_4_i4);\n void\n minloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_4_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_4_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "b2922c8db5f44c6c73950edf500b56707c5634b1", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_4_i8);\n void\n minloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_4_i8 (gfc_array_i4 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_4_i8 (gfc_array_i4 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "efec5850daeb3d4d87cd2c57ef0f49d63fb54489", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_4_r4);\n void\n minloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_4_r4 (gfc_array_i4 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_4_r4 (gfc_array_i4 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "95bc2a6ae066d3005511bf6bf9fbb5d00af96c15", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_4_r8);\n void\n minloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_4_r8 (gfc_array_i4 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_4_r8 (gfc_array_i4 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "11b1f7118ac8951da0a74892c2420b9d51873d60", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_8_i4);\n void\n minloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_8_i4 (gfc_array_i8 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_8_i4 (gfc_array_i8 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "4235bdec2dcbf510e8d6ece0c69c35cd3ca857a7", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_8_i8);\n void\n minloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_8_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_8_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "a679a65a1959f86f5b7875fba5624061bbfeb683", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_8_r4);\n void\n minloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_8_r4 (gfc_array_i8 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_8_r4 (gfc_array_i8 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "177ba6d4a98ca807218a84ec6030cd0971cf6673", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -42,10 +42,10 @@ export_proto(minloc1_8_r8);\n void\n minloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -57,6 +57,9 @@ minloc1_8_r8 (gfc_array_i8 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -180,11 +183,11 @@ void\n mminloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -197,6 +200,9 @@ mminloc1_8_r8 (gfc_array_i8 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "097419697be23cab92e86b95054c86bcb8e4596c", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(minval_i4);\n void\n minval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ minval_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mminval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mminval_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "a969bfdc8801ba247117a36dbe68724ae06de5bc", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(minval_i8);\n void\n minval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ minval_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mminval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mminval_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "fe1a22421852dd97fb0b2b7afeaeae7a35a854b0", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(minval_r4);\n void\n minval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_REAL_4 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ minval_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mminval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mminval_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "050b3c9dfebd8279ecd6d94d39d93c46ab741f32", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,10 +41,10 @@ export_proto(minval_r8);\n void\n minval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_REAL_8 *dest;\n   index_type rank;\n@@ -56,6 +56,9 @@ minval_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -174,11 +177,11 @@ void\n mminval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -191,6 +194,9 @@ mminval_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "2cee7978ebcfea120d11430103cfa92e3fba0d45", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(product_c4);\n void\n product_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_4 *base;\n   GFC_COMPLEX_4 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ product_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n mproduct_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_4 *dest;\n   GFC_COMPLEX_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ mproduct_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "6eaeb7a90f41ab01ca637a712867160f4515ccd8", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(product_c8);\n void\n product_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_8 *base;\n   GFC_COMPLEX_8 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ product_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n mproduct_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_8 *dest;\n   GFC_COMPLEX_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ mproduct_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "0a58d04dcca21b91e57430ad7c2cc0c6236cbdd7", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(product_i4);\n void\n product_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ product_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n mproduct_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ mproduct_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "1e61c52c8d49ac8e4795b4710794a5adb4f1ef94", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(product_i8);\n void\n product_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ product_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n mproduct_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ mproduct_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "586c80c1d2f464075ab022ed1a4549f297c7f492", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(product_r4);\n void\n product_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_REAL_4 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ product_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n mproduct_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ mproduct_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "3be015136e9d8a3b4841e6ed8ba7f7636fc74894", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(product_r8);\n void\n product_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_REAL_8 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ product_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n mproduct_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ mproduct_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "89b32f03985e11133b10e093847d7dd7ff64b5fb", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(sum_c4);\n void\n sum_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_4 *base;\n   GFC_COMPLEX_4 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ sum_c4 (gfc_array_c4 *retarray, gfc_array_c4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n msum_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_4 *dest;\n   GFC_COMPLEX_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ msum_c4 (gfc_array_c4 * retarray, gfc_array_c4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "c7674ebfe7237d6f69d02dbfdadfe3c711ea8f54", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(sum_c8);\n void\n sum_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_8 *base;\n   GFC_COMPLEX_8 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ sum_c8 (gfc_array_c8 *retarray, gfc_array_c8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n msum_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_COMPLEX_8 *dest;\n   GFC_COMPLEX_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ msum_c8 (gfc_array_c8 * retarray, gfc_array_c8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "76106bf8110fbab81af126fe12b00b568b8fc0fc", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(sum_i4);\n void\n sum_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *base;\n   GFC_INTEGER_4 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ sum_i4 (gfc_array_i4 *retarray, gfc_array_i4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n msum_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_4 *dest;\n   GFC_INTEGER_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ msum_i4 (gfc_array_i4 * retarray, gfc_array_i4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "16d04116c8555ab2b7fc404cf46097a1b380d684", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(sum_i8);\n void\n sum_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *base;\n   GFC_INTEGER_8 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ sum_i8 (gfc_array_i8 *retarray, gfc_array_i8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n msum_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_INTEGER_8 *dest;\n   GFC_INTEGER_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ msum_i8 (gfc_array_i8 * retarray, gfc_array_i8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "c9b36cd07f8121f82883eca82265b2795f105648", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(sum_r4);\n void\n sum_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *base;\n   GFC_REAL_4 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ sum_r4 (gfc_array_r4 *retarray, gfc_array_r4 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n msum_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_4 *dest;\n   GFC_REAL_4 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ msum_r4 (gfc_array_r4 * retarray, gfc_array_r4 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "a4d260595f09fb5cbdf8aaf4b3667c16c542fdf6", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -40,10 +40,10 @@ export_proto(sum_r8);\n void\n sum_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *base;\n   GFC_REAL_8 *dest;\n   index_type rank;\n@@ -55,6 +55,9 @@ sum_r8 (gfc_array_r8 *retarray, gfc_array_r8 *array, index_type *pdim)\n   /* Make dim zero based to avoid confusion.  */\n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n \n@@ -172,11 +175,11 @@ void\n msum_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   GFC_REAL_8 *dest;\n   GFC_REAL_8 *base;\n   GFC_LOGICAL_4 *mbase;\n@@ -189,6 +192,9 @@ msum_r8 (gfc_array_r8 * retarray, gfc_array_r8 * array,\n \n   dim = (*pdim) - 1;\n   rank = GFC_DESCRIPTOR_RANK (array) - 1;\n+\n+  /* TODO:  It should be a front end job to correctly set the strides.  */\n+\n   if (array->dim[0].stride == 0)\n     array->dim[0].stride = 1;\n "}, {"sha": "61fd9016c9c8fafd233d3584e912cff5bedfdf88", "filename": "libgfortran/intrinsics/cshift0.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Fcshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Fcshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fcshift0.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -81,19 +81,19 @@ cshift0 (gfc_array_char * ret, const gfc_array_char * array,\n \t ssize_t shift, int which)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n \n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "5db3737c3556af35a6c52b7e5181a2e32e0d8aa7", "filename": "libgfortran/intrinsics/eoshift0.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Feoshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Feoshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift0.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -45,20 +45,20 @@ eoshift0 (gfc_array_char * ret, const gfc_array_char * array,\n \t  int shift, const char * pbound, int which)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "8d22dbef7428234ff754db55ad4a854fa53c73ae", "filename": "libgfortran/intrinsics/eoshift2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Feoshift2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Feoshift2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift2.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -45,24 +45,24 @@ eoshift2 (gfc_array_char *ret, const gfc_array_char *array,\n \t  int shift, const gfc_array_char *bound, int which)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* b.* indicates the bound array.  */\n-  index_type bstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type bstride[GFC_MAX_DIMENSIONS];\n   index_type bstride0;\n   const char *bptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "7607bb15b03a103d1276ef143c147be39e8def87", "filename": "libgfortran/intrinsics/random.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Frandom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Frandom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Frandom.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -253,9 +253,9 @@ iexport(random_r8);\n void\n arandom_r4 (gfc_array_r4 * harv)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   GFC_REAL_4 *dest;\n@@ -326,9 +326,9 @@ arandom_r4 (gfc_array_r4 * harv)\n void\n arandom_r8 (gfc_array_r8 * harv)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   GFC_REAL_8 *dest;\n@@ -498,9 +498,9 @@ iexport(random_r8);\n void\n arandom_r4 (gfc_array_r4 *x)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   GFC_REAL_4 *dest;\n@@ -562,9 +562,9 @@ arandom_r4 (gfc_array_r4 *x)\n void\n arandom_r8 (gfc_array_r8 *x)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   GFC_REAL_8 *dest;"}, {"sha": "8d39d30d318b6bd28f6a332c37100f425e647764", "filename": "libgfortran/intrinsics/spread_generic.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Fspread_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Fspread_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fspread_generic.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -43,21 +43,21 @@ spread (gfc_array_char *ret, const gfc_array_char *source,\n \tconst index_type *along, const index_type *pncopies)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type rdelta;\n   index_type rrank;\n   index_type rs;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type srank;\n   const char *sptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type n;\n   index_type dim;\n   index_type size;"}, {"sha": "df76f3f97627a4ac092440f51df56f2316a8665f", "filename": "libgfortran/intrinsics/stat.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Fstat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fintrinsics%2Fstat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fstat.c?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -73,7 +73,7 @@ stat_i4_sub (char *name, gfc_array_i4 *sarray, GFC_INTEGER_4 *status,\n   char *str;\n   struct stat sb;\n \n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n       \n   /* If the rank of the array is not 1, abort.  */\n   if (GFC_DESCRIPTOR_RANK (sarray) != 1)\n@@ -168,7 +168,7 @@ stat_i8_sub (char *name, gfc_array_i8 *sarray, GFC_INTEGER_8 *status,\n   char *str;\n   struct stat sb;\n \n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n       \n   /* If the rank of the array is not 1, abort.  */\n   if (GFC_DESCRIPTOR_RANK (sarray) != 1)\n@@ -293,7 +293,7 @@ fstat_i4_sub (GFC_INTEGER_4 *unit, gfc_array_i4 *sarray, GFC_INTEGER_4 *status)\n   int val;\n   struct stat sb;\n \n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n       \n   /* If the rank of the array is not 1, abort.  */\n   if (GFC_DESCRIPTOR_RANK (sarray) != 1)\n@@ -379,7 +379,7 @@ fstat_i8_sub (GFC_INTEGER_8 *unit, gfc_array_i8 *sarray, GFC_INTEGER_8 *status)\n   int val;\n   struct stat sb;\n \n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n       \n   /* If the rank of the array is not 1, abort.  */\n   if (GFC_DESCRIPTOR_RANK (sarray) != 1)"}, {"sha": "308c3dc40f811b1ec1b4214b10463860535785e6", "filename": "libgfortran/m4/cshift1.m4", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fcshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fcshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fcshift1.m4?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -46,24 +46,24 @@ cshift1_`'atype_kind (const gfc_array_char * ret,\n \t\t      const atype * h, const atype_name * pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n   /* h.* indicates the shift array.  */\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const atype_name *hptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "9cf6fa9a84a392f023d8840d6782aaaa5c536a28", "filename": "libgfortran/m4/eoshift1.m4", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Feoshift1.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Feoshift1.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift1.m4?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -51,24 +51,24 @@ eoshift1_`'atype_kind (const gfc_array_char *ret,\n \t\t       const atype_name *pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n `  /* h.* indicates the shift array.  */'\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const atype_name *hptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "89dcb3fcff8e2fd94b8ac92aba87af026196e6a1", "filename": "libgfortran/m4/eoshift3.m4", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Feoshift3.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Feoshift3.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Feoshift3.m4?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -49,28 +49,28 @@ eoshift3_`'atype_kind (gfc_array_char *ret, gfc_array_char *array,\n \t\t       atype_name *pwhich)\n {\n   /* r.* indicates the return array.  */\n-  index_type rstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type rstride[GFC_MAX_DIMENSIONS];\n   index_type rstride0;\n   index_type roffset;\n   char *rptr;\n   char *dest;\n   /* s.* indicates the source array.  */\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n   index_type sstride0;\n   index_type soffset;\n   const char *sptr;\n   const char *src;\n `  /* h.* indicates the shift array.  */'\n-  index_type hstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type hstride[GFC_MAX_DIMENSIONS];\n   index_type hstride0;\n   const atype_name *hptr;\n   /* b.* indicates the bound array.  */\n-  index_type bstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type bstride[GFC_MAX_DIMENSIONS];\n   index_type bstride0;\n   const char *bptr;\n \n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n   index_type dim;\n   index_type size;\n   index_type len;"}, {"sha": "7da24108d8b75c909e2196ecbb8cdba8ed584a83", "filename": "libgfortran/m4/ifunction.m4", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fifunction.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fifunction.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fifunction.m4?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -25,10 +25,10 @@ export_proto(name`'rtype_qual`_'atype_code);\n void\n name`'rtype_qual`_'atype_code (rtype *retarray, atype *array, index_type *pdim)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n   atype_name *base;\n   rtype_name *dest;\n   index_type rank;\n@@ -160,11 +160,11 @@ void\n `m'name`'rtype_qual`_'atype_code (rtype * retarray, atype * array,\n \t\t\t\t  index_type *pdim, gfc_array_l4 * mask)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type sstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type dstride[GFC_MAX_DIMENSIONS - 1];\n-  index_type mstride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type sstride[GFC_MAX_DIMENSIONS];\n+  index_type dstride[GFC_MAX_DIMENSIONS];\n+  index_type mstride[GFC_MAX_DIMENSIONS];\n   rtype_name *dest;\n   atype_name *base;\n   GFC_LOGICAL_4 *mbase;"}, {"sha": "b2eac40581fe647aee9a75b279c0a62cbc8f5957", "filename": "libgfortran/m4/in_pack.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fin_pack.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fin_pack.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fin_pack.m4?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -41,9 +41,9 @@ dnl Only the kind (ie size) is used to name the function.\n rtype_name *\n `internal_pack_'rtype_kind (rtype * source)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   index_type ssize;"}, {"sha": "ea9ccc89f76becb1a5c364a6a97684bf5990b3a1", "filename": "libgfortran/m4/in_unpack.m4", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fin_unpack.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e33e218badc5501c9061b30ec5314649ecaeeb62/libgfortran%2Fm4%2Fin_unpack.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fin_unpack.m4?ref=e33e218badc5501c9061b30ec5314649ecaeeb62", "patch": "@@ -39,9 +39,9 @@ dnl Only the kind (ie size) is used to name the function.\n void\n `internal_unpack_'rtype_kind (rtype * d, const rtype_name * src)\n {\n-  index_type count[GFC_MAX_DIMENSIONS - 1];\n-  index_type extent[GFC_MAX_DIMENSIONS - 1];\n-  index_type stride[GFC_MAX_DIMENSIONS - 1];\n+  index_type count[GFC_MAX_DIMENSIONS];\n+  index_type extent[GFC_MAX_DIMENSIONS];\n+  index_type stride[GFC_MAX_DIMENSIONS];\n   index_type stride0;\n   index_type dim;\n   index_type dsize;"}]}