{"sha": "a2c2290b622b0298330a8d3bc1de1ca1524e7762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjMjI5MGI2MjJiMDI5ODMzMGE4ZDNiYzFkZTFjYTE1MjRlNzc2Mg==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2007-04-25T21:40:42Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2007-04-25T21:40:42Z"}, "message": "lib1funcs.asm (__udivsi3, __divsi3): Throw an exception for divide-by-zero.\n\n        * config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Throw an exception\n        for divide-by-zero.\n        (__umodsi3, __modsi3): Likewise.\n\nFrom-SVN: r124165", "tree": {"sha": "f7df6afd9db14aa950c9c9b048ad71b53f89a3e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7df6afd9db14aa950c9c9b048ad71b53f89a3e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2c2290b622b0298330a8d3bc1de1ca1524e7762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c2290b622b0298330a8d3bc1de1ca1524e7762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c2290b622b0298330a8d3bc1de1ca1524e7762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c2290b622b0298330a8d3bc1de1ca1524e7762/comments", "author": null, "committer": null, "parents": [{"sha": "9f8b807381bf3e75c0b5b59e706cecdd0c4481ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8b807381bf3e75c0b5b59e706cecdd0c4481ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8b807381bf3e75c0b5b59e706cecdd0c4481ce"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "c4cfa5cbd2101181f51ff0f305eb9c11bda6e015", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c2290b622b0298330a8d3bc1de1ca1524e7762/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c2290b622b0298330a8d3bc1de1ca1524e7762/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2c2290b622b0298330a8d3bc1de1ca1524e7762", "patch": "@@ -1,3 +1,9 @@\n+2007-04-25  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/lib1funcs.asm (__udivsi3, __divsi3): Throw an exception\n+\tfor divide-by-zero.\n+\t(__umodsi3, __modsi3): Likewise.\n+\n 2007-04-25  Dirk Mueller  <dmueller@suse.de>\n \n \t* c-typeck.c (build_compound_expr): Annotate warning()"}, {"sha": "6db2a7d72395ad859d72232b97a37283e7db8800", "filename": "gcc/config/xtensa/lib1funcs.asm", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c2290b622b0298330a8d3bc1de1ca1524e7762/gcc%2Fconfig%2Fxtensa%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c2290b622b0298330a8d3bc1de1ca1524e7762/gcc%2Fconfig%2Fxtensa%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flib1funcs.asm?ref=a2c2290b622b0298330a8d3bc1de1ca1524e7762", "patch": "@@ -1,5 +1,6 @@\n /* Assembly functions for the Xtensa version of libgcc1.\n-   Copyright (C) 2001, 2002, 2003, 2005, 2006 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2003, 2005, 2006, 2007\n+   Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n This file is part of GCC.\n@@ -530,7 +531,11 @@ __udivsi3:\n \tleaf_return\n \n .Lerror:\n-\t/* just return 0; could throw an exception */\n+\t/* Divide by zero: Use an illegal instruction to force an exception.\n+\t   The subsequent \"DIV0\" string can be recognized by the exception\n+\t   handler to identify the real cause of the exception.  */\n+\till\n+\t.ascii\t\"DIV0\"\n \n .Lreturn0:\n \tmovi\ta2, 0\n@@ -597,7 +602,11 @@ __divsi3:\n \tleaf_return\n \n .Lerror:\n-\t/* just return 0; could throw an exception */\n+\t/* Divide by zero: Use an illegal instruction to force an exception.\n+\t   The subsequent \"DIV0\" string can be recognized by the exception\n+\t   handler to identify the real cause of the exception.  */\n+\till\n+\t.ascii\t\"DIV0\"\n \n .Lreturn0:\n \tmovi\ta2, 0\n@@ -645,10 +654,16 @@ __umodsi3:\n \tleaf_return\n \n .Lle_one:\n-\t/* The divisor is either 0 or 1, so just return 0.\n-\t   Someday we may want to throw an exception if the divisor is 0.  */\n+\tbeqz\ta3, .Lerror\n \tmovi\ta2, 0\n \tleaf_return\n+\n+.Lerror:\n+\t/* Divide by zero: Use an illegal instruction to force an exception.\n+\t   The subsequent \"DIV0\" string can be recognized by the exception\n+\t   handler to identify the real cause of the exception.  */\n+\till\n+\t.ascii\t\"DIV0\"\n \t.size\t__umodsi3,.-__umodsi3\n \n #endif /* L_umodsi3 */\n@@ -697,10 +712,16 @@ __modsi3:\n \tleaf_return\n \n .Lle_one:\n-\t/* udivisor is either 0 or 1, so just return 0.\n-\t   Someday we may want to throw an exception if udivisor is 0.  */\n+\tbeqz\ta3, .Lerror\n \tmovi\ta2, 0\n \tleaf_return\n+\n+.Lerror:\n+\t/* Divide by zero: Use an illegal instruction to force an exception.\n+\t   The subsequent \"DIV0\" string can be recognized by the exception\n+\t   handler to identify the real cause of the exception.  */\n+\till\n+\t.ascii\t\"DIV0\"\n \t.size\t__modsi3,.-__modsi3\n \n #endif /* L_modsi3 */"}]}