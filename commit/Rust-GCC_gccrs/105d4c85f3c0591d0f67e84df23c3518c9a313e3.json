{"sha": "105d4c85f3c0591d0f67e84df23c3518c9a313e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA1ZDRjODVmM2MwNTkxZDBmNjdlODRkZjIzYzM1MThjOWEzMTNlMw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-22T13:46:25Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-22T13:46:25Z"}, "message": "libphobos: Merge upstream phobos b538f758a\n\nFixes endian bugs in std.uni, and corrects unit-tests that failed on\nversion(BigEndian) targets.\n\nInitial patch by Robin Dapp.\n\nReviewed-on: https://github.com/dlang/phobos/pull/6975\n\nFrom-SVN: r270491", "tree": {"sha": "b6beb42c9cb6dcfabd7f57846c7d9fc4f157055e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6beb42c9cb6dcfabd7f57846c7d9fc4f157055e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/105d4c85f3c0591d0f67e84df23c3518c9a313e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105d4c85f3c0591d0f67e84df23c3518c9a313e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105d4c85f3c0591d0f67e84df23c3518c9a313e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105d4c85f3c0591d0f67e84df23c3518c9a313e3/comments", "author": null, "committer": null, "parents": [{"sha": "eb5f748a81eafb8014de39e60884c1617d60eb79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5f748a81eafb8014de39e60884c1617d60eb79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5f748a81eafb8014de39e60884c1617d60eb79"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "e4807fbf437c500223e122832ec2852902a67313", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=105d4c85f3c0591d0f67e84df23c3518c9a313e3", "patch": "@@ -1,4 +1,4 @@\n-428460ddd8087fa28815e613ff04facb51108a7b\n+b538f758a4d274b64751f80564b0207845cd018c\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/phobos repository."}, {"sha": "32ba45ce2de7c222265af63614d70f98483f988c", "filename": "libphobos/src/std/net/curl.d", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Fnet%2Fcurl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Fnet%2Fcurl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fnet%2Fcurl.d?ref=105d4c85f3c0591d0f67e84df23c3518c9a313e3", "patch": "@@ -207,9 +207,7 @@ version (unittest)\n             }\n             catch (Throwable e)\n             {\n-                import core.stdc.stdlib : exit, EXIT_FAILURE;\n-                stderr.writeln(e);\n-                exit(EXIT_FAILURE); // Bugzilla 7018\n+                stderr.writeln(e);  // Bugzilla 7018\n             }\n         }\n     }"}, {"sha": "d76ead2ed4979b810a2a701296b2c1464c7d5791", "filename": "libphobos/src/std/outbuffer.d", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Foutbuffer.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Foutbuffer.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Foutbuffer.d?ref=105d4c85f3c0591d0f67e84df23c3518c9a313e3", "patch": "@@ -408,11 +408,17 @@ class OutBuffer\n   {\n     OutBuffer buf = new OutBuffer();\n     \"hello\"w.copy(buf);\n-    assert(buf.toBytes() == \"h\\x00e\\x00l\\x00l\\x00o\\x00\");\n+    version (LittleEndian)\n+        assert(buf.toBytes() == \"h\\x00e\\x00l\\x00l\\x00o\\x00\");\n+    version (BigEndian)\n+        assert(buf.toBytes() == \"\\x00h\\x00e\\x00l\\x00l\\x00o\");\n   }\n   {\n     OutBuffer buf = new OutBuffer();\n     \"hello\"d.copy(buf);\n-    assert(buf.toBytes() == \"h\\x00\\x00\\x00e\\x00\\x00\\x00l\\x00\\x00\\x00l\\x00\\x00\\x00o\\x00\\x00\\x00\");\n+    version (LittleEndian)\n+        assert(buf.toBytes() == \"h\\x00\\x00\\x00e\\x00\\x00\\x00l\\x00\\x00\\x00l\\x00\\x00\\x00o\\x00\\x00\\x00\");\n+    version (BigEndian)\n+        assert(buf.toBytes() == \"\\x00\\x00\\x00h\\x00\\x00\\x00e\\x00\\x00\\x00l\\x00\\x00\\x00l\\x00\\x00\\x00o\");\n   }\n }"}, {"sha": "0b3da58286c128047fe4fd2e8814e5b21d326c4f", "filename": "libphobos/src/std/uni.d", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Funi.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Funi.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Funi.d?ref=105d4c85f3c0591d0f67e84df23c3518c9a313e3", "patch": "@@ -770,6 +770,8 @@ version (X86)\n     enum hasUnalignedReads = true;\n else version (X86_64)\n     enum hasUnalignedReads = true;\n+else version (SystemZ)\n+    enum hasUnalignedReads = true;\n else\n     enum hasUnalignedReads = false; // better be safe then sorry\n \n@@ -1245,8 +1247,13 @@ pure nothrow:\n \n         T opIndex(size_t idx) inout\n         {\n-            return __ctfe ? simpleIndex(idx) :\n-                cast(inout(T))(cast(U*) origin)[idx];\n+            T ret;\n+            version (LittleEndian)\n+                ret = __ctfe ? simpleIndex(idx) :\n+                    cast(inout(T))(cast(U*) origin)[idx];\n+            else\n+                ret = simpleIndex(idx);\n+            return ret;\n         }\n \n         static if (isBitPacked!T) // lack of user-defined implicit conversion\n@@ -1259,10 +1266,15 @@ pure nothrow:\n \n         void opIndexAssign(TypeOfBitPacked!T val, size_t idx)\n         {\n-            if (__ctfe)\n-                simpleWrite(val, idx);\n+            version (LittleEndian)\n+            {\n+                if (__ctfe)\n+                    simpleWrite(val, idx);\n+                else\n+                    (cast(U*) origin)[idx] = cast(U) val;\n+            }\n             else\n-                (cast(U*) origin)[idx] = cast(U) val;\n+                simpleWrite(val, idx);\n         }\n     }\n     else"}, {"sha": "13241f53613f6e719bdb0437b94e089068cd6445", "filename": "libphobos/src/std/xml.d", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Fxml.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/105d4c85f3c0591d0f67e84df23c3518c9a313e3/libphobos%2Fsrc%2Fstd%2Fxml.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fxml.d?ref=105d4c85f3c0591d0f67e84df23c3518c9a313e3", "patch": "@@ -2201,8 +2201,10 @@ private\n         mixin Check!(\"Chars\");\n \n         dchar c;\n-        int n = -1;\n-        foreach (int i,dchar d; s)\n+        ptrdiff_t n = -1;\n+        // 'i' must not be smaller than size_t because size_t is used internally in\n+        // aApply.d and it will be cast e.g to (int *) which fails on BigEndian targets.\n+        foreach (size_t i, dchar d; s)\n         {\n             if (!isChar(d))\n             {\n@@ -2238,8 +2240,10 @@ private\n         mixin Check!(\"Name\");\n \n         if (s.length == 0) fail();\n-        int n;\n-        foreach (int i,dchar c;s)\n+        ptrdiff_t n;\n+        // 'i' must not be smaller than size_t because size_t is used internally in\n+        // aApply.d and it will be cast e.g to (int *) which fails on BigEndian targets.\n+        foreach (size_t i, dchar c; s)\n         {\n             if (c == '_' || c == ':' || isLetter(c)) continue;\n             if (i == 0) fail();"}]}