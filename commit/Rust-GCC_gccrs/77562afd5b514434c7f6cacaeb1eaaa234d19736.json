{"sha": "77562afd5b514434c7f6cacaeb1eaaa234d19736", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1NjJhZmQ1YjUxNDQzNGM3ZjZjYWNhZWIxZWFhYTIzNGQxOTczNg==", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2019-09-17T08:01:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-17T08:01:58Z"}, "message": "[Ada] Support chained calls to traversal functions in SPARK\n\nThis change only affects the SPARK toolset. In the part of semantic\nanalysis enforcing ownership rules for SPARK, it corrects a crash in\nanalysis of a declaration of a local borrower whose definition is a\nchain of several calls to traversal functions.\n\n2019-09-17  Claire Dross  <dross@adacore.com>\n\ngcc/ada/\n\n\t* sem_spark.adb (Get_Observed_Or_Borrowed_Expr): If the\n\tdefinition of a local borrower contains calls to traversal\n\tfunctions, the borrowed expression is the first parameter of the\n\tfirst traversal function call in the definition.\n\nFrom-SVN: r275785", "tree": {"sha": "914ddecace756059e0d0c95baaf844b165e741b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/914ddecace756059e0d0c95baaf844b165e741b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77562afd5b514434c7f6cacaeb1eaaa234d19736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77562afd5b514434c7f6cacaeb1eaaa234d19736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77562afd5b514434c7f6cacaeb1eaaa234d19736", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77562afd5b514434c7f6cacaeb1eaaa234d19736/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "402b91503e266ad8337be9cf05ea967fbe4cbe3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/402b91503e266ad8337be9cf05ea967fbe4cbe3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/402b91503e266ad8337be9cf05ea967fbe4cbe3c"}], "stats": {"total": 70, "additions": 63, "deletions": 7}, "files": [{"sha": "baf17ca06667818a0b1f79cee37f2e50321cddd1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77562afd5b514434c7f6cacaeb1eaaa234d19736/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77562afd5b514434c7f6cacaeb1eaaa234d19736/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=77562afd5b514434c7f6cacaeb1eaaa234d19736", "patch": "@@ -1,3 +1,10 @@\n+2019-09-17  Claire Dross  <dross@adacore.com>\n+\n+\t* sem_spark.adb (Get_Observed_Or_Borrowed_Expr): If the\n+\tdefinition of a local borrower contains calls to traversal\n+\tfunctions, the borrowed expression is the first parameter of the\n+\tfirst traversal function call in the definition.\n+\n 2019-09-17  Ed Falis  <falis@adacore.com>\n \n \t* doc/gnat_rm/implementation_defined_pragmas.rst: Remove"}, {"sha": "af53f69ba2c8fb2570cd2386abf0613b0818c388", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 56, "deletions": 7, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77562afd5b514434c7f6cacaeb1eaaa234d19736/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77562afd5b514434c7f6cacaeb1eaaa234d19736/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=77562afd5b514434c7f6cacaeb1eaaa234d19736", "patch": "@@ -708,8 +708,8 @@ package body Sem_SPARK is\n    function Get_Observed_Or_Borrowed_Expr (Expr : Node_Id) return Node_Id;\n    pragma Precondition (Is_Path_Expression (Expr));\n    --  Return the expression being borrowed/observed when borrowing or\n-   --  observing Expr. If Expr is a call to a traversal function, this is\n-   --  the first actual, otherwise it is Expr.\n+   --  observing Expr. If Expr contains a call to traversal function, this is\n+   --  the first actual of the first such call, otherwise it is Expr.\n \n    function Get_Perm (N : Node_Or_Entity_Id) return Perm_Kind;\n    --  The function that takes a name as input and returns a permission\n@@ -3772,12 +3772,61 @@ package body Sem_SPARK is\n    -----------------------------------\n \n    function Get_Observed_Or_Borrowed_Expr (Expr : Node_Id) return Node_Id is\n+\n+      function Find_Func_Call (Expr : Node_Id) return Node_Id;\n+      --  Search for function calls in the prefixes of Expr\n+\n+      --------------------\n+      -- Find_Func_Call --\n+      --------------------\n+\n+      function Find_Func_Call (Expr : Node_Id) return Node_Id is\n+      begin\n+         case Nkind (Expr) is\n+            when N_Expanded_Name\n+               | N_Identifier\n+            =>\n+               return Empty;\n+\n+            when N_Explicit_Dereference\n+               | N_Indexed_Component\n+               | N_Selected_Component\n+               | N_Slice\n+            =>\n+               return Find_Func_Call (Prefix (Expr));\n+\n+            when N_Qualified_Expression\n+               | N_Type_Conversion\n+               | N_Unchecked_Type_Conversion\n+            =>\n+               return Find_Func_Call (Expression (Expr));\n+\n+            when N_Function_Call =>\n+               return Expr;\n+\n+            when others =>\n+               raise Program_Error;\n+         end case;\n+      end Find_Func_Call;\n+\n+      B_Expr : Node_Id := Expr;\n+\n    begin\n-      if Is_Traversal_Function_Call (Expr) then\n-         return First_Actual (Expr);\n-      else\n-         return Expr;\n-      end if;\n+      --  Search for the first call to a traversal function in Expr. If there\n+      --  is one, its first parameter is the borrowed expression. Otherwise,\n+      --  it is Expr.\n+\n+      loop\n+         declare\n+            Call : constant Node_Id := Find_Func_Call (B_Expr);\n+         begin\n+            exit when No (Call);\n+            pragma Assert (Is_Traversal_Function_Call (Call));\n+            B_Expr := First_Actual (Call);\n+         end;\n+      end loop;\n+\n+      return B_Expr;\n    end Get_Observed_Or_Borrowed_Expr;\n \n    --------------"}]}