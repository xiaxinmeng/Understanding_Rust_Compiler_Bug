{"sha": "3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5MmEyYjg4ODQzNmUxMWZiZjdjNzhkM2U4ZWIxMzNiNmQzZmQ0ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T13:20:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T13:20:49Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r149475", "tree": {"sha": "8d9da74536b1f8c66efcdaaa046b194dd6e80774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d9da74536b1f8c66efcdaaa046b194dd6e80774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e/comments", "author": null, "committer": null, "parents": [{"sha": "811c6a85c4e29f55dc408dcf6f5dff08c5a4f999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/811c6a85c4e29f55dc408dcf6f5dff08c5a4f999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/811c6a85c4e29f55dc408dcf6f5dff08c5a4f999"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "45dc5f90d2369b2d83a28ba9eb1e57e6b840a0b5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3c92a2b888436e11fbf7c78d3e8eb133b6d3fd4e", "patch": "@@ -3584,7 +3584,7 @@ package body Sem_Prag is\n             end if;\n \n             --  Components of imported CPP types must not have default\n-            --  expressions because the constructor (if any) is in the\n+            --  expressions because the constructor (if any) is on the\n             --  C++ side.\n \n             declare\n@@ -6309,9 +6309,9 @@ package body Sem_Prag is\n                --  because in C++ they don't have a dispatch table slot.\n                --  However, in Ada the constructor has the profile of a\n                --  function that returns a tagged type and therefore it has\n-               --  been considered by the Semantic analyzer a dispatching\n-               --  primitive operation. We extract it now from the list of\n-               --  primitive operations of the type.\n+               --  been treated as a primitive operation during semantic\n+               --  analysis. We now remove it from the list of primitive\n+               --  operations of the type.\n \n                if Is_Tagged_Type (Etype (Def_Id))\n                  and then not Is_Class_Wide_Type (Etype (Def_Id))\n@@ -6320,9 +6320,7 @@ package body Sem_Prag is\n                   Tag_Typ := Etype (Def_Id);\n \n                   Elmt := First_Elmt (Primitive_Operations (Tag_Typ));\n-                  while Present (Elmt)\n-                     and then Node (Elmt) /= Def_Id\n-                  loop\n+                  while Present (Elmt) and then Node (Elmt) /= Def_Id loop\n                      Next_Elmt (Elmt);\n                   end loop;\n \n@@ -6331,8 +6329,8 @@ package body Sem_Prag is\n                end if;\n \n                --  For backward compatibility, if the constructor returns a\n-               --  class wide type we internally change the returned type to\n-               --  the corresponding non class-wide type.\n+               --  class wide type, and we internally change the return type to\n+               --  the corresponding root type.\n \n                if Is_Class_Wide_Type (Etype (Def_Id)) then\n                   Set_Etype (Def_Id, Root_Type (Etype (Def_Id)));"}]}