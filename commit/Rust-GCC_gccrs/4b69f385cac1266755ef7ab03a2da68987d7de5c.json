{"sha": "4b69f385cac1266755ef7ab03a2da68987d7de5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2OWYzODVjYWMxMjY2NzU1ZWY3YWIwM2EyZGE2ODk4N2Q3ZGU1Yw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cambridge.redhat.com", "date": "2002-01-08T06:52:57Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2002-01-08T06:52:57Z"}, "message": "If a symbol ref is in the constant pool, use the pool's version of the symbol instead.\n\nFrom-SVN: r48625", "tree": {"sha": "9329986d69250335650c6bf2077cfd811fdb26ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9329986d69250335650c6bf2077cfd811fdb26ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b69f385cac1266755ef7ab03a2da68987d7de5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b69f385cac1266755ef7ab03a2da68987d7de5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b69f385cac1266755ef7ab03a2da68987d7de5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b69f385cac1266755ef7ab03a2da68987d7de5c/comments", "author": null, "committer": null, "parents": [{"sha": "57d1019b988976e66d1159f7c52384760ade227e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d1019b988976e66d1159f7c52384760ade227e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d1019b988976e66d1159f7c52384760ade227e"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "ad31debc0f06d262cf54052dcc865774b3d57618", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b69f385cac1266755ef7ab03a2da68987d7de5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b69f385cac1266755ef7ab03a2da68987d7de5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b69f385cac1266755ef7ab03a2da68987d7de5c", "patch": "@@ -1,3 +1,8 @@\n+2002-01-08  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* dbxout.c (dbxout_symbol_location): If a symbol ref is in the\n+\tconstant pool, use the pool's version of the symbol instead.\n+\n 2002-01-07  Richard Henderson  <rth@redhat.com>\n \n \t* regrename.c (find_oldest_value_reg): Ignore the value chain if"}, {"sha": "00a15820ef7543c86f4a2d295fe8afb00122707f", "filename": "gcc/dbxout.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b69f385cac1266755ef7ab03a2da68987d7de5c/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b69f385cac1266755ef7ab03a2da68987d7de5c/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=4b69f385cac1266755ef7ab03a2da68987d7de5c", "patch": "@@ -2164,6 +2164,20 @@ dbxout_symbol_location (decl, type, suffix, home)\n \t    current_sym_code = DBX_STATIC_CONST_VAR_CODE;\n \t  else\n \t    {\n+\t      /* Some ports can transform a symbol ref into a label ref,\n+\t\t because the symbol ref is too far away and has to be\n+\t\t dumped into a constant pool.  Alternatively, the symbol\n+\t\t in the constant pool might be referenced by a different\n+\t\t symbol.  */\n+\t      if (GET_CODE (current_sym_addr) == SYMBOL_REF\n+\t\t  && CONSTANT_POOL_ADDRESS_P (current_sym_addr))\n+\t\t{\n+\t\t  rtx tmp = get_pool_constant (current_sym_addr);\n+\n+\t\t  if (GET_CODE (tmp) == SYMBOL_REF)\n+\t\t    current_sym_addr = tmp;\n+\t\t}\n+  \n \t      /* Ultrix `as' seems to need this.  */\n #ifdef DBX_STATIC_STAB_DATA_SECTION\n \t      data_section ();"}]}