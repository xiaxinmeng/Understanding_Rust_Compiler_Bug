{"sha": "3e23d1bcc4d4b3daf48651d622404c88f9072fe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyM2QxYmNjNGQ0YjNkYWY0ODY1MWQ2MjI0MDRjODhmOTA3MmZlNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-10-20T15:30:17Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-10-20T15:30:17Z"}, "message": "Do not fixup edges for a thunk in LTRANS (PR lto/78049)\n\n\tPR lto/78049\n\t* lto-streamer-in.c (fixup_call_stmt_edges_1): Replace value\n\tcomparison with STMT_UID_NOT_IN_RANGE.\n\t(fixup_call_stmt_edges): Do not fixup edges of a thunk in\n\tLTRANS.\n\nFrom-SVN: r241380", "tree": {"sha": "b07dffedeeb4914ef5c5bccf9990ff7e49c9b5a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b07dffedeeb4914ef5c5bccf9990ff7e49c9b5a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e23d1bcc4d4b3daf48651d622404c88f9072fe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e23d1bcc4d4b3daf48651d622404c88f9072fe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e23d1bcc4d4b3daf48651d622404c88f9072fe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e23d1bcc4d4b3daf48651d622404c88f9072fe7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c35bbe14a830f58e121a6bd59c7088de93fc155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c35bbe14a830f58e121a6bd59c7088de93fc155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c35bbe14a830f58e121a6bd59c7088de93fc155"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "1d06d98cfcb31be33b4df9b3c46f55735ba9e7a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e23d1bcc4d4b3daf48651d622404c88f9072fe7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e23d1bcc4d4b3daf48651d622404c88f9072fe7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e23d1bcc4d4b3daf48651d622404c88f9072fe7", "patch": "@@ -1,3 +1,11 @@\n+2016-10-20  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/78049\n+\t* lto-streamer-in.c (fixup_call_stmt_edges_1): Replace value\n+\tcomparison with STMT_UID_NOT_IN_RANGE.\n+\t(fixup_call_stmt_edges): Do not fixup edges of a thunk in\n+\tLTRANS.\n+\n 2016-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* compare-elim.c (conforming_compare): Accept UNSPECs."}, {"sha": "1f39e6b98767743c4f154a5d2a610e56a9597fe8", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e23d1bcc4d4b3daf48651d622404c88f9072fe7/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e23d1bcc4d4b3daf48651d622404c88f9072fe7/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=3e23d1bcc4d4b3daf48651d622404c88f9072fe7", "patch": "@@ -889,13 +889,16 @@ static void\n fixup_call_stmt_edges_1 (struct cgraph_node *node, gimple **stmts,\n \t\t\t struct function *fn)\n {\n+#define STMT_UID_NOT_IN_RANGE(uid) \\\n+  (gimple_stmt_max_uid (fn) < uid || uid == 0)\n+\n   struct cgraph_edge *cedge;\n   struct ipa_ref *ref = NULL;\n   unsigned int i;\n \n   for (cedge = node->callees; cedge; cedge = cedge->next_callee)\n     {\n-      if (gimple_stmt_max_uid (fn) < cedge->lto_stmt_uid)\n+      if (STMT_UID_NOT_IN_RANGE (cedge->lto_stmt_uid))\n         fatal_error (input_location,\n \t\t     \"Cgraph edge statement index out of range\");\n       cedge->call_stmt = as_a <gcall *> (stmts[cedge->lto_stmt_uid - 1]);\n@@ -905,7 +908,7 @@ fixup_call_stmt_edges_1 (struct cgraph_node *node, gimple **stmts,\n     }\n   for (cedge = node->indirect_calls; cedge; cedge = cedge->next_callee)\n     {\n-      if (gimple_stmt_max_uid (fn) < cedge->lto_stmt_uid)\n+      if (STMT_UID_NOT_IN_RANGE (cedge->lto_stmt_uid))\n         fatal_error (input_location,\n \t\t     \"Cgraph edge statement index out of range\");\n       cedge->call_stmt = as_a <gcall *> (stmts[cedge->lto_stmt_uid - 1]);\n@@ -915,7 +918,7 @@ fixup_call_stmt_edges_1 (struct cgraph_node *node, gimple **stmts,\n   for (i = 0; node->iterate_reference (i, ref); i++)\n     if (ref->lto_stmt_uid)\n       {\n-\tif (gimple_stmt_max_uid (fn) < ref->lto_stmt_uid)\n+\tif (STMT_UID_NOT_IN_RANGE (ref->lto_stmt_uid))\n \t  fatal_error (input_location,\n \t\t       \"Reference statement index out of range\");\n \tref->stmt = stmts[ref->lto_stmt_uid - 1];\n@@ -937,7 +940,8 @@ fixup_call_stmt_edges (struct cgraph_node *orig, gimple **stmts)\n     orig = orig->clone_of;\n   fn = DECL_STRUCT_FUNCTION (orig->decl);\n \n-  fixup_call_stmt_edges_1 (orig, stmts, fn);\n+  if (!orig->thunk.thunk_p)\n+    fixup_call_stmt_edges_1 (orig, stmts, fn);\n   if (orig->clones)\n     for (node = orig->clones; node != orig;)\n       {"}]}