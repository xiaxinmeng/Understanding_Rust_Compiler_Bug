{"sha": "b22b9b3ef27313822b3e3b05d40be84b7d365d5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIyYjliM2VmMjczMTM4MjJiM2UzYjA1ZDQwYmU4NGI3ZDM2NWQ1Yg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-10-22T06:31:00Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-22T06:31:00Z"}, "message": "rs6000.md (*movsi_got_internal_mem): New pattern.\n\n        * rs6000.md (*movsi_got_internal_mem): New pattern.\n        (*movsi_got_internal_mem splitter): New define_split.\nFixes some egcs bugs.\n\nFrom-SVN: r16146", "tree": {"sha": "352631ff0caab212ae7dea72755c53696785ae04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/352631ff0caab212ae7dea72755c53696785ae04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b22b9b3ef27313822b3e3b05d40be84b7d365d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b22b9b3ef27313822b3e3b05d40be84b7d365d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b22b9b3ef27313822b3e3b05d40be84b7d365d5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b22b9b3ef27313822b3e3b05d40be84b7d365d5b/comments", "author": null, "committer": null, "parents": [{"sha": "70cfa7adbd48f6c95d7cd1bea364fb516ac59cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70cfa7adbd48f6c95d7cd1bea364fb516ac59cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70cfa7adbd48f6c95d7cd1bea364fb516ac59cf7"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "baf8257566344de4ed145ca5132742cad202ff21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b22b9b3ef27313822b3e3b05d40be84b7d365d5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b22b9b3ef27313822b3e3b05d40be84b7d365d5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b22b9b3ef27313822b3e3b05d40be84b7d365d5b", "patch": "@@ -1,3 +1,8 @@\n+Wed Oct 22 00:34:12 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* rs6000.md (*movsi_got_internal_mem): New pattern.\n+\t(*movsi_got_internal_mem splitter): New define_split.\n+\n Tue Oct 21 18:14:03 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* obstack.h (obstack_empty_p): Fix spurious space after backslash."}, {"sha": "39877c0d45858e1c12157db33a04af4652ed1c77", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b22b9b3ef27313822b3e3b05d40be84b7d365d5b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b22b9b3ef27313822b3e3b05d40be84b7d365d5b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b22b9b3ef27313822b3e3b05d40be84b7d365d5b", "patch": "@@ -5156,6 +5156,34 @@\n   \"{l|lwz} %0,%a1@got(%2)\"\n   [(set_attr \"type\" \"load\")])\n \n+;; Sometimes, though, the GOT `register' will be on the stack. Deal with\n+;; this case specially.\n+;; Force final to split this insn (if it hasn't been split already) to\n+;; avoid having to create a suitable output template.\n+(define_insn \"*movsi_got_internal_mem\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec [(match_operand:SI 1 \"got_no_const_operand\" \"\")\n+\t\t (match_operand:SI 2 \"memory_operand\" \"m\")] 8))]\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+    && flag_pic == 1\n+    && (reload_in_progress || reload_completed)\"\n+  \"#\"\n+  [(set_attr \"type\" \"load\")\n+   (set_attr \"length\" \"8\")])\n+\n+;; Used by sched, shorten_branches and final when the GOT pseudo reg\n+;; didn't get allocated to a hard register.\n+(define_split \n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(unspec [(match_operand:SI 1 \"got_no_const_operand\" \"\")\n+\t\t (match_operand:SI 2 \"memory_operand\" \"m\")] 8))]\n+  \"(DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS)\n+    && flag_pic == 1\n+    && (reload_in_progress || reload_completed)\"\n+  [(set (match_dup 0) (match_dup 2))\n+   (set (match_dup 0) (unspec [(match_dup 1)(match_dup 0)] 8))]\n+  \"\")\n+\n ;; For SI, we special-case integers that can't be loaded in one insn.  We\n ;; do the load 16-bits at a time.  We could do this by loading from memory,\n ;; and this is even supposed to be faster, but it is simpler not to get"}]}