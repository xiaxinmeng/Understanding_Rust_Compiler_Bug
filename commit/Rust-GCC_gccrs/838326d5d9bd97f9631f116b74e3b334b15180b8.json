{"sha": "838326d5d9bd97f9631f116b74e3b334b15180b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM4MzI2ZDVkOWJkOTdmOTYzMWYxMTZiNzRlM2IzMzRiMTUxODBiOA==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2015-08-21T12:51:20Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2015-08-21T12:51:20Z"}, "message": "s390-builtins.def: Fix value range of vec_load_bndry.\n\ngcc/ChangeLog\n2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* config/s390/s390-builtins.def: Fix value range of vec_load_bndry.\n\ngcc/testsuite/ChangeLog\n2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\t* gcc.target/s390/zvector/vec-load_bndry-1.c: New test.\n\nFrom-SVN: r227058", "tree": {"sha": "18fba24f769b18c0f279f878a650788a472b66fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18fba24f769b18c0f279f878a650788a472b66fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/838326d5d9bd97f9631f116b74e3b334b15180b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838326d5d9bd97f9631f116b74e3b334b15180b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838326d5d9bd97f9631f116b74e3b334b15180b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838326d5d9bd97f9631f116b74e3b334b15180b8/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd21fbd7616ae2c6edee7322c5aa23952a3384e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd21fbd7616ae2c6edee7322c5aa23952a3384e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd21fbd7616ae2c6edee7322c5aa23952a3384e6"}], "stats": {"total": 106, "additions": 97, "deletions": 9}, "files": [{"sha": "c5af8520cd3e030694da107c8d30636f5419e067", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=838326d5d9bd97f9631f116b74e3b334b15180b8", "patch": "@@ -1,3 +1,7 @@\n+2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390-builtins.def: Fix value range of vec_load_bndry.\n+\n 2015-08-21  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>\n \n \t* fold-const.c (fold_binary_loc) : Move sqrt(x)*sqrt(x) as x"}, {"sha": "b267b04e2a74d148c6beaff3cbd998ef145ac98a", "filename": "gcc/config/s390/s390-builtins.def", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2Fconfig%2Fs390%2Fs390-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-builtins.def?ref=838326d5d9bd97f9631f116b74e3b334b15180b8", "patch": "@@ -438,15 +438,15 @@ B_DEF      (s390_vllezf,                vec_insert_and_zerov4si,0,\n B_DEF      (s390_vllezg,                vec_insert_and_zerov2di,0,              B_VX,               0,                  BT_FN_UV2DI_ULONGLONGCONSTPTR)\n \n OB_DEF     (s390_vec_load_bndry,        s390_vec_load_bndry_s8,s390_vec_load_bndry_dbl,B_VX,        BT_FN_OV4SI_INTCONSTPTR_INT)\n-OB_DEF_VAR (s390_vec_load_bndry_s8,     s390_vlbb,          O2_U3,              BT_OV_V16QI_SCHARCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_u8,     s390_vlbb,          O2_U3,              BT_OV_UV16QI_UCHARCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_s16,    s390_vlbb,          O2_U3,              BT_OV_V8HI_SHORTCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_u16,    s390_vlbb,          O2_U3,              BT_OV_UV8HI_USHORTCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_s32,    s390_vlbb,          O2_U3,              BT_OV_V4SI_INTCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_u32,    s390_vlbb,          O2_U3,              BT_OV_UV4SI_UINTCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_s64,    s390_vlbb,          O2_U3,              BT_OV_V2DI_LONGLONGCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_u64,    s390_vlbb,          O2_U3,              BT_OV_UV2DI_ULONGLONGCONSTPTR_USHORT)\n-OB_DEF_VAR (s390_vec_load_bndry_dbl,    s390_vlbb,          O2_U3,              BT_OV_V2DF_DBLCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_s8,     s390_vlbb,          O2_U16,              BT_OV_V16QI_SCHARCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_u8,     s390_vlbb,          O2_U16,              BT_OV_UV16QI_UCHARCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_s16,    s390_vlbb,          O2_U16,              BT_OV_V8HI_SHORTCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_u16,    s390_vlbb,          O2_U16,              BT_OV_UV8HI_USHORTCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_s32,    s390_vlbb,          O2_U16,              BT_OV_V4SI_INTCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_u32,    s390_vlbb,          O2_U16,              BT_OV_UV4SI_UINTCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_s64,    s390_vlbb,          O2_U16,              BT_OV_V2DI_LONGLONGCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_u64,    s390_vlbb,          O2_U16,              BT_OV_UV2DI_ULONGLONGCONSTPTR_USHORT)\n+OB_DEF_VAR (s390_vec_load_bndry_dbl,    s390_vlbb,          O2_U16,              BT_OV_V2DF_DBLCONSTPTR_USHORT)\n \n B_DEF      (s390_vlbb,                  vlbb,               0,                  B_VX,               O2_U3,              BT_FN_UV16QI_UCHARCONSTPTR_USHORT)\n "}, {"sha": "171a92c286a0d8265d0640756b832d77512ee09e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=838326d5d9bd97f9631f116b74e3b334b15180b8", "patch": "@@ -1,3 +1,7 @@\n+2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/zvector/vec-load_bndry-1.c: New test.\n+\n 2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* lib/gcc-dg.exp: Add extra options for db-final to the command line"}, {"sha": "9ebf6c7064f85059291b5af956bdec558eb22516", "filename": "gcc/testsuite/gcc.target/s390/zvector/vec-load_bndry-1.c", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-load_bndry-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/838326d5d9bd97f9631f116b74e3b334b15180b8/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-load_bndry-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fvec-load_bndry-1.c?ref=838326d5d9bd97f9631f116b74e3b334b15180b8", "patch": "@@ -0,0 +1,80 @@\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O0 -mzarch -march=z13 -mzvector\" } */\n+\n+#include <vecintrin.h>\n+\n+signed char\n+foo64 (signed char *p)\n+{\n+  return vec_load_bndry (p, 64)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),0\" 1 } } */\n+}\n+\n+signed char\n+foo128 (signed char *p)\n+{\n+  return\n+    vec_load_bndry (p, 128)[0]\n+    + vec_load_bndry (p + 16, 128)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),1\" 2 } } */\n+}\n+\n+signed char\n+foo256 (signed char *p)\n+{\n+  return\n+    vec_load_bndry (p, 256)[0]\n+    + vec_load_bndry (p + 16, 256)[0]\n+    + vec_load_bndry (p + 32, 256)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),2\" 3 } } */\n+}\n+\n+signed char\n+foo512 (signed char *p)\n+{\n+  return\n+    vec_load_bndry (p, 512)[0]\n+    + vec_load_bndry (p + 16, 512)[0]\n+    + vec_load_bndry (p + 32, 512)[0]\n+    + vec_load_bndry (p + 48, 512)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),3\" 4 } } */\n+}\n+\n+signed char\n+foo1024 (signed char *p)\n+{\n+  return\n+    vec_load_bndry (p, 1024)[0]\n+    + vec_load_bndry (p + 16, 1024)[0]\n+    + vec_load_bndry (p + 32, 1024)[0]\n+    + vec_load_bndry (p + 48, 1024)[0]\n+    + vec_load_bndry (p + 64, 1024)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),4\" 5 } } */\n+}\n+\n+signed char\n+foo2048 (signed char *p)\n+{\n+  return\n+    vec_load_bndry (p, 2048)[0]\n+    + vec_load_bndry (p + 16, 2048)[0]\n+    + vec_load_bndry (p + 32, 2048)[0]\n+    + vec_load_bndry (p + 48, 2048)[0]\n+    + vec_load_bndry (p + 64, 2048)[0]\n+    + vec_load_bndry (p + 80, 2048)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),5\" 6 } } */\n+}\n+\n+signed char\n+foo4096 (signed char *p)\n+{\n+  return\n+    vec_load_bndry (p, 4096)[0]\n+    + vec_load_bndry (p + 16, 4096)[0]\n+    + vec_load_bndry (p + 32, 4096)[0]\n+    + vec_load_bndry (p + 48, 4096)[0]\n+    + vec_load_bndry (p + 64, 4096)[0]\n+    + vec_load_bndry (p + 80, 4096)[0]\n+    + vec_load_bndry (p + 96, 4096)[0];\n+  /* { dg-final { scan-assembler-times \"\\tvlbb\\t%v..?,0\\\\(%r..?\\\\),6\" 7 } } */\n+}"}]}