{"sha": "eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIwOWNkY2IxYThiNTViOWM5MjU3MTE5MDUzYjBmNmY3YjI0ZWRkOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-05-12T07:29:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-05-12T07:29:33Z"}, "message": "re PR tree-optimization/71060 (Compiler reports \"loop vectorized\" but actually  it was not)\n\n2016-05-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/71060\n\t* tree-data-ref.c (initialize_data_dependence_relation): Do not\n\trequire exact match of DR_BASE_OBJECT but only matching address and\n\ttype.\n\nFrom-SVN: r236159", "tree": {"sha": "45f9223ca19c8812d5cc3052d377a313fd5d5b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45f9223ca19c8812d5cc3052d377a313fd5d5b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "44ab146a7230d473f0b138abe428e923376d7b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ab146a7230d473f0b138abe428e923376d7b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ab146a7230d473f0b138abe428e923376d7b53"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "6b3ca4b47822d68ba28cba088e6196f78bfa6e02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9", "patch": "@@ -1,3 +1,10 @@\n+2016-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71060\n+\t* tree-data-ref.c (initialize_data_dependence_relation): Do not\n+\trequire exact match of DR_BASE_OBJECT but only matching address and\n+\ttype.\n+\n 2016-05-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70986"}, {"sha": "ed28ca1d6e5a665883ffbf8f8016299d42b6f44f", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=eb09cdcb1a8b55b9c9257119053b0f6f7b24edd9", "patch": "@@ -1538,8 +1538,13 @@ initialize_data_dependence_relation (struct data_reference *a,\n     }\n \n   /* If the references do not access the same object, we do not know\n-     whether they alias or not.  */\n-  if (!operand_equal_p (DR_BASE_OBJECT (a), DR_BASE_OBJECT (b), 0))\n+     whether they alias or not.  We do not care about TBAA or alignment\n+     info so we can use OEP_ADDRESS_OF to avoid false negatives.\n+     But the accesses have to use compatible types as otherwise the\n+     built indices would not match.  */\n+  if (!operand_equal_p (DR_BASE_OBJECT (a), DR_BASE_OBJECT (b), OEP_ADDRESS_OF)\n+      || !types_compatible_p (TREE_TYPE (DR_BASE_OBJECT (a)),\n+\t\t\t      TREE_TYPE (DR_BASE_OBJECT (b))))\n     {\n       DDR_ARE_DEPENDENT (res) = chrec_dont_know;\n       return res;"}]}