{"sha": "ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1ZDhiOTA3Mjk4ZDU4MTgxMjdlYWQzZjBkNWE2MjhlNWY1ZGNjMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-08-27T18:52:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:45Z"}, "message": "[Ada] Always enable the support for 128-bit integer types on 64-bit platforms\n\ngcc/ada/\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Rewrite again code enabling\n\tor disabling the support for 128-bit integer types.", "tree": {"sha": "d2bbdbc276f25c04022b87ece40f4d2f3a5eddd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2bbdbc276f25c04022b87ece40f4d2f3a5eddd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b740cf28536e3baec54914dfa1894b17711aa99c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b740cf28536e3baec54914dfa1894b17711aa99c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b740cf28536e3baec54914dfa1894b17711aa99c"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "180a1405eebce074ea9bbb93e76b49c0f8e4f03d", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca5d8b907298d5818127ead3f0d5a628e5f5dcc3/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=ca5d8b907298d5818127ead3f0d5a628e5f5dcc3", "patch": "@@ -800,30 +800,21 @@ procedure Gnat1drv is\n       end if;\n \n       --  Enable or disable the support for 128-bit types. It is automatically\n-      --  enabled if the back end supports them, unless not in GNAT mode and\n-      --  either the runtime does not contain the required support units or the\n-      --  switch -gnatd.H is specified.\n+      --  enabled if the back end supports them, unless -gnatd.H is specified.\n \n       Enable_128bit_Types := Ttypes.Standard_Long_Long_Long_Integer_Size = 128;\n \n-      if Enable_128bit_Types and then not GNAT_Mode then\n-         Name_Len := 13;\n-         Name_Buffer (1 .. Name_Len) := \"s-arit128.ads\";\n-\n-         if Find_File (Name_Find, Osint.Source, Full_Name => True) = No_File\n-           or else Debug_Flag_Dot_HH\n-         then\n-            Enable_128bit_Types := False;\n-\n-            Ttypes.Standard_Long_Long_Long_Integer_Size :=\n-              Ttypes.Standard_Long_Long_Integer_Size;\n-            Ttypes.Standard_Long_Long_Long_Integer_Width :=\n-              Ttypes.Standard_Long_Long_Integer_Width;\n-            Ttypes.System_Max_Integer_Size :=\n-              Ttypes.Standard_Long_Long_Integer_Size;\n-            Ttypes.System_Max_Binary_Modulus_Power :=\n-              Ttypes.Standard_Long_Long_Integer_Size;\n-         end if;\n+      if Enable_128bit_Types and then Debug_Flag_Dot_HH then\n+         Enable_128bit_Types := False;\n+\n+         Ttypes.Standard_Long_Long_Long_Integer_Size :=\n+           Ttypes.Standard_Long_Long_Integer_Size;\n+         Ttypes.Standard_Long_Long_Long_Integer_Width :=\n+           Ttypes.Standard_Long_Long_Integer_Width;\n+         Ttypes.System_Max_Integer_Size :=\n+           Ttypes.Standard_Long_Long_Integer_Size;\n+         Ttypes.System_Max_Binary_Modulus_Power :=\n+           Ttypes.Standard_Long_Long_Integer_Size;\n       end if;\n \n       --  Finally capture adjusted value of Suppress_Options as the initial"}]}