{"sha": "7998af1f4bf876f7ccf10ce956859e3dc2183774", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk5OGFmMWY0YmY4NzZmN2NjZjEwY2U5NTY4NTllM2RjMjE4Mzc3NA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2016-11-24T12:16:47Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2016-11-24T12:16:47Z"}, "message": "re PR rtl-optimization/78120 (If conversion no longer performed)\n\n\tPR rtl-optimization/78120\n\t* config/i386/i386.c (ix86_rtx_costs): Fully handle SETs.\n\nFrom-SVN: r242832", "tree": {"sha": "952d443daca7ea277e7ca3879914717f0d526990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/952d443daca7ea277e7ca3879914717f0d526990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7998af1f4bf876f7ccf10ce956859e3dc2183774", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7998af1f4bf876f7ccf10ce956859e3dc2183774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7998af1f4bf876f7ccf10ce956859e3dc2183774", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7998af1f4bf876f7ccf10ce956859e3dc2183774/comments", "author": null, "committer": null, "parents": [{"sha": "21aaaf1e050fac4eb5edd66489cc5c6f1b332b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21aaaf1e050fac4eb5edd66489cc5c6f1b332b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21aaaf1e050fac4eb5edd66489cc5c6f1b332b75"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "8d9de43233e380a4f1d177d430fd5b87ac277ad7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7998af1f4bf876f7ccf10ce956859e3dc2183774/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7998af1f4bf876f7ccf10ce956859e3dc2183774/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7998af1f4bf876f7ccf10ce956859e3dc2183774", "patch": "@@ -1,3 +1,8 @@\n+2016-11-24  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR rtl-optimization/78120\n+\t* config/i386/i386.c (ix86_rtx_costs): Fully handle SETs.\n+\n 2016-11-24  Bin Cheng  <bin.cheng@arm.com>\n \n \t* match.pd: Refine type conversion in result expr for below pattern:"}, {"sha": "0e8dda958c399e3bfa35feef1b628e5472adb0f3", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7998af1f4bf876f7ccf10ce956859e3dc2183774/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7998af1f4bf876f7ccf10ce956859e3dc2183774/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7998af1f4bf876f7ccf10ce956859e3dc2183774", "patch": "@@ -40293,6 +40293,7 @@ ix86_rtx_costs (rtx x, machine_mode mode, int outer_code_i, int opno,\n   enum rtx_code code = GET_CODE (x);\n   enum rtx_code outer_code = (enum rtx_code) outer_code_i;\n   const struct processor_costs *cost = speed ? ix86_cost : &ix86_size_cost;\n+  int src_cost;\n \n   switch (code)\n     {\n@@ -40303,7 +40304,23 @@ ix86_rtx_costs (rtx x, machine_mode mode, int outer_code_i, int opno,\n \t  *total = ix86_set_reg_reg_cost (GET_MODE (SET_DEST (x)));\n \t  return true;\n \t}\n-      return false;\n+\n+      if (register_operand (SET_SRC (x), VOIDmode))\n+\t/* Avoid potentially incorrect high cost from rtx_costs\n+\t   for non-tieable SUBREGs.  */\n+\tsrc_cost = 0;\n+      else\n+\t{\n+\t  src_cost = rtx_cost (SET_SRC (x), mode, SET, 1, speed);\n+\n+\t  if (CONSTANT_P (SET_SRC (x)))\n+\t    /* Constant costs assume a base value of COSTS_N_INSNS (1) and add\n+\t       a small value, possibly zero for cheap constants.  */\n+\t    src_cost += COSTS_N_INSNS (1);\n+\t}\n+\n+      *total = src_cost + rtx_cost (SET_DEST (x), mode, SET, 0, speed);\n+      return true;\n \n     case CONST_INT:\n     case CONST:"}]}