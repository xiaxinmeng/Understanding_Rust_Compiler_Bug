{"sha": "41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiZDJiMWNjMmJjOTk2ZDAxNGFjODJlYjEyMGRjYjcxZGU5ZjliMw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-10-13T23:21:07Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-10-13T23:21:07Z"}, "message": "AccessController.java (checkPermission): Now throws AccessControlException.\n\n\t* java/security/AccessController.java (checkPermission): Now\n\tthrows AccessControlException.\n\t* java/security/AllPermission.java: Class now final.\n\t* java/security/Permission.java (getName): Now final.\n\t(name): Now private.\n\t(equals): New abstract method.\n\t* java/security/PermissionCollection.java (linesep): Now private.\n\t* java/security/Permissions.java: Class now final.\n\t* java/security/Security.java (Security): New private\n\tconstructor.\n\t* java/security/UnresolvedPermission.java: Import\n\tjava.security.cert.Certificate.  Class now final.\n\t* java/security/acl/Group.java: Now extends Principal.\n\t(isMember): Added Principal argument.\n\t* java/security/spec/X509EncodedKeySpec.java (getFormat): Now\n\tfinal.\n\t* java/security/spec/PKCS8EncodedKeySpec.java (getFormat): Now\n\tfinal.\n\nFrom-SVN: r46246", "tree": {"sha": "e3fe20f418809950636da794c7f8c0da4cd92417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3fe20f418809950636da794c7f8c0da4cd92417"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/comments", "author": null, "committer": null, "parents": [{"sha": "4f96ff63b3d9df3742469382152174daea6a337f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f96ff63b3d9df3742469382152174daea6a337f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f96ff63b3d9df3742469382152174daea6a337f"}], "stats": {"total": 79, "additions": 59, "deletions": 20}, "files": [{"sha": "25974eb2a0467a948eedd4aa025d09aef0167e47", "filename": "libjava/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,3 +1,24 @@\n+2001-10-13  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/security/AccessController.java (checkPermission): Now\n+\tthrows AccessControlException.\n+\t* java/security/AllPermission.java: Class now final.\n+\t* java/security/Permission.java (getName): Now final.\n+\t(name): Now private.\n+\t(equals): New abstract method.\n+\t* java/security/PermissionCollection.java (linesep): Now private.\n+\t* java/security/Permissions.java: Class now final.\n+\t* java/security/Security.java (Security): New private\n+\tconstructor.\n+\t* java/security/UnresolvedPermission.java: Import\n+\tjava.security.cert.Certificate.  Class now final.\n+\t* java/security/acl/Group.java: Now extends Principal.\n+\t(isMember): Added Principal argument.\n+\t* java/security/spec/X509EncodedKeySpec.java (getFormat): Now\n+\tfinal.\n+\t* java/security/spec/PKCS8EncodedKeySpec.java (getFormat): Now\n+\tfinal.\n+\n 2001-10-12  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "0ef18c22d6f281051a4160d6f1b18780f64cc4be", "filename": "libjava/java/security/AccessController.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FAccessController.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FAccessController.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAccessController.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -65,6 +65,7 @@ private AccessController()\n    * allow the given permission.\n    */\n   public static void checkPermission(Permission perm)\n+    throws AccessControlException\n   {\n     getContext().checkPermission(perm);\n   }"}, {"sha": "31140c089ef8431b6c523b927b169ac949e7b5ce", "filename": "libjava/java/security/AllPermission.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FAllPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FAllPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAllPermission.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* AllPermission.java -- Permission to do anything\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -35,7 +35,7 @@\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-public class AllPermission extends Permission\n+public final class AllPermission extends Permission\n {\n   /**\n    * This method initializes a new instance of <code>AllPermission</code>.  It"}, {"sha": "0a297e7888714f3c192bd32f413c636126ba04f8", "filename": "libjava/java/security/Permission.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FPermission.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* Permission.java -- The superclass for all permission objects\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -59,7 +59,7 @@ public abstract class Permission implements Guard, Serializable\n   /**\n    * This is the name assigned to this permission object.\n    */\n-  protected String name;\t// Taken from the serializable form information\n+  private String name;\t\t// Taken from the serializable form information\n \n   /**\n    * This method initializes a new instance of <code>Permission</code> to\n@@ -75,7 +75,7 @@ public Permission(String name)\n    *\n    * @return The name of this <code>Permission</code>\n    */\n-  public String getName()\n+  public final String getName()\n   {\n     return (name);\n   }\n@@ -106,6 +106,11 @@ public void checkGuard(Object obj) throws SecurityException\n       sm.checkPermission(this);\n   }\n \n+  /**\n+   * Check to see if this object equals OBJ.\n+   */\n+  public abstract boolean equals (Object obj);\n+\n   /**\n    * This method tests whether this <code>Permission</code> implies that the\n    * specified <code>Permission</code> is also granted."}, {"sha": "69222826fe488a65e2c2845f7f207e930ff4f8e8", "filename": "libjava/java/security/PermissionCollection.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FPermissionCollection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FPermissionCollection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FPermissionCollection.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* PermissionCollection.java -- A collection of permission objects\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -60,10 +60,11 @@\n    *\n    * @author Aaron M. Renn (arenn@urbanophile.com)\n    */\n-public abstract class PermissionCollection extends Object implements\n-  Serializable\n+public abstract class PermissionCollection\n+  extends Object\n+  implements Serializable\n {\n-  public static final String linesep = null;\n+  private static final String linesep = null;\n \n   static\n   {"}, {"sha": "5cc962eca976fb69ab0ea68918211498ab52d27b", "filename": "libjava/java/security/Permissions.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FPermissions.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FPermissions.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FPermissions.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* Permissions.java -- A collection of permission collections\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,7 +45,9 @@\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-public class Permissions extends PermissionCollection implements Serializable\n+public final class Permissions\n+  extends PermissionCollection\n+  implements Serializable\n {\n   /**\n    * Holds instances of <code>AllPermission</code>."}, {"sha": "95606e31f124154a00d784330dee7c5317f01572", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -52,6 +52,11 @@ public final class Security extends Object\n     loadProviders();\n   }\n \n+  // This class can't be instantiated.\n+  private Security ()\n+  {\n+  }\n+\n   private static void loadProviders()\n   {\n     String separator = System.getProperty(\"file.separator\");"}, {"sha": "8f9e06a1352c0c8cf80bbf1c558ed6c926a4c412", "filename": "libjava/java/security/UnresolvedPermission.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FUnresolvedPermission.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2FUnresolvedPermission.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FUnresolvedPermission.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* UnresolvedPermission.java -- Placeholder for unresolved permissions.\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -27,6 +27,8 @@\n package java.security;\n \n import java.io.Serializable;\n+// All uses of Certificate in this file refer to this class.\n+import java.security.cert.Certificate;\n \n /**\n  * This class is used to hold instances of all permissions that cannot\n@@ -44,7 +46,9 @@\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-public class UnresolvedPermission extends Permission implements Serializable\n+public final class UnresolvedPermission\n+  extends Permission\n+  implements Serializable\n {\n \n   /**"}, {"sha": "a4228f6869dfca8735a49a987ce8b804fb08fddb", "filename": "libjava/java/security/acl/Group.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2Facl%2FGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2Facl%2FGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Facl%2FGroup.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* Group.java -- Represents a group of Principals\n-   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -39,7 +39,7 @@\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */\n-public interface Group\n+public interface Group extends Principal\n {\n   /**\n    * This method adds a new <code>Principal</code> to this group.\n@@ -67,7 +67,7 @@\n    *\n    * @return <code>true</code> if the user is member, <code>false</code> otherwise\n    */\n-  public abstract boolean isMember();\n+  public abstract boolean isMember(Principal member);\n \n   /**\n    * This method returns a list of all members of the group as an "}, {"sha": "98d6153525f25f86cc57847f5b5187bda31ca251", "filename": "libjava/java/security/spec/PKCS8EncodedKeySpec.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2Fspec%2FPKCS8EncodedKeySpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2Fspec%2FPKCS8EncodedKeySpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FPKCS8EncodedKeySpec.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* PKCS8EncodedKeySpec.java --- PKCS8 Encoded Key Specificaton class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -62,7 +62,7 @@ public byte[] getEncoded()\n \n \t@return a string representing the name\n */\n-  public String getFormat()\n+  public final String getFormat()\n   {\n     return \"PKCS#8\";\n   }"}, {"sha": "77b22932aa551335e38b1657c5c35893cf646db7", "filename": "libjava/java/security/spec/X509EncodedKeySpec.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2Fspec%2FX509EncodedKeySpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3/libjava%2Fjava%2Fsecurity%2Fspec%2FX509EncodedKeySpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FX509EncodedKeySpec.java?ref=41bd2b1cc2bc996d014ac82eb120dcb71de9f9b3", "patch": "@@ -1,5 +1,5 @@\n /* X509EncodedKeySpec.java --- X.509 Encoded Key Specificaton class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -63,7 +63,7 @@ public byte[] getEncoded()\n \n      @return a string representing the name\n   */\n-  public String getFormat()\n+  public final String getFormat()\n   {\n     return \"X.509\";\n   }"}]}