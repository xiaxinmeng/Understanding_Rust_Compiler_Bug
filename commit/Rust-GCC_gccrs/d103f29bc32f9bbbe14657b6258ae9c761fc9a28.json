{"sha": "d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwM2YyOWJjMzJmOWJiYmUxNDY1N2I2MjU4YWU5Yzc2MWZjOWEyOA==", "commit": {"author": {"name": "Matthew Gretton-Dann", "email": "matthew.gretton-dann@linaro.org", "date": "2014-01-15T10:27:55Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2014-01-15T10:27:55Z"}, "message": "re PR target/59695 (bad code generation on aarch64 in aarch64_output_mi_thunk)\n\n2014-01-15  Matthew Gretton-Dann  <matthew.gretton-dann@linaro.org>\n            Kugan Vivekanandarajah  <kuganv@linaro.org>\n\n\tgcc/\n\tPR target/59695\n\t* config/aarch64/aarch64.c (aarch64_build_constant): Fix incorrect\n\ttruncation.\n\n\tgcc/testsuite/\n\tPR target/59695\n\t* g++.dg/pr59695.C: New testcase.\n\n\nCo-Authored-By: Kugan Vivekanandarajah <kuganv@linaro.org>\n\nFrom-SVN: r206628", "tree": {"sha": "400644faadd03cf87e20fb2a806ae8ac3c9586f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/400644faadd03cf87e20fb2a806ae8ac3c9586f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/comments", "author": null, "committer": null, "parents": [{"sha": "1c8b53037c22de1a05643f3bb0851d4460c93a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8b53037c22de1a05643f3bb0851d4460c93a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c8b53037c22de1a05643f3bb0851d4460c93a8a"}], "stats": {"total": 140, "additions": 139, "deletions": 1}, "files": [{"sha": "f993e480f7b9173781d57cd925086ee3daab2a07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "patch": "@@ -1,3 +1,10 @@\n+2014-01-15  Matthew Gretton-Dann  <matthew.gretton-dann@linaro.org>\n+            Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR target/59695\n+\t* config/aarch64/aarch64.c (aarch64_build_constant): Fix incorrect\n+\ttruncation.\n+\n 2014-01-15  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/59802"}, {"sha": "89f2b9bf50e51f1e1e901ce727605b9d535cde84", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "patch": "@@ -2488,7 +2488,7 @@ aarch64_build_constant (int regnum, HOST_WIDE_INT val)\n       if (ncount < zcount)\n \t{\n \t  emit_move_insn (gen_rtx_REG (Pmode, regnum),\n-\t\t\t  GEN_INT ((~val) & 0xffff));\n+\t\t\t  GEN_INT (val | ~(HOST_WIDE_INT) 0xffff));\n \t  tval = 0xffff;\n \t}\n       else"}, {"sha": "eeff3e6cd926a19ab29a25467f3f73b8c0bb9fe8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "patch": "@@ -1,3 +1,9 @@\n+2014-01-15  Matthew Gretton-Dann  <matthew.gretton-dann@linaro.org>\n+\t    Kugan Vivekanandarajah  <kuganv@linaro.org>\n+\n+\tPR target/59695\n+\t* g++.dg/pr59695.C: New testcase.\n+\n 2014-01-15  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \tPR target/59803"}, {"sha": "ac636d06f0a225eaee0323e81a13e2752a836983", "filename": "gcc/testsuite/g++.dg/pr59695.C", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr59695.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d103f29bc32f9bbbe14657b6258ae9c761fc9a28/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr59695.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr59695.C?ref=d103f29bc32f9bbbe14657b6258ae9c761fc9a28", "patch": "@@ -0,0 +1,125 @@\n+\n+/* PR target/59695 */\n+/* { dg-do run } */\n+/* { dg-options \"-O0\" } */\n+\n+#define  DEFINE_VIRTUALS_FNS(i)\tvirtual void  xxx##i ()\t{} \\\n+  virtual void  foo1_##i ()\t{}\\\n+  virtual void  foo2_##i ()\t{}\\\n+  virtual void  foo3_##i ()\t{}\\\n+  virtual void  foo4_##i ()\t{}\\\n+  virtual void  foo5_##i ()\t{}\\\n+  virtual void  foo6_##i ()\t{}\\\n+  virtual void  foo7_##i ()\t{}\\\n+  virtual void  foo8_##i ()\t{}\\\n+  virtual void  foo9_##i ()\t{}\\\n+  virtual void  foo10_##i ()\t{}\\\n+  virtual void  foo11_##i ()\t{}\\\n+  virtual void  foo12_##i ()\t{}\\\n+  virtual void  foo13_##i ()\t{}\\\n+  virtual void  foo14_##i ()\t{}\\\n+  virtual void  foo15_##i ()\t{}\\\n+  virtual void  foo16_##i ()\t{}\\\n+  virtual void  foo17_##i ()\t{}\\\n+  virtual void  foo18_##i ()\t{}\\\n+  virtual void  foo19_##i ()\t{}\\\n+  virtual void  foo20_##i ()\t{}\\\n+  virtual void  foo21_##i ()\t{}\\\n+  virtual void  foo22_##i ()\t{}\\\n+\n+class base_class_2\n+{\n+\n+public:\n+  /* Define lots of virtual functions */\n+  DEFINE_VIRTUALS_FNS (1)\n+  DEFINE_VIRTUALS_FNS (2)\n+  DEFINE_VIRTUALS_FNS (3)\n+  DEFINE_VIRTUALS_FNS (4)\n+  DEFINE_VIRTUALS_FNS (5)\n+  DEFINE_VIRTUALS_FNS (6)\n+  DEFINE_VIRTUALS_FNS (7)\n+  DEFINE_VIRTUALS_FNS (8)\n+  DEFINE_VIRTUALS_FNS (9)\n+  DEFINE_VIRTUALS_FNS (10)\n+  DEFINE_VIRTUALS_FNS (11)\n+  DEFINE_VIRTUALS_FNS (12)\n+  DEFINE_VIRTUALS_FNS (13)\n+  DEFINE_VIRTUALS_FNS (14)\n+  DEFINE_VIRTUALS_FNS (15)\n+  DEFINE_VIRTUALS_FNS (16)\n+  DEFINE_VIRTUALS_FNS (17)\n+  DEFINE_VIRTUALS_FNS (18)\n+  DEFINE_VIRTUALS_FNS (19)\n+  DEFINE_VIRTUALS_FNS (20)\n+\n+  base_class_2();\n+  virtual ~base_class_2 ();\n+};\n+\n+base_class_2::base_class_2()\n+{\n+}\n+\n+base_class_2::~base_class_2 ()\n+{\n+}\n+\n+class base_class_1\n+{\n+public:\n+  virtual ~base_class_1();\n+  base_class_1();\n+};\n+\n+base_class_1::base_class_1()\n+{\n+}\n+\n+base_class_1::~base_class_1()\n+{\n+}\n+\n+class base_Impl_class :\n+  virtual public base_class_2, public base_class_1\n+{\n+public:\n+  base_Impl_class ();\n+  virtual ~base_Impl_class ();\n+};\n+\n+base_Impl_class::base_Impl_class ()\n+{\n+}\n+\n+base_Impl_class::~base_Impl_class ()\n+{\n+}\n+\n+\n+class test_cls : public base_Impl_class\n+{\n+public:\n+  test_cls();\n+  virtual ~test_cls();\n+};\n+\n+test_cls::test_cls()\n+{\n+}\n+\n+test_cls::~test_cls()\n+{\n+}\n+\n+int main()\n+{\n+  test_cls *test = new test_cls;\n+  base_class_2 *p1 = test;\n+\n+  /* PR59695  destructor thunk offsets are not setup\n+   correctly resulting in crash.  */\n+  delete p1;\n+  return 0;\n+}\n+"}]}