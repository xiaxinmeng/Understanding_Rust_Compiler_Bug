{"sha": "9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "node_id": "C_kwDOANBUbNoAKDllMWU5NjJlYWM4ZDJhMjhmY2Q2NDhhMGY1YzhlYjAwMjJhYmQ4ZTQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-04-26T09:41:09Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-05-11T06:55:19Z"}, "message": "opts: do not allow Separate+Joined ending with =\n\nDo not allow strange option format:\n-msmall-data-limit= 11.\n\nFor -output-pch we need to use Separate syntax as lang spec\nrules automatically append a space.\n\n\tPR target/105355\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.opt: Remove Separate from\n\t-msmall-data-limit=.\n\t* optc-gen.awk: Report error for the described situation.\n\t* gcc.cc: Use Separate syntax.\n\t* opts.cc (gen_command_line_string): Change option name.\n\ngcc/c-family/ChangeLog:\n\n\t* c-opts.cc (c_common_handle_option): Change option name.\n\t* c.opt: Remove Joined and use Separate option.\n\ngcc/cp/ChangeLog:\n\n\t* lang-specs.h: Use Separate syntax.\n\ngcc/objc/ChangeLog:\n\n\t* lang-specs.h: Use Separate syntax.\n\ngcc/objcp/ChangeLog:\n\n\t* lang-specs.h: Use Separate syntax.", "tree": {"sha": "c44654de728de57a5b86ae4f538ff4a49a80cd4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c44654de728de57a5b86ae4f538ff4a49a80cd4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a3ab2c6a7b81883e14b6e2604ecb39838597a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a3ab2c6a7b81883e14b6e2604ecb39838597a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a3ab2c6a7b81883e14b6e2604ecb39838597a8"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "b9f01a65ed71b5f2f493b727e468baa2b553259c", "filename": "gcc/c-family/c-opts.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fc-family%2Fc-opts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fc-family%2Fc-opts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.cc?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -300,7 +300,7 @@ c_common_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       result = false;\n       break;\n \n-    case OPT__output_pch_:\n+    case OPT__output_pch:\n       pch_file = arg;\n       break;\n "}, {"sha": "035b1de0d841e6cfbf551c1e1a2169129ecc7299", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -135,8 +135,8 @@ C ObjC C++ ObjC++ Separate Alias(o)\n -output=\n C ObjC C++ ObjC++ Joined Alias(o)\n \n--output-pch=\n-C ObjC C++ ObjC++ Joined Separate\n+-output-pch\n+C ObjC C++ ObjC++ Separate\n \n -pedantic\n C ObjC C++ ObjC++ Alias(pedantic)"}, {"sha": "84c8cf5a2de51fa87405a486d14d5fa98e272d3c", "filename": "gcc/config/riscv/riscv.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fconfig%2Friscv%2Friscv.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fconfig%2Friscv%2Friscv.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.opt?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -92,7 +92,7 @@ Target RejectNegative Joined Var(riscv_cpu_string)\n -mcpu=PROCESSOR\tUse architecture of and optimize the output for PROCESSOR.\n \n msmall-data-limit=\n-Target Joined Separate UInteger Var(g_switch_value) Init(8)\n+Target Joined UInteger Var(g_switch_value) Init(8)\n -msmall-data-limit=N\tPut global and static data smaller than <number> bytes into a special section (on some targets).\n \n msave-restore"}, {"sha": "dbda5a7b2e44ebdff8ad6815471ef633467b328b", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -55,7 +55,7 @@ along with GCC; see the file COPYING3.  If not see\n       \"  %{!fsyntax-only:\"\n       \"    %{!S:-o %g.s%V}\"\n       \"    %{!fmodule-*:%{!fmodules-*:%{!fdump-ada-spec*:\"\n-      \"\t         %{!o*:--output-pch=%i.gch}%W{o*:--output-pch=%*}}}}}\"\n+      \"\t         %{!o*:--output-pch %i.gch}%W{o*:--output-pch %*}}}}}\"\n       \"}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\"@c++-system-header\",\n@@ -76,7 +76,7 @@ along with GCC; see the file COPYING3.  If not see\n       \"  %{!fsyntax-only:\"\n       \"    %{!S:-o %g.s%V}\"\n       \"    %{!fmodule-*:%{!fmodules-*:%{!fdump-ada-spec*:\"\n-      \"\t         %{!o*:--output-pch=%i.gch}%W{o*:--output-pch=%*}}}}}\"\n+      \"\t         %{!o*:--output-pch %i.gch}%W{o*:--output-pch %*}}}}}\"\n       \"}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\"@c++-user-header\",\n@@ -96,7 +96,7 @@ along with GCC; see the file COPYING3.  If not see\n       \"  %{!fsyntax-only:\"\n       \"    %{!S:-o %g.s%V}\"\n       \"    %{!fmodule-*:%{!fmodules-*:%{!fdump-ada-spec*:\"\n-      \"\t         %{!o*:--output-pch=%i.gch}%W{o*:--output-pch=%*}}}}}\"\n+      \"\t         %{!o*:--output-pch %i.gch}%W{o*:--output-pch %*}}}}}\"\n       \"}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\"@c++\","}, {"sha": "299e09c4f545feb3b4e15d0eec806fd9a2050de9", "filename": "gcc/gcc.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fgcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fgcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.cc?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -1462,13 +1462,13 @@ static const struct compiler default_compilers[] =\n \t\t    cc1 -fpreprocessed %{save-temps*:%b.i} %{!save-temps*:%g.i} \\\n \t\t\t%(cc1_options)\\\n \t\t\t%{!fsyntax-only:%{!S:-o %g.s} \\\n-\t\t\t    %{!fdump-ada-spec*:%{!o*:--output-pch=%i.gch}\\\n-\t\t\t\t\t       %W{o*:--output-pch=%*}}%V}}\\\n+\t\t\t    %{!fdump-ada-spec*:%{!o*:--output-pch %i.gch}\\\n+\t\t\t\t\t       %W{o*:--output-pch %*}}%V}}\\\n \t  %{!save-temps*:%{!traditional-cpp:%{!no-integrated-cpp:\\\n \t\tcc1 %(cpp_unique_options) %(cc1_options)\\\n \t\t    %{!fsyntax-only:%{!S:-o %g.s} \\\n-\t\t        %{!fdump-ada-spec*:%{!o*:--output-pch=%i.gch}\\\n-\t\t\t\t\t   %W{o*:--output-pch=%*}}%V}}}}}}}\", 0, 0, 0},\n+\t\t        %{!fdump-ada-spec*:%{!o*:--output-pch %i.gch}\\\n+\t\t\t\t\t   %W{o*:--output-pch %*}}%V}}}}}}}\", 0, 0, 0},\n   {\".i\", \"@cpp-output\", 0, 0, 0},\n   {\"@cpp-output\",\n    \"%{!M:%{!MM:%{!E:cc1 -fpreprocessed %i %(cc1_options) %{!fsyntax-only:%(invoke_as)}}}}\", 0, 0, 0},"}, {"sha": "049166cb114120ceb776542f10c4765483a10523", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -41,12 +41,12 @@ along with GCC; see the file COPYING3.  If not see\n %eGNU Objective C no longer supports traditional compilation}\\\n \t%{save-temps*|no-integrated-cpp:cc1obj -E %(cpp_options) -o %{save-temps*:%b.mi} %{!save-temps*:%g.mi} \\n\\\n \t    cc1obj -fpreprocessed %b.mi %(cc1_options) %{print-objc-runtime-info} %{gen-decls}\\\n-                        -o %g.s %{!o*:--output-pch=%i.gch}\\\n-                        %W{o*:--output-pch=%*}%V}\\\n+                        -o %g.s %{!o*:--output-pch %i.gch}\\\n+                        %W{o*:--output-pch %*}%V}\\\n \t%{!save-temps*:%{!no-integrated-cpp:\\\n \t    cc1obj %(cpp_unique_options) %(cc1_options) %{print-objc-runtime-info} %{gen-decls}\\\n-                        -o %g.s %{!o*:--output-pch=%i.gch}\\\n-                        %W{o*:--output-pch=%*}%V}}}}}\", 0, 0, 0},\n+                        -o %g.s %{!o*:--output-pch %i.gch}\\\n+                        %W{o*:--output-pch %*}%V}}}}}\", 0, 0, 0},\n   {\".mi\", \"@objective-c-cpp-output\", 0, 0, 0},\n   {\"@objective-c-cpp-output\",\n      \"%{!M:%{!MM:%{!E:cc1obj -fpreprocessed %i %(cc1_options) %{print-objc-runtime-info} %{gen-decls}\\"}, {"sha": "49f78a7cdfd270f6f959fe585cf29727546982f5", "filename": "gcc/objcp/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fobjcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fobjcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Flang-specs.h?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -37,7 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n       cc1objplus %{save-temps*|no-integrated-cpp:-fpreprocessed %{save-temps*:%b.mii} %{!save-temps*:%g.mii}}\\\n \t      %{!save-temps*:%{!no-integrated-cpp:%(cpp_unique_options)}}\\\n \t%(cc1_options) %2\\\n-        -o %g.s %{!o*:--output-pch=%i.gch} %W{o*:--output-pch=%*}%V}}}\",\n+        -o %g.s %{!o*:--output-pch %i.gch} %W{o*:--output-pch %*}%V}}}\",\n      CPLUSPLUS_CPP_SPEC, 0, 0},\n   {\"@objective-c++\",\n     \"%{E|M|MM:cc1objplus -E %(cpp_options) %2 %(cpp_debug_options)}\\"}, {"sha": "595d3cff67779af44b0b528d1f0927660f247221", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -342,6 +342,13 @@ for (i = 0; i < n_opts; i++) {\n \tlen = length (opts[i]);\n \tenum = opt_enum(opts[i])\n \n+\t# Do not allow Joined and Separate properties if\n+\t# an options ends with '='.\n+\tif (flag_set_p(\"Joined\", flags[i]) && flag_set_p(\"Separate\", flags[i]) && opts[i] ~ \"=$\") {\n+\t\tprint \"#error Option '\" opts[i] \"' ending with '=' cannot have \" \\\n+\t\t\t\"both Joined and Separate properties\"\n+\t}\n+\n \t# If this switch takes joined arguments, back-chain all\n \t# subsequent switches to it for which it is a prefix.  If\n \t# a later switch S is a longer prefix of a switch T, T"}, {"sha": "cfac72a2eb02f0e923454ee95ad31510e84010c2", "filename": "gcc/opts.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4", "patch": "@@ -3639,7 +3639,7 @@ gen_command_line_string (cl_decoded_option *options,\n       case OPT_SPECIAL_input_file:\n       case OPT_grecord_gcc_switches:\n       case OPT_frecord_gcc_switches:\n-      case OPT__output_pch_:\n+      case OPT__output_pch:\n       case OPT_fdiagnostics_show_location_:\n       case OPT_fdiagnostics_show_option:\n       case OPT_fdiagnostics_show_caret:"}]}