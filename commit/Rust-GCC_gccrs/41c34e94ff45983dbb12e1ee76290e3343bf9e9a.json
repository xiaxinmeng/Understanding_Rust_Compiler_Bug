{"sha": "41c34e94ff45983dbb12e1ee76290e3343bf9e9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjMzRlOTRmZjQ1OTgzZGJiMTJlMWVlNzYyOTBlMzM0M2JmOWU5YQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-04-25T01:00:13Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-04-25T01:00:13Z"}, "message": "re PR target/57052 (missed optimization with rotate and mask)\n\n\tPR target/57052\n\t* config/rs6000/rs6000.md (rotlsi3_internal7): Rename to\n\trotlsi3_internal7le and condition on !BYTES_BIG_ENDIAN.\n\t(rotlsi3_internal8be): New BYTES_BIG_ENDIAN insn.\n\tRepeat for many other rotate/shift and mask patterns using subregs.\n\tName lshiftrt insns.\n\t(ashrdisi3_noppc64): Rename to ashrdisi3_noppc64be and condition\n\ton WORDS_BIG_ENDIAN.\n\nFrom-SVN: r198274", "tree": {"sha": "8088d4d8576e95726cc34cef2091d03332258aa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8088d4d8576e95726cc34cef2091d03332258aa9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c34e94ff45983dbb12e1ee76290e3343bf9e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c34e94ff45983dbb12e1ee76290e3343bf9e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c34e94ff45983dbb12e1ee76290e3343bf9e9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c34e94ff45983dbb12e1ee76290e3343bf9e9a/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9a7eb5db359083cf873210e5e525677c583f75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a7eb5db359083cf873210e5e525677c583f75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a7eb5db359083cf873210e5e525677c583f75a"}], "stats": {"total": 695, "additions": 637, "deletions": 58}, "files": [{"sha": "05befdb223a8c154e132612b4934c496735c9d4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c34e94ff45983dbb12e1ee76290e3343bf9e9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c34e94ff45983dbb12e1ee76290e3343bf9e9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41c34e94ff45983dbb12e1ee76290e3343bf9e9a", "patch": "@@ -1,3 +1,14 @@\n+2013-04-25  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/57052\n+\t* config/rs6000/rs6000.md (rotlsi3_internal7): Rename to\n+\trotlsi3_internal7le and condition on !BYTES_BIG_ENDIAN.\n+\t(rotlsi3_internal8be): New BYTES_BIG_ENDIAN insn.\n+\tRepeat for many other rotate/shift and mask patterns using subregs.\n+\tName lshiftrt insns.\n+\t(ashrdisi3_noppc64): Rename to ashrdisi3_noppc64be and condition\n+\ton WORDS_BIG_ENDIAN.\n+\n 2013-04-25  Alan Modra  <amodra@gmail.com>\n \n \t* config.gcc: Support little-endian powerpc-linux targets."}, {"sha": "bae804a30da77e4b35d6d81163cdbe5ed5aaf6f2", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 626, "deletions": 58, "changes": 684, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c34e94ff45983dbb12e1ee76290e3343bf9e9a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c34e94ff45983dbb12e1ee76290e3343bf9e9a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=41c34e94ff45983dbb12e1ee76290e3343bf9e9a", "patch": "@@ -3798,28 +3798,58 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotlsi3_internal7\"\n+(define_insn \"*rotlsi3_internal7le\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI\n \t (subreg:QI\n \t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"ri\")) 0)))]\n-  \"\"\n+  \"!BYTES_BIG_ENDIAN\"\n+  \"rlw%I2nm %0,%1,%h2,0xff\"\n+  [(set (attr \"cell_micro\")\n+     (if_then_else (match_operand:SI 2 \"const_int_operand\" \"\")\n+\t(const_string \"not\")\n+\t(const_string \"always\")))])\n+\n+(define_insn \"*rotlsi3_internal7be\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(zero_extend:SI\n+\t (subreg:QI\n+\t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"ri\")) 3)))]\n+  \"BYTES_BIG_ENDIAN\"\n   \"rlw%I2nm %0,%1,%h2,0xff\"\n   [(set (attr \"cell_micro\")\n      (if_then_else (match_operand:SI 2 \"const_int_operand\" \"\")\n \t(const_string \"not\")\n \t(const_string \"always\")))])\n \n-(define_insn \"*rotlsi3_internal8\"\n+(define_insn \"*rotlsi3_internal8le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:QI\n \t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n-  \"\"\n+  \"!BYTES_BIG_ENDIAN\"\n+  \"@\n+   rlwnm. %3,%1,%2,0xff\n+   rlwinm. %3,%1,%h2,0xff\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotlsi3_internal8be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:QI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 3))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n+  \"BYTES_BIG_ENDIAN\"\n   \"@\n    rlwnm. %3,%1,%2,0xff\n    rlwinm. %3,%1,%h2,0xff\n@@ -3836,7 +3866,7 @@\n \t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:SI (subreg:QI\n \t\t      (rotate:SI (match_dup 1)\n@@ -3846,7 +3876,25 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotlsi3_internal9\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:QI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")) 3))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"\"))]\n+  \"BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:SI (subreg:QI\n+\t\t      (rotate:SI (match_dup 1)\n+\t\t\t\t (match_dup 2)) 3)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotlsi3_internal9le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:QI\n@@ -3855,7 +3903,25 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"\"\n+  \"!BYTES_BIG_ENDIAN\"\n+  \"@\n+   rlwnm. %0,%1,%2,0xff\n+   rlwinm. %0,%1,%h2,0xff\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotlsi3_internal9be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:QI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 3))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 3)))]\n+  \"BYTES_BIG_ENDIAN\"\n   \"@\n    rlwnm. %0,%1,%2,0xff\n    rlwinm. %0,%1,%h2,0xff\n@@ -3873,36 +3939,81 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotlsi3_internal10\"\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:QI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")) 3))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 3)))]\n+  \"BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:SI (subreg:QI (rotate:SI (match_dup 1) (match_dup 2)) 3)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotlsi3_internal10le\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI\n \t (subreg:HI\n \t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n-  \"\"\n+  \"!BYTES_BIG_ENDIAN\"\n   \"@\n    rlwnm %0,%1,%2,0xffff\n    rlwinm %0,%1,%h2,0xffff\"\n   [(set_attr \"type\" \"var_shift_rotate,integer\")])\n \n+(define_insn \"*rotlsi3_internal10be\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:SI\n+\t (subreg:HI\n+\t  (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\")) 2)))]\n+  \"BYTES_BIG_ENDIAN\"\n+  \"@\n+   rlwnm %0,%1,%2,0xffff\n+   rlwinm %0,%1,%h2,0xffff\"\n+  [(set_attr \"type\" \"var_shift_rotate,integer\")])\n \n-(define_insn \"*rotlsi3_internal11\"\n+(define_insn \"*rotlsi3_internal11le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:HI\n \t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n-  \"\"\n+  \"!BYTES_BIG_ENDIAN\"\n+  \"@\n+   rlwnm. %3,%1,%2,0xffff\n+   rlwinm. %3,%1,%h2,0xffff\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotlsi3_internal11be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:HI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 2))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n+  \"BYTES_BIG_ENDIAN\"\n   \"@\n    rlwnm. %3,%1,%2,0xffff\n    rlwinm. %3,%1,%h2,0xffff\n@@ -3919,7 +4030,7 @@\n \t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:SI (subreg:HI\n \t\t      (rotate:SI (match_dup 1)\n@@ -3929,7 +4040,25 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotlsi3_internal12\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:HI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")) 2))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"\"))]\n+  \"BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:SI (subreg:HI\n+\t\t      (rotate:SI (match_dup 1)\n+\t\t\t\t (match_dup 2)) 2)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotlsi3_internal12le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:SI\n \t\t     (subreg:HI\n@@ -3938,7 +4067,25 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"\"\n+  \"!BYTES_BIG_ENDIAN\"\n+  \"@\n+   rlwnm. %0,%1,%2,0xffff\n+   rlwinm. %0,%1,%h2,0xffff\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotlsi3_internal12be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:HI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 2))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 2)))]\n+  \"BYTES_BIG_ENDIAN\"\n   \"@\n    rlwnm. %0,%1,%2,0xffff\n    rlwinm. %0,%1,%h2,0xffff\n@@ -3956,14 +4103,31 @@\n \t\t    (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:SI\n+\t\t     (subreg:HI\n+\t\t      (rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\")) 2))\n+\t\t    (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 2)))]\n+  \"BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:SI (subreg:HI (rotate:SI (match_dup 1) (match_dup 2)) 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n (define_insn \"ashlsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(ashift:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n@@ -4277,16 +4441,25 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*lshiftrt_internal1le\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI\n \t (subreg:QI\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 0)))]\n-  \"includes_rshift_p (operands[2], GEN_INT (255))\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n   \"rlwinm %0,%1,%s2,0xff\")\n \n-(define_insn \"\"\n+(define_insn \"*lshiftrt_internal1be\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(zero_extend:SI\n+\t (subreg:QI\n+\t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 3)))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n+  \"rlwinm %0,%1,%s2,0xff\")\n+\n+(define_insn \"*lshiftrt_internal2le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (zero_extend:SI\n@@ -4295,7 +4468,23 @@\n \t\t\t(match_operand:SI 2 \"const_int_operand\" \"i,i\")) 0))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"includes_rshift_p (operands[2], GEN_INT (255))\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n+  \"@\n+   rlwinm. %3,%1,%s2,0xff\n+   #\"\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_insn \"*lshiftrt_internal2be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:QI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"i,i\")) 3))\n+\t (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n   \"@\n    rlwinm. %3,%1,%s2,0xff\n    #\"\n@@ -4311,7 +4500,7 @@\n \t\t\t(match_operand:SI 2 \"const_int_operand\" \"\")) 0))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"includes_rshift_p (operands[2], GEN_INT (255)) && reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255)) && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:SI (subreg:QI\n \t   (lshiftrt:SI (match_dup 1)\n@@ -4321,7 +4510,26 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:QI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"\")) 3))\n+\t (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"\"))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255)) && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:SI (subreg:QI\n+\t   (lshiftrt:SI (match_dup 1)\n+\t\t\t(match_dup 2)) 3)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*lshiftrt_internal3le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (zero_extend:SI\n@@ -4331,7 +4539,24 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"includes_rshift_p (operands[2], GEN_INT (255))\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n+  \"@\n+   rlwinm. %0,%1,%s2,0xff\n+   #\"\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_insn \"*lshiftrt_internal3be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:QI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"i,i\")) 3))\n+\t (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 3)))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255))\"\n   \"@\n    rlwinm. %0,%1,%s2,0xff\n    #\"\n@@ -4348,24 +4573,51 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"includes_rshift_p (operands[2], GEN_INT (255)) && reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255)) && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:QI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"\")) 3))\n+\t (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 3)))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (255)) && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:SI (subreg:QI (lshiftrt:SI (match_dup 1) (match_dup 2)) 3)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*lshiftrt_internal4le\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI\n \t (subreg:HI\n \t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n \t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 0)))]\n-  \"includes_rshift_p (operands[2], GEN_INT (65535))\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n   \"rlwinm %0,%1,%s2,0xffff\")\n \n-(define_insn \"\"\n+(define_insn \"*lshiftrt_internal4be\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(zero_extend:SI\n+\t (subreg:HI\n+\t  (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n+\t\t       (match_operand:SI 2 \"const_int_operand\" \"i\")) 2)))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n+  \"rlwinm %0,%1,%s2,0xffff\")\n+\n+(define_insn \"*lshiftrt_internal5le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (zero_extend:SI\n@@ -4374,7 +4626,23 @@\n \t\t\t(match_operand:SI 2 \"const_int_operand\" \"i,i\")) 0))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"includes_rshift_p (operands[2], GEN_INT (65535))\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n+  \"@\n+   rlwinm. %3,%1,%s2,0xffff\n+   #\"\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_insn \"*lshiftrt_internal5be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:HI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"i,i\")) 2))\n+\t (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"=r,r\"))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n   \"@\n    rlwinm. %3,%1,%s2,0xffff\n    #\"\n@@ -4390,7 +4658,7 @@\n \t\t\t(match_operand:SI 2 \"const_int_operand\" \"\")) 0))\n \t (const_int 0)))\n    (clobber (match_scratch:SI 3 \"\"))]\n-  \"includes_rshift_p (operands[2], GEN_INT (65535)) && reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535)) && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:SI (subreg:HI\n \t   (lshiftrt:SI (match_dup 1)\n@@ -4400,7 +4668,26 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:HI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"\")) 2))\n+\t (const_int 0)))\n+   (clobber (match_scratch:SI 3 \"\"))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535)) && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:SI (subreg:HI\n+\t   (lshiftrt:SI (match_dup 1)\n+\t\t\t(match_dup 2)) 2)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*lshiftrt_internal5le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n \t(compare:CC\n \t (zero_extend:SI\n@@ -4410,7 +4697,24 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"includes_rshift_p (operands[2], GEN_INT (65535))\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n+  \"@\n+   rlwinm. %0,%1,%s2,0xffff\n+   #\"\n+  [(set_attr \"type\" \"delayed_compare\")\n+   (set_attr \"length\" \"4,8\")])\n+\n+(define_insn \"*lshiftrt_internal5be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:HI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"i,i\")) 2))\n+\t (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 2)))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535))\"\n   \"@\n    rlwinm. %0,%1,%s2,0xffff\n    #\"\n@@ -4427,14 +4731,32 @@\n \t (const_int 0)))\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))]\n-  \"includes_rshift_p (operands[2], GEN_INT (65535)) && reload_completed\"\n+  \"!BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535)) && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC\n+\t (zero_extend:SI\n+\t  (subreg:HI\n+\t   (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t(match_operand:SI 2 \"const_int_operand\" \"\")) 2))\n+\t (const_int 0)))\n+   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 2)))]\n+  \"BYTES_BIG_ENDIAN && includes_rshift_p (operands[2], GEN_INT (65535)) && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:SI (subreg:HI (lshiftrt:SI (match_dup 1) (match_dup 2)) 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n (define_insn \"ashrsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(ashiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n@@ -6319,11 +6641,11 @@\n   [(set_attr \"type\" \"two,three\")\n    (set_attr \"length\" \"8,12\")])\n \n-(define_insn \"*ashrdisi3_noppc64\"\n+(define_insn \"*ashrdisi3_noppc64be\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n         (subreg:SI (ashiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n                                 (const_int 32)) 4))]\n-  \"TARGET_32BIT && !TARGET_POWERPC64\"\n+  \"TARGET_32BIT && !TARGET_POWERPC64 && WORDS_BIG_ENDIAN\"\n   \"*\n {\n   if (REGNO (operands[0]) == REGNO (operands[1]))\n@@ -6610,27 +6932,56 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotldi3_internal7\"\n+(define_insn \"*rotldi3_internal7le\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI\n \t (subreg:QI\n \t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n-  \"TARGET_POWERPC64\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl %0,%1,%2,56\n    rldicl %0,%1,%H2,56\"\n   [(set_attr \"type\" \"var_shift_rotate,integer\")])\n \n-(define_insn \"*rotldi3_internal8\"\n+(define_insn \"*rotldi3_internal7be\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:DI\n+\t (subreg:QI\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 7)))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl %0,%1,%2,56\n+   rldicl %0,%1,%H2,56\"\n+  [(set_attr \"type\" \"var_shift_rotate,integer\")])\n+\n+(define_insn \"*rotldi3_internal8le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:QI\n \t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl. %3,%1,%2,56\n+   rldicl. %3,%1,%H2,56\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotldi3_internal8be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:QI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 7))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+  \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl. %3,%1,%2,56\n    rldicl. %3,%1,%H2,56\n@@ -6647,7 +6998,7 @@\n \t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:DI (subreg:QI\n \t\t      (rotate:DI (match_dup 1)\n@@ -6657,7 +7008,25 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotldi3_internal9\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:QI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 7))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"\"))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:DI (subreg:QI\n+\t\t      (rotate:DI (match_dup 1)\n+\t\t\t\t (match_dup 2)) 7)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotldi3_internal9le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:QI\n@@ -6666,7 +7035,25 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl. %0,%1,%2,56\n+   rldicl. %0,%1,%H2,56\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotldi3_internal9be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:QI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 7))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 7)))]\n+  \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl. %0,%1,%2,56\n    rldicl. %0,%1,%H2,56\n@@ -6684,35 +7071,81 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotldi3_internal10\"\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:QI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 7))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 7)))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:DI (subreg:QI (rotate:DI (match_dup 1) (match_dup 2)) 7)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotldi3_internal10le\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI\n \t (subreg:HI\n \t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n-  \"TARGET_POWERPC64\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl %0,%1,%2,48\n+   rldicl %0,%1,%H2,48\"\n+  [(set_attr \"type\" \"var_shift_rotate,integer\")])\n+\n+(define_insn \"*rotldi3_internal10be\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:DI\n+\t (subreg:HI\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 6)))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl %0,%1,%2,48\n    rldicl %0,%1,%H2,48\"\n   [(set_attr \"type\" \"var_shift_rotate,integer\")])\n \n-(define_insn \"*rotldi3_internal11\"\n+(define_insn \"*rotldi3_internal11le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:HI\n \t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl. %3,%1,%2,48\n+   rldicl. %3,%1,%H2,48\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotldi3_internal11be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:HI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 6))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+  \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl. %3,%1,%2,48\n    rldicl. %3,%1,%H2,48\n@@ -6729,7 +7162,7 @@\n \t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:DI (subreg:HI\n \t\t      (rotate:DI (match_dup 1)\n@@ -6739,7 +7172,25 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotldi3_internal12\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:HI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 6))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"\"))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:DI (subreg:HI\n+\t\t      (rotate:DI (match_dup 1)\n+\t\t\t\t (match_dup 2)) 6)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotldi3_internal12le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:HI\n@@ -6748,7 +7199,25 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl. %0,%1,%2,48\n+   rldicl. %0,%1,%H2,48\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotldi3_internal12be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:HI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 6))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 6)))]\n+  \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl. %0,%1,%2,48\n    rldicl. %0,%1,%H2,48\n@@ -6766,35 +7235,81 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotldi3_internal13\"\n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:HI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 6))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 6)))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:DI (subreg:HI (rotate:DI (match_dup 1) (match_dup 2)) 6)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotldi3_internal13le\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(zero_extend:DI\n \t (subreg:SI\n \t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 0)))]\n-  \"TARGET_POWERPC64\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl %0,%1,%2,32\n+   rldicl %0,%1,%H2,32\"\n+  [(set_attr \"type\" \"var_shift_rotate,integer\")])\n+\n+(define_insn \"*rotldi3_internal13be\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(zero_extend:DI\n+\t (subreg:SI\n+\t  (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t     (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i\")) 4)))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl %0,%1,%2,32\n    rldicl %0,%1,%H2,32\"\n   [(set_attr \"type\" \"var_shift_rotate,integer\")])\n \n-(define_insn \"*rotldi3_internal14\"\n+(define_insn \"*rotldi3_internal14le\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:SI\n \t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n \t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl. %3,%1,%2,32\n+   rldicl. %3,%1,%H2,32\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotldi3_internal14be\"\n+  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:SI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 4))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n+  \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl. %3,%1,%2,32\n    rldicl. %3,%1,%H2,32\n@@ -6811,7 +7326,7 @@\n \t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 0))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 3)\n \t(zero_extend:DI (subreg:SI\n \t\t      (rotate:DI (match_dup 1)\n@@ -6821,7 +7336,25 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"*rotldi3_internal15\"\n+(define_split\n+  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:SI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 4))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 3 \"\"))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 3)\n+\t(zero_extend:DI (subreg:SI\n+\t\t      (rotate:DI (match_dup 1)\n+\t\t\t\t (match_dup 2)) 4)))\n+   (set (match_dup 0)\n+\t(compare:CC (match_dup 3)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n+(define_insn \"*rotldi3_internal15le\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n \t(compare:CC (zero_extend:DI\n \t\t     (subreg:SI\n@@ -6830,7 +7363,25 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n \t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n-  \"TARGET_64BIT\"\n+  \"TARGET_64BIT && !BYTES_BIG_ENDIAN\"\n+  \"@\n+   rldcl. %0,%1,%2,32\n+   rldicl. %0,%1,%H2,32\n+   #\n+   #\"\n+  [(set_attr \"type\" \"var_delayed_compare,delayed_compare,var_delayed_compare,delayed_compare\")\n+   (set_attr \"length\" \"4,4,8,8\")])\n+\n+(define_insn \"*rotldi3_internal15be\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:SI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"r,i,r,i\")) 4))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 4)))]\n+  \"TARGET_64BIT && BYTES_BIG_ENDIAN\"\n   \"@\n    rldcl. %0,%1,%2,32\n    rldicl. %0,%1,%H2,32\n@@ -6848,14 +7399,31 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 0)))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n+  \"TARGET_POWERPC64 && !BYTES_BIG_ENDIAN && reload_completed\"\n   [(set (match_dup 0)\n \t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 0)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n   \"\")\n \n+(define_split\n+  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n+\t(compare:CC (zero_extend:DI\n+\t\t     (subreg:SI\n+\t\t      (rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n+\t\t\t\t (match_operand:DI 2 \"reg_or_cint_operand\" \"\")) 4))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n+\t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 4)))]\n+  \"TARGET_POWERPC64 && BYTES_BIG_ENDIAN && reload_completed\"\n+  [(set (match_dup 0)\n+\t(zero_extend:DI (subreg:SI (rotate:DI (match_dup 1) (match_dup 2)) 4)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\")\n+\n (define_expand \"ashldi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(ashift:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")"}]}