{"sha": "78b4e425a6dfae3b2c315201d673773482d219eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhiNGU0MjVhNmRmYWUzYjJjMzE1MjAxZDY3Mzc3MzQ4MmQyMTllYg==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2013-03-27T08:16:54Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2013-03-27T08:16:54Z"}, "message": "re PR target/56102 (Wrong rtx cost calculated for Thumb1)\n\n\tPR target/56102\n\t* config/arm/arm.c (thumb1_rtx_costs, thumb1_size_rtx_costs): Fix\n\trtx costs for SET/ASHIFT/ASHIFTRT/LSHIFTRT/ROTATERT patterns with\n\tmult-word mode.\n\nFrom-SVN: r197155", "tree": {"sha": "a9591cc2f68fcf00d793fbc0ac851287144577c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9591cc2f68fcf00d793fbc0ac851287144577c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78b4e425a6dfae3b2c315201d673773482d219eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b4e425a6dfae3b2c315201d673773482d219eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b4e425a6dfae3b2c315201d673773482d219eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b4e425a6dfae3b2c315201d673773482d219eb/comments", "author": null, "committer": null, "parents": [{"sha": "a5ba7b9285d61308b3bf6ee8d72636806575c11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ba7b9285d61308b3bf6ee8d72636806575c11a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ba7b9285d61308b3bf6ee8d72636806575c11a"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "f8ae2ac497ed14ec951be93ba98af6e95cb35b7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b4e425a6dfae3b2c315201d673773482d219eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b4e425a6dfae3b2c315201d673773482d219eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78b4e425a6dfae3b2c315201d673773482d219eb", "patch": "@@ -1,3 +1,10 @@\n+2013-03-27  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR target/56102\n+\t* config/arm/arm.c (thumb1_rtx_costs, thumb1_size_rtx_costs): Fix\n+\trtx costs for SET/ASHIFT/ASHIFTRT/LSHIFTRT/ROTATERT patterns with\n+\tmult-word mode.\n+\n 2013-03-27  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.h (TARGET_FLT_EVAL_METHOD): Define."}, {"sha": "5f63a2e8712122a9cab8367aa257aa3e99729784", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b4e425a6dfae3b2c315201d673773482d219eb/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b4e425a6dfae3b2c315201d673773482d219eb/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=78b4e425a6dfae3b2c315201d673773482d219eb", "patch": "@@ -7116,14 +7116,16 @@ static inline int\n thumb1_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n {\n   enum machine_mode mode = GET_MODE (x);\n-  int total;\n+  int total, words;\n \n   switch (code)\n     {\n     case ASHIFT:\n     case ASHIFTRT:\n     case LSHIFTRT:\n     case ROTATERT:\n+      return (mode == SImode) ? COSTS_N_INSNS (1) : COSTS_N_INSNS (2);\n+\n     case PLUS:\n     case MINUS:\n     case COMPARE:\n@@ -7147,7 +7149,10 @@ thumb1_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n       return COSTS_N_INSNS (1) + 16;\n \n     case SET:\n-      return (COSTS_N_INSNS (1)\n+      /* A SET doesn't have a mode, so let's look at the SET_DEST to get\n+\t the mode.  */\n+      words = ARM_NUM_INTS (GET_MODE_SIZE (GET_MODE (SET_DEST (x))));\n+      return (COSTS_N_INSNS (words)\n \t      + 4 * ((MEM_P (SET_SRC (x)))\n \t\t     + MEM_P (SET_DEST (x))));\n \n@@ -7844,13 +7849,16 @@ static inline int\n thumb1_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n {\n   enum machine_mode mode = GET_MODE (x);\n+  int words;\n \n   switch (code)\n     {\n     case ASHIFT:\n     case ASHIFTRT:\n     case LSHIFTRT:\n     case ROTATERT:\n+      return (mode == SImode) ? COSTS_N_INSNS (1) : COSTS_N_INSNS (2);\n+\n     case PLUS:\n     case MINUS:\n     case COMPARE:\n@@ -7869,7 +7877,10 @@ thumb1_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n       return COSTS_N_INSNS (1);\n \n     case SET:\n-      return (COSTS_N_INSNS (1)\n+      /* A SET doesn't have a mode, so let's look at the SET_DEST to get\n+\t the mode.  */\n+      words = ARM_NUM_INTS (GET_MODE_SIZE (GET_MODE (SET_DEST (x))));\n+      return (COSTS_N_INSNS (words)\n               + 4 * ((MEM_P (SET_SRC (x)))\n                      + MEM_P (SET_DEST (x))));\n "}]}