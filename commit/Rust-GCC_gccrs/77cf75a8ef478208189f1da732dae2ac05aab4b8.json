{"sha": "77cf75a8ef478208189f1da732dae2ac05aab4b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdjZjc1YThlZjQ3ODIwODE4OWYxZGE3MzJkYWUyYWMwNWFhYjRiOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T23:59:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T23:59:24Z"}, "message": "(union tree_decl): New field MACHINE_ATTRIBUTES.\n\n(DECL_MACHINE_ATTRIBUTES): New macro.\n\nFrom-SVN: r9021", "tree": {"sha": "51468cbb368b96fa64bef88424059c9d5be01210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51468cbb368b96fa64bef88424059c9d5be01210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77cf75a8ef478208189f1da732dae2ac05aab4b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77cf75a8ef478208189f1da732dae2ac05aab4b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77cf75a8ef478208189f1da732dae2ac05aab4b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77cf75a8ef478208189f1da732dae2ac05aab4b8/comments", "author": null, "committer": null, "parents": [{"sha": "1a2927d261ab54c43786cf7470aa87146ff209ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2927d261ab54c43786cf7470aa87146ff209ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2927d261ab54c43786cf7470aa87146ff209ea"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "d2f07d071224a98b9d0987f05098e73bfb3f1dc6", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77cf75a8ef478208189f1da732dae2ac05aab4b8/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77cf75a8ef478208189f1da732dae2ac05aab4b8/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=77cf75a8ef478208189f1da732dae2ac05aab4b8", "patch": "@@ -771,6 +771,9 @@ struct tree_type\n     containing function, or else yields NULL_TREE if the given decl has \"file scope\".  */\n #define DECL_CONTEXT(NODE) ((NODE)->decl.context)\n #define DECL_FIELD_CONTEXT(NODE) ((NODE)->decl.context)\n+/* In a DECL this is the field where configuration dependent machine\n+   attributes are store */\n+#define DECL_MACHINE_ATTRIBUTES(NODE) ((NODE)->decl.machine_attributes)\n /* In a FIELD_DECL, this is the field position, counting in bits,\n    of the bit closest to the beginning of the structure.  */\n #define DECL_FIELD_BITPOS(NODE) ((NODE)->decl.arguments)\n@@ -1013,6 +1016,7 @@ struct tree_decl\n   union tree_node *abstract_origin;\n   union tree_node *assembler_name;\n   union tree_node *section_name;\n+  union tree_node *machine_attributes;\n   struct rtx_def *rtl;\t/* acts as link to register transfer language\n \t\t\t\t   (rtl) info */\n   /* For a FUNCTION_DECL, if inline, this is the size of frame needed.\n@@ -1214,6 +1218,7 @@ extern tree make_tree ();\n    are not made. */\n \n extern tree build_type_attribute_variant PROTO((tree, tree));\n+extern tree build_decl_attribute_variant PROTO((tree, tree));\n \n /* Given a type node TYPE, and CONSTP and VOLATILEP, return a type\n    for the same kind of data as TYPE describes."}]}