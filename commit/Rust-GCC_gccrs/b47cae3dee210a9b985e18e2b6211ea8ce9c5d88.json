{"sha": "b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ3Y2FlM2RlZTIxMGE5Yjk4NWUxOGUyYjYyMTFlYThjZTljNWQ4OA==", "commit": {"author": {"name": "Marek Michalkiewicz", "email": "marekm@amelek.gda.pl", "date": "2002-05-25T18:18:53Z"}, "committer": {"name": "Marek Michalkiewicz", "email": "marekm@gcc.gnu.org", "date": "2002-05-25T18:18:53Z"}, "message": "avr.c (avr_handle_progmem_attribute): Handle TYPE_DECL.\n\n\n\t* config/avr/avr.c (avr_handle_progmem_attribute): Handle TYPE_DECL.\n\n\t* config/avr/avr.h (BSS_SECTION_ASM_OP, ASM_OUTPUT_BSS): New.\n\nFrom-SVN: r53872", "tree": {"sha": "11831a1f21939e3fc7f9bd074d76d61202b9b5ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11831a1f21939e3fc7f9bd074d76d61202b9b5ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/comments", "author": null, "committer": null, "parents": [{"sha": "ce9e3a6d50ad5a4a3ed6631781d3cb40153957e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9e3a6d50ad5a4a3ed6631781d3cb40153957e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9e3a6d50ad5a4a3ed6631781d3cb40153957e2"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "8e2c29e69f817122c00f6e7bbefbe967fd39d4d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "patch": "@@ -1,3 +1,9 @@\n+2002-05-25  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n+\n+\t* config/avr/avr.c (avr_handle_progmem_attribute): Handle TYPE_DECL.\n+\n+\t* config/avr/avr.h (BSS_SECTION_ASM_OP, ASM_OUTPUT_BSS): New.\n+\n 2002-05-25  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* toplev.c (output_clean_symbol_name): Fix another thinko.  Gosh."}, {"sha": "b254c6ba0273ddd80dd0b112503c479f2ca058ae", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "patch": "@@ -4683,7 +4683,20 @@ avr_handle_progmem_attribute (node, name, args, flags, no_add_attrs)\n {\n   if (DECL_P (*node))\n     {\n-      if (TREE_STATIC (*node) || DECL_EXTERNAL (*node))\n+      if (TREE_CODE (*node) == TYPE_DECL)\n+\t{\n+\t  /* This is really a decl attribute, not a type attribute,\n+\t     but try to handle it for GCC 3.0 backwards compatibility.  */\n+\n+\t  tree type = TREE_TYPE (*node);\n+\t  tree attr = tree_cons (name, args, TYPE_ATTRIBUTES (type));\n+\t  tree newtype = build_type_attribute_variant (type, attr);\n+\n+\t  TYPE_MAIN_VARIANT (newtype) = TYPE_MAIN_VARIANT (type);\n+\t  TREE_TYPE (*node) = newtype;\n+\t  *no_add_attrs = true;\n+\t}\n+      else if (TREE_STATIC (*node) || DECL_EXTERNAL (*node))\n \t{\n \t  if (DECL_INITIAL (*node) == NULL_TREE && !DECL_EXTERNAL (*node))\n \t    {"}, {"sha": "77950a72e6ce5e181ec264f1982ed9bde203209f", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47cae3dee210a9b985e18e2b6211ea8ce9c5d88/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=b47cae3dee210a9b985e18e2b6211ea8ce9c5d88", "patch": "@@ -1698,6 +1698,15 @@ do {\t\t\t\t\t\t\t\t\t    \\\n    operation to identify the following data as writable initialized\n    data.  Normally `\"\\t.data\"' is right.  */\n \n+#define BSS_SECTION_ASM_OP \"\\t.section .bss\"\n+/* If defined, a C expression whose value is a string, including\n+   spacing, containing the assembler operation to identify the\n+   following data as uninitialized global data.  If not defined, and\n+   neither `ASM_OUTPUT_BSS' nor `ASM_OUTPUT_ALIGNED_BSS' are defined,\n+   uninitialized global data will be output in the data section if\n+   `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n+   used.  */\n+\n #define EXTRA_SECTIONS in_progmem\n /* A list of names for sections other than the standard two, which are\n    `in_text' and `in_data'.  You need not define this macro on a\n@@ -1842,6 +1851,13 @@ do {\t\t\t\t\t\t\t\t\t   \\\n    This macro controls how the assembler definitions of uninitialized\n    common global variables are output.  */\n \n+#define ASM_OUTPUT_BSS(FILE, DECL, NAME, SIZE, ROUNDED)\t\t\t\\\n+  asm_output_bss ((FILE), (DECL), (NAME), (SIZE), (ROUNDED))\n+/* A C statement (sans semicolon) to output to the stdio stream\n+   STREAM the assembler definition of uninitialized global DECL named\n+   NAME whose size is SIZE bytes.  The variable ROUNDED is the size\n+   rounded up to whatever alignment the caller wants.  */\n+\n #define ASM_OUTPUT_LOCAL(STREAM, NAME, SIZE, ROUNDED)\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n      fputs (\"\\t.lcomm \", (STREAM));\t\t\t\t\t\\"}]}