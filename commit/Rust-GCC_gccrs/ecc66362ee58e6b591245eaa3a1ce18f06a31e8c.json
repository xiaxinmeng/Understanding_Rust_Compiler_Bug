{"sha": "ecc66362ee58e6b591245eaa3a1ce18f06a31e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNjNjYzNjJlZTU4ZTZiNTkxMjQ1ZWFhM2ExY2UxOGYwNmEzMWU4Yw==", "commit": {"author": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2020-04-10T15:24:28Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2020-04-10T15:24:28Z"}, "message": "Fix UNRESOLVED testcase gfortran.dg/asynchronous_5.f03.\n\ngcc/testsuite/ChangeLog:\n\n2020-04-10  Fritz Reese  <foreese@gcc.gnu.org>\n\n\t* gfortran.dg/asynchronous_5.f03: Add -fdump-tree-original and fix\n\tpatterns for scan-tree-dump.", "tree": {"sha": "68ea4cd50043c518e46482c18f44395748b90fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68ea4cd50043c518e46482c18f44395748b90fa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c/comments", "author": null, "committer": null, "parents": [{"sha": "be9862dd96945772ae0692bc95b37ec6dbcabda0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be9862dd96945772ae0692bc95b37ec6dbcabda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be9862dd96945772ae0692bc95b37ec6dbcabda0"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "833c559f2f5a805e2b00d807c8eb23bb0ed3493d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecc66362ee58e6b591245eaa3a1ce18f06a31e8c", "patch": "@@ -1,3 +1,8 @@\n+2020-04-10  Fritz Reese  <foreese@gcc.gnu.org>\n+\n+\t* gfortran.dg/asynchronous_5.f03: Add -fdump-tree-original and fix\n+\tpatterns for scan-tree-dump.\n+\n 2020-04-10  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR middle-end/89433"}, {"sha": "6a0ee2437a26ae1d3be46a4d57e8938123d1c910", "filename": "gcc/testsuite/gfortran.dg/asynchronous_5.f03", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fasynchronous_5.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc66362ee58e6b591245eaa3a1ce18f06a31e8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fasynchronous_5.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fasynchronous_5.f03?ref=ecc66362ee58e6b591245eaa3a1ce18f06a31e8c", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-std=f2003\" }\n+! { dg-options \"-std=f2003 -fdump-tree-original\" }\n !\n ! Covers code introduced by the fix to PR fortran/87923.\n ! The idea is that the variables in a namelist or I/O list used for\n@@ -14,30 +14,26 @@\n   character(4) :: comp_async\n end type\n \n-character(2) :: ccvar_async\n type(t) :: dvar_async\n integer :: ivar_async\n real :: rvar_async\n logical :: lvar_async\n-type(t), dimension(2) :: darrvar_async\n integer :: ivar_noasync\n \n namelist /names/ ivar_async, rvar_async, lvar_async\n \n open(1, asynchronous=\"yes\")\n write(1, asynchronous=\"yes\") dvar_async, ccvar_async\n-write(1, asynchronous=\"yes\") dvar_async%comp_async, darrvar_async\n+write(1, asynchronous=\"yes\") dvar_async%comp_async\n read(1, asynchronous=\"yes\", nml=names)\n \n open(2, asynchronous=\"no\")\n read(2, asynchronous=\"no\") ivar_noasync\n \n end\n \n-! { dg-final { scan-tree-dump-times \"volatile.*?ccvar_async\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"volatile.*?dvar_async\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"volatile.*?ivar_async\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"volatile.*?rvar_async\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"volatile.*?lvar_async\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-times \"volatile.*?darrvar_async\" 1 \"original\" } }\n-! { dg-final { scan-tree-dump-not \"volatile.*?ivar_noasync\" \"original\" } }\n+! { dg-final { scan-tree-dump \"volatile +struct +\\[^ \\]+ +dvar_async\" \"original\" } }\n+! { dg-final { scan-tree-dump \"volatile +\\[^ \\]+ +ivar_async\" \"original\" } }\n+! { dg-final { scan-tree-dump \"volatile +\\[^ \\]+ +rvar_async\" \"original\" } }\n+! { dg-final { scan-tree-dump \"volatile +\\[^ \\]+ +lvar_async\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"volatile +\\[^ \\]+ +ivar_noasync\" \"original\" } }"}]}