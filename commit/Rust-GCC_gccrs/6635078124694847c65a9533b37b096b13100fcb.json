{"sha": "6635078124694847c65a9533b37b096b13100fcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYzNTA3ODEyNDY5NDg0N2M2NWE5NTMzYjM3YjA5NmIxMzEwMGZjYg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2009-07-06T17:07:32Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2009-07-06T17:07:32Z"}, "message": "tree-dfa.c (dump_variable): Write DECL_INITIAL for VAR if it has one.\n\n\n\t* tree-dfa.c (dump_variable): Write DECL_INITIAL for VAR\n\tif it has one.  Handle cases where VAR does not have an\n\tannotation or cfun is NULL.\n\nFrom-SVN: r149291", "tree": {"sha": "3fd08a19ff017856522a9200af499b2eb6d0f0d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fd08a19ff017856522a9200af499b2eb6d0f0d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6635078124694847c65a9533b37b096b13100fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6635078124694847c65a9533b37b096b13100fcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6635078124694847c65a9533b37b096b13100fcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6635078124694847c65a9533b37b096b13100fcb/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d251bfca1967ec494827ba26f009f7623eea2975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d251bfca1967ec494827ba26f009f7623eea2975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d251bfca1967ec494827ba26f009f7623eea2975"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "a2f30063c2c2858dcd0b8b17337ae01734ce59b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6635078124694847c65a9533b37b096b13100fcb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6635078124694847c65a9533b37b096b13100fcb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6635078124694847c65a9533b37b096b13100fcb", "patch": "@@ -1,3 +1,9 @@\n+2009-07-06  Diego Novillo  <dnovillo@google.com>\n+\n+\t* tree-dfa.c (dump_variable): Write DECL_INITIAL for VAR\n+\tif it has one.  Handle cases where VAR does not have an\n+\tannotation or cfun is NULL.\n+\n 2009-07-06  Diego Novillo  <dnovillo@google.com>\n \n \t* tree.c: Include debug.h."}, {"sha": "64c5e266cd8c853001a82f8bb66b267fd6e8885b", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6635078124694847c65a9533b37b096b13100fcb/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6635078124694847c65a9533b37b096b13100fcb/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=6635078124694847c65a9533b37b096b13100fcb", "patch": "@@ -275,20 +275,26 @@ dump_variable (FILE *file, tree var)\n   else if (is_call_used (var))\n     fprintf (file, \", call used\");\n \n-  if (ann->noalias_state == NO_ALIAS)\n+  if (ann && ann->noalias_state == NO_ALIAS)\n     fprintf (file, \", NO_ALIAS (does not alias other NO_ALIAS symbols)\");\n-  else if (ann->noalias_state == NO_ALIAS_GLOBAL)\n+  else if (ann && ann->noalias_state == NO_ALIAS_GLOBAL)\n     fprintf (file, \", NO_ALIAS_GLOBAL (does not alias other NO_ALIAS symbols\"\n \t           \" and global vars)\");\n-  else if (ann->noalias_state == NO_ALIAS_ANYTHING)\n+  else if (ann && ann->noalias_state == NO_ALIAS_ANYTHING)\n     fprintf (file, \", NO_ALIAS_ANYTHING (does not alias any other symbols)\");\n \n-  if (gimple_default_def (cfun, var))\n+  if (cfun && gimple_default_def (cfun, var))\n     {\n       fprintf (file, \", default def: \");\n       print_generic_expr (file, gimple_default_def (cfun, var), dump_flags);\n     }\n \n+  if (DECL_INITIAL (var))\n+    {\n+      fprintf (file, \", initial: \");\n+      print_generic_expr (file, DECL_INITIAL (var), dump_flags);\n+    }\n+\n   fprintf (file, \"\\n\");\n }\n "}]}