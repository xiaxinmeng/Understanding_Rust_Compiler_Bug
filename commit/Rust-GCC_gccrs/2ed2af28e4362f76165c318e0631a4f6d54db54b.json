{"sha": "2ed2af28e4362f76165c318e0631a4f6d54db54b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVkMmFmMjhlNDM2MmY3NjE2NWMzMThlMDYzMWE0ZjZkNTRkYjU0Yg==", "commit": {"author": {"name": "Philippe De Muyter", "email": "phdm@macqel.be", "date": "1997-11-19T19:53:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-19T19:53:32Z"}, "message": "dwarf2out.c (CIE_LENGTH_LABEL, [...]): New macros.\n\nWed Nov 19 12:03:04 1997  Philippe De Muyter  <phdm@macqel.be>\n\n\t* dwarf2out.c (CIE_LENGTH_LABEL, FDE_LENGTH_LABEL): New macros.\n\t(ASM_OUTPUT_DWARF_VALUE4): New macro.\n\t(ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL): Define if SET_ASM_OP is\n\tdefined.\n\t(output_call_frame_info): Do not output forward label differences\n\tif ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL is defined.\n\t* m68k/mot3300.h (SET_ASM_OP): Define when not using gas.\n\nFrom-SVN: r16584", "tree": {"sha": "a3d67ca71d893ba440305bd9c5793c834ba7adea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3d67ca71d893ba440305bd9c5793c834ba7adea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ed2af28e4362f76165c318e0631a4f6d54db54b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed2af28e4362f76165c318e0631a4f6d54db54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ed2af28e4362f76165c318e0631a4f6d54db54b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed2af28e4362f76165c318e0631a4f6d54db54b/comments", "author": {"login": "phdm", "id": 2923420, "node_id": "MDQ6VXNlcjI5MjM0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2923420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phdm", "html_url": "https://github.com/phdm", "followers_url": "https://api.github.com/users/phdm/followers", "following_url": "https://api.github.com/users/phdm/following{/other_user}", "gists_url": "https://api.github.com/users/phdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/phdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phdm/subscriptions", "organizations_url": "https://api.github.com/users/phdm/orgs", "repos_url": "https://api.github.com/users/phdm/repos", "events_url": "https://api.github.com/users/phdm/events{/privacy}", "received_events_url": "https://api.github.com/users/phdm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f422e9a0f624354c3f3343bf74586fcd5b68c252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f422e9a0f624354c3f3343bf74586fcd5b68c252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f422e9a0f624354c3f3343bf74586fcd5b68c252"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "8e3e9d6ecfc2e002357c4f939650cf428ec4f14f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ed2af28e4362f76165c318e0631a4f6d54db54b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ed2af28e4362f76165c318e0631a4f6d54db54b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ed2af28e4362f76165c318e0631a4f6d54db54b", "patch": "@@ -1,3 +1,13 @@\n+Wed Nov 19 12:03:04 1997  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* dwarf2out.c (CIE_LENGTH_LABEL, FDE_LENGTH_LABEL): New macros.\n+\t(ASM_OUTPUT_DWARF_VALUE4): New macro.\n+\t(ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL): Define if SET_ASM_OP is\n+\tdefined.\n+\t(output_call_frame_info): Do not output forward label differences\n+\tif ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL is defined.\n+\t* m68k/mot3300.h (SET_ASM_OP): Define when not using gas.\n+\n Tue Nov 18 23:03:30 1997  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* sh.md (attribute \"type\"): Add nil."}, {"sha": "f7d35847b2624e50004a69d4f1b91e9ef783dc5d", "filename": "gcc/config/m68k/mot3300.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ed2af28e4362f76165c318e0631a4f6d54db54b/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ed2af28e4362f76165c318e0631a4f6d54db54b/gcc%2Fconfig%2Fm68k%2Fmot3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmot3300.h?ref=2ed2af28e4362f76165c318e0631a4f6d54db54b", "patch": "@@ -184,6 +184,9 @@ Boston, MA 02111-1307, USA.  */\n #undef ASCII_DATA_ASM_OP\n #define\tASCII_DATA_ASM_OP \"byte\"\n \n+#undef SET_ASM_OP\n+#define SET_ASM_OP \"set\"\n+\n #endif /* USE_GAS */\n \n #ifdef USE_GLD"}, {"sha": "1df25ce7209c3a52f0f673365b0e7ef14c2b4c92", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ed2af28e4362f76165c318e0631a4f6d54db54b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ed2af28e4362f76165c318e0631a4f6d54db54b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2ed2af28e4362f76165c318e0631a4f6d54db54b", "patch": "@@ -247,8 +247,10 @@ static unsigned reg_number\t\tPROTO((rtx));\n #endif\n #define CIE_AFTER_SIZE_LABEL\t\"LSCIE\"\n #define CIE_END_LABEL\t\t\"LECIE\"\n+#define CIE_LENGTH_LABEL\t\"LLCIE\"\n #define FDE_AFTER_SIZE_LABEL\t\"LSFDE\"\n #define FDE_END_LABEL\t\t\"LEFDE\"\n+#define FDE_LENGTH_LABEL\t\"LLFDE\"\n \n /* Definitions of defaults for various types of primitive assembly language\n    output operations.  These may be overridden from within the tm.h file,\n@@ -369,6 +371,11 @@ static unsigned reg_number\t\tPROTO((rtx));\n   } while (0)\n #endif\n \n+#ifndef ASM_OUTPUT_DWARF_VALUE4\n+#define ASM_OUTPUT_DWARF_VALUE4(FILE,LABEL) \\\n+  fprintf ((FILE), \"\\t%s\\t%s\", UNALIGNED_INT_ASM_OP, LABEL)\n+#endif\n+\n #else /* UNALIGNED_INT_ASM_OP */\n \n /* We don't have unaligned support, let's hope the normal output works for\n@@ -404,10 +411,20 @@ static unsigned reg_number\t\tPROTO((rtx));\n #define ASM_OUTPUT_DWARF_DATA4(FILE,VALUE) \\\n   assemble_integer (GEN_INT (VALUE), 4, 1)\n \n+#define ASM_OUTPUT_DWARF_VALUE4(FILE,LABEL) \\\n+  assemble_integer (gen_rtx (SYMBOL_REF, Pmode, LABEL), 4, 1)\n+\n #endif /* UNALIGNED_INT_ASM_OP */\n \n+#ifdef SET_ASM_OP\n+#ifndef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+#define ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL(FILE, SY, HI, LO)\t\\\n+   fprintf (FILE, \"\\t%s\\t%s,%s-%s\\n\", SET_ASM_OP, SY, HI, LO)\n+#endif\n+#endif /* SET_ASM_OP */\n+\n /* This is similar to the default ASM_OUTPUT_ASCII, except that no trailing\n-   newline is produced.  When flag_debug_asm is asserted, we add commnetary\n+   newline is produced.  When flag_debug_asm is asserted, we add commentary\n    at the end of the line, so we must avoid output of a newline here.  */\n #ifndef ASM_OUTPUT_DWARF_STRING\n #define ASM_OUTPUT_DWARF_STRING(FILE,P) \\\n@@ -1514,6 +1531,9 @@ output_call_frame_info (for_eh)\n   register dw_cfi_ref cfi;\n   unsigned long fde_pad;\n   char l1[20], l2[20];\n+#ifdef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+  char ld[20];\n+#endif\n \n   /* Do we want to include a pointer to the exception table?  */\n   int eh_ptr = for_eh && exception_table_p ();\n@@ -1543,10 +1563,18 @@ output_call_frame_info (for_eh)\n   /* Output the CIE. */\n   ASM_GENERATE_INTERNAL_LABEL (l1, CIE_AFTER_SIZE_LABEL, for_eh);\n   ASM_GENERATE_INTERNAL_LABEL (l2, CIE_END_LABEL, for_eh);\n+#ifdef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+  ASM_GENERATE_INTERNAL_LABEL (ld, CIE_LENGTH_LABEL, for_eh);\n+  if (for_eh)\n+    ASM_OUTPUT_DWARF_VALUE4 (asm_out_file, ld);\n+  else\n+    ASM_OUTPUT_DWARF_OFFSET (asm_out_file, ld);\n+#else\n   if (for_eh)\n     ASM_OUTPUT_DWARF_DELTA4 (asm_out_file, l2, l1);\n   else\n     ASM_OUTPUT_DWARF_DELTA (asm_out_file, l2, l1);\n+#endif\n   if (flag_debug_asm)\n     fprintf (asm_out_file, \"\\t%s Length of Common Information Entry\",\n \t     ASM_COMMENT_START);\n@@ -1629,6 +1657,9 @@ output_call_frame_info (for_eh)\n   /* Pad the CIE out to an address sized boundary.  */\n   ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (PTR_SIZE));\n   ASM_OUTPUT_LABEL (asm_out_file, l2);\n+#ifdef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+  ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL (asm_out_file, ld, l2, l1);\n+#endif\n \n   /* Loop through all of the FDE's.  */\n   for (i = 0; i < fde_table_in_use; ++i)\n@@ -1637,10 +1668,18 @@ output_call_frame_info (for_eh)\n \n       ASM_GENERATE_INTERNAL_LABEL (l1, FDE_AFTER_SIZE_LABEL, for_eh + i*2);\n       ASM_GENERATE_INTERNAL_LABEL (l2, FDE_END_LABEL, for_eh + i*2);\n+#ifdef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+      ASM_GENERATE_INTERNAL_LABEL (ld, FDE_LENGTH_LABEL, for_eh + i*2);\n+      if (for_eh)\n+\tASM_OUTPUT_DWARF_VALUE4 (asm_out_file, ld);\n+      else\n+\tASM_OUTPUT_DWARF_OFFSET (asm_out_file, ld);\n+#else\n       if (for_eh)\n \tASM_OUTPUT_DWARF_DELTA4 (asm_out_file, l2, l1);\n       else\n \tASM_OUTPUT_DWARF_DELTA (asm_out_file, l2, l1);\n+#endif\n       if (flag_debug_asm)\n \tfprintf (asm_out_file, \"\\t%s FDE Length\", ASM_COMMENT_START);\n       fputc ('\\n', asm_out_file);\n@@ -1675,6 +1714,9 @@ output_call_frame_info (for_eh)\n       /* Pad the FDE out to an address sized boundary.  */\n       ASM_OUTPUT_ALIGN (asm_out_file, floor_log2 (PTR_SIZE));\n       ASM_OUTPUT_LABEL (asm_out_file, l2);\n+#ifdef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+      ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL (asm_out_file, ld, l2, l1);\n+#endif\n     }\n #ifndef EH_FRAME_SECTION\n   if (for_eh)"}]}