{"sha": "247791f5d179ac6fd5a437a1acd342af7f8c1640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3NzkxZjVkMTc5YWM2ZmQ1YTQzN2ExYWNkMzQyYWY3ZjhjMTY0MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-04-25T15:45:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-04-25T15:45:13Z"}, "message": "PR libstdc++/15002 (continued again)\n\n2004-04-25  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/15002 (continued again)\n\t* include/bits/istream.tcc (getline(basic_istream<>&,\n\tbasic_string<>&, _CharT)): Use a temporary buffer, thus\n\tavoiding reallocation for common case.\n\n\t* include/bits/basic_string.tcc (_S_construct(_InIterator,\n\t_InIterator, const _Alloc&, input_iterator_tag)): Tweak size\n\tof temporary buffer to a power of two.\n\n\t* testsuite/27_io/basic_istream/getline/char/4.cc: Add comment.\n\nFrom-SVN: r81163", "tree": {"sha": "d5b3c279153b532f4dde8653e2d3be4b297e66e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5b3c279153b532f4dde8653e2d3be4b297e66e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247791f5d179ac6fd5a437a1acd342af7f8c1640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247791f5d179ac6fd5a437a1acd342af7f8c1640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247791f5d179ac6fd5a437a1acd342af7f8c1640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247791f5d179ac6fd5a437a1acd342af7f8c1640/comments", "author": null, "committer": null, "parents": [{"sha": "c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "df302fa9524a811019925f1e36d8d64cfd4dd839", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=247791f5d179ac6fd5a437a1acd342af7f8c1640", "patch": "@@ -1,3 +1,16 @@\n+2004-04-25  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/15002 (continued again)\n+\t* include/bits/istream.tcc (getline(basic_istream<>&,\n+\tbasic_string<>&, _CharT)): Use a temporary buffer, thus\n+\tavoiding reallocation for common case.\n+\n+\t* include/bits/basic_string.tcc (_S_construct(_InIterator,\n+\t_InIterator, const _Alloc&, input_iterator_tag)): Tweak size\n+\tof temporary buffer to a power of two.\n+\n+\t* testsuite/27_io/basic_istream/getline/char/4.cc: Add comment.\n+\n 2004-04-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/21_strings/basic_string/inserters_extractors/char/10.cc:"}, {"sha": "7034778e9dff1c5db9988cd14bb161ad5696fd00", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=247791f5d179ac6fd5a437a1acd342af7f8c1640", "patch": "@@ -91,7 +91,7 @@ namespace std\n \tif (__beg == __end && __a == _Alloc())\n \t  return _S_empty_rep()._M_refdata();\n \t// Avoid reallocation for common case.\n-\t_CharT __buf[100];\n+\t_CharT __buf[128];\n \tsize_type __len = 0;\n \twhile (__beg != __end && __len < sizeof(__buf) / sizeof(_CharT))\n \t  {"}, {"sha": "ddd0c03fbd658c55591a4a28cb8b87827f87ab4c", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=247791f5d179ac6fd5a437a1acd342af7f8c1640", "patch": "@@ -1102,7 +1102,10 @@ namespace std\n \t{\n \t  try\n \t    {\n+\t      // Avoid reallocation for common case.\t      \n \t      __str.erase();\n+\t      _CharT __buf[128];\n+\t      __size_type __len = 0;\n \t      const __int_type __idelim = _Traits::to_int_type(__delim);\n \t      const __int_type __eof = _Traits::eof();\n \t      __streambuf_type* __sb = __in.rdbuf();\n@@ -1112,10 +1115,17 @@ namespace std\n \t\t     && !_Traits::eq_int_type(__c, __eof)\n \t\t     && !_Traits::eq_int_type(__c, __idelim))\n \t\t{\n-\t\t  __str += _Traits::to_char_type(__c);\n-\t\t  __c = __sb->snextc();\n+\t\t  if (__len == sizeof(__buf) / sizeof(_CharT))\n+\t\t    {\n+\t\t      __str.append(__buf, sizeof(__buf) / sizeof(_CharT));\n+\t\t      __len = 0;\n+\t\t    }\n+\t\t  __buf[__len++] = _Traits::to_char_type(__c);\n \t\t  ++__extracted;\n+\t\t  __c = __sb->snextc();\n \t\t}\n+\t      __str.append(__buf, __len);\n+\n \t      if (_Traits::eq_int_type(__c, __eof))\n \t\t__err |= ios_base::eofbit;\n \t      else if (_Traits::eq_int_type(__c, __idelim))"}, {"sha": "2734c60fd2ed108bba53433284b06909ef87f3a5", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/getline/char/4.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fgetline%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247791f5d179ac6fd5a437a1acd342af7f8c1640/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fgetline%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fgetline%2Fchar%2F4.cc?ref=247791f5d179ac6fd5a437a1acd342af7f8c1640", "patch": "@@ -25,6 +25,8 @@\n // invalidate any other reasons why the executable file might be covered by\n // the GNU General Public License.\n \n+// 27.6.1.3 unformatted input functions\n+\n #include <cstring> // for strlen\n #include <istream>\n #include <testsuite_hooks.h>"}]}