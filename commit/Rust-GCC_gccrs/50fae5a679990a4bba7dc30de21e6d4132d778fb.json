{"sha": "50fae5a679990a4bba7dc30de21e6d4132d778fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBmYWU1YTY3OTk5MGE0YmJhN2RjMzBkZTIxZTZkNDEzMmQ3NzhmYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-05T19:37:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-11-05T19:37:51Z"}, "message": "re PR rtl-optimization/58997 (ICE on valid code at -O3 on x86_64-linux-gnu (affecting gcc trunk and 4.8.2))\n\n\tPR rtl-optimization/58997\n\t* loop-iv.c (iv_subreg): For IV_UNKNOWN_EXTEND, expect\n\tget_iv_value to be in iv->mode rather than iv->extend_mode.\n\t(iv_extend): Likewise.  Otherwise, if iv->extend != extend,\n\tuse lowpart_subreg on get_iv_value before calling simplify_gen_unary.\n\t* loop-unswitch.c (may_unswitch_on): Make sure op[i] is in the right\n\tmode.\n\n\t* gcc.c-torture/compile/pr58997.c: New test.\n\nFrom-SVN: r204413", "tree": {"sha": "e79a1de24f6746538c44940eded0a9ed35e3a3b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e79a1de24f6746538c44940eded0a9ed35e3a3b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50fae5a679990a4bba7dc30de21e6d4132d778fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50fae5a679990a4bba7dc30de21e6d4132d778fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50fae5a679990a4bba7dc30de21e6d4132d778fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50fae5a679990a4bba7dc30de21e6d4132d778fb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a0603f1899262a11e21aba32da9a94d6f1129c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a0603f1899262a11e21aba32da9a94d6f1129c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a0603f1899262a11e21aba32da9a94d6f1129c3"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "72f93f9d07ed45761188b6366fccfe8185682e15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50fae5a679990a4bba7dc30de21e6d4132d778fb", "patch": "@@ -1,3 +1,13 @@\n+2013-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/58997\n+\t* loop-iv.c (iv_subreg): For IV_UNKNOWN_EXTEND, expect\n+\tget_iv_value to be in iv->mode rather than iv->extend_mode.\n+\t(iv_extend): Likewise.  Otherwise, if iv->extend != extend,\n+\tuse lowpart_subreg on get_iv_value before calling simplify_gen_unary.\n+\t* loop-unswitch.c (may_unswitch_on): Make sure op[i] is in the right\n+\tmode.\n+\n 2013-11-05  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gimple.h: Move some prototypes to gimple-expr.h and add to include"}, {"sha": "97aa52fc6dd69b8bf9db85b6331647c9389bdf4f", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=50fae5a679990a4bba7dc30de21e6d4132d778fb", "patch": "@@ -436,7 +436,9 @@ iv_subreg (struct rtx_iv *iv, enum machine_mode mode)\n       && !iv->first_special)\n     {\n       rtx val = get_iv_value (iv, const0_rtx);\n-      val = lowpart_subreg (mode, val, iv->extend_mode);\n+      val = lowpart_subreg (mode, val,\n+\t\t\t    iv->extend == IV_UNKNOWN_EXTEND\n+\t\t\t    ? iv->mode : iv->extend_mode);\n \n       iv->base = val;\n       iv->extend = IV_UNKNOWN_EXTEND;\n@@ -476,8 +478,14 @@ iv_extend (struct rtx_iv *iv, enum iv_extend_code extend, enum machine_mode mode\n       && !iv->first_special)\n     {\n       rtx val = get_iv_value (iv, const0_rtx);\n+      if (iv->extend_mode != iv->mode\n+\t  && iv->extend != IV_UNKNOWN_EXTEND\n+\t  && iv->extend != extend)\n+\tval = lowpart_subreg (iv->mode, val, iv->extend_mode);\n       val = simplify_gen_unary (iv_extend_to_rtx_code (extend), mode,\n-\t\t\t\tval, iv->extend_mode);\n+\t\t\t\tval,\n+\t\t\t\tiv->extend == extend\n+\t\t\t\t? iv->extend_mode : iv->mode);\n       iv->base = val;\n       iv->extend = IV_UNKNOWN_EXTEND;\n       iv->mode = iv->extend_mode = mode;"}, {"sha": "219c943545b11e4f478a3b3c2569ff5599027c56", "filename": "gcc/loop-unswitch.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Floop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Floop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unswitch.c?ref=50fae5a679990a4bba7dc30de21e6d4132d778fb", "patch": "@@ -191,6 +191,7 @@ may_unswitch_on (basic_block bb, struct loop *loop, rtx *cinsn)\n   if (!test)\n     return NULL_RTX;\n \n+  mode = VOIDmode;\n   for (i = 0; i < 2; i++)\n     {\n       op[i] = XEXP (test, i);\n@@ -205,11 +206,15 @@ may_unswitch_on (basic_block bb, struct loop *loop, rtx *cinsn)\n \treturn NULL_RTX;\n \n       op[i] = get_iv_value (&iv, const0_rtx);\n+      if (iv.extend != IV_UNKNOWN_EXTEND\n+\t  && iv.mode != iv.extend_mode)\n+\top[i] = lowpart_subreg (iv.mode, op[i], iv.extend_mode);\n+      if (mode == VOIDmode)\n+\tmode = iv.mode;\n+      else\n+\tgcc_assert (mode == iv.mode);\n     }\n \n-  mode = GET_MODE (op[0]);\n-  if (mode == VOIDmode)\n-    mode = GET_MODE (op[1]);\n   if (GET_MODE_CLASS (mode) == MODE_CC)\n     {\n       if (at != BB_END (bb))"}, {"sha": "f49141a381cd8cb93ae9b7b49a34cddeb73dfc5e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50fae5a679990a4bba7dc30de21e6d4132d778fb", "patch": "@@ -1,3 +1,8 @@\n+2013-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/58997\n+\t* gcc.c-torture/compile/pr58997.c: New test.\n+\n 2013-11-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58724"}, {"sha": "2c7a0f82c8aac3780768dae5b9076779c91455ba", "filename": "gcc/testsuite/gcc.c-torture/compile/pr58997.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58997.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50fae5a679990a4bba7dc30de21e6d4132d778fb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58997.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr58997.c?ref=50fae5a679990a4bba7dc30de21e6d4132d778fb", "patch": "@@ -0,0 +1,19 @@\n+/* PR rtl-optimization/58997 */\n+\n+int a, b, c, e;\n+short d;\n+char h;\n+\n+void\n+foo ()\n+{\n+  while (b)\n+    {\n+      d = a ? c : 1 % a;\n+      c = d;\n+      h = d;\n+      if (!h)\n+\twhile (e)\n+\t  ;\n+    }\n+}"}]}