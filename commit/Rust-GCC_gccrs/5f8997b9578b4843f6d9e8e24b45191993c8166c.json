{"sha": "5f8997b9578b4843f6d9e8e24b45191993c8166c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4OTk3Yjk1NzhiNDg0M2Y2ZDllOGUyNGI0NTE5MTk5M2M4MTY2Yw==", "commit": {"author": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1994-12-09T23:52:37Z"}, "committer": {"name": "Steve Chamberlain", "email": "sac@gnu.org", "date": "1994-12-09T23:52:37Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r8640", "tree": {"sha": "eefdf22241ab47e7dd5c66de5ff675930601c2cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eefdf22241ab47e7dd5c66de5ff675930601c2cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8997b9578b4843f6d9e8e24b45191993c8166c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8997b9578b4843f6d9e8e24b45191993c8166c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8997b9578b4843f6d9e8e24b45191993c8166c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8997b9578b4843f6d9e8e24b45191993c8166c/comments", "author": null, "committer": null, "parents": [{"sha": "81cdf78761508bd7899d3b79bf0957d685b9b065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81cdf78761508bd7899d3b79bf0957d685b9b065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81cdf78761508bd7899d3b79bf0957d685b9b065"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "02eb05c6f5a62485dfbe8cbf6f98700e749b0f1f", "filename": "gcc/reload.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8997b9578b4843f6d9e8e24b45191993c8166c/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8997b9578b4843f6d9e8e24b45191993c8166c/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=5f8997b9578b4843f6d9e8e24b45191993c8166c", "patch": "@@ -4535,15 +4535,17 @@ find_reloads_address_1 (x, context, loc, opnum, type, ind_levels)\n \t    code1 = GET_CODE (op1);\n \t  }\n \n-\tif (code0 == MULT || code0 == SIGN_EXTEND || code1 == MEM)\n+\tif (code0 == MULT || code0 == SIGN_EXTEND || code0 == TRUNCATE \n+\t    || code0 == ZERO_EXTEND || code1 == MEM)\n \t  {\n \t    find_reloads_address_1 (orig_op0, 1, &XEXP (x, 0), opnum, type,\n \t\t\t\t    ind_levels);\n \t    find_reloads_address_1 (orig_op1, 0, &XEXP (x, 1), opnum, type,\n \t\t\t\t    ind_levels);\n \t  }\n \n-\telse if (code1 == MULT || code1 == SIGN_EXTEND || code0 == MEM)\n+\telse if (code1 == MULT || code1 == SIGN_EXTEND || code1 == TRUNCATE\n+\t\t || code1 == ZERO_EXTEND || code0 == MEM)\n \t  {\n \t    find_reloads_address_1 (orig_op0, 0, &XEXP (x, 0), opnum, type,\n \t\t\t\t    ind_levels);"}]}