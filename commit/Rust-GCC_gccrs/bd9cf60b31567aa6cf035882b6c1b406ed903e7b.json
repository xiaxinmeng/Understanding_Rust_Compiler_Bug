{"sha": "bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ5Y2Y2MGIzMTU2N2FhNmNmMDM1ODgyYjZjMWI0MDZlZDkwM2U3Yg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-01-19T23:31:20Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-01-19T23:31:20Z"}, "message": "rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Enable -mpower9-minmax by default for -mcpu=power9.\n\n[gcc]\n2017-01-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Enable\n\t-mpower9-minmax by default for -mcpu=power9.\n\t(ISA_3_MASKS_IEEE): Require -mvsx-small-integer to enable IEEE\n\t128-bit floating point.\n\n[gcc/testsuite]\n2017-01-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/float128-hw.c: Do not require IEEE 128-bit\n\tfloating point hardware to run test.\n\nFrom-SVN: r244662", "tree": {"sha": "3b1acb80c0afb53671517731b0c2a94ceef334f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b1acb80c0afb53671517731b0c2a94ceef334f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/comments", "author": null, "committer": null, "parents": [{"sha": "c4e5baa663ab629ee0f2de1e9946ab34642b5ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4e5baa663ab629ee0f2de1e9946ab34642b5ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4e5baa663ab629ee0f2de1e9946ab34642b5ad6"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "a50adfec17d23206669d42a386fa7ff1b07350ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "patch": "@@ -1,3 +1,10 @@\n+2017-01-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Enable\n+\t-mpower9-minmax by default for -mcpu=power9.\n+\t(ISA_3_MASKS_IEEE): Require -mvsx-small-integer to enable IEEE\n+\t128-bit floating point.\n+\n 2017-01-20  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.md (cmpstrnsi, cmpstrsi): Fail if"}, {"sha": "8ce91473470380f66d95d6678fdb10028b504e98", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "patch": "@@ -62,14 +62,14 @@\n \t\t\t\t | OPTION_MASK_VSX_SMALL_INTEGER)\n \n /* Add ISEL back into ISA 3.0, since it is supposed to be a win.  Do not add\n-   P9_MINMAX until the hardware that supports it is available.  Do not add\n    FLOAT128_HW here until we are ready to make -mfloat128 on by default.  */\n #define ISA_3_0_MASKS_SERVER\t(ISA_2_7_MASKS_SERVER\t\t\t\\\n \t\t\t\t | OPTION_MASK_ISEL\t\t\t\\\n \t\t\t\t | OPTION_MASK_MODULO\t\t\t\\\n \t\t\t\t | OPTION_MASK_P9_FUSION\t\t\\\n \t\t\t\t | OPTION_MASK_P9_DFORM_SCALAR\t\t\\\n \t\t\t\t | OPTION_MASK_P9_DFORM_VECTOR\t\t\\\n+\t\t\t\t | OPTION_MASK_P9_MINMAX\t\t\\\n \t\t\t\t | OPTION_MASK_P9_MISC\t\t\t\\\n \t\t\t\t | OPTION_MASK_P9_VECTOR)\n \n@@ -81,7 +81,8 @@\n \t\t\t\t | OPTION_MASK_DIRECT_MOVE\t\t\\\n \t\t\t\t | OPTION_MASK_UPPER_REGS_DI\t\t\\\n \t\t\t\t | OPTION_MASK_UPPER_REGS_DF\t\t\\\n-\t\t\t\t | OPTION_MASK_UPPER_REGS_SF)\n+\t\t\t\t | OPTION_MASK_UPPER_REGS_SF\t\t\\\n+\t\t\t\t | OPTION_MASK_VSX_SMALL_INTEGER)\n \n #define POWERPC_7400_MASK\t(OPTION_MASK_PPC_GFXOPT | OPTION_MASK_ALTIVEC)\n "}, {"sha": "0f1de62a926da69f3233465f6d7f317e546b5122", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "patch": "@@ -1,3 +1,8 @@\n+2017-01-19  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/float128-hw.c: Do not require IEEE 128-bit\n+\tfloating point hardware to run test.\n+\n 2017-01-19  Tamar Christina  <tamar.christina@arm.com>\n \n \t* gcc/testsuite/lib/target-supports.exp"}, {"sha": "65958bcac83a17954750694b3419e36caef63841", "filename": "gcc/testsuite/gcc.target/powerpc/float128-hw.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffloat128-hw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd9cf60b31567aa6cf035882b6c1b406ed903e7b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffloat128-hw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffloat128-hw.c?ref=bd9cf60b31567aa6cf035882b6c1b406ed903e7b", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n-/* { dg-require-effective-target powerpc_float128_hw_ok } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n-/* { dg-options \"-mcpu=power9 -O2\" } */\n+/* { dg-options \"-mcpu=power9 -O2 -mfloat128\" } */\n \n __float128 f128_add (__float128 a, __float128 b) { return a+b; }\n __float128 f128_sub (__float128 a, __float128 b) { return a-b; }"}]}