{"sha": "935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM1Y2I5YWMwZjVkNjk0NDY3YmY1YzUxZDQ2MzM5ZjEzZTZkYjVkNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-08-29T09:18:28Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-08-29T09:18:28Z"}, "message": "pr31344.c: Move to ...\n\n\t* gcc.dg/pr31344.c: Move to ...\n\t* gcc.dg/dfp/pr31344.c: ... here.\n\t* gcc.dg/sibcall-6.c: Simplify dg-skip-if directive.\n\t* gcc.dg/20050503-1.c: Ditto.\n\t* gcc.dg/20050111-1.c: Simplify i?86 and x86_64 dg-options directive.\n\t* gcc.dg/20061127-1.c: Compile only for fpic targets.\n\t* gcc.dg/20060801-1.c: Ditto.\n\nFrom-SVN: r127889", "tree": {"sha": "8eb7af7377064cf34bb7354de34a07a2456387f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb7af7377064cf34bb7354de34a07a2456387f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/comments", "author": null, "committer": null, "parents": [{"sha": "8a84c9a7710903895dfa2c1e7103e18321af75a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a84c9a7710903895dfa2c1e7103e18321af75a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a84c9a7710903895dfa2c1e7103e18321af75a6"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "7cf04e806d6a76290f4f2937645100369ecb5764", "filename": "gcc/testsuite/gcc.dg/20050111-1.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20050111-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20050111-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050111-1.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,10 +1,7 @@\n /* PR middle-end/19084, rtl-optimization/19348 */\n /* { dg-do compile } */\n-/* The following ensures that this test is compiled with -O2, unless\n-   on i?86 or x86_64 with -m32 option.  */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2\" { target lp64 } } */\n+/* { dg-options \"-O2 -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n \n unsigned int\n foo (unsigned long long x)"}, {"sha": "a6c6fa15fa833a46adefb78408d41a52239818ae", "filename": "gcc/testsuite/gcc.dg/20050503-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20050503-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20050503-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050503-1.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -2,7 +2,7 @@\n    Test whether tail call information is propagated through builtin\n    expanders.  */\n /* { dg-do compile } */\n-/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ilp32 && fpic } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2\" } */\n \n typedef __SIZE_TYPE__ size_t;"}, {"sha": "c036acbec8042d551aa494d9ee82422a371ba3d6", "filename": "gcc/testsuite/gcc.dg/20060801-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20060801-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20060801-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20060801-1.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do compile { target { lp64 } } } */\n+/* { dg-do compile { target fpic } } */\n+/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-fPIC\" } */\n char *ptr = 0;\n char array[100];"}, {"sha": "0b70a5ae2b62c51d621700d4d14dc0a0df0862c0", "filename": "gcc/testsuite/gcc.dg/20061127-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20061127-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2F20061127-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20061127-1.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do compile { target lp64 } } */\n+/* { dg-do compile { target fpic } } */\n+/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O1 -fPIC\" } */\n \n /* PR target/29319 */"}, {"sha": "1187d9eb466a800f1a8964a124d2207c5335f440", "filename": "gcc/testsuite/gcc.dg/arm-asm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Farm-asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Farm-asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farm-asm.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,6 +1,6 @@\n /* ARM and Thumb asm statements should be able to access the constant\n    pool.  */\n-/* { dg-do compile { target arm*-*-* strongarm*-*-* xscale*-*-*} } */\n+/* { dg-do compile { target arm*-*-* strongarm*-*-* xscale*-*-* } } */\n extern unsigned x[];\n unsigned *trapTable()\n {"}, {"sha": "7ea24c494f0233c1ced49db5d3ee648eb8228a0e", "filename": "gcc/testsuite/gcc.dg/attr-isr-trap_exit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-isr-trap_exit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-isr-trap_exit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-isr-trap_exit.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target sh-*-* sh[1234ble]*-*-*} } */\n+/* { dg-do compile { target sh-*-* sh[1234ble]*-*-* } } */\n /* { dg-options \"-O\" } */\n /* Check that trapa / interrput_handler attributes can paired in\n    either order.  */"}, {"sha": "22435f3f9a488fb73e0b469ce0df794368d74ec3", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -11,4 +11,4 @@ float foo(float x)\n   return sin(x);\n }\n \n-/* {dg-final {scan-assembler \"sinf\" } } */\n+/* { dg-final { scan-assembler \"sinf\" } } */"}, {"sha": "d3eaca15aee77d6b9c1ccb03cbf879d548b0e898", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -11,4 +11,4 @@ complex double foo(complex double x)\n   return exp(x);\n }\n \n-/* {dg-final {scan-assembler \"cexp\" } } */\n+/* { dg-final { scan-assembler \"cexp\" } } */"}, {"sha": "7d40449a7736fcf9e58339560bf5cea56c5d7800", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -11,4 +11,4 @@ complex double foo(complex float x, float y)\n   return pow(x, y);\n }\n \n-/* {dg-final {scan-assembler \"cpowf\" } } */\n+/* { dg-final { scan-assembler \"cpowf\" } } */"}, {"sha": "d4db4bd6ff3fbddfe2fe3145676ad413fd3e6ab1", "filename": "gcc/testsuite/gcc.dg/cast-lvalue-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-lvalue-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-lvalue-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcast-lvalue-2.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -10,4 +10,4 @@ foo (void)\n {\n   (int) x = 1; /* { dg-bogus \"warning\" \"warning in place of error\" } */\n }\n-/* { dg-error \"lvalue\" \"cast as lvalue\" { target *-*-*} 11 } */\n+/* { dg-error \"lvalue\" \"cast as lvalue\" { target *-*-* } 11 } */"}, {"sha": "d0c78d577b747fc0440324a79763c4ae26ed8378", "filename": "gcc/testsuite/gcc.dg/cleanup-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-11.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target hppa*-*-hpux* *-*-linux* powerpc*-*-darwin* *-*-darwin[912]*} } */\n+/* { dg-do run { target hppa*-*-hpux* *-*-linux* powerpc*-*-darwin* *-*-darwin[912]* } } */\n /* { dg-options \"-fexceptions -fnon-call-exceptions -O2\" } */\n /* Verify that cleanups work with exception handling through realtime signal\n    frames on alternate stack.  */"}, {"sha": "d2335606a21f76f8a5cb6fdbfb75fa98cf51d1ee", "filename": "gcc/testsuite/gcc.dg/cleanup-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-8.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target hppa*-*-hpux* *-*-linux* powerpc*-*-darwin* *-*-darwin[912]*} } */\n+/* { dg-do run { target hppa*-*-hpux* *-*-linux* powerpc*-*-darwin* *-*-darwin[912]* } } */\n /* { dg-options \"-fexceptions -fnon-call-exceptions -O2\" } */\n /* Verify that cleanups work with exception handling through signal\n    frames.  */"}, {"sha": "b73125ace9620645d860c1122c8849b00412518d", "filename": "gcc/testsuite/gcc.dg/cleanup-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcleanup-9.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target hppa*-*-hpux* *-*-linux* powerpc*-*-darwin* *-*-darwin[912]*} } */\n+/* { dg-do run { target hppa*-*-hpux* *-*-linux* powerpc*-*-darwin* *-*-darwin[912]* } } */\n /* { dg-options \"-fexceptions -fnon-call-exceptions -O2\" } */\n /* Verify that cleanups work with exception handling through realtime\n    signal frames.  */"}, {"sha": "86a630cf9512d8c841389c761e6df4687e2620e6", "filename": "gcc/testsuite/gcc.dg/const-float128-ped.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-float128-ped.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-float128-ped.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-float128-ped.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,5 +1,5 @@\n /* Test 'q' suffix with -pedantic on __float128 type constants.  */\n-/* { dg-do compile { target { ia64-*-* || { { i?86-*-* x86_64-*-*} && lp64 } } } } */\n+/* { dg-do compile { target { ia64-*-* || { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n /* { dg-options \"-pedantic\" } */\n \n __float128 a = 123.456789q; /* { dg-warning \"non-standard suffix on floating constant\" } */"}, {"sha": "146e0c9c98637b9c829765af4ab315076c7b9010", "filename": "gcc/testsuite/gcc.dg/const-float128.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-float128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-float128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-float128.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,5 +1,5 @@\n /* Test 'q' and 'Q' suffixes on __float128 type constants.  */\n-/* { dg-do compile { target { ia64-*-* || { { i?86-*-* x86_64-*-*} && lp64 } } } } */\n+/* { dg-do compile { target { ia64-*-* || { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n /* { dg-options \"\" } */\n \n __float128 a = 123.456789q;"}, {"sha": "de76a72f9374b1f9a3bcfe38017fab1a337d3472", "filename": "gcc/testsuite/gcc.dg/dfp/pr31344.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31344.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31344.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31344.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target dfp } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O -std=gnu99 -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n /* { dg-options \"-O -std=gnu99\" } */\n ", "previous_filename": "gcc/testsuite/gcc.dg/pr31344.c"}, {"sha": "951c15deb927d06e7e954ec14fa1e0430f897de5", "filename": "gcc/testsuite/gcc.dg/h8300-ice2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fh8300-ice2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fh8300-ice2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fh8300-ice2.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/*{dg-do compile target {h8300-*-*}} */\n+/* { dg-do compile target { h8300-*-* } } */\n /* ICE for signed/unsigned long and signed char comparison */\n int main()\n {"}, {"sha": "00a0608ccb409d29c27c6a5896b1e91dc6931854", "filename": "gcc/testsuite/gcc.dg/pragma-isr-trap_exit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr-trap_exit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr-trap_exit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr-trap_exit.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target sh-*-* sh[1234ble]*-*-*} } */\n+/* { dg-do compile { target sh-*-* sh[1234ble]*-*-* } } */\n /* { dg-options \"-O\" } */\n /* This test case will check whether trapa is generated only for isr.  */\n #pragma interrupt"}, {"sha": "e7565a682454d5b5ca9867b30cfea0ea1084ceaa", "filename": "gcc/testsuite/gcc.dg/pragma-isr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target h8300-*-* sh-*-* sh[1234ble]*-*-*} } */\n+/* { dg-do compile { target h8300-*-* sh-*-* sh[1234ble]*-*-* } } */\n /* { dg-options \"-O3\" } */\n /* Test case will check whether rte is generated for two ISRs*/\n extern void foo();"}, {"sha": "3e2e4bb38bafcedb01c88e2de05efe252ae9f99e", "filename": "gcc/testsuite/gcc.dg/pragma-isr2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-isr2.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target h8300-*-* sh-*-* sh[1234ble]*-*-*} } */\n+/* { dg-do compile { target h8300-*-* sh-*-* sh[1234ble]*-*-* } } */\n /* { dg-options \"-O\" } */\n /* This test case will check whether rte is generated only for isr.  */\n #pragma interrupt"}, {"sha": "f57f9c437815e1d59f33df45d6f3cb04da52820a", "filename": "gcc/testsuite/gcc.dg/sibcall-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935cb9ac0f5d694467bf5c51d46339f13e6db5d4/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-6.c?ref=935cb9ac0f5d694467bf5c51d46339f13e6db5d4", "patch": "@@ -6,8 +6,8 @@\n    Copyright (C) 2002 Free Software Foundation Inc.\n    Contributed by Andreas Bauer <baueran@in.tum.de>  */\n \n-/* { dg-do run { target i?86-*-* s390*-*-* x86_64-*-*} } */\n-/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n+/* { dg-do run { target i?86-*-* x86_64-*-* s390*-*-* } } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ilp32 && fpic } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2 -foptimize-sibling-calls\" } */\n \n extern void abort (void);"}]}