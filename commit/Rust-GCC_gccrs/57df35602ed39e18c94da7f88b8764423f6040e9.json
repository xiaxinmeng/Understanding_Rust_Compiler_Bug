{"sha": "57df35602ed39e18c94da7f88b8764423f6040e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkZjM1NjAyZWQzOWUxOGM5NGRhN2Y4OGI4NzY0NDIzZjYwNDBlOQ==", "commit": {"author": {"name": "Stephen M. Webb", "email": "stephen@bregmasoft.com", "date": "2001-04-02T22:01:52Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-04-02T22:01:52Z"}, "message": "std_cstring.h: Fix for const-correctness.\n\n\n2001-04-02  Stephen M. Webb  <stephen@bregmasoft.com>\n\n\t* include/c_std/bits/std_cstring.h: Fix for const-correctness.\n\t* include/c_std/bits/std_cwchar.h: Same.\n\t* testsuite/21_strings/c_strings.cc: Add.\n\nFrom-SVN: r41018", "tree": {"sha": "eda4077c3f81d669bcccce80e4a5cbbc035063bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda4077c3f81d669bcccce80e4a5cbbc035063bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57df35602ed39e18c94da7f88b8764423f6040e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57df35602ed39e18c94da7f88b8764423f6040e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57df35602ed39e18c94da7f88b8764423f6040e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57df35602ed39e18c94da7f88b8764423f6040e9/comments", "author": null, "committer": null, "parents": [{"sha": "caf4d6e06910095bd455d53f72a6094fff41c66c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf4d6e06910095bd455d53f72a6094fff41c66c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caf4d6e06910095bd455d53f72a6094fff41c66c"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "49b73f28fc0aaefefaa7e6301b7244ea6f307164", "filename": "libstdc++-v3/testsuite/21_strings/c_strings.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57df35602ed39e18c94da7f88b8764423f6040e9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57df35602ed39e18c94da7f88b8764423f6040e9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings.cc?ref=57df35602ed39e18c94da7f88b8764423f6040e9", "patch": "@@ -0,0 +1,67 @@\n+// 2001-04-02  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 21.4: null-terminiated sequence utilities\n+\n+#include <string>\n+#include <cstring>\n+#include <cwchar>\n+\n+int main()\n+{\n+  bool test = true;\n+  char c = 'a';\n+  const char cc = 'b';\n+  char* c1 = &c;\n+  const char* cc1 = &cc;\n+  const char* ccarray1 = \"san francisco roof garden inspectors\";\n+  const char* ccarray2 = \"san francisco sunny-day park inspectors\";\n+  char carray[30];\n+  strcpy(carray, ccarray1);\n+  void* v;\n+  const void* cv;\n+  \n+  // const char* strchr(const char* s, int c);\n+  // char* strchr(char* s, int c);\n+  cc1 = std::strchr(ccarray1, 'c');\n+  c1 = std::strchr(carray, 'c');\n+\n+  // const char* strpbrk(const char* s1, const char* s2);\n+  // char* strpbrk(char* s1, const char* s2);\n+  cc1 = std::strpbrk(ccarray1, ccarray2);\n+  c1 = std::strpbrk(carray, ccarray2);\n+\n+  // const char* strrchr(const char* s, int c);\n+  // char* strrchr(char* s, int c);\n+  cc1 = std::strrchr(ccarray1, 'c');\n+  c1 = std::strrchr(carray, 'c');\n+\n+  // const char* strstr(const char* s1, const char* s2);\n+  // char* strstr(char* s1, const char* s2);\n+  cc1 = std::strstr(ccarray1, ccarray2);\n+  c1 = std::strstr(carray, carray);\n+\n+  // const void* memchr(const void* s, int c, size_t n);\n+  // void* memchr(      void* s, int c, size_t n);\n+  cv = std::memchr(cv, 'a', 3);\n+  v = std::memchr(v, 'a', 3);\n+\n+  return 0;\n+}"}]}