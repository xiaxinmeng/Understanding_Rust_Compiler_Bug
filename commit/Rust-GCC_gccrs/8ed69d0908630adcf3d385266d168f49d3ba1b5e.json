{"sha": "8ed69d0908630adcf3d385266d168f49d3ba1b5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVkNjlkMDkwODYzMGFkY2YzZDM4NTI2NmQxNjhmNDlkM2JhMWI1ZQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-08-28T07:05:20Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-08-28T07:05:20Z"}, "message": "loop.c (check_dbra_loop): Fix calculation of FINAL_VALUE when COMPARISON_VAL was normalized.\n\n\t* loop.c (check_dbra_loop): Fix calculation of FINAL_VALUE when\n\tCOMPARISON_VAL was normalized.\n\nFrom-SVN: r22051", "tree": {"sha": "6c6aff5933114d7bb65a9a3e4bcc32b2e46dc44d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c6aff5933114d7bb65a9a3e4bcc32b2e46dc44d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ed69d0908630adcf3d385266d168f49d3ba1b5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed69d0908630adcf3d385266d168f49d3ba1b5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed69d0908630adcf3d385266d168f49d3ba1b5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed69d0908630adcf3d385266d168f49d3ba1b5e/comments", "author": null, "committer": null, "parents": [{"sha": "af3d5d5313883181d26f30e9397470c3ee144b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af3d5d5313883181d26f30e9397470c3ee144b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af3d5d5313883181d26f30e9397470c3ee144b53"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "9341194a3c26ae9a605e39e640c9276f3658e6c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed69d0908630adcf3d385266d168f49d3ba1b5e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed69d0908630adcf3d385266d168f49d3ba1b5e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ed69d0908630adcf3d385266d168f49d3ba1b5e", "patch": "@@ -1,3 +1,8 @@\n+Fri Aug 28 14:54:07 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* loop.c (check_dbra_loop): Fix calculation of FINAL_VALUE when\n+\tCOMPARISON_VAL was normalized.\n+\n Thu Aug 27 20:10:46 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* loop.c (check_dbra_loop): The loop ending comparison value"}, {"sha": "e581f44d7cad7379c3cbde77c1bf184145393046", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ed69d0908630adcf3d385266d168f49d3ba1b5e/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ed69d0908630adcf3d385266d168f49d3ba1b5e/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=8ed69d0908630adcf3d385266d168f49d3ba1b5e", "patch": "@@ -7004,11 +7004,18 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t\t    return 0;\n \t\t}\n \n+\t      final_value = comparison_value;\n+\n \t      /* Reset these in case we normalized the initial value\n \t\t and comparison value above.  */\n+\t      if (GET_CODE (comparison_value) == CONST_INT\n+\t\t  && GET_CODE (initial_value) == CONST_INT)\n+\t\t{\n+\t\t  comparison_value = GEN_INT (comparison_val);\n+\t\t  final_value\n+\t\t    = GEN_INT (comparison_val + INTVAL (bl->initial_value));\n+\t\t}\n \t      bl->initial_value = initial_value;\n-\t      if (GET_CODE (comparison_value) == CONST_INT)\n-\t\tcomparison_value = GEN_INT (comparison_val);\n \n \t      /* Save some info needed to produce the new insns.  */\n \t      reg = bl->biv->dest_reg;\n@@ -7017,7 +7024,6 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t\tjump_label = XEXP (SET_SRC (PATTERN (PREV_INSN (loop_end))), 2);\n \t      new_add_val = GEN_INT (- INTVAL (bl->biv->add_val));\n \n-\t      final_value = comparison_value;\n \t      /* Set start_value; if this is not a CONST_INT, we need\n \t\t to generate a SUB.\n \t\t Initialize biv to start_value before loop start."}]}