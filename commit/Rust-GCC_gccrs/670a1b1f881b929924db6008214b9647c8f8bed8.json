{"sha": "670a1b1f881b929924db6008214b9647c8f8bed8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcwYTFiMWY4ODFiOTI5OTI0ZGI2MDA4MjE0Yjk2NDdjOGY4YmVkOA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-10-15T16:40:53Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-10-15T16:40:53Z"}, "message": "Fix some whitespace issues in the changelog.\n\nFrom-SVN: r117748", "tree": {"sha": "0eaf9b827d46a61d11ea32e88fd732b4637ef970", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0eaf9b827d46a61d11ea32e88fd732b4637ef970"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/670a1b1f881b929924db6008214b9647c8f8bed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670a1b1f881b929924db6008214b9647c8f8bed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/670a1b1f881b929924db6008214b9647c8f8bed8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/670a1b1f881b929924db6008214b9647c8f8bed8/comments", "author": null, "committer": null, "parents": [{"sha": "38f1b50d963068f4d3eb1e46f8e2b579178b5e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f1b50d963068f4d3eb1e46f8e2b579178b5e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f1b50d963068f4d3eb1e46f8e2b579178b5e85"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "44a0eee75cef203f80d8661277a8949acfb436a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/670a1b1f881b929924db6008214b9647c8f8bed8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/670a1b1f881b929924db6008214b9647c8f8bed8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=670a1b1f881b929924db6008214b9647c8f8bed8", "patch": "@@ -73,7 +73,7 @@\n \n \tPR c/29092\n \n-        * c-typeck.c (digest_init): Always allow initializing vectors\n+\t* c-typeck.c (digest_init): Always allow initializing vectors\n \tthat have static storage duration with compound literals.\n \t* tree.c (build_type_attribute_qual_variant): New, based on\n \tbuild_type_attribute_variant.\n@@ -170,7 +170,7 @@\n \n 2006-10-09  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * tree-mudflap.c (mf_xform_derefs_1): Add parentheses around TREE_TYPE.\n+\t* tree-mudflap.c (mf_xform_derefs_1): Add parentheses around TREE_TYPE.\n \n 2006-10-08  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -303,40 +303,40 @@\n \t    Jakub Jelinek  <jakub@redhat.com>\n \n \t* Makefile.in (libgcc.mk, LIBGCC_DEPS): Add emutls.c.\n-        * builtin-types.def (BT_WORD): Make unsigned.\n-        (BT_FN_VOID_PTR_WORD_WORD_PTR): New.\n-        * builtins.def (BUILT_IN_EMUTLS_GET_ADDRESS): New.\n-        (BUILT_IN_EMUTLS_REGISTER_COMMON): New.\n-        * c-decl.c (grokdeclarator): Don't error if !have_tls.\n-        * c-parser.c (c_parser_omp_threadprivate): Likewise.\n+\t* builtin-types.def (BT_WORD): Make unsigned.\n+\t(BT_FN_VOID_PTR_WORD_WORD_PTR): New.\n+\t* builtins.def (BUILT_IN_EMUTLS_GET_ADDRESS): New.\n+\t(BUILT_IN_EMUTLS_REGISTER_COMMON): New.\n+\t* c-decl.c (grokdeclarator): Don't error if !have_tls.\n+\t* c-parser.c (c_parser_omp_threadprivate): Likewise.\n \t* cgraph.c (decide_is_variable_needed): Look at force_output.\n \tRecurse for emulated tls.\n \t* cgraphunit.c (cgraph_varpool_remove_unreferenced_decls): Remove\n \tchecks redundant with decide_is_variable_needed.\n \t(cgraph_build_static_cdtor): Do cgraph_varpool_assemble_pending_decls.\n-        * dwarf2out.c (loc_descriptor_from_tree_1): Don't do anything for\n-        emulated tls.\n-        * expr.c (emutls_var_address): New.\n+\t* dwarf2out.c (loc_descriptor_from_tree_1): Don't do anything for\n+\temulated tls.\n+\t* expr.c (emutls_var_address): New.\n \t(expand_expr_real_1): Expand emulated tls.\n \t(expand_expr_addr_expr_1): Likewise.\n-        * libgcc-std.ver: Add __emutls_get_address, __emutls_register_common.\n-        * output.h (emutls_finish): Declare.\n-        * toplev.c (compile_file): Call it.\n+\t* libgcc-std.ver: Add __emutls_get_address, __emutls_register_common.\n+\t* output.h (emutls_finish): Declare.\n+\t* toplev.c (compile_file): Call it.\n \t* tree-ssa-address.c (gen_addr_rtx): Check for const-ness of the\n \taddress before wrapping in CONST.\n-        * varasm.c (emutls_htab, emutls_object_type): New.\n-        (EMUTLS_VAR_PREFIX, EMUTLS_TMPL_PREFIX): New.\n+\t* varasm.c (emutls_htab, emutls_object_type): New.\n+\t(EMUTLS_VAR_PREFIX, EMUTLS_TMPL_PREFIX): New.\n \t(get_emutls_object_name, get_emutls_object_type): New.\n \t(get_emutls_init_templ_addr, emutls_decl): New.\n \t(emutls_common_1, emutls_finish): New.\n-        (assemble_variable): When emulating tls, swap decls; generate\n+\t(assemble_variable): When emulating tls, swap decls; generate\n \tconstructor for the emutls objects.\n \t(do_assemble_alias): When emulating tls, swap decl and target name.\n-        (default_encode_section_info): Don't add SYMBOL_FLAG_TLS_SHIFT\n-        for emulated tls.\n+\t(default_encode_section_info): Don't add SYMBOL_FLAG_TLS_SHIFT\n+\tfor emulated tls.\n \t* emutls.c: New file.\n-        * config/sparc/sol2.h (ASM_DECLARE_OBJECT_NAME): Only emit\n-        tls_object for real tls.\n+\t* config/sparc/sol2.h (ASM_DECLARE_OBJECT_NAME): Only emit\n+\ttls_object for real tls.\n \n 2006-10-04  Zack Weinberg  <zackw@panix.com>\n "}]}