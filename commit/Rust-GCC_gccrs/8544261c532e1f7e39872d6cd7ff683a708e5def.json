{"sha": "8544261c532e1f7e39872d6cd7ff683a708e5def", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU0NDI2MWM1MzJlMWY3ZTM5ODcyZDZjZDdmZjY4M2E3MDhlNWRlZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-05-01T08:41:59Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-05-01T08:41:59Z"}, "message": "stdio_filebuf.h (stdio_filebuf(int, std::ios_base::openmode, bool, size_t), [...]): Shorten a bit (-10 lines) by factoring out some code.\n\n2003-05-01  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/ext/stdio_filebuf.h\n\t(stdio_filebuf(int, std::ios_base::openmode, bool, size_t),\n\tstdio_filebuf(std::__c_file*, std::ios_base::openmode, size_t)):\n\tShorten a bit (-10 lines) by factoring out some code.\n\nFrom-SVN: r66320", "tree": {"sha": "4db80e1088a7187b9fde70e7f6af682e9c9694a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4db80e1088a7187b9fde70e7f6af682e9c9694a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8544261c532e1f7e39872d6cd7ff683a708e5def", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8544261c532e1f7e39872d6cd7ff683a708e5def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8544261c532e1f7e39872d6cd7ff683a708e5def", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8544261c532e1f7e39872d6cd7ff683a708e5def/comments", "author": null, "committer": null, "parents": [{"sha": "d1c4bfe8b7595fe3c2bea8446b46b697e743e274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c4bfe8b7595fe3c2bea8446b46b697e743e274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c4bfe8b7595fe3c2bea8446b46b697e743e274"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "70fafd0f7598b661a8c9e0d5ff6fb3f57543f3d5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8544261c532e1f7e39872d6cd7ff683a708e5def/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8544261c532e1f7e39872d6cd7ff683a708e5def/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8544261c532e1f7e39872d6cd7ff683a708e5def", "patch": "@@ -1,3 +1,10 @@\n+2003-05-01  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/ext/stdio_filebuf.h\n+\t(stdio_filebuf(int, std::ios_base::openmode, bool, size_t),\n+\tstdio_filebuf(std::__c_file*, std::ios_base::openmode, size_t)):\n+\tShorten a bit (-10 lines) by factoring out some code.\n+\n 2003-04-30  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* acinclude.m4:  Add bit missing from previous patch."}, {"sha": "90031963631fa4a55509aa84c7b6162d32b37b64", "filename": "libstdc++-v3/include/ext/stdio_filebuf.h", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8544261c532e1f7e39872d6cd7ff683a708e5def/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8544261c532e1f7e39872d6cd7ff683a708e5def/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h?ref=8544261c532e1f7e39872d6cd7ff683a708e5def", "patch": "@@ -124,17 +124,12 @@ namespace __gnu_cxx\n       if (this->is_open())\n \t{\n \t  this->_M_mode = __mode;\n+\t  this->_M_buf_size = __size;\n \t  if (__size > 0 && __size < 4)\n-\t    {\n-\t      // Specify not to use an allocated buffer.\n-\t      this->_M_buf = _M_unbuf;\n-\t      this->_M_buf_size = __size;\n-\t    }\n+\t    // Specify not to use an allocated buffer.\n+\t    this->_M_buf = _M_unbuf;\n \t  else\n-\t    {\n-\t      this->_M_buf_size = __size;\n-\t      _M_allocate_internal_buffer();\n-\t    }\n+\t    _M_allocate_internal_buffer();\n \t  _M_set_indeterminate();\n \t}\n     }\n@@ -148,17 +143,12 @@ namespace __gnu_cxx\n       if (this->is_open())\n \t{\n \t  this->_M_mode = __mode;\n+\t  this->_M_buf_size = __size;\n \t  if (__size > 0 && __size < 4)\n-\t    {\n-\t      // Specify not to use an allocated buffer.\n-\t      this->_M_buf = _M_unbuf;\n-\t      this->_M_buf_size = __size;\n-\t    }\n+\t    // Specify not to use an allocated buffer.\n+\t    this->_M_buf = _M_unbuf;\n \t  else\n-\t    {\n-\t      this->_M_buf_size = __size;\n-\t      _M_allocate_internal_buffer();\n-\t    }\n+\t    _M_allocate_internal_buffer();\n \t  _M_set_indeterminate();\n \t}\n     }"}]}