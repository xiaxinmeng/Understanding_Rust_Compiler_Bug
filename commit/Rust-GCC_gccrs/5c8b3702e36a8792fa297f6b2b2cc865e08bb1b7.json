{"sha": "5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4YjM3MDJlMzZhODc5MmZhMjk3ZjZiMmIyY2M4NjVlMDhiYjFiNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-12-06T21:17:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-12-06T21:17:08Z"}, "message": "PR c++/88136 - -Wdeprecated-copy false positives\n\nDeprecating the copy operations because the class has a user-provided\ndestructor turns out to have too many false positives; this patch adjusts\n-Wdeprecated-copy to only deprecate if the other copy operation is\nuser-provided.  To get the earlier behavior, people can explicitly request\nit with -Wdeprecated-copy-dtor.\n\ngcc/c-family/\n\t* c.opt (Wdeprecated-copy-dtor): New.\n\t(Wdeprecated-copy): Move to -Wextra.\ngcc/cp/\n\t* class.c (classtype_has_depr_implicit_copy): Rename from\n\tclasstype_has_user_copy_or_dtor.\n\t* method.c (lazily_declare_fn): Adjust.\n\t* decl2.c (cp_warn_deprecated_use): Refer to -Wdeprecated-copy-dtor\n\tif deprecation is due to a destructor.\n\nFrom-SVN: r266867", "tree": {"sha": "6b80e5d185cdf98f73f8ceefb770c17019adbbe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b80e5d185cdf98f73f8ceefb770c17019adbbe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e00bd6eb238f106101e32ce5c76b4b3ab8e26cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e00bd6eb238f106101e32ce5c76b4b3ab8e26cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e00bd6eb238f106101e32ce5c76b4b3ab8e26cc"}], "stats": {"total": 65, "additions": 47, "deletions": 18}, "files": [{"sha": "7015aeec693330e71d41b826a29efcd8ad7efb92", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -1,3 +1,9 @@\n+2018-12-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/88136 - -Wdeprecated-copy false positives\n+\t* c.opt (Wdeprecated-copy-dtor): New.\n+\t(Wdeprecated-copy): Move to -Wextra.\n+\n 2018-11-29  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/88172"}, {"sha": "07ff1c84f9644ad250f13cb855bfd414cc9ba1b6", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -481,7 +481,12 @@ C C++ ObjC ObjC++ CPP(cpp_warn_deprecated) CppReason(CPP_W_DEPRECATED) Var(warn_\n Warn if a deprecated compiler feature, class, method, or field is used.\n \n Wdeprecated-copy\n-C++ ObjC++ Var(warn_deprecated_copy) Warning LangEnabledBy(C++ ObjC++, Wall)\n+C++ ObjC++ Var(warn_deprecated_copy) Warning LangEnabledBy(C++ ObjC++, Wextra)\n+Mark implicitly-declared copy operations as deprecated if the class has a\n+user-provided copy operation.\n+\n+Wdeprecated-copy-dtor\n+C++ ObjC++ Var(warn_deprecated_copy, 2) Warning\n Mark implicitly-declared copy operations as deprecated if the class has a\n user-provided copy operation or destructor.\n "}, {"sha": "601ca78a147ce01b53781eb372619151c147ac9e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -1,3 +1,12 @@\n+2018-12-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/88136 - -Wdeprecated-copy false positives\n+\t* class.c (classtype_has_depr_implicit_copy): Rename from\n+\tclasstype_has_user_copy_or_dtor.\n+\t* method.c (lazily_declare_fn): Adjust.\n+\t* decl2.c (cp_warn_deprecated_use): Refer to -Wdeprecated-copy-dtor\n+\tif deprecation is due to a destructor.\n+\n 2018-12-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/88373 - wrong parse error with ~."}, {"sha": "9c175f85cf655c43f97b64022ed2bc4fb05c909e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -5233,7 +5233,7 @@ classtype_has_non_deleted_move_ctor (tree t)\n    operator, or destructor, returns that function.  Otherwise, null.  */\n \n tree\n-classtype_has_user_copy_or_dtor (tree t)\n+classtype_has_depr_implicit_copy (tree t)\n {\n   if (!CLASSTYPE_LAZY_COPY_CTOR (t))\n     for (ovl_iterator iter (CLASSTYPE_CONSTRUCTORS (t)); iter; ++iter)"}, {"sha": "3645965d7f348687b72cdf6b4181a9ab7ea12740", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -6273,7 +6273,7 @@ extern bool type_has_constexpr_default_constructor (tree);\n extern bool type_has_virtual_destructor\t\t(tree);\n extern bool classtype_has_move_assign_or_move_ctor_p (tree, bool user_declared);\n extern bool classtype_has_non_deleted_move_ctor (tree);\n-extern tree classtype_has_user_copy_or_dtor\t(tree);\n+extern tree classtype_has_depr_implicit_copy\t(tree);\n extern bool type_build_ctor_call\t\t(tree);\n extern bool type_build_dtor_call\t\t(tree);\n extern void explain_non_literal_class\t\t(tree);"}, {"sha": "15b0393f756c08b56422c3d270f68962333a8759", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -5298,18 +5298,23 @@ cp_warn_deprecated_use (tree decl, tsubst_flags_t complain)\n       && DECL_NONSTATIC_MEMBER_FUNCTION_P (decl)\n       && copy_fn_p (decl))\n     {\n-      auto_diagnostic_group d;\n-      /* Don't warn about system library classes (c++/86342).  */\n-      if (!DECL_IN_SYSTEM_HEADER (decl))\n-\twarned = warning (OPT_Wdeprecated_copy,\n-\t\t\t  \"implicitly-declared %qD is deprecated\", decl);\n-      if (warned)\n+      if (warn_deprecated_copy\n+\t  /* Don't warn about system library classes (c++/86342).  */\n+\t  && (!DECL_IN_SYSTEM_HEADER (decl)\n+\t      || global_dc->dc_warn_system_headers))\n \t{\n+\t  auto_diagnostic_group d;\n \t  tree ctx = DECL_CONTEXT (decl);\n-\t  tree other = classtype_has_user_copy_or_dtor (ctx);\n-\t  inform (DECL_SOURCE_LOCATION (other),\n-\t\t  \"because %qT has user-provided %qD\",\n-\t\t  ctx, other);\n+\t  tree other = classtype_has_depr_implicit_copy (ctx);\n+\t  int opt = (DECL_DESTRUCTOR_P (other)\n+\t\t     ? OPT_Wdeprecated_copy_dtor\n+\t\t     : OPT_Wdeprecated_copy);\n+\t  warned = warning (opt, \"implicitly-declared %qD is deprecated\",\n+\t\t\t    decl);\n+\t  if (warned)\n+\t    inform (DECL_SOURCE_LOCATION (other),\n+\t\t    \"because %qT has user-provided %qD\",\n+\t\t    ctx, other);\n \t}\n     }\n   else"}, {"sha": "fd023e200538bddf1fc96938c9746a23b6ea36b6", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -2380,7 +2380,7 @@ lazily_declare_fn (special_function_kind sfk, tree type)\n     {\n       if (classtype_has_move_assign_or_move_ctor_p (type, true))\n \tDECL_DELETED_FN (fn) = true;\n-      else if (classtype_has_user_copy_or_dtor (type))\n+      else if (classtype_has_depr_implicit_copy (type))\n \t/* The implicit definition of a copy constructor as defaulted is\n \t   deprecated if the class has a user-declared copy assignment operator\n \t   or a user-declared destructor. The implicit definition of a copy"}, {"sha": "98c1a748329df7795919465a00601ba40f20954f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -228,7 +228,8 @@ in the following sections.\n -fvisibility-ms-compat @gol\n -fext-numeric-literals @gol\n -Wabi=@var{n}  -Wabi-tag  -Wconversion-null  -Wctor-dtor-privacy @gol\n--Wdelete-non-virtual-dtor  -Wdeprecated-copy  -Wliteral-suffix @gol\n+-Wdelete-non-virtual-dtor  -Wdeprecated-copy  -Wdeprecated-copy-dtor @gol\n+-Wliteral-suffix @gol\n -Wmultiple-inheritance  -Wno-init-list-lifetime @gol\n -Wnamespaces  -Wnarrowing @gol\n -Wpessimizing-move  -Wredundant-move @gol\n@@ -3000,8 +3001,10 @@ by @option{-Wall}.\n @opindex Wno-deprecated-copy\n Warn that the implicit declaration of a copy constructor or copy\n assignment operator is deprecated if the class has a user-provided\n-copy constructor, copy assignment operator, or destructor, in C++11\n-and up.  This warning is enabled by @option{-Wall}.\n+copy constructor or copy assignment operator, in C++11 and up.  This\n+warning is enabled by @option{-Wextra}.  With\n+@option{-Wdeprecated-copy-dtor}, also deprecate if the class has a\n+user-provided destructor.\n \n @item -Wno-init-list-lifetime @r{(C++ and Objective-C++ only)}\n @opindex Winit-list-lifetime\n@@ -4407,6 +4410,7 @@ name is still supported, but the newer name is more descriptive.)\n \n @gccoptlist{-Wclobbered  @gol\n -Wcast-function-type  @gol\n+-Wdeprecated-copy @r{(C++ only)} @gol\n -Wempty-body  @gol\n -Wignored-qualifiers @gol\n -Wimplicit-fallthrough=3 @gol"}, {"sha": "bbb8130392532d5a4e513cb0a2e5f007405e68c2", "filename": "gcc/testsuite/g++.dg/cpp0x/depr-copy1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdepr-copy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdepr-copy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdepr-copy1.C?ref=5c8b3702e36a8792fa297f6b2b2cc865e08bb1b7", "patch": "@@ -6,7 +6,7 @@\n    of this International Standard, these implicit definitions could become\n    deleted (11.4).  */\n \n-// { dg-additional-options -Wdeprecated-copy }\n+// { dg-additional-options -Wdeprecated-copy-dtor }\n \n struct X\n {"}]}