{"sha": "bb94892a9a0adf8e824881fec03f570464384b31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5NDg5MmE5YTBhZGY4ZTgyNDg4MWZlYzAzZjU3MDQ2NDM4NGIzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-17T21:00:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-17T21:00:30Z"}, "message": "re PR c++/51186 (declaring main() with auto but without --std=c++11 gives inconsistent error messages)\n\n\tPR c++/51186\n\t* decl.c (grokdeclarator): Improve C++98 trailing return diagnostic.\n\nFrom-SVN: r181455", "tree": {"sha": "5af81fafefe9ab2cc29cc58c313fb344a16e5cd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af81fafefe9ab2cc29cc58c313fb344a16e5cd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb94892a9a0adf8e824881fec03f570464384b31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb94892a9a0adf8e824881fec03f570464384b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb94892a9a0adf8e824881fec03f570464384b31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb94892a9a0adf8e824881fec03f570464384b31/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6546dbc89bb0c2a4f0667101c9c72c1bb90b129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6546dbc89bb0c2a4f0667101c9c72c1bb90b129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6546dbc89bb0c2a4f0667101c9c72c1bb90b129"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "c5f2a7b4851cd2c520bd3bf4c357f46b81d400d8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bb94892a9a0adf8e824881fec03f570464384b31", "patch": "@@ -1,5 +1,8 @@\n 2011-11-17  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/51186\n+\t* decl.c (grokdeclarator): Improve C++98 trailing return diagnostic.\n+\n \tN3203\n \t* class.c (add_implicitly_declared_members): Update move\n \tconditions."}, {"sha": "b77963b72df26da9cdaca16d10b49df1dc743ac1", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=bb94892a9a0adf8e824881fec03f570464384b31", "patch": "@@ -9126,21 +9126,27 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t    if (!declarator->u.function.late_return_type)\n \t\t      {\n \t\t\terror (\"%qs function uses %<auto%> type specifier without\"\n-\t\t\t       \" late return type\", name);\n+\t\t\t       \" trailing return type\", name);\n \t\t\treturn error_mark_node;\n \t\t      }\n \t\t    else if (!is_auto (type))\n \t\t      {\n-\t\t\terror (\"%qs function with late return type has\"\n+\t\t\terror (\"%qs function with trailing return type has\"\n \t\t\t       \" %qT as its type rather than plain %<auto%>\",\n \t\t\t       name, type);\n \t\t\treturn error_mark_node;\n \t\t      }\n \t\t  }\n \t\telse if (declarator->u.function.late_return_type)\n \t\t  {\n-\t\t    error (\"%qs function with late return type not declared\"\n-\t\t\t   \" with %<auto%> type specifier\", name);\n+\t\t    if (cxx_dialect < cxx0x)\n+\t\t      /* Not using maybe_warn_cpp0x because this should\n+\t\t\t always be an error.  */\n+\t\t      error (\"trailing return type only available with \"\n+\t\t\t     \"-std=c++11 or -std=gnu++11\");\n+\t\t    else\n+\t\t      error (\"%qs function with trailing return type not \"\n+\t\t\t     \"declared with %<auto%> type specifier\", name);\n \t\t    return error_mark_node;\n \t\t  }\n \t      }"}, {"sha": "fa4ab0d59694ee9f1de2f8c4367cd885b4ecde88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bb94892a9a0adf8e824881fec03f570464384b31", "patch": "@@ -1,3 +1,9 @@\n+2011-11-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51186\n+\t* g++.dg/cpp0x/auto27.C: New.\n+\t* g++.dg/cpp0x/trailing2.C: Adjust messages.\n+\n 2011-11-17  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* gcc.dg/atomic-generic-aux.c (__atomic_compare_exchange): Fail if "}, {"sha": "c1041df54b0ad22b4c6ec6bd11f9d700ef286447", "filename": "gcc/testsuite/g++.dg/cpp0x/auto27.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto27.C?ref=bb94892a9a0adf8e824881fec03f570464384b31", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/51186\n+\n+auto main()->int\t       // { dg-error \"std=\" \"\" { target c++98 } }\n+\t\t\t       // { dg-error \"auto\" \"\" { target c++98 } 3 }\n+\t\t\t       // { dg-error \"no type\" \"\" { target c++98 } 3 }\n+{ }"}, {"sha": "5f5af22947ffd7f956ee4162509b8f96b4dd1063", "filename": "gcc/testsuite/g++.dg/cpp0x/trailing2.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb94892a9a0adf8e824881fec03f570464384b31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftrailing2.C?ref=bb94892a9a0adf8e824881fec03f570464384b31", "patch": "@@ -3,14 +3,14 @@\n // { dg-options \"-std=c++0x\" }\n \n auto f1 () -> int;\n-auto f2 ();\t\t// { dg-error \"without late return type\" }\n-int f3 () -> int;\t// { dg-error \"late return type\" }\n-auto *f4 () -> int;\t// { dg-error \"late return type\" }\n+auto f2 ();\t\t// { dg-error \"without trailing return type\" }\n+int f3 () -> int;\t// { dg-error \"trailing return type\" }\n+auto *f4 () -> int;\t// { dg-error \"trailing return type\" }\n \n struct A\n {\n   auto f5 () const -> int;\n-  auto f6 ();\t\t// { dg-error \"without late return type\" }\n-  int f7 () -> int;\t// { dg-error \"late return type\" }\n-  auto *f8 () -> int;\t// { dg-error \"late return type\" }\n+  auto f6 ();\t\t// { dg-error \"without trailing return type\" }\n+  int f7 () -> int;\t// { dg-error \"trailing return type\" }\n+  auto *f8 () -> int;\t// { dg-error \"trailing return type\" }\n };"}]}