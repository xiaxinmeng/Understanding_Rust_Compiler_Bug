{"sha": "2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmZDY3ZWQxOWNiYWU2Y2QzMTEyZjlmOWQ5YmI4MWMxNDRiYWEyNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-05-17T21:28:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-05-17T21:28:11Z"}, "message": "20030222-1.c: Skip on ptx.\n\n\t* gcc.c-torture/execute/20030222-1.c: Skip on ptx.\n\t* gcc.dg/pr68671.c: Fix ptx xfail-if.\n\t* gcc.dg/torture/pr54261-1.c: Allocate atomic var statically.\n\t* gcc.dg/torture/type-generic-1.c: Enable UNSAFE for ptx.\n\nFrom-SVN: r236346", "tree": {"sha": "14ddb504ba0a30cb893bee3e61e089fec0a09ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14ddb504ba0a30cb893bee3e61e089fec0a09ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1988b2c22a3afda962e12ccf22ccd23398dce220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1988b2c22a3afda962e12ccf22ccd23398dce220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1988b2c22a3afda962e12ccf22ccd23398dce220"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "e803bd634348e3a527edd82efda9dc5d912579ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "patch": "@@ -1,3 +1,10 @@\n+2016-05-17  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.c-torture/execute/20030222-1.c: Skip on ptx.\n+\t* gcc.dg/pr68671.c: Fix ptx xfail-if.\n+\t* gcc.dg/torture/pr54261-1.c: Allocate atomic var statically.\n+\t* gcc.dg/torture/type-generic-1.c: Enable UNSAFE for ptx.\n+\n 2016-05-17  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.target/nvptx/abi-vararg-3.c: New."}, {"sha": "a820cf206e1a62711abdd6d1bafdcb78b2bfb4fc", "filename": "gcc/testsuite/gcc.c-torture/execute/20030222-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20030222-1.c?ref=2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "patch": "@@ -4,6 +4,7 @@\n    actually truncated to int, in case a single register is wide enough\n    for a long long.  */\n /* { dg-skip-if \"asm would require extra shift-left-4-byte\" { spu-*-* } \"*\" \"\" } */\n+/* { dg-skip-if \"asm requires register allocation\" { nvptx-*-* } \"*\" \"\" } */\n #include <limits.h>\n \n void"}, {"sha": "0950156181758afbb77533fe3aee0a162d093278", "filename": "gcc/testsuite/gcc.dg/pr68671.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68671.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68671.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68671.c?ref=2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/68671 */\n /* { dg-do run } */\n /* { dg-options \" -O2 -fno-tree-dce\" } */\n-/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"\" } { \"\" } } */\n+/* { dg-xfail-if \"ptxas crashes\" { nvptx-*-* } { \"*\" } { \"\" } } */\n \n volatile int a = -1;\n volatile int b;"}, {"sha": "071b3232d46af135111c89c26908bed44978065f", "filename": "gcc/testsuite/gcc.dg/torture/pr54261-1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54261-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54261-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54261-1.c?ref=2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "patch": "@@ -32,7 +32,10 @@ void g (int *at, int val)\n \n int main(void)\n {\n-  int x = 41;\n+  /* On PTX it is not valid to perform atomic operations on auto\n+     variables, which end up in .local.  Making this static places it\n+     in .global.  */\n+  static int x = 41;\n   int a = 1;\n   g (&x, a);\n "}, {"sha": "ef32b78c1a59d32cdffc60b0bf0066c124ca6537", "filename": "gcc/testsuite/gcc.dg/torture/type-generic-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftype-generic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efd67ed19cbae6cd3112f9f9d9bb81c144baa24/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftype-generic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ftype-generic-1.c?ref=2efd67ed19cbae6cd3112f9f9d9bb81c144baa24", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-skip-if \"No Inf/NaN support\" { spu-*-* } } */\n-/* { dg-options \"-DUNSAFE\" { target tic6x*-*-* visium-*-* } } */\n+/* { dg-options \"-DUNSAFE\" { target tic6x*-*-* visium-*-* nvptx-*-* } } */\n /* { dg-add-options ieee } */\n \n #include \"../tg-tests.h\""}]}