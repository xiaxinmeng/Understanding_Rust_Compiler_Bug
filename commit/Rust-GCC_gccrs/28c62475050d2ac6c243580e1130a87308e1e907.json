{"sha": "28c62475050d2ac6c243580e1130a87308e1e907", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhjNjI0NzUwNTBkMmFjNmMyNDM1ODBlMTEzMGE4NzMwOGUxZTkwNw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-06T00:16:22Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-06T00:16:22Z"}, "message": "Daily bump.", "tree": {"sha": "faca920453e9783e1ec9ec2fd2b8a3cc6d72a327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faca920453e9783e1ec9ec2fd2b8a3cc6d72a327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28c62475050d2ac6c243580e1130a87308e1e907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c62475050d2ac6c243580e1130a87308e1e907", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c62475050d2ac6c243580e1130a87308e1e907", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c62475050d2ac6c243580e1130a87308e1e907/comments", "author": null, "committer": null, "parents": [{"sha": "a0864ce8662bb9d715b51513697309f198f1da19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0864ce8662bb9d715b51513697309f198f1da19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0864ce8662bb9d715b51513697309f198f1da19"}], "stats": {"total": 118, "additions": 117, "deletions": 1}, "files": [{"sha": "9fc6e165fc1016f2455f915dc244d81ef3592baa", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,12 @@\n+2021-06-05  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* MAINTAINERS: Adjust my entry in the DCO section so that it does\n+\tnot trigger testsuite failures.\n+\n+2021-06-05  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* MAINTAINERS: Add myself to DCO section with both email addresses.\n+\n 2021-06-03  Jason Merrill  <jason@redhat.com>\n \n \t* MAINTAINERS: Add DCO version number."}, {"sha": "d78b97cc6a81bf00d7776aabe14e47a7ba792141", "filename": "gcc/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,44 @@\n+2021-06-05  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/sh/sh.md (doloop_end_split): Fix empty split condition.\n+\n+2021-06-05  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/sparc/sparc.md (*snedi<W:mode>_zero_vis3,\n+\t*neg_snedi<W:mode>_zero_subxc, *plus_snedi<W:mode>_zero,\n+\t*plus_plus_snedi<W:mode>_zero, *minus_snedi<W:mode>_zero,\n+\t*minus_minus_snedi<W:mode>_zero): Fix empty split condition.\n+\n+2021-06-05  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/or1k/or1k.md (*movdi): Fix empty split condition.\n+\n+2021-06-05  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/mips/mips.md (<anonymous>, bswapsi2, bswapdi2): Fix empty\n+\tsplit condition.\n+\n+2021-06-05  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/m68k/m68k.md (*zero_extend_inc, *zero_extend_dec,\n+\t*zero_extendsidi2): Fix empty split condition.\n+\n+2021-06-05  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* config/h8300/addsub.md: Fix split condition in define_insn_and_split\n+\tpatterns.\n+\t* config/h8300/bitfield.md: Likewise.\n+\t* config/h8300/combiner.md: Likewise.\n+\t* config/h8300/divmod.md: Likewise.\n+\t* config/h8300/extensions.md: Likewise.\n+\t* config/h8300/jumpcall.md: Likewise.\n+\t* config/h8300/movepush.md: Likewise.\n+\t* config/h8300/multiply.md: Likewise.\n+\t* config/h8300/other.md: Likewise.\n+\t* config/h8300/shiftrotate.md: Likewise.\n+\t* config/h8300/logical.md: Likewise.  Fix split pattern to use\n+\tcode iterator that somehow slipped through.\n+\n 2021-06-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/100905"}, {"sha": "09dbf4d31404b224b7fe982df4c5e4acfae3d948", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1 +1 @@\n-20210605\n+20210606"}, {"sha": "12b932f5ced97f4417cabada27ef664db5fc3f0b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,37 @@\n+2021-06-05  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100120\n+\tPR fortran/100816\n+\tPR fortran/100818\n+\tPR fortran/100819\n+\tPR fortran/100821\n+\t* trans-array.c (gfc_get_array_span): rework the way character\n+\tarray \"span\" was calculated.\n+\t(gfc_conv_expr_descriptor): improve handling of character sections\n+\tand unlimited polymorphic objects.\n+\t* trans-expr.c (gfc_get_character_len): new function to calculate\n+\tcharacter string length.\n+\t(gfc_get_character_len_in_bytes): new function to calculate\n+\tcharacter string length in bytes.\n+\t(gfc_conv_scalar_to_descriptor): add call to set the \"span\".\n+\t(gfc_trans_pointer_assignment): set \"_len\" and antecipate the\n+\tinitialization of the deferred character length hidden argument.\n+\t* trans-intrinsic.c (gfc_conv_associated): set \"force_no_tmp\" to\n+\tavoid the creation of a temporary.\n+\t* trans-types.c (gfc_get_dtype_rank_type): rework type detection\n+\tso that unlimited polymorphic objects get proper type infomation,\n+\talso important for bind(c).\n+\t(gfc_get_dtype): add argument to pass the rank if necessary.\n+\t(gfc_get_array_type_bounds): cosmetic change to have character\n+\tarrays called character instead of unknown.\n+\t* trans-types.h (gfc_get_dtype): modify prototype.\n+\t* trans.c (get_array_span): rework the way character array \"span\"\n+\twas calculated.\n+\t* trans.h (gfc_get_character_len): new prototype.\n+\t(gfc_get_character_len_in_bytes): new prototype.\n+\tAdd \"unlimited_polymorphic\" flag to \"gfc_se\" type to signal when\n+\texpression carries an unlimited polymorphic object.\n+\n 2021-06-04  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99839"}, {"sha": "5e19bb9ce68e9d1d344590fe3eb6820dd9f61769", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,14 @@\n+2021-06-05  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100120\n+\tPR fortran/100816\n+\tPR fortran/100818\n+\tPR fortran/100819\n+\tPR fortran/100821\n+\t* gfortran.dg/PR100120.f90: New test.\n+\t* gfortran.dg/character_workout_1.f90: New test.\n+\t* gfortran.dg/character_workout_4.f90: New test.\n+\n 2021-06-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR middle-end/100905"}, {"sha": "f4f5ad41891b49ae62a433088f37c14626311469", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,11 @@\n+2021-06-05  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n+\n+\tPR fortran/100120\n+\t* intrinsics/associated.c (associated): have associated verify if\n+\tthe \"span\" matches insted of the \"elem_len\".\n+\t* libgfortran.h (GFC_DESCRIPTOR_SPAN): add macro to retrive the\n+\tdescriptor \"span\".\n+\n 2021-05-22  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/98301"}, {"sha": "1c9138861bdffff89120f6db40e3914f79f24bb3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,10 @@\n+2021-06-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/100734\n+\t* configure.ac: Use libiberty snprintf and vsnprintf on\n+\thppa*-*-hpux*.\n+\t* configure: Regenerate.\n+\n 2021-05-06  Tom Tromey  <tom@tromey.com>\n \n \t* hashtab.c (htab_eq_string): New function."}, {"sha": "69084e1095851276f3d047e2541250c084ccd79d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28c62475050d2ac6c243580e1130a87308e1e907/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28c62475050d2ac6c243580e1130a87308e1e907/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=28c62475050d2ac6c243580e1130a87308e1e907", "patch": "@@ -1,3 +1,9 @@\n+2021-06-05  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100824\n+\t* include/bits/ranges_base.h (_SSize): Return signed type.\n+\t* testsuite/std/ranges/access/ssize.cc: Check with __int128.\n+\n 2021-06-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/ranges_base.h (_SSize): Return the result of"}]}