{"sha": "3d947f1f27188e3a61ba7f42399b1c348469fe13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q5NDdmMWYyNzE4OGUzYTYxYmE3ZjQyMzk5YjFjMzQ4NDY5ZmUxMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-07T14:29:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-07T17:22:14Z"}, "message": "middle-end/94479 - fix gimplification of address\n\nWhen gimplifying an address operand we may expose an indirect\nref via DECL_VALUE_EXPR for example.  This is dealt with in the\ncode already but it fails to consider that INDIRECT_REFs get\ngimplified to MEM_REFs.\n\nFixed which makes the ICE observed on x86_64-netbsd go away.\n\n2020-04-07  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/94479\n\t* gimplify.c (gimplify_addr_expr): Also consider generated\n\tMEM_REFs.\n\n\t* gcc.dg/torture/pr94479.c: New testcase.", "tree": {"sha": "8281660a504c053f879eb006297334717cb893bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8281660a504c053f879eb006297334717cb893bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d947f1f27188e3a61ba7f42399b1c348469fe13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d947f1f27188e3a61ba7f42399b1c348469fe13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d947f1f27188e3a61ba7f42399b1c348469fe13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d947f1f27188e3a61ba7f42399b1c348469fe13/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57391ddaf39f7cb85825c32e83feb1435889da51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57391ddaf39f7cb85825c32e83feb1435889da51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57391ddaf39f7cb85825c32e83feb1435889da51"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "a1ab9fb4ef3c6e38ad2bb378f11ebf075dce9826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d947f1f27188e3a61ba7f42399b1c348469fe13", "patch": "@@ -1,3 +1,9 @@\n+2020-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94479\n+\t* gimplify.c (gimplify_addr_expr): Also consider generated\n+\tMEM_REFs.\n+\n 2020-04-07  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/arm/arm_mve.h: Add C++ polymorphism and fix preserve MACROs."}, {"sha": "8cdfae26510710b238f9be4536b0d90f22937911", "filename": "gcc/gimplify.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=3d947f1f27188e3a61ba7f42399b1c348469fe13", "patch": "@@ -6181,7 +6181,9 @@ gimplify_addr_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \n       /* For various reasons, the gimplification of the expression\n \t may have made a new INDIRECT_REF.  */\n-      if (TREE_CODE (op0) == INDIRECT_REF)\n+      if (TREE_CODE (op0) == INDIRECT_REF\n+\t  || (TREE_CODE (op0) == MEM_REF\n+\t      && integer_zerop (TREE_OPERAND (op0, 1))))\n \tgoto do_indirect_ref;\n \n       mark_addressable (TREE_OPERAND (expr, 0));"}, {"sha": "71b5a14bcbe57b2d01084560a49b42f1ab0345f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d947f1f27188e3a61ba7f42399b1c348469fe13", "patch": "@@ -1,3 +1,8 @@\n+2020-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94479\n+\t* gcc.dg/torture/pr94479.c: New testcase.\n+\n 2020-04-01  Fritz Reese  <foreese@gcc.gnu.org>\n \n \t PR fortran/93871"}, {"sha": "53285bb4f385f95bb622be29f6d9230c2f763974", "filename": "gcc/testsuite/gcc.dg/torture/pr94479.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94479.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d947f1f27188e3a61ba7f42399b1c348469fe13/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94479.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94479.c?ref=3d947f1f27188e3a61ba7f42399b1c348469fe13", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-stack-check \"specific\" } */\n+/* { dg-additional-options \"-fstack-check -w\" } */\n+\n+int a;\n+struct b {\n+    char c;\n+    void *d;  \n+};\n+struct b e() {\n+    struct b f[] = {{}, \"\", f, a};\n+}"}]}