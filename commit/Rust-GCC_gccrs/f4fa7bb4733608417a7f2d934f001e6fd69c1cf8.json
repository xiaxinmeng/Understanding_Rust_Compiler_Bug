{"sha": "f4fa7bb4733608417a7f2d934f001e6fd69c1cf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmYTdiYjQ3MzM2MDg0MTdhN2YyZDkzNGYwMDFlNmZkNjljMWNmOA==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-06-01T10:56:28Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-06-01T10:56:28Z"}, "message": "[ARM/AArch64 Testsuite] Cleanup advsimd-intrinsics.exp, removing unnecessary loop\n\n\t* gcc.target/aarch64/advsimd-intrinsics/advsimd-intrinsics.exp: Pass\n\twildcard to gcc-dg-runtest; remove loop and unnecessary initialization.\n\nFrom-SVN: r223928", "tree": {"sha": "229d18678ff090a03d6e3993c9b2a81b6655ef74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/229d18678ff090a03d6e3993c9b2a81b6655ef74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8/comments", "author": null, "committer": null, "parents": [{"sha": "29764870aaa5da8f73c7c25c0aca5a251beb4103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29764870aaa5da8f73c7c25c0aca5a251beb4103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29764870aaa5da8f73c7c25c0aca5a251beb4103"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "239cf4908c7a87422f7ba23ff4d322b128574ea0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4fa7bb4733608417a7f2d934f001e6fd69c1cf8", "patch": "@@ -1,3 +1,8 @@\n+2015-06-01  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/advsimd-intrinsics.exp: Pass\n+\twildcard to gcc-dg-runtest; remove loop and unnecessary initialization.\n+\n 2015-06-01  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66280"}, {"sha": "4679a73cd9e770a0a7349f46eccfcaeb47d933c5", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/advsimd-intrinsics.exp", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fadvsimd-intrinsics.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fa7bb4733608417a7f2d934f001e6fd69c1cf8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fadvsimd-intrinsics.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fadvsimd-intrinsics.exp?ref=f4fa7bb4733608417a7f2d934f001e6fd69c1cf8", "patch": "@@ -27,8 +27,6 @@ load_lib gcc-dg.exp\n \n # Initialize `dg'.\n load_lib c-torture.exp\n-load_lib target-supports.exp\n-load_lib torture-options.exp\n \n dg-init\n \n@@ -48,29 +46,15 @@ if {[istarget arm*-*-*]} then {\n     }\n }\n \n-torture-init\n set-torture-options $C_TORTURE_OPTIONS {{}} $LTO_TORTURE_OPTIONS\n \n # Make sure Neon flags are provided, if necessary.\n set additional_flags [add_options_for_arm_neon \"\"]\n \n # Main loop.\n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n-    }\n-\n-    # runtest_file_p is already run above, and the code below can run\n-    # runtest_file_p again, make sure everything for this test is\n-    # performed if the above runtest_file_p decided this runtest\n-    # instance should execute the test\n-    gcc_parallel_test_enable 0\n-    gcc-dg-runtest $src \"\" $additional_flags\n-    gcc_parallel_test_enable 1\n-}\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \\\n+\t       \"\" ${additional_flags}\n \n # All done.\n set dg-do-what-default ${save-dg-do-what-default}\n-torture-finish\n dg-finish"}]}