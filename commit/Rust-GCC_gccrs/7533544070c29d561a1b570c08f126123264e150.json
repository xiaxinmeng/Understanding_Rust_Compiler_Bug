{"sha": "7533544070c29d561a1b570c08f126123264e150", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUzMzU0NDA3MGMyOWQ1NjFhMWI1NzBjMDhmMTI2MTIzMjY0ZTE1MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-01-26T12:44:58Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-01-26T12:44:58Z"}, "message": "* cse.c (fold_rtx): Call equiv_constant only when necessary.\n\nFrom-SVN: r94260", "tree": {"sha": "75690121c889346e831191ed7ca5ee1886e91923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75690121c889346e831191ed7ca5ee1886e91923"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7533544070c29d561a1b570c08f126123264e150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7533544070c29d561a1b570c08f126123264e150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7533544070c29d561a1b570c08f126123264e150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7533544070c29d561a1b570c08f126123264e150/comments", "author": null, "committer": null, "parents": [{"sha": "4018444567e39b5e06f07948de9031476dbb7f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4018444567e39b5e06f07948de9031476dbb7f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4018444567e39b5e06f07948de9031476dbb7f1d"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "202edce6dc1d8264fee85c2b4580230389a8a461", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7533544070c29d561a1b570c08f126123264e150/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7533544070c29d561a1b570c08f126123264e150/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7533544070c29d561a1b570c08f126123264e150", "patch": "@@ -1,3 +1,7 @@\n+2005-01-26  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cse.c (fold_rtx): Call equiv_constant only when necessary.\n+\n 2005-01-26  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* function.c (expand_function_end): If current_function_calls_alloca,"}, {"sha": "febf243f9326832b9e7dff941a1a94012cf45f14", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7533544070c29d561a1b570c08f126123264e150/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7533544070c29d561a1b570c08f126123264e150/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=7533544070c29d561a1b570c08f126123264e150", "patch": "@@ -3877,8 +3877,6 @@ fold_rtx (rtx x, rtx insn)\n \n \t  code = find_comparison_args (code, &folded_arg0, &folded_arg1,\n \t\t\t\t       &mode_arg0, &mode_arg1);\n-\t  const_arg0 = equiv_constant (folded_arg0);\n-\t  const_arg1 = equiv_constant (folded_arg1);\n \n \t  /* If the mode is VOIDmode or a MODE_CC mode, we don't know\n \t     what kinds of things are being compared, so we can't do\n@@ -3887,6 +3885,9 @@ fold_rtx (rtx x, rtx insn)\n \t  if (mode_arg0 == VOIDmode || GET_MODE_CLASS (mode_arg0) == MODE_CC)\n \t    break;\n \n+\t  const_arg0 = equiv_constant (folded_arg0);\n+\t  const_arg1 = equiv_constant (folded_arg1);\n+\n \t  /* If we do not now have two constants being compared, see\n \t     if we can nevertheless deduce some things about the\n \t     comparison.  */"}]}