{"sha": "eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFkYTVmZDFjZjQxNzk1ODZiMTI2YTRhNmNmNmEwZTFmNmU2OWEwMQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2010-10-05T09:32:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-05T09:32:05Z"}, "message": "prj-nmsc.adb (Expand_Subdirectory_Pattern): Check that the prefix in a \"**\" pattern properly exists...\n\n2010-10-05  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb (Expand_Subdirectory_Pattern): Check that the prefix in\n\ta \"**\" pattern properly exists, and report an error otherwise.\n\n2010-10-05  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-env.ads: Use GNAT.OS_Lib rather than System.OS_Lib.\n\nFrom-SVN: r164971", "tree": {"sha": "572bd57b934c15d98ffb4ca02ad17e843212d168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/572bd57b934c15d98ffb4ca02ad17e843212d168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5be6c3a9dd0b3a12c15d729629a574e1967e58d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5be6c3a9dd0b3a12c15d729629a574e1967e58d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5be6c3a9dd0b3a12c15d729629a574e1967e58d"}], "stats": {"total": 186, "additions": 87, "deletions": 99}, "files": [{"sha": "13f3fbe220289b2a2324b4112234493e2fedfda1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "patch": "@@ -1,3 +1,12 @@\n+2010-10-05  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb (Expand_Subdirectory_Pattern): Check that the prefix in\n+\ta \"**\" pattern properly exists, and report an error otherwise.\n+\n+2010-10-05  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-env.ads: Use GNAT.OS_Lib rather than System.OS_Lib.\n+\n 2010-10-05  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-nmsc.adb, prj-err.adb (Expand_Subdirectory_Pattern): New"}, {"sha": "d4e3eb5ca4262833d2d825b463dd7ce8c98ab897", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "patch": "@@ -27,7 +27,7 @@\n --  to the environment (configuration pragma files, path files, mapping files).\n \n with GNAT.Dynamic_HTables;\n-with System.OS_Lib;\n+with GNAT.OS_Lib;\n \n package Prj.Env is\n \n@@ -216,7 +216,7 @@ private\n       Equal      => \"=\");\n \n    type Project_Search_Path is record\n-      Path : System.OS_Lib.String_Access;\n+      Path : GNAT.OS_Lib.String_Access;\n       --  As a special case, if the first character is '#:\" or this variable is\n       --  unset, this means that the PATH has not been fully initialized yet\n       --  (although subprograms above will properly take care of that)."}, {"sha": "0849a90db475ed5cc3901bf5bdcd201c0959ab1d", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 76, "deletions": 97, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=eada5fd1cf4179586b126a4a6cf6a0e1f6e69a01", "patch": "@@ -6692,9 +6692,6 @@ package body Prj.Nmsc is\n       Resolve_Links : Boolean)\n    is\n       pragma Unreferenced (Search_For);\n-      Project_Dir : constant String :=\n-        Get_Name_String (Project.Directory.Display_Name);\n-\n       package Recursive_Dirs is new GNAT.Dynamic_HTables.Simple_HTable\n         (Header_Num => Header_Num,\n          Element    => Boolean,\n@@ -6715,6 +6712,16 @@ package body Prj.Nmsc is\n       procedure Recursive_Find_Dirs (Normalized_Path : String; Rank : Natural);\n       --  Search all the subdirectories (recursively) of Path\n \n+      procedure Check_Directory_And_Subdirs\n+        (Directory       : String;\n+         Include_Subdirs : Boolean;\n+         Rank            : Natural;\n+         Location        : Source_Ptr);\n+      --  Make sur that Directory exists (and if not report an error/warning\n+      --  message depending on the flags.\n+      --  Calls Callback for Directory itself and all its subdirectories if\n+      --  Include_Subdirs is True).\n+\n       -------------------------\n       -- Recursive_Find_Dirs --\n       -------------------------\n@@ -6788,6 +6795,64 @@ package body Prj.Nmsc is\n             null;\n       end Recursive_Find_Dirs;\n \n+      ---------------------------------\n+      -- Check_Directory_And_Subdirs --\n+      ---------------------------------\n+\n+      procedure Check_Directory_And_Subdirs\n+        (Directory       : String;\n+         Include_Subdirs : Boolean;\n+         Rank            : Natural;\n+         Location        : Source_Ptr)\n+      is\n+         Dir        : File_Name_Type;\n+         Path_Name  : Path_Information;\n+         Dir_Exists : Boolean;\n+         Has_Error  : Boolean := False;\n+      begin\n+         Name_Len := Directory'Length;\n+         Name_Buffer (1 .. Name_Len) := Directory;\n+         Dir := Name_Find;\n+\n+         Locate_Directory\n+           (Project     => Project,\n+            Name        => Dir,\n+            Path        => Path_Name,\n+            Dir_Exists  => Dir_Exists,\n+            Data        => Data,\n+            Must_Exist  => False);\n+\n+         if not Dir_Exists then\n+            Err_Vars.Error_Msg_File_1 := Dir;\n+            Error_Or_Warning\n+              (Data.Flags, Data.Flags.Missing_Source_Files,\n+               \"{ is not a valid directory\", Location, Project);\n+            Has_Error := Data.Flags.Missing_Source_Files = Error;\n+         end if;\n+\n+         if not Has_Error then\n+            --  Links have been resolved if necessary, and Path_Name\n+            --  always ends with a directory separator.\n+\n+            if Include_Subdirs then\n+               if Current_Verbosity = High then\n+                  Write_Str (\"Looking for all subdirectories of \"\"\");\n+                  Write_Str (Directory);\n+                  Write_Line (\"\"\"\");\n+               end if;\n+\n+               Recursive_Find_Dirs (Get_Name_String (Path_Name.Name), Rank);\n+\n+               if Current_Verbosity = High then\n+                  Write_Line (\"End of looking for source directories.\");\n+               end if;\n+\n+            else\n+               Callback (Path_Name.Name, Path_Name.Display_Name, Rank);\n+            end if;\n+         end if;\n+      end Check_Directory_And_Subdirs;\n+\n       ------------------\n       -- Find_Pattern --\n       ------------------\n@@ -6809,104 +6874,18 @@ package body Prj.Nmsc is\n            and then (Pattern (Pattern'Last - 2) = '/'\n                      or else Pattern (Pattern'Last - 2) = Directory_Separator)\n          then\n-            Name_Len := Pattern'Length - 3;\n-\n-            if Name_Len = 0 then\n-\n+            if Pattern'Length = 3 then\n                --  Case of \"/**\": all directories in file system\n-\n-               Name_Len := 1;\n-               Name_Buffer (1) := Pattern (Pattern'First);\n-\n+               Check_Directory_And_Subdirs\n+                 (Pattern (Pattern'First .. Pattern'First),\n+                  True, Rank, Location);\n             else\n-               Name_Buffer (1 .. Name_Len) :=\n-                 Pattern (Pattern'First .. Pattern'Last - 3);\n-            end if;\n-\n-            if Current_Verbosity = High then\n-               Write_Str (\"Looking for all subdirectories of \"\"\");\n-               Write_Str (Name_Buffer (1 .. Name_Len));\n-               Write_Line (\"\"\"\");\n+               Check_Directory_And_Subdirs\n+                 (Pattern (Pattern'First .. Pattern'Last - 3),\n+                  True, Rank, Location);\n             end if;\n-\n-            declare\n-               Base_Dir : constant File_Name_Type := Name_Find;\n-               Root_Dir : constant String :=\n-                 Normalize_Pathname\n-                   (Name          => Name_Buffer (1 .. Name_Len),\n-                    Directory     => Project_Dir,\n-                    Resolve_Links => Resolve_Links);\n-               Has_Error : Boolean := False;\n-\n-            begin\n-               if Root_Dir'Length = 0 then\n-                  Err_Vars.Error_Msg_File_1 := Base_Dir;\n-                  Error_Or_Warning\n-                    (Data.Flags, Data.Flags.Missing_Source_Files,\n-                     \"{ is not a valid directory.\", Location, Project);\n-                  Has_Error := Data.Flags.Missing_Source_Files = Error;\n-               end if;\n-\n-               if not Has_Error then\n-\n-                  --  We have an existing directory, we register it and all of\n-                  --  its subdirectories.\n-\n-                  if Current_Verbosity = High then\n-                     Write_Line (\"Looking for source directories:\");\n-                  end if;\n-\n-                  if Root_Dir (Root_Dir'Last) /= Directory_Separator then\n-                     Recursive_Find_Dirs\n-                       (Root_Dir & Directory_Separator, Rank);\n-                  else\n-                     Recursive_Find_Dirs (Root_Dir, Rank);\n-                  end if;\n-\n-                  if Current_Verbosity = High then\n-                     Write_Line (\"End of looking for source directories.\");\n-                  end if;\n-               end if;\n-            end;\n-\n-            --  We have a single directory\n-\n          else\n-            declare\n-               Directory  : File_Name_Type;\n-               Path_Name  : Path_Information;\n-               Dir_Exists : Boolean;\n-               Has_Error  : Boolean := False;\n-\n-            begin\n-               Name_Len := Pattern'Length;\n-               Name_Buffer (1 .. Name_Len) := Pattern;\n-               Directory := Name_Find;\n-\n-               Locate_Directory\n-                 (Project     => Project,\n-                  Name        => Directory,\n-                  Path        => Path_Name,\n-                  Dir_Exists  => Dir_Exists,\n-                  Data        => Data,\n-                  Must_Exist  => False);\n-\n-               if not Dir_Exists then\n-                  Err_Vars.Error_Msg_File_1 := Directory;\n-                  Error_Or_Warning\n-                    (Data.Flags, Data.Flags.Missing_Source_Files,\n-                     \"{ is not a valid directory\", Location, Project);\n-                  Has_Error := Data.Flags.Missing_Source_Files = Error;\n-               end if;\n-\n-               if not Has_Error then\n-\n-                  --  Links have been resolved if necessary, and Path_Name\n-                  --  always ends with a directory separator.\n-\n-                  Callback (Path_Name.Name, Path_Name.Display_Name, Rank);\n-               end if;\n-            end;\n+            Check_Directory_And_Subdirs (Pattern, False, Rank, Location);\n          end if;\n       end Find_Pattern;\n "}]}