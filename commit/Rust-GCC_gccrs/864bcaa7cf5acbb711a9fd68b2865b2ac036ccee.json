{"sha": "864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY0YmNhYTdjZjVhY2JiNzExYTlmZDY4YjI4NjViMmFjMDM2Y2NlZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-15T15:27:11Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-15T15:27:11Z"}, "message": "cse.c (canon_hash): Handle PRE_MODIFY/POST_MODIFY.\n\n        * cse.c (canon_hash): Handle PRE_MODIFY/POST_MODIFY.\n        (cse_insn): Likewise.\n        (addr_affects_sp_p): Likewise.\n        * expr.c (move_by_pieces): Likewise.\n        (clear_by_pieces): Likewise.\n        * gcse.c (oprs_unchanged_p): Likewise.\n        * haifa-sched.c (sched_analyze_2): Likewise.\n        * recog.c (offsettable_address_p): Likewise.\n        * regclass.c (record_address_regs): Likewise.\n        * reload.c (find_reusable_reload): Likewise.\n        (push_reload): Likewise.\n        (operands_match_p): Likewise.\n        (decompose): Likewise.\n        (find_reloads_address_1): Likewise.\n        (find_inc_amount): Likewise.\n        * reload1.c (elimination_effects): Likewise.\n        * resource.c (mark_set_resources): Likewise.\n        * flow.c (attempt_auto_inc): New function; mostly broken out\n        of find_auto_inc.\n        (find_auto_inc): Split into two functions and enhanced to\n        generate POST_MODIFY.\n        * rtl.def (PRE_MODIFY, POST_MODIFY): Adjust comment.\n        * rtl.h (count_all_occurrences):  Declare.\n        (HAVE_{PRE,POST}_MODIFY_{DISP,REG}): Provide default of 0 if not\n        defined.\n        * rtlanal.c (count_all_occurrences): New function.\n        * tm.texi (HAVE_POST_MODIFY_DISP, HAVE_PRE_MODIFY_DISP,\n        HAVE_POST_MODIFY_REG, HAVE_PRE_MODIFY_REG): Document.\n\n        * config/ia64/ia64-protos.h (destination_operand): Declare.\n        * config/ia64/ia64.c (destination_operand): New function.\n        (ia64_print_operand): Handle POST_MODIFY.\n        (rtx_needs_barrier): Likewise.\n        * config/ia64/ia64.h (HAVE_POST_MODIFY_DISP): Define to 1.\n        (HAVE_POST_MODIFY_REG): Define to 1.\n        (MAX_REGS_PER_ADDRESS): Change to 2.\n        (GO_IF_LEGITIMATE_ADDRESS): Accept POST_MODIFY too.\n        (LEGITIMATE_ADDRESS_REG): New helper macro.\n        (LEGITIMATE_ADDRESS_DISP): Likewise.\n        (PREDICATE_CODES): Add entry for destination_operand.\n        * config/ia64/ia64.md (all mov patterns): Use destination_operand\n        predicate for operand 0.\nRestoring tm.texi after corruption.\n\nFrom-SVN: r35713", "tree": {"sha": "57cc6bfd778d9916332a7c8d2c15ed158aa440cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57cc6bfd778d9916332a7c8d2c15ed158aa440cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee/comments", "author": null, "committer": null, "parents": [{"sha": "980e2067790a3972283b3eab5923802ef92bc185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980e2067790a3972283b3eab5923802ef92bc185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980e2067790a3972283b3eab5923802ef92bc185"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "468e8cfd0c56aa57ec205c74f9530df9bb094902", "filename": "gcc/tm.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/864bcaa7cf5acbb711a9fd68b2865b2ac036ccee/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=864bcaa7cf5acbb711a9fd68b2865b2ac036ccee", "patch": "@@ -4289,6 +4289,26 @@ A C expression that is nonzero the machine supports post-increment addressing.\n @itemx HAVE_PRE_DECREMENT\n Similar for other kinds of addressing.\n \n+@findex HAVE_POST_MODIFY_DISP\n+@item HAVE_POST_MODIFY_DISP\n+Define this macro if the machine supports post-modify addressing\n+with a constant displacement.\n+\n+@findex HAVE_PRE_MODIFY_DISP\n+@item HAVE_PRE_MODIFY_DISP\n+Define this macro if the machine supports pre-modify addressing\n+with a constant displacement.\n+\n+@findex HAVE_POST_MODIFY_REG\n+@item HAVE_POST_MODIFY_REG\n+Define this macro if the machine supports post-modify addressing\n+by the contents of a register.\n+\n+@findex HAVE_PRE_MODIFY_REG\n+@item HAVE_PRE_MODIFY_REG\n+Define this macro if the machine supports pre-modify addressing\n+by the contents of a register.\n+\n @findex CONSTANT_ADDRESS_P\n @item CONSTANT_ADDRESS_P (@var{x})\n A C expression that is 1 if the RTX @var{x} is a constant which"}]}