{"sha": "e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "node_id": "C_kwDOANBUbNoAKGU3MzEwZTI0YjFjMGNhNjdiMWJiNTA3YzEzMzBiMmJmMzllNTllMzI", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-10-25T20:42:41Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-11-01T13:21:07Z"}, "message": "Make ranger vrp1 default.\n\nTurn on ranger as the default vrp1 pass and adjust testcases.\n\n\tgcc/\n\t* params.opt (param_vrp1_mode): Make ranger default.\n\n\tgcc/testsuite/\n\t* gcc.dg/pr68217.c: Test [-INF, -INF][0, 0] instead of [-INF, 0].\n\t* gcc.dg/tree-ssa/vrp-unreachable.c: New.  Test unreachable removal.", "tree": {"sha": "95af965e4e377930ffd51f637d1d0e4c8b4d97dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95af965e4e377930ffd51f637d1d0e4c8b4d97dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/comments", "author": null, "committer": null, "parents": [{"sha": "7b1cdca6d6d594a8a9d88062252212e145f2f4eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1cdca6d6d594a8a9d88062252212e145f2f4eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1cdca6d6d594a8a9d88062252212e145f2f4eb"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "a34fee193fc11de659835b8c33eb5f2119bf7b50", "filename": "gcc/params.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "patch": "@@ -1166,7 +1166,7 @@ Common Joined UInteger Var(param_vect_induction_float) Init(1) IntegerRage(0, 1)\n Enable loop vectorization of floating point inductions.\n \n -param=vrp1-mode=\n-Common Joined Var(param_vrp1_mode) Enum(vrp_mode) Init(VRP_MODE_VRP) Param Optimization\n+Common Joined Var(param_vrp1_mode) Enum(vrp_mode) Init(VRP_MODE_RANGER) Param Optimization\n --param=vrp1-mode=[vrp|ranger] Specifies the mode VRP1 should operate in.\n \n -param=vrp2-mode="}, {"sha": "60c80106760d8efa6bbb4994ca7c6db9bb4b23d7", "filename": "gcc/testsuite/gcc.dg/pr68217.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68217.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68217.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68217.c?ref=e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "patch": "@@ -10,4 +10,4 @@ int foo (void)\n     return 0;\n }\n \n-/* { dg-final { scan-tree-dump \"\\\\\\[-INF, 0\\\\\\]\" \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump \"\\\\\\[-INF, -INF\\\\\\]\\\\\\[0, 0\\\\\\]\" \"vrp1\" } } */"}, {"sha": "cdc57403c6edbe6e11fcafe44c05fcf1fe2b7e48", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp-unreachable.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp-unreachable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7310e24b1c0ca67b1bb507c1330b2bf39e59e32/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp-unreachable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp-unreachable.c?ref=e7310e24b1c0ca67b1bb507c1330b2bf39e59e32", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1-alias -fdump-tree-vrp2-alias\" } */\n+\n+void dead (unsigned n);\n+void alive (unsigned n);\n+\n+void func (unsigned n, unsigned m)\n+{\n+  if (n == 0)\n+    __builtin_unreachable();\n+  if (n == 1)\n+    __builtin_unreachable();\n+  if (n & 0x1)\n+    __builtin_unreachable();\n+  if (n == 2)\n+    __builtin_unreachable();\n+  if (n == 3)\n+    __builtin_unreachable();\n+  if (n & 0x2)\n+    __builtin_unreachable();\n+  if (n == 4)\n+    __builtin_unreachable();\n+  if (n == 5)\n+    __builtin_unreachable();\n+  if (n & 0x4)\n+    __builtin_unreachable();\n+  if (n == 6)\n+    __builtin_unreachable();\n+  if (n == 7)\n+    __builtin_unreachable();\n+ if (n <8)\n+   dead (n);\n+ if (n != m)\n+    __builtin_unreachable();\n+ alive (n);\n+ alive (m);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"dead\" \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"builtin_unreachable\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"builtin_unreachable\" \"vrp2\" } } */\n+/* { dg-final { scan-tree-dump-times \"fff8\" 4 \"vrp2\" } } */"}]}