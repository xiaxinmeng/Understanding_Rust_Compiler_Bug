{"sha": "1866182f6cf338880c68225d9de571b787b6abcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg2NjE4MmY2Y2YzMzg4ODBjNjgyMjVkOWRlNTcxYjc4N2I2YWJjZA==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-05-11T04:01:15Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-05-11T05:09:37Z"}, "message": "rs6000: Guard density_test only for vector version\n\nThis patch teaches rs6000_density_test to only care about the vector\nversion cost calculation and early return when calculating the single\nscalar iteration cost.\n\nBootstrapped/regtested on powerpc64le-linux-gnu P9.\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.c (struct rs6000_cost_data): New member\n\tcosting_for_scalar.\n\t(rs6000_density_test): Early return if costing_for_scalar is true.\n\t(rs6000_init_cost): Init costing_for_scalar of rs6000_cost_data.", "tree": {"sha": "76a6c69d797a28284d66639a55fcef34c0d21bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76a6c69d797a28284d66639a55fcef34c0d21bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1866182f6cf338880c68225d9de571b787b6abcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1866182f6cf338880c68225d9de571b787b6abcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1866182f6cf338880c68225d9de571b787b6abcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1866182f6cf338880c68225d9de571b787b6abcd/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "096f8215d2172ca4177cb26035e748d8f182fc8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096f8215d2172ca4177cb26035e748d8f182fc8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096f8215d2172ca4177cb26035e748d8f182fc8f"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d1b76f6ec413842de6e1aa78ce8cefec1b9f58b4", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1866182f6cf338880c68225d9de571b787b6abcd/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1866182f6cf338880c68225d9de571b787b6abcd/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1866182f6cf338880c68225d9de571b787b6abcd", "patch": "@@ -5238,6 +5238,8 @@ typedef struct _rs6000_cost_data\n   /* For each vectorized loop, this var holds TRUE iff a non-memory vector\n      instruction is needed by the vectorization.  */\n   bool vect_nonmem;\n+  /* Indicates this is costing for the scalar version of a loop or block.  */\n+  bool costing_for_scalar;\n } rs6000_cost_data;\n \n /* Test for likely overcommitment of vector hardware resources.  If a\n@@ -5259,6 +5261,12 @@ rs6000_density_test (rs6000_cost_data *data)\n   int vec_cost = data->cost[vect_body], not_vec_cost = 0;\n   int i, density_pct;\n \n+  /* This density test only cares about the cost of vector version of the\n+     loop, so immediately return if we are passed costing for the scalar\n+     version (namely computing single scalar iteration cost).  */\n+  if (data->costing_for_scalar)\n+    return;\n+\n   for (i = 0; i < nbbs; i++)\n     {\n       basic_block bb = bbs[i];\n@@ -5296,14 +5304,15 @@ rs6000_density_test (rs6000_cost_data *data)\n /* Implement targetm.vectorize.init_cost.  */\n \n static void *\n-rs6000_init_cost (struct loop *loop_info, bool)\n+rs6000_init_cost (struct loop *loop_info, bool costing_for_scalar)\n {\n   rs6000_cost_data *data = XNEW (struct _rs6000_cost_data);\n   data->loop_info = loop_info;\n   data->cost[vect_prologue] = 0;\n   data->cost[vect_body]     = 0;\n   data->cost[vect_epilogue] = 0;\n   data->vect_nonmem = false;\n+  data->costing_for_scalar = costing_for_scalar;\n   return data;\n }\n "}]}