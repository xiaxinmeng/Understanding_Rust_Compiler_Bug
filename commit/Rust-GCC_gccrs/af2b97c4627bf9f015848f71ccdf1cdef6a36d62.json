{"sha": "af2b97c4627bf9f015848f71ccdf1cdef6a36d62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYyYjk3YzQ2MjdiZjlmMDE1ODQ4ZjcxY2NkZjFjZGVmNmEzNmQ2Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-09-10T19:40:43Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-09-10T19:40:43Z"}, "message": "ira.c (setup_pressure_classes): Handle synonymous classes.\n\ngcc/\n\t* ira.c (setup_pressure_classes): Handle synonymous classes.\n\nFrom-SVN: r191159", "tree": {"sha": "fc6b458839f38c7bceeb354a9fa90307d7056dd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc6b458839f38c7bceeb354a9fa90307d7056dd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af2b97c4627bf9f015848f71ccdf1cdef6a36d62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af2b97c4627bf9f015848f71ccdf1cdef6a36d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af2b97c4627bf9f015848f71ccdf1cdef6a36d62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af2b97c4627bf9f015848f71ccdf1cdef6a36d62/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "881a9dcdef0b5350bb535faa59488cfc9d7a1eeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881a9dcdef0b5350bb535faa59488cfc9d7a1eeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881a9dcdef0b5350bb535faa59488cfc9d7a1eeb"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7c1030c5bf1ca52edd0fab6a263f0de250e7c6c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af2b97c4627bf9f015848f71ccdf1cdef6a36d62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af2b97c4627bf9f015848f71ccdf1cdef6a36d62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af2b97c4627bf9f015848f71ccdf1cdef6a36d62", "patch": "@@ -1,3 +1,7 @@\n+2012-09-10  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* ira.c (setup_pressure_classes): Handle synonymous classes.\n+\n 2012-09-10  Marc Glisse  <marc.glisse@inria.fr>\n \n         * tree-ssa-forwprop.c (simplify_bitfield_ref): New function."}, {"sha": "ad0ae0a8e6efc184d6e202073e79e86aaacb2c93", "filename": "gcc/ira.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af2b97c4627bf9f015848f71ccdf1cdef6a36d62/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af2b97c4627bf9f015848f71ccdf1cdef6a36d62/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=af2b97c4627bf9f015848f71ccdf1cdef6a36d62", "patch": "@@ -789,7 +789,7 @@ setup_pressure_classes (void)\n \t     hard registers and movement between them is costly\n \t     (e.g. SPARC FPCC registers).  We still should consider it\n \t     as a candidate for a pressure class.  */\n-\t  && alloc_reg_class_subclasses[cl][0] != LIM_REG_CLASSES)\n+\t  && alloc_reg_class_subclasses[cl][0] < cl)\n \t{\n \t  /* Check that the moves between any hard registers of the\n \t     current class are not more expensive for a legal mode"}]}