{"sha": "b90f141a9d681c533c209813a6aa3f6dfce01b90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkwZjE0MWE5ZDY4MWM1MzNjMjA5ODEzYTZhYTNmNmRmY2UwMWI5MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-07-15T05:31:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-07-15T05:31:44Z"}, "message": "expr.c (expand_assignment): Remove an unused argument SUGGEST_REG.\n\n\t* expr.c (expand_assignment): Remove an unused argument\n\tSUGGEST_REG.\n\t* expr.h: Update the prototype.\n\t* function.c: Update the callers.\n\t* stmt.c: Likewise.\n\nFrom-SVN: r69379", "tree": {"sha": "598d296d7a51fac1c0dfb503e3b29e59338cf4a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/598d296d7a51fac1c0dfb503e3b29e59338cf4a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b90f141a9d681c533c209813a6aa3f6dfce01b90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90f141a9d681c533c209813a6aa3f6dfce01b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90f141a9d681c533c209813a6aa3f6dfce01b90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90f141a9d681c533c209813a6aa3f6dfce01b90/comments", "author": null, "committer": null, "parents": [{"sha": "89a68bb98de478df887df56cbd27119d28ffe957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a68bb98de478df887df56cbd27119d28ffe957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89a68bb98de478df887df56cbd27119d28ffe957"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "5fc6fee46a177e28140acf1ae831ca88b8dd70a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b90f141a9d681c533c209813a6aa3f6dfce01b90", "patch": "@@ -1,3 +1,11 @@\n+2003-07-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* expr.c (expand_assignment): Remove an unused argument\n+\tSUGGEST_REG.\n+\t* expr.h: Update the prototype.\n+\t* function.c: Update the callers.\n+\t* stmt.c: Likewise.\n+\n 2003-07-14  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR debug/11098"}, {"sha": "a7f3a1cc8a952b5395ea8a8df3cb1f68948d639d", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b90f141a9d681c533c209813a6aa3f6dfce01b90", "patch": "@@ -4128,16 +4128,10 @@ get_subtarget (rtx x)\n    If WANT_VALUE is nonzero, return an rtx for the value of TO.\n    (This may contain a QUEUED rtx;\n    if the value is constant, this rtx is a constant.)\n-   Otherwise, the returned value is NULL_RTX.\n-\n-   SUGGEST_REG is no longer actually used.\n-   It used to mean, copy the value through a register\n-   and return that register, if that is possible.\n-   We now use WANT_VALUE to decide whether to do this.  */\n+   Otherwise, the returned value is NULL_RTX.  */\n \n rtx\n-expand_assignment (tree to, tree from, int want_value,\n-\t\t   int suggest_reg ATTRIBUTE_UNUSED)\n+expand_assignment (tree to, tree from, int want_value)\n {\n   rtx to_rtx = 0;\n   rtx result;\n@@ -9144,7 +9138,7 @@ expand_expr (tree exp, rtx target, enum machine_mode tmode, enum expand_modifier\n \ttree lhs = TREE_OPERAND (exp, 0);\n \ttree rhs = TREE_OPERAND (exp, 1);\n \n-\ttemp = expand_assignment (lhs, rhs, ! ignore, original_target != 0);\n+\ttemp = expand_assignment (lhs, rhs, ! ignore);\n \treturn temp;\n       }\n \n@@ -9189,13 +9183,13 @@ expand_expr (tree exp, rtx target, enum machine_mode tmode, enum expand_modifier\n \t\t\t\t\t     (TREE_CODE (rhs) == BIT_IOR_EXPR\n \t\t\t\t\t      ? integer_one_node\n \t\t\t\t\t      : integer_zero_node)),\n-\t\t\t       0, 0);\n+\t\t\t       0);\n \t    do_pending_stack_adjust ();\n \t    emit_label (label);\n \t    return const0_rtx;\n \t  }\n \n-\ttemp = expand_assignment (lhs, rhs, ! ignore, original_target != 0);\n+\ttemp = expand_assignment (lhs, rhs, ! ignore);\n \n \treturn temp;\n       }\n@@ -9798,7 +9792,7 @@ expand_increment (tree exp, int post, int ignore)\n \t  incremented = TREE_OPERAND (incremented, 0);\n \t}\n \n-      temp = expand_assignment (incremented, newexp, ! post && ! ignore , 0);\n+      temp = expand_assignment (incremented, newexp, ! post && ! ignore);\n       return post ? op0 : temp;\n     }\n "}, {"sha": "9abea77872b90ceed289632a20c1b63efe7f445f", "filename": "gcc/expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=b90f141a9d681c533c209813a6aa3f6dfce01b90", "patch": "@@ -493,7 +493,7 @@ extern void emit_push_insn (rtx, enum machine_mode, tree, rtx, unsigned int,\n \t\t\t    int, rtx, int, rtx, rtx, int, rtx);\n \n /* Expand an assignment that stores the value of FROM into TO.  */\n-extern rtx expand_assignment (tree, tree, int, int);\n+extern rtx expand_assignment (tree, tree, int);\n \n /* Generate code for computing expression EXP,\n    and storing the value into TARGET."}, {"sha": "612499535739dd063fbca288057334a64d93e013", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b90f141a9d681c533c209813a6aa3f6dfce01b90", "patch": "@@ -4832,7 +4832,7 @@ assign_parms (tree fndecl)\n \t      /* TREE_USED gets set erroneously during expand_assignment.  */\n \t      save_tree_used = TREE_USED (parm);\n \t      expand_assignment (parm,\n-\t\t\t\t make_tree (nominal_type, tempreg), 0, 0);\n+\t\t\t\t make_tree (nominal_type, tempreg), 0);\n \t      TREE_USED (parm) = save_tree_used;\n \t      conversion_insns = get_insns ();\n \t      did_conversion = 1;"}, {"sha": "e2b36b1aa64286dc907278d8faaf3c9bf4a1f586", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b90f141a9d681c533c209813a6aa3f6dfce01b90/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=b90f141a9d681c533c209813a6aa3f6dfce01b90", "patch": "@@ -3984,13 +3984,13 @@ expand_decl_init (tree decl)\n       if (code == INTEGER_TYPE || code == REAL_TYPE || code == ENUMERAL_TYPE\n \t  || code == POINTER_TYPE || code == REFERENCE_TYPE)\n \texpand_assignment (decl, convert (TREE_TYPE (decl), integer_zero_node),\n-\t\t\t   0, 0);\n+\t\t\t   0);\n       emit_queue ();\n     }\n   else if (DECL_INITIAL (decl) && TREE_CODE (DECL_INITIAL (decl)) != TREE_LIST)\n     {\n       emit_line_note (DECL_SOURCE_LOCATION (decl));\n-      expand_assignment (decl, DECL_INITIAL (decl), 0, 0);\n+      expand_assignment (decl, DECL_INITIAL (decl), 0);\n       emit_queue ();\n     }\n "}]}