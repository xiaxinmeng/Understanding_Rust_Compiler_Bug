{"sha": "61d3ce2026946a577515bb1948874a3d8ffa97d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFkM2NlMjAyNjk0NmE1Nzc1MTViYjE5NDg4NzRhM2Q4ZmZhOTdkNg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-06T00:56:06Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-06T00:56:06Z"}, "message": "In gcc/: 2010-12-06 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* c-family/c-common.h: Removed the declarations of all the objc_\n\tcallbacks, and moved them into c-objc.h.  Removed\n\tobjc_ivar_visibility_kind and moved it into c-objc.h.\n\t* c-family/c-objc.h: New file.\n\t* c-family/c-common.c: Include c-objc.h.\n\t* c-family/c-format.c: Same change.\n\t* c-family/stub-objc.c: Same change.\n\t* c-decl.c: Include c-family/c-objc.h.\n\t* c-parser.c: Same change.\t\n\t* c-typeck.c: Same change.\n\t* c-config-lang.in (gtfiles): Added c-family/c-objc.h.\n\t* Makefile.in (c-decl.o): Depend on c-family/c-objc.h.\n\t(c-parser.o): same change.\n\t(c-typeck.o): Same change.\n\t(c-family/c-format.o): Same change.\n\t(c-family/stub-objc.o): Same change.\n\t(c-family/c-common.o): Same change.\n\t(PLUGIN_HEADERS): Added c-family/c-objc.h.\n\t\nIn gcc/cp/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* call.c: Include c-family/c-objc.h.\n\t* decl.c: Same change.\n\t* decl2.c: Same change.\n\t* error.c: Same change.\n\t* lex.c: Same change.\n\t* parser.c: Same change.\n\t* pt.c: Same change.\n\t* semantics.c: Same change.\n\t* typeck.c: Same change.\n\t* Make-lang.in (cp/decl.o): Depend on c-family/c-objc.h.\n\t(cp/decl2.o): Same change.\n\t(cp/call.o): Same change.\n\t(cp/error.o): Same change.\n\t(cp/lex.o): Same change.\n\t(cp/parser.o): Same change.\n\t(cp/pt.o): Same change.\n\t(cp/semantics.o): Same change.\n\t(cp/typeck.o): Same change.\n\t* config-lang.in (gtfiles): Added c-family/c-objc.h.\n\t\nIn gcc/objc/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c: Include c-family/c-objc.h.\n\t* objc-lang.c: Same change.\n\t* Make-lang.in (objc/objc-act.o): Depend on\n\tc-family/c-objc.h.\n\t(objc/objc-lang.o): Same change.\n\t* config-lang.in (gtfiles): Added c-family/c-objc.h.\n\t\nIn gcc/objcp/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* config-lang.in (gtfiles): Added c-family/c-objc.h.\n\t* Make-lang.in (objcp/objcp-act.o): Depend on\n\tc-family/c-objc.h.\n\t(objcp/objcp-lang.o): Same change.\n\t(objcp/objcp-decl.o): Same change.\n\t* objcp-lang.c: Include c-family/c-objc.h.\n\t* objcp-decl.c: Same change.\n\nFrom-SVN: r167481", "tree": {"sha": "f19d72f21c2800be50aed27ab677db5388d44de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f19d72f21c2800be50aed27ab677db5388d44de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61d3ce2026946a577515bb1948874a3d8ffa97d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61d3ce2026946a577515bb1948874a3d8ffa97d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61d3ce2026946a577515bb1948874a3d8ffa97d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61d3ce2026946a577515bb1948874a3d8ffa97d6/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7de6ba7a0bf338489274404b854f5fb84f63c731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7de6ba7a0bf338489274404b854f5fb84f63c731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7de6ba7a0bf338489274404b854f5fb84f63c731"}], "stats": {"total": 345, "additions": 230, "deletions": 115}, "files": [{"sha": "3fc667b87d76afb3ba3c1266c4969b5d5aa3d09f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -1,3 +1,24 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-family/c-common.h: Removed the declarations of all the objc_\n+\tcallbacks, and moved them into c-objc.h.  Removed\n+\tobjc_ivar_visibility_kind and moved it into c-objc.h.\n+\t* c-family/c-objc.h: New file.\n+\t* c-family/c-common.c: Include c-objc.h.\n+\t* c-family/c-format.c: Same change.\n+\t* c-family/stub-objc.c: Same change.\n+\t* c-decl.c: Include c-family/c-objc.h.\n+\t* c-parser.c: Same change.\t\n+\t* c-typeck.c: Same change.\n+\t* c-config-lang.in (gtfiles): Added c-family/c-objc.h.\n+\t* Makefile.in (c-decl.o): Depend on c-family/c-objc.h.\n+\t(c-parser.o): same change.\n+\t(c-typeck.o): Same change.\n+\t(c-family/c-format.o): Same change.\n+\t(c-family/stub-objc.o): Same change.\n+\t(c-family/c-common.o): Same change.\n+\t(PLUGIN_HEADERS): Added c-family/c-objc.h.\n+\t\n 2010-12-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* config.gcc [hppa[12]*-*-hpux10*, hppa[12]*-*-hpux11*]:  Ignore"}, {"sha": "717326c3d41ff3ea68b365521610ba51ba688e9f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -2026,7 +2026,7 @@ c-decl.o : c-decl.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(HASHTAB_H) $(LIBFUNCS_H) $(EXCEPT_H) $(LANGHOOKS_DEF_H) \\\n \t$(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) $(DIAGNOSTIC_CORE_H) \\\n \t$(INPUT_H) langhooks.h tree-mudflap.h pointer-set.h tree-iterator.h \\\n-\t$(PLUGIN_H) c-family/c-ada-spec.h\n+\t$(PLUGIN_H) c-family/c-ada-spec.h c-family/c-objc.h\n \n c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t$(C_TREE_H) $(FLAGS_H) $(DIAGNOSTIC_H) $(TM_P_H)\n@@ -2047,11 +2047,13 @@ c-parser.o : c-parser.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) $(C_TREE_H) $(C_COMMON_H) $(C_PRAGMA_H) $(CPPLIB_H) \\\n \t$(GGC_H) $(TIMEVAR_H) $(INPUT_H) $(FLAGS_H) output.h \\\n \tgt-c-parser.h langhooks.h \\\n-\t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H)\n+\t$(VEC_H) $(TARGET_H) $(CGRAPH_H) $(PLUGIN_H) \\\n+\t c-family/c-objc.h\n \n c-typeck.o : c-typeck.c c-lang.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t$(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h $(EXPR_H) \\\n-\tlanghooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H)\n+\tlanghooks.h tree-iterator.h $(BITMAP_H) $(GIMPLE_H) \\\n+\t c-family/c-objc.h\n \n \n \n@@ -2095,7 +2097,7 @@ c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) \\\n \t$(OBSTACK_H) $(C_COMMON_H) $(FLAGS_H) toplev.h output.h $(C_PRAGMA_H) \\\n \t$(GGC_H) builtin-types.def builtin-attrs.def \\\n-\t$(DIAGNOSTIC_H) langhooks.h \\\n+\t$(DIAGNOSTIC_H) langhooks.h c-family/c-objc.h \\\n \t$(TARGET_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n \tintl.h $(OPTS_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n \t$(BUILTINS_DEF) $(CGRAPH_H) $(BASIC_BLOCK_H) $(TARGET_DEF_H) \\\n@@ -2115,7 +2117,7 @@ c-family/c-dump.o : c-family/c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n c-family/c-format.o : c-family/c-format.c c-family/c-format.h \\\n \t$(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) langhooks.h \\\n \t$(C_COMMON_H) $(FLAGS_H) intl.h \\\n-\t$(DIAGNOSTIC_CORE_H) alloc-pool.h\n+\t$(DIAGNOSTIC_CORE_H) alloc-pool.h c-family/c-objc.h\n \n c-family/c-gimplify.o : c-family/c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n \t$(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n@@ -2170,7 +2172,7 @@ c-family/c-ada-spec.o : c-family/c-ada-spec.c c-family/c-ada-spec.h \\\n \tcoretypes.h tree-iterator.h tree-pass.h output.h\n \n c-family/stub-objc.o : c-family/stub-objc.c $(CONFIG_H) $(SYSTEM_H) \\\n-\tcoretypes.h $(TREE_H) $(C_COMMON_H)\n+\tcoretypes.h $(TREE_H) $(C_COMMON_H) c-family/c-objc.h\n \n \n # Files used by all variants of C and some other languages.\n@@ -4563,7 +4565,8 @@ PLUGIN_HEADERS = $(TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(GGC_H) $(TREE_DUMP_H) $(PRETTY_PRINT_H) $(OPTS_H) $(PARAMS_H) plugin.def \\\n   $(tm_file_list) $(tm_include_list) $(tm_p_file_list) $(tm_p_include_list) \\\n   $(host_xm_file_list) $(host_xm_include_list) $(xm_include_list) \\\n-  intl.h $(PLUGIN_VERSION_H) $(DIAGNOSTIC_H) $(C_COMMON_H) $(C_PRETTY_PRINT_H) \\\n+  intl.h $(PLUGIN_VERSION_H) $(DIAGNOSTIC_H) \\\n+  $(C_COMMON_H) c-family/c-objc.h $(C_PRETTY_PRINT_H) \\\n   tree-iterator.h $(PLUGIN_H) $(TREE_FLOW_H) langhooks.h incpath.h debug.h \\\n   $(EXCEPT_H) tree-ssa-sccvn.h real.h output.h $(IPA_UTILS_H) \\\n   $(C_PRAGMA_H)  $(CPPLIB_H)  $(FUNCTION_H) \\"}, {"sha": "a502b96e3542b1a7bc56769776ac9a28ad556631", "filename": "gcc/c-config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-config-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-config-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-config-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -22,4 +22,4 @@\n # files used by C that have garbage collection GTY macros in them\n # which therefore need to be scanned by gengtype.c.\n \n-gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-cppbuiltin.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-lang.h\"\n+gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/c-family/c-cppbuiltin.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-lang.h\""}, {"sha": "06e01ad194757011fdf727923ca6419941ccec08", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -46,6 +46,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"timevar.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"c-family/c-pragma.h\"\n #include \"c-lang.h\"\n #include \"langhooks.h\""}, {"sha": "7a57838a8571ff96a6f33f16cdb9b9b6fd0b736c", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"c-pragma.h\"\n #include \"ggc.h\"\n #include \"c-common.h\"\n+#include \"c-objc.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"cpplib.h\""}, {"sha": "928e5021d23003e1fee49d5cb5d7ff8ed4877c96", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -434,14 +434,6 @@ extern c_language_kind c_language;\n #define c_dialect_cxx()\t\t((c_language & clk_cxx) != 0)\n #define c_dialect_objc()\t((c_language & clk_objc) != 0)\n \n-/* ObjC ivar visibility types.  */\n-typedef enum objc_ivar_visibility_kind {\n-  OBJC_IVAR_VIS_PROTECTED = 0,\n-  OBJC_IVAR_VIS_PUBLIC    = 1,\n-  OBJC_IVAR_VIS_PRIVATE   = 2,\n-  OBJC_IVAR_VIS_PACKAGE   = 3\n-} objc_ivar_visibility_kind;\n-\n /* The various name of operator that appears in error messages. */\n typedef enum ref_operator {\n   /* NULL */\n@@ -988,88 +980,6 @@ extern void c_stddef_cpp_builtins (void);\n extern void fe_file_change (const struct line_map *);\n extern void c_parse_error (const char *, enum cpp_ttype, tree, unsigned char);\n \n-/* Objective-C / Objective-C++ entry points.  */\n-\n-/* The following ObjC/ObjC++ functions are called by the C and/or C++\n-   front-ends; they all must have corresponding stubs in stub-objc.c.  */\n-extern void objc_write_global_declarations (void);\n-extern tree objc_is_class_name (tree);\n-extern tree objc_is_object_ptr (tree);\n-extern void objc_check_decl (tree);\n-extern void objc_check_global_decl (tree);\n-extern tree objc_common_type (tree, tree);\n-extern bool objc_compare_types (tree, tree, int, tree);\n-extern bool objc_have_common_type (tree, tree, int, tree);\n-extern bool objc_diagnose_private_ivar (tree);\n-extern void objc_volatilize_decl (tree);\n-extern tree objc_rewrite_function_call (tree, tree);\n-extern tree objc_message_selector (void);\n-extern tree objc_lookup_ivar (tree, tree);\n-extern void objc_clear_super_receiver (void);\n-extern int objc_is_public (tree, tree);\n-extern tree objc_is_id (tree);\n-extern void objc_declare_alias (tree, tree);\n-extern void objc_declare_class (tree);\n-extern void objc_declare_protocols (tree, tree);\n-extern tree objc_build_message_expr (tree);\n-extern tree objc_finish_message_expr (tree, tree, tree);\n-extern tree objc_build_selector_expr (location_t, tree);\n-extern tree objc_build_protocol_expr (tree);\n-extern tree objc_build_encode_expr (tree);\n-extern tree objc_build_string_object (tree);\n-extern tree objc_get_protocol_qualified_type (tree, tree);\n-extern tree objc_get_class_reference (tree);\n-extern tree objc_get_class_ivars (tree);\n-extern tree objc_get_interface_ivars (tree);\n-extern void objc_start_class_interface (tree, tree, tree, tree);\n-extern void objc_start_category_interface (tree, tree, tree, tree);\n-extern void objc_start_protocol (tree, tree, tree);\n-extern void objc_continue_interface (void);\n-extern void objc_finish_interface (void);\n-extern void objc_start_class_implementation (tree, tree);\n-extern void objc_start_category_implementation (tree, tree);\n-extern void objc_continue_implementation (void);\n-extern void objc_finish_implementation (void);\n-extern void objc_set_visibility (objc_ivar_visibility_kind);\n-extern tree objc_build_method_signature (bool, tree, tree, tree, bool);\n-extern void objc_add_method_declaration (bool, tree, tree);\n-extern bool objc_start_method_definition (bool, tree, tree);\n-extern void objc_finish_method_definition (tree);\n-extern void objc_add_instance_variable (tree);\n-extern tree objc_build_keyword_decl (tree, tree, tree, tree);\n-extern tree objc_build_throw_stmt (location_t, tree);\n-extern void objc_begin_try_stmt (location_t, tree);\n-extern tree objc_finish_try_stmt (void);\n-extern void objc_begin_catch_clause (tree);\n-extern void objc_finish_catch_clause (void);\n-extern void objc_build_finally_clause (location_t, tree);\n-extern tree objc_build_synchronized (location_t, tree, tree);\n-extern int objc_static_init_needed_p (void);\n-extern tree objc_generate_static_init_call (tree);\n-extern tree objc_generate_write_barrier (tree, enum tree_code, tree);\n-extern void objc_set_method_opt (bool);\n-extern void objc_finish_foreach_loop (location_t, tree, tree, tree, tree, tree);\n-extern bool  objc_method_decl (enum tree_code);\n-extern void objc_add_property_declaration (location_t, tree, bool, bool, bool, \n-\t\t\t\t\t   bool, bool, bool, tree, tree);\n-extern tree objc_maybe_build_component_ref (tree, tree);\n-extern tree objc_build_class_component_ref (tree, tree);\n-extern tree objc_maybe_build_modify_expr (tree, tree);\n-extern tree objc_build_incr_expr_for_property_ref (location_t, enum tree_code, \n-\t\t\t\t\t\t   tree, tree);\n-extern void objc_add_synthesize_declaration (location_t, tree);\n-extern void objc_add_dynamic_declaration (location_t, tree);\n-extern const char * objc_maybe_printable_name (tree, int);\n-extern bool objc_is_property_ref (tree);\n-extern bool objc_string_ref_type_p (tree);\n-extern void objc_check_format_arg (tree, tree);\n-extern void objc_finish_function (void);\n-\n-/* The following are provided by the C and C++ front-ends, and called by\n-   ObjC/ObjC++.  */\n-extern void *objc_get_current_scope (void);\n-extern void objc_mark_locals_volatile (void *);\n-\n /* In c-ppoutput.c  */\n extern void init_pp_output (FILE *);\n extern void preprocess_file (cpp_reader *);"}, {"sha": "85831eb568ef839062e55524c3f6fa3810b6b239", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"c-common.h\"\n+#include \"c-objc.h\"\n #include \"intl.h\"\n #include \"diagnostic-core.h\"\n #include \"langhooks.h\""}, {"sha": "4089293eee31d9263cd91a82a35358384477bb82", "filename": "gcc/c-family/c-objc.h", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-objc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fc-objc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-objc.h?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -0,0 +1,115 @@\n+/* Definitions of Objective-C front-end entry points used for C and C++.\n+   Copyright (C) 1987, 1993, 1994, 1995, 1997, 1998,\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_C_COMMON_OBJC_H\n+#define GCC_C_COMMON_OBJC_H\n+\n+/* ObjC ivar visibility types.  */\n+typedef enum objc_ivar_visibility_kind {\n+  OBJC_IVAR_VIS_PROTECTED = 0,\n+  OBJC_IVAR_VIS_PUBLIC    = 1,\n+  OBJC_IVAR_VIS_PRIVATE   = 2,\n+  OBJC_IVAR_VIS_PACKAGE   = 3\n+} objc_ivar_visibility_kind;\n+\n+/* Objective-C / Objective-C++ entry points.  */\n+\n+/* The following ObjC/ObjC++ functions are called by the C and/or C++\n+   front-ends; they all must have corresponding stubs in stub-objc.c.  */\n+extern void objc_write_global_declarations (void);\n+extern tree objc_is_class_name (tree);\n+extern tree objc_is_object_ptr (tree);\n+extern void objc_check_decl (tree);\n+extern void objc_check_global_decl (tree);\n+extern tree objc_common_type (tree, tree);\n+extern bool objc_compare_types (tree, tree, int, tree);\n+extern bool objc_have_common_type (tree, tree, int, tree);\n+extern bool objc_diagnose_private_ivar (tree);\n+extern void objc_volatilize_decl (tree);\n+extern tree objc_rewrite_function_call (tree, tree);\n+extern tree objc_message_selector (void);\n+extern tree objc_lookup_ivar (tree, tree);\n+extern void objc_clear_super_receiver (void);\n+extern int objc_is_public (tree, tree);\n+extern tree objc_is_id (tree);\n+extern void objc_declare_alias (tree, tree);\n+extern void objc_declare_class (tree);\n+extern void objc_declare_protocols (tree, tree);\n+extern tree objc_build_message_expr (tree);\n+extern tree objc_finish_message_expr (tree, tree, tree);\n+extern tree objc_build_selector_expr (location_t, tree);\n+extern tree objc_build_protocol_expr (tree);\n+extern tree objc_build_encode_expr (tree);\n+extern tree objc_build_string_object (tree);\n+extern tree objc_get_protocol_qualified_type (tree, tree);\n+extern tree objc_get_class_reference (tree);\n+extern tree objc_get_class_ivars (tree);\n+extern tree objc_get_interface_ivars (tree);\n+extern void objc_start_class_interface (tree, tree, tree, tree);\n+extern void objc_start_category_interface (tree, tree, tree, tree);\n+extern void objc_start_protocol (tree, tree, tree);\n+extern void objc_continue_interface (void);\n+extern void objc_finish_interface (void);\n+extern void objc_start_class_implementation (tree, tree);\n+extern void objc_start_category_implementation (tree, tree);\n+extern void objc_continue_implementation (void);\n+extern void objc_finish_implementation (void);\n+extern void objc_set_visibility (objc_ivar_visibility_kind);\n+extern tree objc_build_method_signature (bool, tree, tree, tree, bool);\n+extern void objc_add_method_declaration (bool, tree, tree);\n+extern bool objc_start_method_definition (bool, tree, tree);\n+extern void objc_finish_method_definition (tree);\n+extern void objc_add_instance_variable (tree);\n+extern tree objc_build_keyword_decl (tree, tree, tree, tree);\n+extern tree objc_build_throw_stmt (location_t, tree);\n+extern void objc_begin_try_stmt (location_t, tree);\n+extern tree objc_finish_try_stmt (void);\n+extern void objc_begin_catch_clause (tree);\n+extern void objc_finish_catch_clause (void);\n+extern void objc_build_finally_clause (location_t, tree);\n+extern tree objc_build_synchronized (location_t, tree, tree);\n+extern int objc_static_init_needed_p (void);\n+extern tree objc_generate_static_init_call (tree);\n+extern tree objc_generate_write_barrier (tree, enum tree_code, tree);\n+extern void objc_set_method_opt (bool);\n+extern void objc_finish_foreach_loop (location_t, tree, tree, tree, tree, tree);\n+extern bool  objc_method_decl (enum tree_code);\n+extern void objc_add_property_declaration (location_t, tree, bool, bool, bool, \n+\t\t\t\t\t   bool, bool, bool, tree, tree);\n+extern tree objc_maybe_build_component_ref (tree, tree);\n+extern tree objc_build_class_component_ref (tree, tree);\n+extern tree objc_maybe_build_modify_expr (tree, tree);\n+extern tree objc_build_incr_expr_for_property_ref (location_t, enum tree_code, \n+\t\t\t\t\t\t   tree, tree);\n+extern void objc_add_synthesize_declaration (location_t, tree);\n+extern void objc_add_dynamic_declaration (location_t, tree);\n+extern const char * objc_maybe_printable_name (tree, int);\n+extern bool objc_is_property_ref (tree);\n+extern bool objc_string_ref_type_p (tree);\n+extern void objc_check_format_arg (tree, tree);\n+extern void objc_finish_function (void);\n+\n+/* The following are provided by the C and C++ front-ends, and called by\n+   ObjC/ObjC++.  */\n+extern void *objc_get_current_scope (void);\n+extern void objc_mark_locals_volatile (void *);\n+\n+#endif /* ! GCC_C_COMMON_OBJC_H */"}, {"sha": "0600c2fb7dd3aaef6755077683ba0e7b03daac56", "filename": "gcc/c-family/stub-objc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fstub-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-family%2Fstub-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fstub-objc.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"c-common.h\"\n+#include \"c-objc.h\"\n \n tree\n objc_is_class_name (tree ARG_UNUSED (arg))"}, {"sha": "f2d5e5b0af8a1b66ff29387a70fcb81a3fa83456", "filename": "gcc/c-parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -52,6 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"ggc.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"vec.h\"\n #include \"target.h\"\n #include \"cgraph.h\""}, {"sha": "7bba44ed3eff37e08b2453ea781500acc7d1f957", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -40,6 +40,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"bitmap.h\"\n #include \"gimple.h\"\n+#include \"c-family/c-objc.h\"\n \n /* Possible cases of implicit bad conversions.  Used to select\n    diagnostic messages in convert_for_assignment.  */"}, {"sha": "ef506d13da2290316d5602742a5b0107d01e7a10", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -1,3 +1,25 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* call.c: Include c-family/c-objc.h.\n+\t* decl.c: Same change.\n+\t* decl2.c: Same change.\n+\t* error.c: Same change.\n+\t* lex.c: Same change.\n+\t* parser.c: Same change.\n+\t* pt.c: Same change.\n+\t* semantics.c: Same change.\n+\t* typeck.c: Same change.\n+\t* Make-lang.in (cp/decl.o): Depend on c-family/c-objc.h.\n+\t(cp/decl2.o): Same change.\n+\t(cp/call.o): Same change.\n+\t(cp/error.o): Same change.\n+\t(cp/lex.o): Same change.\n+\t(cp/parser.o): Same change.\n+\t(cp/pt.o): Same change.\n+\t(cp/semantics.o): Same change.\n+\t(cp/typeck.o): Same change.\n+\t* config-lang.in (gtfiles): Added c-family/c-objc.h.\n+\t\n 2010-12-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/46645"}, {"sha": "373471448a4ace7fd1a9522a802fe5fdb29e4378", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -247,19 +247,22 @@ CXX_TREE_H = $(TREE_H) cp/name-lookup.h cp/cp-tree.h $(C_COMMON_H) \\\n CXX_PRETTY_PRINT_H = cp/cxx-pretty-print.h $(C_PRETTY_PRINT_H)\n \n cp/lex.o: cp/lex.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n-  $(C_PRAGMA_H) output.h input.h cp/operators.def $(TM_P_H)\n+  $(C_PRAGMA_H) output.h input.h cp/operators.def $(TM_P_H) \\\n+  c-family/c-objc.h\n cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) debug.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-cp.h gt-cp-cp-lang.h \\\n   cp/cp-objcp-common.h $(EXPR_H) $(TARGET_H)\n cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n   output.h toplev.h $(HASHTAB_H) $(RTL_H) \\\n   cp/operators.def $(TM_P_H) $(TREE_INLINE_H) $(DIAGNOSTIC_H) $(C_PRAGMA_H) \\\n   debug.h gt-cp-decl.h $(TIMEVAR_H) $(TARGET_H) $(PLUGIN_H) \\\n-  intl.h tree-iterator.h $(SPLAY_TREE_H)\n+  intl.h tree-iterator.h $(SPLAY_TREE_H) \\\n+  c-family/c-objc.h\n cp/decl2.o: cp/decl2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) cp/decl.h \\\n   output.h toplev.h $(C_COMMON_H) gt-cp-decl2.h $(CGRAPH_H) \\\n   $(C_PRAGMA_H) $(TREE_DUMP_H) intl.h $(TARGET_H) $(GIMPLE_H) $(POINTER_SET_H) \\\n-  $(SPLAY_TREE_H) c-family/c-ada-spec.h\n+  $(SPLAY_TREE_H) c-family/c-ada-spec.h \\\n+  c-family/c-objc.h\n cp/cp-objcp-common.o : cp/cp-objcp-common.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) $(C_COMMON_H) \\\n   langhooks.h $(LANGHOOKS_DEF_H) $(DIAGNOSTIC_H) debug.h \\\n@@ -268,12 +271,13 @@ cp/typeck2.o: cp/typeck2.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) output.h \\\n   $(TM_P_H) $(DIAGNOSTIC_CORE_H) gt-cp-typeck2.h $(REAL_H) intl.h\n cp/typeck.o: cp/typeck.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   toplev.h $(DIAGNOSTIC_H) convert.h $(C_COMMON_H) $(TARGET_H) \\\n-  output.h\n+  output.h c-family/c-objc.h\n cp/class.o: cp/class.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n   $(TARGET_H) convert.h $(CGRAPH_H) $(TREE_DUMP_H) gt-cp-class.h \\\n   $(SPLAY_TREE_H)\n cp/call.o: cp/call.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) toplev.h \\\n-  $(DIAGNOSTIC_CORE_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h\n+  $(DIAGNOSTIC_CORE_H) intl.h gt-cp-call.h convert.h $(TARGET_H) langhooks.h \\\n+  c-family/c-objc.h\n cp/friend.o: cp/friend.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H)\n cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   $(EXCEPT_H) $(TARGET_H)\n@@ -293,24 +297,26 @@ cp/except.o: cp/except.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) \\\n   cp/cfns.h $(TREE_INLINE_H) $(TARGET_H)\n cp/expr.o: cp/expr.c $(CXX_TREE_H) $(TM_H) $(FLAGS_H) $(TM_P_H)\n cp/pt.o: cp/pt.c $(CXX_TREE_H) $(TM_H) cp/decl.h cp/cp-objcp-common.h \\\n-  toplev.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h vecprim.h intl.h\n+  toplev.h $(TREE_INLINE_H) pointer-set.h gt-cp-pt.h vecprim.h intl.h \\\n+  c-family/c-objc.h\n cp/error.o: cp/error.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_H) \\\n   $(FLAGS_H) $(REAL_H) $(LANGHOOKS_DEF_H) $(CXX_PRETTY_PRINT_H) \\\n-  tree-diagnostic.h tree-pretty-print.h\n+  tree-diagnostic.h tree-pretty-print.h c-family/c-objc.h\n cp/repo.o: cp/repo.c $(CXX_TREE_H) $(TM_H) toplev.h $(DIAGNOSTIC_CORE_H) \\\n   gt-cp-repo.h\n cp/semantics.o: cp/semantics.c $(CXX_TREE_H) $(TM_H) toplev.h \\\n   $(FLAGS_H) output.h $(RTL_H) $(TIMEVAR_H) \\\n   $(TREE_INLINE_H) $(CGRAPH_H) $(TARGET_H) $(C_COMMON_H) $(GIMPLE_H) \\\n-  bitmap.h gt-cp-semantics.h\n+  bitmap.h gt-cp-semantics.h c-family/c-objc.h\n cp/dump.o: cp/dump.c $(CXX_TREE_H) $(TM_H) $(TREE_DUMP_H)\n cp/optimize.o: cp/optimize.c $(CXX_TREE_H) $(TM_H) \\\n   input.h $(PARAMS_H) debug.h $(TREE_INLINE_H) $(GIMPLE_H) \\\n   $(TARGET_H) tree-iterator.h $(CGRAPH_H) $(DIAGNOSTIC_CORE_H)\n cp/mangle.o: cp/mangle.c $(CXX_TREE_H) $(TM_H) $(REAL_H) \\\n   gt-cp-mangle.h $(TARGET_H) $(TM_P_H) $(CGRAPH_H)\n cp/parser.o: cp/parser.c $(CXX_TREE_H) $(TM_H) $(DIAGNOSTIC_CORE_H) \\\n-  gt-cp-parser.h output.h $(TARGET_H) $(PLUGIN_H) intl.h\n+  gt-cp-parser.h output.h $(TARGET_H) $(PLUGIN_H) intl.h \\\n+  c-family/c-objc.h\n cp/cp-gimplify.o: cp/cp-gimplify.c $(CXX_TREE_H) $(C_COMMON_H) \\\n \t$(TM_H) coretypes.h pointer-set.h tree-iterator.h\n "}, {"sha": "d538cf2efc379bf326ddbb65392358af34ba369e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"convert.h\"\n #include \"langhooks.h\"\n+#include \"c-family/c-objc.h\"\n \n /* The various kinds of conversion.  */\n "}, {"sha": "a921e93aab26b6b067e84525e2c04ef92b02cd6c", "filename": "gcc/cp/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconfig-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -30,4 +30,4 @@ compilers=\"cc1plus\\$(exeext)\"\n \n target_libs=\"target-libstdc++-v3\"\n \n-gtfiles=\"\\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-lex.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/cp/class.c \\$(srcdir)/cp/cp-objcp-common.c \\$(srcdir)/cp/cp-lang.c\"\n+gtfiles=\"\\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/c-family/c-lex.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/cp/class.c \\$(srcdir)/cp/cp-objcp-common.c \\$(srcdir)/cp/cp-lang.c\""}, {"sha": "5b4dfb7b00a0bd3085fb468c755458b6a7651337", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"c-family/c-pragma.h\"\n #include \"diagnostic.h\"\n #include \"intl.h\""}, {"sha": "468c904710c1f499fd60754cbf5497e1d1eccf35", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -42,6 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cpplib.h\"\n #include \"target.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"tree-mudflap.h\"\n #include \"cgraph.h\"\n #include \"tree-inline.h\""}, {"sha": "ed168c48440ec90296649464e33cf8484377239a", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cxx-pretty-print.h\"\n #include \"tree-pretty-print.h\"\n #include \"pointer-set.h\"\n+#include \"c-family/c-objc.h\"\n \n #define pp_separate_with_comma(PP) pp_cxx_separate_with (PP, ',')\n "}, {"sha": "684803f4e462ce4f3b25016dafdd438887375d07", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cpplib.h\"\n #include \"flags.h\"\n #include \"c-family/c-pragma.h\"\n+#include \"c-family/c-objc.h\"\n #include \"output.h\"\n #include \"tm_p.h\"\n #include \"timevar.h\""}, {"sha": "ab533f4ff7e156a6d6691602557c291711f537c0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -35,6 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"cgraph.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"plugin.h\"\n \n \f"}, {"sha": "a696d3bd8e3065d413571010b33249d470060d25", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -36,6 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"cp-objcp-common.h\"\n #include \"tree-inline.h\"\n #include \"decl.h\""}, {"sha": "1ee0ccf934c69f2f25a193595ff62afcd53ad464", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -31,6 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"tree-inline.h\"\n #include \"tree-mudflap.h\"\n #include \"toplev.h\""}, {"sha": "7416f090de8c5e629dfdf04baca9ea111799d920", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"convert.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"params.h\"\n \n static tree pfn_from_ptrmemfunc (tree);"}, {"sha": "99df7843ede7cbaef2b378a7b76a4d873b8ce87d", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -1,3 +1,12 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c: Include c-family/c-objc.h.\n+\t* objc-lang.c: Same change.\n+\t* Make-lang.in (objc/objc-act.o): Depend on\n+\tc-family/c-objc.h.\n+\t(objc/objc-lang.o): Same change.\n+\t* config-lang.in (gtfiles): Added c-family/c-objc.h.\n+\t\n 2010-12-02  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lang-specs.h: Don't handle -ftraditional."}, {"sha": "c4797690e2423a701dac8b01e29cec5cd15ae57d", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -69,14 +69,14 @@ cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o $(BACKEND) $(\n objc/objc-lang.o : objc/objc-lang.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_TREE_H) \\\n    $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-objc.h \\\n-   c-objc-common.h objc/objc-act.h\n+   c-objc-common.h c-family/c-objc.h objc/objc-act.h\n \n objc/objc-act.o : objc/objc-act.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(TARGET_H) $(C_TREE_H) $(DIAGNOSTIC_CORE_H) toplev.h $(FLAGS_H) \\\n    objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(HASHTAB_H) $(C_PRAGMA_H) gt-objc-objc-act.h \\\n-   $(GIMPLE_H) c-lang.h\n+   $(GIMPLE_H) c-lang.h c-family/c-objc.h\n \n objc.srcextra:\n "}, {"sha": "3f296faf1092e3b3fdb559fb1c6cf803cebd6608", "filename": "gcc/objc/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fconfig-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -33,4 +33,4 @@ target_libs=target-libobjc\n # Most of the object files for cc1obj actually come from C.\n lang_requires=\"c\"\n \n-gtfiles=\"\\$(srcdir)/objc/objc-act.h \\$(srcdir)/c-parser.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/objc/objc-act.c\"\n+gtfiles=\"\\$(srcdir)/objc/objc-act.h \\$(srcdir)/c-parser.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/objc/objc-act.c\""}, {"sha": "49e2442bff601a3d865926658fcae202295878bf", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #endif\n \n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"c-family/c-pragma.h\"\n #include \"c-family/c-format.h\"\n #include \"flags.h\""}, {"sha": "19403d8bcf9ccd25572aa9ab65933e95f9ebd1f9", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"c-tree.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"ggc.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\""}, {"sha": "606a0401f39c478deae39b858142c5e0a41b29ab", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -1,3 +1,13 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* config-lang.in (gtfiles): Added c-family/c-objc.h.\n+\t* Make-lang.in (objcp/objcp-act.o): Depend on\n+\tc-family/c-objc.h.\n+\t(objcp/objcp-lang.o): Same change.\n+\t(objcp/objcp-decl.o): Same change.\n+\t* objcp-lang.c: Include c-family/c-objc.h.\n+\t* objcp-decl.c: Same change.\n+\n 2010-11-23  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tPR objc/24358"}, {"sha": "9fbef0562280d73e64b81b138bb02f099b90c569", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -72,11 +72,11 @@ cc1objplus$(exeext): $(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBDEPS)\n objcp/objcp-lang.o : objcp/objcp-lang.c \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) \\\n   $(C_COMMON_H) $(LANGHOOKS_DEF_H) objc/objc-act.h cp/cp-objcp-common.h \\\n-  $(TARGET_H) gtype-objcp.h\n+  $(TARGET_H) gtype-objcp.h c-family/c-objc.h\n \n objcp/objcp-decl.o : objcp/objcp-decl.c \\\n    $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(CXX_TREE_H) \\\n-   objc/objc-act.h objcp/objcp-decl.h\n+   objc/objc-act.h objcp/objcp-decl.h c-family/c-objc.h\n \n # The following must be an explicit rule; please keep in sync with the implicit\n # one in Makefile.in.\n@@ -85,7 +85,7 @@ objcp/objcp-act.o : objc/objc-act.c \\\n    $(EXPR_H) $(TARGET_H) $(CXX_TREE_H) $(DIAGNOSTIC_H) toplev.h $(FLAGS_H) \\\n    objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n    objcp/objcp-decl.h $(LANGHOOKS_DEF_H) $(HASHTAB_H) gt-objc-objc-act.h \\\n-   $(GIMPLE_H)\n+   $(GIMPLE_H) c-family/c-objc.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< \\\n \t\t$(OUTPUT_OPTION)\n "}, {"sha": "2f204722e1d3cee6a4a6ef1abca2c272197e3d97", "filename": "gcc/objcp/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fconfig-lang.in?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -37,4 +37,4 @@ build_by_default=\"no\"\n lang_requires=\"objc c++\"\n subdir_requires=\"objc cp\"\n \n-gtfiles=\"\\$(srcdir)/objcp/objcp-decl.c \\$(srcdir)/objc/objc-act.c \\$(srcdir)/objc/objc-act.h \\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-lex.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/cp/cp-objcp-common.c\"\n+gtfiles=\"\\$(srcdir)/objcp/objcp-decl.c \\$(srcdir)/objc/objc-act.c \\$(srcdir)/objc/objc-act.h \\$(srcdir)/cp/rtti.c \\$(srcdir)/cp/mangle.c \\$(srcdir)/cp/name-lookup.h \\$(srcdir)/cp/name-lookup.c \\$(srcdir)/cp/cp-tree.h \\$(srcdir)/cp/decl.h \\$(srcdir)/cp/call.c \\$(srcdir)/cp/decl.c \\$(srcdir)/cp/decl2.c \\$(srcdir)/cp/pt.c \\$(srcdir)/cp/repo.c \\$(srcdir)/cp/semantics.c \\$(srcdir)/cp/tree.c \\$(srcdir)/cp/parser.c \\$(srcdir)/cp/method.c \\$(srcdir)/cp/typeck2.c \\$(srcdir)/c-family/c-common.c \\$(srcdir)/c-family/c-common.h \\$(srcdir)/c-family/c-objc.h \\$(srcdir)/c-family/c-lex.c \\$(srcdir)/c-family/c-pragma.h \\$(srcdir)/c-family/c-pragma.c \\$(srcdir)/cp/cp-objcp-common.c\""}, {"sha": "3804cba2be9cde6fedec8f8f1650ff884ec84d38", "filename": "gcc/objcp/objcp-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2Fobjcp-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2Fobjcp-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-decl.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"hashtab.h\"\n \n+#include \"c-family/c-objc.h\"\n #include \"objc-act.h\"\n #include \"objcp-decl.h\"\n "}, {"sha": "c0a13b4602a400c3ecf0b3bbbfa0808b65763561", "filename": "gcc/objcp/objcp-lang.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2Fobjcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61d3ce2026946a577515bb1948874a3d8ffa97d6/gcc%2Fobjcp%2Fobjcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2Fobjcp-lang.c?ref=61d3ce2026946a577515bb1948874a3d8ffa97d6", "patch": "@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n+#include \"c-family/c-objc.h\"\n #include \"objc-act.h\"\n #include \"langhooks.h\"\n #include \"langhooks-def.h\""}]}