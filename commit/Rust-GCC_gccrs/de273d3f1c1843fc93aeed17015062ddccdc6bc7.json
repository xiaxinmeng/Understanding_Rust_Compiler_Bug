{"sha": "de273d3f1c1843fc93aeed17015062ddccdc6bc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUyNzNkM2YxYzE4NDNmYzkzYWVlZDE3MDE1MDYyZGRjY2RjNmJjNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-08-01T23:53:58Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-08-01T23:53:58Z"}, "message": "toplev.c (parse_options_and_default_flags): Don't set flag_reorder_blocks for -Os.\n\n        * toplev.c (parse_options_and_default_flags): Don't set\n        flag_reorder_blocks for -Os.\n\n        * config/avr/avr.c (avr_optimization_options): Remove.\n        * config/avr/avr.h (OPTIMIZATION_OPTIONS): Remove.\n        * config/m68hc11/m68hc11.c (m68hc11_optimization_options): Remove.\n        * config/m68hc11/m68hc11.h (OPTIMIZATION_OPTIONS): Remove.\n\nFrom-SVN: r55958", "tree": {"sha": "50ec5b18f61b1e2fbde188624805be2ec9c3af9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50ec5b18f61b1e2fbde188624805be2ec9c3af9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de273d3f1c1843fc93aeed17015062ddccdc6bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de273d3f1c1843fc93aeed17015062ddccdc6bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de273d3f1c1843fc93aeed17015062ddccdc6bc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de273d3f1c1843fc93aeed17015062ddccdc6bc7/comments", "author": null, "committer": null, "parents": [{"sha": "4e4d733e19a420252f401c7e5a469abda6a48998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e4d733e19a420252f401c7e5a469abda6a48998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e4d733e19a420252f401c7e5a469abda6a48998"}], "stats": {"total": 51, "additions": 19, "deletions": 32}, "files": [{"sha": "70a5c6b86610392a44ab938a4820fbd4f0bb73eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de273d3f1c1843fc93aeed17015062ddccdc6bc7", "patch": "@@ -1,3 +1,13 @@\n+2002-08-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* toplev.c (parse_options_and_default_flags): Don't set \n+\tflag_reorder_blocks for -Os.\n+\n+\t* config/avr/avr.c (avr_optimization_options): Remove.\n+\t* config/avr/avr.h (OPTIMIZATION_OPTIONS): Remove.\n+\t* config/m68hc11/m68hc11.c (m68hc11_optimization_options): Remove.\n+\t* config/m68hc11/m68hc11.h (OPTIMIZATION_OPTIONS): Remove.\n+\n 2002-08-01  H.J. Lu <hjl@gnu.org>\n \t    Richard Henderson  <rth@redhat.com>\n "}, {"sha": "a8f9bda5df67e143844f23cd67bba3aecdfaa94b", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=de273d3f1c1843fc93aeed17015062ddccdc6bc7", "patch": "@@ -258,16 +258,6 @@ avr_override_options ()\n }\n \n \n-void\n-avr_optimization_options (level, size)\n-     int level ATTRIBUTE_UNUSED;\n-     int size;\n-{\n-  if (size)\n-    flag_reorder_blocks = 0;\n-}\n-\n-\n /* Initialize TMP_REG_RTX and ZERO_REG_RTX */\n void\n avr_init_once ()"}, {"sha": "274d42700f944f00524897bae4fca7f51c33e966", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=de273d3f1c1843fc93aeed17015062ddccdc6bc7", "patch": "@@ -132,9 +132,6 @@ extern int avr_asm_only_p;\n    Don't use this macro to turn on various extra optimizations for\n    `-O'.  That is what `OPTIMIZATION_OPTIONS' is for.  */\n \n-#define OPTIMIZATION_OPTIONS(LEVEL, SIZE) \\\n-   avr_optimization_options (LEVEL, SIZE)\n-\n #define CAN_DEBUG_WITHOUT_FP\n /* Define this macro if debugging can be performed even without a\n    frame pointer.  If this macro is defined, GNU CC will turn on the"}, {"sha": "1c85ca592a9ee7c7db62b1128700909b9ebaa39a", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=de273d3f1c1843fc93aeed17015062ddccdc6bc7", "patch": "@@ -288,21 +288,6 @@ m68hc11_override_options ()\n }\n \n \n-int\n-m68hc11_optimization_options (level, size)\n-     int level ATTRIBUTE_UNUSED;\n-     int size;\n-{\n-  /* When optimizing for size, do not reorder basic blocks because\n-     it duplicates some insns for speed and this results in larder code.\n-     This reordering can still be enabled but explicitly.  */\n-  if (size)\n-    {\n-      flag_reorder_blocks = 0;\n-    }\n-  return 0;\n-}\n-\n void\n m68hc11_conditional_register_usage ()\n {"}, {"sha": "5a9fc529c64250d9740d0ebac336ea2a062841a3", "filename": "gcc/config/m68hc11/m68hc11.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.h?ref=de273d3f1c1843fc93aeed17015062ddccdc6bc7", "patch": "@@ -214,10 +214,6 @@ extern const char *m68hc11_soft_reg_count;\n \n #define OVERRIDE_OPTIONS\tm68hc11_override_options ();\n \n-/* Define this to change the optimizations performed by default.  */\n-#define OPTIMIZATION_OPTIONS(LEVEL, SIZE) \\\n-m68hc11_optimization_options(LEVEL, SIZE)\n-\n \f\n /* Define cost parameters for a given processor variant.  */\n struct processor_costs {"}, {"sha": "25d3cd2b4000d41a97dc15b661a28b8ca87f4987", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de273d3f1c1843fc93aeed17015062ddccdc6bc7/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=de273d3f1c1843fc93aeed17015062ddccdc6bc7", "patch": "@@ -4813,6 +4813,15 @@ parse_options_and_default_flags (argc, argv)\n       align_jumps = 1;\n       align_labels = 1;\n       align_functions = 1;\n+\n+      /* Don't reorder blocks when optimizing for size because extra\n+\t jump insns may be created; also barrier may create extra padding.\n+\n+\t More correctly we should have a block reordering mode that tried\n+\t to minimize the combined size of all the jumps.  This would more\n+\t or less automatically remove extra jumps, but would also try to\n+\t use more short jumps instead of long jumps.  */\n+      flag_reorder_blocks = 0;\n     }\n \n   /* Initialize whether `char' is signed.  */"}]}