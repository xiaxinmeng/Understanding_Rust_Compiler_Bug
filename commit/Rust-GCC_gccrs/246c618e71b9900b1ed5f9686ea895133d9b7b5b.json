{"sha": "246c618e71b9900b1ed5f9686ea895133d9b7b5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2YzYxOGU3MWI5OTAwYjFlZDVmOTY4NmVhODk1MTMzZDliN2I1Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-04T13:33:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-04T13:33:02Z"}, "message": "Update C++17 library implementation status table\n\n\t* doc/xml/manual/status_cxx2017.xml: Update C++17 status table.\n\t* doc/html/manual/status.html: Regenerate.\n\nFrom-SVN: r239124", "tree": {"sha": "1e9bf0ef0909cb7c5b791540b1c2e23bdd3136fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e9bf0ef0909cb7c5b791540b1c2e23bdd3136fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/246c618e71b9900b1ed5f9686ea895133d9b7b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246c618e71b9900b1ed5f9686ea895133d9b7b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246c618e71b9900b1ed5f9686ea895133d9b7b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246c618e71b9900b1ed5f9686ea895133d9b7b5b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d8e740c1cfb53908ad2a6af6ddbbae5c611c941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8e740c1cfb53908ad2a6af6ddbbae5c611c941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8e740c1cfb53908ad2a6af6ddbbae5c611c941"}], "stats": {"total": 879, "additions": 764, "deletions": 115}, "files": [{"sha": "59d11884ff23fa64e4a26883f2a27f2eaf30cfb5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246c618e71b9900b1ed5f9686ea895133d9b7b5b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246c618e71b9900b1ed5f9686ea895133d9b7b5b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=246c618e71b9900b1ed5f9686ea895133d9b7b5b", "patch": "@@ -1,5 +1,8 @@\n 2016-08-04  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* doc/xml/manual/status_cxx2017.xml: Update C++17 status table.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n \t* testsuite/20_util/enable_shared_from_this/members/reinit.cc: Use\n \teffective target not dg-options. Move check for feature-test macro to:\n \t* testsuite/20_util/enable_shared_from_this/members/weak_from_this.cc:"}, {"sha": "0b4821c00f89c2df7c842d589d97ceb03c590f4d", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 222, "deletions": 49, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246c618e71b9900b1ed5f9686ea895133d9b7b5b/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246c618e71b9900b1ed5f9686ea895133d9b7b5b/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=246c618e71b9900b1ed5f9686ea895133d9b7b5b", "patch": "@@ -470,82 +470,255 @@\n <code class=\"constant\">__cplusplus</code> is used to check for the\n presence of the required flag.\n </p><p>\n-This page describes the C++1z and library TS support in mainline GCC SVN,\n+This section describes the C++1z and library TS support in mainline GCC SVN,\n not in any particular release.\n-</p><div class=\"table\"><a id=\"table.cxx1z_status\"></a><p class=\"title\"><strong>Table\u00a01.5.\u00a0C++ 201z Implementation Status</strong></p><div class=\"table-contents\"><table summary=\"C++ 201z Implementation Status\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /></colgroup><thead><tr><th align=\"left\">Paper</th><th align=\"left\">Title</th><th align=\"left\">Status</th><th align=\"left\">Comments</th></tr></thead><tbody><tr><td align=\"left\">\n+</p><p>\n+The following table lists new library features that have been accepted into\n+the C++1z working draft. The \"Proposal\" column provides a link to the\n+ISO C++ committee proposal that describes the feature, while the \"Status\"\n+column indicates the first version of GCC that contains an implementation of\n+this feature (if it has been implemented).\n+The \"SD-6 Feature Test\" column shows the corresponding macro or header from\n+<a class=\"link\" href=\"https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations\" target=\"_top\">SD-6:\n+Feature-testing recommendations for C++</a>.\n+</p><div class=\"table\"><a id=\"table.cxx1z_status\"></a><p class=\"title\"><strong>Table\u00a01.5.\u00a0C++ 201z Implementation Status</strong></p><div class=\"table-contents\"><table summary=\"C++ 201z Implementation Status\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /></colgroup><thead><tr><th align=\"left\">Library Feature</th><th align=\"left\">Proposal</th><th align=\"left\">Status</th><th align=\"left\">SD-6 Feature Test</th></tr></thead><tbody><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n+\t<code class=\"code\">constexpr std::hardware_{constructive,destructive}_interference_size</code>\n+      </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0154r1.html\" target=\"_top\">\n+\tP0154R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__cpp_lib_hardware_interference_size &gt;= 201603</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Core Issue 1776: Replacement of class objects containing reference members</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0137r1.html\" target=\"_top\">\n+\tP0137R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__cpp_lib_launder &gt;= 201606</code> </td></tr><tr><td align=\"left\">Wording for <code class=\"code\">std::uncaught_exceptions</code></td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/JTC1/sc22/WG21/docs/papers/2014/n4259.pdf\" target=\"_top\">\n \t  N4259\n \t</a>\n-      </td><td align=\"left\">Wording for <code class=\"code\">std::uncaught_exceptions</code></td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4190.htm\" target=\"_top\">\n-\t  N4190\n+      </td><td align=\"center\">6.1</td><td align=\"left\"><code class=\"code\">__cpp_lib_uncaught_exceptions &gt;= 201411</code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Variant: a type-safe union for C++17 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0088r3.html\" target=\"_top\">\n+\tP0088R3\n \t</a>\n-      </td><td align=\"left\">\n+      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__has_include(&lt;variant&gt;)</code> </td></tr><tr><td align=\"left\"> Library Fundamentals V1 TS Components: <code class=\"code\">optional</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\" target=\"_top\">\n+\tP0220R1\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"> <code class=\"code\">__has_include(&lt;optional&gt;)</code> </td></tr><tr><td align=\"left\"> Library Fundamentals V1 TS Components: <code class=\"code\">any</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\" target=\"_top\">\n+\tP0220R1\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"> <code class=\"code\">__has_include(&lt;any&gt;)</code> </td></tr><tr><td align=\"left\"> Library Fundamentals V1 TS Components: <code class=\"code\">string_view</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\" target=\"_top\">\n+\tP0220R1\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"> <code class=\"code\">__has_include(&lt;string_view&gt;)</code> </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Library Fundamentals V1 TS Components: <code class=\"code\">memory_resource</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\" target=\"_top\">\n+\tP0220R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"> <code class=\"code\">__has_include(&lt;memory_resource&gt;)</code> </td></tr><tr><td align=\"left\"> Constant View: A proposal for a <code class=\"code\">std::as_const</code> helper function template\t</td><td align=\"left\">\n+\t<a class=\"link\" href=\"\" target=\"_top\">\n+\tP0007R1\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_as_const &gt;= 201510 </code></td></tr><tr><td align=\"left\"> Improving pair and tuple </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4387\" target=\"_top\">\n+\tN4387\n+\t</a>\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"> N/A </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> make_from_tuple: apply for construction </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0209r2.pdf\" target=\"_top\">\n+\tP0209R2\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_make_from_tuple &gt;= 201606 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n         Removing <code class=\"code\">auto_ptr</code>, <code class=\"code\">random_shuffle()</code>,\n         And Old <code class=\"code\">&lt;functional&gt;</code> Stuff\n-      </td><td align=\"left\">N</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4284.htm\" target=\"_top\">\n-\t  N4284\n+      </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4190.htm\" target=\"_top\">\n+\t  N4190\n+\t</a>\n+      </td><td align=\"center\">No (kept for backwards compatibility)</td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Deprecating Vestigial Library Parts in C++17 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0174r2.html\" target=\"_top\">\n+\tP0174R2\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Making <code class=\"code\">std::owner_less</code> more flexible </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0074r0.html\" target=\"_top\">\n+\tP0074R0\n \t</a>\n-      </td><td align=\"left\">Contiguous Iterators </td><td align=\"left\">Y</td><td align=\"left\">No code changes required</td></tr><tr><td align=\"left\">\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_transparent_operators &gt;= 201510 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> <code class=\"code\">std::addressof</code> should be constexpr </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0304r0.html#2296\" target=\"_top\">\n+\tLWG2296\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_addressof_constexpr &gt;= 201603 </code></td></tr><tr><td align=\"left\"> Safe conversions in <code class=\"code\">unique_ptr&lt;T[]&gt;</code> </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4089.pdf\" target=\"_top\">\n-\t  N4089\n+\tN4089\n+\t</a>\n+      </td><td align=\"center\"> 5 ? </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> LWG 2228: Missing SFINAE rule in unique_ptr templated assignment </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4366.html\" target=\"_top\">\n+\t  N4366\n+\t</a>\n+      </td><td align=\"center\"> 5 ? </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Re-enabling <code class=\"code\">shared_from_this</code></td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0033r1.html\" target=\"_top\">\n+\tP0033R1\n+\t</a>\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"><code class=\"code\">__cpp_lib_enable_shared_from_this &gt;= 201603</code></td></tr><tr><td align=\"left\"> A proposal to add <code class=\"code\">invoke</code> function template </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4169.html\" target=\"_top\">\n+\tN4169\n \t</a>\n-      </td><td align=\"left\">Safe conversions in <code class=\"code\">unique_ptr&lt;T[]&gt;</code> </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_invoke &gt;= 201411 </code></td></tr><tr><td align=\"left\">TriviallyCopyable <code class=\"code\">reference_wrapper</code> </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4277.html\" target=\"_top\">\n \t  N4277\n \t</a>\n-      </td><td align=\"left\">TriviallyCopyable <code class=\"code\">reference_wrapper</code> </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4258.pdf\" target=\"_top\">\n-\t  N4258\n+      </td><td align=\"center\"> 5.1 </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Adopt <code class=\"code\">not_fn</code> from Library Fundamentals 2 for C++17 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0005r4.html\" target=\"_top\">\n+\tP0005R4\n \t</a>\n-      </td><td align=\"left\">Cleaning-up noexcept in the Library</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4279.html\" target=\"_top\">\n-\t  N4279\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\">__cpp_lib_not_fn &gt;= 201603</code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Fixes for <code class=\"code\">not_fn</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0358r1.html\" target=\"_top\">\n+\tP0358R1\n \t</a>\n-      </td><td align=\"left\">Improved insertion interface for unique-key maps</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n+      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Fixing a design mistake in the searchers interface in Library Fundamentals </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0253r1.pdf\" target=\"_top\">\n+\tP0253R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Extending memory management tools </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0040r3.html\" target=\"_top\">\n+\tP0040R3\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> </code></td></tr><tr><td align=\"left\"> <code class=\"code\">shared_ptr::weak_type</code></td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0163r0.html\" target=\"_top\">\n+\tP0163R0\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_shared_ptr_weak_type &gt;= 201606</code></td></tr><tr><td align=\"left\">Transformation Trait Alias <code class=\"code\">void_t</code></td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/JTC1/sc22/WG21/docs/papers/2014/n3911.pdf\" target=\"_top\">\n \t  N3911\n \t</a>\n-      </td><td align=\"left\">Transformation Trait Alias <code class=\"code\">void_t</code></td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4169.html\" target=\"_top\">\n-\t  N4169\n+      </td><td align=\"center\">6.1</td><td align=\"left\"><code class=\"code\"> __cpp_lib_void_t &gt;= 201411</code></td></tr><tr><td align=\"left\"> Wording for <code class=\"code\">bool_constant</code>, revision 1 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4389.html\" target=\"_top\">\n+\t  N4389\n \t</a>\n-      </td><td align=\"left\">A proposal to add invoke function template</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4280.pdf\" target=\"_top\">\n-\t  N4280\n+      </td><td align=\"center\">6.1</td><td align=\"left\"><code class=\"code\"> __cpp_lib_bool_constant &gt;= 201505</code></td></tr><tr><td align=\"left\"> Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0006r0.html\" target=\"_top\">\n+\tP0006R0\n \t</a>\n-      </td><td align=\"left\">Non-member size() and more</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4366.html\" target=\"_top\">\n-\t  N4366\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_type_trait_variable_templates &gt;= 201510 </code></td></tr><tr><td align=\"left\"> Logical Operator Type Traits</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0013r1.html\" target=\"_top\">\n+\tP0013R1\n \t</a>\n-      </td><td align=\"left\">\n-        LWG 2228: Missing SFINAE rule in unique_ptr templated assignment\n-      </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4387.html\" target=\"_top\">\n-\t  N4387\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_logical_traits &gt;= 201510 </code></td></tr><tr><td align=\"left\"> Adding [nothrow-]swappable traits </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0185r1.html\" target=\"_top\">\n+\tP0185R1\n \t</a>\n-      </td><td align=\"left\"> Improving pair and tuple, revision 3 </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4389.html\" target=\"_top\">\n-\t  N4389\n+      </td><td align=\"center\"> 7 (<code class=\"code\">__is_swappable</code> available since 6.1)</td><td align=\"left\"><code class=\"code\"> __cpp_lib_is_swappable &gt;= 201603 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> <code class=\"code\">is_callable</code>, the missing INVOKE related trait</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0077r2.html\" target=\"_top\">\n+\tP0077R2\n \t</a>\n-      </td><td align=\"left\"> Wording for bool_constant, revision 1 </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4508.html\" target=\"_top\">\n-\t  N4508\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_is_callable &gt;= 201603 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> has_unique_object_representations </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0258r2.html\" target=\"_top\">\n+\tP0258R2\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_has_unique_object_representations &gt;= 201606 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Ordered by default </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0181r1.html\" target=\"_top\">\n+\tP0181R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_default_order &gt;= 201606</code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Polishing <code class=\"code\">&lt;chrono&gt;</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0092r1.html\" target=\"_top\">\n+\tP0092R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_chrono &gt;= 201510 </code></td></tr><tr><td align=\"left\"> Integrating <code class=\"code\">std::string_view</code> and <code class=\"code\">std::string</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0254r2.pdf\" target=\"_top\">\n+\tP0254R2\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> </code></td></tr><tr><td align=\"left\"> Give 'std::string' a non-const '.data()' member function </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0272r1.html\" target=\"_top\">\n+\tP0272R1\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> </code></td></tr><tr><td align=\"left\">Cleaning-up noexcept in the Library</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4258.pdf\" target=\"_top\">\n+\t  N4258\n \t</a>\n-      </td><td align=\"left\">A proposal to add shared_mutex (untimed) (Revision 4)</td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n+      </td><td align=\"center\">6.1</td><td align=\"left\"><code class=\"code\"> __cpp_lib_allocator_traits_is_always_equal &gt;= 201411 </code></td></tr><tr><td align=\"left\">Contiguous Iterators </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4284.htm\" target=\"_top\">\n+\t  N4284\n+\t</a>\n+      </td><td align=\"center\">N/A</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\"> Minimal incomplete type support for standard containers </td><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4510.html\" target=\"_top\">\n-\t  N4510\n+\tN4510\n \t</a>\n-      </td><td align=\"left\">\n-        Minimal incomplete type support for standard containers, revision 4\n-      </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">\n-\t<a class=\"link\" href=\"http://open-std.org/JTC1/SC22/WG21/docs/papers/2015/p0013r1.html\" target=\"_top\">\n-\t  P0013R1\n+      </td><td align=\"center\"> 7 (3.0)</td><td align=\"left\"><code class=\"code\"> __cpp_lib_incomplete_container_elements &gt;= 201505 </code>\n+\t     (the feature was always supported, but the macro was not defined until GCC 7)\n+      </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Emplace return type </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0084r2.pdf\" target=\"_top\">\n+\tP0084R2\n \t</a>\n-      </td><td align=\"left\">\n-        Logical Operator Type Traits (revision 1)\n-      </td><td align=\"left\">Y</td><td align=\"left\">\u00a0</td></tr></tbody></table></div></div><br class=\"table-break\" /><div class=\"table\"><a id=\"table.cxx1z_ts_status\"></a><p class=\"title\"><strong>Table\u00a01.6.\u00a0C++ Technical Specifications Implementation Status</strong></p><div class=\"table-contents\"><table summary=\"C++ Technical Specifications Implementation Status\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /></colgroup><thead><tr><th align=\"left\">Paper</th><th align=\"left\">Title</th><th align=\"left\">Status</th><th align=\"left\">Comments</th></tr></thead><tbody><tr><td align=\"left\">\n+      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr><td align=\"left\">Improved insertion interface for unique-key maps</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4279.html\" target=\"_top\">\n+\t  N4279\n+\t</a>\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_map_try_emplace &gt;= 201411</code>,\n+\t     <code class=\"code\"> __cpp_lib_unordered_map_try_emplace &gt;= 201411</code>\n+      </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Splicing Maps and Sets </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0083r3.pdf\" target=\"_top\">\n+\tP0083R3\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_node_extract &gt;= 201606 </code></td></tr><tr><td align=\"left\">Non-member <code class=\"code\">size()</code> and more</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4280.pdf\" target=\"_top\">\n+\t  N4280\n+\t</a>\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_nonmember_container_access &gt;= 201411 </code></td></tr><tr><td align=\"left\"> A Proposal to Add Constexpr Modifiers to <code class=\"code\">reverse_iterator</code>, <code class=\"code\">move_iterator</code>, <code class=\"code\">array</code> and Range Access </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html\" target=\"_top\">\n+\tP0031R0\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_array_constexpr &gt;= 201603 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> The Parallelism TS Should be Standardized\t </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0024r2.html\" target=\"_top\">\n+\tP0024R2\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __has_include(&lt;execution&gt;) </code>,\n+\t     <code class=\"code\"> __cpp_lib_parallel_algorithm &gt;= 201603 </code></td></tr><tr><td align=\"left\"> An algorithm to \"clamp\" a value between a pair of boundary values </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0025r0.html\" target=\"_top\">\n+\tP0025R0\n+\t</a>\n+      </td><td align=\"center\"> 7 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_clamp &gt;= 201603 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Adopt Selected Library Fundamentals V2 Components for C++17 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0295r0.pdf\" target=\"_top\">\n+\tP0295R0\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_gcd &gt;= 201606 </code>,\n+\t     <code class=\"code\"> __cpp_lib_lcm &gt;= 201606 </code>\n+      </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Proposal to Introduce a 3-Argument Overload to <code class=\"code\">std::hypot</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0030r1.pdf\" target=\"_top\">\n+\tP0030R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_hypot &gt;= 201603 </code></td></tr><tr><td align=\"left\"> Mathematical Special Functions for C++17 </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0226r1.pdf\" target=\"_top\">\n+\tP0226R1\n+\t</a>\n+      </td><td align=\"center\"> 7 (6.1) </td><td align=\"left\"><code class=\"code\"> __cpp_lib_math_special_functions &gt;= 201603 </code>\n+\t     (for GCC 6 or pre-C++17 define\n+\t     <code class=\"code\">__STDCPP_WANT_MATH_SPEC_FUNCS__</code> to a non-zero value\n+\t     and test for <code class=\"code\">__STDCPP_MATH_SPEC_FUNCS__ &gt;= 201003L</code>)\n+      </td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">Adopt the File System TS for C++17\t </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0218r1.html\" target=\"_top\">\n+\tP0218R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __has_include(&lt;filesystem&gt;) </code>,\n+\t     <code class=\"code\"> __cpp_lib_filesystem &gt;= 201603 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Relative Paths for Filesystem</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0219r1.html\" target=\"_top\">\n+\tP0219R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Adapting string_view by filesystem paths </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0392r0.pdf\" target=\"_top\">\n+\tP0392R0\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\">\u00a0</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> constexpr <code class=\"code\">atomic&lt;T&gt;::is_always_lock_free</code>\t </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0152r1.html\" target=\"_top\">\n+\tP0152R1\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_atomic_is_always_lock_free &gt;= 201603 </code></td></tr><tr><td align=\"left\">A proposal to add <code class=\"code\">shared_mutex</code> (untimed) (Revision 4)</td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4508.html\" target=\"_top\">\n+\t  N4508\n+\t</a>\n+      </td><td align=\"center\"> 6.1 </td><td align=\"left\"><code class=\"code\"> __cpp_lib_shared_mutex &gt;= 201505 </code></td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\"> Variadic <code class=\"code\">lock_guard</code> </td><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0156r0.html\" target=\"_top\">\n+\tP0156R0\n+\t</a>\n+      </td><td align=\"center\"> No </td><td align=\"left\"><code class=\"code\"> __cpp_lib_lock_guard_variadic &gt;= 201510 </code></td></tr></tbody></table></div></div><br class=\"table-break\" /><div class=\"table\"><a id=\"table.cxx1z_ts_status\"></a><p class=\"title\"><strong>Table\u00a01.6.\u00a0C++ Technical Specifications Implementation Status</strong></p><div class=\"table-contents\"><table summary=\"C++ Technical Specifications Implementation Status\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /><col align=\"left\" class=\"c3\" /><col align=\"left\" class=\"c4\" /></colgroup><thead><tr><th align=\"left\">Paper</th><th align=\"left\">Title</th><th align=\"left\">Status</th><th align=\"left\">Comments</th></tr></thead><tbody><tr><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4076.html\" target=\"_top\">\n \t  N4076\n \t</a>"}, {"sha": "d32399d551afccba04a450ba4075415e577a68d8", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 539, "deletions": 66, "changes": 605, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246c618e71b9900b1ed5f9686ea895133d9b7b5b/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246c618e71b9900b1ed5f9686ea895133d9b7b5b/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=246c618e71b9900b1ed5f9686ea895133d9b7b5b", "patch": "@@ -20,10 +20,21 @@ presence of the required flag.\n </para>\n \n <para>\n-This page describes the C++1z and library TS support in mainline GCC SVN,\n+This section describes the C++1z and library TS support in mainline GCC SVN,\n not in any particular release.\n </para>\n \n+<para>\n+The following table lists new library features that have been accepted into\n+the C++1z working draft. The \"Proposal\" column provides a link to the\n+ISO C++ committee proposal that describes the feature, while the \"Status\"\n+column indicates the first version of GCC that contains an implementation of\n+this feature (if it has been implemented).\n+The \"SD-6 Feature Test\" column shows the corresponding macro or header from\n+<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"https://isocpp.org/std/standing-documents/sd-6-sg10-feature-test-recommendations\">SD-6:\n+Feature-testing recommendations for C++</link>.\n+</para>\n+\n <table frame=\"all\" xml:id=\"table.cxx1z_status\">\n <title>C++ 201z Implementation Status</title>\n \n@@ -34,201 +45,663 @@ not in any particular release.\n <colspec colname=\"c4\"/>\n   <thead>\n     <row>\n-      <entry>Paper</entry>\n-      <entry>Title</entry>\n+      <entry>Library Feature</entry>\n+      <entry>Proposal</entry>\n       <entry>Status</entry>\n-      <entry>Comments</entry>\n+      <entry>SD-6 Feature Test</entry>\n     </row>\n   </thead>\n \n   <tbody>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry>\n+\t<code>constexpr std::hardware_{constructive,destructive}_interference_size</code>\n+      </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0154r1.html\">\n+\tP0154R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry> <code>__cpp_lib_hardware_interference_size >= 201603</code> </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Core Issue 1776: Replacement of class objects containing reference members</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0137r1.html\">\n+\tP0137R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry> <code>__cpp_lib_launder >= 201606</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry>Wording for <code>std::uncaught_exceptions</code></entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/JTC1/sc22/WG21/docs/papers/2014/n4259.pdf\">\n \t  N4259\n \t</link>\n       </entry>\n-      <entry>Wording for <code>std::uncaught_exceptions</code></entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\">6.1</entry>\n+      <entry><code>__cpp_lib_uncaught_exceptions >= 201411</code></entry>\n     </row>\n \n     <row>\n       <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Variant: a type-safe union for C++17 </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4190.htm\">\n-\t  N4190\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0088r3.html\">\n+\tP0088R3\n \t</link>\n       </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry> <code>__has_include(&lt;variant&gt;)</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Library Fundamentals V1 TS Components: <code>optional</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\">\n+\tP0220R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry> <code>__has_include(&lt;optional&gt;)</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Library Fundamentals V1 TS Components: <code>any</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\">\n+\tP0220R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry> <code>__has_include(&lt;any&gt;)</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Library Fundamentals V1 TS Components: <code>string_view</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\">\n+\tP0220R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry> <code>__has_include(&lt;string_view&gt;)</code> </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Library Fundamentals V1 TS Components: <code>memory_resource</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0220r1.html\">\n+\tP0220R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry> <code>__has_include(&lt;memory_resource&gt;)</code> </entry>\n+    </row>\n+\n+    <row>\n+      <entry> Constant View: A proposal for a <code>std::as_const</code> helper function template\t</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"\">\n+\tP0007R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> __cpp_lib_as_const >= 201510 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Improving pair and tuple </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4387\">\n+\tN4387\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry> N/A </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> make_from_tuple: apply for construction </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0209r2.pdf\">\n+\tP0209R2\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_make_from_tuple >= 201606 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>\n         Removing <code>auto_ptr</code>, <code>random_shuffle()</code>,\n         And Old <code>&lt;functional&gt;</code> Stuff\n       </entry>\n-      <entry>N</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4190.htm\">\n+\t  N4190\n+\t</link>\n+      </entry>\n+      <entry align=\"center\">No (kept for backwards compatibility)</entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Deprecating Vestigial Library Parts in C++17 </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4284.htm\">\n-\t  N4284\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0174r2.html\">\n+\tP0174R2\n \t</link>\n       </entry>\n-      <entry>Contiguous Iterators </entry>\n-      <entry>Y</entry>\n-      <entry>No code changes required</entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry/>\n     </row>\n \n     <row>\n+      <entry> Making <code>std::owner_less</code> more flexible </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0074r0.html\">\n+\tP0074R0\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> __cpp_lib_transparent_operators >= 201510 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> <code>std::addressof</code> should be constexpr </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0304r0.html#2296\">\n+\tLWG2296\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_addressof_constexpr >= 201603 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Safe conversions in <code>unique_ptr&lt;T[]&gt;</code> </entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4089.pdf\">\n-\t  N4089\n+\tN4089\n \t</link>\n       </entry>\n-      <entry>Safe conversions in <code>unique_ptr&lt;T[]&gt;</code> </entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\"> 5 ? </entry>\n+      <entry/>\n+    </row>\n+\n+    <row>\n+      <entry> LWG 2228: Missing SFINAE rule in unique_ptr templated assignment </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4366.html\">\n+\t  N4366\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 5 ? </entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <entry> Re-enabling <code>shared_from_this</code></entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0033r1.html\">\n+\tP0033R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry><code>__cpp_lib_enable_shared_from_this >= 201603</code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> A proposal to add <code>invoke</code> function template </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4169.html\">\n+\tN4169\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry><code> __cpp_lib_invoke >= 201411 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry>TriviallyCopyable <code>reference_wrapper</code> </entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4277.html\">\n \t  N4277\n \t</link>\n       </entry>\n-      <entry>TriviallyCopyable <code>reference_wrapper</code> </entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\"> 5.1 </entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Adopt <code>not_fn</code> from Library Fundamentals 2 for C++17 </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4258.pdf\">\n-\t  N4258\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0005r4.html\">\n+\tP0005R4\n \t</link>\n       </entry>\n-      <entry>Cleaning-up noexcept in the Library</entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code>__cpp_lib_not_fn >= 201603</code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Fixes for <code>not_fn</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0358r1.html\">\n+\tP0358R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Fixing a design mistake in the searchers interface in Library Fundamentals </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4279.html\">\n-\t  N4279\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0253r1.pdf\">\n+\tP0253R1\n \t</link>\n       </entry>\n-      <entry>Improved insertion interface for unique-key maps</entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\"> No </entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Extending memory management tools </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0040r3.html\">\n+\tP0040R3\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> <code>shared_ptr::weak_type</code></entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0163r0.html\">\n+\tP0163R0\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> __cpp_lib_shared_ptr_weak_type >= 201606</code></entry>\n+    </row>\n+\n+    <row>\n+      <entry>Transformation Trait Alias <code>void_t</code></entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/JTC1/sc22/WG21/docs/papers/2014/n3911.pdf\">\n \t  N3911\n \t</link>\n       </entry>\n-      <entry>Transformation Trait Alias <code>void_t</code></entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\">6.1</entry>\n+      <entry><code> __cpp_lib_void_t >= 201411</code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Wording for <code>bool_constant</code>, revision 1 </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4389.html\">\n+\t  N4389\n+\t</link>\n+      </entry>\n+      <entry align=\"center\">6.1</entry>\n+      <entry><code> __cpp_lib_bool_constant >= 201505</code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0006r0.html\">\n+\tP0006R0\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> __cpp_lib_type_trait_variable_templates >= 201510 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Logical Operator Type Traits</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0013r1.html\">\n+\tP0013R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry><code> __cpp_lib_logical_traits >= 201510 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Adding [nothrow-]swappable traits </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0185r1.html\">\n+\tP0185R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 (<code>__is_swappable</code> available since 6.1)</entry>\n+      <entry><code> __cpp_lib_is_swappable >= 201603 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> <code>is_callable</code>, the missing INVOKE related trait</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0077r2.html\">\n+\tP0077R2\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_is_callable >= 201603 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> has_unique_object_representations </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0258r2.html\">\n+\tP0258R2\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_has_unique_object_representations >= 201606 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Ordered by default </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0181r1.html\">\n+\tP0181R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_default_order >= 201606</code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Polishing <code>&lt;chrono&gt;</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0092r1.html\">\n+\tP0092R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_chrono >= 201510 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Integrating <code>std::string_view</code> and <code>std::string</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0254r2.pdf\">\n+\tP0254R2\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry> Give 'std::string' a non-const '.data()' member function </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0272r1.html\">\n+\tP0272R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry>Cleaning-up noexcept in the Library</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4258.pdf\">\n+\t  N4258\n+\t</link>\n+      </entry>\n+      <entry align=\"center\">6.1</entry>\n+      <entry><code> __cpp_lib_allocator_traits_is_always_equal >= 201411 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry>Contiguous Iterators </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4284.htm\">\n+\t  N4284\n+\t</link>\n+      </entry>\n+      <entry align=\"center\">N/A</entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <entry> Minimal incomplete type support for standard containers </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4169.html\">\n-\t  N4169\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4510.html\">\n+\tN4510\n \t</link>\n       </entry>\n-      <entry>A proposal to add invoke function template</entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\"> 7 (3.0)</entry>\n+      <entry><code> __cpp_lib_incomplete_container_elements >= 201505 </code>\n+\t     (the feature was always supported, but the macro was not defined until GCC 7)\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Emplace return type </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0084r2.pdf\">\n+\tP0084R2\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n       <entry/>\n     </row>\n \n     <row>\n+      <entry>Improved insertion interface for unique-key maps</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4279.html\">\n+\t  N4279\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry><code> __cpp_lib_map_try_emplace >= 201411</code>,\n+\t     <code> __cpp_lib_unordered_map_try_emplace >= 201411</code>\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Splicing Maps and Sets </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0083r3.pdf\">\n+\tP0083R3\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_node_extract >= 201606 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry>Non-member <code>size()</code> and more</entry>\n       <entry>\n \t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4280.pdf\">\n \t  N4280\n \t</link>\n       </entry>\n-      <entry>Non-member size() and more</entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry><code> __cpp_lib_nonmember_container_access >= 201411 </code></entry>\n     </row>\n \n     <row>\n+      <entry> A Proposal to Add Constexpr Modifiers to <code>reverse_iterator</code>, <code>move_iterator</code>, <code>array</code> and Range Access </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4366.html\">\n-\t  N4366\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0031r0.html\">\n+\tP0031R0\n \t</link>\n       </entry>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> __cpp_lib_array_constexpr >= 201603 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> The Parallelism TS Should be Standardized\t </entry>\n       <entry>\n-        LWG 2228: Missing SFINAE rule in unique_ptr templated assignment\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0024r2.html\">\n+\tP0024R2\n+\t</link>\n       </entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __has_include(&lt;execution&gt;) </code>,\n+\t     <code> __cpp_lib_parallel_algorithm >= 201603 </code></entry>\n     </row>\n \n     <row>\n+      <entry> An algorithm to \"clamp\" a value between a pair of boundary values </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4387.html\">\n-\t  N4387\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0025r0.html\">\n+\tP0025R0\n \t</link>\n       </entry>\n-      <entry> Improving pair and tuple, revision 3 </entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\"> 7 </entry>\n+      <entry><code> __cpp_lib_clamp >= 201603 </code></entry>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Adopt Selected Library Fundamentals V2 Components for C++17 </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4389.html\">\n-\t  N4389\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0295r0.pdf\">\n+\tP0295R0\n \t</link>\n       </entry>\n-      <entry> Wording for bool_constant, revision 1 </entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_gcd >= 201606 </code>,\n+\t     <code> __cpp_lib_lcm >= 201606 </code>\n+      </entry>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Proposal to Introduce a 3-Argument Overload to <code>std::hypot</code> </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4508.html\">\n-\t  N4508\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0030r1.pdf\">\n+\tP0030R1\n \t</link>\n       </entry>\n-      <entry>A proposal to add shared_mutex (untimed) (Revision 4)</entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_hypot >= 201603 </code></entry>\n     </row>\n \n     <row>\n+      <entry> Mathematical Special Functions for C++17 </entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4510.html\">\n-\t  N4510\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0226r1.pdf\">\n+\tP0226R1\n \t</link>\n       </entry>\n+      <entry align=\"center\"> 7 (6.1) </entry>\n+      <entry><code> __cpp_lib_math_special_functions >= 201603 </code>\n+\t     (for GCC 6 or pre-C++17 define\n+\t     <code>__STDCPP_WANT_MATH_SPEC_FUNCS__</code> to a non-zero value\n+\t     and test for <code>__STDCPP_MATH_SPEC_FUNCS__ >= 201003L</code>)\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry>Adopt the File System TS for C++17\t </entry>\n       <entry>\n-        Minimal incomplete type support for standard containers, revision 4\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0218r1.html\">\n+\tP0218R1\n+\t</link>\n       </entry>\n-      <entry>Y</entry>\n-      <entry/>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __has_include(&lt;filesystem&gt;) </code>,\n+\t     <code> __cpp_lib_filesystem >= 201603 </code></entry>\n     </row>\n \n     <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Relative Paths for Filesystem</entry>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://open-std.org/JTC1/SC22/WG21/docs/papers/2015/p0013r1.html\">\n-\t  P0013R1\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0219r1.html\">\n+\tP0219R1\n \t</link>\n       </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry/>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Adapting string_view by filesystem paths </entry>\n       <entry>\n-        Logical Operator Type Traits (revision 1)\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0392r0.pdf\">\n+\tP0392R0\n+\t</link>\n       </entry>\n-      <entry>Y</entry>\n+      <entry align=\"center\"> No </entry>\n       <entry/>\n     </row>\n \n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> constexpr <code>atomic&lt;T&gt;::is_always_lock_free</code>\t </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0152r1.html\">\n+\tP0152R1\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_atomic_is_always_lock_free >= 201603 </code></entry>\n+    </row>\n+\n+    <row>\n+      <entry>A proposal to add <code>shared_mutex</code> (untimed) (Revision 4)</entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4508.html\">\n+\t  N4508\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> 6.1 </entry>\n+      <entry><code> __cpp_lib_shared_mutex >= 201505 </code></entry>\n+    </row>\n+\n+    <row>\n+      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n+      <entry> Variadic <code>lock_guard</code> </entry>\n+      <entry>\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/p0156r0.html\">\n+\tP0156R0\n+\t</link>\n+      </entry>\n+      <entry align=\"center\"> No </entry>\n+      <entry><code> __cpp_lib_lock_guard_variadic >= 201510 </code></entry>\n+    </row>\n+\n   </tbody>\n </tgroup>\n </table>"}]}