{"sha": "73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f", "node_id": "C_kwDOANBUbNoAKDczZjRhOTg5YjdmOGFlYWY4YmZmMzdlN2YzM2I2NWQyNmI4ZjE3OWY", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-07T13:50:13Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-08T08:55:31Z"}, "message": "[nvptx] Fix 'main (int argc)' compilation\n\nOn nvptx, with test-case sso-12.c I run into:\n...\nspawn nvptx-none-run ./sso-12.exe^M\nerror: Prototype doesn't match for 'main' in 'input file 1 at offset 1796', \\\n  first defined in 'input file 1 at offset 1796'^M\nnvptx-run: cuLinkAddData failed: device kernel image is invalid \\\n  (CUDA_ERROR_INVALID_SOURCE, 300)^M\nFAIL: gcc.dg/sso-12.c execution test\n...\n\nThe problem is that the test case uses 'main (int)' prototype, while __main\nuses:\n...\nextern int main (int, void **);\n...\n\nThere's code in write_fn_proto_1 to handle 'main (void)' as if\n'main (int, void **)' was specified, but that's not active for 'main (int)'.\n\nFix this in write_fn_proto_1 by handling 'main (int)' as if\n'main (int, void **)' was specified.\n\nTested on nvptx.\n\ngcc/ChangeLog:\n\n2022-02-07  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.cc (write_fn_proto_1): Handle 'main (int)'.", "tree": {"sha": "7b5a804e154677b6ffcfa61f3414a72ff3cd08cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5a804e154677b6ffcfa61f3414a72ff3cd08cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f05cc4fd6f0f52b8629ed6f7c068b5b2de7fa627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05cc4fd6f0f52b8629ed6f7c068b5b2de7fa627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05cc4fd6f0f52b8629ed6f7c068b5b2de7fa627"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "006fac8c839173bd0becb3798fffbf62285d15ae", "filename": "gcc/config/nvptx/nvptx.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc?ref=73f4a989b7f8aeaf8bff37e7f33b65d26b8f179f", "patch": "@@ -938,10 +938,13 @@ write_fn_proto_1 (std::stringstream &s, bool is_defn,\n   if (DECL_STATIC_CHAIN (decl))\n     argno = write_arg_type (s, -1, argno, ptr_type_node, true);\n \n-  if (!argno && strcmp (name, \"main\") == 0)\n+  if (argno < 2 && strcmp (name, \"main\") == 0)\n     {\n-      argno = write_arg_type (s, -1, argno, integer_type_node, true);\n-      argno = write_arg_type (s, -1, argno, ptr_type_node, true);\n+      if (argno == 0)\n+\targno = write_arg_type (s, -1, argno, integer_type_node, true);\n+\n+      if (argno == 1)\n+\targno = write_arg_type (s, -1, argno, ptr_type_node, true);\n     }\n \n   if (argno)"}]}