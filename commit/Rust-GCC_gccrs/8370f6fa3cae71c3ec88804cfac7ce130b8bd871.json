{"sha": "8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM3MGY2ZmEzY2FlNzFjM2VjODg4MDRjZmFjN2NlMTMwYjhiZDg3MQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2006-04-15T15:53:33Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2006-04-15T15:53:33Z"}, "message": "pa.md (output_bb patterns): Shorten long branch alternatives by 4.\n\n\t* pa.md (output_bb patterns): Shorten long branch alternatives by 4.\n\t(output_bvb patterns): Likewise.\n\t* pa.c (output_bb): Use 'bb' insn for long branch case.\n\t(output_bvb): Likewise use '{bvb|bb}' for long branch case.\n\t(output_dbra): Use '{comb|cmpb}' for long branch case for alternative\n\t1.  Correct length operand for alternatives 1 and 2.\n\t(output_movb): Use '{comb|cmpb}' for long branch case for alternatives\n\t1, 2 and 3.  Correct length operand for alternatives 1, 2 and 3.\n\nFrom-SVN: r112970", "tree": {"sha": "879cf32cf4ba1897798abe8057836c786e3eac2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/879cf32cf4ba1897798abe8057836c786e3eac2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/comments", "author": null, "committer": null, "parents": [{"sha": "5382402614d971f843c144c7a34cd6b075504e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5382402614d971f843c144c7a34cd6b075504e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5382402614d971f843c144c7a34cd6b075504e45"}], "stats": {"total": 163, "additions": 88, "deletions": 75}, "files": [{"sha": "5702d7ba6e83ea0f918ab32d31d1cafabf493cd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "patch": "@@ -1,3 +1,14 @@\n+2006-04-15  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.md (output_bb patterns): Shorten long branch alternatives by 4.\n+\t(output_bvb patterns): Likewise.\n+\t* pa.c (output_bb): Use 'bb' insn for long branch case.\n+\t(output_bvb): Likewise use '{bvb|bb}' for long branch case.\n+\t(output_dbra): Use '{comb|cmpb}' for long branch case for alternative\n+\t1.  Correct length operand for alternatives 1 and 2.\n+\t(output_movb): Use '{comb|cmpb}' for long branch case for alternatives\n+\t1, 2 and 3.  Correct length operand for alternatives 1, 2 and 3.\n+\n 2006-04-14  Roger Sayle  <roger@eyesopen.com>\n \n \t* tree-cfg.c (make_edges, make_omp_sections_edges, move_stmt_r,"}, {"sha": "48b8ca4f56092732167da850488904d1e2c786c4", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 29, "deletions": 27, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines for insn-output.c for HPPA.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Tim Moore (moore@cs.utah.edu), based on sparc.c\n \n This file is part of GCC.\n@@ -6436,27 +6436,27 @@ output_bb (rtx *operands ATTRIBUTE_UNUSED, int negated, rtx insn, int which)\n \t  {\n \t    nullify = 1;\n \t    xdelay = 0;\n-\t    operands[4] = GEN_INT (length - 8);\n+\t    operands[4] = GEN_INT (length);\n \t  }\n \telse\n \t  {\n \t    xdelay = 1;\n-\t    operands[4] = GEN_INT (length - 4);\n+\t    operands[4] = GEN_INT (length + 4);\n \t  }\n \n \tif (GET_MODE (operands[0]) == DImode)\n-\t  strcpy (buf, \"extrd,s,*\");\n+\t  strcpy (buf, \"bb,*\");\n \telse\n-\t  strcpy (buf, \"{extrs,|extrw,s,}\");\n+\t  strcpy (buf, \"bb,\");\n \tif ((which == 0 && negated)\n \t    || (which == 1 && !negated))\n-\t  strcat (buf, \">= %0,%1,1,%%r0\\n\\t\");\n+\t  strcat (buf, \"<\");\n \telse\n-\t  strcat (buf, \"< %0,%1,1,%%r0\\n\\t\");\n+\t  strcat (buf, \">=\");\n \tif (nullify)\n-\t  strcat (buf, \"b,n .+%4\");\n+\t  strcat (buf, \",n %0,%1,.+%4\");\n \telse\n-\t  strcat (buf, \"b .+%4\");\n+\t  strcat (buf, \" %0,%1,.+%4\");\n \toutput_asm_insn (buf, operands);\n \treturn output_lbranch (negated ? operands[3] : operands[2],\n \t\t\t       insn, xdelay);\n@@ -6616,27 +6616,27 @@ output_bvb (rtx *operands ATTRIBUTE_UNUSED, int negated, rtx insn, int which)\n \t  {\n \t    nullify = 1;\n \t    xdelay = 0;\n-\t    operands[4] = GEN_INT (length - 8);\n+\t    operands[4] = GEN_INT (length);\n \t  }\n \telse\n \t  {\n \t    xdelay = 1;\n-\t    operands[4] = GEN_INT (length - 4);\n+\t    operands[4] = GEN_INT (length + 4);\n \t  }\n \n \tif (GET_MODE (operands[0]) == DImode)\n-\t  strcpy (buf, \"extrd,s,*\");\n+\t  strcpy (buf, \"bb,*\");\n \telse\n-\t  strcpy (buf, \"{extrs,|extrw,s,}\");\n+\t  strcpy (buf, \"{bvb,|bb,}\");\n \tif ((which == 0 && negated)\n \t    || (which == 1 && !negated))\n-\t  strcat (buf, \">= {%0,%1,1,%%r0|%0,%%sar,1,%%r0}\\n\\t\");\n+\t  strcat (buf, \"<\");\n \telse\n-\t  strcat (buf, \"< {%0,%1,1,%%r0|%0,%%sar,1,%%r0}\\n\\t\");\n+\t  strcat (buf, \">=\");\n \tif (nullify)\n-\t  strcat (buf, \"b,n .+%4\");\n+\t  strcat (buf, \",n {%0,.+%4|%0,%%sar,.+%4}\");\n \telse\n-\t  strcat (buf, \"b .+%4\");\n+\t  strcat (buf, \" {%0,.+%4|%0,%%sar,.+%4}\");\n \toutput_asm_insn (buf, operands);\n \treturn output_lbranch (negated ? operands[3] : operands[2],\n \t\t\t       insn, xdelay);\n@@ -6763,8 +6763,8 @@ output_dbra (rtx *operands, rtx insn, int which_alternative)\n \treturn \"{comclr|cmpclr},%B2 %%r0,%4,%%r0\\n\\tb %3\\n\\t{fldws|fldw} -16(%%r30),%0\";\n       else\n \t{\n-\t  operands[4] = GEN_INT (length - 24);\n-\t  output_asm_insn (\"addib,%N2 %1,%0,.+%4\", operands);\n+\t  operands[5] = GEN_INT (length - 16);\n+\t  output_asm_insn (\"{comb|cmpb},%B2 %%r0,%4,.+%5\", operands);\n \t  output_asm_insn (\"{fldws|fldw} -16(%%r30),%0\", operands);\n \t  return output_lbranch (operands[3], insn, 0);\n \t}\n@@ -6781,8 +6781,8 @@ output_dbra (rtx *operands, rtx insn, int which_alternative)\n \treturn \"addi,%N2 %1,%4,%4\\n\\tb %3\\n\\tstw %4,%0\";\n       else\n \t{\n-\t  operands[5] = GEN_INT (length - 12);\n-\t  output_asm_insn (\"addib,%N2 %1,%0,.+%5\\n\\tstw %4,%0\", operands);\n+\t  operands[5] = GEN_INT (length - 4);\n+\t  output_asm_insn (\"addib,%N2 %1,%4,.+%5\\n\\tstw %4,%0\", operands);\n \t  return output_lbranch (operands[3], insn, 0);\n \t}\n     }\n@@ -6906,8 +6906,8 @@ output_movb (rtx *operands, rtx insn, int which_alternative,\n \treturn \"{comclr|cmpclr},%B2 %%r0,%1,%%r0\\n\\tb %3\\n\\t{fldws|fldw} -16(%%r30),%0\";\n       else\n \t{\n-\t  operands[4] = GEN_INT (length - 12);\n-\t  output_asm_insn (\"movb,%N2 %1,%0,.+%4\", operands);\n+\t  operands[4] = GEN_INT (length - 4);\n+\t  output_asm_insn (\"{comb|cmpb},%B2 %%r0,%1,.+%4\", operands);\n \t  output_asm_insn (\"{fldws|fldw} -16(%%r30),%0\", operands);\n \t  return output_lbranch (operands[3], insn, 0);\n \t}\n@@ -6923,8 +6923,9 @@ output_movb (rtx *operands, rtx insn, int which_alternative,\n \treturn \"{comclr|cmpclr},%B2 %%r0,%1,%%r0\\n\\tb %3\\n\\tstw %1,%0\";\n       else\n \t{\n-\t  operands[4] = GEN_INT (length - 8);\n-\t  output_asm_insn (\"movb,%N2 %1,%0,.+%4\\n\\tstw %1,%0\", operands);\n+\t  operands[4] = GEN_INT (length);\n+\t  output_asm_insn (\"{comb|cmpb},%B2 %%r0,%1,.+%4\\n\\tstw %1,%0\",\n+\t\t\t   operands);\n \t  return output_lbranch (operands[3], insn, 0);\n \t}\n     }\n@@ -6937,8 +6938,9 @@ output_movb (rtx *operands, rtx insn, int which_alternative,\n \treturn \"{comclr|cmpclr},%B2 %%r0,%1,%%r0\\n\\tb %3\\n\\tmtsar %r1\";\n       else\n \t{\n-\t  operands[4] = GEN_INT (length - 8);\n-\t  output_asm_insn (\"movb,%N2 %1,%0,.+%4\\n\\tmtsar %r1\", operands);\n+\t  operands[4] = GEN_INT (length);\n+\t  output_asm_insn (\"{comb|cmpb},%B2 %%r0,%1,.+%4\\n\\tmtsar %r1\",\n+\t\t\t   operands);\n \t  return output_lbranch (operands[3], insn, 0);\n \t}\n     }"}, {"sha": "ada336823dff2a051e56b8213f57b2de0af0cb65", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8370f6fa3cae71c3ec88804cfac7ce130b8bd871/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=8370f6fa3cae71c3ec88804cfac7ce130b8bd871", "patch": "@@ -1898,10 +1898,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1926,10 +1926,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1954,10 +1954,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -1982,10 +1982,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2010,10 +2010,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2038,10 +2038,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2066,10 +2066,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2094,10 +2094,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n ;; Branch on Variable Bit patterns.\n (define_insn \"\"\n@@ -2123,10 +2123,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2151,10 +2151,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2179,10 +2179,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2207,10 +2207,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2235,10 +2235,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2263,10 +2263,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2291,10 +2291,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n (define_insn \"\"\n   [(set (pc)\n@@ -2319,10 +2319,10 @@\n \t       (const_int MAX_17BIT_OFFSET))\n \t   (const_int 8)\n \t   (ne (symbol_ref \"TARGET_PORTABLE_RUNTIME\") (const_int 0))\n-\t   (const_int 28)\n+\t   (const_int 24)\n \t   (eq (symbol_ref \"flag_pic\") (const_int 0))\n-\t   (const_int 24)]\n-\t  (const_int 32)))])\n+\t   (const_int 20)]\n+\t  (const_int 28)))])\n \n ;; Floating point branches\n "}]}