{"sha": "c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiY2IwOWRjY2FiY2RjNTUxOGFjOWYyZWI3YTMxMThmZDhjNDJlYg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-11T18:19:44Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-11T18:19:44Z"}, "message": "BeanContext.java, [...]: Removed redundant modifiers.\n\n2003-10-11  Michael Koch  <konqueror@gmx.de>\n\n\t* java/beans/beancontext/BeanContext.java,\n\tjava/beans/beancontext/BeanContextChild.java,\n\tjava/beans/beancontext/BeanContextChildComponentProxy.java,\n\tjava/beans/beancontext/BeanContextChildSupport.java,\n\tjava/beans/beancontext/BeanContextContainerProxy.java,\n\tjava/beans/beancontext/BeanContextMembershipListener.java,\n\tjava/beans/beancontext/BeanContextProxy.java,\n\tjava/beans/beancontext/BeanContextServiceProvider.java,\n\tjava/beans/beancontext/BeanContextServiceProviderBeanInfo.java,\n\tjava/beans/beancontext/BeanContextServiceRevokedListener.java,\n\tjava/beans/beancontext/BeanContextServices.java,\n\tjava/beans/beancontext/BeanContextServicesListener.java:\n\tRemoved redundant modifiers.\n\nFrom-SVN: r72350", "tree": {"sha": "878baaf326247f4ad482134ee35435cfbf2ab28e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/878baaf326247f4ad482134ee35435cfbf2ab28e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/comments", "author": null, "committer": null, "parents": [{"sha": "928366f04f441e82841690032b8bc75528e055a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/928366f04f441e82841690032b8bc75528e055a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/928366f04f441e82841690032b8bc75528e055a4"}], "stats": {"total": 84, "additions": 49, "deletions": 35}, "files": [{"sha": "a3b69e2d8a9b1139a1355ed05f16f91325e1fcf4", "filename": "libjava/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -1,3 +1,19 @@\n+2003-10-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/beans/beancontext/BeanContext.java,\n+\tjava/beans/beancontext/BeanContextChild.java,\n+\tjava/beans/beancontext/BeanContextChildComponentProxy.java,\n+\tjava/beans/beancontext/BeanContextChildSupport.java,\n+\tjava/beans/beancontext/BeanContextContainerProxy.java,\n+\tjava/beans/beancontext/BeanContextMembershipListener.java,\n+\tjava/beans/beancontext/BeanContextProxy.java,\n+\tjava/beans/beancontext/BeanContextServiceProvider.java,\n+\tjava/beans/beancontext/BeanContextServiceProviderBeanInfo.java,\n+\tjava/beans/beancontext/BeanContextServiceRevokedListener.java,\n+\tjava/beans/beancontext/BeanContextServices.java,\n+\tjava/beans/beancontext/BeanContextServicesListener.java:\n+\tRemoved redundant modifiers.\n+\n 2003-10-11  Michael Koch  <konqueror@gmx.de>\n \n \t* java/beans/AppletInitializer.java,"}, {"sha": "c996013e76083e8fafb8aa49c5cfa7fe465e2879", "filename": "libjava/java/beans/beancontext/BeanContext.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContext.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -183,7 +183,7 @@\n \t * </UL>\n \t * @fixme fill in the rest of the methods which use the global lock.\n \t */\n-\tpublic static final Object globalHierarchyLock = new Object();\n+\tObject globalHierarchyLock = new Object();\n \n \t/** \n \t * Instantiate a Bean using this Bean's <code>ClassLoader</code>\n@@ -204,7 +204,7 @@\n \t * @exception ClassNotFoundException if a serialized Bean's class\n \t *            is not found.\n \t */\n-\tpublic Object instantiateChild(String beanName)\n+\tObject instantiateChild(String beanName)\n                         throws IOException,\n                                ClassNotFoundException;\n \n@@ -230,7 +230,7 @@ public Object instantiateChild(String beanName)\n \t * @param requestor a reference to the child requesting the resource.\n \t * @see java.lang.ClassLoader#getResource(java.lang.String)\n \t */\n-\tpublic URL getResource(String resourceName, BeanContextChild requestor);\n+\tURL getResource(String resourceName, BeanContextChild requestor);\n \n \t/**\n \t * Get a resource as a stream.  The <code>BeanContext</code> will\n@@ -254,19 +254,19 @@ public Object instantiateChild(String beanName)\n \t * @param requestor a reference to the child requesting the resource.\n \t * @see java.lang.ClassLoader#getResourceAsStream(java.lang.String)\n \t */\n-\tpublic InputStream getResourceAsStream(String resourceName, BeanContextChild requestor);\n+\tInputStream getResourceAsStream(String resourceName, BeanContextChild requestor);\n \n \t/**\n \t * Add a listener on changes to the membership of this\n \t * <code>BeanContext</code> object.\n \t * @param listener the listener to add.\n \t */\n-\tpublic void addBeanContextMembershipListener(BeanContextMembershipListener listener);\n+\tvoid addBeanContextMembershipListener(BeanContextMembershipListener listener);\n \n \t/**\n \t * Remove a listener on changes to the membership of this\n \t * <code>BeanContext</code> object.\n \t * @param listener the listener to remove.\n \t */\n-\tpublic void removeBeanContextMembershipListener(BeanContextMembershipListener listener);\n+\tvoid removeBeanContextMembershipListener(BeanContextMembershipListener listener);\n }"}, {"sha": "4421273e8fd88628b687f3778c2ccec1cde7a705", "filename": "libjava/java/beans/beancontext/BeanContextChild.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChild.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChild.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChild.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -132,28 +132,28 @@ public interface BeanContextChild {\n \t *            <code>BeanContextChild</code> implementor does not\n \t *            wish to have its parent changed.\n \t */\n-\tpublic void setBeanContext(BeanContext parent)\n+\tvoid setBeanContext(BeanContext parent)\n \t\tthrows PropertyVetoException;\n \n \t/**\n \t * Get the parent <code>BeanContext</code>.\n \t * @return the parent <code>BeanContext</code>.\n \t */\n-\tpublic BeanContext getBeanContext();\n+\tBeanContext getBeanContext();\n \n \t/**\n \t * Add a listener that will be notified when a specific property changes.\n \t * @param prop the name of the property to listen on\n \t * @param listener the listener to listen on the property.\n \t */\n-\tpublic void addPropertyChangeListener(String prop, PropertyChangeListener listener);\n+\tvoid addPropertyChangeListener(String prop, PropertyChangeListener listener);\n \n \t/**\n \t * Remove a listener to a certain property.\n \t * @param prop the name of the property being listened on\n \t * @param listener the listener listening on the property.\n \t */\n-\tpublic void removePropertyChangeListener(String prop, PropertyChangeListener listener);\n+\tvoid removePropertyChangeListener(String prop, PropertyChangeListener listener);\n \n \t/**\n \t * Add a listener that will be notified when a specific property\n@@ -163,12 +163,12 @@ public void setBeanContext(BeanContext parent)\n \t * @param prop the name of the property to listen on\n \t * @param listener the listener to listen on the property.\n \t */\n-\tpublic void addVetoableChangeListener(String prop, VetoableChangeListener listener);\n+\tvoid addVetoableChangeListener(String prop, VetoableChangeListener listener);\n \n \t/**\n \t * Remove a listener to a certain property.\n \t * @param prop the name of the property being listened on\n \t * @param listener the listener listening on the property.\n \t */\n-\tpublic void removeVetoableChangeListener(String prop, VetoableChangeListener listener);\n+\tvoid removeVetoableChangeListener(String prop, VetoableChangeListener listener);\n }"}, {"sha": "27c8bac8f943811d12e7d528b1906022de838ae7", "filename": "libjava/java/beans/beancontext/BeanContextChildComponentProxy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChildComponentProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChildComponentProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChildComponentProxy.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -56,5 +56,5 @@ public interface BeanContextChildComponentProxy {\n \t * @return the <code>Component</code> associated with this\n \t * <code>BeanContextChild</code>.\n \t */\n-\tpublic Component getComponent();\n+\tComponent getComponent();\n }"}, {"sha": "8cc17508e9e65ba68f3b43ec5192cd990229507d", "filename": "libjava/java/beans/beancontext/BeanContextChildSupport.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChildSupport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChildSupport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextChildSupport.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -105,7 +105,7 @@\n \tpublic BeanContextChildSupport()\n   {\n \t\tthis (null);\n-\t};\n+\t}\n \n \t/**\n \t * Create a new <code>BeanContextChildSupport</code> with the specified peer."}, {"sha": "b582e688f88c4359df5334294b118a3a8daa1590", "filename": "libjava/java/beans/beancontext/BeanContextContainerProxy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextContainerProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextContainerProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextContainerProxy.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -59,5 +59,5 @@ public interface BeanContextContainerProxy {\n \t * @return the <code>Container</code> associated with this\n \t * <code>BeanContext</code>.\n \t */\n-\tpublic Container getContainer();\n+\tContainer getContainer();\n }"}, {"sha": "39b1e077598a887ab0efdd46cc566dff0e4202c7", "filename": "libjava/java/beans/beancontext/BeanContextMembershipListener.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextMembershipListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextMembershipListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextMembershipListener.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -57,7 +57,7 @@ public interface BeanContextMembershipListener extends EventListener {\n \t * @param event the event, including which children were added.\n \t * @see java.beans.beancontext.BeanContext#add(java.lang.Object)\n \t */\n-\tpublic void childrenAdded(BeanContextMembershipEvent event);\n+\tvoid childrenAdded(BeanContextMembershipEvent event);\n \n \t/**\n \t * When beans are removed from a <code>BeanContext</code>,\n@@ -66,5 +66,5 @@ public interface BeanContextMembershipListener extends EventListener {\n \t * @param event the event, including which children were removed.\n \t * @see java.beans.beancontext.BeanContext#remove(java.lang.Object)\n \t */\n-\tpublic void childrenRemoved(BeanContextMembershipEvent event);\n+\tvoid childrenRemoved(BeanContextMembershipEvent event);\n }"}, {"sha": "78061f51cc75be82bd4f566d6c71a816759b6022", "filename": "libjava/java/beans/beancontext/BeanContextProxy.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextProxy.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -61,5 +61,5 @@ public interface BeanContextProxy {\n \t * @return the <code>BeanContextChild</code> associated with this\n \t * <code>Object</code>.\n \t */\n-\tpublic BeanContextChild getBeanContextProxy();\n+\tBeanContextChild getBeanContextProxy();\n }"}, {"sha": "de9c7de8f6ede2109d2d2c5d97221fc1de125e55", "filename": "libjava/java/beans/beancontext/BeanContextServiceProvider.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceProvider.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -89,7 +89,7 @@ public interface BeanContextServiceProvider {\n \t *        <code>null</code>.\n \t * @see java.beans.beancontext.BeanContextServices#getService(java.beans.beancontext.BeanContextChild,java.lang.Object,java.lang.Class,java.lang.Object,java.beans.beancontext.BeanContextServiceRevokedListener)\n \t */\n-\tpublic Object getService(BeanContextServices services, Object requestor, Class serviceClass, Object serviceSelector);\n+\tObject getService(BeanContextServices services, Object requestor, Class serviceClass, Object serviceSelector);\n \n \t/**\n \t * Release the service.\n@@ -109,7 +109,7 @@ public interface BeanContextServiceProvider {\n \t * @param service the service to relinquish\n \t * @see java.beans.beancontext.BeanContextServices#releaseService(java.beans.beancontext.BeanContextChild,java.lang.Object,java.lang.Object)\n \t */\n-\tpublic void releaseService(BeanContextServices services, Object requestor, Object service);\n+\tvoid releaseService(BeanContextServices services, Object requestor, Object service);\n \n \t/**\n \t * Get a list of valid service selectors for the specified service class.\n@@ -136,5 +136,5 @@ public interface BeanContextServiceProvider {\n \t *         class, or <code>null</code>.\n \t * @see java.beans.beancontext.BeanContextServices#getCurrentServiceSelectors(java.lang.Class)\n \t */\n-\tpublic Iterator getCurrentServiceSelectors(BeanContextServices services, Class serviceClass);\n+\tIterator getCurrentServiceSelectors(BeanContextServices services, Class serviceClass);\n }"}, {"sha": "2c5a2c434250e051988bf366fbc34d1c5a498db6", "filename": "libjava/java/beans/beancontext/BeanContextServiceProviderBeanInfo.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceProviderBeanInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceProviderBeanInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceProviderBeanInfo.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -56,5 +56,5 @@ public interface BeanContextServiceProviderBeanInfo extends BeanInfo {\n \t * Get <code>BeanInfo</code>s for all of the service classes of this <code>BeanInfoServiceProvider</code>.\n \t * @return <code>BeanInfo</code>s for all provided service classes.\n \t */\n-\tpublic BeanInfo[] getServicesBeanInfo();\n+\tBeanInfo[] getServicesBeanInfo();\n }"}, {"sha": "c3fcb3e4b6cf3cdcdb9b485eb2ef1bf15f5ea36d", "filename": "libjava/java/beans/beancontext/BeanContextServiceRevokedListener.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceRevokedListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceRevokedListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServiceRevokedListener.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -58,5 +58,5 @@ public interface BeanContextServiceRevokedListener extends EventListener {\n \t * @param event the service revoked event.\n \t * @see java.beans.beancontext.BeanContextServices#revokeService(java.lang.Class,java.beans.beancontext.BeanContextServiceProvider,boolean)\n \t */\n-\tpublic void serviceRevoked(BeanContextServiceRevokedEvent event);\n+\tvoid serviceRevoked(BeanContextServiceRevokedEvent event);\n }"}, {"sha": "6e76b0075136f0914ba0341a9f97b20965b4074c", "filename": "libjava/java/beans/beancontext/BeanContextServices.java", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServices.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServices.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServices.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -63,7 +63,7 @@\n    * @param provider the factory that will actually provide the service.\n    * @return whether the service was added or not.\n    */\n-  public boolean addService (Class serviceClass,\n+  boolean addService (Class serviceClass,\n                              BeanContextServiceProvider provider);\n \n   /**\n@@ -83,7 +83,7 @@ public boolean addService (Class serviceClass,\n    * @param revokeNow whether to release all current references to\n    *        the service.\n    */\n-  public void revokeService (Class serviceClass,\n+  void revokeService (Class serviceClass,\n                              BeanContextServiceProvider provider,\n                              boolean revokeNow);\n \n@@ -102,7 +102,7 @@ public void revokeService (Class serviceClass,\n    * @param service the service to relinquish\n    * @see #getService(java.beans.beancontext.BeanContextChild,java.lang.Object,java.lang.Class,java.lang.Object,java.beans.beancontext.BeanContextServiceRevokedListener)\n    */\n-  public void releaseService (BeanContextChild requestorChild, Object requestor,\n+  void releaseService (BeanContextChild requestorChild, Object requestor,\n                               Object service);\n \n   /**\n@@ -152,7 +152,7 @@ public void releaseService (BeanContextChild requestorChild, Object requestor,\n    *        <code>instanceof</code> serviceClass is true), or\n    *        <code>null</code>.\n    */\n-  public Object getService (BeanContextChild requestorChild, Object requestor,\n+  Object getService (BeanContextChild requestorChild, Object requestor,\n                             Class serviceClass, Object serviceSelector,\n                             BeanContextServiceRevokedListener listener)\n     throws TooManyListenersException;\n@@ -167,7 +167,7 @@ public Object getService (BeanContextChild requestorChild, Object requestor,\n    * @return a list of all service classes supported.\n    * @see java.beans.beancontext.BeanContext#globalHierarchyLock\n    */\n-  public Iterator getCurrentServiceClasses ();\n+  Iterator getCurrentServiceClasses ();\n \n   /**\n    * Get a list of valid service selectors for the specified service class.\n@@ -187,7 +187,7 @@ public Object getService (BeanContextChild requestorChild, Object requestor,\n    * @return a list of valid service selectors for the service\n    *         class, or <code>null</code>.\n    */\n-  public Iterator getCurrentServiceSelectors (Class serviceClass);\n+  Iterator getCurrentServiceSelectors (Class serviceClass);\n \n   /**\n    * Tell whether the specified service class is available.\n@@ -197,14 +197,13 @@ public Object getService (BeanContextChild requestorChild, Object requestor,\n    * @param serviceClass the service class to check on.\n    * @return whether the specified service class is available.\n    */\n-  public boolean hasService (Class serviceClass);\n+  boolean hasService (Class serviceClass);\n \n   /**\n    * Add a listener on all adds and removes of services.\n    * @param listener the listener to add.\n    */\n-  public void\n-  addBeanContextServicesListener (BeanContextServicesListener listener);\n+  void addBeanContextServicesListener (BeanContextServicesListener listener);\n \n   /**\n    * Remove a listener on all adds and removes of services.\n@@ -213,6 +212,5 @@ public Object getService (BeanContextChild requestorChild, Object requestor,\n    *           <code>getService()</code>.\n    * @param listener the listener to add.\n    */\n-  public void\n-  removeBeanContextServicesListener (BeanContextServicesListener listener);\n+  void removeBeanContextServicesListener (BeanContextServicesListener listener);\n }"}, {"sha": "5fd27f78ce486a5d965b442efe68a5868b55b9dc", "filename": "libjava/java/beans/beancontext/BeanContextServicesListener.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServicesListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServicesListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2Fbeancontext%2FBeanContextServicesListener.java?ref=c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "patch": "@@ -52,5 +52,5 @@ public interface BeanContextServicesListener extends BeanContextServiceRevokedLi\n \t * @param event the service revoked event, with useful information\n \t *        about the new service.\n \t */\n-\tpublic void serviceAvailable(BeanContextServiceAvailableEvent event);\n+\tvoid serviceAvailable(BeanContextServiceAvailableEvent event);\n }"}]}