{"sha": "93ef7c1f7e34843c5480d363ccea716ddd6ae496", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlZjdjMWY3ZTM0ODQzYzU0ODBkMzYzY2NlYTcxNmRkZDZhZTQ5Ng==", "commit": {"author": {"name": "Chen Liqin", "email": "liqin@sunnorth.com.cn", "date": "2006-10-19T09:19:21Z"}, "committer": {"name": "Chen Liqin", "email": "liqin@gcc.gnu.org", "date": "2006-10-19T09:19:21Z"}, "message": "invoke.texi (Score Options): New section.\n\n        * doc/invoke.texi (Score Options): New section.\n        * doc/md.texi (Score family): New section to document constraints.\n        * config/score/t-score-elf: Fix spelling typo.\n        * config/score/score.c: Add TARGET_DEFAULT_TARGET_FLAGS macro.\n        * config/score/score.h: Fix spelling typo.\n        * config/score/score-mdaux.c: Remove TARGET_NOPINDEX condition.\n        * config/score/score.opt: Remove -mnpi -mnuls -mSCORE5/5U -mSCORE7\n          options.\n\nFrom-SVN: r117882", "tree": {"sha": "1f5222a4bf4f8528e42b4517c96a79a2554af9a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f5222a4bf4f8528e42b4517c96a79a2554af9a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93ef7c1f7e34843c5480d363ccea716ddd6ae496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ef7c1f7e34843c5480d363ccea716ddd6ae496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ef7c1f7e34843c5480d363ccea716ddd6ae496", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ef7c1f7e34843c5480d363ccea716ddd6ae496/comments", "author": null, "committer": null, "parents": [{"sha": "afc0a4ba176a14e0c1f20bb07b4b558ccd76b99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc0a4ba176a14e0c1f20bb07b4b558ccd76b99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc0a4ba176a14e0c1f20bb07b4b558ccd76b99d"}], "stats": {"total": 182, "additions": 155, "deletions": 27}, "files": [{"sha": "5f8543d99f073d0be2d2407d6266d52d21db01a1", "filename": "ChangeLog", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -7,10 +7,6 @@\n \t* config.guess: Import latest version.\n \t* config.sub: Likewise.\n \n-2006-10-16  Tan Shengguo  <shengguo@sunnorth.com.cn>\n-\n-\t* MAINTAINERS: Add Tan Shengguo as score port maintainer.\n-\n 2006-10-10  Brooks Moses  <bmoses@stanford.edu>\n \n \t* Makefile.def: Added pdf target handling."}, {"sha": "0e7c1c514c914e0af3f3b5e0c769babc786443c7", "filename": "MAINTAINERS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -75,6 +75,7 @@ rs6000 port\t\tDavid Edelsohn\t\tdje@watson.ibm.com\n rs6000 vector extns\tAldy Hernandez\t\taldyh@redhat.com\n s390 port\t\tHartmut Penner\t\thpenner@de.ibm.com\n s390 port\t\tUlrich Weigand\t\tuweigand@de.ibm.com\n+score port\t\tChen Liqin\t\tliqin@sunnorth.com.cn\n sh port\t\t\tJoern Rennecke\t\tjoern.rennecke@st.com\n sh port\t\t\tAlexandre Oliva\t\taoliva@redhat.com\n sh libraries/configury\tKaz Kojima\t\tkkojima@gcc.gnu.org"}, {"sha": "aeb32ea0db73d1c73ac12c8f5022e2970024bcb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -1,3 +1,28 @@\n+2006-10-19  Chen Liqin  <liqin@sunnorth.com.cn>\n+\n+        * config/score/crti.asm: New file.\n+        * config/score/crtn.asm: New file.\n+        * config/score/elf.h: New file.\n+        * config/score/mac.md: New file.\n+        * config/score/misc.md: New file.\n+        * config/score/mul-div.S: New file.\n+        * config/score/predicates.md: New file.\n+        * config/score/score7.md: New file.\n+        * config/score/score.c: New file.\n+        * config/score/score-conv.h: New file.\n+        * config/score/score.h: New file.\n+        * config/score/score.md: New file.\n+        * config/score/score-mdaux.c: New file.\n+        * config/score/score-mdaux.h: New file.\n+        * config/score/score-modes.def: New file.\n+        * config/score/score.opt: New file.\n+        * config/score/score-protos.h: New file.\n+        * config/score/score-version.h: New file.\n+        * config/score/t-score-elf: New file.\n+        * config.gcc: Add score*-*-* configurations(Update before).\n+        * doc/invoke.texi (Score Options): New section.\n+        * doc/md.texi (Score family): New section to document constraints.\n+\n 2006-10-19  Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/arm.c: Fix spelling typo."}, {"sha": "09db134ae67f179e03a995510bb26132120f0587", "filename": "gcc/config/score/score-mdaux.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore-mdaux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore-mdaux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore-mdaux.c?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -397,7 +397,7 @@ mda_classify_address (struct score_address_info *info,\n     case POST_DEC:\n     case PRE_INC:\n     case POST_INC:\n-      if (TARGET_NOPINDEX || GET_MODE_SIZE (mode) > GET_MODE_SIZE (SImode))\n+      if (GET_MODE_SIZE (mode) > GET_MODE_SIZE (SImode))\n         return false;\n       info->type = ADD_REG;\n       info->reg = XEXP (x, 0);"}, {"sha": "7100103a42a447cdc07113c122a8c8783bf44827", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -126,6 +126,9 @@ static bool score_rtx_costs (rtx, int, int, int *);\n #undef TARGET_RTX_COSTS\n #define TARGET_RTX_COSTS                score_rtx_costs\n \n+#undef TARGET_DEFAULT_TARGET_FLAGS\n+#define TARGET_DEFAULT_TARGET_FLAGS     TARGET_DEFAULT\n+\n /* Implement TARGET_RETURN_IN_MEMORY.  In S+core,\n    small structures are returned in a register.\n    Objects with varying size must still be returned in memory.  */"}, {"sha": "2726a04cd51a2d1686e2a5c0861aa47561fa424b", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -37,7 +37,7 @@ extern GTY(()) rtx cmp_op1;\n \n #undef ASM_SPEC\n #define ASM_SPEC \\\n-  \"%{!mel:-EB} %{mel:-EL} %{mSCORE5U:-SCORE5U} %{mSCORE7:-SCORE7} %{G*}\"\n+  \"%{!mel:-EB} %{mel:-EL} %{mscore5u:-SCORE5U} %{mscore7:-SCORE7} %{G*}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC                 \"%{!mel:-EB} %{mel:-EL} %{G*}\"\n@@ -207,10 +207,10 @@ extern GTY(()) rtx cmp_op1;\n     but Control register have 32 registers, cr16-cr31.  */\n #define FIXED_REGISTERS                                  \\\n {                                                        \\\n-  /* General Purpose Registers */                        \\\n+  /* General Purpose Registers  */                       \\\n   1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,        \\\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,        \\\n-  /* Control Registers */                                \\\n+  /* Control Registers  */                               \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   /* CEH/ CEL/ CNT/ LCR/ SCR / ARG_POINTER_REGNUM/ FRAME_POINTER_REGNUM */\\\n   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n@@ -220,17 +220,17 @@ extern GTY(()) rtx cmp_op1;\n   /* CP 2 Registers  */                                  \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n-  /* CP 3 Registers*/                                    \\\n+  /* CP 3 Registers  */                                  \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n }\n \n #define CALL_USED_REGISTERS                              \\\n {                                                        \\\n-  /* General purpose register */                         \\\n+  /* General purpose register  */                        \\\n   1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,        \\\n   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n-  /* Control Registers */                                \\\n+  /* Control Registers  */                               \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   /* CP 1 Registers  */                                  \\\n@@ -356,7 +356,7 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0x00000000},  \\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff},  \\\n   { 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff},  \\\n-  /* ALL_REGS        */                                           \\\n+  /* ALL_REGS  */                                                 \\\n   { 0xffffffff, 0x001fffff, 0xffffffff, 0xffffffff, 0xffffffff},  \\\n }\n "}, {"sha": "38992d191be8fd3baad72107178e84c94a981619", "filename": "gcc/config/score/score.opt", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Fscore.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.opt?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -27,27 +27,15 @@ mel\n Target RejectNegative Report Mask(LITTLE_ENDIAN)\n Generate little-endian code\n \n-mnpi\n-Target RejectNegative Report Mask(NOPINDEX)\n-Do not use pre/post index\n-\n-mnuls\n-Target RejectNegative Report Mask(NOUNALIGNED)\n-Do not use unaligned load/store\n-\n mmac\n Target RejectNegative Report Mask(MAC)\n Enable mac instruction\n \n-mSCORE5\n-Target RejectNegative Report Mask(SCORE5)\n-Support SCORE 5 ISA\n-\n-mSCORE5U\n+mscore5u\n Target RejectNegative Report Mask(SCORE5U)\n Support SCORE 5U ISA\n \n-mSCORE7\n+mscore7\n Target RejectNegative Report Mask(SCORE7)\n Support SCORE 7 ISA\n "}, {"sha": "535c4c6220fd2db86ba3f3f9bb1792ee296be2ba", "filename": "gcc/config/score/t-score-elf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Ft-score-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fconfig%2Fscore%2Ft-score-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Ft-score-elf?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -35,7 +35,7 @@ dp-bit.c: $(srcdir)/config/fp-bit.c\n # without the $gp register.\n TARGET_LIBGCC2_CFLAGS = -G 0\n \n-MULTILIB_OPTIONS = fPIC mel mSCORE7\n+MULTILIB_OPTIONS = fPIC mel mscore7\n MULTILIB_MATCHES = fPIC=fpic\n \n EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crti.o crtn.o"}, {"sha": "15666caae2d9f0cd6ca67511c2a413ab22e0288f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -694,6 +694,11 @@ See RS/6000 and PowerPC Options.\n -mtpf-trace -mno-tpf-trace  -mfused-madd  -mno-fused-madd @gol\n -mwarn-framesize  -mwarn-dynamicstack  -mstack-size -mstack-guard}\n \n+@emph{Score Options}\n+@gccoptlist{-mel -mel @gol\n+-mmac @gol\n+-mscore5u -mscore7}\n+ \n @emph{SH Options}\n @gccoptlist{-m1  -m2  -m2e  -m3  -m3e @gol\n -m4-nofpu  -m4-single-only  -m4-single  -m4 @gol\n@@ -7319,6 +7324,7 @@ platform.\n * PowerPC Options::\n * RS/6000 and PowerPC Options::\n * S/390 and zSeries Options::\n+* Score Options::\n * SH Options::\n * SPARC Options::\n * System V Options::\n@@ -12162,6 +12168,34 @@ In order to be efficient the extra code makes the assumption that the stack star\n at an address aligned to the value given by @var{stack-size}.\n @end table\n \n+@node Score Options\n+@subsection Score Options\n+@cindex Score Options\n+\n+These options are defined for Score implementations:\n+\n+@table @gcctabopt\n+@item -mel\n+@opindex -mel\n+Compile code for little endian mode. \n+\n+@item -meb\n+@opindex meb\n+Compile code for big endian mode.  This is the default.\n+\n+@item -mmac\n+@opindex mmac\n+Enable the use of multiply-accumulate instructions. Disabled by default. \n+\n+@item -mscore5u\n+@opindex mscore5u\n+Specify the SCORE5U of the target architecture.\n+\n+@item -mscore7\n+@opindex mscore7\n+Specify the SCORE7 of the target architecture. This is the default.\n+@end table\n+\n @node SH Options\n @subsection SH Options\n "}, {"sha": "3b30e361e30b3762ad9bde4af2ab00c65a2fb12e", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ef7c1f7e34843c5480d363ccea716ddd6ae496/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=93ef7c1f7e34843c5480d363ccea716ddd6ae496", "patch": "@@ -2766,6 +2766,87 @@ Shift count operand.\n \n @end table\n \n+@item Score family---@file{config/score/score.h}\n+@table @code\n+@item d\n+Registers from r0 to r32.\n+\n+@item e\n+Registers from r0 to r16.\n+\n+@item t\n+r8---r11 or r22---r27 registers.\n+\n+@item h\n+hi register.\n+\n+@item l\n+lo register.\n+\n+@item x\n+hi + lo register.\n+\n+@item q\n+cnt register.\n+\n+@item y\n+lcb register.\n+\n+@item z\n+scb register.\n+\n+@item a\n+cnt + lcb + scb register.\n+\n+@item c\n+cr0---cr15 register.\n+\n+@item b\n+cp1 registers.\n+\n+@item f\n+cp2 registers.\n+\n+@item i\n+cp3 registers.\n+\n+@item j\n+cp1 + cp2 + cp3 registers.\n+\n+@item I\n+Unsigned 15 bit integer (in the range 0 to 32767).\n+\n+@item J\n+Unsigned 5 bit integer (in the range 0 to 31).\n+\n+@item K\n+Unsigned 16 bit integer (in the range 0 to 65535).\n+\n+@item L\n+Signed 16 bit integer (in the range @minus{}32768 to 32767).\n+\n+@item M\n+Unsigned 14 bit integer (in the range 0 to 16383).\n+\n+@item N\n+Signed 14 bit integer (in the range @minus{}8192 to 8191).\n+\n+@item O\n+Signed 15 bit integer (in the range @minus{}16384 to 16383).\n+\n+@item P\n+Signed 12 bit integer (in the range @minus{}2048 to 2047).\n+\n+@item J\n+An integer constant with exactly a single bit set.\n+\n+@item Q\n+An integer constant.\n+\n+@item Z\n+Any SYMBOL_REF.\n+@end table\n+\n @item Xstormy16---@file{config/stormy16/stormy16.h}\n @table @code\n @item a"}]}