{"sha": "a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBjYmU3MWU4NzM5OGI5NThjYzg4ZjVlM2E3NTI5Y2I5ZTFmZDEzNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-07T07:54:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-07T07:54:47Z"}, "message": "re PR rtl-optimization/58668 (internal compiler error: in cond_exec_process_insns, at ifcvt.c:339)\n\n\tPR rtl-optimization/58668\n\t* cfgcleanup.c (flow_find_cross_jump): Don't count\n\tany jumps if dir_p is NULL.  Remove p1 variable, use active_insn_p\n\tto determine what is counted.\n\t(flow_find_head_matching_sequence): Use active_insn_p to determine\n\twhat is counted.\n\t(try_head_merge_bb): Adjust for the flow_find_head_matching_sequence\n\tcounting change.\n\t* ifcvt.c (count_bb_insns): Use active_insn_p && !JUMP_P to\n\tdetermine what is counted.\n\n\t* gcc.dg/pr58668.c: New test.\n\nFrom-SVN: r206385", "tree": {"sha": "9eaf6483aea9b5e5509844108efd82f4c23d2465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eaf6483aea9b5e5509844108efd82f4c23d2465"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41626746d0bd5aaff66a5489e80781917be881da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41626746d0bd5aaff66a5489e80781917be881da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41626746d0bd5aaff66a5489e80781917be881da"}], "stats": {"total": 65, "additions": 50, "deletions": 15}, "files": [{"sha": "d7c3967c7129eedde54cd3113131bfd2e320bf43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "patch": "@@ -1,5 +1,16 @@\n 2014-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/58668\n+\t* cfgcleanup.c (flow_find_cross_jump): Don't count\n+\tany jumps if dir_p is NULL.  Remove p1 variable, use active_insn_p\n+\tto determine what is counted.\n+\t(flow_find_head_matching_sequence): Use active_insn_p to determine\n+\twhat is counted.\n+\t(try_head_merge_bb): Adjust for the flow_find_head_matching_sequence\n+\tcounting change.\n+\t* ifcvt.c (count_bb_insns): Use active_insn_p && !JUMP_P to\n+\tdetermine what is counted.\n+\n \tPR tree-optimization/59643\n \t* tree-predcom.c (split_data_refs_to_components): If one dr is\n \tread and one write, determine_offset fails and the write isn't"}, {"sha": "028f82886627d5da6a25d4670b908849f0d47cc9", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "patch": "@@ -1295,7 +1295,6 @@ flow_find_cross_jump (basic_block bb1, basic_block bb2, rtx *f1, rtx *f2,\n {\n   rtx i1, i2, last1, last2, afterlast1, afterlast2;\n   int ninsns = 0;\n-  rtx p1;\n   enum replace_direction dir, last_dir, afterlast_dir;\n   bool follow_fallthru, did_fallthru;\n \n@@ -1323,8 +1322,9 @@ flow_find_cross_jump (basic_block bb1, basic_block bb2, rtx *f1, rtx *f2,\n       || (returnjump_p (i2) && !side_effects_p (PATTERN (i2))))\n     {\n       last2 = i2;\n-      /* Count everything except for unconditional jump as insn.  */\n-      if (!simplejump_p (i2) && !returnjump_p (i2) && last1)\n+      /* Count everything except for unconditional jump as insn.\n+\t Don't count any jumps if dir_p is NULL.  */\n+      if (!simplejump_p (i2) && !returnjump_p (i2) && last1 && dir_p)\n \tninsns++;\n       i2 = PREV_INSN (i2);\n     }\n@@ -1375,8 +1375,7 @@ flow_find_cross_jump (basic_block bb1, basic_block bb2, rtx *f1, rtx *f2,\n \t  last1 = i1, last2 = i2;\n \t  afterlast_dir = last_dir;\n \t  last_dir = dir;\n-\t  p1 = PATTERN (i1);\n-\t  if (!(GET_CODE (p1) == USE || GET_CODE (p1) == CLOBBER))\n+\t  if (active_insn_p (i1))\n \t    ninsns++;\n \t}\n \n@@ -1494,7 +1493,8 @@ flow_find_head_matching_sequence (basic_block bb1, basic_block bb2, rtx *f1,\n \n \t  beforelast1 = last1, beforelast2 = last2;\n \t  last1 = i1, last2 = i2;\n-\t  ninsns++;\n+\t  if (active_insn_p (i1))\n+\t    ninsns++;\n \t}\n \n       if (i1 == BB_END (bb1) || i2 == BB_END (bb2)\n@@ -2408,9 +2408,7 @@ try_head_merge_bb (basic_block bb)\n       max_match--;\n       if (max_match == 0)\n \treturn false;\n-      do\n-\te0_last_head = prev_real_insn (e0_last_head);\n-      while (DEBUG_INSN_P (e0_last_head));\n+      e0_last_head = prev_active_insn (e0_last_head);\n     }\n \n   if (max_match == 0)\n@@ -2430,16 +2428,14 @@ try_head_merge_bb (basic_block bb)\n       basic_block merge_bb = EDGE_SUCC (bb, ix)->dest;\n       rtx head = BB_HEAD (merge_bb);\n \n-      while (!NONDEBUG_INSN_P (head))\n-\thead = NEXT_INSN (head);\n+      if (!active_insn_p (head))\n+\thead = next_active_insn (head);\n       headptr[ix] = head;\n       currptr[ix] = head;\n \n       /* Compute the end point and live information  */\n       for (j = 1; j < max_match; j++)\n-\tdo\n-\t  head = NEXT_INSN (head);\n-\twhile (!NONDEBUG_INSN_P (head));\n+\thead = next_active_insn (head);\n       simulate_backwards_to_point (merge_bb, live, head);\n       IOR_REG_SET (live_union, live);\n     }"}, {"sha": "aaed2d07363eaee708dfda5b7af98035aac2636a", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "patch": "@@ -118,7 +118,7 @@ count_bb_insns (const_basic_block bb)\n \n   while (1)\n     {\n-      if (CALL_P (insn) || NONJUMP_INSN_P (insn))\n+      if (active_insn_p (insn) && !JUMP_P (insn))\n \tcount++;\n \n       if (insn == BB_END (bb))"}, {"sha": "1ad3731e38c891fded55951f76a8d1b2dd55633d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "patch": "@@ -1,5 +1,8 @@\n 2014-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/58668\n+\t* gcc.dg/pr58668.c: New test.\n+\n \tPR tree-optimization/59643\n \t* gcc.dg/pr59643.c: New test.\n \t* gcc.c-torture/execute/pr59643.c: New test."}, {"sha": "3e09508dc16eda3dc22c73a9fdb2d194fb28a8ce", "filename": "gcc/testsuite/gcc.dg/pr58668.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Ftestsuite%2Fgcc.dg%2Fpr58668.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0cbe71e87398b958cc88f5e3a7529cb9e1fd137/gcc%2Ftestsuite%2Fgcc.dg%2Fpr58668.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr58668.c?ref=a0cbe71e87398b958cc88f5e3a7529cb9e1fd137", "patch": "@@ -0,0 +1,25 @@\n+/* PR rtl-optimization/58668 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-options \"-mthumb\" { target { { arm*-*-* } && arm_thumb2_ok } } } */\n+\n+void *fn1 (void *);\n+void *fn2 (void *, const char *);\n+void fn3 (void *);\n+void fn4 (void *, int);\n+\n+void *\n+test (void *x)\n+{\n+  void *a, *b;\n+  if (!(a = fn1 (x)))\n+    return (void *) 0;\n+  if (!(b = fn2 (a, \"w\")))\n+    {\n+      fn3 (a);\n+      return (void *) 0;\n+    }\n+  fn3 (a);\n+  fn4 (b, 1);\n+  return b;\n+}"}]}