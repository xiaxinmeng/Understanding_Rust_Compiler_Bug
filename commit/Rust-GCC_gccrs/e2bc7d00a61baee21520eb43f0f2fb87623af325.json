{"sha": "e2bc7d00a61baee21520eb43f0f2fb87623af325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJiYzdkMDBhNjFiYWVlMjE1MjBlYjQzZjBmMmZiODc2MjNhZjMyNQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-07-24T13:21:44Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-24T13:21:44Z"}, "message": "mn10300.md (movqi, [...]): Correctly handle CONST_DOUBLE source.\n\n        * mn10300.md (movqi, movhi, movsi, movsf): Correctly handle\n        CONST_DOUBLE source.\n\nFrom-SVN: r21362", "tree": {"sha": "6b07a6692002bf89b0150589c5c3724b23d7c128", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b07a6692002bf89b0150589c5c3724b23d7c128"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2bc7d00a61baee21520eb43f0f2fb87623af325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bc7d00a61baee21520eb43f0f2fb87623af325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2bc7d00a61baee21520eb43f0f2fb87623af325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2bc7d00a61baee21520eb43f0f2fb87623af325/comments", "author": null, "committer": null, "parents": [{"sha": "c6160f8f95bf00d19cf87e7840c60b4d61177594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6160f8f95bf00d19cf87e7840c60b4d61177594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6160f8f95bf00d19cf87e7840c60b4d61177594"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "9436ea592da30739f0c36e7fc5f9fd327f865f0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc7d00a61baee21520eb43f0f2fb87623af325/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc7d00a61baee21520eb43f0f2fb87623af325/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2bc7d00a61baee21520eb43f0f2fb87623af325", "patch": "@@ -1,3 +1,8 @@\n+Fri Jul 24 14:20:26 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* mn10300.md (movqi, movhi, movsi, movsf): Correctly handle\n+\tCONST_DOUBLE source.\n+\n Fri Jul 24 11:17:04 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/thumb.c (thumb_print_operand): Decode %_ in asm"}, {"sha": "e10df8aff22a13ac1210c9683b6549a96a99107f", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2bc7d00a61baee21520eb43f0f2fb87623af325/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2bc7d00a61baee21520eb43f0f2fb87623af325/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=e2bc7d00a61baee21520eb43f0f2fb87623af325", "patch": "@@ -89,6 +89,15 @@\n     case 5:\n     case 6:\n     case 7:\n+      if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+\t{\n+\t  rtx xoperands[2];\n+\t  xoperands[0] = operands[0];\n+\t  xoperands[1] = GEN_INT (CONST_DOUBLE_LOW (operands[1]));\n+\t  output_asm_insn (\\\"mov %1,%0\\\", xoperands);\n+\t  return \\\"\\\";\n+\t}\n+\n       return \\\"mov %1,%0\\\";\n     case 8:\n     case 9:\n@@ -144,6 +153,14 @@\n     case 5:\n     case 6:\n     case 7:\n+      if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+\t{\n+\t  rtx xoperands[2];\n+\t  xoperands[0] = operands[0];\n+\t  xoperands[1] = GEN_INT (CONST_DOUBLE_LOW (operands[1]));\n+\t  output_asm_insn (\\\"mov %1,%0\\\", xoperands);\n+\t  return \\\"\\\";\n+\t}\n       return \\\"mov %1,%0\\\";\n     case 8:\n     case 9:\n@@ -245,6 +262,14 @@\n     case 11:\n     case 12:\n     case 13:\n+      if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+\t{\n+\t  rtx xoperands[2];\n+\t  xoperands[0] = operands[0];\n+\t  xoperands[1] = GEN_INT (CONST_DOUBLE_LOW (operands[1]));\n+\t  output_asm_insn (\\\"mov %1,%0\\\", xoperands);\n+\t  return \\\"\\\";\n+\t}\n       return \\\"mov %1,%0\\\";\n     }\n }\"\n@@ -293,6 +318,14 @@\n       /* FALLTHROUGH */\n     case 4:\n     case 5:\n+      if (GET_CODE (operands[1]) == CONST_DOUBLE)\n+\t{\n+\t  rtx xoperands[2];\n+\t  xoperands[0] = operands[0];\n+\t  xoperands[1] = GEN_INT (CONST_DOUBLE_LOW (operands[1]));\n+\t  output_asm_insn (\\\"mov %1,%0\\\", xoperands);\n+\t  return \\\"\\\";\n+\t}\n       return \\\"mov %1,%0\\\";\n     }\n }\""}]}