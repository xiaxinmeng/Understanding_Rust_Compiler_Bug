{"sha": "fdf3e18a143c7e5a40f0466fa910f49df9632db2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRmM2UxOGExNDNjN2U1YTQwZjA0NjZmYTkxMGY0OWRmOTYzMmRiMg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-03-23T01:34:55Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-03-23T01:34:55Z"}, "message": "libgcc2.c (__lshrdi3, [...]): Use W_TYPE_SIZE.\n\n\t* libgcc2.c (__lshrdi3, __ashldi3, __ashrdi3): Use W_TYPE_SIZE.\n\t(__ffsDI2): Likewise.\n\nFrom-SVN: r171338", "tree": {"sha": "993a3cca33dac86ae2ccf68ce7e3482d980b151b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/993a3cca33dac86ae2ccf68ce7e3482d980b151b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdf3e18a143c7e5a40f0466fa910f49df9632db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdf3e18a143c7e5a40f0466fa910f49df9632db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdf3e18a143c7e5a40f0466fa910f49df9632db2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdf3e18a143c7e5a40f0466fa910f49df9632db2/comments", "author": null, "committer": null, "parents": [{"sha": "bf30ee589ee360b70c056ef5dc6c2cd04a9d051c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf30ee589ee360b70c056ef5dc6c2cd04a9d051c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf30ee589ee360b70c056ef5dc6c2cd04a9d051c"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "7790596163b75fb4fb675962722eed34560be45f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdf3e18a143c7e5a40f0466fa910f49df9632db2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdf3e18a143c7e5a40f0466fa910f49df9632db2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdf3e18a143c7e5a40f0466fa910f49df9632db2", "patch": "@@ -1,3 +1,8 @@\n+2011-03-22  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* libgcc2.c (__lshrdi3, __ashldi3, __ashrdi3): Use W_TYPE_SIZE.\n+\t(__ffsDI2): Likewise.\n+\n 2011-03-22  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (direct_return): Use TARGET_ABI_OSF instead\n@@ -539,6 +544,21 @@\n \n \t* dwarf2out.c (dwarf2out_frame_debug_expr) [rule 11]: Handle post_dec.\n \n+2011-03-22  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* system.h (FUNCTION_ARG, FUNCTION_INCOMING_ARG): Poison.\n+\t(FUNCTION_ARG_ADVANCE): Likewise.\n+\t* tm.texi.in: Change references to them to hook references.\n+\t* tm.texi: Regenerate.\n+\t* targhooks.c (default_function_arg): Eliminate check for target\n+\tmacro.\n+\t(default_function_incoming_arg): Likewise.\n+\t(default_function_arg_advance): Likewise.\n+\t* target.def (function_arg, function_incoming_arg): Change to\n+\tDEFHOOK.\n+\t(function_arg_advance): Likewise.\n+\t* target-def.h: Eliminate FUNCTION_INCOMING_ARG check.\n+\n 2011-03-22  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.c (build_call_1): New function."}, {"sha": "5312a10b11017653bd3376f32d1480a8c033619f", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdf3e18a143c7e5a40f0466fa910f49df9632db2/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdf3e18a143c7e5a40f0466fa910f49df9632db2/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=fdf3e18a143c7e5a40f0466fa910f49df9632db2", "patch": "@@ -407,7 +407,7 @@ __lshrdi3 (DWtype u, shift_count_type b)\n     return u;\n \n   const DWunion uu = {.ll = u};\n-  const shift_count_type bm = (sizeof (Wtype) * BITS_PER_UNIT) - b;\n+  const shift_count_type bm = W_TYPE_SIZE - b;\n   DWunion w;\n \n   if (bm <= 0)\n@@ -435,7 +435,7 @@ __ashldi3 (DWtype u, shift_count_type b)\n     return u;\n \n   const DWunion uu = {.ll = u};\n-  const shift_count_type bm = (sizeof (Wtype) * BITS_PER_UNIT) - b;\n+  const shift_count_type bm = W_TYPE_SIZE - b;\n   DWunion w;\n \n   if (bm <= 0)\n@@ -463,13 +463,13 @@ __ashrdi3 (DWtype u, shift_count_type b)\n     return u;\n \n   const DWunion uu = {.ll = u};\n-  const shift_count_type bm = (sizeof (Wtype) * BITS_PER_UNIT) - b;\n+  const shift_count_type bm = W_TYPE_SIZE - b;\n   DWunion w;\n \n   if (bm <= 0)\n     {\n       /* w.s.high = 1..1 or 0..0 */\n-      w.s.high = uu.s.high >> (sizeof (Wtype) * BITS_PER_UNIT - 1);\n+      w.s.high = uu.s.high >> (W_TYPE_SIZE - 1);\n       w.s.low = uu.s.high >> -bm;\n     }\n   else\n@@ -534,7 +534,7 @@ __ffsDI2 (DWtype u)\n   if (uu.s.low != 0)\n     word = uu.s.low, add = 0;\n   else if (uu.s.high != 0)\n-    word = uu.s.high, add = BITS_PER_UNIT * sizeof (Wtype);\n+    word = uu.s.high, add = W_TYPE_SIZE;\n   else\n     return 0;\n "}]}