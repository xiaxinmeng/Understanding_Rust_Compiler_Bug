{"sha": "70596a0fb2a2ec072e1e97e37616e05041dfa4e5", "node_id": "C_kwDOANBUbNoAKDcwNTk2YTBmYjJhMmVjMDcyZTFlOTdlMzc2MTZlMDUwNDFkZmE0ZTU", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2022-12-02T13:18:04Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2022-12-02T13:24:03Z"}, "message": "LRA: Check hard reg availability of pseudo and its subreg for pseudo reload\n\nDo not reload subreg pseudo if there are hard regs for subreg mode\nbut there are no hard regs for pseudo mode.\n\n        PR target/106462\n\ngcc/ChangeLog:\n\n\t* lra-constraints.cc (curr_insn_transform): Check available hard\n\tregs for pseudo and its subreg to decide what to reload.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/mips/pr106462.c: New test.", "tree": {"sha": "9adb3b92b62708d863ef3dd5f0ac716dafa2a500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9adb3b92b62708d863ef3dd5f0ac716dafa2a500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70596a0fb2a2ec072e1e97e37616e05041dfa4e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70596a0fb2a2ec072e1e97e37616e05041dfa4e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70596a0fb2a2ec072e1e97e37616e05041dfa4e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70596a0fb2a2ec072e1e97e37616e05041dfa4e5/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55251f3d3598ca6e001c4afa51b2ec913b4cac1"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "02b5ab4a3169e52477e9da78aa4835e858939465", "filename": "gcc/lra-constraints.cc", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70596a0fb2a2ec072e1e97e37616e05041dfa4e5/gcc%2Flra-constraints.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70596a0fb2a2ec072e1e97e37616e05041dfa4e5/gcc%2Flra-constraints.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.cc?ref=70596a0fb2a2ec072e1e97e37616e05041dfa4e5", "patch": "@@ -4582,7 +4582,18 @@ curr_insn_transform (bool check_only_p)\n \t\t      || (partial_subreg_p (mode, GET_MODE (reg))\n \t\t\t  && known_le (GET_MODE_SIZE (GET_MODE (reg)),\n \t\t\t\t       UNITS_PER_WORD)\n-\t\t\t  && WORD_REGISTER_OPERATIONS)))\n+\t\t\t  && WORD_REGISTER_OPERATIONS))\n+\t\t  /* Avoid the situation when there are no available hard regs\n+\t\t     for the pseudo mode but there are ones for the subreg\n+\t\t     mode: */\n+\t\t  && !(goal_alt[i] != NO_REGS\n+\t\t       && REGNO (reg) >= FIRST_PSEUDO_REGISTER\n+\t\t       && (prohibited_class_reg_set_mode_p\n+\t\t\t   (goal_alt[i], reg_class_contents[goal_alt[i]],\n+\t\t\t    GET_MODE (reg)))\n+\t\t       && !(prohibited_class_reg_set_mode_p\n+\t\t\t    (goal_alt[i], reg_class_contents[goal_alt[i]],\n+\t\t\t     mode))))\n \t\t{\n \t\t  /* An OP_INOUT is required when reloading a subreg of a\n \t\t     mode wider than a word to ensure that data beyond the"}, {"sha": "c9105409524d6efd7965e760ecb1ac2b9bd64eb2", "filename": "gcc/testsuite/gcc.target/mips/pr106462.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70596a0fb2a2ec072e1e97e37616e05041dfa4e5/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr106462.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70596a0fb2a2ec072e1e97e37616e05041dfa4e5/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr106462.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr106462.c?ref=70596a0fb2a2ec072e1e97e37616e05041dfa4e5", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabi=64 -msingle-float\" } */\n+\n+extern void bar (float x, short y);\n+\n+void foo (int argc)\n+{\n+    short c = argc * 2;\n+    float a = (float)(short)c, b = 9.5;\n+\n+    bar (b/a, c);\n+}"}]}