{"sha": "5970d32e6e5e2df717f834c6783f79b9e69dbbb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3MGQzMmU2ZTVlMmRmNzE3ZjgzNGM2NzgzZjc5YjllNjlkYmJiNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-29T00:58:04Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-29T00:58:04Z"}, "message": "(store_bit_field, extract_bit_field): Consistently use\nSLOW_UNALIGNED_ACCESS instead of STRICT_ALIGNMENT.\n\nFrom-SVN: r8568", "tree": {"sha": "0b6bfe299533adf5217ad0e304999812661f8c55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b6bfe299533adf5217ad0e304999812661f8c55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5970d32e6e5e2df717f834c6783f79b9e69dbbb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5970d32e6e5e2df717f834c6783f79b9e69dbbb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5970d32e6e5e2df717f834c6783f79b9e69dbbb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5970d32e6e5e2df717f834c6783f79b9e69dbbb5/comments", "author": null, "committer": null, "parents": [{"sha": "94d681a0a7915475bff8953cc5e5abb182f2022a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94d681a0a7915475bff8953cc5e5abb182f2022a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94d681a0a7915475bff8953cc5e5abb182f2022a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "900c2e671ff29f897022aedc5161f7b3224af431", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5970d32e6e5e2df717f834c6783f79b9e69dbbb5/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5970d32e6e5e2df717f834c6783f79b9e69dbbb5/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=5970d32e6e5e2df717f834c6783f79b9e69dbbb5", "patch": "@@ -409,7 +409,7 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n \t    bestmode = GET_MODE (op0);\n \n \t  if (bestmode == VOIDmode\n-\t      || (STRICT_ALIGNMENT && GET_MODE_SIZE (bestmode) > align))\n+\t      || (SLOW_UNALIGNED_ACCESS && GET_MODE_SIZE (bestmode) > align))\n \t    goto insv_loses;\n \n \t  /* Adjust address to point to the containing unit of that mode.  */\n@@ -1012,7 +1012,7 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t\t    bestmode = GET_MODE (xop0);\n \n \t\t  if (bestmode == VOIDmode\n-\t\t      || (STRICT_ALIGNMENT && GET_MODE_SIZE (bestmode) > align))\n+\t\t      || (SLOW_UNALIGNED_ACCESS && GET_MODE_SIZE (bestmode) > align))\n \t\t    goto extzv_loses;\n \n \t\t  /* Compute offset as multiple of this unit,\n@@ -1148,7 +1148,7 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t\t    bestmode = GET_MODE (xop0);\n \n \t\t  if (bestmode == VOIDmode\n-\t\t      || (STRICT_ALIGNMENT && GET_MODE_SIZE (bestmode) > align))\n+\t\t      || (SLOW_UNALIGNED_ACCESS && GET_MODE_SIZE (bestmode) > align))\n \t\t    goto extv_loses;\n \n \t\t  /* Compute offset as multiple of this unit,"}]}