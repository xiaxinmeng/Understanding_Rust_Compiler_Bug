{"sha": "d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg1YmUzYmEzYmEzN2NlYjJiMDhhNjJmMDk3NGNiNjg4M2MyNDYzNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T08:49:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T08:49:03Z"}, "message": "[multiple changes]\n\n2012-10-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.ads (Build_Array_Invariant_Proc): moved to body.\n\t* exp_ch3.adb (Build_Array_Invariant_Proc,\n\tBuild_Record_Invariant_Proc): transform into functions.\n\t(Insert_Component_Invariant_Checks): for composite types that have\n\tcomponents with specified invariants, build a checking procedure,\n\tand make into the invariant procedure of the composite type,\n\tor incorporate it into the user- defined invariant procedure if\n\tone has been created.\n\t* sem_ch3.adb (Array_Type_Declaration): Checking for invariants\n\ton the component type is defered to the expander.\n\n2012-10-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* xsnamest.adb, namet.h, sem_ch10.adb, s-oscons-tmplt.c,\n\txoscons.adb: Minor reformatting.\n\n2012-10-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* checks.adb (Apply_Parameter_Aliasing_And_Validity_Checks):\n\tDo not process subprogram renaminds because a) those cannot\n\thave PPC pragmas b) the renamed entity already has the PPCs.\n\t(Build_PPC_Pragma): Prepend a PPC pragma for consistency with\n\tProcess_PPCs.\n\t* sem_ch6.adb (Last_Implicit_Declaration): Removed.\n\t(Process_PPCs): Insert a post condition body at the start of the\n\tdeclarative region of the related subprogram. This way the body\n\twill not freeze anything it shouldn't.\n\nFrom-SVN: r191903", "tree": {"sha": "2e2bd5262029c501de6388f6b86c7540545107ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e2bd5262029c501de6388f6b86c7540545107ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/comments", "author": null, "committer": null, "parents": [{"sha": "c5a26133df8575533bc97def6e76bf66bec7f91a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a26133df8575533bc97def6e76bf66bec7f91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a26133df8575533bc97def6e76bf66bec7f91a"}], "stats": {"total": 294, "additions": 199, "deletions": 95}, "files": [{"sha": "105b9845fc29494ab6937a2432a3bd94d2a97949", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -1,3 +1,33 @@\n+2012-10-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.ads (Build_Array_Invariant_Proc): moved to body.\n+\t* exp_ch3.adb (Build_Array_Invariant_Proc,\n+\tBuild_Record_Invariant_Proc): transform into functions.\n+\t(Insert_Component_Invariant_Checks): for composite types that have\n+\tcomponents with specified invariants, build a checking procedure,\n+\tand make into the invariant procedure of the composite type,\n+\tor incorporate it into the user- defined invariant procedure if\n+\tone has been created.\n+\t* sem_ch3.adb (Array_Type_Declaration): Checking for invariants\n+\ton the component type is defered to the expander.\n+\n+2012-10-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* xsnamest.adb, namet.h, sem_ch10.adb, s-oscons-tmplt.c,\n+\txoscons.adb: Minor reformatting.\n+\n+2012-10-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb (Apply_Parameter_Aliasing_And_Validity_Checks):\n+\tDo not process subprogram renaminds because a) those cannot\n+\thave PPC pragmas b) the renamed entity already has the PPCs.\n+\t(Build_PPC_Pragma): Prepend a PPC pragma for consistency with\n+\tProcess_PPCs.\n+\t* sem_ch6.adb (Last_Implicit_Declaration): Removed.\n+\t(Process_PPCs): Insert a post condition body at the start of the\n+\tdeclarative region of the related subprogram. This way the body\n+\twill not freeze anything it shouldn't.\n+\n 2012-10-01  Robert Dewar  <dewar@adacore.com>\n \n \t* freeze.adb, sem_ch6.adb, opt.ads, sem_ch13.adb,"}, {"sha": "85f232b5efa3eab0630034a1cd02543c131320d1", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -1918,7 +1918,7 @@ package body Checks is\n                Set_Declarations (Subp_Decl, Decls);\n             end if;\n \n-            Append_To (Decls, Prag);\n+            Prepend_To (Decls, Prag);\n \n             --  Ensure the proper visibility of the subprogram body and its\n             --  parameters.\n@@ -1971,6 +1971,11 @@ package body Checks is\n \n         or else Nkind (Subp_Decl) = N_Abstract_Subprogram_Declaration\n \n+         --  Do not consider subprogram renaminds because the renamed entity\n+         --  already has the proper PPC pragmas.\n+\n+        or else Nkind (Subp_Decl) = N_Subprogram_Renaming_Declaration\n+\n          --  Do not process null procedures because there is no benefit of\n          --  adding the checks to a no action routine.\n "}, {"sha": "dc7aa350c07ee2428c8660e307f93c26724ac0b3", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 106, "deletions": 26, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -88,6 +88,22 @@ package body Exp_Ch3 is\n    --  used for attachment of any actions required in its construction.\n    --  It also supplies the source location used for the procedure.\n \n+   function Build_Array_Invariant_Proc\n+     (A_Type : Entity_Id;\n+      Nod    : Node_Id) return Node_Id;\n+   --  If the component of type of array type has invariants, build procedure\n+   --  that checks invariant on all components of the array. Ada 2012 specifies\n+   --  that an invariant on some type T must be applied to in-out parameters\n+   --  and return values that include a part of type T. If the array type has\n+   --  an otherwise specified invariant, the component check procedure is\n+   --  called from within the user-specified invariant. Otherwise this becomes\n+   --  the invariant procedure for the array type.\n+\n+   function Build_Record_Invariant_Proc\n+     (R_Type : Entity_Id;\n+      Nod    : Node_Id) return Node_Id;\n+   --  Ditto for record types.\n+\n    function Build_Discriminant_Formals\n      (Rec_Id : Entity_Id;\n       Use_Dl : Boolean) return List_Id;\n@@ -118,10 +134,6 @@ package body Exp_Ch3 is\n    --  Build record initialization procedure. N is the type declaration\n    --  node, and Rec_Ent is the corresponding entity for the record type.\n \n-   procedure Build_Record_Invariant_Proc (R_Type : Entity_Id; Nod : Node_Id);\n-   --  If the record type has components whose types have invariant, build\n-   --  an invariant procedure for the record type itself.\n-\n    procedure Build_Slice_Assignment (Typ : Entity_Id);\n    --  Build assignment procedure for one-dimensional arrays of controlled\n    --  types. Other array and slice assignments are expanded in-line, but\n@@ -184,6 +196,14 @@ package body Exp_Ch3 is\n    --  Treat user-defined stream operations as renaming_as_body if the\n    --  subprogram they rename is not frozen when the type is frozen.\n \n+   procedure Insert_Component_Invariant_Checks\n+     (N   : Node_Id;\n+     Typ  : Entity_Id;\n+     Proc : Node_Id);\n+   --  If a composite type has invariants and also has components with defined\n+   --  invariants. the component invariant procedure is inserted into the user-\n+   --  defined invariant procedure and added to the checks to be performed.\n+\n    procedure Initialization_Warning (E : Entity_Id);\n    --  If static elaboration of the package is requested, indicate\n    --  when a type does meet the conditions for static initialization. If\n@@ -788,7 +808,10 @@ package body Exp_Ch3 is\n    -- Build_Array_Invariant_Proc --\n    --------------------------------\n \n-   procedure Build_Array_Invariant_Proc (A_Type : Entity_Id; Nod : Node_Id) is\n+   function Build_Array_Invariant_Proc\n+     (A_Type : Entity_Id;\n+      Nod    : Node_Id) return Node_Id\n+   is\n       Loc : constant Source_Ptr := Sloc (Nod);\n \n       Object_Name : constant Name_Id := New_Internal_Name ('I');\n@@ -882,9 +905,7 @@ package body Exp_Ch3 is\n \n       Proc_Id :=\n         Make_Defining_Identifier (Loc,\n-           Chars => New_External_Name (Chars (A_Type), \"Invariant\"));\n-      Set_Has_Invariants (Proc_Id);\n-      Set_Invariant_Procedure (A_Type, Proc_Id);\n+           Chars => New_External_Name (Chars (A_Type), \"CInvariant\"));\n \n       Body_Stmts := Check_One_Dimension (1);\n \n@@ -912,10 +933,7 @@ package body Exp_Ch3 is\n          Set_Debug_Info_Off (Proc_Id);\n       end if;\n \n-      --  The procedure body is placed after the freeze node for the type.\n-\n-      Insert_After (Nod, Proc_Body);\n-      Analyze (Proc_Body);\n+      return Proc_Body;\n    end Build_Array_Invariant_Proc;\n \n    --------------------------------\n@@ -3619,7 +3637,10 @@ package body Exp_Ch3 is\n    -- Build_Record_Invariant_Proc --\n    --------------------------------\n \n-   procedure Build_Record_Invariant_Proc (R_Type : Entity_Id; Nod : Node_Id) is\n+   function Build_Record_Invariant_Proc\n+     (R_Type : Entity_Id;\n+      Nod    : Node_Id) return Node_Id\n+   is\n       Loc : constant Source_Ptr := Sloc (Nod);\n \n       Object_Name : constant Name_Id := New_Internal_Name ('I');\n@@ -3745,19 +3766,16 @@ package body Exp_Ch3 is\n       then\n          Stmts := Build_Invariant_Checks (Component_List (Type_Def));\n       else\n-         return;\n+         return Empty;\n       end if;\n \n       if not Invariant_Found then\n-         return;\n+         return Empty;\n       end if;\n \n       Proc_Id :=\n         Make_Defining_Identifier (Loc,\n            Chars => New_External_Name (Chars (R_Type), \"Invariant\"));\n-      Set_Has_Invariants (Proc_Id);\n-      Set_Has_Invariants (R_Type);\n-      Set_Invariant_Procedure (R_Type, Proc_Id);\n \n       Proc_Body :=\n         Make_Subprogram_Body (Loc,\n@@ -3779,10 +3797,9 @@ package body Exp_Ch3 is\n       Set_Is_Internal    (Proc_Id);\n       Set_Has_Completion (Proc_Id);\n \n-      --  The procedure body is placed after the freeze node for the type.\n-\n-      Insert_After (Nod, Proc_Body);\n-      Analyze (Proc_Body);\n+      return Proc_Body;\n+      --  Insert_After (Nod, Proc_Body);\n+      --  Analyze (Proc_Body);\n    end Build_Record_Invariant_Proc;\n \n    ----------------------------\n@@ -5843,7 +5860,11 @@ package body Exp_Ch3 is\n       end if;\n \n       if Has_Invariants (Component_Type (Base)) then\n-         Build_Array_Invariant_Proc (Base, N);\n+\n+         --  Generate component invariant checking procedure.\n+\n+         Insert_Component_Invariant_Checks\n+           (N, Base, Build_Array_Invariant_Proc (Base, N));\n       end if;\n    end Expand_Freeze_Array_Type;\n \n@@ -6812,9 +6833,11 @@ package body Exp_Ch3 is\n          end;\n       end if;\n \n-      if not Has_Invariants (Def_Id) then\n-         Build_Record_Invariant_Proc (Def_Id, N);\n-      end if;\n+      --  Check whether individual components have a defined invariant,\n+      --  and add the corresponding component invariant checks.\n+\n+      Insert_Component_Invariant_Checks\n+        (N, Def_Id, Build_Record_Invariant_Proc (Def_Id, N));\n    end Expand_Freeze_Record_Type;\n \n    ------------------------------\n@@ -7579,6 +7602,63 @@ package body Exp_Ch3 is\n       return Is_RTU (S1, System) or else Is_RTU (S1, Ada);\n    end In_Runtime;\n \n+   ---------------------------------------\n+   -- Insert_Component_Invariant_Checks --\n+   ---------------------------------------\n+\n+   procedure Insert_Component_Invariant_Checks\n+     (N   : Node_Id;\n+     Typ  : Entity_Id;\n+     Proc : Node_Id)\n+   is\n+      Loc     : constant Source_Ptr := Sloc (Typ);\n+      Proc_Id : Entity_Id;\n+\n+   begin\n+      if Present (Proc) then\n+         Proc_Id := Defining_Entity (Proc);\n+\n+         if not Has_Invariants (Typ) then\n+            Set_Has_Invariants (Typ);\n+            Set_Has_Invariants (Proc_Id);\n+            Set_Invariant_Procedure (Typ, Proc_Id);\n+            Insert_After (N, Proc);\n+            Analyze (Proc);\n+\n+         else\n+\n+            --  Find already created invariant body, insert body of component\n+            --  invariant proc in it, and add call after other checks.\n+\n+            declare\n+               Bod : Node_Id;\n+               Inv_Id : constant Entity_Id := Invariant_Procedure (Typ);\n+               Call   : constant Node_Id :=\n+                 Make_Procedure_Call_Statement (Loc,\n+                   Name => New_Occurrence_Of (Proc_Id, Loc),\n+                   Parameter_Associations =>\n+                     New_List\n+                       (New_Reference_To (First_Formal (Inv_Id), Loc)));\n+\n+            begin\n+\n+               --  The invariant  body has not been analyzed yet, so we do a\n+               --  sequential search forward, and retrieve it by name.\n+\n+               Bod := Next (N);\n+               while Present (Bod) loop\n+                  exit when Nkind (Bod) = N_Subprogram_Body\n+                    and then Chars (Defining_Entity (Bod)) = Chars (Inv_Id);\n+                  Next (Bod);\n+               end loop;\n+\n+               Append_To (Declarations (Bod), Proc);\n+               Append_To (Statements (Handled_Statement_Sequence (Bod)), Call);\n+            end;\n+         end if;\n+      end if;\n+   end Insert_Component_Invariant_Checks;\n+\n    ----------------------------\n    -- Initialization_Warning --\n    ----------------------------"}, {"sha": "d43366812ec791987653ce921ce0bd3d84a41eec", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -46,12 +46,6 @@ package Exp_Ch3 is\n    procedure Expand_Record_Extension (T : Entity_Id; Def : Node_Id);\n    --  Add a field _parent in the extension part of the record\n \n-   procedure Build_Array_Invariant_Proc (A_Type : Entity_Id; Nod : Node_Id);\n-   --  If the component of type of array type has invariants, build procedure\n-   --  that checks invariant on all components of the array. Ada 2012 specifies\n-   --  that an invariant on some type T must be applied to in-out parameters\n-   --  and return values that include a part of type T.\n-\n    procedure Build_Discr_Checking_Funcs (N : Node_Id);\n    --  Builds function which checks whether the component name is consistent\n    --  with the current discriminants. N is the full type declaration node,"}, {"sha": "0bc841ac85d12a65a76271c4941ef83f6cb987c8", "filename": "gcc/ada/namet.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fnamet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fnamet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.h?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2012, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -24,7 +24,8 @@\n  ****************************************************************************/\n \n /* This is the C file that corresponds to the Ada package specification\n-   Namet.  It was created manually from files namet.ads and namet.adb.  */\n+   Namet.  It was created manually from files namet.ads and namet.adb.\n+   Some subprograms from Sinput are also made acessable here.  */\n \n #ifdef __cplusplus\n extern \"C\" {\n@@ -111,7 +112,8 @@ extern char *Spec_Filename, *Body_Filename;\n #define Is_Non_Ada_Error exp_ch11__is_non_ada_error\n extern Boolean Is_Non_Ada_Error (Entity_Id);\n \n-/* Here are some functions in sinput.adb we call from a-trans.c.  */\n+/* Here are some functions in sinput.adb we call from trans.c.  */\n+\n typedef Nat Source_File_Index;\n typedef Int Logical_Line_Number;\n typedef Int Column_Number;"}, {"sha": "50a55e43d231f493c0efc070b5853896a5975f37", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -288,8 +288,12 @@ C(\"Target_OS\", OS_Type, TARGET_OS, \"\")\n #define Target_Name TARGET\n CST(Target_Name, \"\")\n \n-#define sizeof_unsigned_int sizeof (unsigned int)\n-CND(sizeof_unsigned_int, \"Size of unsigned int\")\n+/**\n+ ** Note: the name of the following constant is recognized specially by\n+ **  xoscons (case sensitive).\n+ **/\n+#define SIZEOF_unsigned_int sizeof (unsigned int)\n+CND(SIZEOF_unsigned_int, \"Size of unsigned int\")\n \n /*\n "}, {"sha": "ded081fc3e1ed50d31a87c6873956b6975b748f7", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -1822,7 +1822,7 @@ package body Sem_Ch10 is\n                      Set_Corresponding_Stub (Unit (Comp_Unit), N);\n \n                      --  Collect SCO information for loaded subunit if we are\n-                     --  in the main unit).\n+                     --  in the main unit.\n \n                      if Generate_SCO\n                        and then"}, {"sha": "483e7055f03555300555c2eee41158ebce3a0067", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -4974,12 +4974,9 @@ package body Sem_Ch3 is\n             Subtype_Indication (Component_Def));\n       end if;\n \n-      --  Ada 2012: if the element type has invariants we must create an\n-      --  invariant procedure for the array type as well.\n-\n-      if Has_Invariants (Element_Type) then\n-         Set_Has_Invariants (T);\n-      end if;\n+      --  There may be an invariant declared for the component type, but\n+      --  the construction of the component invariant checking procedure\n+      --  takes place during expansion.\n    end Array_Type_Declaration;\n \n    ------------------------------------------------------"}, {"sha": "8c88d8f9acbc05e1bdf772246541ab7fe9953c11", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 39, "deletions": 48, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -11087,6 +11087,9 @@ package body Sem_Ch6 is\n       --  references to parameters of the inherited subprogram to point to the\n       --  corresponding parameters of the current subprogram.\n \n+      procedure Insert_Before_First_Source_Declaration (Nod : Node_Id);\n+      --  Insert node Nod before the first source declaration of the context\n+\n       function Invariants_Or_Predicates_Present return Boolean;\n       --  Determines if any invariants or predicates are present for any OUT\n       --  or IN OUT parameters of the subprogram, or (for a function) if the\n@@ -11101,9 +11104,6 @@ package body Sem_Ch6 is\n       --  that an invariant check is required (for an IN OUT parameter, or\n       --  the returned value of a function.\n \n-      function Last_Implicit_Declaration return Node_Id;\n-      --  Return the last internally-generated declaration of N\n-\n       -------------\n       -- Grab_CC --\n       -------------\n@@ -11281,6 +11281,36 @@ package body Sem_Ch6 is\n          return CP;\n       end Grab_PPC;\n \n+      --------------------------------------------\n+      -- Insert_Before_First_Source_Declaration --\n+      --------------------------------------------\n+\n+      procedure Insert_Before_First_Source_Declaration (Nod : Node_Id) is\n+         Decls : constant List_Id := Declarations (N);\n+         Decl  : Node_Id;\n+\n+      begin\n+         if No (Decls) then\n+            Set_Declarations (N, New_List (Nod));\n+         else\n+            Decl := First (Decls);\n+\n+            while Present (Decl) loop\n+               if Comes_From_Source (Decl) then\n+                  exit;\n+               end if;\n+\n+               Next (Decl);\n+            end loop;\n+\n+            if No (Decl) then\n+               Append_To (Decls, Nod);\n+            else\n+               Insert_Before (Decl, Nod);\n+            end if;\n+         end if;\n+      end Insert_Before_First_Source_Declaration;\n+\n       --------------------------------------\n       -- Invariants_Or_Predicates_Present --\n       --------------------------------------\n@@ -11358,50 +11388,6 @@ package body Sem_Ch6 is\n          end if;\n       end Is_Public_Subprogram_For;\n \n-      -------------------------------\n-      -- Last_Implicit_Declaration --\n-      -------------------------------\n-\n-      function Last_Implicit_Declaration return Node_Id is\n-         Loc   : constant Source_Ptr := Sloc (N);\n-         Decls : List_Id := Declarations (N);\n-         Decl  : Node_Id;\n-         Succ  : Node_Id;\n-\n-      begin\n-         if No (Decls) then\n-            Decls := New_List (Make_Null_Statement (Loc));\n-            Set_Declarations (N, Decls);\n-\n-         elsif Is_Empty_List (Declarations (N)) then\n-            Append_To (Decls, Make_Null_Statement (Loc));\n-         end if;\n-\n-         --  Implicit and source declarations may be interspersed. Search for\n-         --  the last implicit declaration which is either succeeded by a\n-         --  source construct or is the last node in the declarative list.\n-\n-         Decl := First (Declarations (N));\n-         while Present (Decl) loop\n-            Succ := Next (Decl);\n-\n-            --  The current declaration is the last one, do not return Empty\n-\n-            if No (Succ) then\n-               exit;\n-\n-            --  The successor is a source construct\n-\n-            elsif Comes_From_Source (Succ) then\n-               exit;\n-            end if;\n-\n-            Next (Decl);\n-         end loop;\n-\n-         return Decl;\n-      end Last_Implicit_Declaration;\n-\n    --  Start of processing for Process_PPCs\n \n    begin\n@@ -11807,7 +11793,12 @@ package body Sem_Ch6 is\n             --  The entity for the _Postconditions procedure\n \n          begin\n-            Insert_After (Last_Implicit_Declaration,\n+            --  Insert the corresponding body of a post condition pragma before\n+            --  the first source declaration of the context. This ensures that\n+            --  any [sub]types generated in relation to the formals of the\n+            --  subprogram are still visible in the _postcondition body.\n+\n+            Insert_Before_First_Source_Declaration (\n               Make_Subprogram_Body (Loc,\n                 Specification =>\n                   Make_Procedure_Specification (Loc,"}, {"sha": "90d1b2d4de725b2186864972b71e96a523d53b93", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -387,7 +387,7 @@ procedure XOSCons is\n                   Info.Value_Len  := Info.Text_Value'Length;\n                end if;\n \n-               if Info.Constant_Name.all = \"sizeof_unsigned_int\" then\n+               if Info.Constant_Name.all = \"SIZEOF_unsigned_int\" then\n                   Size_Of_Unsigned_Int :=\n                     8 * Integer (Info.Int_Value.Abs_Value);\n                end if;"}, {"sha": "a22eec02aa7afc08a10550f51720095b3868d354", "filename": "gcc/ada/xsnamest.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fxsnamest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d85be3ba3ba37ceb2b08a62f0974cb6883c24637/gcc%2Fada%2Fxsnamest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnamest.adb?ref=d85be3ba3ba37ceb2b08a62f0974cb6883c24637", "patch": "@@ -229,10 +229,11 @@ begin\n             Output_Header_Line (Prag);\n          end if;\n       else\n-         Oval := Lpad (V (Val), 3, '0');\n \n          if Match (Name0, \"Last_\") then\n             Oval := Lpad (V (Val - 1), 3, '0');\n+         else\n+            Oval := Lpad (V (Val), 3, '0');\n          end if;\n \n          Put_Line"}]}