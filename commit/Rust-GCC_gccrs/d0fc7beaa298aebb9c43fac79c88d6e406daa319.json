{"sha": "d0fc7beaa298aebb9c43fac79c88d6e406daa319", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBmYzdiZWFhMjk4YWViYjljNDNmYWM3OWM4OGQ2ZTQwNmRhYTMxOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-12T17:51:16Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-12T17:51:16Z"}, "message": "(reload_insi): Delete.\n\n(*): Fix all callers of legitimize_pic_address and emit_move_sequence.\n\nFrom-SVN: r5143", "tree": {"sha": "4ce86cee32c669f89a86bd8eded9a89d30186646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ce86cee32c669f89a86bd8eded9a89d30186646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0fc7beaa298aebb9c43fac79c88d6e406daa319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0fc7beaa298aebb9c43fac79c88d6e406daa319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0fc7beaa298aebb9c43fac79c88d6e406daa319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0fc7beaa298aebb9c43fac79c88d6e406daa319/comments", "author": null, "committer": null, "parents": [{"sha": "a78bdb3850ecf3e7df69c293d2827bbf8097967b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78bdb3850ecf3e7df69c293d2827bbf8097967b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78bdb3850ecf3e7df69c293d2827bbf8097967b"}], "stats": {"total": 37, "additions": 11, "deletions": 26}, "files": [{"sha": "c0c1bca58cfd2dbcfdb7d2f05bbd4acaf304d749", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 11, "deletions": 26, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0fc7beaa298aebb9c43fac79c88d6e406daa319/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0fc7beaa298aebb9c43fac79c88d6e406daa319/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=d0fc7beaa298aebb9c43fac79c88d6e406daa319", "patch": "@@ -778,25 +778,10 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, SImode, NULL_RTX))\n+  if (emit_move_sequence (operands, SImode))\n     DONE;\n }\")\n \n-(define_expand \"reload_insi\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(match_operand:SI 1 \"general_operand\" \"\"))\n-   (clobber (match_operand:SI 2 \"register_operand\" \"=&r\"))]\n-  \"\"\n-  \"\n-{\n-  if (emit_move_sequence (operands, SImode, operands[2]))\n-    DONE;\n-\n-  /* We don't want the clobber emitted, so handle this ourselves.  */\n-  emit_insn (gen_rtx (SET, VOIDmode, operands[0], operands[1]));\n-  DONE;\n-}\")\n-\n ;; We must support both 'r' and 'f' registers here, because combine may\n ;; convert SFmode hard registers to SImode hard registers when simplifying\n ;; subreg sets.\n@@ -952,7 +937,7 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, HImode, NULL_RTX))\n+  if (emit_move_sequence (operands, HImode))\n     DONE;\n }\")\n \n@@ -993,7 +978,7 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, QImode, NULL_RTX))\n+  if (emit_move_sequence (operands, QImode))\n     DONE;\n }\")\n \n@@ -1108,7 +1093,7 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, TFmode, NULL_RTX))\n+  if (emit_move_sequence (operands, TFmode))\n     DONE;\n }\")\n \n@@ -1192,7 +1177,7 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, DFmode, NULL_RTX))\n+  if (emit_move_sequence (operands, DFmode))\n     DONE;\n }\")\n \n@@ -1261,7 +1246,7 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, DImode, NULL_RTX))\n+  if (emit_move_sequence (operands, DImode))\n     DONE;\n }\")\n \n@@ -1310,7 +1295,7 @@\n   \"\"\n   \"\n {\n-  if (emit_move_sequence (operands, SFmode, NULL_RTX))\n+  if (emit_move_sequence (operands, SFmode))\n     DONE;\n }\")\n \n@@ -2949,7 +2934,7 @@\n   \"\n {\n   operands[1] = legitimize_pic_address (operands[1], GET_MODE (operands[0]),\n-\t\t\t\t\toperands[3], 0);\n+\t\t\t\t\toperands[3]);\n }\")\n \n (define_split\n@@ -2962,7 +2947,7 @@\n   \"\n {\n   operands[2] = legitimize_pic_address (operands[2], GET_MODE (operands[1]),\n-\t\t\t\t\toperands[0], 0);\n+\t\t\t\t\toperands[0]);\n }\")\n \n ;; Sign- and Zero-extend operations can have symbolic memory operands.\n@@ -2978,7 +2963,7 @@\n   \"\n {\n   operands[3] = legitimize_pic_address (operands[3], GET_MODE (operands[2]),\n-\t\t\t\t\toperands[0], 0);\n+\t\t\t\t\toperands[0]);\n }\")\n \n (define_split\n@@ -3002,7 +2987,7 @@\n   [(set (match_dup 0) (match_dup 1))]\n   \"\n {\n-  operands[1] = legitimize_pic_address (operands[1], Pmode, operands[0], 0);\n+  operands[1] = legitimize_pic_address (operands[1], Pmode, operands[0]);\n }\")\n \f\n ;; These split sne/seq insns.  The forms of the resulting insns are "}]}