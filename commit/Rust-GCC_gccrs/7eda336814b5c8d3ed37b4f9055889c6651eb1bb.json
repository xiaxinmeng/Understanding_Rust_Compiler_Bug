{"sha": "7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VkYTMzNjgxNGI1YzhkM2VkMzdiNGY5MDU1ODg5YzY2NTFlYjFiYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-25T16:16:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-25T16:16:53Z"}, "message": "re PR c++/48289 (-pedantic breaks std::move)\n\n\tPR c++/48289\n\t* pt.c (build_non_dependent_expr): Keep dereferences outside the\n\tNON_DEPENDENT_EXPR.\n\nFrom-SVN: r171461", "tree": {"sha": "9338a715246efa562c1019665f1a0bd4f761396f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9338a715246efa562c1019665f1a0bd4f761396f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7dc8804a86017317cd7d3e5f65f715d5c4d5da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7dc8804a86017317cd7d3e5f65f715d5c4d5da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7dc8804a86017317cd7d3e5f65f715d5c4d5da2"}], "stats": {"total": 48, "additions": 33, "deletions": 15}, "files": [{"sha": "b9fb0cdffac5f1deefebcd32f8bb2273eff00f8e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "patch": "@@ -1,3 +1,9 @@\n+2011-03-25  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48289\n+\t* pt.c (build_non_dependent_expr): Keep dereferences outside the\n+\tNON_DEPENDENT_EXPR.\n+\n 2011-03-25  Kai Tietz  <ktietz@redhat.com>\n \n \t* decl.c (decls_match): Replace target hook"}, {"sha": "9032dd92dcb993260e190d1b918586ec12795d46", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "patch": "@@ -18846,24 +18846,17 @@ build_non_dependent_expr (tree expr)\n \t\t   TREE_OPERAND (expr, 0),\n \t\t   build_non_dependent_expr (TREE_OPERAND (expr, 1)));\n \n+  /* Keep dereferences outside the NON_DEPENDENT_EXPR so lvalue_kind\n+     doesn't need to look inside.  */\n+  if (TREE_CODE (expr) == INDIRECT_REF && REFERENCE_REF_P (expr))\n+    return convert_from_reference (build_non_dependent_expr\n+\t\t\t\t   (TREE_OPERAND (expr, 0)));\n+\n   /* If the type is unknown, it can't really be non-dependent */\n   gcc_assert (TREE_TYPE (expr) != unknown_type_node);\n \n-  /* Otherwise, build a NON_DEPENDENT_EXPR.\n-\n-     REFERENCE_TYPEs are not stripped for expressions in templates\n-     because doing so would play havoc with mangling.  Consider, for\n-     example:\n-\n-       template <typename T> void f<T& g>() { g(); }\n-\n-     In the body of \"f\", the expression for \"g\" will have\n-     REFERENCE_TYPE, even though the standard says that it should\n-     not.  The reason is that we must preserve the syntactic form of\n-     the expression so that mangling (say) \"f<g>\" inside the body of\n-     \"f\" works out correctly.  Therefore, the REFERENCE_TYPE is\n-     stripped here.  */\n-  return build1 (NON_DEPENDENT_EXPR, non_reference (TREE_TYPE (expr)), expr);\n+  /* Otherwise, build a NON_DEPENDENT_EXPR.  */\n+  return build1 (NON_DEPENDENT_EXPR, TREE_TYPE (expr), expr);\n }\n \n /* ARGS is a vector of expressions as arguments to a function call."}, {"sha": "57a7102d9f9c5a8c8966d109abb894b99f8f59d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "patch": "@@ -1,3 +1,7 @@\n+2011-03-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/move1.C: New.\n+\n 2011-03-25  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR target/48287"}, {"sha": "12e363a8cabef752e983f3fbfc7b28eb12d61040", "filename": "gcc/testsuite/g++.dg/cpp0x/move1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fmove1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eda336814b5c8d3ed37b4f9055889c6651eb1bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fmove1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fmove1.C?ref=7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "patch": "@@ -0,0 +1,15 @@\n+// { dg-options \"-std=c++0x -pedantic-errors\" }\n+\n+#include <utility>\n+\n+class A { };\n+\n+static void g ( A && ) { }\n+\n+template < class T > class B {\n+public:\n+ void f ( ) {\n+  A a;\n+  g ( std :: move ( a ) );\n+ }\n+};"}]}