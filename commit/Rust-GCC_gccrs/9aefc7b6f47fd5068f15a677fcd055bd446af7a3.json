{"sha": "9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFlZmM3YjZmNDdmZDUwNjhmMTVhNjc3ZmNkMDU1YmQ0NDZhZjdhMw==", "commit": {"author": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-22T17:44:51Z"}, "committer": {"name": "Jan Brittenson", "email": "bson@gnu.org", "date": "1993-09-22T17:44:51Z"}, "message": "Initial revision\n\nFrom-SVN: r5393", "tree": {"sha": "e453f3ee9c3c1f3e07436196e035a65aa8138073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e453f3ee9c3c1f3e07436196e035a65aa8138073"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/comments", "author": null, "committer": null, "parents": [{"sha": "422e2ed3d71d032fe47f4375eb2ad4098cca6603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/422e2ed3d71d032fe47f4375eb2ad4098cca6603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/422e2ed3d71d032fe47f4375eb2ad4098cca6603"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "f42485f7bbfd75aaad2bd7e0b59c03de0bba4323", "filename": "gcc/bc-optab.h", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/gcc%2Fbc-optab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/gcc%2Fbc-optab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbc-optab.h?ref=9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "patch": "@@ -0,0 +1,74 @@\n+/* Bytecode token definitions for GNU C-compiler.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+\n+extern void bc_expand_conversion ();\n+extern void bc_expand_truth_conversion ();\n+extern void bc_expand_binary_operation ();\n+extern void bc_expand_unary_operation ();\n+\n+struct binary_operator\n+{\n+  enum bytecode_opcode opcode;\n+  enum typecode result;\n+  enum typecode arg0;\n+  enum typecode arg1;\n+};\n+\n+extern struct binary_operator optab_plus_expr[];\n+extern struct binary_operator optab_minus_expr[];\n+extern struct binary_operator optab_mult_expr[];\n+extern struct binary_operator optab_trunc_div_expr[];\n+extern struct binary_operator optab_trunc_mod_expr[];\n+extern struct binary_operator optab_rdiv_expr[];\n+extern struct binary_operator optab_bit_and_expr[];\n+extern struct binary_operator optab_bit_ior_expr[];\n+extern struct binary_operator optab_bit_xor_expr[];\n+extern struct binary_operator optab_lshift_expr[];\n+extern struct binary_operator optab_rshift_expr[];\n+extern struct binary_operator optab_truth_and_expr[];\n+extern struct binary_operator optab_truth_or_expr[];\n+extern struct binary_operator optab_lt_expr[];\n+extern struct binary_operator optab_le_expr[];\n+extern struct binary_operator optab_ge_expr[];\n+extern struct binary_operator optab_gt_expr[];\n+extern struct binary_operator optab_eq_expr[];\n+extern struct binary_operator optab_ne_expr[];\n+\n+struct unary_operator\n+{\n+  enum bytecode_opcode opcode;\n+  enum typecode result;\n+  enum typecode arg0;\n+};\n+\n+extern struct unary_operator optab_negate_expr[];\n+extern struct unary_operator optab_bit_not_expr[];\n+extern struct unary_operator optab_truth_not_expr[];\n+\n+struct increment_operator\n+{\n+  enum bytecode_opcode opcode;\n+  enum typecode arg;\n+};\n+\n+extern struct increment_operator optab_predecrement_expr[];\n+extern struct increment_operator optab_preincrement_expr[];\n+extern struct increment_operator optab_postdecrement_expr[];\n+extern struct increment_operator optab_postincrement_expr[];"}, {"sha": "fd92cdd92822b17a8d76879ae311e7563c516b48", "filename": "gcc/bc-typecd.def", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/gcc%2Fbc-typecd.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/gcc%2Fbc-typecd.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbc-typecd.def?ref=9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "patch": "@@ -0,0 +1,21 @@\n+/* Typecodes used by the interpreter and their related\n+   machine modes and types.\n+\n+   The last argument is used for retrieving the given\n+   type from a varargs list. Due to a bug in varargs,\n+   the type has to be the generic machine type of\n+   larger. */\n+\n+DEFTYPECODE (QIcode, \"QI\", QImode, SItype)\n+DEFTYPECODE (QUcode, \"QU\", QImode, SUtype)\n+DEFTYPECODE (HIcode, \"HI\", HImode, SItype)\n+DEFTYPECODE (HUcode, \"HU\", HImode, SUtype)\n+DEFTYPECODE (SIcode, \"SI\", SImode, SItype)\n+DEFTYPECODE (SUcode, \"SU\", SImode, SUtype)\n+DEFTYPECODE (DIcode, \"DI\", DImode, DItype)\n+DEFTYPECODE (DUcode, \"DU\", DImode, DUtype)\n+DEFTYPECODE (SFcode, \"SF\", SFmode, SFtype)\n+DEFTYPECODE (DFcode, \"DF\", DFmode, DFtype)\n+DEFTYPECODE (XFcode, \"XF\", XFmode, XFtype)\n+DEFTYPECODE (Pcode, \"P\", PSImode, Ptype)\n+DEFTYPECODE (Tcode, \"T\", SImode, SItype)"}, {"sha": "77c31b6de1b5b73d16b0f46ac7954810b27e9411", "filename": "gcc/bi-arity.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/gcc%2Fbi-arity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aefc7b6f47fd5068f15a677fcd055bd446af7a3/gcc%2Fbi-arity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbi-arity.c?ref=9aefc7b6f47fd5068f15a677fcd055bd446af7a3", "patch": "@@ -0,0 +1,54 @@\n+/* Bytecode Interpreter utility to generate arity table.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+\n+#include \"bi-defs.h\"\n+\n+int\n+length(n)\n+     struct node *n;\n+{\n+  int k;\n+\n+  for (k = 0; n; n = n->next)\n+    ++k;\n+  return k;\n+}\n+\n+int\n+main()\n+{\n+  struct def *d;\n+  struct variation *v;\n+  struct node *n;\n+\n+  yyparse();\n+  reverse();\n+\n+  for (d = defs; d; d = d->next)\n+    for (v = d->variations; v; v = v->next)\n+      {\n+\tprintf(\"{ %d, %d, %d, {\", length(v->inputs),\n+\t       length(v->outputs), length(v->literals));\n+\tfor (n = v->literals; n; n = n->next)\n+\t  printf(\"%scode, \", n->text);\n+\tprintf(\"}},\\n\");\n+      }\n+  return 0;\n+}"}]}