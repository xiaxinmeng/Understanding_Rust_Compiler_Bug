{"sha": "8ece1ab347d8132732173a001a2bb8df1770de14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVjZTFhYjM0N2Q4MTMyNzMyMTczYTAwMWEyYmI4ZGYxNzcwZGUxNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-10-06T11:46:21Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-10-06T11:46:21Z"}, "message": "20001012-1.c: Fix defaulting to int.\n\n\t* gcc.dg/20001012-1.c: Fix defaulting to int.\n\t* gcc.dg/20001012-2.c: Likewise.\n\t* gcc.dg/20001108-1.c: Likewise.\n\t* gcc.dg/20010516-1.c: Likewise.\n\t* gcc.dg/20011008-2.c: Likewise.\n\t* gcc.dg/20030612-1.c: Likewise.\n\t* gcc.dg/20040219-1.c: Likewise.\n\t* gcc.dg/20050603-2.c: Likewise.\n\t* gcc.dg/20070507-1.c: Likewise.\n\t* gcc.dg/attr-alias-3.c: Likewise.\n\t* gcc.dg/fastmath-1.c: Likewise.\n\t* gcc.dg/fork-instrumentation.c: Likewise.\n\t* gcc.dg/fwrapv-1.c: Likewise.\n\t* gcc.dg/fwrapv-2.c: Likewise.\n\t* gcc.dg/memmove-1.c: Likewise.\n\t* gcc.dg/non-local-goto-1.c: Likewise.\n\t* gcc.dg/non-local-goto-2.c: Likewise.\n\t* gcc.dg/noreturn-8.c: Likewise.\n\t* gcc.dg/parse-decl-after-if.c: Likewise.\n\t* gcc.dg/parse-decl-after-label.c: Likewise.\n\t* gcc.dg/pr25795-1.c: Likewise.\n\t* gcc.dg/pr25795.c: Likewise.\n\t* gcc.dg/pr28574.c: Likewise.\n\t* gcc.dg/pr30189.c: Likewise.\n\t* gcc.dg/pr31529-2.c: Likewise.\n\t* gcc.dg/pr33923.c: Likewise.\n\t* gcc.dg/pr34263.c: Likewise.\n\t* gcc.dg/pr36194.c: Likewise.\n\t* gcc.dg/pr45415.c: Likewise.\n\t* gcc.dg/pr47443.c: Likewise.\n\t* gcc.dg/pr47763.c: Likewise.\n\t* gcc.dg/pr49000.c: Likewise.\n\t* gcc.dg/pr50340.c: Likewise.\n\t* gcc.dg/webizer.c: Likewise.\n\t* gcc.dg/pr59940.c: Likewise.\n\t* gcc.dg/pr63186.c: Likewise.\n\t* gcc.dg/simulate-thread/atomic-load-int.c: Likewise.\n\t* gcc.dg/simulate-thread/atomic-load-int128.c: Likewise.\n\t* gcc.dg/simulate-thread/atomic-load-longlong.c: Likewise.\n\t* gcc.dg/simulate-thread/atomic-load-short.c: Likewise.\n\t* gcc.dg/simulate-thread/atomic-other-int.c: Likewise.\n\t* gcc.dg/sms-1.c: Likewise.\n\t* gcc.dg/unused-3.c: Likewise.\n\t* gcc.dg/varpool-1.c: Likewise.\n\t* gcc.dg/pr35899.c: Use -std=gnu89.\n\t* gcc.dg/pr59963-1.c: Likewise.\n\t* gcc.dg/redecl-15.c: Likewise.\n\t* gcc.dg/20041213-1.c: Likewise.\n\t* gcc.dg/20080820.c: Likewise.\n\t* gcc.dg/920413-1.c: Likewise.\n\t* gcc.dg/Wold-style-definition-1.c: Likewise.\n\t* gcc.dg/Wmissing-parameter-type-no.c: Likewise.\n\t* gcc.dg/decl-nospec-1.c: Likewise.\n\t* gcc.dg/decl-nospec-2.c: Likewise.\n\t* gcc.dg/decl-nospec-3.c: Likewise.\n\t* gcc.dg/bitfld-1.c: Likewise.\n\t* gcc.dg/bitfld-9.c: Likewise.\n\t* gcc.dg/parm-impl-decl-1.c: Likewise.\n\t* gcc.dg/parm-impl-decl-3.c: Likewise.\n\t* gcc.dg/pr18596-1.c: Likewise.\n\t* gcc.dg/pr18596-2.c: Likewise.\n\t* gcc.dg/pr18596-3.c: Likewise.\n\t* gcc.dg/pr60139.c: Likewise.\n\t* gcc.dg/utf-dflt.c: Likewise.\n\t* gcc.dg/utf-dflt2.c: Likewise.\n\t* gcc.dg/wtr-func-def-1.c: Likewise.\n\t* gcc.dg/declspec-5.c: Likewise.\n\t* gcc.dg/declspec-6.c: Likewise.\n\t* gcc.dg/ftrapv-2.c: Likewise.\n\t* gcc.dg/20020430-1.c: Fix implicit declarations.\n\t* gcc.dg/20030702-1.c: Likewise.\n\t* gcc.dg/20040127-2.c: Likewise.\n\t* gcc.dg/20041122-1.c: Likewise.\n\t* gcc.dg/20050309-1.c: Likewise.\n\t* gcc.dg/20061026.c: Likewise.\n\t* gcc.dg/20101010-1.c: Likewise.\n\t* gcc.dg/Werror-1.c: Likewise.\n\t* gcc.dg/Werror-10.c: Likewise.\n\t* gcc.dg/Werror-11.c: Likewise.\n\t* gcc.dg/Werror-12.c: Likewise.\n\t* gcc.dg/Werror-2.c: Likewise.\n\t* gcc.dg/Werror-3.c: Likewise.\n\t* gcc.dg/Werror-4.c: Likewise.\n\t* gcc.dg/Werror-5.c: Likewise.\n\t* gcc.dg/Werror-6.c: Likewise.\n\t* gcc.dg/Werror-7.c: Likewise.\n\t* gcc.dg/Werror-8.c: Likewise.\n\t* gcc.dg/Wstrict-overflow-20.c: Likewise.\n\t* gcc.dg/cpp/trad/macroargs.c: Likewise.\n\t* gcc.dg/delay-slot-2.c: Likewise.\n\t* gcc.dg/errno-1.c: Likewise.\n\t* gcc.dg/globalalias.c: Likewise.\n\t* gcc.dg/inline-3.c: Likewise.\n\t* gcc.dg/localalias.c: Likewise.\n\t* gcc.dg/pr19633-1.c: Likewise.\n\t* gcc.dg/pr19633.c: Likewise.\n\t* gcc.dg/pr23408.c: Likewise.\n\t* gcc.dg/pr23470-1.c: Likewise.\n\t* gcc.dg/pr28121.c: Likewise.\n\t* gcc.dg/pr28243.c: Likewise.\n\t* gcc.dg/pr30260.c: Likewise.\n\t* gcc.dg/pr32573.c: Likewise.\n\t* gcc.dg/pr33826.c: Likewise.\n\t* gcc.dg/pr35065.c: Likewise.\n\t* gcc.dg/pr38616.c: Likewise.\n\t* gcc.dg/pr39867.c: Likewise.\n\t* gcc.dg/pr41470.c: Likewise.\n\t* gcc.dg/pr41837.c: Likewise.\n\t* gcc.dg/pr44024.c: Likewise.\n\t* gcc.dg/pr44699.c: Likewise.\n\t* gcc.dg/pr46252.c: Likewise.\n\t* gcc.dg/pr46878-1.c: Likewise.\n\t* gcc.dg/pr50908-3.c: Likewise.\n\t* gcc.dg/pr51796.c: Likewise.\n\t* gcc.dg/pr55150-2.c: Likewise.\n\t* gcc.dg/pr55833.c: Likewise.\n\t* gcc.dg/pr59350.c: Likewise.\n\t* gcc.dg/pr59418.c: Likewise.\n\t* gcc.dg/pr60647-2.c: Likewise.\n\t* gcc.dg/uninit-suppress.c: Likewise.\n\t* gcc.dg/uninit-suppress_2.c: Likewise.\n\t* gcc.dg/20030805-1.c: Use -fgnu89-inline.\n\t* gcc.dg/always_inline.c: Likewise.\n\t* gcc.dg/always_inline2.c: Likewise.\n\t* gcc.dg/always_inline3.c: Likewise.\n\t* gcc.dg/builtin-apply4.c: Likewise.\n\t* gcc.dg/declspec-7.c: Likewise.\n\t* gcc.dg/inline-1.c: Likewise.\n\t* gcc.dg/va-arg-pack-1.c: Likewise.\n\t* gcc.dg/winline-2.c: Likewise.\n\t* gcc.dg/winline-3.c: Likewise.\n\t* gcc.dg/winline-5.c: Likewise.\n\t* gcc.dg/winline-6.c: Likewise.\n\t* gcc.dg/winline-7.c: Likewise.\n\t* gcc.dg/funcorder.c: Fix implicit declarations.  Fix defaulting to\n\tint. \n\t* gcc.dg/inline-33.c: Likewise.\n\t* gcc.dg/pr27861-1.c: Likewise.\n\t* gcc.dg/pr28888.c: Likewise.\n\t* gcc.dg/pr29254.c: Likewise.\n\t* gcc.dg/pr50908.c: Likewise.\n\t* gcc.dg/pr60647-1.c: Likewise.\n\t* gcc.dg/pragma-diag-1.c: Likewise.\n\t* gcc.dg/pr31529-1.c: Use -fgnu89-inline.  Fix defaulting to int.\n\t* gcc.dg/winline-9.c: Likewise.\n\t* gcc.dg/pr52808.c: Return 0 instead of nothing.\n\nFrom-SVN: r215925", "tree": {"sha": "6b5a7e7d388d91cceaa76372aa2148e2985d8763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b5a7e7d388d91cceaa76372aa2148e2985d8763"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ece1ab347d8132732173a001a2bb8df1770de14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ece1ab347d8132732173a001a2bb8df1770de14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ece1ab347d8132732173a001a2bb8df1770de14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ece1ab347d8132732173a001a2bb8df1770de14/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f347158d66c7271e62fa6d3885e1f66ed584bbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f347158d66c7271e62fa6d3885e1f66ed584bbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f347158d66c7271e62fa6d3885e1f66ed584bbe"}], "stats": {"total": 428, "additions": 367, "deletions": 61}, "files": [{"sha": "878d44d2153a6aaa9074158dc8b7fadad94bac01", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,3 +1,152 @@\n+2014-10-06  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/20001012-1.c: Fix defaulting to int.\n+\t* gcc.dg/20001012-2.c: Likewise.\n+\t* gcc.dg/20001108-1.c: Likewise.\n+\t* gcc.dg/20010516-1.c: Likewise.\n+\t* gcc.dg/20011008-2.c: Likewise.\n+\t* gcc.dg/20030612-1.c: Likewise.\n+\t* gcc.dg/20040219-1.c: Likewise.\n+\t* gcc.dg/20050603-2.c: Likewise.\n+\t* gcc.dg/20070507-1.c: Likewise.\n+\t* gcc.dg/attr-alias-3.c: Likewise.\n+\t* gcc.dg/fastmath-1.c: Likewise.\n+\t* gcc.dg/fork-instrumentation.c: Likewise.\n+\t* gcc.dg/fwrapv-1.c: Likewise.\n+\t* gcc.dg/fwrapv-2.c: Likewise.\n+\t* gcc.dg/memmove-1.c: Likewise.\n+\t* gcc.dg/non-local-goto-1.c: Likewise.\n+\t* gcc.dg/non-local-goto-2.c: Likewise.\n+\t* gcc.dg/noreturn-8.c: Likewise.\n+\t* gcc.dg/parse-decl-after-if.c: Likewise.\n+\t* gcc.dg/parse-decl-after-label.c: Likewise.\n+\t* gcc.dg/pr25795-1.c: Likewise.\n+\t* gcc.dg/pr25795.c: Likewise.\n+\t* gcc.dg/pr28574.c: Likewise.\n+\t* gcc.dg/pr30189.c: Likewise.\n+\t* gcc.dg/pr31529-2.c: Likewise.\n+\t* gcc.dg/pr33923.c: Likewise.\n+\t* gcc.dg/pr34263.c: Likewise.\n+\t* gcc.dg/pr36194.c: Likewise.\n+\t* gcc.dg/pr45415.c: Likewise.\n+\t* gcc.dg/pr47443.c: Likewise.\n+\t* gcc.dg/pr47763.c: Likewise.\n+\t* gcc.dg/pr49000.c: Likewise.\n+\t* gcc.dg/pr50340.c: Likewise.\n+\t* gcc.dg/webizer.c: Likewise.\n+\t* gcc.dg/pr59940.c: Likewise.\n+\t* gcc.dg/pr63186.c: Likewise.\n+\t* gcc.dg/simulate-thread/atomic-load-int.c: Likewise.\n+\t* gcc.dg/simulate-thread/atomic-load-int128.c: Likewise.\n+\t* gcc.dg/simulate-thread/atomic-load-longlong.c: Likewise.\n+\t* gcc.dg/simulate-thread/atomic-load-short.c: Likewise.\n+\t* gcc.dg/simulate-thread/atomic-other-int.c: Likewise.\n+\t* gcc.dg/sms-1.c: Likewise.\n+\t* gcc.dg/unused-3.c: Likewise.\n+\t* gcc.dg/varpool-1.c: Likewise.\n+\t* gcc.dg/pr35899.c: Use -std=gnu89.\n+\t* gcc.dg/pr59963-1.c: Likewise.\n+\t* gcc.dg/redecl-15.c: Likewise.\n+\t* gcc.dg/20041213-1.c: Likewise.\n+\t* gcc.dg/20080820.c: Likewise.\n+\t* gcc.dg/920413-1.c: Likewise.\n+\t* gcc.dg/Wold-style-definition-1.c: Likewise.\n+\t* gcc.dg/Wmissing-parameter-type-no.c: Likewise.\n+\t* gcc.dg/decl-nospec-1.c: Likewise.\n+\t* gcc.dg/decl-nospec-2.c: Likewise.\n+\t* gcc.dg/decl-nospec-3.c: Likewise.\n+\t* gcc.dg/bitfld-1.c: Likewise.\n+\t* gcc.dg/bitfld-9.c: Likewise.\n+\t* gcc.dg/parm-impl-decl-1.c: Likewise.\n+\t* gcc.dg/parm-impl-decl-3.c: Likewise.\n+\t* gcc.dg/pr18596-1.c: Likewise.\n+\t* gcc.dg/pr18596-2.c: Likewise.\n+\t* gcc.dg/pr18596-3.c: Likewise.\n+\t* gcc.dg/pr60139.c: Likewise.\n+\t* gcc.dg/utf-dflt.c: Likewise.\n+\t* gcc.dg/utf-dflt2.c: Likewise.\n+\t* gcc.dg/wtr-func-def-1.c: Likewise.\n+\t* gcc.dg/declspec-5.c: Likewise.\n+\t* gcc.dg/declspec-6.c: Likewise.\n+\t* gcc.dg/ftrapv-2.c: Likewise.\n+\t* gcc.dg/20020430-1.c: Fix implicit declarations.\n+\t* gcc.dg/20030702-1.c: Likewise.\n+\t* gcc.dg/20040127-2.c: Likewise.\n+\t* gcc.dg/20041122-1.c: Likewise.\n+\t* gcc.dg/20050309-1.c: Likewise.\n+\t* gcc.dg/20061026.c: Likewise.\n+\t* gcc.dg/20101010-1.c: Likewise.\n+\t* gcc.dg/Werror-1.c: Likewise.\n+\t* gcc.dg/Werror-10.c: Likewise.\n+\t* gcc.dg/Werror-11.c: Likewise.\n+\t* gcc.dg/Werror-12.c: Likewise.\n+\t* gcc.dg/Werror-2.c: Likewise.\n+\t* gcc.dg/Werror-3.c: Likewise.\n+\t* gcc.dg/Werror-4.c: Likewise.\n+\t* gcc.dg/Werror-5.c: Likewise.\n+\t* gcc.dg/Werror-6.c: Likewise.\n+\t* gcc.dg/Werror-7.c: Likewise.\n+\t* gcc.dg/Werror-8.c: Likewise.\n+\t* gcc.dg/Wstrict-overflow-20.c: Likewise.\n+\t* gcc.dg/cpp/trad/macroargs.c: Likewise.\n+\t* gcc.dg/delay-slot-2.c: Likewise.\n+\t* gcc.dg/errno-1.c: Likewise.\n+\t* gcc.dg/globalalias.c: Likewise.\n+\t* gcc.dg/inline-3.c: Likewise.\n+\t* gcc.dg/localalias.c: Likewise.\n+\t* gcc.dg/pr19633-1.c: Likewise.\n+\t* gcc.dg/pr19633.c: Likewise.\n+\t* gcc.dg/pr23408.c: Likewise.\n+\t* gcc.dg/pr23470-1.c: Likewise.\n+\t* gcc.dg/pr28121.c: Likewise.\n+\t* gcc.dg/pr28243.c: Likewise.\n+\t* gcc.dg/pr30260.c: Likewise.\n+\t* gcc.dg/pr32573.c: Likewise.\n+\t* gcc.dg/pr33826.c: Likewise.\n+\t* gcc.dg/pr35065.c: Likewise.\n+\t* gcc.dg/pr38616.c: Likewise.\n+\t* gcc.dg/pr39867.c: Likewise.\n+\t* gcc.dg/pr41470.c: Likewise.\n+\t* gcc.dg/pr41837.c: Likewise.\n+\t* gcc.dg/pr44024.c: Likewise.\n+\t* gcc.dg/pr44699.c: Likewise.\n+\t* gcc.dg/pr46252.c: Likewise.\n+\t* gcc.dg/pr46878-1.c: Likewise.\n+\t* gcc.dg/pr50908-3.c: Likewise.\n+\t* gcc.dg/pr51796.c: Likewise.\n+\t* gcc.dg/pr55150-2.c: Likewise.\n+\t* gcc.dg/pr55833.c: Likewise.\n+\t* gcc.dg/pr59350.c: Likewise.\n+\t* gcc.dg/pr59418.c: Likewise.\n+\t* gcc.dg/pr60647-2.c: Likewise.\n+\t* gcc.dg/uninit-suppress.c: Likewise.\n+\t* gcc.dg/uninit-suppress_2.c: Likewise.\n+\t* gcc.dg/20030805-1.c: Use -fgnu89-inline.\n+\t* gcc.dg/always_inline.c: Likewise.\n+\t* gcc.dg/always_inline2.c: Likewise.\n+\t* gcc.dg/always_inline3.c: Likewise.\n+\t* gcc.dg/builtin-apply4.c: Likewise.\n+\t* gcc.dg/declspec-7.c: Likewise.\n+\t* gcc.dg/inline-1.c: Likewise.\n+\t* gcc.dg/va-arg-pack-1.c: Likewise.\n+\t* gcc.dg/winline-2.c: Likewise.\n+\t* gcc.dg/winline-3.c: Likewise.\n+\t* gcc.dg/winline-5.c: Likewise.\n+\t* gcc.dg/winline-6.c: Likewise.\n+\t* gcc.dg/winline-7.c: Likewise.\n+\t* gcc.dg/funcorder.c: Fix implicit declarations.  Fix defaulting to\n+\tint. \n+\t* gcc.dg/inline-33.c: Likewise.\n+\t* gcc.dg/pr27861-1.c: Likewise.\n+\t* gcc.dg/pr28888.c: Likewise.\n+\t* gcc.dg/pr29254.c: Likewise.\n+\t* gcc.dg/pr50908.c: Likewise.\n+\t* gcc.dg/pr60647-1.c: Likewise.\n+\t* gcc.dg/pragma-diag-1.c: Likewise.\n+\t* gcc.dg/pr31529-1.c: Use -fgnu89-inline.  Fix defaulting to int.\n+\t* gcc.dg/winline-9.c: Likewise.\n+\t* gcc.dg/pr52808.c: Return 0 instead of nothing.\n+\n 2014-10-06  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/ipa/inline-2.c: Fix implicit declarations."}, {"sha": "c59169b2749fb57669598929aa546ad1866d4f76", "filename": "gcc/testsuite/gcc.dg/20001012-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20001012-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20001012-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001012-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -10,6 +10,7 @@ foo (void)\n   return (__extension__ ((union { unsigned __l __attribute__((__mode__(__SI__))); float __d; }) { __l: 0x3f800000UL }).__d);\n }\n \n+int\n main ()\n {\n   if (foo() != 1.0)"}, {"sha": "629ae1b3773900a2502e551ce53acf12be9c9e8d", "filename": "gcc/testsuite/gcc.dg/20001012-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20001012-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20001012-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001012-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -28,6 +28,7 @@ double baz (const char *x)\n   return (__extension__ ((union { unsigned __l __attribute__((__mode__(__SI__))); float __d; }) { __l: 0x3f800000UL }).__d);\n }\n \n+int\n main ()\n {\n   if (baz(\"\") != 1.0)"}, {"sha": "1fc3e98e1d8892e93324964a6ba972154fcd128c", "filename": "gcc/testsuite/gcc.dg/20001108-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20001108-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20001108-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001108-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -25,6 +25,7 @@ long bar (long i, double x)\n   return foo (x);\n }\n \n+int\n main()\n {\n   if (bar (0, 2.0) != 26)"}, {"sha": "fbafe98e49d87e06b5838f6e973152c62702ad47", "filename": "gcc/testsuite/gcc.dg/20010516-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20010516-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20010516-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20010516-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,6 @@\n /* { dg-options \"-fshow-column\" } */\n \n+void\n foo()\n {\n       char d;"}, {"sha": "0ea0229ba540968a90198415a2aa21146b9676f5", "filename": "gcc/testsuite/gcc.dg/20011008-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20011008-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20011008-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20011008-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -7,6 +7,7 @@ extern void exit (int);\n struct { union {int x; int y;}; int q; } b;\n union { struct {int x;}; int q; } e;\n \n+int\n main()\n {\n   b.y = 10;"}, {"sha": "63915a24b1792c302d86f80fec2cf9bc581820d2", "filename": "gcc/testsuite/gcc.dg/20020430-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20020430-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20020430-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020430-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -105,6 +105,11 @@ typedef struct _RectObjRec {\n typedef struct _RectObjRec *RectObj;\n \n SmeObject DoGetEventEntry();\n+int XtWidgetToApplicationContext();\n+void XtAppError();\n+void Unhighlight();\n+void XtMoveWidget();\n+void XWarpPointer();\n \n SmeObject\n GetEventEntry(Widget w, XEvent *event)"}, {"sha": "00db20a22b093dafaf40decf1f50e7cbf6b61e3c", "filename": "gcc/testsuite/gcc.dg/20030612-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20030612-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20030612-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030612-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -14,6 +14,7 @@ void foo()\n   });\n }\n \n+int\n main()\n {\n   B = 5;"}, {"sha": "1516a5a471d9e84f7588232df9cd1c77a7be6350", "filename": "gcc/testsuite/gcc.dg/20030702-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20030702-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20030702-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030702-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,6 +4,8 @@\n /* { dg-options \"-O2 -fpic -fprofile-arcs\" } */\n /* { dg-skip-if \"requires unsupported run-time relocation\" { spu-*-* } { \"*\" } { \"\" } } */\n \n+int fork (void);\n+\n void test (void)\n {\n   fork ();"}, {"sha": "286b922ea0040bddde80c421ed226300f42f7506", "filename": "gcc/testsuite/gcc.dg/20030805-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20030805-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20030805-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030805-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,7 +1,7 @@\n /* Test that gcc understands that the call to g might clobber i.  */\n \n /* { dg-do run } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fgnu89-inline\" } */\n \n __inline int f ()\n {"}, {"sha": "ec7622607873cdfa557f92c525019207867abc6d", "filename": "gcc/testsuite/gcc.dg/20040127-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040127-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -8,6 +8,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O\" } */\n \n+void Get16u();\n typedef struct { int ThumbnailSize; } ImageInfo_t;\n \n double ConvertAnyFormat(void)"}, {"sha": "1c9254a9801979d8766c5f8f350dee28c9726727", "filename": "gcc/testsuite/gcc.dg/20040219-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20040219-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20040219-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040219-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -14,6 +14,7 @@ double foo(double a, double b, double c)\n \treturn (a+b+c);\n }\n \n+int\n main ()\n {\n \tdouble  f1, f2, f3, f4, f5, f6, f7, f8, f9,f10;"}, {"sha": "b2120f815456b5724d1bc5d066e358e52fa9b66d", "filename": "gcc/testsuite/gcc.dg/20041122-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20041122-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20041122-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20041122-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,8 @@\n /* PR rtl-optimization/18611 */\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fmove-loop-invariants\" } */\n+\n+void dumpCineonChannelInfo ();\n typedef struct {\n \tint channels_per_image;\n \tint channel[8];"}, {"sha": "490b6bc187ea42d1cc49835069ecc1585035a653", "filename": "gcc/testsuite/gcc.dg/20041213-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20041213-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20041213-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20041213-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fshow-column\" } */\n+/* { dg-options \"-fshow-column -std=gnu89\" } */\n /* test redeclarations with void and implicit int */\n extern foo1(); /* { dg-message \"8:note: previous declaration\" } */\n extern void foo1(); /* { dg-error \"13:conflicting types\" } */"}, {"sha": "46b27f82e29c67751776e0a0ee7084704791eb14", "filename": "gcc/testsuite/gcc.dg/20050309-1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20050309-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20050309-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050309-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,10 @@\n /* { dg-require-profiling \"-fprofile-generate\" } */\n /* { dg-options \"-O2 -fprofile-generate\" } */\n \n+void lookup ();\n+int hash ();\n+void error ();\n+\n char *\n test(char *ret, int *counter, void *schema,\n      const char* name, const char *namespace,"}, {"sha": "8c8e58e1b4d60a363b33bdbb6284a01c5f83fbea", "filename": "gcc/testsuite/gcc.dg/20050603-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20050603-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20050603-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050603-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -12,6 +12,8 @@ void set (struct s*, int) __attribute__((noinline));\n void set (struct s* p, int flags) {\n   p->g = flags << 1;\n }\n+\n+int\n main() {\n   struct s foo = {0 , 0, 3, 0};\n   set (&foo, -1);"}, {"sha": "741ea2eb3b860b83ed06941a5bba32b1fb3857bc", "filename": "gcc/testsuite/gcc.dg/20061026.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20061026.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20061026.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20061026.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -6,6 +6,8 @@\n    large for a 16bit constant and therefore should reserve the literal\n    pool base pointer.  */\n \n+void g ();\n+\n int f () {\n   char a[32608];\n "}, {"sha": "684002f6f911e66223c224341c895d36140849ef", "filename": "gcc/testsuite/gcc.dg/20070507-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20070507-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20070507-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20070507-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -36,7 +36,7 @@ int __attribute__((noinline)) foo (char *p_str1)\n \n int __attribute__((noinline)) loop_next (int *p_table, char *p_table_head)\n {\n-  static loop_next = 0;\n+  static int loop_next = 0;\n \n   if (loop_next == 1)\n     return 1;"}, {"sha": "badab9a79796550b59992feacbad2ba524953e2d", "filename": "gcc/testsuite/gcc.dg/20080820.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20080820.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20080820.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20080820.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fshow-column -fms-extensions -pedantic\" } */\n+/* { dg-options \"-fshow-column -fms-extensions -pedantic -std=gnu89\" } */\n \n struct { struct a { int x; }; int bar; } hot; /* { dg-warning \"29:ISO C90 doesn't support unnamed\" } */"}, {"sha": "cd8fddf62d29f55b2397dee2792d5da69aee7a6c", "filename": "gcc/testsuite/gcc.dg/20101010-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20101010-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F20101010-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20101010-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fno-crossjumping\" } */\n \n+int bar1 ();\n+int bar2 ();\n+\n int foo (void)\n {\n   int len;"}, {"sha": "c2699fe33b1190482daf5f5e293871c324f3262c", "filename": "gcc/testsuite/gcc.dg/920413-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F920413-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2F920413-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F920413-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Wtraditional\" } */\n+/* { dg-options \"-Wtraditional -std=gnu89\" } */\n \n int\n x (b)"}, {"sha": "88553e7a158d9c1c32a04e313fbeeef3b759611b", "filename": "gcc/testsuite/gcc.dg/Werror-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -9,6 +9,7 @@\n \n #pragma GCC diagnostic error \"-Waddress\"\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-error \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "c5b2b4bfc6a10b54b236f2e21c0c31c155f550da", "filename": "gcc/testsuite/gcc.dg/Werror-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-10.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -6,6 +6,7 @@\n \n #pragma GCC diagnostic error \"-Waddress\"\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-error \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "6e44219f6e418ae9247d4aace0ed39ed11530feb", "filename": "gcc/testsuite/gcc.dg/Werror-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-11.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -6,6 +6,7 @@\n \n #pragma GCC diagnostic warning \"-Waddress\"\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-error \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "a87bf6977ad2f3529f65166a6d4cb5e95b5f0c91", "filename": "gcc/testsuite/gcc.dg/Werror-12.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-12.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@\n \n #pragma GCC diagnostic ignored \"-Waddress\"\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-warning \"attribute directive ignored\" } */\n \n int i;"}, {"sha": "32a7b331ae634eba990102a363e1b161bfbe44e8", "filename": "gcc/testsuite/gcc.dg/Werror-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,6 +4,7 @@\n /* This one is the baseline.  Make sure with no option we get no\n    warnings.  */\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-warning \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "76e0680cb59d27cd60e6dba120b622bf19cf41aa", "filename": "gcc/testsuite/gcc.dg/Werror-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,7 @@\n \n /* Make sure the command line option enables the warning.  */\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-warning \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "85505230b6c2d92fed40f73bd1c74caf8ded0cee", "filename": "gcc/testsuite/gcc.dg/Werror-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-4.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@\n \n #pragma GCC diagnostic error \"-Waddress\"\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-warning \"attribute directive ignored\" } */\n \n int i;"}, {"sha": "8e901936698f0b97825416d03d27f38d77355754", "filename": "gcc/testsuite/gcc.dg/Werror-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-5.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,6 +4,7 @@\n \n /* Make sure -Werror turns warnings in to errors.  */\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-error \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "0818ae329176cb9a7d4eb03af9f2c9e62e57af30", "filename": "gcc/testsuite/gcc.dg/Werror-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-6.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,7 @@\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n /* Make sure -Werror=foo emits an error and not a warning */\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-warning \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "ce28cdc78b6ae3bf543f2a02b660ef7536dadbd1", "filename": "gcc/testsuite/gcc.dg/Werror-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-7.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,6 +4,7 @@\n \n /* Make sure -Wno-error= overrides -Werror.  */\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-error \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "9698593a2fe7ddae42bdc9c66d8bf85101b9b68b", "filename": "gcc/testsuite/gcc.dg/Werror-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWerror-8.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@\n \n #pragma GCC diagnostic warning \"-Waddress\"\n \n+void grill ();\n void __attribute__((dj)) bar() { }\t/* { dg-warning \".* attribute directive ignored\" } */\n \n int i;"}, {"sha": "45e5e42c0daa4fa0729ac6ac78b3abb23648e16b", "filename": "gcc/testsuite/gcc.dg/Wmissing-parameter-type-no.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWmissing-parameter-type-no.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWmissing-parameter-type-no.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWmissing-parameter-type-no.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,6 @@\n /* Test that we can disable -Wmissing-parameter-type */\n /* { dg-do compile } */\n-/* { dg-options \"-Wall -Wextra -Wno-missing-parameter-type\" } */\n+/* { dg-options \"-Wall -Wextra -Wno-missing-parameter-type -std=gnu89\" } */\n \n int foo(bar) { return bar;} /* { dg-bogus \"type of 'bar' defaults to 'int'\" } */\n "}, {"sha": "01d3ffbea7575192093d2195c22d9704f107b385", "filename": "gcc/testsuite/gcc.dg/Wold-style-definition-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWold-style-definition-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWold-style-definition-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWold-style-definition-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n \n /* Origin: Andreas Jaeger <aj@suse.de> */\n /* { dg-do compile } */\n-/* { dg-options \"-Wold-style-definition\" } */\n+/* { dg-options \"-Wold-style-definition -std=gnu89\" } */\n \n void\n bar (a) int a; { } /* { dg-warning \"old-style function definition\" } */"}, {"sha": "ae2db93c6127d1de863f835b273cce98eb5dda38", "filename": "gcc/testsuite/gcc.dg/Wstrict-overflow-20.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstrict-overflow-20.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,6 +4,8 @@\n /* Don't warn about an overflow in a copied loop header.  We used to\n    get a warning in value numbering.  This is PR 33565.  */\n \n+void do_something ();\n+\n void f (int m, int n)\n {\n   int j;"}, {"sha": "8603bc6e38aeec63cce7a57b0e4638eddd133477", "filename": "gcc/testsuite/gcc.dg/always_inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fgnu89-inline\" } */\n #include <stdarg.h>\n inline __attribute__ ((always_inline)) void\n e(int t, ...) /* { dg-error \"variable argument lists\" } */"}, {"sha": "297159b6d668b6fea115ff506913fb143f1253dd", "filename": "gcc/testsuite/gcc.dg/always_inline2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fgnu89-inline\" } */\n inline __attribute__ ((always_inline)) void t(void); /* { dg-error \"body not available\" } */\n void\n q(void)"}, {"sha": "5d55e4d7e1830156da39fbd6b8c08cb83aaa8d47", "filename": "gcc/testsuite/gcc.dg/always_inline3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falways_inline3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fgnu89-inline\" } */\n int do_something_evil (void);\n inline __attribute__ ((always_inline)) void\n q2(void) /* { dg-error \"recursive inlining\" } */"}, {"sha": "4c6f390c7903ba2c7bbef4a130f3cffd08eb7500", "filename": "gcc/testsuite/gcc.dg/attr-alias-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alias-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alias-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-alias-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -51,6 +51,7 @@ static void lf4(void) {}\n extern ftype Af4a __attribute__((alias (\"lf4\")));\n static ftype *pf4a = &Af4a;\n \n+int\n main() {\n #ifdef __mips\n   /* Use real asm for MIPS, to stop the assembler warning about"}, {"sha": "2493670e21be609aad9296367d9fcba7bf5bc58f", "filename": "gcc/testsuite/gcc.dg/bitfld-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,7 +5,7 @@\n    Source: Neil Booth, 26 Jan 2002.\n */\n \n-/* { dg-options -pedantic } */\n+/* { dg-options \"-pedantic -std=gnu89\" } */\n \n enum foo {e1 = 0, e2, e3, e4, e5};\n "}, {"sha": "c580e15ac500ad6131919c15b0d36e1930d5dfd8", "filename": "gcc/testsuite/gcc.dg/bitfld-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-9.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,7 +1,7 @@\n /* Test -funsigned-bitfields works.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do run } */\n-/* { dg-options \"-funsigned-bitfields -fsigned-char\" } */\n+/* { dg-options \"-funsigned-bitfields -fsigned-char -std=gnu89\" } */\n \n typedef char c;\n typedef signed char sc;"}, {"sha": "c2cedfb8a6f94fdd4302f5b3a3cd898273cd27ef", "filename": "gcc/testsuite/gcc.dg/builtin-apply4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* PR tree-optimization/20076 */\n-/* { dg-options \"-O2 -Wmissing-noreturn\" } */\n+/* { dg-options \"-O2 -Wmissing-noreturn -fgnu89-inline\" } */\n /* { dg-options \"-O2 -mno-mmx\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-do run } */\n "}, {"sha": "9ecfa31dc147866949d7104609031151c68f5d7f", "filename": "gcc/testsuite/gcc.dg/cpp/trad/macroargs.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacroargs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacroargs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmacroargs.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -7,6 +7,7 @@\n #define g(x) x\n \n extern void abort (void);\n+extern int strcmp (const char *, const char *);\n \n void testquoting ()\n {"}, {"sha": "b7061c49f1eae229f78cd1ecb34894a581611c42", "filename": "gcc/testsuite/gcc.dg/decl-nospec-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,6 @@\n    -pedantic.  Test with no options.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n foo(); /* { dg-warning \"data definition has no type or storage class\" } */"}, {"sha": "a4e90522073cdce7b067b4f54425cd0bf4dfed0e", "filename": "gcc/testsuite/gcc.dg/decl-nospec-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,6 @@\n    -pedantic.  Test with -pedantic.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"-pedantic\" } */\n+/* { dg-options \"-std=gnu89 -pedantic\" } */\n \n foo(); /* { dg-warning \"data definition has no type or storage class\" } */"}, {"sha": "f0347ca2484bba0be2e35aefb55f903ea94ce438", "filename": "gcc/testsuite/gcc.dg/decl-nospec-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-nospec-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,6 @@\n    -pedantic.  Test with -pedantic-errors.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"-pedantic-errors\" } */\n+/* { dg-options \"-std=gnu89 -pedantic-errors\" } */\n \n foo(); /* { dg-error \"data definition has no type or storage class\" } */"}, {"sha": "52b2433e26f3513198e0056038e1b1b541ddd5ef", "filename": "gcc/testsuite/gcc.dg/declspec-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-5.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n    -pedantic.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"-pedantic\" } */\n+/* { dg-options \"-std=gnu89 -pedantic\" } */\n \n /* If a declaration does not declare a declarator, it must declare a\n    tag or the members of an enumeration, and must only contain one"}, {"sha": "40b77be7f9630cdc4891c9436ed06b18e0a84cc5", "filename": "gcc/testsuite/gcc.dg/declspec-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-6.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n    -pedantic-errors.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"-pedantic-errors\" } */\n+/* { dg-options \"-std=gnu89 -pedantic-errors\" } */\n \n /* If a declaration does not declare a declarator, it must declare a\n    tag or the members of an enumeration, and must only contain one"}, {"sha": "10623e4ea77ed316a0111b4dfec8bae8a881775e", "filename": "gcc/testsuite/gcc.dg/declspec-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeclspec-7.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,7 +4,7 @@\n    gcc.dg/tls/diag-*.c.  */\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-fgnu89-inline\" } */\n \n /* Duplicate specifiers.  */\n "}, {"sha": "d8619aac95ded2cb7a4e37e8baea0715fcf4f0c1", "filename": "gcc/testsuite/gcc.dg/delay-slot-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdelay-slot-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fdelay-slot-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdelay-slot-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -6,6 +6,7 @@\n \n extern int printf (__const char *__restrict __format, ...);\n extern void print_c_condition (const char *);\n+extern void print_host_wide_int (long);\n \n enum decision_type\n {"}, {"sha": "46236ef5123aad8969f71f88bd877858d31566c5", "filename": "gcc/testsuite/gcc.dg/errno-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ferrno-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ferrno-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ferrno-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,6 +4,8 @@\n #include <errno.h>\n #include <stdlib.h>\n \n+void do_not_optimize_away ();\n+\n int main()\n {\n   void * volatile p;"}, {"sha": "ed4f37f1477ce4fed83eecb020848baa983c668e", "filename": "gcc/testsuite/gcc.dg/fastmath-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffastmath-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffastmath-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffastmath-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -9,6 +9,7 @@ if ( ( dists [ 0 ] > 0 ) == ( dists [ 1 ] > 0 ) )\n   return k;\n return 0;\n } \n+int\n main() {\n   float dists[16] = { 0., 1., 1., 0., 0., -1., -1., 0.,\n \t\t     1., 1., 1., -1., -1., 1., -1., -1. };"}, {"sha": "f875e18088283efba455bc09cea1480ab95c5809", "filename": "gcc/testsuite/gcc.dg/fork-instrumentation.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffork-instrumentation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffork-instrumentation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffork-instrumentation.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O0 -fprofile-generate\" } */\n int fork(void);\n+int\n t()\n {\n   fork ();"}, {"sha": "721bece43647fa67f18eade5b475386386b3d1f8", "filename": "gcc/testsuite/gcc.dg/ftrapv-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fftrapv-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -11,6 +11,7 @@\n /* { dg-require-effective-target trapping } */\n \n extern void abort(void);\n+extern int abs(int);\n extern long labs(long);\n \n int __attribute__((noinline))"}, {"sha": "9e4d8dedd8da551cc9978608ec72426c059b02e7", "filename": "gcc/testsuite/gcc.dg/funcorder.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffuncorder.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -4,15 +4,17 @@\n /*  In unit-at-time the functions should be assembled in order\n     e q t main, so we realize that they are pure.  */\n  \n+void link_error (void);\n static int mem;\n static int e(void) __attribute__ ((noinline));\n static int q(void) __attribute__ ((noinline));\n static int t(void) __attribute__ ((noinline));\n+int\n main()\n {\n \treturn t();\n }\n-static t()\n+static int t()\n {\n \tint r,e;\n \tif (mem)"}, {"sha": "a172b3b8fd7aea760ad9124332fb18ec8fb3e7aa", "filename": "gcc/testsuite/gcc.dg/fwrapv-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffwrapv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffwrapv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffwrapv-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -17,6 +17,7 @@ int test(int x)\n   return (2*x)/2;\n }\n \n+int\n main()\n {\n   int x = INT_MAX;"}, {"sha": "e260e545b52bb4a28ddac7c3b864e45066b65a51", "filename": "gcc/testsuite/gcc.dg/fwrapv-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffwrapv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Ffwrapv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffwrapv-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -17,6 +17,7 @@ int test(int x)\n   return (2*x)/2;\n }\n \n+int\n main()\n {\n   int x = INT_MAX;"}, {"sha": "fc6c7aabe6715b0354ba910da164644a8644f184", "filename": "gcc/testsuite/gcc.dg/globalalias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fglobalalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fglobalalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fglobalalias.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -11,6 +11,7 @@\n    { dg-additional-sources \"globalalias-2.c\" } */\n extern int test2count;\n extern void abort (void);\n+extern void tt ();\n int testcount;\n static\n void test(void)"}, {"sha": "06059b9553978f46eb2dc57cbdf1ff8fe531087e", "filename": "gcc/testsuite/gcc.dg/inline-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Finline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Finline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,6 @@\n /* Verify that DECL_INLINE gets copied between DECLs properly.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O1\" } */\n+/* { dg-options \"-O1 -fgnu89-inline\" } */\n /* { dg-final { if [ istarget hppa*-*-* ] { scan-assembler-not \"xyzzy?,%r\" } else { scan-assembler-not \"xyzzy\" } } } */\n \n /* Test that declaration followed by definition inlines.  */"}, {"sha": "8173ae9cfa73a6575ca03975f39d4a3aa1dd2848", "filename": "gcc/testsuite/gcc.dg/inline-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Finline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Finline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,7 @@\n /* { dg-options \"-O2 -funit-at-a-time\" } */\n /* { dg-final { scan-assembler-not \"big_function_2\" } } */\n+\n+int t(void);\n static void\n big_function_2(void);\n void"}, {"sha": "a05130e6cdea9762aa64b12e1c9917de6faaf6bc", "filename": "gcc/testsuite/gcc.dg/inline-33.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Finline-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Finline-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-33.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,7 +5,9 @@\n int i;\n \n int foo ();\n+int bar ();\n \n+int\n main ()\n {\n   return foo (i);"}, {"sha": "fb62066a2b4b5d36127673c8529f150852e1defb", "filename": "gcc/testsuite/gcc.dg/localalias.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Flocalalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Flocalalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flocalalias.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -11,6 +11,7 @@\n    { dg-require-alias \"\" }\n    { dg-additional-sources \"localalias-2.c\" } */\n extern void abort (void);\n+extern void tt (void);\n extern int test2count;\n int testcount;\n __attribute__ ((weak,noinline))"}, {"sha": "498cf60c598959dae32a7fd200d8955f3275e914", "filename": "gcc/testsuite/gcc.dg/memmove-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fmemmove-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fmemmove-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemmove-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -11,6 +11,7 @@ domem (void *dest, const void *src, int len)\n {\n \t__builtin_memmove (dest, src, len);\n }\n+int\n t()\n {\n \tdomem (b,a,100);"}, {"sha": "9c2e6cc09c02fa921c686079cd7be2dd234540da", "filename": "gcc/testsuite/gcc.dg/non-local-goto-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fnon-local-goto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fnon-local-goto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnon-local-goto-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,14 +5,14 @@ extern void abort (void);\n \n int global;\n \n-static foo(void) __attribute__((noinline));\n+static int foo(void) __attribute__((noinline));\n \n-static foo(void)\n+static int foo(void)\n {\n   global = 1;\n }\n \n-static bar(void)\n+static int bar(void)\n {\n   foo ();\n }"}, {"sha": "99fb1052e69038a4d0bd1071cfcde004394fbf3d", "filename": "gcc/testsuite/gcc.dg/non-local-goto-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fnon-local-goto-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fnon-local-goto-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnon-local-goto-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,14 +5,14 @@ extern void abort (void);\n \n int global;\n \n-static foo(void) __attribute__((noinline));\n+static int foo(void) __attribute__((noinline));\n \n-static foo(void)\n+static int foo(void)\n {\n   global = 1;\n }\n \n-static bar(void)\n+static int bar(void)\n {\n   foo ();\n   global = 0;"}, {"sha": "294800baa0660399e3a281a6e540613ab1fe4d5d", "filename": "gcc/testsuite/gcc.dg/noreturn-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-8.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n /* { dg-options \"-O2\" } */\n void exit (int);\n void noreturn_autodetection_failed ();\n-__attribute__ ((noinline))\n+__attribute__ ((noinline)) int\n detect_noreturn ()\n {\n   exit (0);"}, {"sha": "5c7ddb0a259b1ff40817af186b23e1c84fb86891", "filename": "gcc/testsuite/gcc.dg/parm-impl-decl-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n    function prototypes.  Bug 18239.  */\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n /* Implicit function declaration in attribute in definition (testcase\n    from bug).  */"}, {"sha": "904295258d71f7753911c6f1c9a8e3175215f341", "filename": "gcc/testsuite/gcc.dg/parm-impl-decl-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,7 +1,7 @@\n /* Like parm-impl-decl-1.c, but with -g.  PR 43381.  */\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n /* { dg-do compile } */\n-/* { dg-options \"-g\" } */\n+/* { dg-options \"-g -std=gnu89\" } */\n \n int\n foo (int __attribute__ ((__mode__ (vector_size(8)))) i) /* { dg-warning \"'__mode__' attribute ignored\" } */"}, {"sha": "09afa37b472d17cc622482c80517705229f5a811", "filename": "gcc/testsuite/gcc.dg/parse-decl-after-if.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparse-decl-after-if.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparse-decl-after-if.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparse-decl-after-if.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,7 +3,7 @@\n { dg-options \"-fsyntax-only\" }\n */\n \n-void f(x)\n+void f(int x)\n {\n   if (x > 1)\n     int ret = 1; /* { dg-error \"expected expression before 'int'\" } */"}, {"sha": "9c9886a108f9d7a32c3cc627fbd62fc04685ab9f", "filename": "gcc/testsuite/gcc.dg/parse-decl-after-label.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparse-decl-after-label.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fparse-decl-after-label.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparse-decl-after-label.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,7 +3,7 @@\n { dg-options \"-fsyntax-only\" }\n */\n \n-int f(x)\n+int f(int x)\n {\n   if (x > 1) \n     {"}, {"sha": "0d8d290dcb9ff7a0dd52afc05777cb06ac4ba37f", "filename": "gcc/testsuite/gcc.dg/pr18596-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fno-unit-at-a-time\" } */\n+/* { dg-options \"-fno-unit-at-a-time -std=gnu89\" } */\n \n int f(int i)\n {"}, {"sha": "9b50d01258604835035aa57d3a0849973ae2e9c2", "filename": "gcc/testsuite/gcc.dg/pr18596-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-funit-at-a-time\" } */\n+/* { dg-options \"-funit-at-a-time -std=gnu89\" } */\n \n int f(int i)\n {"}, {"sha": "c04312f0357317ed15f0db26c1fe2062fbfa3ea0", "filename": "gcc/testsuite/gcc.dg/pr18596-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18596-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n int foo ()\n {"}, {"sha": "53c3935126d88440db2548d07543e2059d45309e", "filename": "gcc/testsuite/gcc.dg/pr19633-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19633-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19633-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19633-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2\" } */\n \n extern void abort (void);\n+extern void link_error (void);\n \n struct S\n {"}, {"sha": "66a542a2192103005702daf9ffc80f965b561474", "filename": "gcc/testsuite/gcc.dg/pr19633.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19633.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19633.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr19633.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -12,6 +12,9 @@ struct T\n   struct S s;\n };\n \n+void link_error (void);\n+int bar (struct S, int);\n+\n void\n foo (int a, struct T b)\n {"}, {"sha": "b552e233604ddb16138b6b65ecee32486cb2687d", "filename": "gcc/testsuite/gcc.dg/pr23408.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23408.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23408.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23408.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,4 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"--param ggc-min-expand=0 --param ggc-min-heapsize=0\" } */\n+\n+int g ();\n static __inline__ int f () { return g (); }\n int g () { return f (); }"}, {"sha": "130a3dd3c972cce86b54dd1861adf63597bc8938", "filename": "gcc/testsuite/gcc.dg/pr23470-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23470-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23470-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23470-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ffast-math -fdump-tree-original\" } */\n \n+void link_error (void);\n+\n int f(double a, double b)\n {\n   if (((a*a) + (b*b))<0)"}, {"sha": "88cd88fc50106427aae8ae6edd3d8638658806c0", "filename": "gcc/testsuite/gcc.dg/pr25795-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25795-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25795-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25795-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@\n \n extern const char *mystr;       /* normally in a header */\n const char *mystr;\n+int\n main()\n {\n }"}, {"sha": "37ddc0bca95956a8c610854a6c34a70629f1c993", "filename": "gcc/testsuite/gcc.dg/pr25795.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25795.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25795.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25795.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@\n \n extern const char *mystr;       /* normally in a header */\n const char *mystr __attribute__ ((externally_visible));\n+int\n main()\n {\n }"}, {"sha": "8d6d791bcacc41e906a2b72ba83aeb5c3b645d12", "filename": "gcc/testsuite/gcc.dg/pr27861-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27861-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27861-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27861-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -52,6 +52,8 @@ struct sim_state\n   sim_cpu cpu[1];\n };\n typedef address_word instruction_address;\n+void trace_result_word1 ();\n+int\n do_dror (SIM_DESC sd, instruction_address cia, int MY_INDEX, unsigned64 x,\n \t unsigned64 y)\n {"}, {"sha": "9e306f5930a532c02712ce307156ad7b86b2b16c", "filename": "gcc/testsuite/gcc.dg/pr28121.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28121.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28121.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28121.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n+int GetMouseButton ();\n+int ParsePos ();\n+\n short\n GetCmd ()\n {"}, {"sha": "d09639989d86895c58940f722fd927c30879d39a", "filename": "gcc/testsuite/gcc.dg/pr28243.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28243.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28243.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28243.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -14,6 +14,8 @@ struct gpsdisplay {\n   struct displayfuncs *funcs;\n };\n \n+void PSDoArc ();\n+\n static void PSMyArc(double cx, double cy, double radx, double rady, double sa,\n \t\t    double ta)\n {"}, {"sha": "b86f7f6b68814cf0ca12a774641d8cbea3eaf912", "filename": "gcc/testsuite/gcc.dg/pr28574.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28574.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28574.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28574.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -71,4 +71,5 @@ yasm_list_modules(yasm_module_type type,\n     }\n }\n \n+int\n main() {}"}, {"sha": "3bad18b9fdf654ea27f1c72b9e7a7d575b53d246", "filename": "gcc/testsuite/gcc.dg/pr28888.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28888.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28888.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr28888.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,8 @@\n \n static const unsigned char _c30[] =\n   \"statistic of allocated integer registers:\";\n+void Out__LongInt ();\n+int\n Allocate__WriteStats (void)\n {\n   register int i0, i1, i2, i3, i4, i5;"}, {"sha": "df6ba574a5dbf68959545ab6617767f899e92c2a", "filename": "gcc/testsuite/gcc.dg/pr29254.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr29254.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr29254.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr29254.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,20 +1,25 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3 -Werror\" } */\n \n+int value_compare ();\n+\n+int\n list_compare (int * list1)\n {\n   if (list1)\n     value_compare ();\n }\n \n-func1 (int * f){}\n+int func1 (int * f){}\n \n+int\n value_compare (int * a)\n {\n     if (a)\n         list_compare (a);\n }\n \n+int\n func2 (const int * fb)\n {\n   func1 ((int *) fb); /* { dg-bogus \"discards qualifiers\" } */"}, {"sha": "2f332fb0c39b88c43b189b88d143495b62646dcd", "filename": "gcc/testsuite/gcc.dg/pr30189.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30189.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30189.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30189.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -12,7 +12,7 @@ void baz (int i)\n }\n \n void\n-bar (i)\n+bar (int i)\n {\n   baz (i);\n }"}, {"sha": "e04a8beb64201e78723b0ceaa4f3e12467f2ff67", "filename": "gcc/testsuite/gcc.dg/pr30260.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30260.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,8 @@\n /* { dg-options \"-pedantic -O\" } */\n #include <limits.h>\n \n+void link_error (void);\n+\n enum A {\n   A1 = 0, \n   A2 = A1 - 1"}, {"sha": "24d2cdbd83e75a52382b5e3a2bd42f64b7c0e99d", "filename": "gcc/testsuite/gcc.dg/pr31529-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31529-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31529-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31529-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,8 +1,9 @@\n /* { dg-do link } */\n /* { dg-require-effective-target lto } */\n-/* { dg-options \"-flto\" } */\n+/* { dg-options \"-flto -fgnu89-inline\" } */\n /* { dg-additional-sources \"pr31529-2.c\" } */\n \n+int\n getline ()\n {\n }"}, {"sha": "7f8c40f49e2f1c81a620a82d1ff4a07eaf0c9672", "filename": "gcc/testsuite/gcc.dg/pr31529-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31529-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31529-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr31529-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n \n extern __inline\n+int\n getline ()\n {\n }"}, {"sha": "190f5dbac691bd512661602eaf8c952bfa9458ad", "filename": "gcc/testsuite/gcc.dg/pr32573.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32573.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32573.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32573.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n+long long bar (void *);\n+\n int\n foo (void *x, long long *y)\n {"}, {"sha": "8d40d752f787f3c016919bebb14fef9efe1dc8f6", "filename": "gcc/testsuite/gcc.dg/pr33826.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33826.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,10 @@\n /* { dg-require-effective-target nonpic } */\n /* { dg-options \"-O1 -fdump-tree-local-pure-const1 -fdump-ipa-pure-const\" } */\n \n+int recurse1 (int);\n+int recurse2b (int);\n+int norecurse1b (int);\n+\n int recurese1 (int i)\n {\n   return recurse1 (i+1);"}, {"sha": "e933762b1b3eb0198bf1690bba2e2ace8dfd7ab5", "filename": "gcc/testsuite/gcc.dg/pr33923.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33923.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33923.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33923.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -12,6 +12,7 @@ typedef struct\n }\n ProtocolOperations;\n static const ProtocolOperations *protocol;\n+int\n brl_readCommand (void)\n {\n   unsigned long int keys;"}, {"sha": "57b8f8a1429edada6f5a75cb3a34bea367d843b6", "filename": "gcc/testsuite/gcc.dg/pr34263.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34263.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34263.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34263.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -14,6 +14,7 @@ int count = 0;\n void sub( struct s *p, struct s **pp );\n int look( struct s *p, struct s **pp );\n \n+int\n main()\n {\n     struct s *pp;"}, {"sha": "8b272f8ee8ddcb9efcd42b92b498b347b8c90057", "filename": "gcc/testsuite/gcc.dg/pr35065.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -97,6 +97,7 @@ static inline uint32_t bs_read1( bs_t *s ) {\n   return 0;\n }\n int Open ( vlc_object_t * );\n+int vlc_module_set ( module_t *, enum vlc_module_properties, void *);\n void Close( vlc_object_t * );\n __attribute__((visibility(\"default\"))) int vlc_entry__0_9_0f ( module_t *p_module ) {\n   {\n@@ -128,6 +129,7 @@ struct decoder_sys_t {\n };\n enum { NAL_SLICE = 1, NAL_SLICE_IDR = 5, NAL_SPS = 7, NAL_AU_DELIMITER= 9 };\n static block_t *ParseNALBlock( decoder_t *, block_t * );\n+int U16_AT ( uint8_t * );\n int Open( vlc_object_t *p_this ) {\n   decoder_t *p_dec = (decoder_t*)p_this;\n   decoder_sys_t *p_sys;"}, {"sha": "7bfb53f547706ac00f4f4fd3ad99be25056fc932", "filename": "gcc/testsuite/gcc.dg/pr35899.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35899.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35899.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35899.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/35899 */\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-std=gnu89 -O2\" } */\n \n int\n foo (void)"}, {"sha": "ae660e4d5773330c8d03f0ad07169579e4201c15", "filename": "gcc/testsuite/gcc.dg/pr36194.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36194.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36194.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36194.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -22,6 +22,7 @@ g (long long a)\n   asm (\"\");\n }\n \n+int\n main ()\n {\n   g (0x1234567887654321ll);"}, {"sha": "c693eece2244d130f3c836703b2cd21ae799fabf", "filename": "gcc/testsuite/gcc.dg/pr38616.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38616.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38616.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38616.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,8 @@\n \n #include <stdio.h> \n \n+extern int strcmp (const char *, const char *);\n+\n #define BUFFER \"1234567890abcdefghijklmno\"\n int main (void)\n {"}, {"sha": "fbe09241cbdc37f0ee9ecd4035215f824e95aabe", "filename": "gcc/testsuite/gcc.dg/pr39867.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39867.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39867.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39867.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do link } */\n /* { dg-options \"-O2\" } */\n \n+extern void link_error (void);\n+\n int main (void)\n {\n   int exp = -1;"}, {"sha": "ddbe66e903be5c1b773b97b70e8ee922092b9368", "filename": "gcc/testsuite/gcc.dg/pr41470.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41470.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41470.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41470.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-fexceptions\" } */\n+\n+void cf (void *);\n+\n void *\n af (void *a)\n {"}, {"sha": "1ff99155de7b1f8df1c269382100c8eb260609ff", "filename": "gcc/testsuite/gcc.dg/pr41837.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41837.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41837.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41837.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -13,6 +13,10 @@ typedef struct { T3 h; } T6;\n typedef struct { int i; } *T7;\n struct S3 { T6 j; T7 k; };\n \n+void f5 (T4);\n+void f6 (void (*)(T4));\n+void f7 (void (*)(T5, T1 *));\n+\n void\n f1 (T4 x)\n {"}, {"sha": "30eb9d1bf80e098b5ea116fa34697d25873e37f6", "filename": "gcc/testsuite/gcc.dg/pr44024.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44024.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44024.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44024.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O1 -fdelete-null-pointer-checks -fdump-tree-ccp1\" } */\n \n void foo();\n+void link_error (void);\n \n int main()\n {"}, {"sha": "bd2b1a87aaa7571594ca7de99c74fb7088785af2", "filename": "gcc/testsuite/gcc.dg/pr44699.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44699.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44699.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44699.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@ typedef long int intmax_t;\n typedef long unsigned int uintmax_t;\n extern void *xmalloc (size_t) __attribute__ ((__malloc__));\n extern const char *trim_filename (const char *);\n+extern void error (const char *, ...);\n \n static __inline void *\n __inline_memcpy_chk (void *__dest, const void *__src, size_t __len)"}, {"sha": "9574b3a05d86273dd9f73a3d9c77c43e20f2e996", "filename": "gcc/testsuite/gcc.dg/pr45415.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45415.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45415.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45415.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -53,6 +53,7 @@ df(f_be, t_be)\n \n void abort (void);\n void exit (int);\n+int\n main ()\n {\n   t_be x;"}, {"sha": "6df4f2cb85921894c152d612147382af50333b8a", "filename": "gcc/testsuite/gcc.dg/pr46252.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46252.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46252.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46252.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -frerun-cse-after-loop -fno-tree-loop-optimize -funroll-loops -fcompare-debug\" } */\n \n+void bar (void);\n+\n void\n foo (float *f)\n {"}, {"sha": "b8722a40623cc419bb3a2fff13a8fc1af3c62d0e", "filename": "gcc/testsuite/gcc.dg/pr46878-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46878-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46878-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46878-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n+int __foo (void);\n+int __bar (void);\n+\n struct baz\n {\n   int *newp;"}, {"sha": "47abea27dd7558061e8a0fb4d1ab76fbe6f5c4dc", "filename": "gcc/testsuite/gcc.dg/pr47443.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47443.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47443.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47443.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fstack-check=generic\" } */\n \n-static inline bar (char *c, int i)\n+static inline int bar (char *c, int i)\n {\n   return c + i > c;\n }"}, {"sha": "60fad41291be93db874e2083d66d04bf4888ee2c", "filename": "gcc/testsuite/gcc.dg/pr47763.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47763.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47763.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47763.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -funroll-loops -fdump-rtl-web\" } */\n \n+int\n foo()\n {\n }"}, {"sha": "996b8f6b1ac08953a7e4f5eaa4d59de3943a31aa", "filename": "gcc/testsuite/gcc.dg/pr49000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr49000.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -g\" } */\n \n-static\n+static int\n foo (int x, int y)\n {\n   return x * y;"}, {"sha": "b608b3836d4376527f0fc97a34d9f5a416629161", "filename": "gcc/testsuite/gcc.dg/pr50340.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50340.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50340.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50340.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -23,7 +23,7 @@ static HARD_REG_SET reload_reg_used_in_op_addr_reload;\n static HARD_REG_SET reload_reg_used_in_insn;\n static HARD_REG_SET reload_reg_used_in_other_addr;\n static HARD_REG_SET reload_reg_used_at_all;\n-void __attribute__((cold)) mark_reload_reg_in_use (regno, opnum, type, mode)\n+void __attribute__((cold)) mark_reload_reg_in_use (int regno, int opnum, int type, int mode)\n {\n   int nregs = regno ? 1 : mode_size[mode];\n   int i;"}, {"sha": "9103e6bdf4176abff1b22d5b46c84cb38a9d6ae7", "filename": "gcc/testsuite/gcc.dg/pr50908-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50908-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50908-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50908-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,7 @@\n \n extern int v1;\n extern int v2;\n+void g (void);\n \n void\n f ()"}, {"sha": "114dded3ab150e3927a393e28b7c40c587cd4902", "filename": "gcc/testsuite/gcc.dg/pr50908.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50908.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50908.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr50908.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -57,9 +57,13 @@ struct window\n };\n extern Lisp_Object Vtruncate_partial_width_windows;\n extern struct Lisp_Char_Table *window_display_table (struct window *);\n+long find_before_next_newline (long, long, long);\n+long disp_char_vector (struct Lisp_Char_Table *, int);\n+long char_table_ref (Lisp_Object, int); \n struct position *\n compute_motion (from, fromvpos, fromhpos, did_motion, to, tovpos, tohpos,\n \t\twidth, hscroll, tab_offset, win)\n+     int did_motion, width, hscroll, tab_offset;\n      long from, fromvpos, fromhpos, to, tovpos, tohpos;\n      struct window *win;\n {"}, {"sha": "64a609535192a1e74464aa395d0ae57f3d8b872e", "filename": "gcc/testsuite/gcc.dg/pr51796.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51796.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51796.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51796.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-Os -fno-omit-frame-pointer -fno-tree-dominator-opts -fno-tree-fre -fno-tree-pre\" } */\n \n+void stop (void);\n typedef void (*entry_func) (void) __attribute__ ((noreturn));\n extern entry_func entry_addr;\n static void bsd_boot_entry (void)"}, {"sha": "8a33d08d860877f3612bf93a5173244b610e35c4", "filename": "gcc/testsuite/gcc.dg/pr52808.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52808.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52808.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52808.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -8,5 +8,5 @@ int main ()\n   i = 0;\n   for (;; i++)\n     if (*fn1 ()[i] && !'a' <= 0 && i <= 'z' || *fn1 ()[0] && 'a' <= 'z')\n-      return;\n+      return 0;\n }"}, {"sha": "ed571d6488870c9585940726f77cfb377a512136", "filename": "gcc/testsuite/gcc.dg/pr55150-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55150-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -7,6 +7,7 @@ typedef unsigned char DES_cblock[8];\n  typedef struct DES_ks {\n  }\n  DES_key_schedule;\n+void DES_encrypt1 (long *, DES_key_schedule *, int);\n  void DES_ede3_cbcm_encrypt (const unsigned char *in, unsigned char *out, \t\t       long length, DES_key_schedule * ks1, \t\t       DES_key_schedule * ks2, DES_key_schedule * ks3, \t\t       DES_cblock * ivec1, DES_cblock * ivec2, int enc) {\n    register unsigned long tout0, tout1, xor0, xor1, m0, m1;\n    register long l = length;"}, {"sha": "b35104b44e8217290529dda630e8b92e7405943a", "filename": "gcc/testsuite/gcc.dg/pr55833.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55833.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55833.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55833.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,6 +3,7 @@\n /* { dg-options \"-O3\" } */\n \n int a, b, c;\n+int bar (void);\n \n void foo()\n {"}, {"sha": "3d38486760f1dade4b3516fad03ad492624ad62a", "filename": "gcc/testsuite/gcc.dg/pr59350.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59350.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59350.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59350.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -60,6 +60,10 @@ typedef enum\n     0x09, kDNSFlag1_RC_NotZone = 0x0A\n }\n TSIG_ErrorCode;\n+int uDNS_ReceiveTestQuestionResponse (mDNS * const, DNSMessage * const,\n+\t\t\t\t      const char * const,\n+\t\t\t\t      const mDNSAddr * const,\n+\t\t\t\t      const mDNSIPPort);\n void\n uDNS_ReceiveMsg (mDNS * const m, DNSMessage * const msg,\n \t\t const char * const end, const mDNSAddr * const srcaddr,"}, {"sha": "12999aa49e86e09d733e6b1657e965c921fe55bd", "filename": "gcc/testsuite/gcc.dg/pr59418.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59418.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59418.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59418.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -6,6 +6,7 @@\n /* { dg-options \"-march=armv7-a -mfloat-abi=hard -Os -g\" { target { arm*-*-* && { ! arm_thumb1 } } } } */\n \n extern int printf (const char *__format, ...);\n+double bar (const char *, int);\n \n void\n foo (const char *pptr, int caplen)"}, {"sha": "6dba8c713fcfefa1e9f061762b69314bde2f4a0d", "filename": "gcc/testsuite/gcc.dg/pr59940.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59940.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59940.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59940.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -3,7 +3,7 @@\n /* { dg-options \"-Wconversion -Woverflow\" } */\n \n int f (unsigned int);\n-typedef sitype __attribute__((mode(SI)));\n+typedef int sitype __attribute__((mode(SI)));\n \n int\n g (void)"}, {"sha": "dbb347f990ef933689863d8e7664962e3d6042a9", "filename": "gcc/testsuite/gcc.dg/pr59963-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59963-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59963-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr59963-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,6 @@\n /* PR c/59963 */\n /* { dg-do compile } */\n-/* { dg-options \"-Wdouble-promotion\" } */\n+/* { dg-options \"-std=gnu89 -Wdouble-promotion\" } */\n \n extern void baz ();\n extern void qux (int, ...);"}, {"sha": "96e42ed9c8d9b6e2642b054a982408be02cc020d", "filename": "gcc/testsuite/gcc.dg/pr60139.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60139.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,6 @@\n /* PR c/60139 */\n /* { dg-do compile } */\n-/* { dg-options \"-Wpedantic\" } */\n+/* { dg-options \"-Wpedantic -std=gnu89\" } */\n /* { dg-prune-output \".*near initialization for.*\" } */\n \n double sin (double);"}, {"sha": "99f5919c34c8f62240bc0f6cec1a638760146a54", "filename": "gcc/testsuite/gcc.dg/pr60647-1.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60647-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60647-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60647-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -7,19 +7,23 @@ struct _wincore\n   int width;\n };\n int a;\n-static fn1 (dpy, winInfo) struct _XDisplay *dpy;\n+void fn2 (void);\n+static int fn1 (dpy, winInfo) struct _XDisplay *dpy;\n struct _wincore *winInfo;\n {\n   a = winInfo->width;\n   fn2 ();\n }\n \n-static fn3 (dpy, winInfo, visrgn) struct _XDisplay *dpy;\n+void fn4 (int, int, int);\n+static int fn3 (dpy, winInfo, visrgn) struct _XDisplay *dpy;\n+int winInfo, visrgn;\n {\n   int b = fn1 (0, winInfo);\n   fn4 (0, 0, visrgn);\n }\n \n+int\n fn5 (event) struct _XEvent *event;\n {\n   fn3 (0, 0, 0);"}, {"sha": "60655bf54ecce995df3416a8ec60a50b6ba7db9a", "filename": "gcc/testsuite/gcc.dg/pr60647-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60647-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60647-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr60647-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -6,6 +6,9 @@ struct _wincore\n   int width, height;\n };\n \n+void fn1 (int);\n+void fn2 (int, int, int *);\n+\n static void\n foo (void *dpy, struct _wincore *winInfo, int offset)\n {"}, {"sha": "8efb750a9b256b6f77535bb7a3384b5ea5066097", "filename": "gcc/testsuite/gcc.dg/pr63186.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63186.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63186.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63186.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -25,6 +25,8 @@ foo ()\n {\n   bar ();\n }\n+\n+int\n main()\n {\n }"}, {"sha": "d0bb0d6f66ce441003381475bd86a49304996b6b", "filename": "gcc/testsuite/gcc.dg/pragma-diag-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,6 +2,9 @@\n /* { dg-options \"-Wuninitialized -O2\" } */\n /* { dg-message \"warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n \n+void foo (int);\n+\n+int\n main()\n {\n   int a;"}, {"sha": "ff484c9954205eb27a7d38787853aa5f28ee1de2", "filename": "gcc/testsuite/gcc.dg/redecl-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-15.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n    despite incompatible type.  */\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n void\n f (void)"}, {"sha": "a40c3ddcb3108f078a7a0a8d8920b27650b1f6ac", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-load-int.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-int.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -108,6 +108,7 @@ void simulate_thread_main()\n     }\n }\n \n+int\n main()\n {\n   simulate_thread_main ();"}, {"sha": "759a83d22f76614eb16b1473e61b6952b22887bd", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-load-int128.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-int128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-int128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-int128.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -120,6 +120,7 @@ void simulate_thread_main()\n     }\n }\n \n+int\n main()\n {\n   fill_table ();"}, {"sha": "524b9845b910396f55c29740d1546ce03e543812", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-load-longlong.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-longlong.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-longlong.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-longlong.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -110,6 +110,7 @@ void simulate_thread_main()\n     }\n }\n \n+int\n main()\n {\n   simulate_thread_main ();"}, {"sha": "62690cea5f88280ab3ccf77cfbde68682dfdcae3", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-load-short.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-load-short.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -108,6 +108,7 @@ void simulate_thread_main()\n     }\n }\n \n+int\n main()\n {\n   simulate_thread_main ();"}, {"sha": "89871c030c96da55014603c95c9ed46409a381d1", "filename": "gcc/testsuite/gcc.dg/simulate-thread/atomic-other-int.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-other-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-other-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fatomic-other-int.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -110,6 +110,7 @@ void simulate_thread_main()\n     test_abort ();\n }\n \n+int\n main ()\n {\n   simulate_thread_main ();"}, {"sha": "3713dc679220e5de0c5ae0de0c581db54694d5fd", "filename": "gcc/testsuite/gcc.dg/sms-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsms-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fsms-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsms-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -11,7 +11,7 @@ void * a[255];\n \n __attribute__ ((noinline))\n void\n-f (m)\n+f (int m)\n {\n   int i;\n   int sh = 0x100;"}, {"sha": "53e6bcf118ae6ef45e7bd203e94b11c5140cbf51", "filename": "gcc/testsuite/gcc.dg/uninit-suppress.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-suppress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-suppress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-suppress.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Wno-maybe-uninitialized\" } */\n void blah();\n+void bar (int);\n int gflag;\n \n void foo()"}, {"sha": "a4371ecc22a837d4bb9cdb253420ef94b458137c", "filename": "gcc/testsuite/gcc.dg/uninit-suppress_2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-suppress_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-suppress_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-suppress_2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Werror=uninitialized -Wno-error=maybe-uninitialized\" } */\n void blah();\n+void bar (int);\n int gflag;\n \n void foo()"}, {"sha": "cd64abd4b80cedfac7e92f75aa2ec38c48bbba9c", "filename": "gcc/testsuite/gcc.dg/unused-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Funused-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Funused-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funused-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,6 +5,7 @@\n /* { dg-options \"-Wunused\" } */\n \n typedef short unused_type __attribute__ ((unused));\n+int\n main ()\n {\n   short"}, {"sha": "fc830d878a6810c72c5e17b8af0df007bd0c9bed", "filename": "gcc/testsuite/gcc.dg/utf-dflt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Futf-dflt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Futf-dflt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-dflt.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,7 +1,7 @@\n /* Contributed by Kris Van Hees <kris.van.hees@oracle.com> */\n /* If not gnu99, the u and U prefixes should be parsed as separate tokens. */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n const unsigned short\tc0\t= u'a';\t\t/* { dg-error \"undeclared\" \"undeclared\" } */\n \t\t/* { dg-error \"expected ',' or ';'\" \"expected\" { target *-*-* } 6 } */"}, {"sha": "bf2210c46256d0900ca284838e3b3399aa228955", "filename": "gcc/testsuite/gcc.dg/utf-dflt2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Futf-dflt2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Futf-dflt2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-dflt2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,6 +1,6 @@\n /* If not gnu99, the u8 prefix should be parsed as separate tokens. */\n /* { dg-do compile } */\n-/* { dg-options \"\" } */\n+/* { dg-options \"-std=gnu89\" } */\n \n const void\t*s0 = u8\"a\";\t\t/* { dg-error \"undeclared\" \"undeclared\" } */\n \t\t/* { dg-error \"expected ',' or ';'\" \"expected\" { target *-*-* } 5 } */"}, {"sha": "888f3d780004a3dfa19583a4e0f980581554bac2", "filename": "gcc/testsuite/gcc.dg/va-arg-pack-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-pack-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-pack-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fva-arg-pack-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fgnu89-inline\" } */\n \n int bar (int, const char *, int, ...);\n int baz (int, const char *, long int);"}, {"sha": "cb7aebdb9ca55602d2826eeecf339c3b0a1ea25d", "filename": "gcc/testsuite/gcc.dg/varpool-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fvarpool-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fvarpool-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvarpool-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -5,7 +5,7 @@\n static int unnecesary_static_initialized_variable;\n static int *unnecesary_static_initialized_variable2 =\n   &unnecesary_static_initialized_variable;\n-static inline\n+static inline int\n simplify_after_inline (int param1, int *param2)\n {\n   if (unnecesary_static_initialized_variable != param1)\n@@ -14,6 +14,7 @@ simplify_after_inline (int param1, int *param2)\n     return unnecesary_static_initialized_variable;\n }\n \n+int\n main ()\n {\n   return simplify_after_inline (unnecesary_static_initialized_variable,"}, {"sha": "982fbca4201a0c085a2a62fbf076257ddda3ce53", "filename": "gcc/testsuite/gcc.dg/webizer.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwebizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwebizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwebizer.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -18,6 +18,7 @@ int block = 0;\n double ckt_size_factor ;\n \n __attribute__ ((noinline))\n+int\n configure2()\n {\n   block = 0 ;\n@@ -29,6 +30,7 @@ configure2()\n   }\n }\n \n+int\n main()\n {\n   configure2();"}, {"sha": "f47c38c709526226d93fae8869d60c8c558895d8", "filename": "gcc/testsuite/gcc.dg/winline-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-2.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2\" } */\n+/* { dg-options \"-Winline -O2 -fgnu89-inline\" } */\n \n inline int q(void);\t\t /* { dg-warning \"body not available\" \"\" } */\n inline int t(void)"}, {"sha": "0540a243e24802a21dd06a087aa3cda7ce3fbf73", "filename": "gcc/testsuite/gcc.dg/winline-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-3.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100\" } */\n+/* { dg-options \"-Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100 -fgnu89-inline\" } */\n \n void big (void);\n inline int q(void) /* { dg-warning \"max-inline-insns-single\" \"\" } */"}, {"sha": "da4be45eb2984375a98449624a4a4cf1147e1c35", "filename": "gcc/testsuite/gcc.dg/winline-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-5.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0\" } */\n+/* { dg-options \"-Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0 -fgnu89-inline\" } */\n \n void big (void);\n inline int q(void) /* { dg-warning \"inline-unit-growth\" } */"}, {"sha": "35e3aacb4b822a2bb90d10808dbf7d59915e0f8d", "filename": "gcc/testsuite/gcc.dg/winline-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-6.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2 --param large-function-growth=0 --param large-function-insns=1\" } */\n+/* { dg-options \"-Winline -O2 --param large-function-growth=0 --param large-function-insns=1 -fgnu89-inline\" } */\n \n void big (void);\n inline int q(void) /* { dg-warning \"large-function-growth\" } */"}, {"sha": "33ad74b43c16bfeeeab41b2d753e5c5f9f22b889", "filename": "gcc/testsuite/gcc.dg/winline-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-7.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Winline -O2\" } */\n+/* { dg-options \"-Winline -O2 -fgnu89-inline\" } */\n \n extern void *alloca (__SIZE_TYPE__);\n "}, {"sha": "c8b18c912a841e09862773e3aa47277887514795", "filename": "gcc/testsuite/gcc.dg/winline-9.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-9.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Winline --param large-stack-frame=10 --param large-stack-frame-growth=2\" } */\n+/* { dg-options \"-O2 -Winline --param large-stack-frame=10 --param large-stack-frame-growth=2 -fgnu89-inline\" } */\n \n int a,b;\n void test(char *);\n@@ -16,6 +16,7 @@ int bb (void) /* { dg-warning \"large-stack-frame\" \"\" } */\n   test(t);\n }\n \n+int\n t()\n {\n   if (a)"}, {"sha": "bc5a91b5f8da1d9a7388de71970c30681ac95e0f", "filename": "gcc/testsuite/gcc.dg/wtr-func-def-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwtr-func-def-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ece1ab347d8132732173a001a2bb8df1770de14/gcc%2Ftestsuite%2Fgcc.dg%2Fwtr-func-def-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwtr-func-def-1.c?ref=8ece1ab347d8132732173a001a2bb8df1770de14", "patch": "@@ -2,7 +2,7 @@\n    Note, gcc should omit these warnings in system header files.\n    Origin: Kaveh R. Ghazi <ghazi@caip.rutgers.edu> 6/30/2002.  */\n /* { dg-do compile } */\n-/* { dg-options \"-Wtraditional\" } */\n+/* { dg-options \"-Wtraditional -std=gnu89\" } */\n \n /* Test some simple cases.  */\n "}]}