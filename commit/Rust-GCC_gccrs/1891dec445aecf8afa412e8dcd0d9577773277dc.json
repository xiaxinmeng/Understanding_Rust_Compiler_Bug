{"sha": "1891dec445aecf8afa412e8dcd0d9577773277dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg5MWRlYzQ0NWFlY2Y4YWZhNDEyZThkY2QwZDk1Nzc3NzMyNzdkYw==", "commit": {"author": {"name": "Dirk Mueller", "email": "dmueller@suse.de", "date": "2006-11-30T23:08:27Z"}, "committer": {"name": "Dirk Mueller", "email": "mueller@gcc.gnu.org", "date": "2006-11-30T23:08:27Z"}, "message": "re PR c++/18313 (Missing warning for superfluous const's in return types)\n\n2006-12-01  Dirk Mueller  <dmueller@suse.de>\n\n        PR c++/18313\n        * decl.c (grokdeclarator): Warn for type qualifiers on return\n        type for non-dependent types.\n        * pt.c (tsubst_function_type): Warn for type qualifiers on\n        return type for dependent types.\n\n        * g++.dg/warn/Wreturn-type-4.C: New testcase.\n\nFrom-SVN: r119382", "tree": {"sha": "3dac1ff31be119a1ecd4986d6ad3d0334eeefd1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dac1ff31be119a1ecd4986d6ad3d0334eeefd1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1891dec445aecf8afa412e8dcd0d9577773277dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1891dec445aecf8afa412e8dcd0d9577773277dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1891dec445aecf8afa412e8dcd0d9577773277dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1891dec445aecf8afa412e8dcd0d9577773277dc/comments", "author": null, "committer": null, "parents": [{"sha": "e25615581ddc18d33ca84c6c65d44c2e33be8b3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25615581ddc18d33ca84c6c65d44c2e33be8b3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25615581ddc18d33ca84c6c65d44c2e33be8b3a"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "c9528ca19be2022837d78298c17b7b006dc6f7b1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1891dec445aecf8afa412e8dcd0d9577773277dc", "patch": "@@ -1,3 +1,11 @@\n+2006-12-01  Dirk Mueller  <dmueller@suse.de>\n+\n+\tPR c++/18313\n+\t* decl.c (grokdeclarator): Warn for type qualifiers on return\n+\ttype for non-dependent types.\n+\t* pt.c (tsubst_function_type): Warn for type qualifiers on\n+\treturn type for dependent types.\n+\n 2006-11-30  Geoffrey Keating  <geoffk@apple.com>\n \n \t* rtti.c (get_tinfo_decl): Handle return value from"}, {"sha": "6043596b2fd37d7e6772fe2216911e37b7e00ee5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1891dec445aecf8afa412e8dcd0d9577773277dc", "patch": "@@ -6895,6 +6895,7 @@ grokdeclarator (const cp_declarator *declarator,\n   cp_storage_class storage_class;\n   bool unsigned_p, signed_p, short_p, long_p, thread_p;\n   bool type_was_error_mark_node = false;\n+  bool set_no_warning = false;\n \n   signed_p = declspecs->specs[(int)ds_signed];\n   unsigned_p = declspecs->specs[(int)ds_unsigned];\n@@ -7541,9 +7542,16 @@ grokdeclarator (const cp_declarator *declarator,\n \t    /* Declaring a function type.\n \t       Make sure we have a valid type for the function to return.  */\n \n-\t    /* We now know that the TYPE_QUALS don't apply to the\n-\t       decl, but to its return type.  */\n-\t    type_quals = TYPE_UNQUALIFIED;\n+\t    if (type_quals != TYPE_UNQUALIFIED)\n+\t      {\n+\t\tif (SCALAR_TYPE_P (type) || VOID_TYPE_P (type))\n+\t\t  warning (OPT_Wreturn_type,\n+\t\t\t   \"type qualifiers ignored on function return type\");\n+\t\t/* We now know that the TYPE_QUALS don't apply to the\n+\t\t   decl, but to its return type.  */\n+\t\ttype_quals = TYPE_UNQUALIFIED;\n+\t\tset_no_warning = true;\n+\t      }\n \n \t    /* Warn about some types functions can't return.  */\n \n@@ -8623,6 +8631,9 @@ grokdeclarator (const cp_declarator *declarator,\n     if (!processing_template_decl)\n       cp_apply_type_quals_to_decl (type_quals, decl);\n \n+    if (set_no_warning)\n+        TREE_NO_WARNING (decl) = 1;\n+\n     return decl;\n   }\n }"}, {"sha": "2f4e89968394efbf08eab07e48f4b95339fb45a5", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1891dec445aecf8afa412e8dcd0d9577773277dc", "patch": "@@ -7133,6 +7133,13 @@ tsubst_function_type (tree t,\n   if (arg_types == error_mark_node)\n     return error_mark_node;\n \n+  if (TYPE_QUALS (return_type) != TYPE_UNQUALIFIED\n+      && in_decl != NULL_TREE\n+      && !TREE_NO_WARNING (in_decl)\n+      && (SCALAR_TYPE_P (return_type) || VOID_TYPE_P (return_type)))\n+    warning (OPT_Wreturn_type,\n+            \"type qualifiers ignored on function return type\");\n+\n   /* Construct a new type node and return it.  */\n   if (TREE_CODE (t) == FUNCTION_TYPE)\n     fntype = build_function_type (return_type, arg_types);"}, {"sha": "3a9def2e14f8268dff9f0f80da4f1f036d6b4e0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1891dec445aecf8afa412e8dcd0d9577773277dc", "patch": "@@ -1,3 +1,7 @@\n+2006-12-01  Dirk Mueller  <dmueller@suse.de>\n+\n+\t* g++.dg/warn/Wreturn-type-4.C: New testcase.\n+\n 2006-11-30  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.dg/dfp/convert-int-max.c: New test."}, {"sha": "dbb089b1812351d48780bfb412fd42b23e8fbfce", "filename": "gcc/testsuite/g++.dg/warn/Wreturn-type-4.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1891dec445aecf8afa412e8dcd0d9577773277dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-type-4.C?ref=1891dec445aecf8afa412e8dcd0d9577773277dc", "patch": "@@ -0,0 +1,43 @@\n+/* PR c++/18313 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wreturn-type\" } */\n+\n+volatile void bar(); /* { dg-warning \"type qualifiers ignored\" } */\n+\n+struct A\n+{\n+    const int bla(); /* { dg-warning \"type qualifiers ignored\" } */\n+    static const A getA(); /* { dg-bogus \"type qualifiers\" } */\n+};\n+\n+template<typename T> const T getfoo(const T def) /* { dg-bogus \"type qualifiers ignored\" } */\n+{ return def; } \n+\n+template<typename T> class Pair\n+{\n+    public:\n+        T getLeft() const { return T(); }   /* { dg-warning \"type qualifiers ignored\" } */\n+        const T getRight() const { return T(); } /* { dg-bogus \"type qualifiers ignored\" } */\n+};\n+\n+template <typename T> struct S {\n+    const int f();                     /* { dg-warning \"type qualifiers ignored\" } */\n+    const T g();                       /* { dg-bogus \"type qualifiers ignored\" } */\n+    T h();\n+};\n+\n+int* testtemplate()\n+{\n+    int i;\n+\n+    Pair<const int> a;\n+\n+    a.getLeft();\n+    a.getRight();\n+\n+    S<bool> b;\n+    b.h();              /* { dg-bogus \"type qualifiers ignored\" } */\n+    b.g();              /* { dg-bogus \"type qualifiers ignored\" } */\n+\n+    return getfoo<int*>(&i);\n+}"}]}