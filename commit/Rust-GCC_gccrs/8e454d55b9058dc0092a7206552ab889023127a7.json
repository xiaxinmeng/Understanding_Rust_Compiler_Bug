{"sha": "8e454d55b9058dc0092a7206552ab889023127a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0NTRkNTViOTA1OGRjMDA5MmE3MjA2NTUyYWI4ODkwMjMxMjdhNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-10-31T21:52:22Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-10-31T21:52:22Z"}, "message": "re PR rtl-optimization/63620 (RELOAD lost SET_GOT dependency on Darwin)\n\n\tPR target/63620\n\t* config/i386/i386-protos.h (ix86_use_pseudo_pic_reg): Declare.\n\t* config/i386/i386.c (ix86_use_pseudo_pic_reg): Export.\n\t* config/i386/i386.md (*pushtf): Allow only CONST_DOUBLEs that won't\n\tbe reloaded through memory.\n\t(*pushxf): Ditto.\n\t(*pushdf): Ditto.\n\nFrom-SVN: r216990", "tree": {"sha": "a5808a14d069bf9b36bdcfebe402e6e2ad791f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5808a14d069bf9b36bdcfebe402e6e2ad791f3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e454d55b9058dc0092a7206552ab889023127a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e454d55b9058dc0092a7206552ab889023127a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e454d55b9058dc0092a7206552ab889023127a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e454d55b9058dc0092a7206552ab889023127a7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccd615e3fdf2d2b80577d27e884884e9f758e8ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccd615e3fdf2d2b80577d27e884884e9f758e8ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccd615e3fdf2d2b80577d27e884884e9f758e8ea"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "1de834459072c64a53a168d112bdf9bd26d61045", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e454d55b9058dc0092a7206552ab889023127a7", "patch": "@@ -1,7 +1,9 @@\n 2014-10-31  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/63620\n-\t* config/i386/i386.md (*pushtf): Allow only CONST_DOUBLES that won't\n+\t* config/i386/i386-protos.h (ix86_use_pseudo_pic_reg): Declare.\n+\t* config/i386/i386.c (ix86_use_pseudo_pic_reg): Export.\n+\t* config/i386/i386.md (*pushtf): Allow only CONST_DOUBLEs that won't\n \tbe reloaded through memory.\n \t(*pushxf): Ditto.\n \t(*pushdf): Ditto."}, {"sha": "c9cee996e2b7ea86d2f506a7dccd2747b2f07190", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=8e454d55b9058dc0092a7206552ab889023127a7", "patch": "@@ -42,6 +42,8 @@ extern enum calling_abi ix86_function_type_abi (const_tree);\n \n extern void ix86_reset_previous_fndecl (void);\n \n+extern bool ix86_use_pseudo_pic_reg (void);\n+\n #ifdef RTX_CODE\n extern int standard_80387_constant_p (rtx);\n extern const char *standard_80387_constant_opcode (rtx);"}, {"sha": "bef00aebf7c4d834d2c05f9918fff6d37982069d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8e454d55b9058dc0092a7206552ab889023127a7", "patch": "@@ -6158,7 +6158,7 @@ ix86_maybe_switch_abi (void)\n \n /* Return 1 if pseudo register should be created and used to hold\n    GOT address for PIC code.  */\n-static bool\n+bool\n ix86_use_pseudo_pic_reg (void)\n {\n   if ((TARGET_64BIT"}, {"sha": "f8dd5475edef2a7b008c31fd315921d975b0128c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e454d55b9058dc0092a7206552ab889023127a7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8e454d55b9058dc0092a7206552ab889023127a7", "patch": "@@ -2738,7 +2738,8 @@\n   [(set (match_operand:TF 0 \"push_operand\" \"=<,<\")\n \t(match_operand:TF 1 \"general_no_elim_operand\" \"x,*roF\"))]\n   \"(TARGET_64BIT || TARGET_SSE)\n-   && (!can_create_pseudo_p ()\n+   && (!ix86_use_pseudo_pic_reg ()\n+       || !can_create_pseudo_p ()\n        || GET_CODE (operands[1]) != CONST_DOUBLE\n        || standard_sse_constant_p (operands[1]))\"\n {\n@@ -2766,7 +2767,8 @@\n (define_insn \"*pushxf\"\n   [(set (match_operand:XF 0 \"push_operand\" \"=<,<\")\n \t(match_operand:XF 1 \"general_no_elim_operand\" \"f,Yx*roF\"))]\n-  \"!can_create_pseudo_p ()\n+  \"!ix86_use_pseudo_pic_reg ()\n+   || !can_create_pseudo_p ()\n    || GET_CODE (operands[1]) != CONST_DOUBLE\n    || standard_80387_constant_p (operands[1]) > 0\"\n {\n@@ -2800,7 +2802,8 @@\n (define_insn \"*pushdf\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<,<,<,<\")\n \t(match_operand:DF 1 \"general_no_elim_operand\" \"f,Yd*roF,rmF,x\"))]\n-  \"!can_create_pseudo_p ()\n+  \"!ix86_use_pseudo_pic_reg ()\n+   || !can_create_pseudo_p ()\n    || GET_CODE (operands[1]) != CONST_DOUBLE\n    || (!(TARGET_SSE2 && TARGET_SSE_MATH)\n        && standard_80387_constant_p (operands[1]) > 0)"}]}