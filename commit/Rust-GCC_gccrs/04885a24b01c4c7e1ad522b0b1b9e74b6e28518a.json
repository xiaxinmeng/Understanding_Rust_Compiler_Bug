{"sha": "04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4ODVhMjRiMDFjNGM3ZTFhZDUyMmIwYjFiOWU3NGI2ZTI4NTE4YQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-09-01T01:32:10Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-09-01T01:32:10Z"}, "message": "re PR objc/23306 ([unit-at-a-time] objc exceptions (GNU runtime) don't work with unit-at-a-time)\n\n2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR objc/23306\n        * objc-act.c (generate_strings): Remove and move code to\n        finish decl to ...\n        (add_objc_string): here when creating a new string decl.\n        (finish_objc): Don't call generate_strings.\n\n2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR objc/23306\n        * objc.dg/image-info.m: Remove \"objc_module_info\" check part of the\n        scan-assmbler.\n\nFrom-SVN: r103713", "tree": {"sha": "9a5131e1306d24a045845b0ecb18a40958398215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a5131e1306d24a045845b0ecb18a40958398215"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/comments", "author": null, "committer": null, "parents": [{"sha": "0fd662ee04b37a665ad95d619a7e47185f079183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd662ee04b37a665ad95d619a7e47185f079183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd662ee04b37a665ad95d619a7e47185f079183"}], "stats": {"total": 86, "additions": 26, "deletions": 60}, "files": [{"sha": "a66a772546f31861abb4bbd914c33b108e9cf96b", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "patch": "@@ -1,3 +1,11 @@\n+2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR objc/23306\n+\t* objc-act.c (generate_strings): Remove and move code to\n+\tfinish decl to ...\n+\t(add_objc_string): here when creating a new string decl.\n+\t(finish_objc): Don't call generate_strings.\n+\n 2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR objc/23381"}, {"sha": "f5a8441b3120a8215ae918185b94a3352c29e15b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 11, "deletions": 59, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "patch": "@@ -2448,60 +2448,6 @@ generate_static_references (void)\n   finish_var_decl (static_instances_decl, expr);\n }\n \n-/* Output all strings.  */\n-\n-static void\n-generate_strings (void)\n-{\n-  tree chain, string_expr;\n-  tree string, decl, type;\n-\n-  for (chain = class_names_chain; chain; chain = TREE_CHAIN (chain))\n-    {\n-      string = TREE_VALUE (chain);\n-      decl = TREE_PURPOSE (chain);\n-      type = build_array_type\n-\t     (char_type_node,\n-\t      build_index_type\n-\t      (build_int_cst (NULL_TREE, \n-\t\t\t      IDENTIFIER_LENGTH (string))));\n-      decl = start_var_decl (type, IDENTIFIER_POINTER (DECL_NAME (decl)));\n-      string_expr = my_build_string (IDENTIFIER_LENGTH (string) + 1,\n-\t\t\t\t     IDENTIFIER_POINTER (string));\n-      finish_var_decl (decl, string_expr);\n-    }\n-\n-  for (chain = meth_var_names_chain; chain; chain = TREE_CHAIN (chain))\n-    {\n-      string = TREE_VALUE (chain);\n-      decl = TREE_PURPOSE (chain);\n-      type = build_array_type\n-\t     (char_type_node,\n-\t      build_index_type\n-\t      (build_int_cst (NULL_TREE,\n-\t\t\t      IDENTIFIER_LENGTH (string))));\n-      decl = start_var_decl (type, IDENTIFIER_POINTER (DECL_NAME (decl)));\n-      string_expr = my_build_string (IDENTIFIER_LENGTH (string) + 1,\n-\t\t\t\t     IDENTIFIER_POINTER (string));\n-      finish_var_decl (decl, string_expr);\n-    }\n-\n-  for (chain = meth_var_types_chain; chain; chain = TREE_CHAIN (chain))\n-    {\n-      string = TREE_VALUE (chain);\n-      decl = TREE_PURPOSE (chain);\n-      type = build_array_type\n-\t     (char_type_node,\n-\t      build_index_type\n-\t      (build_int_cst (NULL_TREE,\n-\t\t\t      IDENTIFIER_LENGTH (string))));\n-      decl = start_var_decl (type, IDENTIFIER_POINTER (DECL_NAME (decl)));\n-      string_expr = my_build_string (IDENTIFIER_LENGTH (string) + 1,\n-\t\t\t\t     IDENTIFIER_POINTER (string));\n-      finish_var_decl (decl, string_expr);\n-    }\n-}\n-\n static GTY(()) int selector_reference_idx;\n \n static tree\n@@ -2820,7 +2766,7 @@ objc_get_class_reference (tree ident)\n static tree\n add_objc_string (tree ident, enum string_section section)\n {\n-  tree *chain, decl;\n+  tree *chain, decl, type, string_expr;\n \n   if (section == class_names)\n     chain = &class_names_chain;\n@@ -2841,6 +2787,16 @@ add_objc_string (tree ident, enum string_section section)\n     }\n \n   decl = build_objc_string_decl (section);\n+  \n+  type = build_array_type\n+\t (char_type_node,\n+\t  build_index_type\n+\t  (build_int_cst (NULL_TREE, \n+\t\t\t  IDENTIFIER_LENGTH (ident))));\n+  decl = start_var_decl (type, IDENTIFIER_POINTER (DECL_NAME (decl)));\n+  string_expr = my_build_string (IDENTIFIER_LENGTH (ident) + 1,\n+\t\t\t\t IDENTIFIER_POINTER (ident));\n+  finish_var_decl (decl, string_expr);\n \n   *chain = tree_cons (decl, ident, NULL_TREE);\n \n@@ -9226,10 +9182,6 @@ finish_objc (void)\n   for (impent = imp_list; impent; impent = impent->next)\n     handle_impent (impent);\n \n-  /* Dump the string table last.  */\n-\n-  generate_strings ();\n-\n   if (warn_selector)\n     {\n       int slot;"}, {"sha": "515ea5a026a640a8d6eb2463ad140515dfb38178", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "patch": "@@ -1,3 +1,9 @@\n+2005-08-31  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR objc/23306\n+\t* objc.dg/image-info.m: Remove \"objc_module_info\" check part of the\n+\tscan-assmbler.\n+\n 2005-08-31  J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR target/21255"}, {"sha": "3ffe81438d420951e031600d4e9d6a5cb3c050d9", "filename": "gcc/testsuite/objc.dg/image-info.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Ftestsuite%2Fobjc.dg%2Fimage-info.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04885a24b01c4c7e1ad522b0b1b9e74b6e28518a/gcc%2Ftestsuite%2Fobjc.dg%2Fimage-info.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fimage-info.m?ref=04885a24b01c4c7e1ad522b0b1b9e74b6e28518a", "patch": "@@ -35,4 +35,4 @@ @implementation Base\n }\n @end\n \n-/* { dg-final { scan-assembler \"\\t.section __OBJC, __image_info.*\\n\\t.align.*\\nL_OBJC_IMAGE_INFO.*:\\n\\t.long\\t0\\n\\t.long\\t1\\n\\t.objc_module_info\\n\" } } */\n+/* { dg-final { scan-assembler \"\\t.section __OBJC, __image_info.*\\n\\t.align.*\\nL_OBJC_IMAGE_INFO.*:\\n\\t.long\\t0\\n\\t.long\\t1\" } } */"}]}