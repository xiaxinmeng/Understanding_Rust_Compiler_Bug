{"sha": "952155629ca1a4dfe7c7b26e53d118a9b853ed4a", "node_id": "C_kwDOANBUbNoAKDk1MjE1NTYyOWNhMWE0ZGZlN2M3YjI2ZTUzZDExOGE5Yjg1M2VkNGE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-16T10:04:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-16T10:04:16Z"}, "message": "aarch64: Fix up RTL sharing bug in aarch64_load_symref_appropriately [PR104910]\n\nWe unshare all RTL created during expansion, but when\naarch64_load_symref_appropriately is called after expansion like in the\nfollowing testcases, we use imm in both HIGH and LO_SUM operands.\nIf imm is some RTL that shouldn't be shared like a non-sharable CONST,\nwe get at least with --enable-checking=rtl a checking ICE, otherwise might\njust get silently wrong code.\n\nThe following patch fixes that by copying it if it can't be shared.\n\n2022-03-16  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/104910\n\t* config/aarch64/aarch64.cc (aarch64_load_symref_appropriately): Copy\n\timm rtx.\n\n\t* gcc.dg/pr104910.c: New test.", "tree": {"sha": "3d59c4d677475bf53a6b6e2259bbf0b6ea0b1b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d59c4d677475bf53a6b6e2259bbf0b6ea0b1b78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/952155629ca1a4dfe7c7b26e53d118a9b853ed4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952155629ca1a4dfe7c7b26e53d118a9b853ed4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/952155629ca1a4dfe7c7b26e53d118a9b853ed4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952155629ca1a4dfe7c7b26e53d118a9b853ed4a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aef670e486e60e9f492752ff25ff3ed6058bc3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aef670e486e60e9f492752ff25ff3ed6058bc3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aef670e486e60e9f492752ff25ff3ed6058bc3b"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "7a0337591f52a4666710c194ee00ee1e0092f044", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952155629ca1a4dfe7c7b26e53d118a9b853ed4a/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952155629ca1a4dfe7c7b26e53d118a9b853ed4a/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=952155629ca1a4dfe7c7b26e53d118a9b853ed4a", "patch": "@@ -3971,7 +3971,7 @@ aarch64_load_symref_appropriately (rtx dest, rtx imm,\n \tif (can_create_pseudo_p ())\n \t  tmp_reg = gen_reg_rtx (mode);\n \n-\temit_move_insn (tmp_reg, gen_rtx_HIGH (mode, imm));\n+\temit_move_insn (tmp_reg, gen_rtx_HIGH (mode, copy_rtx (imm)));\n \temit_insn (gen_add_losym (dest, tmp_reg, imm));\n \treturn;\n       }"}, {"sha": "10fed8147dec2a7c0276c5bd822822b6d2f2186f", "filename": "gcc/testsuite/gcc.dg/pr104910.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/952155629ca1a4dfe7c7b26e53d118a9b853ed4a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104910.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/952155629ca1a4dfe7c7b26e53d118a9b853ed4a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104910.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104910.c?ref=952155629ca1a4dfe7c7b26e53d118a9b853ed4a", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/104910 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fno-forward-propagate\" } */\n+/* { dg-additional-options \"-fstack-protector-all\" { target fstack_protector } } */\n+\n+void\n+bar (void);\n+\n+void\n+foo (int x)\n+{\n+  if (x)\n+    bar ();\n+}"}]}