{"sha": "22c3c0917f67402389deb1e877c429f93a6a0b38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJjM2MwOTE3ZjY3NDAyMzg5ZGViMWU4NzdjNDI5ZjkzYTZhMGIzOA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-05-17T06:37:06Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-05-17T06:37:06Z"}, "message": "cris.md: Unquote preparation and output statements.\n\n\t* config/cris/cris.md: Unquote preparation and output statements.\n \t(BWD, WD, BW): New, mode-macros.\n\t(S, s, m, mm, nbitsm1): New, mode-attrs.\n\t(szext, shift, shiftrt, ncond, ocond, rcond): New, code-macros.\n\t(u, su, shlr, slr, ncond, ocond, rcond, rCC, oCC, roCC): New,\n\tcode-attrs.\n\t(\"tst<mode>\"): Replace \"tstqi\", \"tsthi\" and \"tstsi\".\n\t(\"*cmp_ext<mode>\"): Replace \"*cmp_extsi\" and \"*cmp_exthi\".\n\t(\"*cmp_swapext<mode>\"): Replace \"*cmp_swapextqi\" and\n\t\"*cmp_swapexthi\".\n\t(\"cmp<mode>\"): Replace \"cmphi\" and \"cmpqi\".\n\t(\"movdi\"): Move misplaced head comment regarding necessity of\n\tmovdi from movsi to here.\n\t(\"*mov_side<mode>_biap\"): Replace \"*mov_sideqi_biap\" and\n\t\"*mov_sidehi_biap\".\n\t(\"*mov_side<mode>\"): Replace \"*mov_sideqi\" and \"*mov_sidehi\".\n\t(\"*mov_side<mode>_biap_mem\", \"*mov_sidehi_biap_mem\"): Replace\n\t\"*mov_sideqi_biap_mem\".\n\t(\"*mov_side<mode>_mem\"): Replace \"*mov_sideqi_mem\" and\n\t\"*mov_sidehi_mem\".\n\t(\"*clear_side<mode>_biap\"): Replace \"*clear_sidesi_biap\",\n\t\"*clear_sidehi_biap\" and \"*clear_sideqi_biap\".\n\t(\"*clear_side<mode>\"): Replace \"*clear_sidesi\", \"*clear_sidehi\"\n\tand \"*clear_sideqi\".\n\t(\"*ext_side<mode>si_biap\"): Replace \"*ext_sideqisi_biap\" and\n\t\"*ext_sidehisi_biap\".\n\t(\"*ext_side<mode>si\"): Replace \"*ext_sideqisi\" and\n\t\"*ext_sidehisi\".\n\t(\"reload_in<mode>\"): Replace \"reload_inhi\" and \"reload_inqi\".\n\t(\"reload_out<mode>\"): Replace \"reload_outhi\" and \"reload_outqi\".\n\t(\"extend<mode>di2\"): Replace \"extendhidi2\" and \"extendqidi2\".\n\t(\"extend<mode>si2\"): Replace \"extendhisi2\" and \"extendqisi2\".\n\t(\"zero_extend<mode>si2\"): Replace \"zero_extendhisi2\" and\n\t\"zero_extendqisi2\".\n\t(\"*op_side<mode>_biap\"): Replace \"*op_sideqi_biap\",\n\t\"*op_sidehi_biap\" and \"*op_sidesi_biap\".\n\t(\"*op_side<mode>\"): Replace \"*op_sideqi\", \"*op_sidehi\" and\n\t\"*op_sidesi\".\n\t(\"*op_swap_side<mode>_biap\"): Replace \"*op_swap_sideqi_biap\",\n\t\"*op_swap_sidehi_biap\" and \"*op_swap_sidesi_biap\".\n\t(\"*op_swap_side<mode>\"): Replace \"*op_swap_sideqi\",\n\t\"*op_swap_sidehi\" and \"*op_swap_sidesi\".\n\t(\"sub<mode>3\"): Replace \"subhi3\" and \"subqi3\", correcting a typo\n\tin the N alternative of \"subqi3\".\n\t(\"*extop<mode>si_side_biap\"): Replace \"*extopqisi_side_biap\" and\n\t\"*extophisi_side_biap\".\n\t(\"*extop<mode>si_side\"): Replace \"*extopqisi_side\" and\n\t\"*extophisi_side\".\n\t(\"*extop<mode>si_swap_side_biap\"): Replace\n\t\"*extopqisi_swap_side_biap\" and \"*extophisi_swap_side_biap\".\n\t(\"*extop<mode>si_swap_side\"): Replace \"*extopqisi_swap_side\" and\n\t\"*extophisi_swap_side\".\n\t(\"*extop<mode>si\"): Replace \"*extopqisi\" and \"*extophisi\".\n\t(\"*extop<mode>si_swap\"): Replace \"*extopqisi_swap\" and\n\t\"*extophisi_swap\".\n\t(\"<u>mul<s><mode>3\"): Replace \"umulhisi3\", \"umulqihi3\",\n\t\"mulqihi3\", \"mulhisi3\" and \"mulhisi3\".\n\t(\"<u>mulsidi3\"): Replace \"mulsidi3\" and \"umulsidi3\".\n\t(\"<su>mulsi3_highpart\"): Replace \"smulsi3_highpart\" and\n\t\"umulsi3_highpart\".\n\t(\"xor<mode>3\"): Replace \"xorhi3\" and \"xorqi3\".\n\t(\"neg<mode>2\"): Replace \"negsi2\", \"neghi2\" and \"negqi2\".\n\t(\"one_cmpl<mode>2\"): Replace \"one_cmplhi2\" and \"one_cmplqi2\".\n\t(\"<shlr>si3\"): Replace \"ashrsi3\", \"lshrsi3\" and \"ashlsi3\".\n\t(\"ashr<mode>3\"): Replace \"ashrhi3\" and \"ashrqi3\".\n\t(\"*expanded_<shlr><mode>\"): Replace \"*expanded_ashrhi\",\n\t\"*expanded_ashrqi\", \"*expanded_lshrhi\" and \"*expanded_lshrqi\".\n\t(\"*<shlr><mode>_lowpart\"): Replace \"*ashrhi_lowpart\",\n\t\"*ashrqi_lowpart\", \"*lshrhi_lowpart\" and \"*lshrqi_lowpart\".\n\t(\"lshr<mode>3\"): Replace \"lshrhi3\" and \"lshrqi3\".\n\t(\"ashl<mode>3\"): Replace \"ashlhi3\" and \"ashlqi3\".\n\t(\"*ashl<mode>_lowpart\"): Replace \"*ashlqi_lowpart\" and\n\t\"*ashlhi_lowpart\".\n\t(\"abs<mode>2\"): Replace \"abshi2\" and \"absqi2\".\n\t(\"b<ncond>\"): Replace \"beq\", \"bne\", \"bgtu\", \"bltu\", \"bgeu\" and\n\t\"bleu\".\n\t(\"b<ocond>\"): Replace \"bgt\" and \"ble\".\n\t(\"b<rcond>\"): Replace \"blt\" and \"bge\".\n\t(\"*b<ncond>_reversed\"): Replace \"*beq_reversed\", \"*bne_reversed\",\n\t\"*bgtu_reversed\", \"*bltu_reversed\", \"*bgeu_reversed\" and\n\t\"*bleu_reversed\".\n\t(\"*b<ocond>_reversed\"): Replace \"*bgt_reversed\" and\n\t\"*ble_reversed\".\n\t(\"*b<rcond>_reversed\"): Replace \"*blt_reversed\" and\n\t\"*blt_reversed\".\n\t(\"s<ncond>\"): Replace \"sgeu\", \"sltu\", \"seq\", \"sgtu\", \"sleu\" and\n\t\"sne\".\n\t(\"s<rcond>\"): Replace \"sge\" and \"slt\".\n\t(\"s<ocond>\"): Replace \"sgt\" and \"sle\".\n\t(\"clear.[bwd] [rx=rx+rz.S2]\"): Replace split clear.d\n\t[rx=rx+rz.S2], clear.w [rx=rx+rz.S2] and clear.b [rx=rx+rz.S2].\n\t(\"clear.[bwd] [rx=rx+i]\"): Replace splits clear.d [rx=rx+i],\n\tclear.w [rx=rx+i] and clear.b [rx=rx+i].\n\nFrom-SVN: r99814", "tree": {"sha": "f0e1c7d54615fa8e9f75b008af92b3848edf51f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0e1c7d54615fa8e9f75b008af92b3848edf51f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22c3c0917f67402389deb1e877c429f93a6a0b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c3c0917f67402389deb1e877c429f93a6a0b38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c3c0917f67402389deb1e877c429f93a6a0b38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c3c0917f67402389deb1e877c429f93a6a0b38/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b96917bffef6c486ceedbc93d994e2016e070e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96917bffef6c486ceedbc93d994e2016e070e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96917bffef6c486ceedbc93d994e2016e070e30"}], "stats": {"total": 2160, "additions": 510, "deletions": 1650}, "files": [{"sha": "7bab28155256c30d0284246138f4f89ce8f23aff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c3c0917f67402389deb1e877c429f93a6a0b38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c3c0917f67402389deb1e877c429f93a6a0b38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22c3c0917f67402389deb1e877c429f93a6a0b38", "patch": "@@ -1,3 +1,99 @@\n+2005-05-17  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* config/cris/cris.md: Unquote preparation and output statements.\n+ \t(BWD, WD, BW): New, mode-macros.\n+\t(S, s, m, mm, nbitsm1): New, mode-attrs.\n+\t(szext, shift, shiftrt, ncond, ocond, rcond): New, code-macros.\n+\t(u, su, shlr, slr, ncond, ocond, rcond, rCC, oCC, roCC): New,\n+\tcode-attrs.\n+\t(\"tst<mode>\"): Replace \"tstqi\", \"tsthi\" and \"tstsi\".\n+\t(\"*cmp_ext<mode>\"): Replace \"*cmp_extsi\" and \"*cmp_exthi\".\n+\t(\"*cmp_swapext<mode>\"): Replace \"*cmp_swapextqi\" and\n+\t\"*cmp_swapexthi\".\n+\t(\"cmp<mode>\"): Replace \"cmphi\" and \"cmpqi\".\n+\t(\"movdi\"): Move misplaced head comment regarding necessity of\n+\tmovdi from movsi to here.\n+\t(\"*mov_side<mode>_biap\"): Replace \"*mov_sideqi_biap\" and\n+\t\"*mov_sidehi_biap\".\n+\t(\"*mov_side<mode>\"): Replace \"*mov_sideqi\" and \"*mov_sidehi\".\n+\t(\"*mov_side<mode>_biap_mem\", \"*mov_sidehi_biap_mem\"): Replace\n+\t\"*mov_sideqi_biap_mem\".\n+\t(\"*mov_side<mode>_mem\"): Replace \"*mov_sideqi_mem\" and\n+\t\"*mov_sidehi_mem\".\n+\t(\"*clear_side<mode>_biap\"): Replace \"*clear_sidesi_biap\",\n+\t\"*clear_sidehi_biap\" and \"*clear_sideqi_biap\".\n+\t(\"*clear_side<mode>\"): Replace \"*clear_sidesi\", \"*clear_sidehi\"\n+\tand \"*clear_sideqi\".\n+\t(\"*ext_side<mode>si_biap\"): Replace \"*ext_sideqisi_biap\" and\n+\t\"*ext_sidehisi_biap\".\n+\t(\"*ext_side<mode>si\"): Replace \"*ext_sideqisi\" and\n+\t\"*ext_sidehisi\".\n+\t(\"reload_in<mode>\"): Replace \"reload_inhi\" and \"reload_inqi\".\n+\t(\"reload_out<mode>\"): Replace \"reload_outhi\" and \"reload_outqi\".\n+\t(\"extend<mode>di2\"): Replace \"extendhidi2\" and \"extendqidi2\".\n+\t(\"extend<mode>si2\"): Replace \"extendhisi2\" and \"extendqisi2\".\n+\t(\"zero_extend<mode>si2\"): Replace \"zero_extendhisi2\" and\n+\t\"zero_extendqisi2\".\n+\t(\"*op_side<mode>_biap\"): Replace \"*op_sideqi_biap\",\n+\t\"*op_sidehi_biap\" and \"*op_sidesi_biap\".\n+\t(\"*op_side<mode>\"): Replace \"*op_sideqi\", \"*op_sidehi\" and\n+\t\"*op_sidesi\".\n+\t(\"*op_swap_side<mode>_biap\"): Replace \"*op_swap_sideqi_biap\",\n+\t\"*op_swap_sidehi_biap\" and \"*op_swap_sidesi_biap\".\n+\t(\"*op_swap_side<mode>\"): Replace \"*op_swap_sideqi\",\n+\t\"*op_swap_sidehi\" and \"*op_swap_sidesi\".\n+\t(\"sub<mode>3\"): Replace \"subhi3\" and \"subqi3\", correcting a typo\n+\tin the N alternative of \"subqi3\".\n+\t(\"*extop<mode>si_side_biap\"): Replace \"*extopqisi_side_biap\" and\n+\t\"*extophisi_side_biap\".\n+\t(\"*extop<mode>si_side\"): Replace \"*extopqisi_side\" and\n+\t\"*extophisi_side\".\n+\t(\"*extop<mode>si_swap_side_biap\"): Replace\n+\t\"*extopqisi_swap_side_biap\" and \"*extophisi_swap_side_biap\".\n+\t(\"*extop<mode>si_swap_side\"): Replace \"*extopqisi_swap_side\" and\n+\t\"*extophisi_swap_side\".\n+\t(\"*extop<mode>si\"): Replace \"*extopqisi\" and \"*extophisi\".\n+\t(\"*extop<mode>si_swap\"): Replace \"*extopqisi_swap\" and\n+\t\"*extophisi_swap\".\n+\t(\"<u>mul<s><mode>3\"): Replace \"umulhisi3\", \"umulqihi3\",\n+\t\"mulqihi3\", \"mulhisi3\" and \"mulhisi3\".\n+\t(\"<u>mulsidi3\"): Replace \"mulsidi3\" and \"umulsidi3\".\n+\t(\"<su>mulsi3_highpart\"): Replace \"smulsi3_highpart\" and\n+\t\"umulsi3_highpart\".\n+\t(\"xor<mode>3\"): Replace \"xorhi3\" and \"xorqi3\".\n+\t(\"neg<mode>2\"): Replace \"negsi2\", \"neghi2\" and \"negqi2\".\n+\t(\"one_cmpl<mode>2\"): Replace \"one_cmplhi2\" and \"one_cmplqi2\".\n+\t(\"<shlr>si3\"): Replace \"ashrsi3\", \"lshrsi3\" and \"ashlsi3\".\n+\t(\"ashr<mode>3\"): Replace \"ashrhi3\" and \"ashrqi3\".\n+\t(\"*expanded_<shlr><mode>\"): Replace \"*expanded_ashrhi\",\n+\t\"*expanded_ashrqi\", \"*expanded_lshrhi\" and \"*expanded_lshrqi\".\n+\t(\"*<shlr><mode>_lowpart\"): Replace \"*ashrhi_lowpart\",\n+\t\"*ashrqi_lowpart\", \"*lshrhi_lowpart\" and \"*lshrqi_lowpart\".\n+\t(\"lshr<mode>3\"): Replace \"lshrhi3\" and \"lshrqi3\".\n+\t(\"ashl<mode>3\"): Replace \"ashlhi3\" and \"ashlqi3\".\n+\t(\"*ashl<mode>_lowpart\"): Replace \"*ashlqi_lowpart\" and\n+\t\"*ashlhi_lowpart\".\n+\t(\"abs<mode>2\"): Replace \"abshi2\" and \"absqi2\".\n+\t(\"b<ncond>\"): Replace \"beq\", \"bne\", \"bgtu\", \"bltu\", \"bgeu\" and\n+\t\"bleu\".\n+\t(\"b<ocond>\"): Replace \"bgt\" and \"ble\".\n+\t(\"b<rcond>\"): Replace \"blt\" and \"bge\".\n+\t(\"*b<ncond>_reversed\"): Replace \"*beq_reversed\", \"*bne_reversed\",\n+\t\"*bgtu_reversed\", \"*bltu_reversed\", \"*bgeu_reversed\" and\n+\t\"*bleu_reversed\".\n+\t(\"*b<ocond>_reversed\"): Replace \"*bgt_reversed\" and\n+\t\"*ble_reversed\".\n+\t(\"*b<rcond>_reversed\"): Replace \"*blt_reversed\" and\n+\t\"*blt_reversed\".\n+\t(\"s<ncond>\"): Replace \"sgeu\", \"sltu\", \"seq\", \"sgtu\", \"sleu\" and\n+\t\"sne\".\n+\t(\"s<rcond>\"): Replace \"sge\" and \"slt\".\n+\t(\"s<ocond>\"): Replace \"sgt\" and \"sle\".\n+\t(\"clear.[bwd] [rx=rx+rz.S2]\"): Replace split clear.d\n+\t[rx=rx+rz.S2], clear.w [rx=rx+rz.S2] and clear.b [rx=rx+rz.S2].\n+\t(\"clear.[bwd] [rx=rx+i]\"): Replace splits clear.d [rx=rx+i],\n+\tclear.w [rx=rx+i] and clear.b [rx=rx+i].\n+\n 2005-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* varasm.c (struct constant_descriptor_tree): Add hash field."}, {"sha": "e8d330fa479f308ab06fe7977fd6139be82af535", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 414, "deletions": 1650, "changes": 2064, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22c3c0917f67402389deb1e877c429f93a6a0b38/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22c3c0917f67402389deb1e877c429f93a6a0b38/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=22c3c0917f67402389deb1e877c429f93a6a0b38"}]}