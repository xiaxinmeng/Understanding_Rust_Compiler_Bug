{"sha": "261c4230db075ad59116a75be8961fbee10d60e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxYzQyMzBkYjA3NWFkNTkxMTZhNzViZTg5NjFmYmVlMTBkNjBlOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-21T06:51:34Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-21T06:51:34Z"}, "message": "(emit_move_insn_1): New subroutine cut from emit_move_insn.\n\n(emit_move_insn): Use that.\n\nFrom-SVN: r3505", "tree": {"sha": "d2ebc49cdf4330c718c849058f95083e336210a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2ebc49cdf4330c718c849058f95083e336210a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/261c4230db075ad59116a75be8961fbee10d60e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261c4230db075ad59116a75be8961fbee10d60e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261c4230db075ad59116a75be8961fbee10d60e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261c4230db075ad59116a75be8961fbee10d60e9/comments", "author": null, "committer": null, "parents": [{"sha": "3f908f128ee525ef63242c9d93d96967dc1a085e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f908f128ee525ef63242c9d93d96967dc1a085e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f908f128ee525ef63242c9d93d96967dc1a085e"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "4768929985feaa3c7082160a43cade987671591c", "filename": "gcc/expr.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261c4230db075ad59116a75be8961fbee10d60e9/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261c4230db075ad59116a75be8961fbee10d60e9/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=261c4230db075ad59116a75be8961fbee10d60e9", "patch": "@@ -1581,6 +1581,22 @@ emit_move_insn (x, y)\n   if (mode == BLKmode)\n     abort ();\n \n+  return emit_move_insn_1 (x, y);\n+}\n+\n+/* Low level part of emit_move_insn.\n+   Called just like emit_move_insn, but assumes X and Y\n+   are basically valid.  */\n+\n+rtx\n+emit_move_insn_1 (x, y)\n+     rtx x, y;\n+{\n+  enum machine_mode mode = GET_MODE (x);\n+  enum machine_mode submode;\n+  enum mode_class class = GET_MODE_CLASS (mode);\n+  int i;\n+\n   if (class == MODE_COMPLEX_FLOAT || class == MODE_COMPLEX_INT)\n     submode = mode_for_size (GET_MODE_UNIT_SIZE (mode) * BITS_PER_UNIT,\n \t\t\t     (class == MODE_COMPLEX_INT"}]}