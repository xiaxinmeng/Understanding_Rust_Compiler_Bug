{"sha": "2c973ee7b3654c0c8b559250bef7ade3861747b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM5NzNlZTdiMzY1NGMwYzhiNTU5MjUwYmVmN2FkZTM4NjE3NDdiMw==", "commit": {"author": {"name": "Rong Xu", "email": "xur@gcc.gnu.org", "date": "2014-01-09T19:13:47Z"}, "committer": {"name": "Rong Xu", "email": "xur@gcc.gnu.org", "date": "2014-01-09T19:13:47Z"}, "message": "libgcov-driver.c (this_prg): make it local to save bss space.\n\n2014-01-09  Rong Xu  <xur@google.com>\n\n\t* libgcc/libgcov-driver.c (this_prg): make it local to save\n        bss space.\n\t(gcov_exit_compute_summary): Ditto.\n\t(gcov_exit_merge_gcda): Ditto.\n\t(gcov_exit_merge_summary): Ditto.\n\t(gcov_exit_dump_gcov): Ditto.\n\nFrom-SVN: r206483", "tree": {"sha": "0ebca650b7992aca3c064fcce32a3e3cff7585c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ebca650b7992aca3c064fcce32a3e3cff7585c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c973ee7b3654c0c8b559250bef7ade3861747b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c973ee7b3654c0c8b559250bef7ade3861747b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c973ee7b3654c0c8b559250bef7ade3861747b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c973ee7b3654c0c8b559250bef7ade3861747b3/comments", "author": null, "committer": null, "parents": [{"sha": "2899377bbbc8a3df0fb226ae37122b572801e451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2899377bbbc8a3df0fb226ae37122b572801e451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2899377bbbc8a3df0fb226ae37122b572801e451"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "f8abdb1e8ac5fff52326c75c7f5da1f968117db9", "filename": "libgcc/libgcov-driver.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c973ee7b3654c0c8b559250bef7ade3861747b3/libgcc%2Flibgcov-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c973ee7b3654c0c8b559250bef7ade3861747b3/libgcc%2Flibgcov-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-driver.c?ref=2c973ee7b3654c0c8b559250bef7ade3861747b3", "patch": "@@ -303,8 +303,6 @@ gcov_compute_histogram (struct gcov_summary *sum)\n     }\n }\n \n-/* summary for program.  */\n-static struct gcov_summary this_prg;\n /* gcda filename.  */\n static char *gi_filename;\n /* buffer for the fn_data from another program.  */\n@@ -317,10 +315,10 @@ static struct gcov_summary_buffer *sum_buffer;\n static int run_accounted = 0;\n \n /* This funtions computes the program level summary and the histo-gram.\n-   It computes and returns CRC32  and stored summari in THIS_PRG.  */\n+   It computes and returns CRC32 and stored summary in THIS_PRG.  */\n \n static gcov_unsigned_t\n-gcov_exit_compute_summary (void)\n+gcov_exit_compute_summary (struct gcov_summary *this_prg)\n {\n   struct gcov_info *gi_ptr;\n   const struct gcov_fn_info *gfi_ptr;\n@@ -332,7 +330,7 @@ gcov_exit_compute_summary (void)\n   gcov_unsigned_t crc32 = 0;\n \n   /* Find the totals for this execution.  */\n-  memset (&this_prg, 0, sizeof (this_prg));\n+  memset (this_prg, 0, sizeof (*this_prg));\n   for (gi_ptr = gcov_list; gi_ptr; gi_ptr = gi_ptr->next)\n     {\n       crc32 = crc32_unsigned (crc32, gi_ptr->stamp);\n@@ -357,7 +355,7 @@ gcov_exit_compute_summary (void)\n               if (!gi_ptr->merge[t_ix])\n                 continue;\n \n-              cs_ptr = &this_prg.ctrs[t_ix];\n+              cs_ptr = &(this_prg->ctrs[t_ix]);\n               cs_ptr->num += ci_ptr->num;\n               crc32 = crc32_unsigned (crc32, ci_ptr->num);\n \n@@ -371,7 +369,7 @@ gcov_exit_compute_summary (void)\n             }\n         }\n     }\n-  gcov_compute_histogram (&this_prg);\n+  gcov_compute_histogram (this_prg);\n   return crc32;\n }\n \n@@ -393,6 +391,7 @@ struct gcov_filename_aux{\n static int\n gcov_exit_merge_gcda (struct gcov_info *gi_ptr,\n                       struct gcov_summary *prg_p,\n+                      struct gcov_summary *this_prg,\n                       gcov_position_t *summary_pos_p,\n                       gcov_position_t *eof_pos_p,\n \t\t      gcov_unsigned_t crc32)\n@@ -446,7 +445,7 @@ gcov_exit_merge_gcda (struct gcov_info *gi_ptr,\n         goto next_summary;\n \n       for (t_ix = 0; t_ix != GCOV_COUNTERS_SUMMABLE; t_ix++)\n-        if (tmp.ctrs[t_ix].num != this_prg.ctrs[t_ix].num)\n+        if (tmp.ctrs[t_ix].num != this_prg->ctrs[t_ix].num)\n           goto next_summary;\n       *prg_p = tmp;\n       *summary_pos_p = *eof_pos_p;\n@@ -636,7 +635,7 @@ gcov_exit_write_gcda (const struct gcov_info *gi_ptr,\n \n static int\n gcov_exit_merge_summary (const struct gcov_info *gi_ptr, struct gcov_summary *prg,\n-\t\t\t gcov_unsigned_t crc32,\n+                         struct gcov_summary *this_prg, gcov_unsigned_t crc32,\n \t\t\t struct gcov_summary *all_prg __attribute__ ((unused)))\n {\n   struct gcov_ctr_summary *cs_prg, *cs_tprg;\n@@ -650,7 +649,7 @@ gcov_exit_merge_summary (const struct gcov_info *gi_ptr, struct gcov_summary *pr\n   for (t_ix = 0; t_ix < GCOV_COUNTERS_SUMMABLE; t_ix++)\n     {\n       cs_prg = &(prg->ctrs[t_ix]);\n-      cs_tprg = &this_prg.ctrs[t_ix];\n+      cs_tprg = &(this_prg->ctrs[t_ix]);\n \n       if (gi_ptr->merge[t_ix])\n         {\n@@ -719,7 +718,8 @@ gcov_exit_merge_summary (const struct gcov_info *gi_ptr, struct gcov_summary *pr\n \n static void\n gcov_exit_dump_gcov (struct gcov_info *gi_ptr, struct gcov_filename_aux *gf,\n-\t\t     gcov_unsigned_t crc32, struct gcov_summary *all_prg)\n+\t\t     gcov_unsigned_t crc32, struct gcov_summary *all_prg,\n+                     struct gcov_summary *this_prg)\n {\n   struct gcov_summary prg; /* summary for this object over all program.  */\n   int error;\n@@ -743,7 +743,7 @@ gcov_exit_dump_gcov (struct gcov_info *gi_ptr, struct gcov_filename_aux *gf,\n           gcov_error (\"profiling:%s:Not a gcov data file\\n\", gi_filename);\n           goto read_fatal;\n         }\n-      error = gcov_exit_merge_gcda (gi_ptr, &prg, &summary_pos, &eof_pos,\n+      error = gcov_exit_merge_gcda (gi_ptr, &prg, this_prg, &summary_pos, &eof_pos,\n \t\t\t\t    crc32);\n       if (error == -1)\n         goto read_fatal;\n@@ -757,7 +757,7 @@ gcov_exit_dump_gcov (struct gcov_info *gi_ptr, struct gcov_filename_aux *gf,\n       summary_pos = eof_pos;\n     }\n \n-  error = gcov_exit_merge_summary (gi_ptr, &prg, crc32, all_prg);\n+  error = gcov_exit_merge_summary (gi_ptr, &prg, this_prg, crc32, all_prg);\n   if (error == -1)\n     goto read_fatal;\n \n@@ -787,13 +787,14 @@ gcov_exit (void)\n   struct gcov_filename_aux gf;\n   gcov_unsigned_t crc32;\n   struct gcov_summary all_prg;\n+  struct gcov_summary this_prg;\n \n   /* Prevent the counters from being dumped a second time on exit when the\n      application already wrote out the profile using __gcov_dump().  */\n   if (gcov_dump_complete)\n     return;\n \n-  crc32 = gcov_exit_compute_summary ();\n+  crc32 = gcov_exit_compute_summary (&this_prg);\n \n   allocate_filename_struct (&gf);\n #if !GCOV_LOCKED\n@@ -802,7 +803,7 @@ gcov_exit (void)\n \n   /* Now merge each file.  */\n   for (gi_ptr = gcov_list; gi_ptr; gi_ptr = gi_ptr->next)\n-    gcov_exit_dump_gcov (gi_ptr, &gf, crc32, &all_prg);\n+    gcov_exit_dump_gcov (gi_ptr, &gf, crc32, &all_prg, &this_prg);\n   run_accounted = 1;\n \n   if (gi_filename)"}]}