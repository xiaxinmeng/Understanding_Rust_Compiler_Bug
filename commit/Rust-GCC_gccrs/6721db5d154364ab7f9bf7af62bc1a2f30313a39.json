{"sha": "6721db5d154364ab7f9bf7af62bc1a2f30313a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyMWRiNWQxNTQzNjRhYjdmOWJmN2FmNjJiYzFhMmYzMDMxM2EzOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-17T02:33:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-17T02:33:38Z"}, "message": "re PR c++/56095 (Crash casting function pointer as non-type template argument)\n\n\tPR c++/56095\n\t* class.c (resolve_address_of_overloaded_function): Accept a\n\treference to function for target_type.\n\t(instantiate_type): Likewise.\n\t* pt.c (convert_nontype_argument): Pass it to\n\tconvert_nontype_argument_function.\n\nFrom-SVN: r196722", "tree": {"sha": "c052c1f7043fd3af86bb9c7610458c725f6cf03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c052c1f7043fd3af86bb9c7610458c725f6cf03c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6721db5d154364ab7f9bf7af62bc1a2f30313a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6721db5d154364ab7f9bf7af62bc1a2f30313a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6721db5d154364ab7f9bf7af62bc1a2f30313a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6721db5d154364ab7f9bf7af62bc1a2f30313a39/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "720f3cb82d2c970e60b64bca0f6249db3f563de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720f3cb82d2c970e60b64bca0f6249db3f563de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/720f3cb82d2c970e60b64bca0f6249db3f563de5"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "8aa39524b56e8ab8a96efcce12c12f9156fff483", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6721db5d154364ab7f9bf7af62bc1a2f30313a39/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6721db5d154364ab7f9bf7af62bc1a2f30313a39/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6721db5d154364ab7f9bf7af62bc1a2f30313a39", "patch": "@@ -1,3 +1,12 @@\n+2013-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56095\n+\t* class.c (resolve_address_of_overloaded_function): Accept a\n+\treference to function for target_type.\n+\t(instantiate_type): Likewise.\n+\t* pt.c (convert_nontype_argument): Pass it to\n+\tconvert_nontype_argument_function.\n+\n 2013-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree.c (cp_tree_equal): Fix a pasto."}, {"sha": "b48b353d596f868a6efb6194bc4c3241d255d6ad", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6721db5d154364ab7f9bf7af62bc1a2f30313a39/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6721db5d154364ab7f9bf7af62bc1a2f30313a39/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6721db5d154364ab7f9bf7af62bc1a2f30313a39", "patch": "@@ -7148,7 +7148,8 @@ resolve_address_of_overloaded_function (tree target_type,\n   gcc_assert (is_overloaded_fn (overload));\n \n   /* Check that the TARGET_TYPE is reasonable.  */\n-  if (TYPE_PTRFN_P (target_type))\n+  if (TYPE_PTRFN_P (target_type)\n+      || TYPE_REFFN_P (target_type))\n     /* This is OK.  */;\n   else if (TYPE_PTRMEMFUNC_P (target_type))\n     /* This is OK, too.  */\n@@ -7419,10 +7420,11 @@ instantiate_type (tree lhstype, tree rhs, tsubst_flags_t flags)\n \n   if (TREE_TYPE (rhs) != NULL_TREE && ! (type_unknown_p (rhs)))\n     {\n-      if (same_type_p (lhstype, TREE_TYPE (rhs)))\n+      tree fntype = non_reference (lhstype);\n+      if (same_type_p (fntype, TREE_TYPE (rhs)))\n \treturn rhs;\n       if (flag_ms_extensions\n-\t  && TYPE_PTRMEMFUNC_P (lhstype)\n+\t  && TYPE_PTRMEMFUNC_P (fntype)\n \t  && !TYPE_PTRMEMFUNC_P (TREE_TYPE (rhs)))\n \t/* Microsoft allows `A::f' to be resolved to a\n \t   pointer-to-member.  */\n@@ -7431,7 +7433,7 @@ instantiate_type (tree lhstype, tree rhs, tsubst_flags_t flags)\n \t{\n \t  if (flags & tf_error)\n \t    error (\"cannot convert %qE from type %qT to type %qT\",\n-\t\t   rhs, TREE_TYPE (rhs), lhstype);\n+\t\t   rhs, TREE_TYPE (rhs), fntype);\n \t  return error_mark_node;\n \t}\n     }"}, {"sha": "36175ca7022c0097b33f514492876f4b27181268", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6721db5d154364ab7f9bf7af62bc1a2f30313a39/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6721db5d154364ab7f9bf7af62bc1a2f30313a39/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6721db5d154364ab7f9bf7af62bc1a2f30313a39", "patch": "@@ -5788,7 +5788,7 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \t  return NULL_TREE;\n \t}\n \n-      expr = convert_nontype_argument_function (TREE_TYPE (type), expr);\n+      expr = convert_nontype_argument_function (type, expr);\n       if (!expr || expr == error_mark_node)\n \treturn expr;\n "}]}