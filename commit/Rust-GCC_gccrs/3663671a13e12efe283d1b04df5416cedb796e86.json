{"sha": "3663671a13e12efe283d1b04df5416cedb796e86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2MzY3MWExM2UxMmVmZTI4M2QxYjA0ZGY1NDE2Y2VkYjc5NmU4Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-11-15T19:32:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-11-15T19:32:52Z"}, "message": "Use existing helper for new std::string constructor\n\n\t* include/bits/basic_string.h: Reuse _If_sv alias template for new\n\tconstructor.\n\nFrom-SVN: r242453", "tree": {"sha": "f4ac9f6d27c55a5882e69c64c4732520c0e1f12f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ac9f6d27c55a5882e69c64c4732520c0e1f12f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3663671a13e12efe283d1b04df5416cedb796e86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3663671a13e12efe283d1b04df5416cedb796e86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3663671a13e12efe283d1b04df5416cedb796e86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3663671a13e12efe283d1b04df5416cedb796e86/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ae2ae3b84615e5e4504a1592af6a8d5579f17ca"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "4bba6a4e105e00e5271911a05e3ca2534c3718c8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3663671a13e12efe283d1b04df5416cedb796e86/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3663671a13e12efe283d1b04df5416cedb796e86/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3663671a13e12efe283d1b04df5416cedb796e86", "patch": "@@ -1,5 +1,8 @@\n 2016-11-15  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/basic_string.h: Reuse _If_sv alias template for new\n+\tconstructor.\n+\n \t* doc/xml/manual/intro.xml: Document LWG 2770 status. Remove entries\n \tfor 2742 and 2748.\n \t* doc/html/*: Regenerate."}, {"sha": "9af7bfb66f9e4ce2efbcda82bf08e09541356d4f", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3663671a13e12efe283d1b04df5416cedb796e86/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3663671a13e12efe283d1b04df5416cedb796e86/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=3663671a13e12efe283d1b04df5416cedb796e86", "patch": "@@ -585,16 +585,20 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t{ _M_construct(__beg, __end); }\n \n #if __cplusplus > 201402L\n+      template<typename _Tp, typename _Res>\n+\tusing _If_sv = enable_if_t<\n+\t  __and_<is_convertible<const _Tp&, __sv_type>,\n+\t\t __not_<is_convertible<const _Tp&, const _CharT*>>>::value,\n+\t  _Res>;\n+\n       /**\n        *  @brief  Construct string from a substring of a string_view.\n        *  @param  __t   Source string view.\n        *  @param  __pos The index of the first character to copy from __t.\n        *  @param  __n   The number of characters to copy from __t.\n        *  @param  __a   Allocator to use.\n        */\n-      template<typename _Tp, typename =\n-\t       _Require<is_convertible<_Tp, __sv_type>,\n-\t\t\t__not_<is_convertible<const _Tp&, const _CharT*>>>>\n+      template<typename _Tp, typename = _If_sv<_Tp, void>>\n \tbasic_string(const _Tp& __t, size_type __pos, size_type __n,\n \t\t     const _Alloc& __a = _Alloc())\n \t: basic_string(__sv_type(__t).substr(__pos, __n), __a) { }\n@@ -1252,12 +1256,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       append(__sv_type __sv)\n       { return this->append(__sv.data(), __sv.size()); }\n \n-      template<typename _Tp, typename _Res>\n-\tusing _If_sv = enable_if_t<\n-\t  __and_<is_convertible<const _Tp&, __sv_type>,\n-\t\t __not_<is_convertible<const _Tp&, const _CharT*>>>::value,\n-\t  _Res>;\n-\n       /**\n        *  @brief  Append a range of characters from a string_view.\n        *  @param __sv  The string_view to be appended from."}]}