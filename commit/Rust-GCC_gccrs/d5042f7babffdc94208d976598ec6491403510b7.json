{"sha": "d5042f7babffdc94208d976598ec6491403510b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUwNDJmN2JhYmZmZGM5NDIwOGQ5NzY1OThlYzY0OTE0MDM1MTBiNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-24T19:35:11Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-24T19:35:11Z"}, "message": "(field_byte_offset): Check for object_offset_in_bits\n> bitpos_int, and recompute object_offset_in_bytes if true.\n\nFrom-SVN: r14299", "tree": {"sha": "950b659c8abdd07a608c5f680262f96250956506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/950b659c8abdd07a608c5f680262f96250956506"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5042f7babffdc94208d976598ec6491403510b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5042f7babffdc94208d976598ec6491403510b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5042f7babffdc94208d976598ec6491403510b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5042f7babffdc94208d976598ec6491403510b7/comments", "author": null, "committer": null, "parents": [{"sha": "c4eec1924130f98fe935b09833096f20b6687842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4eec1924130f98fe935b09833096f20b6687842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4eec1924130f98fe935b09833096f20b6687842"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "c9457f5604521b456d826621e0e838b603995d71", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5042f7babffdc94208d976598ec6491403510b7/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5042f7babffdc94208d976598ec6491403510b7/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=d5042f7babffdc94208d976598ec6491403510b7", "patch": "@@ -2067,6 +2067,25 @@ field_byte_offset (decl)\n   /* Compute the offset of the containing object in bytes.  */\n   object_offset_in_bytes = object_offset_in_align_units * type_align_in_bytes;\n \n+  /* The above code assumes that the field does not cross an alignment\n+     boundary.  This can happen if PCC_BITFIELD_TYPE_MATTERS is not defined,\n+     or if the structure is packed.  If this happens, then we get an object\n+     which starts after the bitfield, which means that the bit offset is\n+     negative.  Gdb fails when given negative bit offsets.  We avoid this\n+     by recomputing using the first bit of the bitfield.  This will give\n+     us an object which does not completely contain the bitfield, but it\n+     will be aligned, and it will contain the first bit of the bitfield.  */\n+  if (object_offset_in_bits > bitpos_int)\n+    {\n+      deepest_bitpos = bitpos_int + 1;\n+      object_offset_in_bits\n+\t= ceiling (deepest_bitpos, type_align_in_bits) - type_size_in_bits;\n+      object_offset_in_align_units = (object_offset_in_bits\n+\t\t\t\t      / type_align_in_bits);\n+      object_offset_in_bytes = (object_offset_in_align_units\n+\t\t\t\t* type_align_in_bytes);\n+    }\n+\n   return object_offset_in_bytes;\n }\n "}]}