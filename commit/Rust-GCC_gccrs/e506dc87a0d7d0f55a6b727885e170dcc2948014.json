{"sha": "e506dc87a0d7d0f55a6b727885e170dcc2948014", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwNmRjODdhMGQ3ZDBmNTVhNmI3Mjc4ODVlMTcwZGNjMjk0ODAxNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2018-02-20T18:59:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-02-20T18:59:22Z"}, "message": "re PR middle-end/82123 (spurious -Wformat-overflow warning for converted vars)\n\n\tPR middle-end/82123\n\tPR tree-optimization/81592\n\tPR middle-end/79257\n\t* gimple-ssa-sprintf.c (format_integer): Query EVRP range analyzer\n\tfor range data rather than using global data.\n\n\t* gcc.dg/pr81592.c: New test.\n\t* gcc.dg/pr82123.c: New test.\n\nFrom-SVN: r257857", "tree": {"sha": "68c435e28c54aafe4bc241a5563b5ae14e3adb3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68c435e28c54aafe4bc241a5563b5ae14e3adb3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e506dc87a0d7d0f55a6b727885e170dcc2948014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e506dc87a0d7d0f55a6b727885e170dcc2948014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e506dc87a0d7d0f55a6b727885e170dcc2948014", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e506dc87a0d7d0f55a6b727885e170dcc2948014/comments", "author": null, "committer": null, "parents": [{"sha": "04946c6b905572f35f06de34460d20f05203a033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04946c6b905572f35f06de34460d20f05203a033", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04946c6b905572f35f06de34460d20f05203a033"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "77d0dc3a3de3ecfdb084175959002d590a8eb9c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e506dc87a0d7d0f55a6b727885e170dcc2948014", "patch": "@@ -3,6 +3,8 @@\n \tPR middle-end/82123\n \tPR tree-optimization/81592\n \tPR middle-end/79257\n+\t* gimple-ssa-sprintf.c (format_integer): Query EVRP range analyzer\n+\tfor range data rather than using global data.\n \t* gimple-ssa-sprintf.c (get_int_range): Query EVRP range analyzer for\n \trange data rather than using global data.\n \t* gimple-ssa-sprintf.c (get_int_range): Accept vr_values parameter"}, {"sha": "1189d9fea35e22eefe7072ada5a88688310e07ac", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=e506dc87a0d7d0f55a6b727885e170dcc2948014", "patch": "@@ -1451,12 +1451,13 @@ format_integer (const directive &dir, tree arg, vr_values *vr_values)\n     {\n       /* Try to determine the range of values of the integer argument\n \t (range information is not available for pointers).  */\n-      wide_int min, max;\n-      enum value_range_type range_type = get_range_info (arg, &min, &max);\n-      if (range_type == VR_RANGE)\n+      value_range *vr = vr_values->get_value_range (arg);\n+      if (vr->type == VR_RANGE\n+\t  && TREE_CODE (vr->min) == INTEGER_CST\n+\t  && TREE_CODE (vr->max) == INTEGER_CST)\n \t{\n-\t  argmin = wide_int_to_tree (argtype, min);\n-\t  argmax = wide_int_to_tree (argtype, max);\n+\t  argmin = vr->min;\n+\t  argmax = vr->max;\n \n \t  /* Set KNOWNRANGE if the argument is in a known subrange\n \t     of the directive's type and neither width nor precision\n@@ -1469,11 +1470,12 @@ format_integer (const directive &dir, tree arg, vr_values *vr_values)\n \t  res.argmin = argmin;\n \t  res.argmax = argmax;\n \t}\n-      else if (range_type == VR_ANTI_RANGE)\n+      else if (vr->type == VR_ANTI_RANGE)\n \t{\n \t  /* Handle anti-ranges if/when bug 71690 is resolved.  */\n \t}\n-      else if (range_type == VR_VARYING)\n+      else if (vr->type == VR_VARYING\n+\t       || vr->type == VR_UNDEFINED)\n \t{\n \t  /* The argument here may be the result of promoting the actual\n \t     argument to int.  Try to determine the type of the actual"}, {"sha": "035e48d16c5717119463e356eb5843f055207bdb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e506dc87a0d7d0f55a6b727885e170dcc2948014", "patch": "@@ -9,6 +9,8 @@\n         PR middle-end/82123\n         PR tree-optimization/81592\n         PR middle-end/79257\n+\t* gcc.dg/pr81592.c: New test.\n+\t* gcc.dg/pr82123.c: New test.\n \t* gcc.dg/builtin-unreachable-6.c: Turn off VRP.\n \n 2018-02-20  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "a37703af4970216c00219dbdf8a25638af6839c5", "filename": "gcc/testsuite/gcc.dg/pr81592.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81592.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81592.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81592.c?ref=e506dc87a0d7d0f55a6b727885e170dcc2948014", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wall -fno-strict-overflow  -Wstrict-overflow=2 -fsanitize=signed-integer-overflow\" } */\n+\n+#include <stdio.h>\n+\n+int proc_keys_show(long expiry, long now)\n+{\n+\tunsigned long timo;\n+\tchar xbuf[4];\n+\n+\tif (now < expiry) {\n+\t\ttimo = expiry - now;\n+\t\tif (timo < 60)\n+\t\t\tsprintf(xbuf, \"%lus\", timo);\n+\t}\n+\n+\treturn 0;\n+}\n+\n+"}, {"sha": "34109f1aec4f745d58e19523478cfe855110a416", "filename": "gcc/testsuite/gcc.dg/pr82123.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82123.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e506dc87a0d7d0f55a6b727885e170dcc2948014/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82123.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr82123.c?ref=e506dc87a0d7d0f55a6b727885e170dcc2948014", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wformat-overflow=1\" } */\n+\n+void acpi_gpiochip_request_interrupt(unsigned short s)\n+{\n+        char name[3];\n+\tunsigned int pin = s;\n+\n+\tif (pin <= 255)\n+\t\t__builtin_sprintf(name, \"%02X\", pin);\n+}\n+"}]}