{"sha": "92b47a321e14f98c524f6e67e7ecabad5afa7886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJiNDdhMzIxZTE0Zjk4YzUyNGY2ZTY3ZTdlY2FiYWQ1YWZhNzg4Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-23T17:17:09Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-23T18:12:39Z"}, "message": "libstdc++: Add configure checks for semaphores\n\nThis moves the checks for POSIX semaphores to configure time. As well as\nrequiring <semaphore.h> and SEM_VALUE_MAX, we also require the\nsem_timedwait function. That was only optional in POSIX 2001 (and is\nabsent on Darwin).\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4 (GLIBCXX_CHECK_GTHREADS): Check for\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* include/bits/semaphore_base.h (_GLIBCXX_HAVE_POSIX_SEMAPHORE):\n\tCheck autoconf macro instead of defining it here.", "tree": {"sha": "10cdaf5fed7b640620d001b92c0ed8aef9195a29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10cdaf5fed7b640620d001b92c0ed8aef9195a29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92b47a321e14f98c524f6e67e7ecabad5afa7886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b47a321e14f98c524f6e67e7ecabad5afa7886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92b47a321e14f98c524f6e67e7ecabad5afa7886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92b47a321e14f98c524f6e67e7ecabad5afa7886/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183ae52b226898cc34aa51d4153cf0c006212a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183ae52b226898cc34aa51d4153cf0c006212a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183ae52b226898cc34aa51d4153cf0c006212a8a"}], "stats": {"total": 105, "additions": 101, "deletions": 4}, "files": [{"sha": "a4a0bb8401815e547ce1ecaecc59c70380550ad2", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=92b47a321e14f98c524f6e67e7ecabad5afa7886", "patch": "@@ -4089,6 +4089,43 @@ AC_DEFUN([GLIBCXX_CHECK_GTHREADS], [\n     fi\n   fi\n \n+  AC_CHECK_HEADER(semaphore.h, [\n+    AC_MSG_CHECKING([for POSIX Semaphores and sem_timedwait])\n+    AC_TRY_COMPILE([\n+\t#include <unistd.h>\n+\t#include <semaphore.h>\n+\t#include <limits.h>\n+      ],\n+      [\n+\t#if !defined _POSIX_TIMEOUTS || _POSIX_TIMEOUTS <= 0\n+\t# error \"POSIX Timeouts option not supported\"\n+\t#elif !defined _POSIX_SEMAPHORES || _POSIX_SEMAPHORES <= 0\n+\t# error \"POSIX Semaphores option not supported\"\n+\t#else\n+\t#if defined SEM_VALUE_MAX\n+\tconstexpr int sem_value_max = SEM_VALUE_MAX;\n+\t#elif defined _POSIX_SEM_VALUE_MAX\n+\tconstexpr int sem_value_max = _POSIX_SEM_VALUE_MAX;\n+\t#else\n+\t# error \"SEM_VALUE_MAX not available\"\n+\t#endif\n+\tsem_t sem;\n+\tsem_init(&sem, 0, sem_value_max);\n+\tstruct timespec ts = { 0 };\n+\tsem_timedwait(&sem, &ts);\n+\t#endif\n+      ],\n+      [ac_have_posix_semaphore=yes],\n+      [ac_have_posix_semaphore=no])],\n+      [ac_have_posix_semaphore=no])\n+\n+  if test $ac_have_posix_semaphore = yes ; then\n+    AC_DEFINE(_GLIBCXX_HAVE_POSIX_SEMAPHORE,\n+\t      1,\n+\t      [Define to 1 if POSIX Semaphores with sem_timedwait are available in <semaphore.h>.])\n+  fi\n+  AC_MSG_RESULT([$ac_have_posix_semaphore])\n+\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   AC_LANG_RESTORE\n ])"}, {"sha": "72faabfb2c105ff427b43457f86bf796d4143018", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=92b47a321e14f98c524f6e67e7ecabad5afa7886", "patch": "@@ -872,6 +872,10 @@\n /* Define if gthreads library is available. */\n #undef _GLIBCXX_HAS_GTHREADS\n \n+/* Define to 1 if POSIX Semaphores with sem_timedwait are available in\n+   <semaphore.h>. */\n+#undef _GLIBCXX_HAVE_POSIX_SEMAPHORE\n+\n /* Define to 1 if a full hosted library is built, or 0 if freestanding. */\n #undef _GLIBCXX_HOSTED\n "}, {"sha": "a3d08310cf13cf401a66b106fb51caf1057440ba", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=92b47a321e14f98c524f6e67e7ecabad5afa7886", "patch": "@@ -76363,6 +76363,64 @@ fi\n     fi\n   fi\n \n+  ac_fn_cxx_check_header_mongrel \"$LINENO\" \"semaphore.h\" \"ac_cv_header_semaphore_h\" \"$ac_includes_default\"\n+if test \"x$ac_cv_header_semaphore_h\" = xyes; then :\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for POSIX Semaphores and sem_timedwait\" >&5\n+$as_echo_n \"checking for POSIX Semaphores and sem_timedwait... \" >&6; }\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+\t#include <unistd.h>\n+\t#include <semaphore.h>\n+\t#include <limits.h>\n+\n+int\n+main ()\n+{\n+\n+\t#if !defined _POSIX_TIMEOUTS || _POSIX_TIMEOUTS <= 0\n+\t# error \"POSIX Timeouts option not supported\"\n+\t#elif !defined _POSIX_SEMAPHORES || _POSIX_SEMAPHORES <= 0\n+\t# error \"POSIX Semaphores option not supported\"\n+\t#else\n+\t#if defined SEM_VALUE_MAX\n+\tconstexpr int sem_value_max = SEM_VALUE_MAX;\n+\t#elif defined _POSIX_SEM_VALUE_MAX\n+\tconstexpr int sem_value_max = _POSIX_SEM_VALUE_MAX;\n+\t#else\n+\t# error \"SEM_VALUE_MAX not available\"\n+\t#endif\n+\tsem_t sem;\n+\tsem_init(&sem, 0, sem_value_max);\n+\tstruct timespec ts = { 0 };\n+\tsem_timedwait(&sem, &ts);\n+\t#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  ac_have_posix_semaphore=yes\n+else\n+  ac_have_posix_semaphore=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  ac_have_posix_semaphore=no\n+fi\n+\n+\n+\n+  if test $ac_have_posix_semaphore = yes ; then\n+\n+$as_echo \"#define _GLIBCXX_HAVE_POSIX_SEMAPHORE 1\" >>confdefs.h\n+\n+  fi\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_have_posix_semaphore\" >&5\n+$as_echo \"$ac_have_posix_semaphore\" >&6; }\n+\n   CXXFLAGS=\"$ac_save_CXXFLAGS\"\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'"}, {"sha": "0692f95f24f21835993ad63e37cdfa02708c56ba", "filename": "libstdc++-v3/include/bits/semaphore_base.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92b47a321e14f98c524f6e67e7ecabad5afa7886/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h?ref=92b47a321e14f98c524f6e67e7ecabad5afa7886", "patch": "@@ -39,11 +39,9 @@\n \n #include <ext/numeric_traits.h>\n \n-#if __has_include(<semaphore.h>)\n+#ifdef _GLIBCXX_HAVE_POSIX_SEMAPHORE\n+# include <limits.h>\n # include <semaphore.h>\n-# if defined SEM_VALUE_MAX || _POSIX_SEM_VALUE_MAX\n-#  define _GLIBCXX_HAVE_POSIX_SEMAPHORE 1\n-# endif\n #endif\n \n #include <chrono>"}]}