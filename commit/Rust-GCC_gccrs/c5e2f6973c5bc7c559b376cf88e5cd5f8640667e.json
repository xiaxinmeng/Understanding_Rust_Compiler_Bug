{"sha": "c5e2f6973c5bc7c559b376cf88e5cd5f8640667e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVlMmY2OTczYzViYzdjNTU5YjM3NmNmODhlNWNkNWY4NjQwNjY3ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-04-30T09:41:22Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-04-30T09:41:22Z"}, "message": "x\n\nFrom-SVN: r13992", "tree": {"sha": "08911202719e423b886c2598fcceaf1fff4455d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08911202719e423b886c2598fcceaf1fff4455d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5e2f6973c5bc7c559b376cf88e5cd5f8640667e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e2f6973c5bc7c559b376cf88e5cd5f8640667e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e2f6973c5bc7c559b376cf88e5cd5f8640667e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e2f6973c5bc7c559b376cf88e5cd5f8640667e/comments", "author": null, "committer": null, "parents": [{"sha": "51ac666bcb92f0a63e633057ec9fc7ad26111b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ac666bcb92f0a63e633057ec9fc7ad26111b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ac666bcb92f0a63e633057ec9fc7ad26111b03"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "c9ec59dc62a141de9859c23da1e85fce6927a363", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5e2f6973c5bc7c559b376cf88e5cd5f8640667e/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5e2f6973c5bc7c559b376cf88e5cd5f8640667e/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=c5e2f6973c5bc7c559b376cf88e5cd5f8640667e", "patch": "@@ -223,8 +223,31 @@ Boston, MA 02111-1307, USA.  */\n #define BSS_SECTION_ASM_OP\t\".section\\t.bss\"\n #define CONST_SECTION_ASM_OP_32\t\"\\t.rdata\"\n #define CONST_SECTION_ASM_OP_64\t\".section\\t.rodata\"\n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,1,2,0,4\"\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,1,2,0,4\"\n+\n+/* The IRIX 6 assembler .section directive takes four additional args:\n+   section type, flags, entry size, and alignment.  The alignment of the\n+   .ctors and .dtors sections needs to be the same as the size of a pointer\n+   so that the linker doesn't add padding between elements.  */\n+#if defined (CRT_BEGIN) || defined (CRT_END)\n+\n+/* If we are included from crtstuff.c, these need to be plain strings.\n+   _MIPS_SZPTR is defined in SUBTARGET_CPP_SPEC above.  */\n+#if _MIPS_SZPTR == 64\n+#define CTORS_SECTION_ASM_OP \".section\\t.ctors,1,2,0,8\"\n+#define DTORS_SECTION_ASM_OP \".section\\t.dtors,1,2,0,8\"\n+#else /* _MIPS_SZPTR != 64 */\n+#define CTORS_SECTION_ASM_OP \".section\\t.ctors,1,2,0,4\"\n+#define DTORS_SECTION_ASM_OP \".section\\t.dtors,1,2,0,4\"\n+#endif /* _MIPS_SZPTR == 64 */\n+\n+#else /* ! (defined (CRT_BEGIN) || defined (CRT_END)) */\n+\n+/* If we are included from varasm.c, these need to depend on -mabi.  */\n+#define CTORS_SECTION_ASM_OP \\\n+  (TARGET_LONG64 ? \".section\\t.ctors,1,2,0,8\" : \".section\\t.ctors,1,2,0,4\")\n+#define DTORS_SECTION_ASM_OP \\\n+  (TARGET_LONG64 ? \".section\\t.dtors,1,2,0,8\" : \".section\\t.dtors,1,2,0,4\")\n+#endif /* defined (CRT_BEGIN) || defined (CRT_END) */\n \n /* A default list of other sections which we might be \"in\" at any given\n    time.  For targets that use additional sections (e.g. .tdesc) you"}]}