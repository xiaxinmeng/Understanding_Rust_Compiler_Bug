{"sha": "73c25d9b9d65cef556afa3782c58e47422bdea0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNjMjVkOWI5ZDY1Y2VmNTU2YWZhMzc4MmM1OGU0NzQyMmJkZWEwYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2008-05-20T12:49:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:49:20Z"}, "message": "testint.adb: New test.\n\n\t* gnat.dg/testint.adb: New test.\n\t* gnat.dg/modular1.adb: New test.\n\t* gnat.dg/test_iface_aggr.adb: New test.\n\t* gnat.dg/specs/tag2.ads: Adjust.\n\nFrom-SVN: r135635", "tree": {"sha": "0957f58a30035b3dc84eda870fdebef4214ecbcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0957f58a30035b3dc84eda870fdebef4214ecbcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73c25d9b9d65cef556afa3782c58e47422bdea0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c25d9b9d65cef556afa3782c58e47422bdea0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73c25d9b9d65cef556afa3782c58e47422bdea0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73c25d9b9d65cef556afa3782c58e47422bdea0b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08de96f033fdf32b2c354c4679cf34cb41194ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08de96f033fdf32b2c354c4679cf34cb41194ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08de96f033fdf32b2c354c4679cf34cb41194ddc"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "22155ecab85b41a3bd7f5568e8ec23997290bc03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73c25d9b9d65cef556afa3782c58e47422bdea0b", "patch": "@@ -1,3 +1,10 @@\n+2008-05-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat.dg/testint.adb: New test.\n+\t* gnat.dg/modular1.adb: New test.\n+\t* gnat.dg/test_iface_aggr.adb: New test.\n+\t* gnat.dg/specs/tag2.ads: Adjust.\n+\n 2008-05-20  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-sink-1.c: Adjust."}, {"sha": "b9fcde95fd697e5875323f96329ccac446fffc92", "filename": "gcc/testsuite/gnat.dg/modular1.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular1.adb?ref=73c25d9b9d65cef556afa3782c58e47422bdea0b", "patch": "@@ -0,0 +1,15 @@\n+--  { dg-do run }\n+\n+with Ada.Text_IO;\n+procedure Modular1 is\n+   type T1 is mod 9;\n+   package T1_IO is new Ada.Text_IO.Modular_IO(T1);\n+   X: T1 := 8;\n+   J1: constant := 5;\n+begin                                                                              for J2 in 5..5 loop\n+      pragma Assert(X*(2**J1) = X*(2**J2));\n+      if X*(2**J1) /= X*(2**J2) then\n+         raise Program_Error;\n+      end if;\n+   end loop;\n+end Modular1;"}, {"sha": "67b44978dbfccdba31471d82ef17ee341d1a06b2", "filename": "gcc/testsuite/gnat.dg/specs/tag2.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Ftag2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Ftag2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Ftag2.ads?ref=73c25d9b9d65cef556afa3782c58e47422bdea0b", "patch": "@@ -10,7 +10,7 @@ package tag2 is\n    type T6 is tagged;\n    protected type T1 is end T1; -- { dg-error \"must be a tagged type\" }\n    task type T2;                -- { dg-error \"must be a tagged type\" }\n-   type T3 is null record;      -- { dg-error \"must be tagged\" }\n+   type T3 is null record;      -- { dg-error \"must be a tagged type\" }\n    task type T4 is new I with end;\n    protected type T5 is new I with end;\n    type T6 is tagged null record;"}, {"sha": "85c1ceb0fbcfb17aa4b4b4b5142c5fca774d2e4d", "filename": "gcc/testsuite/gnat.dg/test_iface_aggr.adb", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_iface_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_iface_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_iface_aggr.adb?ref=73c25d9b9d65cef556afa3782c58e47422bdea0b", "patch": "@@ -0,0 +1,40 @@\n+--  { dg-do run }\n+\n+with Ada.Text_IO, Ada.Tags;\n+procedure Test_Iface_Aggr is\n+   package Pkg is\n+     type Iface is interface;\n+     function Constructor (S: Iface) return Iface'Class is abstract;\n+     procedure Do_Test (It : Iface'class);\n+     type Root is abstract tagged record\n+        Comp_1 : Natural := 0; \n+     end record;\n+     type DT_1 is new Root and Iface with record\n+         Comp_2, Comp_3 : Natural := 0;\n+     end record;\n+     function Constructor (S: DT_1) return Iface'Class;\n+     type DT_2 is new DT_1 with null record;  --  Test\n+     function Constructor (S: DT_2) return Iface'Class;\n+   end; \n+   package body Pkg is\n+      procedure Do_Test (It: in Iface'Class) is\n+         Obj : Iface'Class := Constructor (It);\n+         S   : String := Ada.Tags.External_Tag (Obj'Tag);\n+      begin\n+         null;\n+      end;\n+     function Constructor (S: DT_1) return Iface'Class is\n+     begin\n+       return Iface'Class(DT_1'(others => <>));\n+     end;\n+     function Constructor (S: DT_2) return Iface'Class is\n+       Result : DT_2;\n+     begin\n+       return Iface'Class(DT_2'(others => <>));    --  Test\n+     end;\n+   end;\n+   use Pkg;\n+   Obj: DT_2;\n+begin\n+   Do_Test (Obj);\n+end;"}, {"sha": "a5faf4a57ffd2bf9a0b7b6d4de250cd1a904d03d", "filename": "gcc/testsuite/gnat.dg/testint.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Ftestint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73c25d9b9d65cef556afa3782c58e47422bdea0b/gcc%2Ftestsuite%2Fgnat.dg%2Ftestint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftestint.adb?ref=73c25d9b9d65cef556afa3782c58e47422bdea0b", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnato\" }\n+\n+with Text_IO; use Text_IO;\n+procedure testint is\n+   function m1 (a, b : short_integer) return integer is\n+   begin                          \n+      return integer (a + b);\n+   end m1;\n+   f : integer;\n+begin   \n+   f := m1 (short_integer'Last, short_integer'Last);\n+end testint;"}]}