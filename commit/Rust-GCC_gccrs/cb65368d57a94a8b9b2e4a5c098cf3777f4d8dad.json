{"sha": "cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2NTM2OGQ1N2E5NGE4YjliMmU0YTVjMDk4Y2YzNzc3ZjRkOGRhZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-06-06T10:49:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:49:08Z"}, "message": "s-stoele.ads, [...]: Move inline_always subprograms earlier than their first call.\n\n2007-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* s-stoele.ads, s-stoele.adb: Move inline_always subprograms earlier\n\tthan their first call.\n\tAdd type Dummy_Communication_Block used in the generation of the pre-\n\tdefined dispatching primitive _disp_asynchronous_select.\n\t(Storage_Element): Put Pragma Universal_Aliasing on it.\n\nFrom-SVN: r125467", "tree": {"sha": "1d03d1d13e6397e09f20b29ba0b7da5ce2876a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d03d1d13e6397e09f20b29ba0b7da5ce2876a78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad/comments", "author": null, "committer": null, "parents": [{"sha": "4ce7ff881ab27cda15543985de467fd6c9611676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ce7ff881ab27cda15543985de467fd6c9611676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ce7ff881ab27cda15543985de467fd6c9611676"}], "stats": {"total": 68, "additions": 50, "deletions": 18}, "files": [{"sha": "3a4f97333d4095e4ed5cb9ad2da2885c54272fff", "filename": "gcc/ada/s-stoele.adb", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad/gcc%2Fada%2Fs-stoele.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad/gcc%2Fada%2Fs-stoele.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.adb?ref=cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,13 +31,30 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Unchecked_Conversion;\n+with Ada.Unchecked_Conversion;\n+\n package body System.Storage_Elements is\n \n    pragma Suppress (All_Checks);\n \n-   function To_Address is new Unchecked_Conversion (Storage_Offset, Address);\n-   function To_Offset  is new Unchecked_Conversion (Address, Storage_Offset);\n+   function To_Address is\n+     new Ada.Unchecked_Conversion (Storage_Offset, Address);\n+   function To_Offset  is\n+     new Ada.Unchecked_Conversion (Address, Storage_Offset);\n+\n+   --  Conversion to/from integers\n+   --  Those functions must be place first because they are inlined_always\n+   --  and are used in other subprograms defined in this unit.\n+\n+   function To_Integer (Value : Address) return Integer_Address is\n+   begin\n+      return Integer_Address (Value);\n+   end To_Integer;\n+\n+   function To_Address (Value : Integer_Address) return Address is\n+   begin\n+      return Address (Value);\n+   end To_Address;\n \n    --  Address arithmetic\n \n@@ -74,17 +91,4 @@ package body System.Storage_Elements is\n                   ((-To_Integer (Left)) mod Integer_Address (-Right));\n       end if;\n    end \"mod\";\n-\n-   --  Conversion to/from integers\n-\n-   function To_Address (Value : Integer_Address) return Address is\n-   begin\n-      return Address (Value);\n-   end To_Address;\n-\n-   function To_Integer (Value : Address) return Integer_Address is\n-   begin\n-      return Integer_Address (Value);\n-   end To_Integer;\n-\n end System.Storage_Elements;"}, {"sha": "2bc6c8bb20e4a908122ae7aad90333754d3f4166", "filename": "gcc/ada/s-stoele.ads", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad/gcc%2Fada%2Fs-stoele.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad/gcc%2Fada%2Fs-stoele.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.ads?ref=cb65368d57a94a8b9b2e4a5c098cf3777f4d8dad", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -64,6 +64,13 @@ package System.Storage_Elements is\n    type Storage_Element is mod 2 ** Storage_Unit;\n    for Storage_Element'Size use Storage_Unit;\n \n+   pragma Warnings (Off);\n+   pragma Universal_Aliasing (Storage_Element);\n+   pragma Warnings (On);\n+   --  This type is used by the expansion to implement aggregate copy.\n+   --  We turn off warnings for this pragma to deal with being compiled\n+   --  with an earlier GNAT version that does not recognize this pragma.\n+\n    type Storage_Array is\n      array (Storage_Offset range <>) of aliased Storage_Element;\n    for Storage_Array'Component_Size use Storage_Unit;\n@@ -111,4 +118,25 @@ package System.Storage_Elements is\n    pragma Inline_Always (To_Integer);\n    pragma Pure_Function (To_Integer);\n \n+   --  The following is a dummy record designed to mimic Communication_Block as\n+   --  defined in s-tpobop.ads:\n+\n+   --     type Communication_Block is record\n+   --        Self      : Task_Id;  --  An access type\n+   --        Enqueued  : Boolean := True;\n+   --        Cancelled : Boolean := False;\n+   --     end record;\n+\n+   --  The record is used in the construction of the predefined dispatching\n+   --  primitive _disp_asynchronous_select in order to avoid the import of\n+   --  System.Tasking.Protected_Objects.Operations. Note that this package\n+   --  is always imported in the presence of interfaces since the dispatch\n+   --  table uses entities from here.\n+\n+   type Dummy_Communication_Block is record\n+      Comp_1 : Address;  --  Address and access have the same size\n+      Comp_2 : Boolean;\n+      Comp_3 : Boolean;\n+   end record;\n+\n end System.Storage_Elements;"}]}