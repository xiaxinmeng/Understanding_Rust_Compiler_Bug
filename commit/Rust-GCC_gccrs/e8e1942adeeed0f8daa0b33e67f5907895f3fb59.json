{"sha": "e8e1942adeeed0f8daa0b33e67f5907895f3fb59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlMTk0MmFkZWVlZDBmOGRhYTBiMzNlNjdmNTkwNzg5NWYzZmI1OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1994-08-26T00:40:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1994-08-26T00:40:24Z"}, "message": "entered into RCS\n\nFrom-SVN: r7988", "tree": {"sha": "fa6b7543e0c1c4a98a5d48ef6b9054a4246d441e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa6b7543e0c1c4a98a5d48ef6b9054a4246d441e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8e1942adeeed0f8daa0b33e67f5907895f3fb59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e1942adeeed0f8daa0b33e67f5907895f3fb59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8e1942adeeed0f8daa0b33e67f5907895f3fb59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e1942adeeed0f8daa0b33e67f5907895f3fb59/comments", "author": null, "committer": null, "parents": [{"sha": "3ddde22680e07034d6a1604fd683e4bff5abf92a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ddde22680e07034d6a1604fd683e4bff5abf92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ddde22680e07034d6a1604fd683e4bff5abf92a"}], "stats": {"total": 56, "additions": 30, "deletions": 26}, "files": [{"sha": "e3a6761e21159661f537cba5cb21364d0c19daa5", "filename": "gcc/config.guess", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e1942adeeed0f8daa0b33e67f5907895f3fb59/gcc%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e1942adeeed0f8daa0b33e67f5907895f3fb59/gcc%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.guess?ref=e8e1942adeeed0f8daa0b33e67f5907895f3fb59", "patch": "@@ -270,81 +270,85 @@ esac\n #echo \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" 1>&2\n \n cat >dummy.c <<EOF\n-main()\n+main ()\n {\n #if defined (sony)\n #if defined (MIPSEB)\n   /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n      I don't know....  */\n   printf (\"mips-sony-bsd\\n\"); exit (0);\n #else\n-  printf(\"m68k-sony-newsos\\n\"); exit(0);\n+  printf (\"m68k-sony-newsos\\n\"); exit (0);\n #endif\n #endif\n \n #if defined (__arm) && defined (__acorn) && defined (__unix)\n-  printf(\"arm-acorn-riscix\"); exit (0);\n+  printf (\"arm-acorn-riscix\"); exit (0);\n #endif\n \n-#if defined(hp300) && !defined(hpux)\n-  printf(\"m68k-hp-bsd\\n\"); exit(0);\n+#if defined (hp300) && !defined (hpux)\n+  printf (\"m68k-hp-bsd\\n\"); exit (0);\n #endif\n \n-#if defined(NeXT)\n-#if !defined(__ARCHITECTURE__)\n+#if defined (NeXT)\n+#if !defined (__ARCHITECTURE__)\n #define __ARCHITECTURE__ \"m68k\"\n #endif\n   int version;\n   version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n   if (version==2)\n     {\n-      printf(\"%s-next-ns2\\n\", __ARCHITECTURE__);\n-      exit(0);\n+      printf (\"%s-next-ns2\\n\", __ARCHITECTURE__);\n+      exit (0);\n     }\n   else\n     {\n-      printf(\"%s-next-ns3\\n\", __ARCHITECTURE__);\n-      exit(0);\n+      printf (\"%s-next-ns3\\n\", __ARCHITECTURE__);\n+      exit (0);\n     }\n #endif\n \n #if defined (MULTIMAX) || defined (n16)\n #if defined (UMAXV)\n-  printf(\"ns32k-encore-sysv\\n\"); exit(0);\n+  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n #else\n #if defined (CMU)\n-  printf(\"ns32k-encore-mach\\n\"); exit(0);\n+  printf (\"ns32k-encore-mach\\n\"); exit (0);\n #else\n-  printf(\"ns32k-encore-bsd\\n\"); exit(0);\n+  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n #endif\n #endif\n #endif\n \n-#if defined(__386BSD__) || (defined(__bsdi__) && defined(__i386__))\n-  printf(\"i386-unknown-bsd\\n\"); exit(0);\n+#if defined (__386BSD__) || (defined (__bsdi__) && defined (__i386__))\n+  printf (\"i386-unknown-bsd\\n\"); exit (0);\n #endif\n \n-#if defined(sequent)\n-#if defined(i386)\n-  printf(\"i386-sequent-dynix\\n\"); exit(0);\n+#if defined (sequent)\n+#if defined (i386)\n+  printf (\"i386-sequent-dynix\\n\"); exit (0);\n #endif\n #if defined (ns32000)\n-  printf(\"ns32k-sequent-dynix\\n\"); exit(0);\n+  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n #endif\n #endif\n \n-#if defined(_SEQUENT_)\n-  printf(\"i386-sequent-ptx\\n\"); exit(0);\n+#if defined (_SEQUENT_)\n+  printf (\"i386-sequent-ptx\\n\"); exit (0);\n #endif\n \n-#if defined(vax)\n-#if !defined(ultrix)\n-  printf(\"vax-dec-bsd\\n\"); exit(0);\n+#if defined (vax)\n+#if !defined (ultrix)\n+  printf (\"vax-dec-bsd\\n\"); exit (0);\n #else\n-  printf(\"vax-dec-ultrix\\n\"); exit(0);\n+  printf (\"vax-dec-ultrix\\n\"); exit (0);\n #endif\n #endif\n \n+#if defined (alliant) && defined (i860)\n+  printf (\"i860-alliant-bsd\\n\"); exit (0);\n+#endif\n+\n   exit (1);\n }\n EOF"}]}