{"sha": "10d48e7cd94b998f2e806d12a878e221eb017979", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkNDhlN2NkOTRiOTk4ZjJlODA2ZDEyYTg3OGUyMjFlYjAxNzk3OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-09-15T17:50:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-09-15T17:50:15Z"}, "message": "alpha.c (alpha_expand_block_clear): Use HOST_WIDE_INT_M1U instead of ~(HOST_WIDE_INT)0 when shifting.\n\n\t* config/alpha/alpha.c (alpha_expand_block_clear): Use\n\tHOST_WIDE_INT_M1U instead of ~(HOST_WIDE_INT)0 when shifting.\n\nFrom-SVN: r227804", "tree": {"sha": "fbdcfe802e53fcc0e477f16b0f90095ba34ed2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbdcfe802e53fcc0e477f16b0f90095ba34ed2ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d48e7cd94b998f2e806d12a878e221eb017979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d48e7cd94b998f2e806d12a878e221eb017979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d48e7cd94b998f2e806d12a878e221eb017979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d48e7cd94b998f2e806d12a878e221eb017979/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e36f5c7c103e2d897fcbc9728fa98768b386f9a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "9acbc570057c253e394f4122e2068272a67fb5ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d48e7cd94b998f2e806d12a878e221eb017979/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d48e7cd94b998f2e806d12a878e221eb017979/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10d48e7cd94b998f2e806d12a878e221eb017979", "patch": "@@ -1,3 +1,8 @@\n+2015-09-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (alpha_expand_block_clear): Use\n+\tHOST_WIDE_INT_M1U instead of ~(HOST_WIDE_INT)0 when shifting.\n+\n 2015-09-15  Jeff Law  <law@redhat.com>\n \n         PR tree-optimization/47679"}, {"sha": "cae819fa782849b1e4d47870cc85eb7023c9a118", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d48e7cd94b998f2e806d12a878e221eb017979/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d48e7cd94b998f2e806d12a878e221eb017979/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=10d48e7cd94b998f2e806d12a878e221eb017979", "patch": "@@ -4057,10 +4057,10 @@ alpha_expand_block_clear (rtx operands[])\n \t  mem = adjust_address (orig_dst, mode, ofs - inv_alignofs);\n \t  set_mem_alias_set (mem, 0);\n \n-\t  mask = ~(~(HOST_WIDE_INT)0 << (inv_alignofs * 8));\n+\t  mask = ~(HOST_WIDE_INT_M1U << (inv_alignofs * 8));\n \t  if (bytes < alignofs)\n \t    {\n-\t      mask |= ~(HOST_WIDE_INT)0 << ((inv_alignofs + bytes) * 8);\n+\t      mask |= HOST_WIDE_INT_M1U << ((inv_alignofs + bytes) * 8);\n \t      ofs += bytes;\n \t      bytes = 0;\n \t    }\n@@ -4206,7 +4206,7 @@ alpha_expand_block_clear (rtx operands[])\n \t  mem = adjust_address (orig_dst, DImode, ofs);\n \t  set_mem_alias_set (mem, 0);\n \n-\t  mask = ~(HOST_WIDE_INT)0 << (bytes * 8);\n+\t  mask = HOST_WIDE_INT_M1U << (bytes * 8);\n \n \t  tmp = expand_binop (DImode, and_optab, mem, GEN_INT (mask),\n \t\t\t      NULL_RTX, 1, OPTAB_WIDEN);\n@@ -4222,7 +4222,7 @@ alpha_expand_block_clear (rtx operands[])\n \t  mem = adjust_address (orig_dst, SImode, ofs);\n \t  set_mem_alias_set (mem, 0);\n \n-\t  mask = ~(HOST_WIDE_INT)0 << (bytes * 8);\n+\t  mask = HOST_WIDE_INT_M1U << (bytes * 8);\n \n \t  tmp = expand_binop (SImode, and_optab, mem, GEN_INT (mask),\n \t\t\t      NULL_RTX, 1, OPTAB_WIDEN);"}]}