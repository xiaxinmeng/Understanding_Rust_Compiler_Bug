{"sha": "c60845f0ac379b0e0650ee66cbd1c17417842772", "node_id": "C_kwDOANBUbNoAKGM2MDg0NWYwYWMzNzliMGUwNjUwZWU2NmNiZDFjMTc0MTc4NDI3NzI", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@adacore.com", "date": "2021-12-21T21:47:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-11T13:24:44Z"}, "message": "[Ada] Document LLVM-specific flags\n\ngcc/ada/\n\n\t* debug.adb: Add documentation for new -gnatd_u and old -gnatd_R\n\tflags used for GNAT LLVM and its CCG.", "tree": {"sha": "fd749fa7baabfebfd8588703c995318874a86246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd749fa7baabfebfd8588703c995318874a86246"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c60845f0ac379b0e0650ee66cbd1c17417842772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60845f0ac379b0e0650ee66cbd1c17417842772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60845f0ac379b0e0650ee66cbd1c17417842772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60845f0ac379b0e0650ee66cbd1c17417842772/comments", "author": {"login": "richardkenner", "id": 56170968, "node_id": "MDQ6VXNlcjU2MTcwOTY4", "avatar_url": "https://avatars.githubusercontent.com/u/56170968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardkenner", "html_url": "https://github.com/richardkenner", "followers_url": "https://api.github.com/users/richardkenner/followers", "following_url": "https://api.github.com/users/richardkenner/following{/other_user}", "gists_url": "https://api.github.com/users/richardkenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardkenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardkenner/subscriptions", "organizations_url": "https://api.github.com/users/richardkenner/orgs", "repos_url": "https://api.github.com/users/richardkenner/repos", "events_url": "https://api.github.com/users/richardkenner/events{/privacy}", "received_events_url": "https://api.github.com/users/richardkenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4180f273c59cf9d01b675830bce1fe6825b1008c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4180f273c59cf9d01b675830bce1fe6825b1008c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4180f273c59cf9d01b675830bce1fe6825b1008c"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "8a0ba0213bbd832f6009c473c67a3b74c30fda8d", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c60845f0ac379b0e0650ee66cbd1c17417842772/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c60845f0ac379b0e0650ee66cbd1c17417842772/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=c60845f0ac379b0e0650ee66cbd1c17417842772", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -159,7 +159,7 @@ package body Debug is\n    --  d_r\n    --  d_s  Stop elaboration checks on synchronous suspension\n    --  d_t  In LLVM-based CCG, dump LLVM IR after transformations are done\n-   --  d_u\n+   --  d_u  In LLVM-based CCG, dump flows\n    --  d_v  Enable additional checks and debug printouts in Atree\n    --  d_w\n    --  d_x  Disable inline expansion of Image attribute for enumeration types\n@@ -183,7 +183,7 @@ package body Debug is\n    --  d_O\n    --  d_P\n    --  d_Q\n-   --  d_R\n+   --  d_R  For LLVM, dump the representation of records\n    --  d_S\n    --  d_T  Output trace information on invocation path recording\n    --  d_U  Disable prepending messages with \"error:\".\n@@ -1001,6 +1001,9 @@ package body Debug is\n    --       after the pass that does transformations to the IR into a\n    --       filename ending with .trans.ll.\n \n+   --  d_u  In the LLVM-based CCG, dump flows, both when originally created\n+   --       and after transformations.\n+\n    --  d_v  Enable additional checks and debug printouts in Atree\n \n    --  d_x  The compiler does not expand in line the Image attribute for user-\n@@ -1024,6 +1027,9 @@ package body Debug is\n    --       it is checked, and the progress of the recursive trace through\n    --       elaboration calls at compile time.\n \n+   --  d_R  In the LLVM backend, output the internal representation of\n+   --       each record\n+\n    --  d_T  The compiler outputs trace information to standard output whenever\n    --       an invocation path is recorded.\n "}]}