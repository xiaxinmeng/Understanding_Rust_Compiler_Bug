{"sha": "20ce6adefb26f000e84b92cc3206e0ac85011a24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBjZTZhZGVmYjI2ZjAwMGU4NGI5MmNjMzIwNmUwYWM4NTAxMWEyNA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-06-04T15:54:48Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-06-04T15:54:48Z"}, "message": "re PR fortran/85981 (ICE in gfc_trans_string_copy, at fortran/trans-expr.c:6539)\n\n2018-06-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/85981\n\t* resolve.c (resolve_allocate_deallocate): Check errmsg is default\n\tcharacter kind.\n\n2018-06-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/85981\n\t* gfortran.dg/allocate_alloc_opt_14.f90: New test.\n\t* gfortran.dg/allocate_alloc_opt_1.f90: Update error string.\n\t* gfortran.dg/allocate_stat_2.f90: Ditto.\n\t* gfortran.dg/deallocate_alloc_opt_1.f90: Ditto.\n\nFrom-SVN: r261154", "tree": {"sha": "c54a1826abfacb95752f85aa19275d2f4bd33f8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c54a1826abfacb95752f85aa19275d2f4bd33f8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20ce6adefb26f000e84b92cc3206e0ac85011a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20ce6adefb26f000e84b92cc3206e0ac85011a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20ce6adefb26f000e84b92cc3206e0ac85011a24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20ce6adefb26f000e84b92cc3206e0ac85011a24/comments", "author": null, "committer": null, "parents": [{"sha": "37cca345b487d1e43c99ade1caf76994e50f0045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37cca345b487d1e43c99ade1caf76994e50f0045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37cca345b487d1e43c99ade1caf76994e50f0045"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "079a306c451a3b90df07859199e54b96bf4b4d87", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -1,3 +1,9 @@\n+2018-06-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/85981\n+\t* resolve.c (resolve_allocate_deallocate): Check errmsg is default\n+\tcharacter kind.\n+\n 2018-06-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/36497"}, {"sha": "3d53ce56699e38956cf7a525f087bf1abcbef780", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -7767,12 +7767,17 @@ resolve_allocate_deallocate (gfc_code *code, const char *fcn)\n       gfc_check_vardef_context (errmsg, false, false, false,\n \t\t\t\t_(\"ERRMSG variable\"));\n \n+      /* F18:R928  alloc-opt             is ERRMSG = errmsg-variable\n+\t F18:R930  errmsg-variable       is scalar-default-char-variable\n+\t F18:R906  default-char-variable is variable\n+\t F18:C906  default-char-variable shall be default character.  */\n       if ((errmsg->ts.type != BT_CHARACTER\n \t   && !(errmsg->ref\n \t\t&& (errmsg->ref->type == REF_ARRAY\n \t\t    || errmsg->ref->type == REF_COMPONENT)))\n-\t  || errmsg->rank > 0 )\n-\tgfc_error (\"Errmsg-variable at %L must be a scalar CHARACTER \"\n+\t  || errmsg->rank > 0\n+\t  || errmsg->ts.kind != gfc_default_character_kind)\n+\tgfc_error (\"ERRMSG variable at %L shall be a scalar default CHARACTER \"\n \t\t   \"variable\", &errmsg->where);\n \n       for (p = code->ext.alloc.list; p; p = p->next)"}, {"sha": "e27cf415b704965017522f3be9264cbe997dad9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -1,3 +1,11 @@\n+2018-06-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/85981\n+\t* gfortran.dg/allocate_alloc_opt_14.f90: New test.\n+\t* gfortran.dg/allocate_alloc_opt_1.f90: Update error string.\n+\t* gfortran.dg/allocate_stat_2.f90: Ditto.\n+\t* gfortran.dg/deallocate_alloc_opt_1.f90: Ditto.\n+\n 2018-06-04  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.target/aarch64/sve/extract_5.c: New test."}, {"sha": "12005a6cc16cd5a3e0804772896a6e45206a10a3", "filename": "gcc/testsuite/gfortran.dg/allocate_alloc_opt_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_1.f90?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -22,7 +22,7 @@ program a\n   allocate(i(2))) ! { dg-error \"Syntax error in ALLOCATE\" }\n   allocate(i(2), errmsg=err, errmsg=err) ! { dg-error \"Redundant ERRMSG\" }\n   allocate(i(2), errmsg=err) ! { dg-warning \"useless without a STAT\" }\n-  allocate(i(2), stat=j, errmsg=x) ! { dg-error \"must be a scalar CHARACTER\" }\n+  allocate(i(2), stat=j, errmsg=x) ! { dg-error \"shall be a scalar default CHARACTER\" }\n \n   allocate(err) ! { dg-error \"neither a data pointer nor an allocatable\" }\n "}, {"sha": "6de43a7597fe4830578658a13dee4ef8c34667af", "filename": "gcc/testsuite/gfortran.dg/allocate_alloc_opt_14.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_alloc_opt_14.f90?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+program p\n+   integer, allocatable :: arr(:)\n+   integer :: stat\n+   character(len=128, kind=4) :: errmsg = ' '\n+   allocate (arr(3), stat=stat, errmsg=errmsg)  ! { dg-error \"shall be a scalar default CHARACTER\" }\n+   print *, allocated(arr), stat, trim(errmsg)\n+end"}, {"sha": "a28a253604642650c19ed6a77e1fd49a4b1ebb99", "filename": "gcc/testsuite/gfortran.dg/allocate_stat_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_stat_2.f90?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -5,6 +5,6 @@ program main\n   character(len=30), dimension(2) :: er\n   integer, dimension (:), allocatable :: a\n   allocate (a (16), stat = ier) ! { dg-error \"must be a scalar INTEGER\" }\n-  allocate (a (14), stat=ier(1),errmsg=er) ! { dg-error \"must be a scalar CHARACTER\" }\n+  allocate (a (14), stat=ier(1),errmsg=er) ! { dg-error \"shall be a scalar default CHARACTER\" }\n end\n "}, {"sha": "58790ebfb589f74b4005c1e3c8e567f37d9833ba", "filename": "gcc/testsuite/gfortran.dg/deallocate_alloc_opt_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_alloc_opt_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20ce6adefb26f000e84b92cc3206e0ac85011a24/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_alloc_opt_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeallocate_alloc_opt_1.f90?ref=20ce6adefb26f000e84b92cc3206e0ac85011a24", "patch": "@@ -22,7 +22,7 @@ program a\n   deallocate(i)) ! { dg-error \"Syntax error in DEALLOCATE\" }\n   deallocate(i, errmsg=err, errmsg=err) ! { dg-error \"Redundant ERRMSG\" }\n   deallocate(i, errmsg=err) ! { dg-warning \"useless without a STAT\" }\n-  deallocate(i, stat=j, errmsg=x) ! { dg-error \"must be a scalar CHARACTER\" }\n+  deallocate(i, stat=j, errmsg=x) ! { dg-error \"shall be a scalar default CHARACTER\" }\n \n   deallocate(err) ! { dg-error \"nonprocedure pointer nor an allocatable\" }\n "}]}