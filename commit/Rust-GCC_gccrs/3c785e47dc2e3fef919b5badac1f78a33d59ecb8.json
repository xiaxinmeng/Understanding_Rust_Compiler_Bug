{"sha": "3c785e47dc2e3fef919b5badac1f78a33d59ecb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M3ODVlNDdkYzJlM2ZlZjkxOWI1YmFkYWMxZjc4YTMzZDU5ZWNiOA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-07-07T15:08:34Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-07-07T15:08:34Z"}, "message": "reload1.c (choose_reload_regs): Don't set reload_override_in if EQUIV is clobbered in INSN and the reload is...\n\n\t* reload1.c (choose_reload_regs): Don't set reload_override_in\n\tif EQUIV is clobbered in INSN and the reload is done after INSN.\n\nFrom-SVN: r20999", "tree": {"sha": "d857895d3e368f0acb992440ff5a252012530d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d857895d3e368f0acb992440ff5a252012530d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c785e47dc2e3fef919b5badac1f78a33d59ecb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c785e47dc2e3fef919b5badac1f78a33d59ecb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c785e47dc2e3fef919b5badac1f78a33d59ecb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c785e47dc2e3fef919b5badac1f78a33d59ecb8/comments", "author": null, "committer": null, "parents": [{"sha": "54303b5cb3076f7bae9102c08b59d57b1a9f5104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54303b5cb3076f7bae9102c08b59d57b1a9f5104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54303b5cb3076f7bae9102c08b59d57b1a9f5104"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "226d54c646e0dc3b3fad4c647c9c705f7c40e6dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c785e47dc2e3fef919b5badac1f78a33d59ecb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c785e47dc2e3fef919b5badac1f78a33d59ecb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c785e47dc2e3fef919b5badac1f78a33d59ecb8", "patch": "@@ -1,3 +1,8 @@\n+Tue Jul  7 23:03:34 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* reload1.c (choose_reload_regs): Don't set reload_override_in\n+\tif EQUIV is clobbered in INSN and the reload is done after INSN.\n+\n Tue Jul  7 21:23:36 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* expr.c (emit_queue): If emitting a SEQUENCE, set QUEUED_INSN"}, {"sha": "b6c0d8d85090e2576372330eabd3707cd9229508", "filename": "gcc/reload1.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c785e47dc2e3fef919b5badac1f78a33d59ecb8/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c785e47dc2e3fef919b5badac1f78a33d59ecb8/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=3c785e47dc2e3fef919b5badac1f78a33d59ecb8", "patch": "@@ -5826,14 +5826,30 @@ choose_reload_regs (insn, avoid_return_reg)\n \t\t      break;\n \t\t    }\n \n-\t      /* JRV: If the equiv register we have found is\n-\t\t explicitly clobbered in the current insn, mark but\n-\t\t don't use, as above.  */\n+\t      /* If the equiv register we have found is explicitly clobbered\n+\t\t in the current insn, it depends on the reload type if we\n+\t\t can use it, use it for reload_override_in, or not at all.\n+\t\t In particular, we then can't use EQUIV for a\n+\t\t RELOAD_FOR_OUTPUT_ADDRESS reload.  */\n \n \t      if (equiv != 0 && regno_clobbered_p (regno, insn))\n \t\t{\n-\t\t  reload_override_in[r] = equiv;\n-\t\t  equiv = 0;\n+\t\t  switch (reload_when_needed[r])\n+\t\t    {\n+\t\t    case RELOAD_FOR_OTHER_ADDRESS:\n+\t\t    case RELOAD_FOR_INPADDR_ADDRESS:\n+\t\t    case RELOAD_FOR_INPUT_ADDRESS:\n+\t\t    case RELOAD_FOR_OPADDR_ADDR:\n+\t\t      break;\n+\t\t    case RELOAD_OTHER:\n+\t\t    case RELOAD_FOR_INPUT:\n+\t\t    case RELOAD_FOR_OPERAND_ADDRESS:\n+\t\t      reload_override_in[r] = equiv;\n+\t\t      /* Fall through. */\n+\t\t    default:\n+\t\t      equiv = 0;\n+\t\t      break;\n+\t\t    }\n \t\t}\n \n \t      /* If we found an equivalent reg, say no code need be generated"}]}