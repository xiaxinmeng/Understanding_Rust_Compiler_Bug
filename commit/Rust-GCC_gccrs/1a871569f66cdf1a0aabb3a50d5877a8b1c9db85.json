{"sha": "1a871569f66cdf1a0aabb3a50d5877a8b1c9db85", "node_id": "C_kwDOANBUbNoAKDFhODcxNTY5ZjY2Y2RmMWEwYWFiYjNhNTBkNTg3N2E4YjFjOWRiODU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-10-12T13:11:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-12T13:11:15Z"}, "message": "Merge #1570\n\n1570: Apply #1560 master r=CohenArthur a=CohenArthur\n\nSame as #1560, but in a single more descriptive commit. I'll hold on doing the other fixes until you're okay with the process `@philberty` \n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "3635bbbc3e2f8b599c1f108587ab8377be9111f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3635bbbc3e2f8b599c1f108587ab8377be9111f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjRrzzCRBK7hj4Ov3rIwAAn3wIAC6ZOwTEGoHnQA+uSRDqnoIv\ngioChtXIPj6LqsYbR5GNQvSVScIBh5k8NaY2kB8uBHUb6gtKXujFfQpyS9vZutQP\n2D3BaD79PJBkJR4tFHGbLQC1sE7BLXBEiV//6h3Ng3gyQoosFd0l5kklt/doYU4I\n0tcv6JiPpIbwYtfYSfMaj591OmqAddv2XUMa+4WqmFrBumQ6GYk36LCFT8/6cLvp\nVD8hlFajvdnZfCY/txQWsEtad24bmfPaTjEmZZ1B7j9MUpF8eMdG3Z5eEcg7dLn7\nFzZ83EiGWuuKmUnLTYyfAsgGuMPTxNhHZh5NRey/MQGc7KFhQfK1Fn4WvMZv9sA=\n=YjPo\n-----END PGP SIGNATURE-----\n", "payload": "tree 3635bbbc3e2f8b599c1f108587ab8377be9111f7\nparent 3e7320510e7bb774295ecbd8089a9f51d6475959\nparent 4134055f1855ea5293fa598fc3503e07a11d1d9d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1665580275 +0000\ncommitter GitHub <noreply@github.com> 1665580275 +0000\n\nMerge #1570\n\n1570: Apply #1560 master r=CohenArthur a=CohenArthur\n\nSame as #1560, but in a single more descriptive commit. I'll hold on doing the other fixes until you're okay with the process `@philberty` \n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e7320510e7bb774295ecbd8089a9f51d6475959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7320510e7bb774295ecbd8089a9f51d6475959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7320510e7bb774295ecbd8089a9f51d6475959"}, {"sha": "4134055f1855ea5293fa598fc3503e07a11d1d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4134055f1855ea5293fa598fc3503e07a11d1d9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4134055f1855ea5293fa598fc3503e07a11d1d9d"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "40297ad314d1498c3f8a21c3afd05ce721eeff93", "filename": "gcc/rust/lang.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85/gcc%2Frust%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85/gcc%2Frust%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang.opt?ref=1a871569f66cdf1a0aabb3a50d5877a8b1c9db85", "patch": "@@ -39,19 +39,19 @@ Rust\n ; Documented in c.opt\n \n Wunused-variable\n-Rust Var(warn_unused_variable) Init(1) Warning\n+Rust Var(warn_unused_variable) Warning\n ; documented in common.opt\n \n Wunused-const-variable\n Rust Warning Alias(Wunused-const-variable=, 2, 0)\n Warn when a const variable is unused.\n \n Wunused-const-variable=\n-Rust Joined RejectNegative UInteger Var(warn_unused_const_variable) Init(1) Warning LangEnabledBy(Rust,Wunused-variable, 1, 0) IntegerRange(0, 2)\n+Rust Joined RejectNegative UInteger Var(warn_unused_const_variable) Warning LangEnabledBy(Rust,Wunused-variable, 1, 0) IntegerRange(0, 2)\n Warn when a const variable is unused.\n \n Wunused-result\n-Rust Var(warn_unused_result) Init(1) Warning\n+Rust Var(warn_unused_result) Warning\n Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value.\n \n frust-crate="}, {"sha": "34778c8a80a03a4d3ef0b622c78455d8f79b71f5", "filename": "gcc/rust/rust-lang.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85/gcc%2Frust%2Frust-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a871569f66cdf1a0aabb3a50d5877a8b1c9db85/gcc%2Frust%2Frust-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-lang.cc?ref=1a871569f66cdf1a0aabb3a50d5877a8b1c9db85", "patch": "@@ -160,6 +160,13 @@ grs_langhook_init_options_struct (struct gcc_options *opts)\n    * builtins */\n   opts->x_flag_wrapv = 1;\n \n+  /* We need to warn on unused variables by default */\n+  opts->x_warn_unused_variable = 1;\n+  /* For const variables too */\n+  opts->x_warn_unused_const_variable = 1;\n+  /* And finally unused result for #[must_use] */\n+  opts->x_warn_unused_result = 1;\n+\n   // nothing yet - used by frontends to change specific options for the language\n   Rust::Session::get_instance ().init_options ();\n }"}]}