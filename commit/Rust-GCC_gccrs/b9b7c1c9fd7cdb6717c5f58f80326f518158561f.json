{"sha": "b9b7c1c9fd7cdb6717c5f58f80326f518158561f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliN2MxYzlmZDdjZGI2NzE3YzVmNThmODAzMjZmNTE4MTU4NTYxZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-03-10T19:08:02Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-03-10T19:08:02Z"}, "message": "(movdi define_split, movdf define_split): Correct indentation and formatting.\n\n(movdi define_split, movdf define_split): Correct indentation\nand formatting.  Make the condition fail if an operand is a MEM\nwith an auto-inc address.\n\nFrom-SVN: r9160", "tree": {"sha": "7a03a417cd44f464b262aabb87fa6a9eec215165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a03a417cd44f464b262aabb87fa6a9eec215165"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9b7c1c9fd7cdb6717c5f58f80326f518158561f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b7c1c9fd7cdb6717c5f58f80326f518158561f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9b7c1c9fd7cdb6717c5f58f80326f518158561f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9b7c1c9fd7cdb6717c5f58f80326f518158561f/comments", "author": null, "committer": null, "parents": [{"sha": "41b455df14d4460e1becf590b7b841145f5b8204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b455df14d4460e1becf590b7b841145f5b8204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b455df14d4460e1becf590b7b841145f5b8204"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "df475e4ed91c0a99e5c09a87d301fa4e415e8f62", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9b7c1c9fd7cdb6717c5f58f80326f518158561f/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9b7c1c9fd7cdb6717c5f58f80326f518158561f/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=b9b7c1c9fd7cdb6717c5f58f80326f518158561f", "patch": "@@ -1064,17 +1064,24 @@\n \n ;; If the output is a register and the input is memory, we have to be careful\n ;; and see which word needs to be loaded first.\n-;;\n+\n+;; ??? Why are Q constraint addresses rejected here but not in the DFmode\n+;; split pattern?\n+\n (define_split\n   [(set (match_operand:DI 0 \"general_movdst_operand\" \"\")\n \t(match_operand:DI 1 \"general_movsrc_operand\" \"\"))]\n- \"!  (GET_CODE (operands[0]) == REG\n-\t         && REGNO (operands[0]) >= FIRST_PSEUDO_REGISTER)\n+ \"! (GET_CODE (operands[0]) == REG\n+     && REGNO (operands[0]) >= FIRST_PSEUDO_REGISTER)\n    && ! (GET_CODE (operands[1]) == REG\n          && REGNO (operands[1]) >= FIRST_PSEUDO_REGISTER)\n    && ! (GET_CODE (operands[0]) == REG && GET_CODE (operands[1]) == REG\n-   && ! reload_completed\n-   && reg_overlap_mentioned_p (operands[0], operands[1]))\n+\t && ! reload_completed\n+\t && reg_overlap_mentioned_p (operands[0], operands[1]))\n+   && ! (GET_CODE (operands[0]) == MEM\n+\t && GET_CODE (XEXP (operands[0], 0)) == PRE_DEC)\n+   && ! (GET_CODE (operands[1]) == MEM\n+\t && GET_CODE (XEXP (operands[1], 0)) == POST_INC)\n    && ! EXTRA_CONSTRAINT_Q (operands[1])\"\n   [(set (match_dup 2) (match_dup 3))\n    (set (match_dup 4) (match_dup 5))]\n@@ -1123,13 +1130,17 @@\n (define_split\n   [(set (match_operand:DF 0 \"general_movdst_operand\" \"\")\n \t(match_operand:DF 1 \"general_movsrc_operand\" \"\"))]\n- \"!  (GET_CODE (operands[0]) == REG\n-\t         && REGNO (operands[0]) >= FIRST_PSEUDO_REGISTER)\n+ \"! (GET_CODE (operands[0]) == REG\n+     && REGNO (operands[0]) >= FIRST_PSEUDO_REGISTER)\n    && ! (GET_CODE (operands[1]) == REG\n          && REGNO (operands[1]) >= FIRST_PSEUDO_REGISTER)\n    && ! (GET_CODE (operands[0]) == REG && GET_CODE (operands[1]) == REG\n-   && ! reload_completed\n-   && reg_overlap_mentioned_p (operands[0], operands[1]))\"\n+\t && ! reload_completed\n+\t && reg_overlap_mentioned_p (operands[0], operands[1]))\n+   && ! (GET_CODE (operands[0]) == MEM\n+\t && GET_CODE (XEXP (operands[0], 0)) == PRE_DEC)\n+   && ! (GET_CODE (operands[1]) == MEM\n+\t && GET_CODE (XEXP (operands[1], 0)) == POST_INC)\"\n   [(set (match_dup 2) (match_dup 3))\n    (set (match_dup 4) (match_dup 5))]\n   \"\n@@ -1155,7 +1166,6 @@\n     FAIL;\n }\")\n \n-\n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"general_movdst_operand\" \"\")\n \t(match_operand:DF 1 \"general_movsrc_operand\" \"\"))]"}]}