{"sha": "86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY1NjFiYjYyYjBjNDBlY2M2YTdkMzBjNmU1OWE4YTExMzlhZTExZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-28T18:49:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-28T18:49:51Z"}, "message": "re PR lto/44312 (lto-streamer-in.c: In function \u2018lto_read_tree\u2019: warning: \u2018fv.mode\u2019 is used uninitialized in this function)\n\n2010-05-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/44312\n\t* lto-streamer-in.c (unpack_ts_fixed_cst_value_fields):\n\tStream fixed-point constants mode.\n\t(unpack_ts_type_value_fields): Fix width of TYPE_MODE\n\tand TYPE_PRECISION.\n\t* lto-streamer-out.c (pack_ts_fixed_cst_value_fields):\n\tStream fixed-point constants mode.\n\t(pack_ts_function_decl_value_fields): Fix width of TYPE_MODE\n\tand TYPE_PRECISION.\n\nFrom-SVN: r159993", "tree": {"sha": "a257ccf3f4392ed6e69eaa8a19d53a5dd19d8f65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a257ccf3f4392ed6e69eaa8a19d53a5dd19d8f65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a74c7586cbf24b875c05507e6861070e74ffb69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a74c7586cbf24b875c05507e6861070e74ffb69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a74c7586cbf24b875c05507e6861070e74ffb69"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "1406ba2c78d37fb9fd9d7b1968e1c2cf364c8d78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "patch": "@@ -1,3 +1,15 @@\n+2010-05-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/44312\n+\t* lto-streamer-in.c (unpack_ts_fixed_cst_value_fields):\n+\tStream fixed-point constants mode.\n+\t(unpack_ts_type_value_fields): Fix width of TYPE_MODE\n+\tand TYPE_PRECISION.\n+\t* lto-streamer-out.c (pack_ts_fixed_cst_value_fields):\n+\tStream fixed-point constants mode.\n+\t(pack_ts_function_decl_value_fields): Fix width of TYPE_MODE\n+\tand TYPE_PRECISION.\n+\n 2010-05-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* tree-scalar-evolution.c (set_nb_iterations_in_loop): Inlined in the"}, {"sha": "f562d9c38a30371fe47c3b0b46d75e6c540888ba", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "patch": "@@ -1637,6 +1637,7 @@ unpack_ts_fixed_cst_value_fields (struct bitpack_d *bp, tree expr)\n \n   fv.data.low = (HOST_WIDE_INT) bp_unpack_value (bp, HOST_BITS_PER_WIDE_INT);\n   fv.data.high = (HOST_WIDE_INT) bp_unpack_value (bp, HOST_BITS_PER_WIDE_INT);\n+  fv.mode = (enum machine_mode) bp_unpack_value (bp, HOST_BITS_PER_INT);\n   TREE_FIXED_CST (expr) = fv;\n }\n \n@@ -1770,8 +1771,8 @@ unpack_ts_type_value_fields (struct bitpack_d *bp, tree expr)\n {\n   enum machine_mode mode;\n \n-  TYPE_PRECISION (expr) = (unsigned) bp_unpack_value (bp, 9);\n-  mode = (enum machine_mode) bp_unpack_value (bp, 7);\n+  TYPE_PRECISION (expr) = (unsigned) bp_unpack_value (bp, 10);\n+  mode = (enum machine_mode) bp_unpack_value (bp, 8);\n   SET_TYPE_MODE (expr, mode);\n   TYPE_STRING_FLAG (expr) = (unsigned) bp_unpack_value (bp, 1);\n   TYPE_NO_FORCE_BLK (expr) = (unsigned) bp_unpack_value (bp, 1);"}, {"sha": "d43de21616a9ebc63bbfab556df92284e0b36723", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=86561bb62b0c40ecc6a7d30c6e59a8a1139ae11d", "patch": "@@ -387,6 +387,7 @@ pack_ts_fixed_cst_value_fields (struct bitpack_d *bp, tree expr)\n   struct fixed_value fv = TREE_FIXED_CST (expr);\n   bp_pack_value (bp, fv.data.low, HOST_BITS_PER_WIDE_INT);\n   bp_pack_value (bp, fv.data.high, HOST_BITS_PER_WIDE_INT);\n+  bp_pack_value (bp, fv.mode, HOST_BITS_PER_INT);\n }\n \n \n@@ -513,8 +514,8 @@ pack_ts_function_decl_value_fields (struct bitpack_d *bp, tree expr)\n static void\n pack_ts_type_value_fields (struct bitpack_d *bp, tree expr)\n {\n-  bp_pack_value (bp, TYPE_PRECISION (expr), 9);\n-  bp_pack_value (bp, TYPE_MODE (expr), 7);\n+  bp_pack_value (bp, TYPE_PRECISION (expr), 10);\n+  bp_pack_value (bp, TYPE_MODE (expr), 8);\n   bp_pack_value (bp, TYPE_STRING_FLAG (expr), 1);\n   bp_pack_value (bp, TYPE_NO_FORCE_BLK (expr), 1);\n   bp_pack_value (bp, TYPE_NEEDS_CONSTRUCTING (expr), 1);"}]}