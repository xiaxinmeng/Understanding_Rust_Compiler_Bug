{"sha": "f34b5d88f05e8908d717355339bbded72d7c18d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM0YjVkODhmMDVlODkwOGQ3MTczNTUzMzliYmRlZDcyZDdjMThkNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-02-24T17:13:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T17:13:34Z"}, "message": "g-sercom-mingw.adb, [...]: Minor reformatting.\n\n2014-02-24  Robert Dewar  <dewar@adacore.com>\n\n\t* g-sercom-mingw.adb, g-sercom-linux.adb, sem_prag.adb, freeze.adb,\n\tatree.adb, atree.ads: Minor reformatting.\n\nFrom-SVN: r208088", "tree": {"sha": "70832e0c0a55635b5e21af2b4975858632902e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70832e0c0a55635b5e21af2b4975858632902e52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f34b5d88f05e8908d717355339bbded72d7c18d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34b5d88f05e8908d717355339bbded72d7c18d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f34b5d88f05e8908d717355339bbded72d7c18d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f34b5d88f05e8908d717355339bbded72d7c18d5/comments", "author": null, "committer": null, "parents": [{"sha": "2dade09735a63a5bd57e353bc02d99b2991aa441", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dade09735a63a5bd57e353bc02d99b2991aa441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dade09735a63a5bd57e353bc02d99b2991aa441"}], "stats": {"total": 72, "additions": 42, "deletions": 30}, "files": [{"sha": "b4ee2084caf767f2f753bd0303081f051c3034e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -1,3 +1,8 @@\n+2014-02-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-sercom-mingw.adb, g-sercom-linux.adb, sem_prag.adb, freeze.adb,\n+\tatree.adb, atree.ads: Minor reformatting.\n+\n 2014-02-24  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Contract): Do not enforce"}, {"sha": "19517734867674d239164a59bd58dea66af97edf", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -772,8 +772,7 @@ package body Atree is\n    -- Copy_Separate_Tree --\n    ------------------------\n \n-   function Copy_Separate_Tree (Source : Node_Id) return Node_Id\n-   is\n+   function Copy_Separate_Tree (Source : Node_Id) return Node_Id is\n       New_Id  : Node_Id;\n \n       function Copy_Entity (E : Entity_Id) return Entity_Id;\n@@ -794,7 +793,7 @@ package body Atree is\n          New_Ent : Entity_Id;\n \n       begin\n-         --  Build appropriate node.\n+         --  Build appropriate node\n \n          case N_Entity (Nkind (E)) is\n             when N_Defining_Identifier =>\n@@ -902,8 +901,8 @@ package body Atree is\n             Set_Entity (New_Id, Empty);\n          end if;\n \n-         --  Reset all Etype fields and Analyzed flags, because tree may\n-         --  have been partly analyzed.\n+         --  Reset all Etype fields and Analyzed flags, because input tree may\n+         --  have been fully or partially analyzed.\n \n          if Nkind (New_Id) in N_Has_Etype then\n             Set_Etype (New_Id, Empty);"}, {"sha": "de6fd2e89319f3089534ad4e0f00be86981dd592", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -501,14 +501,17 @@ package Atree is\n    --  a copied node by the parent field are also copied.) The parent pointers\n    --  in the copy are properly set. Copy_Separate_Tree (Empty/Error) returns\n    --  Empty/Error. The new subtree does not share entities with the source,\n-   --  but has new entities with the same name. Most of the time this routine\n-   --  is called on an unanalyzed tree, and no semantic information is copied.\n-   --  However, to ensure that no entities are shared between the two when the\n-   --  source is already analyzed, entity fields in the copy are zeroed out,\n-   --  as well as Etype fields and the Analyzed flag.\n+   --  but has new entities with the same name.\n+   --\n+   --  Most of the time this routine is called on an unanalyzed tree, and no\n+   --  semantic information is copied. However, to ensure that no entities\n+   --  are shared between the two when the source is already analyzed, and\n+   --  that the result looks like an unanalyzed tree from the parser, Entity\n+   --  fields and Etype fields are set to Empty, and Analyzed flags set False.\n+   --\n    --  In addition, Expanded_Name nodes are converted back into the original\n-   --  parser form (where they are Selected_Components), so that renalysis does\n-   --  the right thing.\n+   --  parser form (where they are Selected_Components), so that reanalysis\n+   --  does the right thing.\n \n    function Copy_Separate_List (Source : List_Id) return List_Id;\n    --  Applies Copy_Separate_Tree to each element of the Source list, returning"}, {"sha": "789aa660ddc3396f1f1c3c4c17209528fa17c928", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -3426,7 +3426,8 @@ package body Freeze is\n             --  Note on calls to Copy_Separate_Tree. The trees we are copying\n             --  here are fully analyzed, but we definitely want fully syntactic\n             --  unanalyzed trees in the body we construct, so that the analysis\n-            --  generates the right visibility.\n+            --  generates the right visibility, and that is exactly what the\n+            --  calls to Copy_Separate_Tree give us.\n \n             --  Acquire copy of Inline pragma\n "}, {"sha": "7a5638262c7eed97a9c7cd6bb3147d5f1a47008f", "filename": "gcc/ada/g-sercom-linux.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fg-sercom-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fg-sercom-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-linux.adb?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -220,23 +220,23 @@ package body GNAT.Serial_Communications is\n \n       --  Change settings now\n \n-      Current.c_cflag      := C_Data_Rate (Rate)\n-                                or C_Bits (Bits)\n-                                or C_Stop_Bits (Stop_Bits)\n-                                or C_Parity (Parity)\n-                                or CREAD;\n-      Current.c_iflag      := 0;\n-      Current.c_lflag      := 0;\n-      Current.c_oflag      := 0;\n+      Current.c_cflag := C_Data_Rate (Rate)\n+                           or C_Bits (Bits)\n+                           or C_Stop_Bits (Stop_Bits)\n+                           or C_Parity (Parity)\n+                           or CREAD;\n+      Current.c_iflag := 0;\n+      Current.c_lflag := 0;\n+      Current.c_oflag := 0;\n \n       if Local then\n          Current.c_cflag := Current.c_cflag or CLOCAL;\n       end if;\n \n       case Flow is\n-         when None =>\n+         when None     =>\n             null;\n-         when RTS_CTS =>\n+         when RTS_CTS  =>\n             Current.c_cflag := Current.c_cflag or CRTSCTS;\n          when Xon_Xoff =>\n             Current.c_iflag := Current.c_iflag or IXON;"}, {"sha": "0144c235697f8dfae74e21fd18886bbd3f957127", "filename": "gcc/ada/g-sercom-mingw.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fg-sercom-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fg-sercom-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sercom-mingw.adb?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -93,10 +93,11 @@ package body GNAT.Serial_Communications is\n       N_Img : constant String := Positive'Image (Number);\n    begin\n       if Number > 9 then\n-         return Port_Name (\"\\\\.\\COM\" & N_Img (N_Img'First + 1 .. N_Img'Last));\n+         return\n+           Port_Name (\"\\\\.\\COM\" & N_Img (N_Img'First + 1 .. N_Img'Last));\n       else\n-         return Port_Name\n-           (\"COM\" & N_Img (N_Img'First + 1 .. N_Img'Last) & ':');\n+         return\n+           Port_Name (\"COM\" & N_Img (N_Img'First + 1 .. N_Img'Last) & ':');\n       end if;\n    end Name;\n \n@@ -234,10 +235,10 @@ package body GNAT.Serial_Communications is\n             Com_Settings.fOutxCtsFlow := 0;\n       end case;\n \n-      Com_Settings.fAbortOnError   := 0;\n-      Com_Settings.ByteSize        := BYTE (C_Bits (Bits));\n-      Com_Settings.Parity          := BYTE (C_Parity (Parity));\n-      Com_Settings.StopBits        := BYTE (C_Stop_Bits (Stop_Bits));\n+      Com_Settings.fAbortOnError := 0;\n+      Com_Settings.ByteSize      := BYTE (C_Bits (Bits));\n+      Com_Settings.Parity        := BYTE (C_Parity (Parity));\n+      Com_Settings.StopBits      := BYTE (C_Stop_Bits (Stop_Bits));\n \n       Success := SetCommState (HANDLE (Port.H.all), Com_Settings'Access);\n "}, {"sha": "9f4ce2a72a2b82f1eee006e884159ff58bdb76bf", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f34b5d88f05e8908d717355339bbded72d7c18d5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f34b5d88f05e8908d717355339bbded72d7c18d5", "patch": "@@ -24403,6 +24403,9 @@ package body Sem_Prag is\n                Next (Assoc);\n             end loop;\n          end if;\n+\n+      --  Anything else is an error\n+\n       else\n          Error_Msg_N (\"malformed global list\", List);\n       end if;"}]}