{"sha": "facef326df0c41371da002b8d5e7716346750f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjZWYzMjZkZjBjNDEzNzFkYTAwMmI4ZDVlNzcxNjM0Njc1MGYxNw==", "commit": {"author": {"name": "Matt Austern", "email": "austern@apple.com", "date": "2003-12-10T06:34:46Z"}, "committer": {"name": "Matt Austern", "email": "austern@gcc.gnu.org", "date": "2003-12-10T06:34:46Z"}, "message": "re PR c/13134 (Visibility attribute is ignored)\n\nPR c/13134\n* c--decl.c (duplicate_decls): Copy visibility flag when appropriate.\n* cp/decl.c (duplicate_decls): Copy visibility flag when appropriate.\n* testsuite/lib/gcc-dg.exp (dg-require-visibility): Define.\n* testsuite/lib/target-supports (check_visibility_available): Define.\n* testsuite/gcc.dg/visibility-1.c: New test.\n* testsuite/gcc.dg/visibility-2.c: Likewise.\n* testsuite/gcc.dg/visibility-3.c: Likewise.\n* testsuite/gcc.dg/visibility-4.c: Likewise.\n* testsuite/gcc.dg/visibility-5.c: Likewise.\n* testsuite/gcc.dg/visibility-6.c: Likewise.\n* testsuite/g++.dg/ext/visibility-1.C: Likewise.\n* testsuite/g++.dg/ext/visibility-2.C: Likewise.\n* testsuite/g++.dg/ext/visibility-3.C: Likewise.\n* testsuite/g++.dg/ext/visibility-4.C: Likewise.\n* testsuite/g++.dg/ext/visibility-5.C: Likewise.\n* testsuite/g++.dg/ext/visibility-6.C: Likewise.\n\nFrom-SVN: r74487", "tree": {"sha": "e430472ee9dc43efc31173fbf8f2e7bc2d14a17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e430472ee9dc43efc31173fbf8f2e7bc2d14a17c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/facef326df0c41371da002b8d5e7716346750f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facef326df0c41371da002b8d5e7716346750f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/facef326df0c41371da002b8d5e7716346750f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facef326df0c41371da002b8d5e7716346750f17/comments", "author": null, "committer": null, "parents": [{"sha": "5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec3f5662c13c44e04e4f7e6a79ee050d0ba6884"}], "stats": {"total": 230, "additions": 229, "deletions": 1}, "files": [{"sha": "f1b73f6afc980f2062d023b3c807af9aafd50cc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -1,3 +1,8 @@\n+2003-12-09  Matt Austern  <austern@apple.com>\n+\n+\tPR c/13134\n+\t* c-decl.c (duplicate_decls): Copy visibility flag when appropriate.\n+\t\n 2003-12-09  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>\n \n \t* config/m32r/m32r.h: Add support for m32r2 processor.  Including"}, {"sha": "8fc1f19310093f45fe9302fb3ba83d6e91f6517e", "filename": "gcc/c-decl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -1335,6 +1335,19 @@ duplicate_decls (tree newdecl, tree olddecl, int different_binding_level,\n \t Currently, it can only be defined in the prototype.  */\n       COPY_DECL_ASSEMBLER_NAME (olddecl, newdecl);\n \n+      /* If either declaration has a nondefault visibility, use it. */\n+      if (DECL_VISIBILITY (olddecl) != VISIBILITY_DEFAULT)\n+\t{\n+\t  if (DECL_VISIBILITY (newdecl) != VISIBILITY_DEFAULT\n+\t      && DECL_VISIBILITY (newdecl) != DECL_VISIBILITY (olddecl))\n+\t    {\n+\t      warning (\"%J'%D': visibility attribute ignored because it\",\n+\t\t       newdecl, newdecl);\n+\t      warning (\"%Jconflicts with previous declaration here\", olddecl);\n+\t    }\n+\t  DECL_VISIBILITY (newdecl) = DECL_VISIBILITY (olddecl);\n+\t}\n+\n       if (TREE_CODE (newdecl) == FUNCTION_DECL)\n \t{\n \t  DECL_STATIC_CONSTRUCTOR(newdecl) |= DECL_STATIC_CONSTRUCTOR(olddecl);"}, {"sha": "b9a0638e25fc47f39addba9d25ea2850a66cdc01", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -1,3 +1,8 @@\n+2003-12-08  Matt Austern  <austern@apple.com>\n+\n+\tPR c/13134\n+\t* decl.c (duplicate_decls): Copy visibility flag when appropriate.\n+\t\n 2003-12-09  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\r\n \r\n \t* init.c (build_new_1): Deal with an OVERLOAD set when\r"}, {"sha": "f205f7459a08048996856f330d18b005b9ab38b8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -1854,9 +1854,21 @@ duplicate_decls (tree newdecl, tree olddecl)\n   TREE_ADDRESSABLE (newdecl) = TREE_ADDRESSABLE (olddecl);\n   TREE_ASM_WRITTEN (newdecl) = TREE_ASM_WRITTEN (olddecl);\n   DECL_COMMON (newdecl) = DECL_COMMON (olddecl);\n-  DECL_VISIBILITY (newdecl) = DECL_VISIBILITY (olddecl);\n   COPY_DECL_ASSEMBLER_NAME (olddecl, newdecl);\n \n+  /* If either declaration has a nondefault visibility, use it. */\n+  if (DECL_VISIBILITY (olddecl) != VISIBILITY_DEFAULT)\n+    {\n+      if (DECL_VISIBILITY (newdecl) != VISIBILITY_DEFAULT\n+\t  && DECL_VISIBILITY (newdecl) != DECL_VISIBILITY (olddecl))\n+\t{\n+\t  warning (\"%J'%D': visibility attribute ignored because it\",\n+\t\t   newdecl, newdecl);\n+\t  warning (\"%Jconflicts with previous declaration here\", olddecl);\n+\t}\n+      DECL_VISIBILITY (newdecl) = DECL_VISIBILITY (olddecl);\n+    }\n+\n   if (TREE_CODE (newdecl) == FUNCTION_DECL)\n     {\n       int function_size;"}, {"sha": "78e4a7d75f91f4799dde47a6a85dc2294f5e43f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -1,3 +1,21 @@\n+2003-12-08  Matt Austern  <austern@apple.com>\n+\n+\tPR c/13134\n+\t* lib/gcc-dg.exp (dg-require-visibility): Define.\n+\t* lib/target-supports (check_visibility_available): Define.\n+\t* gcc.dg/visibility-1.c: New test.\n+\t* gcc.dg/visibility-2.c: Likewise.\n+\t* gcc.dg/visibility-3.c: Likewise.\n+\t* gcc.dg/visibility-4.c: Likewise.\n+\t* gcc.dg/visibility-5.c: Likewise.\n+\t* gcc.dg/visibility-6.c: Likewise.\n+\t* g++.dg/ext/visibility-1.C: Likewise.\n+\t* g++.dg/ext/visibility-2.C: Likewise.\n+\t* g++.dg/ext/visibility-3.C: Likewise.\n+\t* g++.dg/ext/visibility-4.C: Likewise.\n+\t* g++.dg/ext/visibility-5.C: Likewise.\n+\t* g++.dg/ext/visibility-6.C: Likewise.\n+\t\n 2003-12-07  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\r\n \r\n \t* g++.dg/lookup/java1.C: New test.\r"}, {"sha": "d579eb27206df83f2c987c1e69aef8bcafef9f1d", "filename": "gcc/testsuite/g++.dg/ext/visibility-1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-1.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,8 @@\n+/* Test visibility attribute on function definition. */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*_Z3foov\" } } */\n+\n+void\n+__attribute__((visibility (\"hidden\")))\n+foo()\n+{ }"}, {"sha": "89e853c4dc5ce7532a0335af6b2940648626a182", "filename": "gcc/testsuite/g++.dg/ext/visibility-2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-2.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,7 @@\n+/* Test that visibility attribute on declaration extends to definition. */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*_Z3foov\" } } */\n+\n+void __attribute__((visibility (\"hidden\"))) foo();\n+\n+void foo() { }"}, {"sha": "d0cc8912efb79eb3e3a291d4df7734afd0fc8a69", "filename": "gcc/testsuite/g++.dg/ext/visibility-3.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-3.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,7 @@\n+/* Test visibility attribute on forward declaration of global variable */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+int\n+__attribute__((visibility (\"hidden\")))\n+xyzzy = 5;"}, {"sha": "d217bc9ec5dab06c4b0e71bf0e4a63d903dd7dec", "filename": "gcc/testsuite/g++.dg/ext/visibility-4.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-4.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,8 @@\n+/* Test visibility attribute on forward declaration of global variable */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+extern int __attribute__ ((visibility (\"hidden\")))\n+xyzzy;\n+\n+int xyzzy = 5;"}, {"sha": "9cdc8021e470df69c678b997d586c74698c32297", "filename": "gcc/testsuite/g++.dg/ext/visibility-5.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-5.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,11 @@\n+/* Test visibility attribute on definition of a function that has\n+   already had a forward declaration. */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*_Z3foov\" } } */\n+\n+void foo();\n+\n+void \n+ __attribute__((visibility (\"hidden\")))\n+foo() \n+{ }"}, {"sha": "6e8f0ce1135a84ac7faf230c376c636125bcadf4", "filename": "gcc/testsuite/g++.dg/ext/visibility-6.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-6.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,10 @@\n+/* Test visibility attribute on definition of global variable that has\n+   already had a forward declaration. */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+extern int xyzzy;\n+\n+int \n+__attribute__((visibility (\"hidden\")))\n+xyzzy = 5;"}, {"sha": "40acb72463f35e60e2a4ae45f3baccbe220c928d", "filename": "gcc/testsuite/g++.dg/ext/visibility-7.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvisibility-7.C?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,11 @@\n+/* Test warning from conflicting visibility specifications. */\n+/* { dg-do compile { target *86-*-linux* } } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+extern int \n+__attribute__((visibility (\"hidden\")))\n+xyzzy; /* { dg-warning \"previous declaration here\" \"\" } */\n+\n+int \n+__attribute__((visibility (\"protected\")))\n+xyzzy = 5; /* { dg-warning \"visibility attribute ignored\" \"\" } */"}, {"sha": "f76c3ca915477476b6a27aaf616a11bae1bd6791", "filename": "gcc/testsuite/gcc.dg/visibility-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-1.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,9 @@\n+/* Test visibility attribute on function definition. */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*foo\" } } */\n+\n+void\n+__attribute__((visibility (\"hidden\")))\n+foo()\n+{ }"}, {"sha": "e62dbbb4cd52c1eb6eff1a10448b298fd994e919", "filename": "gcc/testsuite/gcc.dg/visibility-2.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-2.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,10 @@\n+/* Test that visibility attribute on declaration extends to definition. */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*foo\" } } */\n+\n+void \n+__attribute__((visibility (\"hidden\")))\n+foo();\n+\n+void foo() { }"}, {"sha": "e0bf01fb130a16aab2afab2cff3bac836efe9efd", "filename": "gcc/testsuite/gcc.dg/visibility-3.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-3.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,8 @@\n+/* Test visibility attribute on forward declaration of global variable */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+int\n+__attribute__((visibility (\"hidden\")))\n+xyzzy = 5;"}, {"sha": "1a0b3ca37dac05aceb0594fa38d991673713e20f", "filename": "gcc/testsuite/gcc.dg/visibility-4.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-4.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,10 @@\n+/* Test visibility attribute on forward declaration of global variable */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+extern int \n+__attribute__((visibility (\"hidden\")))\n+xyzzy;\n+\n+int xyzzy = 5;"}, {"sha": "b1f46d2040a8e2130e54b02145d9c58449b1dae9", "filename": "gcc/testsuite/gcc.dg/visibility-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-5.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,12 @@\n+/* Test visibility attribute on definition of a function that has\n+   already had a forward declaration. */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*foo\" } } */\n+\n+void foo();\n+\n+void\n+ __attribute__((visibility (\"hidden\")))\n+foo()\n+{ }"}, {"sha": "632f2ac205925c79532de1e87b6519106cb78f40", "filename": "gcc/testsuite/gcc.dg/visibility-6.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-6.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,11 @@\n+/* Test visibility attribute on definition of global variable that has\n+   already had a forward declaration. */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+extern int xyzzy;\n+\n+int \n+__attribute__((visibility (\"hidden\"))) \n+xyzzy = 5;"}, {"sha": "e98b432c827982ea3afee83b99f5e410717c326e", "filename": "gcc/testsuite/gcc.dg/visibility-7.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvisibility-7.c?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -0,0 +1,12 @@\n+/* Test warning from conflicting visibility specifications. */\n+/* { dg-do compile } */\n+/* { dg-require-visibility \"\" } */\n+/* { dg-final { scan-assembler \"\\\\.hidden.*xyzzy\" } } */\n+\n+extern int \n+__attribute__((visibility (\"hidden\")))\n+xyzzy; /* { dg-warning \"previous declaration here\" \"\" } */\n+\n+int \n+__attribute__((visibility (\"protected\")))\n+xyzzy = 5; /* { dg-warning \"visibility attribute ignored\" \"\" } */"}, {"sha": "7fd52a9486783d79fbff9234a4555d3ef91c5456", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -267,6 +267,23 @@ proc dg-require-weak { args } {\n     }\n }\n \n+# If this target does not support the \"visibility\" attribute, skip this\n+# test.\n+\n+proc dg-require-visibility { args } {\n+    upvar dg-do-what dg-do-what\n+    upvar name name\n+\n+    set visibility_available [ check_visibility_available ]\n+    if { $visibility_available == -1 } {\n+\tunresolved \"$name\"\n+    }\n+    if { $visibility_available != 1 } {\n+\tset dg-do-what [list [lindex ${dg-do-what} 0] \"N\" \"P\"]\n+\treturn\n+    }\n+}\n+\n # If this target does not support the \"alias\" attribute, skip this\n # test.\n "}, {"sha": "e9a57a1b7c2995bbf0ccad6e3d37424d7b362b6a", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facef326df0c41371da002b8d5e7716346750f17/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=facef326df0c41371da002b8d5e7716346750f17", "patch": "@@ -62,6 +62,30 @@ proc check_weak_available { } {\n     }\n }\n \n+###############################\n+# proc check_visibility_available { }\n+###############################\n+\n+# The visibility attribute is only support in some object formats\n+# This proc returns 1 if it is supported, 0 if not, -1 if unsure.\n+\n+proc check_visibility_available { } {\n+    global target_triplet\n+    global target_cpu\n+\n+    # ELF supports it if the system has recent GNU ld and gas.\n+    # As a start we return 1 for all ELF systems; we'll let people\n+    # add exceptions as necessary.\n+\n+    set objformat [gcc_target_object_format]\n+\n+    switch $objformat {\n+        elf      { return 1 }\n+        unknown  { return -1 }\n+        default  { return 0 }\n+    }\n+}\n+\n ###############################\n # proc check_alias_available { }\n ###############################"}]}