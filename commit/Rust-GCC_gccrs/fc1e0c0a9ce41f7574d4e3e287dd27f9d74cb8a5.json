{"sha": "fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMxZTBjMGE5Y2U0MWY3NTc0ZDRlM2UyODdkZDI3ZjlkNzRjYjhhNQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-27T18:41:47Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-27T18:41:47Z"}, "message": "i386.c (extended_reg_mentioned_1): Delete.\n\ngcc/\n\t* config/i386/i386.c (extended_reg_mentioned_1): Delete.\n\t(x86_extended_reg_mentioned_p): Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r216759", "tree": {"sha": "f97d77074662430d47fc081e8f098efb43319ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f97d77074662430d47fc081e8f098efb43319ae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eebfd03aacbcf3793ba55c27824f7968cc1eeb27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eebfd03aacbcf3793ba55c27824f7968cc1eeb27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eebfd03aacbcf3793ba55c27824f7968cc1eeb27"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "a0c8dec6d0be3359f9b77112ed007342db681a8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "patch": "@@ -1,3 +1,8 @@\n+2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/i386/i386.c (extended_reg_mentioned_1): Delete.\n+\t(x86_extended_reg_mentioned_p): Use FOR_EACH_SUBRTX.\n+\n 2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/i386/i386.c: Include rtl-iter.h"}, {"sha": "408fbd9cd54a2c7447132cc247f6c63c7ecf8db4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fc1e0c0a9ce41f7574d4e3e287dd27f9d74cb8a5", "patch": "@@ -39695,25 +39695,20 @@ x86_extended_QIreg_mentioned_p (rtx_insn *insn)\n   return false;\n }\n \n-/* Return nonzero when P points to register encoded via REX prefix.\n-   Called via for_each_rtx.  */\n-static int\n-extended_reg_mentioned_1 (rtx *p, void *)\n-{\n-   unsigned int regno;\n-   if (!REG_P (*p))\n-     return 0;\n-   regno = REGNO (*p);\n-   return REX_INT_REGNO_P (regno) || REX_SSE_REGNO_P (regno);\n-}\n-\n /* Return true when INSN mentions register that must be encoded using REX\n    prefix.  */\n bool\n x86_extended_reg_mentioned_p (rtx insn)\n {\n-  return for_each_rtx (INSN_P (insn) ? &PATTERN (insn) : &insn,\n-\t\t       extended_reg_mentioned_1, NULL);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, INSN_P (insn) ? PATTERN (insn) : insn, NONCONST)\n+    {\n+      const_rtx x = *iter;\n+      if (REG_P (x)\n+\t  && (REX_INT_REGNO_P (REGNO (x)) || REX_SSE_REGNO_P (REGNO (x))))\n+\treturn true;\n+    }\n+  return false;\n }\n \n /* If profitable, negate (without causing overflow) integer constant"}]}