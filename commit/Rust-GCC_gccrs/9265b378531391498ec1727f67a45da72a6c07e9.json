{"sha": "9265b378531391498ec1727f67a45da72a6c07e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2NWIzNzg1MzEzOTE0OThlYzE3MjdmNjdhNDVkYTcyYTZjMDdlOQ==", "commit": {"author": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2021-08-03T01:29:24Z"}, "committer": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2021-08-03T21:28:42Z"}, "message": "Fixes for AutoFDO testing\n\n* create_gcov tool doesn't currently support dwarf 5 so I made a change in profopt.exp\n  to pass -gdwarf-4 when compiling the binary to profile.\n\n* I updated the invocation of create_gcov in profopt.exp to pass -gcov_version=2.\n  I recently made a change to create_gcov to support version 2:\n  https://github.com/google/autofdo/pull/117 .\n\n* I removed useless -o perf.data from the invocation of gcc-auto-profile in\n  target-supports.exp.\n\nThese changes contribute to fixing PR gcov-profile/71672.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/profopt.exp: Pass gdwarf-4 when compiling test to profile; pass -gcov_version=2.\n\t* lib/target-supports.exp: Remove unnecessary -o perf.data passed to gcc-auto-profile.", "tree": {"sha": "cd3fc4e72ec041e9333bed71e9499511c69c49ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd3fc4e72ec041e9333bed71e9499511c69c49ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9265b378531391498ec1727f67a45da72a6c07e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9265b378531391498ec1727f67a45da72a6c07e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9265b378531391498ec1727f67a45da72a6c07e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9265b378531391498ec1727f67a45da72a6c07e9/comments", "author": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed093c7c3f755bc1cd80e5186abeb2f5c50ee0c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "25f45ecf2def085099d786048221e0e7f88d2d12", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265b378531391498ec1727f67a45da72a6c07e9/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265b378531391498ec1727f67a45da72a6c07e9/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=9265b378531391498ec1727f67a45da72a6c07e9", "patch": "@@ -289,7 +289,7 @@ proc auto-profopt-execute { src } {\n         return\n     }\n     set profile_wrapper [profopt-perf-wrapper]\n-    set profile_option \"-g -DFOR_AUTOFDO_TESTING\"\n+    set profile_option \"-gdwarf-4 -DFOR_AUTOFDO_TESTING\"\n     set feedback_option \"-fauto-profile -DFOR_AUTOFDO_TESTING -fearly-inlining\"\n     set run_autofdo 1\n     profopt-execute $src\n@@ -451,7 +451,7 @@ proc profopt-execute { src } {\n \t    # convert profile\n \t    if { $run_autofdo == 1 } {\n                 set bprefix \"afdo.\"\n-\t\tset cmd \"create_gcov --binary $execname1 --profile=$tmpdir/$base.perf.data -gcov_version=1 --gcov=$tmpdir/$bprefix$base.$ext\"\n+\t\tset cmd \"create_gcov --binary $execname1 --profile=$tmpdir/$base.perf.data -gcov_version=2 --gcov=$tmpdir/$bprefix$base.$ext\"\n \t\tverbose \"Running $cmd\"\n \t\tset id [remote_spawn \"\" $cmd]\n \t\tif { $id < 0 } {"}, {"sha": "44465b14b068561b027dbd1175a0c84fa5de9201", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9265b378531391498ec1727f67a45da72a6c07e9/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9265b378531391498ec1727f67a45da72a6c07e9/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=9265b378531391498ec1727f67a45da72a6c07e9", "patch": "@@ -626,7 +626,7 @@ proc check_effective_target_keeps_null_pointer_checks { } {\n # this allows parallelism of 16 and higher of parallel gcc-auto-profile\n proc profopt-perf-wrapper { } {\n     global srcdir\n-    return \"$srcdir/../config/i386/gcc-auto-profile -o perf.data -m8 \"\n+    return \"$srcdir/../config/i386/gcc-auto-profile -m8 \"\n }\n \n # Return true if profiling is supported on the target."}]}