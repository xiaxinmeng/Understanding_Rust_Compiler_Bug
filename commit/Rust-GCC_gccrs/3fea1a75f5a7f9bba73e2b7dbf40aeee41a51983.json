{"sha": "3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlYTFhNzVmNWE3ZjliYmE3M2UyYjdkYmY0MGFlZWU0MWE1MTk4Mw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-10-29T21:44:05Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-10-29T21:44:05Z"}, "message": "[AArch64] Restore recog state after finding pre-madd instruction\n\n\t* config/aarch64/aarch64.c (aarch64_madd_needs_nop): Restore\n\trecog state after aarch64_prev_real_insn call.\n\n\t* gcc.target/aarch64/madd_after_asm_1.c: New test.\n\nFrom-SVN: r216852", "tree": {"sha": "e420a20917a7cfba03b9d4d171afd166c12e32e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e420a20917a7cfba03b9d4d171afd166c12e32e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a56561ac2d88ea0bc0bb6551483c118358762842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56561ac2d88ea0bc0bb6551483c118358762842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a56561ac2d88ea0bc0bb6551483c118358762842"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "80935753a35a9c11b6545ba9b991e9329be7088a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "patch": "@@ -1,3 +1,8 @@\n+2014-10-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_madd_needs_nop): Restore\n+\trecog state after aarch64_prev_real_insn call.\n+\n 2014-10-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.h (MACHMODE): Add 'enum' to machine_mode."}, {"sha": "0400fd503d26b2bb482589a14d10e032edba83b3", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "patch": "@@ -7770,6 +7770,10 @@ aarch64_madd_needs_nop (rtx_insn* insn)\n     return false;\n \n   prev = aarch64_prev_real_insn (insn);\n+  /* aarch64_prev_real_insn can call recog_memoized on insns other than INSN.\n+     Restore recog state to INSN to avoid state corruption.  */\n+  extract_constrain_insn_cached (insn);\n+\n   if (!prev || !has_memory_op (prev))\n     return false;\n "}, {"sha": "a362f13578263ae4dfda52b9c5138c3db1089ae3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "patch": "@@ -1,3 +1,7 @@\n+2014-10-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/aarch64/madd_after_asm_1.c: New test.\n+\n 2014-10-29  DJ Delorie  <dj@redhat.com>\n \n \t* gcc.dg/20141029-1.c: New."}, {"sha": "523941d479211f893e8411bb14931bf139f2a642", "filename": "gcc/testsuite/gcc.target/aarch64/madd_after_asm_1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmadd_after_asm_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmadd_after_asm_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmadd_after_asm_1.c?ref=3fea1a75f5a7f9bba73e2b7dbf40aeee41a51983", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -mfix-cortex-a53-835769\" } */\n+\n+int\n+test (int a, double b, int c, int d, int e)\n+{\n+  double result;\n+  __asm__ __volatile (\"// %0, %1\"\n+                      : \"=w\" (result)\n+                      : \"0\" (b)\n+                      :    /* No clobbers */\n+                      );\n+  return c * d + e;\n+}"}]}