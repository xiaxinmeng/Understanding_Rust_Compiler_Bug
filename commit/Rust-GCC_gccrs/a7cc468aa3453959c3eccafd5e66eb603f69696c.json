{"sha": "a7cc468aa3453959c3eccafd5e66eb603f69696c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjYzQ2OGFhMzQ1Mzk1OWMzZWNjYWZkNWU2NmViNjAzZjY5Njk2Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-24T05:21:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-24T05:21:27Z"}, "message": "gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or COMPONENT_REF variable fields unless they're non-constant.\n\n        * gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or\n        COMPONENT_REF variable fields unless they're non-constant.\n\nFrom-SVN: r83578", "tree": {"sha": "8db696f41a3865f5fe2a7f1fa3e108cfe5267765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8db696f41a3865f5fe2a7f1fa3e108cfe5267765"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7cc468aa3453959c3eccafd5e66eb603f69696c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7cc468aa3453959c3eccafd5e66eb603f69696c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7cc468aa3453959c3eccafd5e66eb603f69696c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7cc468aa3453959c3eccafd5e66eb603f69696c/comments", "author": null, "committer": null, "parents": [{"sha": "cfafe9734d14ae63db12d744541da675c68a26bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfafe9734d14ae63db12d744541da675c68a26bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfafe9734d14ae63db12d744541da675c68a26bd"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "37024fbee1aaa784b9ec77eb749a25b503396d0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc468aa3453959c3eccafd5e66eb603f69696c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc468aa3453959c3eccafd5e66eb603f69696c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7cc468aa3453959c3eccafd5e66eb603f69696c", "patch": "@@ -1,3 +1,8 @@\n+2004-06-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* gimplify.c (gimplify_compound_lval): Don't set ARRAY_REF or\n+\tCOMPONENT_REF variable fields unless they're non-constant.\n+\n 2004-06-23  Robert Millan  <robertmh@gnu.org>\n \n \t* config.gcc: Merge kfreebsd*-gnu with linux* and add knetbsd*-gnu."}, {"sha": "480b8ebbf06127a579902d0c31eadfc6b9fcb973", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc468aa3453959c3eccafd5e66eb603f69696c/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc468aa3453959c3eccafd5e66eb603f69696c/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=a7cc468aa3453959c3eccafd5e66eb603f69696c", "patch": "@@ -1948,9 +1948,10 @@ gimplify_compound_lval (tree *expr_p, tree *pre_p,\n \t     gimplified.  */\n \t  if (!TREE_OPERAND (t, 2))\n \t    {\n-\t      TREE_OPERAND (t, 2) = unshare_expr (array_ref_low_bound (t));\n-\t      if (!is_gimple_min_invariant (TREE_OPERAND (t, 2)))\n+\t      tree low = unshare_expr (array_ref_low_bound (t));\n+\t      if (!is_gimple_min_invariant (low))\n \t\t{\n+\t          TREE_OPERAND (t, 2) = low;\n \t\t  tret = gimplify_expr (&TREE_OPERAND (t, 2), pre_p, post_p,\n \t\t\t\t\tis_gimple_tmp_var, fb_rvalue);\n \t\t  ret = MIN (ret, tret);\n@@ -1967,9 +1968,9 @@ gimplify_compound_lval (tree *expr_p, tree *pre_p,\n \t\t type (above).  */\n \t      elmt_size = size_binop (EXACT_DIV_EXPR, elmt_size, factor);\n \n-\t      TREE_OPERAND (t, 3) = elmt_size;\n-\t      if (!is_gimple_min_invariant (TREE_OPERAND (t, 3)))\n+\t      if (!is_gimple_min_invariant (elmt_size))\n \t\t{\n+\t          TREE_OPERAND (t, 3) = elmt_size;\n \t\t  tret = gimplify_expr (&TREE_OPERAND (t, 3), pre_p, post_p,\n \t\t\t\t\tis_gimple_tmp_var, fb_rvalue);\n \t\t  ret = MIN (ret, tret);\n@@ -1989,9 +1990,9 @@ gimplify_compound_lval (tree *expr_p, tree *pre_p,\n \t      /* Divide the offset by its alignment.  */\n \t      offset = size_binop (EXACT_DIV_EXPR, offset, factor);\n \n-\t      TREE_OPERAND (t, 2) = offset;\n-\t      if (!is_gimple_min_invariant (TREE_OPERAND (t, 2)))\n+\t      if (!is_gimple_min_invariant (offset))\n \t\t{\n+\t          TREE_OPERAND (t, 2) = offset;\n \t\t  tret = gimplify_expr (&TREE_OPERAND (t, 2), pre_p, post_p,\n \t\t\t\t\tis_gimple_tmp_var, fb_rvalue);\n \t\t  ret = MIN (ret, tret);"}]}