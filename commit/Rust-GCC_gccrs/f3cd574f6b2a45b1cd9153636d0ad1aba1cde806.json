{"sha": "f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNjZDU3NGY2YjJhNDViMWNkOTE1MzYzNmQwYWQxYWJhMWNkZTgwNg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@atrey.karlin.mff.cuni.cz", "date": "2004-09-25T12:53:26Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2004-09-25T12:53:26Z"}, "message": "tree-optimize.c (init_tree_optimization_passes): Add pass_record_bounds.\n\n\t* tree-optimize.c (init_tree_optimization_passes): Add\n\tpass_record_bounds.\n\t* tree-pass.h (pass_record_bounds): Declare.\n\t* tree-ssa-loop.c (tree_ssa_loop_bounds, pass_record_bounds):\n\tNew pass.\n\nFrom-SVN: r88097", "tree": {"sha": "cba6592637f7c6bfb3cb621ea30411b61bce6227", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cba6592637f7c6bfb3cb621ea30411b61bce6227"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/comments", "author": null, "committer": null, "parents": [{"sha": "2c855398563d3cf8f27a5c1f67860e6838cc3e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c855398563d3cf8f27a5c1f67860e6838cc3e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c855398563d3cf8f27a5c1f67860e6838cc3e96"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "f267169a8d902e8f4c199df9b13b0e30d0976e74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "patch": "@@ -1,3 +1,11 @@\n+2004-09-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* tree-optimize.c (init_tree_optimization_passes): Add\n+\tpass_record_bounds.\n+\t* tree-pass.h (pass_record_bounds): Declare.\n+\t* tree-ssa-loop.c (tree_ssa_loop_bounds, pass_record_bounds):\n+\tNew pass.\n+\n 2004-09-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \tPR tree-optimization/17474"}, {"sha": "aa3df9e787c9a71be4bffed781508043c4b16007", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "patch": "@@ -393,6 +393,7 @@ init_tree_optimization_passes (void)\n   NEXT_PASS (pass_lim);\n   NEXT_PASS (pass_unswitch);\n   NEXT_PASS (pass_iv_canon);\n+  NEXT_PASS (pass_record_bounds);\n   NEXT_PASS (pass_if_conversion);\n   NEXT_PASS (pass_vectorize);\n   NEXT_PASS (pass_linear_transform);"}, {"sha": "6250ae6140bfa76ae29a628db366a25b2675b48e", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "patch": "@@ -127,6 +127,7 @@ extern struct tree_opt_pass pass_loop_init;\n extern struct tree_opt_pass pass_lim;\n extern struct tree_opt_pass pass_unswitch;\n extern struct tree_opt_pass pass_iv_canon;\n+extern struct tree_opt_pass pass_record_bounds;\n extern struct tree_opt_pass pass_if_conversion;\n extern struct tree_opt_pass pass_vectorize;\n extern struct tree_opt_pass pass_complete_unroll;"}, {"sha": "b1d854e9acd9ace973a20f73136ed3182d0079da", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "patch": "@@ -297,6 +297,35 @@ struct tree_opt_pass pass_iv_canon =\n   0\t\t\t\t\t/* letter */\n };\n \n+/* Record bounds on numbers of iterations of loops.  */\n+\n+static void\n+tree_ssa_loop_bounds (void)\n+{\n+  if (!current_loops)\n+    return;\n+\n+  estimate_numbers_of_iterations (current_loops);\n+  scev_reset ();\n+}\n+\n+struct tree_opt_pass pass_record_bounds =\n+{\n+  \"bounds\",\t\t\t\t/* name */\n+  NULL,\t\t\t\t\t/* gate */\n+  tree_ssa_loop_bounds,\t\t       \t/* execute */\n+  NULL,\t\t\t\t\t/* sub */\n+  NULL,\t\t\t\t\t/* next */\n+  0,\t\t\t\t\t/* static_pass_number */\n+  0,\t\t\t  \t\t/* tv_id */\n+  PROP_cfg | PROP_ssa,\t\t\t/* properties_required */\n+  0,\t\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_destroyed */\n+  0,\t\t\t\t\t/* todo_flags_start */\n+  0,\t\t\t              \t/* todo_flags_finish */\n+  0\t\t\t\t\t/* letter */\n+};\n+\n /* Complete unrolling of loops.  */\n \n static void"}]}