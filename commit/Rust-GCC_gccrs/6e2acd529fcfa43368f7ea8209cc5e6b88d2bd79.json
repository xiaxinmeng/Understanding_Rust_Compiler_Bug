{"sha": "6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyYWNkNTI5ZmNmYTQzMzY4ZjdlYTgyMDljYzVlNmI4OGQyYmQ3OQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-01-18T16:47:16Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-01-20T09:59:22Z"}, "message": "Support Struct field index initialisation\n\nFor TupleStructs the constructor can take field indexes to support\nchange or ordering of the fields.", "tree": {"sha": "be47967ba0e8db1ab76d7688ecb29de40d3ccbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be47967ba0e8db1ab76d7688ecb29de40d3ccbc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d41b7e8a3a65382dc5ce30dfb3f85abe298d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8d41b7e8a3a65382dc5ce30dfb3f85abe298d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8d41b7e8a3a65382dc5ce30dfb3f85abe298d19"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "0e54281bb7c219269f412d40266cd1bfcf01805b", "filename": "gcc/rust/backend/rust-compile-struct-field-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fbackend%2Frust-compile-struct-field-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fbackend%2Frust-compile-struct-field-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-struct-field-expr.h?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -38,6 +38,8 @@ class CompileStructExprField : public HIRCompileBase\n \n   void visit (HIR::StructExprFieldIdentifierValue &field);\n \n+  void visit (HIR::StructExprFieldIndexValue &field);\n+\n private:\n   CompileStructExprField (Context *ctx)\n     : HIRCompileBase (ctx), translated (nullptr)"}, {"sha": "cb6272fae2f3bfa8d20e0911c1fd1d99de0a986c", "filename": "gcc/rust/backend/rust-compile.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fbackend%2Frust-compile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fbackend%2Frust-compile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile.cc?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -228,5 +228,11 @@ CompileStructExprField::visit (HIR::StructExprFieldIdentifierValue &field)\n   translated = CompileExpr::Compile (field.get_value (), ctx);\n }\n \n+void\n+CompileStructExprField::visit (HIR::StructExprFieldIndexValue &field)\n+{\n+  translated = CompileExpr::Compile (field.get_value (), ctx);\n+}\n+\n } // namespace Compile\n } // namespace Rust"}, {"sha": "71c1f1f51ced164ac49b4b13f16c86404d9c0335", "filename": "gcc/rust/hir/rust-ast-lower-struct-field-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fhir%2Frust-ast-lower-struct-field-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fhir%2Frust-ast-lower-struct-field-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-struct-field-expr.h?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -46,6 +46,8 @@ class ASTLowerStructExprField : public ASTLoweringBase\n \n   void visit (AST::StructExprFieldIdentifierValue &field);\n \n+  void visit (AST::StructExprFieldIndexValue &field);\n+\n private:\n   ASTLowerStructExprField () : translated (nullptr) {}\n "}, {"sha": "d4c8224daeb03df486f9e17dbfe70b11980cf2b7", "filename": "gcc/rust/hir/rust-ast-lower.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fhir%2Frust-ast-lower.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower.cc?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -212,5 +212,21 @@ ASTLowerStructExprField::visit (AST::StructExprFieldIdentifierValue &field)\n     field.get_locus ());\n }\n \n+void\n+ASTLowerStructExprField::visit (AST::StructExprFieldIndexValue &field)\n+{\n+  HIR::Expr *value = ASTLoweringExpr::translate (field.get_value ().get ());\n+\n+  auto crate_num = mappings->get_current_crate ();\n+  Analysis::NodeMapping mapping (crate_num, field.get_node_id (),\n+\t\t\t\t mappings->get_next_hir_id (crate_num),\n+\t\t\t\t UNKNOWN_LOCAL_DEFID);\n+\n+  translated\n+    = new HIR::StructExprFieldIndexValue (mapping, field.get_index (),\n+\t\t\t\t\t  std::unique_ptr<HIR::Expr> (value),\n+\t\t\t\t\t  field.get_locus ());\n+}\n+\n } // namespace HIR\n } // namespace Rust"}, {"sha": "a50f744e59a77343f37c97b20b79e753b2ec15c3", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -1591,6 +1591,8 @@ class StructExprFieldIndexValue : public StructExprFieldWithVal\n \n   void accept_vis (HIRVisitor &vis) override;\n \n+  TupleIndex get_tuple_index () const { return index; };\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "45d3e59a30b287292c09c4ae78612a4fd08f50f6", "filename": "gcc/rust/resolve/rust-ast-resolve-struct-expr-field.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fresolve%2Frust-ast-resolve-struct-expr-field.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fresolve%2Frust-ast-resolve-struct-expr-field.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-struct-expr-field.h?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -41,7 +41,7 @@ class ResolveStructExprField : public ResolverBase\n \n   void visit (AST::StructExprFieldIdentifierValue &field);\n \n-  // TODO\n+  void visit (AST::StructExprFieldIndexValue &field);\n \n private:\n   ResolveStructExprField (NodeId parent) : ResolverBase (parent) {}"}, {"sha": "910cd8656cb2e5b32d6842b70afe4a4a574b069f", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -318,5 +318,11 @@ ResolveStructExprField::visit (AST::StructExprFieldIdentifierValue &field)\n   ResolveExpr::go (field.get_value ().get (), field.get_node_id ());\n }\n \n+void\n+ResolveStructExprField::visit (AST::StructExprFieldIndexValue &field)\n+{\n+  ResolveExpr::go (field.get_value ().get (), field.get_node_id ());\n+}\n+\n } // namespace Resolver\n } // namespace Rust"}, {"sha": "02bc9df9993f93f0cd16ae60934529b625788923", "filename": "gcc/rust/typecheck/rust-hir-type-check-struct-field.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-struct-field.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-struct-field.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-struct-field.h?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -44,6 +44,8 @@ class TypeCheckStructExpr : public TypeCheckBase\n \n   void visit (HIR::StructExprFieldIdentifierValue &field);\n \n+  void visit (HIR::StructExprFieldIndexValue &field);\n+\n private:\n   TypeCheckStructExpr ()\n     : TypeCheckBase (), resolved (nullptr), struct_path_resolved (nullptr)"}, {"sha": "6819627a4866e10080b8f836934cf86fc5fb1960", "filename": "gcc/rust/typecheck/rust-hir-type-check.cc", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.cc?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -197,5 +197,30 @@ TypeCheckStructExpr::visit (HIR::StructExprFieldIdentifierValue &field)\n     fields_assigned.insert (field.field_name);\n }\n \n+void\n+TypeCheckStructExpr::visit (HIR::StructExprFieldIndexValue &field)\n+{\n+  std::string field_name (std::to_string (field.get_tuple_index ()));\n+  auto it = fields_assigned.find (field_name);\n+  if (it != fields_assigned.end ())\n+    {\n+      rust_fatal_error (field.get_locus (), \"used more than once\");\n+      return;\n+    }\n+\n+  TyTy::TyBase *value = TypeCheckExpr::Resolve (field.get_value ());\n+  TyTy::StructFieldType *field_type\n+    = struct_path_resolved->get_field (field_name);\n+  if (field_type == nullptr)\n+    {\n+      rust_error_at (field.get_locus (), \"unknown field\");\n+      return;\n+    }\n+\n+  resolved_field = field_type->get_field_type ()->combine (value);\n+  if (resolved_field != nullptr)\n+    fields_assigned.insert (field_name);\n+}\n+\n } // namespace Resolver\n } // namespace Rust"}, {"sha": "8d210b8b846c488e03329f29f7af7b9538214f8c", "filename": "gcc/testsuite/rust.test/compilable/struct_init_2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fstruct_init_2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fstruct_init_2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fstruct_init_2.rs?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -0,0 +1,5 @@\n+struct Foo(f32, f32);\n+\n+fn main() {\n+    let a = Foo { 0: 10.0, 1: 20.0 };\n+}"}, {"sha": "3eadaef1e597909665c647642ab4cd95946f3646", "filename": "gcc/testsuite/rust.test/fail_compilation/struct_init1.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstruct_init1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstruct_init1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Ffail_compilation%2Fstruct_init1.rs?ref=6e2acd529fcfa43368f7ea8209cc5e6b88d2bd79", "patch": "@@ -0,0 +1,8 @@\n+struct Foo {\n+    a: f32,\n+    b: f32,\n+}\n+\n+fn main() {\n+    let a = Foo { 0: 10.0, 1: 20.0 };\n+}"}]}