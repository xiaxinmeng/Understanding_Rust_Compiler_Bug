{"sha": "6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwNjgxYjcxNWMzZmIwYzVmZjg3MjcwZjA0ZjdiYmQyZWVmYTdiNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-16T11:50:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-16T11:50:14Z"}, "message": "re PR c++/61488 (Regression in template argument substitution in 4.9+)\n\n\tPR c++/61488\n\t* pt.c (check_valid_ptrmem_cst_expr): Fix for template context.\n\nFrom-SVN: r211704", "tree": {"sha": "082ba5b742f3076263d9566e94489a6d7949f4a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/082ba5b742f3076263d9566e94489a6d7949f4a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "949bd6c8ce34292ed83d80294d609835084947c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949bd6c8ce34292ed83d80294d609835084947c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949bd6c8ce34292ed83d80294d609835084947c7"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "422e71667c3f42032022df01ef056fbe264b8813", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "patch": "@@ -1,5 +1,8 @@\n 2014-06-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/61488\n+\t* pt.c (check_valid_ptrmem_cst_expr): Fix for template context.\n+\n \tPR c++/61500\n \t* tree.c (lvalue_kind): Handle MEMBER_REF and DOTSTAR_EXPR.\n "}, {"sha": "df57293d03d3f5cc9e11a3201235513f66637afa", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "patch": "@@ -5350,6 +5350,10 @@ check_valid_ptrmem_cst_expr (tree type, tree expr,\n     return true;\n   if (cxx_dialect >= cxx11 && null_member_pointer_value_p (expr))\n     return true;\n+  if (processing_template_decl\n+      && TREE_CODE (expr) == ADDR_EXPR\n+      && TREE_CODE (TREE_OPERAND (expr, 0)) == OFFSET_REF)\n+    return true;\n   if (complain & tf_error)\n     {\n       error (\"%qE is not a valid template argument for type %qT\","}, {"sha": "037996087b27fd7bb143dff55f5e4155677e7952", "filename": "gcc/testsuite/g++.dg/template/ptrmem28.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem28.C?ref=6e0681b715c3fb0c5ff87270f04f7bbd2eefa7b5", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/61488\n+\n+struct A {\n+  typedef int (A::*cont_func)();\n+  template <A::cont_func> void wait(int);\n+  int notify();\n+\n+  void fix() { wait<&A::notify>(0); } // OK\n+  template <int> void repair() { wait<&A::notify>(0); }\n+};"}]}