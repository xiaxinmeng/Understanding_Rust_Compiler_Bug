{"sha": "81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhM2YzZDFiNmZlY2MxMGJhOGM0NjA2NDRkZmI5ZWJhYmJiOWVlYw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-11-20T23:34:24Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-11-20T23:34:24Z"}, "message": "Include math.h in nextafter-2.c test.\n\nSince the test is compiled with -fno-builtin, include math.h to allow for\nimplementations (like the PowerPC) that have multiple versions of long double\nthat are selectable by switch.  Math.h could possibly switch what function\nnextafterl points to.\n\ngcc/testsuite/\n2020-11-17  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* gcc.dg/nextafter-2.c: Include math.h.", "tree": {"sha": "6d1568504b2d500a1f354249e88c1c967996f6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d1568504b2d500a1f354249e88c1c967996f6a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec/comments", "author": null, "committer": null, "parents": [{"sha": "9bdb34cebcb4f5a9dcebbb5895d1300c2f869cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bdb34cebcb4f5a9dcebbb5895d1300c2f869cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bdb34cebcb4f5a9dcebbb5895d1300c2f869cbf"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "8149a709fa5f0934694fd6712aa96a4ddff1a43d", "filename": "gcc/testsuite/gcc.dg/nextafter-2.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-2.c?ref=81a3f3d1b6fecc10ba8c460644dfb9ebabbb9eec", "patch": "@@ -6,6 +6,18 @@\n \n #include <stdlib.h>\n \n+/* In order to run on systems like the PowerPC that have 3 different long\n+   double types, include math.h so it can choose what is the appropriate\n+   nextafterl function to use.\n+\n+   If we didn't use -fno-builtin for this test, the PowerPC compiler would have\n+   changed the names of the built-in functions that use long double.  The\n+   nextafter-1.c function runs with this mapping.\n+\n+   Since this test uses -fno-builtin, include math.h, so that math.h can make\n+   the appropriate choice to use.  */\n+#include <math.h>\n+\n #if defined(__GLIBC__) && defined(__GLIBC_PREREQ)\n # if !__GLIBC_PREREQ (2, 24)\n /* Workaround buggy nextafterl in glibc 2.23 and earlier,"}]}