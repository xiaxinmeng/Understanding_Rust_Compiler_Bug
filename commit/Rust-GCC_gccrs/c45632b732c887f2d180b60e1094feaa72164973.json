{"sha": "c45632b732c887f2d180b60e1094feaa72164973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ1NjMyYjczMmM4ODdmMmQxODBiNjBlMTA5NGZlYWE3MjE2NDk3Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-19T09:03:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-19T09:03:02Z"}, "message": "ia64.h (STRIP_NAME_ENCODING): Handle @ and * in the same string.\n\n\t* config/ia64/ia64.h (STRIP_NAME_ENCODING): Handle @ and *\n\tin the same string.\n\t(ASM_NAME_TO_STRING): Remove.\n\t* config/ia64/sysv4.h (ASM_OUTPUT_LABELREF): Handle @ and *\n\tin the same string.  Remove support for expressions.\n\nFrom-SVN: r45029", "tree": {"sha": "311dc8ce24e67b878c70d43e655f401614d880e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/311dc8ce24e67b878c70d43e655f401614d880e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c45632b732c887f2d180b60e1094feaa72164973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45632b732c887f2d180b60e1094feaa72164973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c45632b732c887f2d180b60e1094feaa72164973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45632b732c887f2d180b60e1094feaa72164973/comments", "author": null, "committer": null, "parents": [{"sha": "90675921729800c0eedd2b7ae1db8d3fd1826c55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90675921729800c0eedd2b7ae1db8d3fd1826c55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90675921729800c0eedd2b7ae1db8d3fd1826c55"}], "stats": {"total": 72, "additions": 28, "deletions": 44}, "files": [{"sha": "7936dc28976c34543b25b1735f09b88c519e981d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45632b732c887f2d180b60e1094feaa72164973/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45632b732c887f2d180b60e1094feaa72164973/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c45632b732c887f2d180b60e1094feaa72164973", "patch": "@@ -1,3 +1,11 @@\n+2001-08-19  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.h (STRIP_NAME_ENCODING): Handle @ and *\n+\tin the same string.\n+\t(ASM_NAME_TO_STRING): Remove.\n+\t* config/ia64/sysv4.h (ASM_OUTPUT_LABELREF): Handle @ and *\n+\tin the same string.  Remove support for expressions.\n+\n 2001-08-19  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.md (tablejump): Make an expander; handle"}, {"sha": "40fbf941c75c04f972f6bcc61e3b4c5b3a893d78", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45632b732c887f2d180b60e1094feaa72164973/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45632b732c887f2d180b60e1094feaa72164973/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=c45632b732c887f2d180b60e1094feaa72164973", "patch": "@@ -1968,11 +1968,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Decode SYM_NAME and store the real name part in VAR, sans the characters\n    that encode section info.  */\n \n-#define STRIP_NAME_ENCODING(VAR, SYMBOL_NAME) \\\n-  (VAR) = ((SYMBOL_NAME)                        \\\n-\t   + (*(SYMBOL_NAME) == '*' || *(SYMBOL_NAME) == SDATA_NAME_FLAG_CHAR))\n-\n-\n+#define STRIP_NAME_ENCODING(VAR, SYMBOL_NAME)\t\\\n+do {\t\t\t\t\t\t\\\n+  (VAR) = (SYMBOL_NAME);\t\t\t\\\n+  if ((VAR)[0] == SDATA_NAME_FLAG_CHAR)\t\t\\\n+    (VAR)++;\t\t\t\t\t\\\n+  if ((VAR)[0] == '*')\t\t\t\t\\\n+    (VAR)++;\t\t\t\t\t\\\n+} while (0)\n \f\n /* Position Independent Code.  */\n \n@@ -2548,23 +2551,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define UNALIGNED_INT_ASM_OP\t\t\"\\tdata4.ua\\t\"\n #define UNALIGNED_DOUBLE_INT_ASM_OP\t\"\\tdata8.ua\\t\"\n \n-/* We need to override the default definition for this in dwarf2out.c so that\n-   we can emit the necessary # postfix.  */\n-#define ASM_NAME_TO_STRING(STR, NAME)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-      if ((NAME)[0] == '*')\t\t\t\t\\\n-\tdyn_string_append (STR, NAME + 1);\t\t\\\n-      else\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  char *newstr;\t\t\t\t\t\\\n-\t  STRIP_NAME_ENCODING (newstr, NAME);\t\t\\\n-\t  dyn_string_append (STR, user_label_prefix);\t\\\n-\t  dyn_string_append (STR, newstr);\t\t\\\n-\t  dyn_string_append (STR, \"#\");\t\t\t\\\n-\t}\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n #define DWARF2_ASM_LINE_DEBUG_INFO (TARGET_DWARF2_ASM)\n \n /* Use tags for debug info labels, so that they don't break instruction"}, {"sha": "86d89acf1fb105b4716bee2fe2e1aeb3ae7cb240", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c45632b732c887f2d180b60e1094feaa72164973/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c45632b732c887f2d180b60e1094feaa72164973/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=c45632b732c887f2d180b60e1094feaa72164973", "patch": "@@ -54,28 +54,18 @@ do {\t\t\t\t\t\t\t\t\t\\\n    we have to scan it for a non-label character and insert the # there.  */\n \n #undef ASM_OUTPUT_LABELREF\n-#define ASM_OUTPUT_LABELREF(STREAM, NAME) \t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      const char *real_name;\t\t\t\t\t\t\\\n-      const char *name_end;\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      STRIP_NAME_ENCODING (real_name, NAME);\t\t\t\t\\\n-      name_end = strchr (real_name, '+');\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      fputs (user_label_prefix, STREAM);\t\t\t\t\\\n-      if (name_end)\t\t\t\t\t\t\t\\\n-\tfwrite (real_name, name_end - real_name, 1, STREAM);\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\tfputs (real_name, STREAM);\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      if (ia64_asm_output_label)\t\t\t\t\t\\\n-\tfputc ('#', STREAM);\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      if (name_end)\t\t\t\t\t\t\t\\\n-\tfputs (name_end, STREAM);\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  while (0)\n+#define ASM_OUTPUT_LABELREF(STREAM, NAME)\t\\\n+do {\t\t\t\t\t\t\\\n+  const char *name_ = NAME;\t\t\t\\\n+  if (*name_ == SDATA_NAME_FLAG_CHAR)\t\t\\\n+    name_++;\t\t\t\t\t\\\n+  if (*name_ == '*')\t\t\t\t\\\n+    name_++;\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\\\n+    fputs (user_label_prefix, STREAM);\t\t\\\n+  fputs (name_, STREAM);\t\t\t\\\n+  fputc ('#', STREAM);\t\t\t\t\\\n+} while (0)\n \n /* Intel assembler requires both flags and type if declaring a non-predefined\n    section.  */"}]}