{"sha": "31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhMDUwNDYyNDc2ZjRmMTVkYzVlMWY5ZDZhYzlhMWRkMGE3MGU3NA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-09T00:16:29Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-09T00:16:29Z"}, "message": "Daily bump.", "tree": {"sha": "48e45f28cc0b9383a991a5a51a3f548091807c71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48e45f28cc0b9383a991a5a51a3f548091807c71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/comments", "author": null, "committer": null, "parents": [{"sha": "494c5103c9eab8d3cd4364ab1265ee43ee51532f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/494c5103c9eab8d3cd4364ab1265ee43ee51532f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/494c5103c9eab8d3cd4364ab1265ee43ee51532f"}], "stats": {"total": 161, "additions": 160, "deletions": 1}, "files": [{"sha": "30eb7b841a1187d02a01aaa6ad86a4995f275fb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,42 @@\n+2020-09-08  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (scatter<mode>_insn_1offset_ds<exec_scatter>):\n+\tAdd waitcnt.\n+\t* config/gcn/gcn.md (*mov<mode>_insn, *movti_insn): Add waitcnt to\n+\tds_write alternatives.\n+\n+2020-09-08  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/gcn/mkoffload.c (process_asm): Initialise regcount.  Update\n+\tscanning for SGPR/VGPR usage for HSACO v3.\n+\n+2020-09-08  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/96967\n+\t* tree-vrp.c (find_case_label_range): Cast label range to\n+\ttype of switch operand.\n+\n+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.c (msp430_file_end): Fix jumbled\n+\tHAVE_AS_MSPABI_ATTRIBUTE and HAVE_AS_GNU_ATTRIBUTE checks.\n+\t* configure: Regenerate.\n+\t* configure.ac: Use \".mspabi_attribute 4,2\" to check for assembler\n+\tsupport for this object attribute directive.\n+\n+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* common/config/msp430/msp430-common.c (msp430_handle_option): Remove\n+\tOPT_mcpu_ handling.\n+\tSet target_cpu value to new enum values when parsing certain -mmcu=\n+\tvalues.\n+\t* config/msp430/msp430-opts.h (enum msp430_cpu_types): New.\n+\t* config/msp430/msp430.c (msp430_option_override): Handle new\n+\ttarget_cpu enum values.\n+\tSet target_cpu using extracted value for given MCU when -mcpu=\n+\toption is not passed by the user.\n+\t* config/msp430/msp430.opt: Handle -mcpu= values using enums.\n+\n 2020-09-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR rtl-optimization/96796"}, {"sha": "31cfea49579d9aa78871b8b76364b2308a022c67", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1 +1 @@\n-20200908\n+20200909"}, {"sha": "38a3b6b8e7b4a6a14dc258a4d11895731559bfa9", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,24 @@\n+2020-09-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96949\n+\t* store.cc (binding_map::apply_ctor_val_to_range): Add\n+\terror-handling for the cases where we have symbolic offsets.\n+\n+2020-09-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96950\n+\t* store.cc (binding_map::apply_ctor_to_region): Handle RANGE_EXPR\n+\twhere min_index == max_index.\n+\t(binding_map::apply_ctor_val_to_range): Replace assertion that we\n+\tdon't have a CONSTRUCTOR value with error-handling.\n+\n+2020-09-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96962\n+\t* region-model.cc (region_model::on_call_pre): Fix guard on switch\n+\ton built-ins to only consider BUILT_IN_NORMAL, rather than other\n+\tkinds of build-ins.\n+\n 2020-09-01  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96792"}, {"sha": "ffa1980efd797180ce0d96553a4189a68937d806", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,7 @@\n+2020-09-08  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* intrinsic.texi: Fix description of FINDLOC result.\n+\n 2020-09-07  Harald Anlauf  <anlauf@gmx.de>\n \n \t* trans-intrinsic.c (build_round_expr): Use temporary with"}, {"sha": "d3afde37f092be357fd14961e56268402d0d651b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,19 @@\n+2020-09-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96949\n+\t* gfortran.dg/analyzer/pr96949.f90: New test.\n+\n+2020-09-08  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/96967\n+\t* gcc.dg/tree-ssa/pr96967.c: New file.\n+\n+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/mcpu-is-430.c: New test.\n+\t* gcc.target/msp430/mcpu-is-430x.c: New test.\n+\t* gcc.target/msp430/mcpu-is-430xv2.c: New test.\n+\n 2020-09-07  Harald Anlauf  <anlauf@gmx.de>\n \n \t* gfortran.dg/pr96711.f90: New test."}, {"sha": "7203bffe599b1559673d1b7156d52ba39b8ed59e", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,8 @@\n+2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\t* floatformat.h (floatformat_bfloat16_big): New.\n+\t(floatformat_bfloat16_little): New.\n+\n 2020-08-03  Martin Jambor  <mjambor@suse.cz>\n \n \t* gomp-constants.h (GOMP_VERSION_HSA): Remove."}, {"sha": "b641bb07dd57420b122f923ff4a12a81ad719874", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,22 @@\n+2020-09-08  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* simple.c (simple_unwind): Correct comment spelling.\n+\n+2020-09-08  Ian Lance Taylor  <iant@golang.org>\n+\n+\t* macho.c (macho_add_dsym): Make space for '/' in dsym.  Use\n+\tcorrect length when freeing diralc.\n+\n+2020-09-08  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR libbacktrace/96973\n+\t* macho.c (macho_add_fat): Correctly swap 32-bit file offset.\n+\n+2020-09-08  Ian Lance Taylor  <iant@golang.org>\n+\n+\tPR libbacktrace/96971\n+\t* filetype.awk: Only match magic number at start of line.\n+\n 2020-08-24  Ian Lance Taylor  <iant@golang.org>\n \n \t* macho.c (MACH_O_MH_MAGIC_FAT_64): Define."}, {"sha": "e74c2dd2f0a3e740e7936a4144ffc96a19f3c5a7", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,13 @@\n+2020-09-08  Julian Brown  <julian@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/atomic_capture-2.c: Remove\n+\titeration-ordering assumptions.\n+\n+2020-09-08  Julian Brown  <julian@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/collapse-1.f90: Fix race condition.\n+\t* testsuite/libgomp.oacc-fortran/collapse-2.f90: Likewise.\n+\n 2020-08-20  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* plugin/plugin-nvptx.c (nvptx_free):"}, {"sha": "a5e09d862c548c76f2e96e50a5b19d11912aae21", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,34 @@\n+2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\t* floatformat.c (floatformat_bfloat16_big): New.\n+\t(floatformat_bfloat16_little): New.\n+\n+2020-09-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* d-demangle.c: Include limits.h.\n+\t(ULONG_MAX, UINT_MAX): Provide fall-back definition.\n+\t(dlang_number): Simplify and correct overflow test.  Only\n+\twrite *ret on returning non-NULL.  Make \"ret\" an unsigned long*.\n+\tOnly succeed for result of [0,UINT_MAX].\n+\t(dlang_decode_backref): Simplify and correct overflow test.\n+\tOnly write *ret on returning non-NULL.  Only succeed for\n+\tresult [1,MAX_LONG].\n+\t(dlang_backref): Remove now unnecessary range check.\n+\t(dlang_symbol_name_p): Likewise.\n+\t(string_need): Take a size_t n arg, and use size_t tem.\n+\t(string_append): Use size_t n.\n+\t(string_appendn, string_prependn): Take a size_t n arg.\n+\t(TEMPLATE_LENGTH_UNKNOWN): Define as -1UL.\n+\t(dlang_lname, dlang_parse_template): Take an unsigned long len\n+\targ.\n+\t(dlang_symbol_backref, dlang_identifier, dlang_parse_integer),\n+\t(dlang_parse_integer, dlang_parse_string),\n+\t(dlang_parse_arrayliteral, dlang_parse_assocarray),\n+\t(dlang_parse_structlit, dlang_parse_tuple),\n+\t(dlang_template_symbol_param, dlang_template_args): Use\n+\tunsigned long variables.\n+\t* testsuite/d-demangle-expected: Add new tests.\n+\n 2020-08-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-demangle.c (dlang_function_args): Handle 'in' and 'in ref'"}, {"sha": "47482eb83c2d42227ab4dd4b100eb88e4d1884e7", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=31a050462476f4f15dc5e1f9d6ac9a1dd0a70e74", "patch": "@@ -1,3 +1,17 @@\n+2020-09-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/95680\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac (DCFG_ENABLE_CET): Substitute.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* libdruntime/config/x86/switchcontext.S: Remove CET support code.\n+\t* libdruntime/core/thread.d: Import gcc.config.  Don't set version\n+\tAsmExternal when GNU_Enable_CET is true.\n+\t* libdruntime/gcc/config.d.in (GNU_Enable_CET): Define.\n+\t* src/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2020-06-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/MERGE: Merge upstream druntime d05ebaad."}]}