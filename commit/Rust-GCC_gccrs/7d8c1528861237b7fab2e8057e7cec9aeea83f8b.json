{"sha": "7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4YzE1Mjg4NjEyMzdiN2ZhYjJlODA1N2U3Y2VjOWFlZWE4M2Y4Yg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2010-03-10T19:29:50Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2010-03-10T19:29:50Z"}, "message": "asm1.C: Don't detect pic via looking for the -fpic/-fPIC flags.\n\n\t* g++.old-deja/g++.pt/asm1.C: Don't detect pic via looking for the\n\t-fpic/-fPIC flags.\n\t* g++.old-deja/g++.pt/asm2.C: Likewise.\n\t* gcc.c-torture/compile/20000804-1.c: Likewise.\n\t* gcc.target/i386/clobbers.c: Likewise.\n\nFrom-SVN: r157365", "tree": {"sha": "c7fc8d87240c03fe9dffd6415956355087cc39a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7fc8d87240c03fe9dffd6415956355087cc39a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/comments", "author": null, "committer": null, "parents": [{"sha": "abf4d60b541534d42af4e36f723273737164ea38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf4d60b541534d42af4e36f723273737164ea38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf4d60b541534d42af4e36f723273737164ea38"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "7c29203abc9f1d612ccc7d3294f3590c4e0476f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "patch": "@@ -1,3 +1,11 @@\n+2010-03-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* g++.old-deja/g++.pt/asm1.C: Don't detect pic via looking for the\n+\t-fpic/-fPIC flags.\n+\t* g++.old-deja/g++.pt/asm2.C: Likewise.\n+\t* gcc.c-torture/compile/20000804-1.c: Likewise.\n+\t* gcc.target/i386/clobbers.c: Likewise.\n+\n 2010-03-10  Tobias Burnus  <burnus@net-b.de\n \n \tPR fortran/43303"}, {"sha": "8e54a8ed54a0806b13f4e1eb0e4a422a9e837b7d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/asm1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm1.C?ref=7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble { target i?86-*-linux* x86_64-*-linux* } }\n-// We'd use ebx with -fpic/-fPIC, so skip.\n-// { dg-skip-if \"\" { ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } }\n+// We'd use ebx with 32-bit pic code, so skip.\n+// { dg-skip-if \"\" { ilp32 && { ! nonpic } } { \"*\" } { \"\" } }\n // Origin: \"Weidmann, Nicholas\" <nicholas.weidmann@swx.ch>\n \n template<int i> int foo(int v)"}, {"sha": "7a7063790acedbb4ba33bacc7cb539f7f114cd69", "filename": "gcc/testsuite/g++.old-deja/g++.pt/asm2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm2.C?ref=7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble { target i?86-*-linux* x86_64-*-linux* } }\n // { dg-require-effective-target ilp32 }\n-// We'd use ebx with -fpic/-fPIC, so skip.\n-// { dg-skip-if \"\" { *-*-* } { \"-fpic\" \"-fPIC\" } { \"\" } }\n+// We'd use ebx with 32-bit pic code, so require nonpic.\n+// { dg-require-effective-target nonpic }\n // Origin: \"Weidmann, Nicholas\" <nicholas.weidmann@swx.ch>\n \n typedef void (function_ptr)(int);"}, {"sha": "ff4110273bee1dc84bc8a9afbf52d8f43d799525", "filename": "gcc/testsuite/gcc.c-torture/compile/20000804-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c?ref=7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "patch": "@@ -1,8 +1,7 @@\n /* This does not work on m68hc11 or h8300 due to the use of an asm\n    statement to force a 'long long' (64-bits) to go in a register.  */\n /* { dg-do assemble } */\n-/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n-/* { dg-skip-if \"PIC default\" { { i?86-*-darwin*  x86_64-*-darwin* } && ilp32 } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ilp32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"No 64-bit registers\" { m32c-*-* } { \"*\" } { \"\" } } */\n /* { dg-xfail-if \"\" { m6811-*-* m6812-*-* h8300-*-* } { \"*\" } { \"\" } } */\n "}, {"sha": "17987db97011ec4aa8bf521723134a69a6972f65", "filename": "gcc/testsuite/gcc.target/i386/clobbers.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8c1528861237b7fab2e8057e7cec9aeea83f8b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c?ref=7d8c1528861237b7fab2e8057e7cec9aeea83f8b", "patch": "@@ -1,7 +1,6 @@\n /* Test asm clobbers on x86. */\n \n /* { dg-do run } */\n-/* { dg-skip-if \"\" { ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n \n extern void abort (void);\n \n@@ -13,11 +12,15 @@ int main ()\n                 abort ();\n \t/* On darwin you can't call external functions from non-pic code,\n \t   however, clobbering ebx isn't valid in pic code. Instead of\n-\t   disabling the whole test, just disable the ebx clobbering part.  */\n+\t   disabling the whole test, just disable the ebx clobbering part.\n+\t   Ditto for any x86 system that is ilp32 && pic.\n+\t*/\n #if !(defined (__MACH__))\n+#if ! defined (__PIC__) || defined (__LP64__)\n         __asm__ (\"movl $1,%0\\n\\txorl %%ebx,%%ebx\" : \"=r\" (i) : : \"ebx\");\n         if (i != 1)\n                 abort ();\n+#endif /* ! pic || lp64 */\n #endif\n         __asm__ (\"movl $1,%0\\n\\txorl %%ecx,%%ecx\" : \"=r\" (i) : : \"ecx\");\n         if (i != 1)"}]}