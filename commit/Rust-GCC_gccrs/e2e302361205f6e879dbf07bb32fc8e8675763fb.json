{"sha": "e2e302361205f6e879dbf07bb32fc8e8675763fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlMzAyMzYxMjA1ZjZlODc5ZGJmMDdiYjMyZmM4ZTg2NzU3NjNmYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-01-26T23:15:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-01-26T23:15:08Z"}, "message": "genattrtab.c (struct attr_value_list, [...]): Move to file scope from optimize_attrs.\n\n\t* genattrtab.c (struct attr_value_list, insn_code_values): Move to\n\tfile scope from optimize_attrs.\n\t(simplify_test_exp): If insn_code_values is not NULL, use it to speed\n\tup search.\n\t(optimize_attrs): Clear insn_code_values after freeing it.\n\nFrom-SVN: r121216", "tree": {"sha": "257f5baa41d379e07514633c29f3b8745c0376a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/257f5baa41d379e07514633c29f3b8745c0376a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2e302361205f6e879dbf07bb32fc8e8675763fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e302361205f6e879dbf07bb32fc8e8675763fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e302361205f6e879dbf07bb32fc8e8675763fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e302361205f6e879dbf07bb32fc8e8675763fb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7969a3791efb8a9dbed7b6a049d98befcf10db0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7969a3791efb8a9dbed7b6a049d98befcf10db0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7969a3791efb8a9dbed7b6a049d98befcf10db0d"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "55a40469404e3b1a796aa0501d5321e4f915b437", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e302361205f6e879dbf07bb32fc8e8675763fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e302361205f6e879dbf07bb32fc8e8675763fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2e302361205f6e879dbf07bb32fc8e8675763fb", "patch": "@@ -1,3 +1,11 @@\n+2007-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* genattrtab.c (struct attr_value_list, insn_code_values): Move to\n+\tfile scope from optimize_attrs.\n+\t(simplify_test_exp): If insn_code_values is not NULL, use it to speed\n+\tup search.\n+\t(optimize_attrs): Clear insn_code_values after freeing it.\n+\n 2007-01-26  Zdenek Dvorak <dvorakz@suse.cz>\n \n \t* tree-ssa-address.c (create_mem_ref): Remove \", bsi\" from"}, {"sha": "64423241e87ae63771923873698321fc960f8c7d", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 42, "deletions": 19, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2e302361205f6e879dbf07bb32fc8e8675763fb/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2e302361205f6e879dbf07bb32fc8e8675763fb/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=e2e302361205f6e879dbf07bb32fc8e8675763fb", "patch": "@@ -1,6 +1,6 @@\n /* Generate code from machine description to compute values of attributes.\n    Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   1999, 2000, 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GCC.\n@@ -189,13 +189,22 @@ struct delay_desc\n   int lineno;\t\t\t/* Line number.  */\n };\n \n+struct attr_value_list\n+{\n+  struct attr_value *av;\n+  struct insn_ent *ie;\n+  struct attr_desc *attr;\n+  struct attr_value_list *next;\n+};\n+\n /* Listheads of above structures.  */\n \n /* This one is indexed by the first character of the attribute name.  */\n #define MAX_ATTRS_INDEX 256\n static struct attr_desc *attrs[MAX_ATTRS_INDEX];\n static struct insn_def *defs;\n static struct delay_desc *delays;\n+struct attr_value_list **insn_code_values;\n \n /* Other variables.  */\n \n@@ -2448,6 +2457,7 @@ simplify_test_exp (rtx exp, int insn_code, int insn_index)\n   struct attr_desc *attr;\n   struct attr_value *av;\n   struct insn_ent *ie;\n+  struct attr_value_list *iv;\n   int i;\n   rtx newexp = exp;\n   bool left_alt, right_alt;\n@@ -2718,16 +2728,36 @@ simplify_test_exp (rtx exp, int insn_code, int insn_index)\n \t would give this insn the values being tested for.  */\n       if (insn_code >= 0\n \t  && (attr = find_attr (&XSTR (exp, 0), 0)) != NULL)\n-\tfor (av = attr->first_value; av; av = av->next)\n-\t  for (ie = av->first_insn; ie; ie = ie->next)\n-\t    if (ie->def->insn_code == insn_code)\n-\t      {\n-\t\trtx x;\n-\t\tx = evaluate_eq_attr (exp, av->value, insn_code, insn_index);\n-\t\tx = SIMPLIFY_TEST_EXP (x, insn_code, insn_index);\n-\t\tif (attr_rtx_cost(x) < 20)\n-\t\t  return x;\n-\t      }\n+\t{\n+\t  rtx x;\n+\n+\t  av = NULL;\n+\t  if (insn_code_values)\n+\t    {\n+\t      for (iv = insn_code_values[insn_code]; iv; iv = iv->next)\n+\t\tif (iv->attr == attr)\n+\t\t  {\n+\t\t    av = iv->av;\n+\t\t    break;\n+\t\t  }\n+\t    }\n+\t  else\n+\t    {\n+\t      for (av = attr->first_value; av; av = av->next)\n+\t\tfor (ie = av->first_insn; ie; ie = ie->next)\n+\t\t  if (ie->def->insn_code == insn_code)\n+\t\t    goto got_av;\n+\t    }\n+\n+\t  if (av)\n+\t    {\n+\t    got_av:\n+\t      x = evaluate_eq_attr (exp, av->value, insn_code, insn_index);\n+\t      x = SIMPLIFY_TEST_EXP (x, insn_code, insn_index);\n+\t      if (attr_rtx_cost(x) < 20)\n+\t\treturn x;\n+\t    }\n+\t}\n       break;\n \n     default:\n@@ -2756,14 +2786,6 @@ optimize_attrs (void)\n   struct insn_ent *ie;\n   rtx newexp;\n   int i;\n-  struct attr_value_list\n-  {\n-    struct attr_value *av;\n-    struct insn_ent *ie;\n-    struct attr_desc *attr;\n-    struct attr_value_list *next;\n-  };\n-  struct attr_value_list **insn_code_values;\n   struct attr_value_list *ivbuf;\n   struct attr_value_list *iv;\n \n@@ -2840,6 +2862,7 @@ optimize_attrs (void)\n \n   free (ivbuf);\n   free (insn_code_values - 2);\n+  insn_code_values = NULL;\n }\n \n /* Clear the ATTR_CURR_SIMPLIFIED_P flag in EXP and its subexpressions.  */"}]}