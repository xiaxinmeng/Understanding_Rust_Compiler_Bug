{"sha": "5b6e175e295c34e21b6498e2d0310cfa15fb6797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2ZTE3NWUyOTVjMzRlMjFiNjQ5OGUyZDAzMTBjZmExNWZiNjc5Nw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1994-02-12T02:52:08Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1994-02-12T02:52:08Z"}, "message": "Don't treat anonymous fields as belonging to the containing object.\n\nFrom-SVN: r6537", "tree": {"sha": "8d44ade096c16cf8ed830d9dda545204a37f958e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d44ade096c16cf8ed830d9dda545204a37f958e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b6e175e295c34e21b6498e2d0310cfa15fb6797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6e175e295c34e21b6498e2d0310cfa15fb6797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6e175e295c34e21b6498e2d0310cfa15fb6797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6e175e295c34e21b6498e2d0310cfa15fb6797/comments", "author": null, "committer": null, "parents": [{"sha": "2d4ffae31a0b2f7842d2388416766c2eb8a1701d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4ffae31a0b2f7842d2388416766c2eb8a1701d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4ffae31a0b2f7842d2388416766c2eb8a1701d"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "2517e6954c36b93fc061821b2efe4761184f4d7a", "filename": "gcc/dbxout.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6e175e295c34e21b6498e2d0310cfa15fb6797/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6e175e295c34e21b6498e2d0310cfa15fb6797/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=5b6e175e295c34e21b6498e2d0310cfa15fb6797", "patch": "@@ -581,22 +581,16 @@ dbxout_type_fields (type)\n      field.  */\n   for (tem = TYPE_FIELDS (type); tem; tem = TREE_CHAIN (tem))\n     {\n-      /* For nameless subunions and subrecords, treat their fields as ours.  */\n-      if (DECL_NAME (tem) == NULL_TREE\n-\t  && (TREE_CODE (TREE_TYPE (tem)) == UNION_TYPE\n-\t      || TREE_CODE (TREE_TYPE (tem)) == QUAL_UNION_TYPE\n-\t      || TREE_CODE (TREE_TYPE (tem)) == RECORD_TYPE))\n-\tdbxout_type_fields (TREE_TYPE (tem));\n       /* Omit here local type decls until we know how to support them.  */\n-      else if (TREE_CODE (tem) == TYPE_DECL)\n+      if (TREE_CODE (tem) == TYPE_DECL)\n \tcontinue;\n       /* Omit fields whose position or size are variable.  */\n       else if (TREE_CODE (tem) == FIELD_DECL\n \t       && (TREE_CODE (DECL_FIELD_BITPOS (tem)) != INTEGER_CST\n \t\t   || TREE_CODE (DECL_SIZE (tem)) != INTEGER_CST))\n \tcontinue;\n       /* Omit here the nameless fields that are used to skip bits.  */\n-      else if (DECL_NAME (tem) != 0 && TREE_CODE (tem) != CONST_DECL)\n+      else if (TREE_CODE (tem) != CONST_DECL)\n \t{\n \t  /* Continue the line if necessary,\n \t     but not before the first field.  */\n@@ -620,8 +614,16 @@ dbxout_type_fields (type)\n \t      continue;\n \t    }\n \n-\t  fprintf (asmfile, \"%s:\", IDENTIFIER_POINTER (DECL_NAME (tem)));\n-\t  CHARS (2 + IDENTIFIER_LENGTH (DECL_NAME (tem)));\n+\t  if (DECL_NAME (tem))\n+\t    {\n+\t      fprintf (asmfile, \"%s:\", IDENTIFIER_POINTER (DECL_NAME (tem)));\n+\t      CHARS (2 + IDENTIFIER_LENGTH (DECL_NAME (tem)));\n+\t    }\n+\t  else\n+\t    {\n+\t      fprintf (asmfile, \":\");\n+\t      CHARS (2);\n+\t    }\n \n \t  if (use_gnu_debug_info_extensions\n \t      && (TREE_PRIVATE (tem) || TREE_PROTECTED (tem)"}]}