{"sha": "98e20758464f5cbfc60bd61a0cadd66ebb900d96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlMjA3NTg0NjRmNWNiZmM2MGJkNjFhMGNhZGQ2NmViYjkwMGQ5Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-25T05:12:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-25T05:12:26Z"}, "message": "compiler: improvements for type alias handling\n    \n    Give an error for an attempt to define a method on an imported type.\n    \n    Give an error for each attempt to define a method on a builtin type.\n    \n    Adjust error messages to be closer to gc error messages.\n    \n    With these changes gccgo passes current tests on dev.typealias branch.\n    \n    This changes the errors printed for test/fixedbugs/issue5089.go, but\n    the change is an improvement:\n    \n        Before:\n            fixedbugs/issue5089.go:13:1: error: redefinition of \u2018bufio.Buffered\u2019: receiver name changed\n             func (b *bufio.Reader) Buffered() int { // ERROR \"non-local|redefinition\"\n             ^\n            fixedbugs/issue5089.go:11:13: note: previous definition of \u2018bufio.Buffered\u2019 was here\n             import \"bufio\" // GCCGO_ERROR \"previous\"\n                         ^\n    \n        Now:\n            fixedbugs/issue5089.go:13:7: error: may not define methods on non-local type\n             func (b *bufio.Reader) Buffered() int { // ERROR \"non-local|redefinition\"\n                   ^\n    \n    Reviewed-on: https://go-review.googlesource.com/35642\n\nFrom-SVN: r244889", "tree": {"sha": "dc33fcfdbc083da77501abbf15d7d40655c1e3a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc33fcfdbc083da77501abbf15d7d40655c1e3a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98e20758464f5cbfc60bd61a0cadd66ebb900d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e20758464f5cbfc60bd61a0cadd66ebb900d96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e20758464f5cbfc60bd61a0cadd66ebb900d96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e20758464f5cbfc60bd61a0cadd66ebb900d96/comments", "author": null, "committer": null, "parents": [{"sha": "49d4fa438eab8a98541846b0213f5d23752ba2b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49d4fa438eab8a98541846b0213f5d23752ba2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49d4fa438eab8a98541846b0213f5d23752ba2b4"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "582a86b0088fa19669ba4c9934f9179fa14446db", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e20758464f5cbfc60bd61a0cadd66ebb900d96/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e20758464f5cbfc60bd61a0cadd66ebb900d96/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=98e20758464f5cbfc60bd61a0cadd66ebb900d96", "patch": "@@ -1,4 +1,4 @@\n-fb609ff6d940768cf4db4ab7deb93b2ab686e45d\n+5c6c93f58e2aaae186bac5dcde9df1679d4896b1\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "c5ce5d9ecec9c0152e8ec13437dec6ff67c7a306", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e20758464f5cbfc60bd61a0cadd66ebb900d96/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e20758464f5cbfc60bd61a0cadd66ebb900d96/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=98e20758464f5cbfc60bd61a0cadd66ebb900d96", "patch": "@@ -1779,18 +1779,27 @@ Gogo::start_function(const std::string& name, Function_type* type,\n \n \t  while (rtype->named_type() != NULL\n \t\t && rtype->named_type()->is_alias())\n-\t    rtype = rtype->named_type()->real_type();\n+\t    rtype = rtype->named_type()->real_type()->forwarded();\n \n \t  if (rtype->is_error_type())\n \t    ret = Named_object::make_function(name, NULL, function);\n \t  else if (rtype->named_type() != NULL)\n \t    {\n-\t      ret = rtype->named_type()->add_method(name, function);\n-\t      if (!ret->is_function())\n+\t      if (rtype->named_type()->named_object()->package() != NULL)\n \t\t{\n-\t\t  // Redefinition error.\n+\t\t  go_error_at(type->receiver()->location(),\n+\t\t\t      \"may not define methods on non-local type\");\n \t\t  ret = Named_object::make_function(name, NULL, function);\n \t\t}\n+\t      else\n+\t\t{\n+\t\t  ret = rtype->named_type()->add_method(name, function);\n+\t\t  if (!ret->is_function())\n+\t\t    {\n+\t\t      // Redefinition error.\n+\t\t      ret = Named_object::make_function(name, NULL, function);\n+\t\t    }\n+\t\t}\n \t    }\n \t  else if (rtype->forward_declaration_type() != NULL)\n \t    {\n@@ -2247,8 +2256,14 @@ Gogo::define_global_names()\n \t  if (global_no->is_type())\n \t    {\n \t      if (no->type_declaration_value()->has_methods())\n-\t\tgo_error_at(no->location(),\n-\t\t\t    \"may not define methods for global type\");\n+\t\t{\n+\t\t  for (std::vector<Named_object*>::const_iterator p =\n+\t\t\t no->type_declaration_value()->methods()->begin();\n+\t\t       p != no->type_declaration_value()->methods()->end();\n+\t\t       p++)\n+\t\t    go_error_at((*p)->location(),\n+\t\t\t\t\"may not define methods on non-local type\");\n+\t\t}\n \t      no->set_type_value(global_no->type_value());\n \t    }\n \t  else"}, {"sha": "dc393e9b06c5350b05c4471ce36a2a6a11038e7f", "filename": "gcc/testsuite/go.test/test/fixedbugs/issue5089.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98e20758464f5cbfc60bd61a0cadd66ebb900d96/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue5089.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98e20758464f5cbfc60bd61a0cadd66ebb900d96/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue5089.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Ffixedbugs%2Fissue5089.go?ref=98e20758464f5cbfc60bd61a0cadd66ebb900d96", "patch": "@@ -1,14 +1,14 @@\n // errorcheck\n \n-// Copyright 2013 The Go Authors.  All rights reserved.\n+// Copyright 2013 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n // issue 5089: gc allows methods on non-locals if symbol already exists\n \n package p\n \n-import \"bufio\"\t// GCCGO_ERROR \"previous\"\n+import \"bufio\"\n \n func (b *bufio.Reader) Buffered() int { // ERROR \"non-local|redefinition\"\n \treturn -1"}]}