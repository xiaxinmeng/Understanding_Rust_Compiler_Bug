{"sha": "c9bffcd53e66fefb4e168c8d57d759fa6475f275", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzliZmZjZDUzZTY2ZmVmYjRlMTY4YzhkNTdkNzU5ZmE2NDc1ZjI3NQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2001-05-29T17:50:50Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2001-05-29T17:50:50Z"}, "message": "i386-signal.h (MAKE_THROW_FRAME): Don't fix up frame pointer...\n\n2001-05-29  Andrew Haley  <aph@redhat.com>\n\n        * include/i386-signal.h (MAKE_THROW_FRAME): Don't fix up frame\n        pointer: the dwarf unwinder in libgcc will do everything that's\n        needed.\n        (HANDLE_DIVIDE_OVERFLOW): Tidy.  Don't mess with stack frames any\n        more than we absolutely need to.\n        * configure.host (EXCEPTIONSPEC): Remove libgcj_sjlj on Alpha.\n        * configure.in (SIGNAL_HANDLER): Use include/dwarf2-signal.h on\n        Alpha.\n        (SIGNAL_HANDLER): Test \"$enable_sjlj_exceptions\", not\n        \"$libgcj_sjlj\".\n        * configure: Rebuilt.\n        * include/dwarf2-signal.h (MAKE_THROW_FRAME): Adjust PC\n        for Alpha.\n        (SIGNAL_HANDLER): Use siginfo style handler.\n        (INIT_SEGV): Likewise.\n        (INIT_FPE): Likewise.\n        * include/ppc-signal.h: Delete whole file.\n\nFrom-SVN: r42691", "tree": {"sha": "e8a819f21050f165845bdc2be079418c748fcfae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a819f21050f165845bdc2be079418c748fcfae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9bffcd53e66fefb4e168c8d57d759fa6475f275", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9bffcd53e66fefb4e168c8d57d759fa6475f275", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9bffcd53e66fefb4e168c8d57d759fa6475f275", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9bffcd53e66fefb4e168c8d57d759fa6475f275/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "022dae817d1d2f731e3fcaa7b650319983aeea8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022dae817d1d2f731e3fcaa7b650319983aeea8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022dae817d1d2f731e3fcaa7b650319983aeea8b"}], "stats": {"total": 285, "additions": 102, "deletions": 183}, "files": [{"sha": "2e88c1bc2abece49dbfa706a7e879cc1cafe2910", "filename": "libjava/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c9bffcd53e66fefb4e168c8d57d759fa6475f275", "patch": "@@ -1,3 +1,23 @@\n+2001-05-29  Andrew Haley  <aph@redhat.com>\n+\n+        * include/i386-signal.h (MAKE_THROW_FRAME): Don't fix up frame\n+        pointer: the dwarf unwinder in libgcc will do everything that's\n+        needed.\n+        (HANDLE_DIVIDE_OVERFLOW): Tidy.  Don't mess with stack frames any\n+        more than we absolutely need to.\n+        * configure.host (EXCEPTIONSPEC): Remove libgcj_sjlj on Alpha.\n+        * configure.in (SIGNAL_HANDLER): Use include/dwarf2-signal.h on\n+        Alpha.\n+        (SIGNAL_HANDLER): Test \"$enable_sjlj_exceptions\", not\n+        \"$libgcj_sjlj\".\n+        * configure: Rebuilt.\n+        * include/dwarf2-signal.h (MAKE_THROW_FRAME): Adjust PC\n+        for Alpha.\n+        (SIGNAL_HANDLER): Use siginfo style handler.\n+        (INIT_SEGV): Likewise.\n+        (INIT_FPE): Likewise.\n+        * include/ppc-signal.h: Delete whole file.\n+\n 2001-05-24  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/natString.cc (init): Throw"}, {"sha": "9576bfc7ac9ca7a12710c4aba8394b5151c5aa19", "filename": "libjava/configure", "status": "modified", "additions": 47, "deletions": 44, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=c9bffcd53e66fefb4e168c8d57d759fa6475f275", "patch": "@@ -5871,13 +5871,16 @@ case \"${host}\" in\n  powerpc-*-linux*)\n     SIGNAL_HANDLER=include/dwarf2-signal.h\n     ;;\n+ alpha*-*-linux*)\n+    SIGNAL_HANDLER=include/dwarf2-signal.h\n+    ;;\n  *)\n     SIGNAL_HANDLER=include/default-signal.h\n     ;;\n esac\n \n # If we're using sjlj exceptions, forget what we just learned.\n-if test \"$libgcj_sjlj\" = yes; then\n+if test \"$enable_sjlj_exceptions\" = yes; then\n    SIGNAL_HANDLER=include/default-signal.h\n fi\n \n@@ -5896,7 +5899,7 @@ fi\n # Uses ac_ vars as temps to allow command line to override cache and checks.\n # --without-x overrides everything else, but does not touch the cache.\n echo $ac_n \"checking for X\"\"... $ac_c\" 1>&6\n-echo \"configure:5900: checking for X\" >&5\n+echo \"configure:5903: checking for X\" >&5\n \n # Check whether --with-x or --without-x was given.\n if test \"${with_x+set}\" = set; then\n@@ -5958,12 +5961,12 @@ if test \"$ac_x_includes\" = NO; then\n \n   # First, try using that file with no special directory specified.\n cat > conftest.$ac_ext <<EOF\n-#line 5962 \"configure\"\n+#line 5965 \"configure\"\n #include \"confdefs.h\"\n #include <$x_direct_test_include>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:5967: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:5970: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -6032,14 +6035,14 @@ if test \"$ac_x_libraries\" = NO; then\n   ac_save_LIBS=\"$LIBS\"\n   LIBS=\"-l$x_direct_test_library $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6036 \"configure\"\n+#line 6039 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n ${x_direct_test_function}()\n ; return 0; }\n EOF\n-if { (eval echo configure:6043: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6046: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   LIBS=\"$ac_save_LIBS\"\n # We can link X programs with no special library path.\n@@ -6145,17 +6148,17 @@ else\n     case \"`(uname -sr) 2>/dev/null`\" in\n     \"SunOS 5\"*)\n       echo $ac_n \"checking whether -R must be followed by a space\"\"... $ac_c\" 1>&6\n-echo \"configure:6149: checking whether -R must be followed by a space\" >&5\n+echo \"configure:6152: checking whether -R must be followed by a space\" >&5\n       ac_xsave_LIBS=\"$LIBS\"; LIBS=\"$LIBS -R$x_libraries\"\n       cat > conftest.$ac_ext <<EOF\n-#line 6152 \"configure\"\n+#line 6155 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6159: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6162: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_R_nospace=yes\n else\n@@ -6171,14 +6174,14 @@ rm -f conftest*\n       else\n \tLIBS=\"$ac_xsave_LIBS -R $x_libraries\"\n \tcat > conftest.$ac_ext <<EOF\n-#line 6175 \"configure\"\n+#line 6178 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6182: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6185: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_R_space=yes\n else\n@@ -6210,15 +6213,15 @@ rm -f conftest*\n     # libraries were built with DECnet support.  And karl@cs.umb.edu says\n     # the Alpha needs dnet_stub (dnet does not exist).\n     echo $ac_n \"checking for dnet_ntoa in -ldnet\"\"... $ac_c\" 1>&6\n-echo \"configure:6214: checking for dnet_ntoa in -ldnet\" >&5\n+echo \"configure:6217: checking for dnet_ntoa in -ldnet\" >&5\n ac_lib_var=`echo dnet'_'dnet_ntoa | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldnet  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6222 \"configure\"\n+#line 6225 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6229,7 +6232,7 @@ int main() {\n dnet_ntoa()\n ; return 0; }\n EOF\n-if { (eval echo configure:6233: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6236: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6251,15 +6254,15 @@ fi\n \n     if test $ac_cv_lib_dnet_dnet_ntoa = no; then\n       echo $ac_n \"checking for dnet_ntoa in -ldnet_stub\"\"... $ac_c\" 1>&6\n-echo \"configure:6255: checking for dnet_ntoa in -ldnet_stub\" >&5\n+echo \"configure:6258: checking for dnet_ntoa in -ldnet_stub\" >&5\n ac_lib_var=`echo dnet_stub'_'dnet_ntoa | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldnet_stub  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6263 \"configure\"\n+#line 6266 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6270,7 +6273,7 @@ int main() {\n dnet_ntoa()\n ; return 0; }\n EOF\n-if { (eval echo configure:6274: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6277: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6299,12 +6302,12 @@ fi\n     # The nsl library prevents programs from opening the X display\n     # on Irix 5.2, according to dickey@clark.net.\n     echo $ac_n \"checking for gethostbyname\"\"... $ac_c\" 1>&6\n-echo \"configure:6303: checking for gethostbyname\" >&5\n+echo \"configure:6306: checking for gethostbyname\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6308 \"configure\"\n+#line 6311 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char gethostbyname(); below.  */\n@@ -6327,7 +6330,7 @@ gethostbyname();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6331: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6334: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_gethostbyname=yes\"\n else\n@@ -6348,15 +6351,15 @@ fi\n \n     if test $ac_cv_func_gethostbyname = no; then\n       echo $ac_n \"checking for gethostbyname in -lnsl\"\"... $ac_c\" 1>&6\n-echo \"configure:6352: checking for gethostbyname in -lnsl\" >&5\n+echo \"configure:6355: checking for gethostbyname in -lnsl\" >&5\n ac_lib_var=`echo nsl'_'gethostbyname | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lnsl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6360 \"configure\"\n+#line 6363 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6367,7 +6370,7 @@ int main() {\n gethostbyname()\n ; return 0; }\n EOF\n-if { (eval echo configure:6371: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6374: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6397,12 +6400,12 @@ fi\n     # -lsocket must be given before -lnsl if both are needed.\n     # We assume that if connect needs -lnsl, so does gethostbyname.\n     echo $ac_n \"checking for connect\"\"... $ac_c\" 1>&6\n-echo \"configure:6401: checking for connect\" >&5\n+echo \"configure:6404: checking for connect\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_connect'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6406 \"configure\"\n+#line 6409 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char connect(); below.  */\n@@ -6425,7 +6428,7 @@ connect();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6429: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6432: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_connect=yes\"\n else\n@@ -6446,15 +6449,15 @@ fi\n \n     if test $ac_cv_func_connect = no; then\n       echo $ac_n \"checking for connect in -lsocket\"\"... $ac_c\" 1>&6\n-echo \"configure:6450: checking for connect in -lsocket\" >&5\n+echo \"configure:6453: checking for connect in -lsocket\" >&5\n ac_lib_var=`echo socket'_'connect | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lsocket $X_EXTRA_LIBS $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6458 \"configure\"\n+#line 6461 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6465,7 +6468,7 @@ int main() {\n connect()\n ; return 0; }\n EOF\n-if { (eval echo configure:6469: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6472: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6489,12 +6492,12 @@ fi\n \n     # gomez@mi.uni-erlangen.de says -lposix is necessary on A/UX.\n     echo $ac_n \"checking for remove\"\"... $ac_c\" 1>&6\n-echo \"configure:6493: checking for remove\" >&5\n+echo \"configure:6496: checking for remove\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_remove'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6498 \"configure\"\n+#line 6501 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char remove(); below.  */\n@@ -6517,7 +6520,7 @@ remove();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6521: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6524: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_remove=yes\"\n else\n@@ -6538,15 +6541,15 @@ fi\n \n     if test $ac_cv_func_remove = no; then\n       echo $ac_n \"checking for remove in -lposix\"\"... $ac_c\" 1>&6\n-echo \"configure:6542: checking for remove in -lposix\" >&5\n+echo \"configure:6545: checking for remove in -lposix\" >&5\n ac_lib_var=`echo posix'_'remove | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lposix  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6550 \"configure\"\n+#line 6553 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6557,7 +6560,7 @@ int main() {\n remove()\n ; return 0; }\n EOF\n-if { (eval echo configure:6561: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6564: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6581,12 +6584,12 @@ fi\n \n     # BSDI BSD/OS 2.1 needs -lipc for XOpenDisplay.\n     echo $ac_n \"checking for shmat\"\"... $ac_c\" 1>&6\n-echo \"configure:6585: checking for shmat\" >&5\n+echo \"configure:6588: checking for shmat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_shmat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 6590 \"configure\"\n+#line 6593 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char shmat(); below.  */\n@@ -6609,7 +6612,7 @@ shmat();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:6613: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6616: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_shmat=yes\"\n else\n@@ -6630,15 +6633,15 @@ fi\n \n     if test $ac_cv_func_shmat = no; then\n       echo $ac_n \"checking for shmat in -lipc\"\"... $ac_c\" 1>&6\n-echo \"configure:6634: checking for shmat in -lipc\" >&5\n+echo \"configure:6637: checking for shmat in -lipc\" >&5\n ac_lib_var=`echo ipc'_'shmat | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lipc  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6642 \"configure\"\n+#line 6645 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6649,7 +6652,7 @@ int main() {\n shmat()\n ; return 0; }\n EOF\n-if { (eval echo configure:6653: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6656: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -6682,15 +6685,15 @@ fi\n   # libraries we check for below, so use a different variable.\n   #  --interran@uluru.Stanford.EDU, kb@cs.umb.edu.\n   echo $ac_n \"checking for IceConnectionNumber in -lICE\"\"... $ac_c\" 1>&6\n-echo \"configure:6686: checking for IceConnectionNumber in -lICE\" >&5\n+echo \"configure:6689: checking for IceConnectionNumber in -lICE\" >&5\n ac_lib_var=`echo ICE'_'IceConnectionNumber | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lICE $X_EXTRA_LIBS $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 6694 \"configure\"\n+#line 6697 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -6701,7 +6704,7 @@ int main() {\n IceConnectionNumber()\n ; return 0; }\n EOF\n-if { (eval echo configure:6705: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:6708: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else"}, {"sha": "0c36ee1b4404333cfac1bdeb4009501e0cbf4b17", "filename": "libjava/configure.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=c9bffcd53e66fefb4e168c8d57d759fa6475f275", "patch": "@@ -757,13 +757,16 @@ case \"${host}\" in\n  powerpc-*-linux*)\n     SIGNAL_HANDLER=include/dwarf2-signal.h\n     ;;\n+ alpha*-*-linux*)\n+    SIGNAL_HANDLER=include/dwarf2-signal.h\n+    ;;\n  *)\n     SIGNAL_HANDLER=include/default-signal.h\n     ;;\n esac\n \n # If we're using sjlj exceptions, forget what we just learned.\n-if test \"$libgcj_sjlj\" = yes; then\n+if test \"$enable_sjlj_exceptions\" = yes; then\n    SIGNAL_HANDLER=include/default-signal.h\n fi\n "}, {"sha": "3a662aec2d979bf6138ec6b5340aa8365aa016f8", "filename": "libjava/include/dwarf2-signal.h", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Finclude%2Fdwarf2-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Finclude%2Fdwarf2-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fdwarf2-signal.h?ref=c9bffcd53e66fefb4e168c8d57d759fa6475f275", "patch": "@@ -4,9 +4,8 @@\n \n    This file is part of libgcj.\n \n-   Use this file for every target for which the dwarf2 unwinder in\n-   libgcc can unwind through signal handlers and no special actions\n-   are needed.\n+   Use this file for a target for which the dwarf2 unwinder in libgcc\n+   can unwind through signal handlers.\n \n This software is copyrighted work licensed under the terms of the\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n@@ -22,29 +21,43 @@ details.  */\n #undef HANDLE_FPE\n \n #define SIGNAL_HANDLER(_name)\t\\\n-static void _Jv_##_name (int)\n+static void _Jv_##_name (int, siginfo_t *, void *_p)\n \n class java::lang::Throwable;\n \n // Unwind the stack to the point at which the signal was generated and\n-// then throw an exception.  With the dwarf2 unwinder we don't need to\n-// do anything.\n-\n+// then throw an exception.  With the dwarf2 unwinder we don't usually\n+// need to do anything, with some minor exceptions.\n+\n+#ifdef __alpha__\n+#define MAKE_THROW_FRAME(_exception)\t\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  /* Alpha either leaves PC pointing at a faulting instruction or the\t\\\n+   following instruction, depending on the signal.  SEGV always does\t\\\n+   the former, so we adjust the saved PC to point to the following\t\\\n+   instruction; this is what the handler in libgcc expects.  */\t\t\\\n+  struct sigcontext *_sc = (struct sigcontext *)_p;\t\t\t\\\n+  _sc->sc_pc += 4;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+while (0)\n+#else\n #define MAKE_THROW_FRAME(_exception)\t\t\\\n do\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\\\n+  (void)_p;\t\t\t\t\t\\\n }\t\t\t\t\t\t\\\n while (0)\n-\n+#endif\n \n #define INIT_SEGV\t\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\\\n     nullp = new java::lang::NullPointerException ();    \t\\\n     struct sigaction act;\t\t\t\t\t\\\n-    act.sa_handler = _Jv_catch_segv;\t\t\t\t\\\n+    act.sa_sigaction = _Jv_catch_segv;      \t\t\t\\\n     sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n-    act.sa_flags = 0;\t\t\t\t\t\t\\\n+    act.sa_flags = SA_SIGINFO;\t       \t\t\t\t\\\n     syscall (SYS_sigaction, SIGSEGV, &act, NULL);\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)  \n@@ -55,9 +68,9 @@ do\t\t\t\t\t\t\t\t\\\n     arithexception = new java::lang::ArithmeticException \t\\\n       (JvNewStringLatin1 (\"/ by zero\"));\t\t\t\\\n     struct sigaction act;\t\t\t\t\t\\\n-    act.sa_handler = _Jv_catch_fpe;\t\t\t\t\\\n+    act.sa_sigaction = _Jv_catch_fpe;\t\t\t\t\\\n     sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n-    act.sa_flags = 0;\t\t\t\t\t\t\\\n+    act.sa_flags = SA_SIGINFO;\t\t       \t\t\t\\\n     syscall (SYS_sigaction, SIGFPE, &act, NULL);\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)  "}, {"sha": "f89a0b16217d9988dfb7a888c4d52419407fecad", "filename": "libjava/include/i386-signal.h", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Finclude%2Fi386-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9bffcd53e66fefb4e168c8d57d759fa6475f275/libjava%2Finclude%2Fi386-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fi386-signal.h?ref=c9bffcd53e66fefb4e168c8d57d759fa6475f275", "patch": "@@ -31,16 +31,11 @@ do\t\t\t\t\t\t\t\t\t\\\n   void **_p = (void **)&_dummy;\t\t\t\t\t\t\\\n   struct sigcontext_struct *_regs = (struct sigcontext_struct *)++_p;\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  register unsigned long _ebp = _regs->ebp;\t\t\t\t\\\n-  register unsigned char *_eip = (unsigned char *)_regs->eip;\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n   /* Advance the program counter so that it is after the start of the\t\\\n      instruction:  the x86 exception handler expects\t\t\t\\\n      the PC to point to the instruction after a call. */\t\t\\\n-  _eip += 2;\t\t\t\t\t\t\t\t\\\n+  _regs->eip += 2;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  asm volatile (\"mov %0, (%%ebp); mov %1, 4(%%ebp)\"\t\t\t\\\n-\t\t: : \"r\"(_ebp), \"r\"(_eip));\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n@@ -63,7 +58,7 @@ do\t\t\t\t\t\t\t\t\t\\\n    * As the instructions are variable length it is necessary to do a\t\\\n    * little calculation to figure out where the following instruction\t\\\n    * actually is.\t\t\t\t\t\t\t\\\n-  \t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n    */\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   if (_eip[0] == 0xf7)\t\t\t\t\t\t\t\\\n@@ -104,19 +99,19 @@ do\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t  _eip = (unsigned char *)_ebp[1];\t\t\t\t\\\n \t  _ebp = (unsigned long *)_ebp[0];\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+\t  asm volatile (\"mov %0, (%%ebp); mov %1, 4(%%ebp)\"\t\t\\\n+\t\t\t: : \"r\"(_ebp), \"r\"(_eip));\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  /* Advance the program counter so that it is after the start\t\\\n \t     of the instruction: this is because the x86 exception\t\\\n \t     handler expects the PC to point to the instruction after a\t\\\n \t     call. */\t\t\t\t\t\t\t\\\n-\t  _eip += 2;\t\t\t\t\t\t\t\\\n+\t  _regs->eip += 2;\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  asm volatile (\"mov %0, (%%ebp); mov %1, 4(%%ebp)\"\t\t\t\\\n-\t\t: : \"r\"(_ebp), \"r\"(_eip));\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\t\\\n while (0)\n "}, {"sha": "003a76045336f3cdae7df077d7292133a8fe84d2", "filename": "libjava/include/ppc-signal.h", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/022dae817d1d2f731e3fcaa7b650319983aeea8b/libjava%2Finclude%2Fppc-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/022dae817d1d2f731e3fcaa7b650319983aeea8b/libjava%2Finclude%2Fppc-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fppc-signal.h?ref=022dae817d1d2f731e3fcaa7b650319983aeea8b", "patch": "@@ -1,115 +0,0 @@\n-// ppc-signal.h - Catch runtime signals and turn them into exceptions.\n-\n-/* Copyright (C) 2000  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-#ifndef JAVA_SIGNAL_H\n-#define JAVA_SIGNAL_H 1\n-\n-#include <signal.h>\n-#include <ucontext.h>\n-\n-#define HANDLE_SEGV 1\n-#undef HANDLE_FPE\n-\n-#define SIGNAL_HANDLER(_name)\t\t\t\\\n-__asm (\"\\t.section\\t\\\".text\\\"\\n\"\t\t\\\n-       \"\\t.align 2\\n\"\t\t\t\t\\\n-       \"_Jv_\" #_name \":\\n\"\t\t\t\\\n-       \"\\tmr 3, 1\\n\"\t\t\t\t\\\n-       \"\\tb _Jv_stub_\" #_name \"\\n\");\t\t\\\n-extern \"C\" void _Jv_##_name (int _dummy);\t\\\n-extern \"C\" void _Jv_stub_##_name (char *_sp)\t\\\n-\n-class java::lang::Throwable;\n-\n-// Unwind the stack to the point at which the signal was generated and\n-// then throw an exception.\n-\n-#define MAKE_THROW_FRAME(_exception)\t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  struct sigcontext_struct *_context\t\t\t\t\t\\\n-    = (struct sigcontext_struct *)(_sp + __SIGNAL_FRAMESIZE);\t\t\\\n-  long int regs [34];\t\t\t\t\t\t\t\\\n-  memcpy (regs, &_context->regs->gpr[0], 32 * sizeof (long int));\t\\\n-  regs[32] = _context->regs->nip + sizeof (long int);\t\t\t\\\n-  regs[33] = _context->regs->link;\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  __asm volatile (\t\t\t\t\t\t\t\\\n-\t\"\\tmr 31,%0\\n\"\t\t\t\t\t\t\t\\\n-        \"\\tmr 3,%1              # exception to throw\\n\"\t\t\t\\\n-        \"\\tlwz 0,128(31)        # ip\\n\"\t\t\t\t\t\\\n-        \"\\tmtlr 0\\n\"\t\t\t\t\t\t\t\\\n-        \"\\tlwz 1,4(31)          # previous r1\\n\"\t\t\t\\\n-        \"\\tlwz 0,132(31)        # previous lr\\n\"\t\t\t\\\n-        \"\\tlwz 2,0(1)           # previous previous r1\\n\"\t\t\\\n-        \"\\tstw 0,4(2)           # save previous lr\\n\"\t\t\t\\\n-\t\"\\tlwz 0,0(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 2,8(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 4,16(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 5,20(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 6,24(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 7,28(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 8,32(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 9,36(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 10,40(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 11,44(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 12,48(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 13,52(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 14,56(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 15,60(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 16,64(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 17,68(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 18,72(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 19,76(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 20,80(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 21,84(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 22,88(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 23,92(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 24,96(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 25,100(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 26,104(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 27,108(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 28,112(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 29,116(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 30,120(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tlwz 31,124(31)\\n\"\t\t\t\t\t\t\\\n-\t\"\\tb _Jv_ThrowSignal\\n\"\t\t\t\t\t\t\\\n-\t\t  : : \"r\"(regs), \"r\"(_exception)\t       \t\t\\\n-\t\t  : \"r31\", \"r3\");\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-while (0)  \n-\n-\n-#define INIT_SEGV\t\t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\\\n-    nullp = new java::lang::NullPointerException ();    \t\\\n-    struct sigaction act;\t\t\t\t\t\\\n-    act.sa_handler = _Jv_catch_segv;\t\t\t\t\\\n-    sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n-    act.sa_flags = 0;\t\t\t\t\t\t\\\n-    __sigaction (SIGSEGV, &act, NULL);\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\\\n-while (0)  \n-\n-#define INIT_FPE\t\t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\\\n-  { \t\t\t\t\t\t\t\t\\\n-    arithexception = new java::lang::ArithmeticException \t\\\n-      (JvNewStringLatin1 (\"/ by zero\"));\t\t\t\\\n-    struct sigaction act;\t\t\t\t\t\\\n-    act.sa_handler = _Jv_catch_fpe;\t\t\t\t\\\n-    sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n-    act.sa_flags = 0;\t\t\t\t\t\t\\\n-    __sigaction (SIGFPE, &act, NULL);\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\\\n-while (0)  \n-\n-#endif /* JAVA_SIGNAL_H */"}]}