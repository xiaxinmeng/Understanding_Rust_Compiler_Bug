{"sha": "3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M0MTFmM2YyYzRlZDZkYmMzYTJjMDk5NjUzM2RjYjlkMDM2NWE4ZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2011-12-07T19:23:10Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2011-12-07T19:23:10Z"}, "message": "re PR middle-end/45416 (Code size regression from 4.4 for ARM)\n\n2011-12-07  Andrew Pinski  <apinski@cavium.com>\n\n\tPR middle-end/45416\n\t* expr.c (do_store_flag): Rewrite code that looks for BIT_AND_EXPR for\n\tSSA-expand.\n\n2011-12-07  Andrew Pinski  <apinski@cavium.com>\n\n\tPR middle-end/45416\n\t* gcc.dg/pr45416.c: New testcase.\n\nFrom-SVN: r182084", "tree": {"sha": "08fac1b77f70940bf7991c73eae8f8f0957d69f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08fac1b77f70940bf7991c73eae8f8f0957d69f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cdd2e6c6effc66cf631589102ac6345627022c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cdd2e6c6effc66cf631589102ac6345627022c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cdd2e6c6effc66cf631589102ac6345627022c2"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "5d50a192d9965958e69e0243d7b977211f7d3625", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "patch": "@@ -1,3 +1,9 @@\n+2011-12-07  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR middle-end/45416\n+\t* expr.c (do_store_flag): Rewrite code that looks for BIT_AND_EXPR for\n+\tSSA-expand.\n+\n 2011-12-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50823"}, {"sha": "524ddab1f9ed8fc16e65991e5e677a575c18c4ad", "filename": "gcc/expr.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "patch": "@@ -10563,15 +10563,22 @@ do_store_flag (sepops ops, rtx target, enum machine_mode mode)\n      so we just call into the folder and expand its result.  */\n \n   if ((code == NE || code == EQ)\n-      && TREE_CODE (arg0) == BIT_AND_EXPR && integer_zerop (arg1)\n-      && integer_pow2p (TREE_OPERAND (arg0, 1))\n+      && integer_zerop (arg1)\n       && (TYPE_PRECISION (ops->type) != 1 || TYPE_UNSIGNED (ops->type)))\n     {\n-      tree type = lang_hooks.types.type_for_mode (mode, unsignedp);\n-      return expand_expr (fold_single_bit_test (loc,\n-\t\t\t\t\t\tcode == NE ? NE_EXPR : EQ_EXPR,\n-\t\t\t\t\t\targ0, arg1, type),\n-\t\t\t  target, VOIDmode, EXPAND_NORMAL);\n+      gimple srcstmt = get_def_for_expr (arg0, BIT_AND_EXPR);\n+      if (srcstmt\n+\t  && integer_pow2p (gimple_assign_rhs2 (srcstmt)))\n+\t{\n+\t  enum tree_code tcode = code == NE ? NE_EXPR : EQ_EXPR;\n+\t  tree type = lang_hooks.types.type_for_mode (mode, unsignedp);\n+\t  tree temp = fold_build2_loc (loc, BIT_AND_EXPR, TREE_TYPE (arg1),\n+\t\t\t\t       gimple_assign_rhs1 (srcstmt),\n+\t\t\t\t       gimple_assign_rhs2 (srcstmt));\n+\t  temp = fold_single_bit_test (loc, tcode, temp, arg1, type);\n+\t  if (temp)\n+\t    return expand_expr (temp, target, VOIDmode, EXPAND_NORMAL);\n+\t}\n     }\n \n   if (! get_subtarget (target)"}, {"sha": "04d6c2304f1fbcde806aaf23b4b7033580685755", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "patch": "@@ -1,3 +1,8 @@\n+2011-12-07  Andrew Pinski  <apinski@cavium.com>\n+\n+\tPR middle-end/45416\n+\t* gcc.dg/pr45416.c: New testcase.\n+\n 2011-12-07  Ed Smith-Rowland <3dw4rd@verizon.net>\n \n \tPR c++/51420"}, {"sha": "1e57185b1c7e36a0d78c8395134fc73b23d58f99", "filename": "gcc/testsuite/gcc.dg/pr45416.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45416.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45416.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45416.c?ref=3c411f3f2c4ed6dbc3a2c0996533dcb9d0365a8d", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int foo(long long a)\n+{\n+   if (a & (long long) 0x400)\n+      return 1;\n+   return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"andl\" { target i?86-*-linux* x86_64-*-linux* } } } \" */\n+/* { dg-final { scan-assembler-not \"setne\" { target i?86-*-linux* x86_64-*-linux* } } }\" */\n+/* { dg-final { scan-assembler \"and\" { target arm*-*-* } } }\" */\n+/* { dg-final { scan-assembler-not \"moveq\" { target arm*-*-* } } }\" */"}]}