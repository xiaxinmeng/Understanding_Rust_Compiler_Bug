{"sha": "793e17f93b1ad24a86d7a7e25ee34effea4a2689", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkzZTE3ZjkzYjFhZDI0YTg2ZDdhN2UyNWVlMzRlZmZlYTRhMjY4OQ==", "commit": {"author": {"name": "Luis Machado", "email": "luis.machado@linaro.org", "date": "2017-11-13T10:29:33Z"}, "committer": {"name": "Luis Machado", "email": "luisgpm@gcc.gnu.org", "date": "2017-11-13T10:29:33Z"}, "message": "[Documentation] Fix latency in pipeline description example\n\n\t2017-11-09  Luis Machado  <luis.machado@linaro.org>\n\n\tgcc/\n\t* doc/md.texi (Specifying processor pipeline description): Fix\n\tincorrect latency for the div instruction example.\n\nFrom-SVN: r254680", "tree": {"sha": "d45461f96e5960d328deafa5e16f06dac484fb41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d45461f96e5960d328deafa5e16f06dac484fb41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/793e17f93b1ad24a86d7a7e25ee34effea4a2689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793e17f93b1ad24a86d7a7e25ee34effea4a2689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793e17f93b1ad24a86d7a7e25ee34effea4a2689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793e17f93b1ad24a86d7a7e25ee34effea4a2689/comments", "author": {"login": "luislinaro", "id": 53092780, "node_id": "MDQ6VXNlcjUzMDkyNzgw", "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luislinaro", "html_url": "https://github.com/luislinaro", "followers_url": "https://api.github.com/users/luislinaro/followers", "following_url": "https://api.github.com/users/luislinaro/following{/other_user}", "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions", "organizations_url": "https://api.github.com/users/luislinaro/orgs", "repos_url": "https://api.github.com/users/luislinaro/repos", "events_url": "https://api.github.com/users/luislinaro/events{/privacy}", "received_events_url": "https://api.github.com/users/luislinaro/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6fbd15424044457d5c283e5fd2d0d1bb0dcfbb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fbd15424044457d5c283e5fd2d0d1bb0dcfbb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fbd15424044457d5c283e5fd2d0d1bb0dcfbb6"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "c31208aa7bc9ac69549b54ee2b96b4192bd110e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793e17f93b1ad24a86d7a7e25ee34effea4a2689/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793e17f93b1ad24a86d7a7e25ee34effea4a2689/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=793e17f93b1ad24a86d7a7e25ee34effea4a2689", "patch": "@@ -1,3 +1,8 @@\n+2017-11-13  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* doc/md.texi (Specifying processor pipeline description): Fix\n+\tincorrect latency for the div instruction example.\n+\n 2017-11-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/78821"}, {"sha": "9806b65d1cfef23ce1d352b5a508c0517e464edb", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793e17f93b1ad24a86d7a7e25ee34effea4a2689/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793e17f93b1ad24a86d7a7e25ee34effea4a2689/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=793e17f93b1ad24a86d7a7e25ee34effea4a2689", "patch": "@@ -9617,7 +9617,7 @@ their result is ready in two cycles.  The simple integer insns are\n issued into the first pipeline unless it is reserved, otherwise they\n are issued into the second pipeline.  Integer division and\n multiplication insns can be executed only in the second integer\n-pipeline and their results are ready correspondingly in 8 and 4\n+pipeline and their results are ready correspondingly in 9 and 4\n cycles.  The integer division is not pipelined, i.e.@: the subsequent\n integer division insn can not be issued until the current division\n insn finished.  Floating point insns are fully pipelined and their\n@@ -9634,7 +9634,7 @@ incurred.  To describe all of this we could specify\n (define_insn_reservation \"mult\" 4 (eq_attr \"type\" \"mult\")\n                          \"i1_pipeline, nothing*2, (port0 | port1)\")\n \n-(define_insn_reservation \"div\" 8 (eq_attr \"type\" \"div\")\n+(define_insn_reservation \"div\" 9 (eq_attr \"type\" \"div\")\n                          \"i1_pipeline, div*7, div + (port0 | port1)\")\n \n (define_insn_reservation \"float\" 3 (eq_attr \"type\" \"float\")"}]}