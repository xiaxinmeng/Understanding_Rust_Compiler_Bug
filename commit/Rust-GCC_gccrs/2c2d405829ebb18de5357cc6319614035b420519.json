{"sha": "2c2d405829ebb18de5357cc6319614035b420519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMyZDQwNTgyOWViYjE4ZGU1MzU3Y2M2MzE5NjE0MDM1YjQyMDUxOQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-02-10T03:03:43Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-05-09T00:51:48Z"}, "message": "dbr: Filter-out TARGET_FLAGS_REGNUM from end_of_function_needs.\n\nCompared to the cc0 version, I noticed a regression in\ndelay-slot-filling for CRIS for several functions in libgcc with\na similar layout, one being lshrdi3, where with cc0 all\ndelay-slots were filled, as exposed by the test-case in\ngcc.target/cris/pr93372-1.c.\n\nThere's one slot that fails to be filled for the decc0rated CRIS\nport.  A gdb session shows it is because of the automatic\ninclusion of TARGET_FLAGS_REGNUM in \"registers needed at the end\nof the function\" because there are insns in the epilogue that\nclobber the condition-code register.  I'm not trying to tell a\nclobber from a set, as parallels with set instead of clobber\nseems likely to happen too, for targets with TARGET_FLAGS_REGNUM\nset.\n\nOther targets with delay-slots and one dedicated often-clobbered\ncondition-code-register should consider defining\nTARGET_FLAGS_REGNUM.  I noticed it improved delay-slot-filling\nalso in other situations than this.\n\n(Previously approved by Jeff Law.)\n\ngcc:\n\t* resource.c (init_resource_info): Filter-out TARGET_FLAGS_REGNUM\n\tfrom end_of_function_needs.", "tree": {"sha": "46d184c08d902f8f839b48fdda59ce10b476de13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46d184c08d902f8f839b48fdda59ce10b476de13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c2d405829ebb18de5357cc6319614035b420519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2d405829ebb18de5357cc6319614035b420519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c2d405829ebb18de5357cc6319614035b420519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c2d405829ebb18de5357cc6319614035b420519/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce08aac1825bd367828532bd765355bf651df0c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce08aac1825bd367828532bd765355bf651df0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce08aac1825bd367828532bd765355bf651df0c0"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "39330ba0515b7e6ad65ba9848e4eac97cff9b42d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2d405829ebb18de5357cc6319614035b420519/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2d405829ebb18de5357cc6319614035b420519/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c2d405829ebb18de5357cc6319614035b420519", "patch": "@@ -1,3 +1,8 @@\n+2020-05-09  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* resource.c (init_resource_info): Filter-out TARGET_FLAGS_REGNUM\n+\tfrom end_of_function_needs.\n+\n 2020-05-08  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira-color.c (update_costs_from_allocno): Remove"}, {"sha": "0a9d5943abce3e549f388f7605403878a8af0da3", "filename": "gcc/resource.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c2d405829ebb18de5357cc6319614035b420519/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c2d405829ebb18de5357cc6319614035b420519/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=2c2d405829ebb18de5357cc6319614035b420519", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"backend.h\"\n+#include \"target.h\"\n #include \"rtl.h\"\n #include \"df.h\"\n #include \"memmodel.h\"\n@@ -1215,6 +1216,11 @@ init_resource_info (rtx_insn *epilogue_insn)\n \tbreak;\n     }\n \n+  /* Filter-out the flags register from those additionally required\n+     registers. */\n+  if (targetm.flags_regnum != INVALID_REGNUM)\n+    CLEAR_HARD_REG_BIT (end_of_function_needs.regs, targetm.flags_regnum);\n+\n   /* Allocate and initialize the tables used by mark_target_live_regs.  */\n   target_hash_table = XCNEWVEC (struct target_info *, TARGET_HASH_PRIME);\n   bb_ticks = XCNEWVEC (int, last_basic_block_for_fn (cfun));"}]}