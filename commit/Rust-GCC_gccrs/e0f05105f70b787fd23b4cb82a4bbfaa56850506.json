{"sha": "e0f05105f70b787fd23b4cb82a4bbfaa56850506", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBmMDUxMDVmNzBiNzg3ZmQyM2I0Y2I4MmE0YmJmYWE1Njg1MDUwNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-11-04T02:06:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-11-04T02:06:59Z"}, "message": "locale_facets.h (time_get::_M_extract_name): Add ctype argument.\n\n\n2003-11-03  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_facets.h (time_get::_M_extract_name): Add\n\tctype argument.\n\t* include/bits/locale_facets.tcc: Same, use it to allow\n\tcapitalized names.\n\n\t* include/bits/fstream.tcc: Spacing tweak.\n\t* include/bits/istream.tcc: Same.\n\t* include/bits/ostream.tcc: Same.\n\nFrom-SVN: r73241", "tree": {"sha": "ea00638ac2ab82329d578498bd566193df6fe23e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea00638ac2ab82329d578498bd566193df6fe23e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0f05105f70b787fd23b4cb82a4bbfaa56850506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f05105f70b787fd23b4cb82a4bbfaa56850506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f05105f70b787fd23b4cb82a4bbfaa56850506", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f05105f70b787fd23b4cb82a4bbfaa56850506/comments", "author": null, "committer": null, "parents": [{"sha": "1b64e33f3f204981ce698221fbc98909f8c878cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b64e33f3f204981ce698221fbc98909f8c878cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b64e33f3f204981ce698221fbc98909f8c878cc"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "cb0c9a384d6e5b4be9a8e2f80da8844b050e3a17", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e0f05105f70b787fd23b4cb82a4bbfaa56850506", "patch": "@@ -1,3 +1,14 @@\n+2003-11-03  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/locale_facets.h (time_get::_M_extract_name): Add\n+\tctype argument.\t\n+\t* include/bits/locale_facets.tcc: Same, use it to allow\n+\tcapitalized names.\n+\t\n+\t* include/bits/fstream.tcc: Spacing tweak.\n+\t* include/bits/istream.tcc: Same.\n+\t* include/bits/ostream.tcc: Same.\n+\n 2003-10-30  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (time_get::_M_extract_via_format):"}, {"sha": "29fe0e8d6c6ffe6120c07b1671b977c90e80a7d2", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=e0f05105f70b787fd23b4cb82a4bbfaa56850506", "patch": "@@ -610,7 +610,6 @@ namespace std\n \t\t  __computed_off += _M_ext_buf + __gptr_off - _M_ext_end;\n \t\t}\n \t    }\n-\t  \n \t  __ret = _M_seek(__computed_off, __way);\n \t}\n       _M_last_overflowed = false;\t"}, {"sha": "f9ff41d35f87b3bf60522c1e0497c337aaee476e", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=e0f05105f70b787fd23b4cb82a4bbfaa56850506", "patch": "@@ -63,7 +63,8 @@ namespace std\n \t\t  __c = __sb->snextc();\n \n \t      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-\t      // 195. Should basic_istream::sentry's constructor ever set eofbit? \n+\t      // 195. Should basic_istream::sentry's constructor ever\n+\t      // 195. set eofbit?\n \t      if (traits_type::eq_int_type(__c, __eof))\n \t\t__in.setstate(ios_base::eofbit);\n \t    }"}, {"sha": "a433e6c69ac33bf2eca15e54f500409103e94a99", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=e0f05105f70b787fd23b4cb82a4bbfaa56850506", "patch": "@@ -1519,6 +1519,7 @@ namespace std\n       void\n       _M_extract_name(iter_type& __beg, iter_type& __end, int& __member,\n \t\t      const _CharT** __names, size_t __indexlen, \n+\t\t      const ctype<_CharT>& __ctype, \n \t\t      ios_base::iostate& __err) const;\n \n       // Extract on a component-by-component basis, via __format argument."}, {"sha": "58e028441c73d8a720357b6396d1d9d9a9868610", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=e0f05105f70b787fd23b4cb82a4bbfaa56850506", "patch": "@@ -1533,7 +1533,7 @@ namespace std\n \t\t\t  const _CharT* __format) const\n     {  \n       const locale __loc = __io.getloc();\n-      __timepunct<_CharT> const& __tp = use_facet<__timepunct<_CharT> >(__loc);\n+      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);\n       const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); \n       const size_t __len = char_traits<_CharT>::length(__format);\n \n@@ -1556,29 +1556,29 @@ namespace std\n \t\t  const char_type*  __days1[7];\n \t\t  __tp._M_days_abbreviated(__days1);\n \t\t  _M_extract_name(__beg, __end, __tm->tm_wday, __days1, 7, \n-\t\t\t\t  __err);\n+\t\t\t\t  __ctype, __err);\n \t\t  break;\n \t\tcase 'A':\n \t\t  // Weekday name [tm_wday].\n \t\t  const char_type*  __days2[7];\n \t\t  __tp._M_days(__days2);\n \t\t  _M_extract_name(__beg, __end, __tm->tm_wday, __days2, 7, \n-\t\t\t\t  __err);\n+\t\t\t\t  __ctype, __err);\n \t\t  break;\n \t\tcase 'h':\n \t\tcase 'b':\n \t\t  // Abbreviated month name [tm_mon]\n \t\t  const char_type*  __months1[12];\n \t\t  __tp._M_months_abbreviated(__months1);\n \t\t  _M_extract_name(__beg, __end, __tm->tm_mon, __months1, 12, \n-\t\t\t\t  __err);\n+\t\t\t\t  __ctype, __err);\n \t\t  break;\n \t\tcase 'B':\n \t\t  // Month name [tm_mon].\n \t\t  const char_type*  __months2[12];\n \t\t  __tp._M_months(__months2);\n \t\t  _M_extract_name(__beg, __end, __tm->tm_mon, __months2, 12, \n-\t\t\t\t  __err);\n+\t\t\t\t  __ctype, __err);\n \t\t  break;\n \t\tcase 'c':\n \t\t  // Default time and date representation.\n@@ -1697,7 +1697,7 @@ namespace std\n \t\t      int __tmp;\n \t\t      _M_extract_name(__beg, __end, __tmp, \n \t\t\t\t      __timepunct_cache<_CharT>::_S_timezones, \n-\t\t\t\t      14, __err);\n+\t\t\t\t      14, __ctype, __err);\n \t\t      \n \t\t      // GMT requires special effort.\n \t\t      if (__beg != __end && !__err && __tmp == 0\n@@ -1764,6 +1764,7 @@ namespace std\n     time_get<_CharT, _InIter>::\n     _M_extract_name(iter_type& __beg, iter_type& __end, int& __member,\n \t\t    const _CharT** __names, size_t __indexlen, \n+\t\t    const ctype<_CharT>& __ctype, \n \t\t    ios_base::iostate& __err) const\n     {\n       typedef char_traits<_CharT> \t\t__traits_type;\n@@ -1774,12 +1775,16 @@ namespace std\n       bool __testvalid = true;\n       const char_type* __name;\n \n-      // Look for initial matches.\n+      // Look for initial matches.  \n+      // NB: Some of the locale data is in the form of all lowercase\n+      // names, and some is in the form of initially-capitalized\n+      // names. Look for both.\n       if (__beg != __end)\n \t{\n \t  const char_type __c = *__beg;\n \t  for (size_t __i1 = 0; __i1 < __indexlen; ++__i1)\n-\t    if (__c == __names[__i1][0])\n+\t    if (__c == __names[__i1][0] \n+\t\t|| __c == __ctype.toupper(__names[__i1][0]))\n \t      __matches[__nmatches++] = __i1;\n \t}\n       \n@@ -1807,6 +1812,13 @@ namespace std\n \n       if (__nmatches == 1)\n \t{\n+\t  // If there was only one match, the first compare is redundant.\n+\t  if (__pos == 0)\n+\t    {\n+\t      ++__pos;\n+\t      ++__beg;\n+\t    }\n+\n \t  // Make sure found name is completely extracted.\n \t  __name = __names[__matches[0]];\n \t  const size_t __len = __traits_type::length(__name);\n@@ -1866,11 +1878,12 @@ namespace std\n     {\n       typedef char_traits<_CharT> \t\t__traits_type;\n       const locale __loc = __io.getloc();\n-      __timepunct<_CharT> const& __tp = use_facet<__timepunct<_CharT> >(__loc);\n+      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);\n+      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); \n       const char_type*  __days[7];\n       __tp._M_days_abbreviated(__days);\n       int __tmpwday;\n-      _M_extract_name(__beg, __end, __tmpwday, __days, 7, __err);\n+      _M_extract_name(__beg, __end, __tmpwday, __days, 7, __ctype, __err);\n \n       // Check to see if non-abbreviated name exists, and extract.\n       // NB: Assumes both _M_days and _M_days_abbreviated organized in\n@@ -1909,11 +1922,12 @@ namespace std\n     {\n       typedef char_traits<_CharT> \t\t__traits_type;\n       const locale __loc = __io.getloc();\n-      __timepunct<_CharT> const& __tp = use_facet<__timepunct<_CharT> >(__loc);\n+      const __timepunct<_CharT>& __tp = use_facet<__timepunct<_CharT> >(__loc);\n+      const ctype<_CharT>& __ctype = use_facet<ctype<_CharT> >(__loc); \n       const char_type*  __months[12];\n       __tp._M_months_abbreviated(__months);\n       int __tmpmon;\n-      _M_extract_name(__beg, __end, __tmpmon, __months, 12, __err);\n+      _M_extract_name(__beg, __end, __tmpmon, __months, 12, __ctype, __err);\n \n       // Check to see if non-abbreviated name exists, and extract.\n       // NB: Assumes both _M_months and _M_months_abbreviated organized in"}, {"sha": "c126eb8df25378dd9c6ba5c2c3b4df1697a7f87a", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0f05105f70b787fd23b4cb82a4bbfaa56850506/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=e0f05105f70b787fd23b4cb82a4bbfaa56850506", "patch": "@@ -673,8 +673,7 @@ namespace std\n \t  // 25. String operator<< uses width() value wrong\n \t  if (__w > __len)\n \t    {\n-\t      _CharT* __cs = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n-\t\t\t\t\t\t\t\t   * __w));\n+\t      _CharT* __cs = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n \t      __pad<_CharT, _Traits>::_S_pad(__out, __out.fill(), __cs, __s,\n \t\t\t\t\t     __w, __len, false);\n \t      __s = __cs;"}]}