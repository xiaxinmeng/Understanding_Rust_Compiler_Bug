{"sha": "3be9ded290ac5232d52a8353235ff7d08ce02fae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JlOWRlZDI5MGFjNTIzMmQ1MmE4MzUzMjM1ZmY3ZDA4Y2UwMmZhZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-18T15:47:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-18T15:47:07Z"}, "message": "LWG 3035. std::allocator's constructors should be constexpr\n\n\tLWG 3035. std::allocator's constructors should be constexpr\n\t* include/bits/allocator.h (allocator): Add constexpr to constructors\n\tfor C++2a. Replace dynamic exception specifications with NOTHROW\n\tmacro.\n\t(allocator, operator==, operator!=): Replace USE_NOEXCEPT macro with\n\tNOTHROW.\n\t* include/bits/c++config (_GLIBCXX20_CONSTEXPR): Define.\n\t* include/ext/malloc_allocator.h (malloc_allocator): Add constexpr\n\tto constructors for C++2a.\n\t* include/ext/new_allocator.h (new_allocator): Likewise.\n\nFrom-SVN: r261703", "tree": {"sha": "2fdf79ef5fc39e969cacae4aa5ceca9884edcd7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fdf79ef5fc39e969cacae4aa5ceca9884edcd7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3be9ded290ac5232d52a8353235ff7d08ce02fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be9ded290ac5232d52a8353235ff7d08ce02fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3be9ded290ac5232d52a8353235ff7d08ce02fae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3be9ded290ac5232d52a8353235ff7d08ce02fae/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a977ce3605e8b8ad92fd351bb90bc6445e8e92b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a977ce3605e8b8ad92fd351bb90bc6445e8e92b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a977ce3605e8b8ad92fd351bb90bc6445e8e92b"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "166522ccedffc32dcca5a1850f2596f8e156a9b1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3be9ded290ac5232d52a8353235ff7d08ce02fae", "patch": "@@ -1,3 +1,16 @@\n+2018-06-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tLWG 3035. std::allocator's constructors should be constexpr\n+\t* include/bits/allocator.h (allocator): Add constexpr to constructors\n+\tfor C++2a. Replace dynamic exception specifications with NOTHROW\n+\tmacro.\n+\t(allocator, operator==, operator!=): Replace USE_NOEXCEPT macro with\n+\tNOTHROW.\n+\t* include/bits/c++config (_GLIBCXX20_CONSTEXPR): Define.\n+\t* include/ext/malloc_allocator.h (malloc_allocator): Add constexpr\n+\tto constructors for C++2a.\n+\t* include/ext/new_allocator.h (new_allocator): Likewise.\n+\n 2018-06-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \tLWG 3076 basic_string CTAD ambiguity"}, {"sha": "c4e3a4b9c15d65675292b875b0ef4d656f1a4ef1", "filename": "libstdc++-v3/include/bits/allocator.h", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fallocator.h?ref=3be9ded290ac5232d52a8353235ff7d08ce02fae", "patch": "@@ -128,45 +128,51 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef true_type is_always_equal;\n #endif\n \n-      allocator() throw() { }\n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 3035. std::allocator's constructors should be constexpr\n+      _GLIBCXX20_CONSTEXPR\n+      allocator() _GLIBCXX_NOTHROW { }\n \n-      allocator(const allocator& __a) throw()\n+      _GLIBCXX20_CONSTEXPR\n+      allocator(const allocator& __a) _GLIBCXX_NOTHROW\n       : __allocator_base<_Tp>(__a) { }\n+\n #if __cplusplus >= 201103L\n       // Avoid implicit deprecation.\n       allocator& operator=(const allocator&) = default;\n #endif\n \n       template<typename _Tp1>\n-\tallocator(const allocator<_Tp1>&) throw() { }\n+\t_GLIBCXX20_CONSTEXPR\n+\tallocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }\n \n-      ~allocator() throw() { }\n+      ~allocator() _GLIBCXX_NOTHROW { }\n \n       // Inherit everything else.\n     };\n \n   template<typename _T1, typename _T2>\n     inline bool\n     operator==(const allocator<_T1>&, const allocator<_T2>&)\n-    _GLIBCXX_USE_NOEXCEPT\n+    _GLIBCXX_NOTHROW\n     { return true; }\n \n   template<typename _Tp>\n     inline bool\n     operator==(const allocator<_Tp>&, const allocator<_Tp>&)\n-    _GLIBCXX_USE_NOEXCEPT\n+    _GLIBCXX_NOTHROW\n     { return true; }\n \n   template<typename _T1, typename _T2>\n     inline bool\n     operator!=(const allocator<_T1>&, const allocator<_T2>&)\n-    _GLIBCXX_USE_NOEXCEPT\n+    _GLIBCXX_NOTHROW\n     { return false; }\n \n   template<typename _Tp>\n     inline bool\n     operator!=(const allocator<_Tp>&, const allocator<_Tp>&)\n-    _GLIBCXX_USE_NOEXCEPT\n+    _GLIBCXX_NOTHROW\n     { return false; }\n \n   // Invalid allocator<cv T> partial specializations."}, {"sha": "4a096a198dbe7ed113764bf1d06f7cfa264df2e3", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=3be9ded290ac5232d52a8353235ff7d08ce02fae", "patch": "@@ -122,15 +122,23 @@\n #endif\n \n #ifndef _GLIBCXX17_CONSTEXPR\n-# if __cplusplus > 201402L\n+# if __cplusplus >= 201703L\n #  define _GLIBCXX17_CONSTEXPR constexpr\n # else\n #  define _GLIBCXX17_CONSTEXPR\n # endif\n #endif\n \n+#ifndef _GLIBCXX20_CONSTEXPR\n+# if __cplusplus > 201703L\n+#  define _GLIBCXX20_CONSTEXPR constexpr\n+# else\n+#  define _GLIBCXX20_CONSTEXPR\n+# endif\n+#endif\n+\n #ifndef _GLIBCXX17_INLINE\n-# if __cplusplus > 201402L\n+# if __cplusplus >= 201703L\n #  define _GLIBCXX17_INLINE inline\n # else\n #  define _GLIBCXX17_INLINE"}, {"sha": "8739c1fdaa3e40b306d8ea6a60a36f31332100e1", "filename": "libstdc++-v3/include/ext/malloc_allocator.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmalloc_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmalloc_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmalloc_allocator.h?ref=3be9ded290ac5232d52a8353235ff7d08ce02fae", "patch": "@@ -75,11 +75,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef std::true_type propagate_on_container_move_assignment;\n #endif\n \n+      _GLIBCXX20_CONSTEXPR\n       malloc_allocator() _GLIBCXX_USE_NOEXCEPT { }\n \n+      _GLIBCXX20_CONSTEXPR\n       malloc_allocator(const malloc_allocator&) _GLIBCXX_USE_NOEXCEPT { }\n \n       template<typename _Tp1>\n+\t_GLIBCXX20_CONSTEXPR\n         malloc_allocator(const malloc_allocator<_Tp1>&)\n \t_GLIBCXX_USE_NOEXCEPT { }\n "}, {"sha": "19e7ad02e75d64a1167dd6e6aea227730eeb8d85", "filename": "libstdc++-v3/include/ext/new_allocator.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3be9ded290ac5232d52a8353235ff7d08ce02fae/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fnew_allocator.h?ref=3be9ded290ac5232d52a8353235ff7d08ce02fae", "patch": "@@ -76,11 +76,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef std::true_type propagate_on_container_move_assignment;\n #endif\n \n+      _GLIBCXX20_CONSTEXPR\n       new_allocator() _GLIBCXX_USE_NOEXCEPT { }\n \n+      _GLIBCXX20_CONSTEXPR\n       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }\n \n       template<typename _Tp1>\n+\t_GLIBCXX20_CONSTEXPR\n \tnew_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }\n \n       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }"}]}