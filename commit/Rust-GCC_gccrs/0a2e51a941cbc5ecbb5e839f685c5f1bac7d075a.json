{"sha": "0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyZTUxYTk0MWNiYzVlY2JiNWU4MzlmNjg1YzVmMWJhYzdkMDc1YQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-26T20:38:07Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-26T20:38:07Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1688", "tree": {"sha": "d09e5855e84cfed939ab7dd7b7f2b026cca171be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d09e5855e84cfed939ab7dd7b7f2b026cca171be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a/comments", "author": null, "committer": null, "parents": [{"sha": "3d32ffd13f07496796ce687a276ccea34a96ae70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d32ffd13f07496796ce687a276ccea34a96ae70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d32ffd13f07496796ce687a276ccea34a96ae70"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "fcf423625f666d3dbd031021d3a8aa266be5d6da", "filename": "gcc/reload1.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=0a2e51a941cbc5ecbb5e839f685c5f1bac7d075a", "patch": "@@ -3569,11 +3569,19 @@ forget_old_reloads_1 (x)\n {\n   register int regno;\n   int nr;\n+  int offset = 0;\n+\n+  /* note_stores does give us subregs of hard regs.  */\n+  while (GET_CODE (x) == SUBREG)\n+    {\n+      offset += SUBREG_WORD (x);\n+      x = SUBREG_REG (x);\n+    }\n \n   if (GET_CODE (x) != REG)\n     return;\n \n-  regno = REGNO (x);\n+  regno = REGNO (x) + offset;\n \n   if (regno >= FIRST_PSEUDO_REGISTER)\n     nr = 1;"}]}