{"sha": "87f3fea84f67800856b9ce8ee6f3322991ec29bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmM2ZlYTg0ZjY3ODAwODU2YjljZThlZTZmMzMyMjk5MWVjMjliZg==", "commit": {"author": {"name": "Caroline Tice", "email": "cmtice@google.com", "date": "2013-09-06T17:56:35Z"}, "committer": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2013-09-06T17:56:35Z"}, "message": "Add documentation for the options --enable-vtable-verify,\n\n--disable-vtable-verify and --disable-libvtv.  Also \nupdate configure and make files in libvtv not to use \n--enable-vtable-verify.\n\nFrom-SVN: r202346", "tree": {"sha": "8597d6059bbd847b80076b40a3ce9d664c451360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8597d6059bbd847b80076b40a3ce9d664c451360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87f3fea84f67800856b9ce8ee6f3322991ec29bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87f3fea84f67800856b9ce8ee6f3322991ec29bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87f3fea84f67800856b9ce8ee6f3322991ec29bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87f3fea84f67800856b9ce8ee6f3322991ec29bf/comments", "author": {"login": "cmtice", "id": 5561162, "node_id": "MDQ6VXNlcjU1NjExNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5561162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmtice", "html_url": "https://github.com/cmtice", "followers_url": "https://api.github.com/users/cmtice/followers", "following_url": "https://api.github.com/users/cmtice/following{/other_user}", "gists_url": "https://api.github.com/users/cmtice/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmtice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmtice/subscriptions", "organizations_url": "https://api.github.com/users/cmtice/orgs", "repos_url": "https://api.github.com/users/cmtice/repos", "events_url": "https://api.github.com/users/cmtice/events{/privacy}", "received_events_url": "https://api.github.com/users/cmtice/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e8d9b455910f258929e0af04bc4e75ad8909386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8d9b455910f258929e0af04bc4e75ad8909386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8d9b455910f258929e0af04bc4e75ad8909386"}], "stats": {"total": 117, "additions": 41, "deletions": 76}, "files": [{"sha": "34ae31ff0e174bdfde19a3092cecb1947ec74c00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -1,3 +1,8 @@\n+2013-09-06  Caroline Tice  <cmtice@google.com>\n+\n+\t* doc/install.texi: Add documentation for the --enable-vtable-verify\n+\tand the --disable-libvtv configure options.\n+\n 2013-09-06  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-dom.c (cprop_into_successor_phis): Also propagate"}, {"sha": "82306251177e2897fc9c46dbf18e130edf1e048c", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -1036,6 +1036,18 @@ and for cross builds configured with @option{--with-sysroot}, and without\n More documentation about multiarch can be found at\n @uref{http://wiki.debian.org/Multiarch}.\n \n+@item --enable-vtable-verify\n+Specify whether to enable or disable the vtable verification feature.\n+Enabling this feature causes libstdc++ to be built with its virtual calls\n+in verifiable mode.  This means that, when linked with libvtv, every\n+virtual call in libstdc++ will verify the vtable pointer through which the\n+call will be made before actually making the call.  If not linked with libvtv,\n+the verifier will call stub functions (in libstdc++ itself) and do nothing.\n+If vtable verification is disabled, then libstdc++ is not built with its\n+virtual calls in verifiable mode at all.  However the libvtv library will\n+still be built (see @option{--disable-libvtv} to turn off building libvtv).\n+@option{--disable-vtable-verify} is the default.\n+\n @item --disable-multilib\n Specify that multiple target\n libraries to support different target variants, calling\n@@ -1422,6 +1434,10 @@ support for @code{libquadmath} on systems supporting it.\n @item --disable-libgomp\n Specify that the run-time libraries used by GOMP should not be built.\n \n+@item --disable-libvtv\n+Specify that the run-time libraries used by vtable verification\n+should not be built.\n+\n @item --with-dwarf2\n Specify that the compiler should\n use DWARF 2 debugging information as the default."}, {"sha": "9b42df273fc2e4dd66d0c7c4bb245ff6fba65a36", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -1,3 +1,11 @@\n+2013-09-06  Caroline Tice  <cmtice@google.com>\n+\n+\t* Makefile.am: Remove #if ENABLE_VTABLE_VERIFY checks around\n+\tdefinitions of SUBDIRS, libvtv_la_SOURCES and libvtv_include_HEADERS.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Remove checks and tests for --enable-vtable-verify.\n+\t* configure: Regenerate.\n+\n 2013-08-20  Caroline Tice  <cmtice@google.com>\n \n \t* Makefile.am (DEFS): Add \"@DEFS@\", to inherit defintions."}, {"sha": "c3983effb7d88e3b81ee09d411df8f9254518c2e", "filename": "libvtv/Makefile.am", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.am?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -19,11 +19,7 @@\n ## along with this library; see the file COPYING3.  If not see\n ## <http://www.gnu.org/licenses/>.\n \n-if ENABLE_VTABLE_VERIFY\n SUBDIRS = testsuite\n-else\n-SUBDIRS = \n-endif\n \n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n@@ -67,13 +63,8 @@ vtv_end.c:\n \trm -f $@\n \t$(LN_S) $(toplevel_srcdir)/libgcc/vtv_end.c $@\n \n-if ENABLE_VTABLE_VERIFY\n libvtv_la_SOURCES = $(vtv_sources)\n libvtv_include_HEADERS = $(vtv_headers)\n-else\n-libvtv_la_SOURCES = \n-libvtv_include_HEADERS = \n-endif\n \n # Least ordering for dependencies mean linking w/o libstdc++ for as\n # long as the development of libvtv does not absolutely require it."}, {"sha": "e021d42fd14d9d3b49384491d8df6bb38c8141ea", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -40,7 +40,7 @@ subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/../depcomp \\\n-\t$(am__libvtv_include_HEADERS_DIST)\n+\t$(libvtv_include_HEADERS)\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n@@ -86,7 +86,7 @@ LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libvtv_la_LIBADD =\n am__objects_1 = vtv_start.lo vtv_malloc.lo vtv_rts.lo vtv_utils.lo \\\n \tvtv_end.lo\n-@ENABLE_VTABLE_VERIFY_TRUE@am_libvtv_la_OBJECTS = $(am__objects_1)\n+am_libvtv_la_OBJECTS = $(am__objects_1)\n libvtv_la_OBJECTS = $(am_libvtv_la_OBJECTS)\n DEFAULT_INCLUDES = -I.@am__isrc@\n depcomp = $(SHELL) $(top_srcdir)/../depcomp\n@@ -118,16 +118,14 @@ RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \tinstall-pdf-recursive install-ps-recursive install-recursive \\\n \tinstallcheck-recursive installdirs-recursive pdf-recursive \\\n \tps-recursive uninstall-recursive\n-am__libvtv_include_HEADERS_DIST = vtv_map.h vtv_malloc.h vtv_fail.h \\\n-\tvtv_set.h vtv_utils.h vtv_rts.h\n HEADERS = $(libvtv_include_HEADERS)\n RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n   distclean-recursive maintainer-clean-recursive\n AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n \t$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS\n ETAGS = etags\n CTAGS = ctags\n-DIST_SUBDIRS = testsuite\n+DIST_SUBDIRS = $(SUBDIRS)\n ACLOCAL = @ACLOCAL@\n AMTAR = @AMTAR@\n AR = @AR@\n@@ -265,8 +263,7 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n-@ENABLE_VTABLE_VERIFY_FALSE@SUBDIRS = \n-@ENABLE_VTABLE_VERIFY_TRUE@SUBDIRS = testsuite\n+SUBDIRS = testsuite\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n # May be used by toolexeclibdir.\n@@ -296,10 +293,8 @@ libvtv_includedir = $(includedir)\n \n # Link in vtv_start and vtv_end. \n BUILT_SOURCES = vtv_start.c vtv_end.c\n-@ENABLE_VTABLE_VERIFY_FALSE@libvtv_la_SOURCES = \n-@ENABLE_VTABLE_VERIFY_TRUE@libvtv_la_SOURCES = $(vtv_sources)\n-@ENABLE_VTABLE_VERIFY_FALSE@libvtv_include_HEADERS = \n-@ENABLE_VTABLE_VERIFY_TRUE@libvtv_include_HEADERS = $(vtv_headers)\n+libvtv_la_SOURCES = $(vtv_sources)\n+libvtv_include_HEADERS = $(vtv_headers)\n \n # Least ordering for dependencies mean linking w/o libstdc++ for as\n # long as the development of libvtv does not absolutely require it."}, {"sha": "bb56cb0cb975045fcfa0466a4ef8bc0887aa3f9c", "filename": "libvtv/configure", "status": "modified", "additions": 4, "deletions": 39, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -699,8 +699,6 @@ build_os\n build_vendor\n build_cpu\n build\n-ENABLE_VTABLE_VERIFY_FALSE\n-ENABLE_VTABLE_VERIFY_TRUE\n target_alias\n host_alias\n build_alias\n@@ -743,7 +741,6 @@ ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n enable_version_specific_runtime_libs\n-enable_vtable_verify\n enable_multilib\n enable_maintainer_mode\n enable_dependency_tracking\n@@ -1385,7 +1382,6 @@ Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n-  --enable-vtable-verify    Enable vtable verification feature\n   --enable-multilib       build many library versions (default)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n@@ -2343,23 +2339,6 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $version_specific_libs\" >&5\n $as_echo \"$version_specific_libs\" >&6; }\n \n-# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-vtable-verify\" >&5\n-$as_echo_n \"checking for --enable-vtable-verify... \" >&6; }\n-# Check whether --enable-vtable-verify was given.\n-if test \"${enable_vtable_verify+set}\" = set; then :\n-  enableval=$enable_vtable_verify; case \"$enableval\" in\n- yes) enable_vtable_verify=yes ;;\n- no)  enable_vtable_verify=no ;;\n- *)   enable_vtable_verify=no;;\n- esac\n-else\n-  enable_vtable_verify=no\n-fi\n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_vtable_verify\" >&5\n-$as_echo \"$enable_vtable_verify\" >&6; }\n-\n # See if supported.\n unset VTV_SUPPORTED\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for vtable verification\" >&5\n@@ -2371,20 +2350,10 @@ $as_echo \"$VTV_SUPPORTED\" >&6; }\n # Decide if it's usable.\n use_vtable_verify=no\n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  if test \"x$enable_vtable_verify\" = \"xyes\"; then\n-    use_vtable_verify=yes\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: using vtable verification\" >&5\n+  use_vtable_verify=yes\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: using vtable verification\" >&5\n $as_echo \"$as_me: using vtable verification\" >&6;}\n-  fi\n fi\n- if test $use_vtable_verify = yes; then\n-  ENABLE_VTABLE_VERIFY_TRUE=\n-  ENABLE_VTABLE_VERIFY_FALSE='#'\n-else\n-  ENABLE_VTABLE_VERIFY_TRUE='#'\n-  ENABLE_VTABLE_VERIFY_FALSE=\n-fi\n-\n \n # Do not delete or change the following two lines.  For why, see\n # http://gcc.gnu.org/ml/libstdc++/2003-07/msg00451.html\n@@ -12121,7 +12090,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12124 \"configure\"\n+#line 12093 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12227,7 +12196,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12230 \"configure\"\n+#line 12199 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15637,10 +15606,6 @@ LIBOBJS=$ac_libobjs\n LTLIBOBJS=$ac_ltlibobjs\n \n \n-if test -z \"${ENABLE_VTABLE_VERIFY_TRUE}\" && test -z \"${ENABLE_VTABLE_VERIFY_FALSE}\"; then\n-  as_fn_error \"conditional \\\"ENABLE_VTABLE_VERIFY\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n-fi\n  if test -n \"$EXEEXT\"; then\n   am__EXEEXT_TRUE=\n   am__EXEEXT_FALSE='#'"}, {"sha": "6db97dc60b86edd42eddfa7c61c6a016fe8dbad9", "filename": "libvtv/configure.ac", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87f3fea84f67800856b9ce8ee6f3322991ec29bf/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=87f3fea84f67800856b9ce8ee6f3322991ec29bf", "patch": "@@ -20,18 +20,6 @@ AC_ARG_ENABLE(version-specific-runtime-libs,\n [version_specific_libs=no])\n AC_MSG_RESULT($version_specific_libs)\n \n-# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n-AC_MSG_CHECKING([for --enable-vtable-verify])\n-AC_ARG_ENABLE(vtable-verify,\n-[  --enable-vtable-verify    Enable vtable verification feature ],\n-[case \"$enableval\" in\n- yes) enable_vtable_verify=yes ;;\n- no)  enable_vtable_verify=no ;;\n- *)   enable_vtable_verify=no;;\n- esac],\n-[enable_vtable_verify=no])\n-AC_MSG_RESULT($enable_vtable_verify)\n-\n # See if supported.\n unset VTV_SUPPORTED\n AC_MSG_CHECKING([for host support for vtable verification])\n@@ -41,12 +29,9 @@ AC_MSG_RESULT($VTV_SUPPORTED)\n # Decide if it's usable.\n use_vtable_verify=no\n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  if test \"x$enable_vtable_verify\" = \"xyes\"; then\n-    use_vtable_verify=yes\n-    AC_MSG_NOTICE(using vtable verification)\n-  fi\n+  use_vtable_verify=yes\n+  AC_MSG_NOTICE(using vtable verification)\n fi \n-AM_CONDITIONAL(ENABLE_VTABLE_VERIFY, test $use_vtable_verify = yes)\n \n # Do not delete or change the following two lines.  For why, see\n # http://gcc.gnu.org/ml/libstdc++/2003-07/msg00451.html"}]}