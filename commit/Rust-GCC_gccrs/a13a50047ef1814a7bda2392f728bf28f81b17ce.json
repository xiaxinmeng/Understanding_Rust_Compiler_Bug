{"sha": "a13a50047ef1814a7bda2392f728bf28f81b17ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEzYTUwMDQ3ZWYxODE0YTdiZGEyMzkyZjcyOGJmMjhmODFiMTdjZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-05-02T16:16:17Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-05-02T16:16:17Z"}, "message": "Fortran: Async I/O - avoid unlocked unlocking [PR100352]\n\nFollow up to PR100352, which moved unit unlocking to st_*_done_worker to\navoid lock order reversal; however, as async_io uses a different lock,\nthe (unlocked locked) unit lock shall not be unlocked there.\n\nlibgfortran/ChangeLog:\n\n\tPR libgomp/100352\n\t* io/transfer.c (st_read_done_worker, st_write_done_worker): Add new\n\targ whether to unlock unit.\n\t(st_read_done, st_write_done): Call it with true.\n\t* io/async.c (async_io): Call it with false.\n\t* io/io.h (st_write_done_worker, st_read_done_worker): Update prototype.", "tree": {"sha": "b4c130466f28a5837bbd162afb72779ad513ba37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4c130466f28a5837bbd162afb72779ad513ba37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a13a50047ef1814a7bda2392f728bf28f81b17ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a13a50047ef1814a7bda2392f728bf28f81b17ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a13a50047ef1814a7bda2392f728bf28f81b17ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a13a50047ef1814a7bda2392f728bf28f81b17ce/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7911a905276781c20f704f5a91b5125e0184d072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7911a905276781c20f704f5a91b5125e0184d072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7911a905276781c20f704f5a91b5125e0184d072"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "247008ca801d22ad2bd6f950b810c95e281e04e7", "filename": "libgfortran/io/async.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a50047ef1814a7bda2392f728bf28f81b17ce/libgfortran%2Fio%2Fasync.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a50047ef1814a7bda2392f728bf28f81b17ce/libgfortran%2Fio%2Fasync.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fasync.c?ref=a13a50047ef1814a7bda2392f728bf28f81b17ce", "patch": "@@ -117,13 +117,13 @@ async_io (void *arg)\n \t\t{\n \t\tcase AIO_WRITE_DONE:\n \t\t  NOTE (\"Finalizing write\");\n-\t\t  st_write_done_worker (au->pdt);\n+\t\t  st_write_done_worker (au->pdt, false);\n \t\t  UNLOCK (&au->io_lock);\n \t\t  break;\n \n \t\tcase AIO_READ_DONE:\n \t\t  NOTE (\"Finalizing read\");\n-\t\t  st_read_done_worker (au->pdt);\n+\t\t  st_read_done_worker (au->pdt, false);\n \t\t  UNLOCK (&au->io_lock);\n \t\t  break;\n "}, {"sha": "3355bc2fd8d0880f2359395f0d9cb7e09b9476a5", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a50047ef1814a7bda2392f728bf28f81b17ce/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a50047ef1814a7bda2392f728bf28f81b17ce/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=a13a50047ef1814a7bda2392f728bf28f81b17ce", "patch": "@@ -1083,11 +1083,11 @@ default_precision_for_float (int kind)\n #endif\n \n extern void\n-st_write_done_worker (st_parameter_dt *);\n+st_write_done_worker (st_parameter_dt *, bool);\n internal_proto (st_write_done_worker);\n \n extern void\n-st_read_done_worker (st_parameter_dt *);\n+st_read_done_worker (st_parameter_dt *, bool);\n internal_proto (st_read_done_worker);\n \n extern void"}, {"sha": "36e35b48cd32cd107ce27dd38c86e679c972eea6", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a13a50047ef1814a7bda2392f728bf28f81b17ce/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a13a50047ef1814a7bda2392f728bf28f81b17ce/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=a13a50047ef1814a7bda2392f728bf28f81b17ce", "patch": "@@ -4337,7 +4337,7 @@ extern void st_read_done (st_parameter_dt *);\n export_proto(st_read_done);\n \n void\n-st_read_done_worker (st_parameter_dt *dtp)\n+st_read_done_worker (st_parameter_dt *dtp, bool unlock)\n {\n   bool free_newunit = false;\n   finalize_transfer (dtp);\n@@ -4367,7 +4367,8 @@ st_read_done_worker (st_parameter_dt *dtp)\n \t  free_format (dtp);\n \t}\n     }\n-   unlock_unit (dtp->u.p.current_unit);\n+   if (unlock)\n+     unlock_unit (dtp->u.p.current_unit);\n    if (free_newunit)\n      {\n        /* Avoid inverse lock issues by placing after unlock_unit.  */\n@@ -4394,7 +4395,7 @@ st_read_done (st_parameter_dt *dtp)\n \t  unlock_unit (dtp->u.p.current_unit);\n \t}\n       else\n-\tst_read_done_worker (dtp);  /* Calls unlock_unit.  */\n+\tst_read_done_worker (dtp, true);  /* Calls unlock_unit.  */\n     }\n \n   library_end ();\n@@ -4412,7 +4413,7 @@ st_write (st_parameter_dt *dtp)\n \n \n void\n-st_write_done_worker (st_parameter_dt *dtp)\n+st_write_done_worker (st_parameter_dt *dtp, bool unlock)\n {\n   bool free_newunit = false;\n   finalize_transfer (dtp);\n@@ -4463,7 +4464,8 @@ st_write_done_worker (st_parameter_dt *dtp)\n \t  free_format (dtp);\n \t}\n     }\n-   unlock_unit (dtp->u.p.current_unit);\n+   if (unlock)\n+     unlock_unit (dtp->u.p.current_unit);\n    if (free_newunit)\n      {\n        /* Avoid inverse lock issues by placing after unlock_unit.  */\n@@ -4496,7 +4498,7 @@ st_write_done (st_parameter_dt *dtp)\n \t  unlock_unit (dtp->u.p.current_unit);\n \t}\n       else\n-\tst_write_done_worker (dtp);  /* Calls unlock_unit.  */\n+\tst_write_done_worker (dtp, true);  /* Calls unlock_unit.  */\n     }\n \n   library_end ();"}]}