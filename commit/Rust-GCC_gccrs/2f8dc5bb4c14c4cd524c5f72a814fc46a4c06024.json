{"sha": "2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4ZGM1YmI0YzE0YzRjZDUyNGM1ZjcyYTgxNGZjNDZhNGMwNjAyNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-03-04T19:44:17Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-03-04T19:44:17Z"}, "message": "expmed.c (expand_mult_add): Remove.\n\n\t* expmed.c (expand_mult_add): Remove.\n\t* expr.h: Remove the prototype for expand_mult_add.\n\nFrom-SVN: r111712", "tree": {"sha": "3427286e5232543b7832ed559ed98f99bcf7ceb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3427286e5232543b7832ed559ed98f99bcf7ceb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/comments", "author": null, "committer": null, "parents": [{"sha": "936a6fa78adb1daf15cae50649f1413262697dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/936a6fa78adb1daf15cae50649f1413262697dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/936a6fa78adb1daf15cae50649f1413262697dcf"}], "stats": {"total": 31, "additions": 5, "deletions": 26}, "files": [{"sha": "87cb7051c8c9d9b25d894341860a59deb0de600a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "patch": "@@ -1,3 +1,8 @@\n+2006-03-04  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* expmed.c (expand_mult_add): Remove.\n+\t* expr.h: Remove the prototype for expand_mult_add.\n+\n 2006-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* unwind-dw2.h (_Unwind_FrameState): Add REG_SAVED_VAL_OFFSET"}, {"sha": "a4396c214e2afca88e64aa737a4d9ed6a9954e31", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "patch": "@@ -5025,31 +5025,6 @@ make_tree (tree type, rtx x)\n       return t;\n     }\n }\n-\n-/* Return an rtx representing the value of X * MULT + ADD.\n-   TARGET is a suggestion for where to store the result (an rtx).\n-   MODE is the machine mode for the computation.\n-   X and MULT must have mode MODE.  ADD may have a different mode.\n-   So can X (defaults to same as MODE).\n-   UNSIGNEDP is nonzero to do unsigned multiplication.\n-   This may emit insns.  */\n-\n-rtx\n-expand_mult_add (rtx x, rtx target, rtx mult, rtx add, enum machine_mode mode,\n-\t\t int unsignedp)\n-{\n-  tree type = lang_hooks.types.type_for_mode (mode, unsignedp);\n-  tree add_type = (GET_MODE (add) == VOIDmode\n-\t\t   ? type: lang_hooks.types.type_for_mode (GET_MODE (add),\n-\t\t\t\t\t\t\t   unsignedp));\n-  tree result = fold_build2 (PLUS_EXPR, type,\n-\t\t\t     fold_build2 (MULT_EXPR, type,\n-\t\t\t\t\t  make_tree (type, x),\n-\t\t\t\t\t  make_tree (type, mult)),\n-\t\t\t     make_tree (add_type, add));\n-\n-  return expand_expr (result, target, VOIDmode, 0);\n-}\n \f\n /* Compute the logical-and of OP0 and OP1, storing it in TARGET\n    and returning TARGET."}, {"sha": "c3e0b92e08227c0c548668d2466fd870c0df9596", "filename": "gcc/expr.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=2f8dc5bb4c14c4cd524c5f72a814fc46a4c06024", "patch": "@@ -731,7 +731,6 @@ extern rtx extract_bit_field (rtx, unsigned HOST_WIDE_INT,\n \t\t\t      unsigned HOST_WIDE_INT, int, rtx,\n \t\t\t      enum machine_mode, enum machine_mode);\n extern rtx expand_mult (enum machine_mode, rtx, rtx, rtx, int);\n-extern rtx expand_mult_add (rtx, rtx, rtx, rtx,enum machine_mode, int);\n extern rtx expand_mult_highpart_adjust (enum machine_mode, rtx, rtx, rtx, rtx, int);\n \n extern rtx assemble_static_space (unsigned HOST_WIDE_INT);"}]}