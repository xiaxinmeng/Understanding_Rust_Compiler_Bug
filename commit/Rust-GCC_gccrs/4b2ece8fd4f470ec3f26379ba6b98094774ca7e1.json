{"sha": "4b2ece8fd4f470ec3f26379ba6b98094774ca7e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyZWNlOGZkNGY0NzBlYzNmMjYzNzliYTZiOTgwOTQ3NzRjYTdlMQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-10-23T08:47:54Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-10-23T08:47:54Z"}, "message": "sourcebuild.texi (Test Suites): Improve.\n\n2002-10-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n\n\t* doc/sourcebuild.texi (Test Suites): Improve.\n\nFrom-SVN: r58445", "tree": {"sha": "cd6c738e9a30b8dd5a2b51cb57ccd181ce4a97bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6c738e9a30b8dd5a2b51cb57ccd181ce4a97bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1/comments", "author": null, "committer": null, "parents": [{"sha": "91ed4b1960140bd387d9fefb7fe5b3a10df5128f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91ed4b1960140bd387d9fefb7fe5b3a10df5128f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91ed4b1960140bd387d9fefb7fe5b3a10df5128f"}], "stats": {"total": 70, "additions": 46, "deletions": 24}, "files": [{"sha": "5681b67a3c057a6ca0c76a279c72ddc4a6f30ad6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b2ece8fd4f470ec3f26379ba6b98094774ca7e1", "patch": "@@ -1,3 +1,7 @@\n+2002-10-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* doc/sourcebuild.texi (Test Suites): Improve.\n+\n 2002-10-22  Stan Shebs  <shebs@apple.com>\n \n \t* config/rs6000/rs6000.c (rs6000_output_mi_thunk): Add missing"}, {"sha": "275a1042be5c6cfae58c4c64932d8ca8d45f94b3", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 42, "deletions": 24, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2ece8fd4f470ec3f26379ba6b98094774ca7e1/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=4b2ece8fd4f470ec3f26379ba6b98094774ca7e1", "patch": "@@ -824,6 +824,10 @@ the function should remain, that function may be defined as\n @code{static} to call @code{abort ()} (although redeclaring a function\n as static may not work on all targets).\n \n+All testcases must be portable.  Target-specific testcases must have\n+appropriate code to avoid causing failures on unsupported systems;\n+unfortunately, the mechanisms for this differ by directory.\n+\n FIXME: discuss non-C test suites here.\n \n @node C Tests\n@@ -833,6 +837,42 @@ GCC contains the following C language test suites, in the\n @file{gcc/testsuite} directory:\n \n @table @file\n+@item gcc.dg\n+This contains tests of particular features of the C compiler, using the \n+more modern @samp{dg} harness.  Correctness tests for various compiler\n+features should go here if possible.\n+\n+Magic comments determine whether the file \n+is preprocessed, compiled, linked or run.  In these tests, error and warning \n+message texts are compared against expected texts or regular expressions \n+given in comments.  These tests are run with the options @samp{-ansi -pedantic}\n+unless other options are given in the test.  Except as noted below they\n+are not run with multiple optimization options.\n+@item gcc.dg/cpp\n+This subdirectory contains tests of the preprocessor.\n+@item gcc.dg/debug\n+This subdirectory contains tests for debug formats.  Tests in this\n+subdirectory are run for each debug format that the compiler supports.\n+@item gcc.dg/format\n+This subdirectory contains tests of the @option{-Wformat} format\n+checking.  Tests in this directory are run with and without\n+@option{-DWIDE}.\n+@item gcc.dg/noncompile\n+This subdirectory contains tests of code that should not compile and\n+does not need any special compilation options.  They are run with\n+multiple optimization options, since sometimes invalid code crashes\n+the compiler with optimization.\n+@item gcc.dg/special\n+FIXME: describe this.\n+\n+@item gcc.c-torture\n+This contains particlar code fragments which have historically broken easily.\n+These tests are run with multiple optimization options, so tests for features\n+which only break at some optimization levels belong here.  This also contains\n+tests to check that certain optimizations occur.  It might be worthwhile to \n+separate the correctness tests cleanly from the code quality tests, but\n+it hasn't been done yet.\n+\n @item gcc.c-torture/compat\n FIXME: describe this.\n \n@@ -850,34 +890,12 @@ such as @code{NO_LABEL_VALUES} and @code{STACK_SIZE} are used.\n @item gcc.c-torture/execute\n This test suite contains test cases that should compile, link and run;\n otherwise the same comments as for @file{gcc.c-torture/compile} apply.\n+@item gcc.c-torture/execute/ieee\n+This contains tests which are specific to IEEE floating point.\n @item gcc.c-torture/unsorted\n FIXME: describe this.\n \n This directory should probably not be used for new tests.\n-@item gcc.dg\n-This test suite contains tests using the more modern @samp{dg} harness.\n-Magic comments determine whether the file is preprocessed, compiled,\n-linked or run.  In these tests, error and warning message texts are\n-compared against expected texts or regular expressions given in\n-comments.  These tests are run with the options @samp{-ansi -pedantic}\n-unless other options are given in the test.  Except as noted below they\n-are not run with multiple optimization options.\n-@item gcc.dg/cpp\n-This subdirectory contains tests of the preprocessor.\n-@item gcc.dg/debug\n-This subdirectory contains tests for debug formats.  Tests in this\n-subdirectory are run for each debug format that the compiler supports.\n-@item gcc.dg/format\n-This subdirectory contains tests of the @option{-Wformat} format\n-checking.  Tests in this directory are run with and without\n-@option{-DWIDE}.\n-@item gcc.dg/noncompile\n-This subdirectory contains tests of code that should not compile and\n-does not need any special compilation options.  They are run with\n-multiple optimization options, since sometimes invalid code crashes\n-the compiler with optimization.\n-@item gcc.dg/special\n-FIXME: describe this.\n @item gcc.c-torture/misc-tests\n FIXME: describe this, when it should be used for new tests and when it\n shouldn't."}]}