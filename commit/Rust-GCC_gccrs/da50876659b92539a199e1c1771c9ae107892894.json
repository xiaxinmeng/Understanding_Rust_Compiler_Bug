{"sha": "da50876659b92539a199e1c1771c9ae107892894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE1MDg3NjY1OWI5MjUzOWExOTllMWMxNzcxYzlhZTEwNzg5Mjg5NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-03-26T07:44:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:44:09Z"}, "message": "gnat_ugn.texi: Add documentation for -gnatw.w/-gnatw.W Add description for the new gnatstub...\n\n2008-03-26  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Add documentation for -gnatw.w/-gnatw.W\n\tAdd description for the new gnatstub option '--header-file'\n\tclarification of -gnatwz/-gnatwZ\n\tAdd a \"Irix-Specific Considerations\" section to document the need to\n\tset LD_LIBRARY_PATH when using the default shared runtime library.\n\tAdded documentation for both gcov and gprof.\n\n\t* gnat_rm.texi: Document that pragma Compile_Time_Warning generates\n\tmessages that are not suppressed when clients are compiled.\n\tAdd documentation of s-pooglo s-pooloc\n\tDocument the new GNAT.Serial_Communications API.\n\tAdd documentation for 'Old attribute\n\tAdd description of pragma Optimize_Alignment\n\n\t* ug_words: Add entries for -gnatw.w -gnatw.W\n\n\t* usage.adb: Add line for -gnatw.w (warn on warnings off)\n\nFrom-SVN: r133588", "tree": {"sha": "254f11e9d21ca1ffe073ef5a351f415871504c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/254f11e9d21ca1ffe073ef5a351f415871504c50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da50876659b92539a199e1c1771c9ae107892894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da50876659b92539a199e1c1771c9ae107892894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da50876659b92539a199e1c1771c9ae107892894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da50876659b92539a199e1c1771c9ae107892894/comments", "author": null, "committer": null, "parents": [{"sha": "7e5e5cc7c4f75b465e1bcb0e4e5037297c5ce38e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5e5cc7c4f75b465e1bcb0e4e5037297c5ce38e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5e5cc7c4f75b465e1bcb0e4e5037297c5ce38e"}], "stats": {"total": 834, "additions": 673, "deletions": 161}, "files": [{"sha": "e85bff7d7123a05c6fe4d3659d3b7b6ed63e8937", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 315, "deletions": 151, "changes": 466, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=da50876659b92539a199e1c1771c9ae107892894", "patch": "@@ -170,6 +170,7 @@ Implementation Defined Pragmas\n * Pragma No_Strict_Aliasing ::\n * Pragma Normalize_Scalars::\n * Pragma Obsolescent::\n+* Pragma Optimize_Alignment::\n * Pragma Passive::\n * Pragma Persistent_BSS::\n * Pragma Polling::\n@@ -198,6 +199,7 @@ Implementation Defined Pragmas\n * Pragma Unimplemented_Unit::\n * Pragma Universal_Aliasing ::\n * Pragma Universal_Data::\n+* Pragma Unmodified::\n * Pragma Unreferenced::\n * Pragma Unreferenced_Objects::\n * Pragma Unreserve_All_Interrupts::\n@@ -241,6 +243,7 @@ Implementation Defined Attributes\n * Mechanism_Code::\n * Null_Parameter::\n * Object_Size::\n+* Old::\n * Passed_By_Reference::\n * Pool_Address::\n * Range_Length::\n@@ -283,20 +286,24 @@ The GNAT Library\n * Ada.Characters.Latin_9 (a-chlat9.ads)::\n * Ada.Characters.Wide_Latin_1 (a-cwila1.ads)::\n * Ada.Characters.Wide_Latin_9 (a-cwila9.ads)::\n-* Ada.Characters.Wide_Wide_Latin_1 (a-czila1.ads)::\n-* Ada.Characters.Wide_Wide_Latin_9 (a-czila9.ads)::\n-* Ada.Command_Line.Remove (a-colire.ads)::\n+* Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads)::\n+* Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads)::\n * Ada.Command_Line.Environment (a-colien.ads)::\n+* Ada.Command_Line.Remove (a-colire.ads)::\n+* Ada.Command_Line.Response_File (a-clrefi.ads)::\n * Ada.Direct_IO.C_Streams (a-diocst.ads)::\n * Ada.Exceptions.Is_Null_Occurrence (a-einuoc.ads)::\n+* Ada.Exceptions.Last_Chance_Handler (a-elchha.ads)::\n * Ada.Exceptions.Traceback (a-exctra.ads)::\n * Ada.Sequential_IO.C_Streams (a-siocst.ads)::\n * Ada.Streams.Stream_IO.C_Streams (a-ssicst.ads)::\n * Ada.Strings.Unbounded.Text_IO (a-suteio.ads)::\n * Ada.Strings.Wide_Unbounded.Wide_Text_IO (a-swuwti.ads)::\n * Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Text_IO (a-szuzti.ads)::\n * Ada.Text_IO.C_Streams (a-tiocst.ads)::\n+* Ada.Wide_Characters.Unicode (a-wichun.ads)::\n * Ada.Wide_Text_IO.C_Streams (a-wtcstr.ads)::\n+* Ada.Wide_Wide_Characters.Unicode (a-zchuni.ads)::\n * Ada.Wide_Wide_Text_IO.C_Streams (a-ztcstr.ads)::\n * GNAT.Altivec (g-altive.ads)::\n * GNAT.Altivec.Conversions (g-altcon.ads)::\n@@ -350,12 +357,13 @@ The GNAT Library\n * GNAT.Most_Recent_Exception (g-moreex.ads)::\n * GNAT.OS_Lib (g-os_lib.ads)::\n * GNAT.Perfect_Hash_Generators (g-pehage.ads)::\n-* GNAT.Random_Numbers (g-rannum.ads)\n+* GNAT.Random_Numbers (g-rannum.ads)::\n * GNAT.Regexp (g-regexp.ads)::\n * GNAT.Registry (g-regist.ads)::\n * GNAT.Regpat (g-regpat.ads)::\n * GNAT.Secondary_Stack_Info (g-sestin.ads)::\n * GNAT.Semaphores (g-semaph.ads)::\n+* GNAT.Serial_Communications (g-sercom.ads)::\n * GNAT.SHA1 (g-sha1.ads)::\n * GNAT.Signals (g-signal.ads)::\n * GNAT.Sockets (g-socket.ads)::\n@@ -383,17 +391,15 @@ The GNAT Library\n * Interfaces.C.Extensions (i-cexten.ads)::\n * Interfaces.C.Streams (i-cstrea.ads)::\n * Interfaces.CPP (i-cpp.ads)::\n-* Interfaces.Os2lib (i-os2lib.ads)::\n-* Interfaces.Os2lib.Errors (i-os2err.ads)::\n-* Interfaces.Os2lib.Synchronization (i-os2syn.ads)::\n-* Interfaces.Os2lib.Threads (i-os2thr.ads)::\n * Interfaces.Packed_Decimal (i-pacdec.ads)::\n * Interfaces.VxWorks (i-vxwork.ads)::\n * Interfaces.VxWorks.IO (i-vxwoio.ads)::\n * System.Address_Image (s-addima.ads)::\n * System.Assertions (s-assert.ads)::\n * System.Memory (s-memory.ads)::\n * System.Partition_Interface (s-parint.ads)::\n+* System.Pool_Global (s-pooglo.ads)::\n+* System.Pool_Local (s-pooloc.ads)::\n * System.Restrictions (s-restri.ads)::\n * System.Rident (s-rident.ads)::\n * System.Task_Info (s-tasinf.ads)::\n@@ -758,6 +764,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma No_Strict_Aliasing::\n * Pragma Normalize_Scalars::\n * Pragma Obsolescent::\n+* Pragma Optimize_Alignment::\n * Pragma Passive::\n * Pragma Persistent_BSS::\n * Pragma Polling::\n@@ -786,6 +793,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Unimplemented_Unit::\n * Pragma Universal_Aliasing ::\n * Pragma Universal_Data::\n+* Pragma Unmodified::\n * Pragma Unreferenced::\n * Pragma Unreferenced_Objects::\n * Pragma Unreserve_All_Interrupts::\n@@ -1162,7 +1170,15 @@ pragma Compile_Time_Warning\n \n @noindent\n Same as pragma Compile_Time_Error, except a warning is issued instead\n-of an error message.\n+of an error message. Note that if this pragma is used in a package that\n+is with'ed by a client, the client will get the warning even though it\n+is issued by a with'ed package (normally warnings in with'ed units are\n+suppressed, but this is a special exception to that rule).\n+\n+One typical use is within a generic where compile time known characteristics\n+of formal parameters are tested, and warnings given appropriately. Another use\n+with a first parameter of True is to warn a client about use of a package,\n+for example that it is not fully implemented.\n \n @node Pragma Complete_Representation\n @unnumberedsec Pragma Complete_Representation\n@@ -3373,6 +3389,77 @@ Entity parameter is omitted, then the pragma applies to the declaration\n immediately preceding the pragma (this form cannot be used for the\n enumeration literal case).\n \n+@node Pragma Optimize_Alignment\n+@unnumberedsec Pragma Optimize_Alignment\n+@findex Optimize_Alignment\n+@cindex Alignment, default settings\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Optimize_Alignment (TIME | SPACE | OFF);\n+@end smallexample\n+\n+@noindent\n+This is a configuration pragma which affects the choice of default alignments\n+for types where no alignment is explicitly specified. There is a time/space\n+trade-off in the selection of these values. Large alignments result in more\n+efficient code, at the expense of larger data space, since sizes have to be\n+increased to match these alignments. Smaller alignments save space, but the\n+access code is slower. The normal choice of default alignments (which is what\n+you get if you do not use this pragma, or if you use an argument of OFF),\n+tries to balance these two requirements.\n+\n+Specifying SPACE causes smaller default alignments to be chosen in two cases.\n+First any packed record is given an alignment of 1. Second, if a size is given\n+for the type, then the alignment is chosen to avoid increasing this size. For\n+example, consider:\n+\n+@smallexample @c ada\n+   type R is record\n+      X : Integer;\n+      Y : Character;\n+   end record;\n+\n+   for R'Size use 5*8;\n+@end smallexample\n+\n+@noindent\n+In the default mode, this type gets an alignment of 4, so that access to the\n+Integer field X are efficient. But this means that objects of the type end up\n+with a size of 8 bytes. This is a valid choice, since sizes of objects are\n+allowed to be bigger than the size of the type, but it can waste space if for\n+example fields of type R appear in an enclosing record. If the above type is\n+compiled in @code{Optimize_Alignment (Space)} mode, the alignment is set to 1.\n+\n+Specifying TIME causes larger default alignments to be chosen in the case of\n+small types with sizes that are not a power of 2. For example, consider:\n+\n+@smallexample @c ada\n+   type R is record\n+      A : Character;\n+      B : Character;\n+      C : Boolean;\n+   end record;\n+\n+   pragma Pack (R);\n+   for R'Size use 17;\n+@end smallexample\n+\n+@noindent\n+The default alignment for this record is normally 1, but if this type is\n+compiled in @code{Optimize_Alignment (Time)} mode, then the alignment is set\n+to 4, which wastes space for objects of the type, since they are now 4 bytes\n+long, but results in more efficient access when the whole record is referenced.\n+\n+As noted above, this is a configuration pragma, and there is a requirement\n+that all units in a partition be compiled with a consistent setting of the\n+optimization setting. This would normally be achieved by use of a configuration\n+pragma file containing the appropriate setting. The exception to this rule is\n+that predefined units in the GNAT library (that is, members of the Ada, System,\n+Interfaces, GNAT hierarchies) ignore the setting of this pragma, and thus the\n+consistency requirement does not apply to them.\n+\n @node Pragma Passive\n @unnumberedsec Pragma Passive\n @findex Passive\n@@ -4313,6 +4400,31 @@ a library unit pragma, but can also be used as a configuration pragma\n of this pragma is also available by applying the -univ switch on the\n compilations of units where universal addressing of the data is desired.\n \n+@node Pragma Unmodified\n+@unnumberedsec Pragma Unmodified\n+@findex Unmodified\n+@cindex Warnings, unmodified\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Unmodified (LOCAL_NAME @{, LOCAL_NAME@});\n+@end smallexample\n+\n+@noindent\n+This pragma signals that the assignable entities (variables,\n+@code{out} parameters, @code{in out} parameters) whose names are listed are\n+deliberately not assigned in the current source unit. This\n+suppresses warnings about the\n+entities being referenced but not assigned, and in addition a warning will be\n+generated if one of these entities is in fact assigned in the\n+same unit as the pragma (or in the corresponding body, or one\n+of its subunits).\n+\n+This is particularly useful for clearly signaling that a particular\n+parameter is not modified, even though the spec suggests that it might\n+be.\n+\n @node Pragma Unreferenced\n @unnumberedsec Pragma Unreferenced\n @findex Unreferenced\n@@ -4578,55 +4690,66 @@ full details see @ref{Warning Message Control,,, gnat_ugn, @value{EDITION}\n User's Guide}.\n \n @smallexample\n-a   turn on all optional warnings (except d,h,l)\n-A   turn off all optional warnings\n-b   turn on warnings for bad fixed value (not multiple of small)\n-B   turn off warnings for bad fixed value (not multiple of small)\n-c   turn on warnings for constant conditional\n-C   turn off warnings for constant conditional\n-d   turn on warnings for implicit dereference\n-D   turn off warnings for implicit dereference\n-e   treat all warnings as errors\n-f   turn on warnings for unreferenced formal\n-F   turn off warnings for unreferenced formal\n-g   turn on warnings for unrecognized pragma\n-G   turn off warnings for unrecognized pragma\n-h   turn on warnings for hiding variable\n-H   turn off warnings for hiding variable\n-i   turn on warnings for implementation unit\n-I   turn off warnings for implementation unit\n-j   turn on warnings for obsolescent (annex J) feature\n-J   turn off warnings for obsolescent (annex J) feature\n-k   turn on warnings on constant variable\n-K   turn off warnings on constant variable\n-l   turn on warnings for missing elaboration pragma\n-L   turn off warnings for missing elaboration pragma\n-m   turn on warnings for variable assigned but not read\n-M   turn off warnings for variable assigned but not read\n-n   normal warning mode (cancels -gnatws/-gnatwe)\n-o   turn on warnings for address clause overlay\n-O   turn off warnings for address clause overlay\n-p   turn on warnings for ineffective pragma Inline\n-P   turn off warnings for ineffective pragma Inline\n-q   turn on warnings for questionable missing parentheses\n-Q   turn off warnings for questionable missing parentheses\n-r   turn on warnings for redundant construct\n-R   turn off warnings for redundant construct\n-s   suppress all warnings\n-t   turn on warnings for tracking deleted code\n-T   turn off warnings for tracking deleted code\n-u   turn on warnings for unused entity\n-U   turn off warnings for unused entity\n-v   turn on warnings for unassigned variable\n-V   turn off warnings for unassigned variable\n-w   turn on warnings for wrong low bound assumption\n-W   turn off warnings for wrong low bound assumption\n-x   turn on warnings for export/import\n-X   turn off warnings for export/import\n-y   turn on warnings for Ada 2005 incompatibility\n-Y   turn off warnings for Ada 2005 incompatibility\n-z   turn on size/align warnings for unchecked conversion\n-Z   turn off size/align warnings for unchecked conversion\n+a    turn on all optional warnings (except d h l .o)\n+A    turn off all optional warnings\n+.a*  turn on warnings for failing assertions\n+.A   turn off warnings for failing assertions\n+b    turn on warnings for bad fixed value (not multiple of small)\n+B*   turn off warnings for bad fixed value (not multiple of small)\n+c    turn on warnings for constant conditional\n+C*   turn off warnings for constant conditional\n+.c   turn on warnings for unrepped components\n+.C*  turn off warnings for unrepped components\n+d    turn on warnings for implicit dereference\n+D*   turn off warnings for implicit dereference\n+e    treat all warnings as errors\n+f    turn on warnings for unreferenced formal\n+F*   turn off warnings for unreferenced formal\n+g*   turn on warnings for unrecognized pragma\n+G    turn off warnings for unrecognized pragma\n+h    turn on warnings for hiding variable\n+H*   turn off warnings for hiding variable\n+i*   turn on warnings for implementation unit\n+I    turn off warnings for implementation unit\n+j    turn on warnings for obsolescent (annex J) feature\n+J*   turn off warnings for obsolescent (annex J) feature\n+k    turn on warnings on constant variable\n+K*   turn off warnings on constant variable\n+l    turn on warnings for missing elaboration pragma\n+L*   turn off warnings for missing elaboration pragma\n+m    turn on warnings for variable assigned but not read\n+M*   turn off warnings for variable assigned but not read\n+n*   normal warning mode (cancels -gnatws/-gnatwe)\n+o*   turn on warnings for address clause overlay\n+O    turn off warnings for address clause overlay\n+.o   turn on warnings for out parameters assigned but not read\n+.O*  turn off warnings for out parameters assigned but not read\n+p    turn on warnings for ineffective pragma Inline in frontend\n+P*   turn off warnings for ineffective pragma Inline in frontend\n+q*   turn on warnings for questionable missing parentheses\n+Q    turn off warnings for questionable missing parentheses\n+r    turn on warnings for redundant construct\n+R*   turn off warnings for redundant construct\n+.r   turn on warnings for object renaming function\n+.R*  turn off warnings for object renaming function\n+s    suppress all warnings\n+t    turn on warnings for tracking deleted code\n+T*   turn off warnings for tracking deleted code\n+u    turn on warnings for unused entity\n+U*   turn off warnings for unused entity\n+v*   turn on warnings for unassigned variable\n+V    turn off warnings for unassigned variable\n+w*   turn on warnings for wrong low bound assumption\n+W    turn off warnings for wrong low bound assumption\n+x*   turn on warnings for export/import\n+X    turn off warnings for export/import\n+.x   turn on warnings for non-local exceptions\n+.X*  turn off warnings for non-local exceptions\n+y*   turn on warnings for Ada 2005 incompatibility\n+Y    turn off warnings for Ada 2005 incompatibility\n+z*   turn on convention/size/align warnings for unchecked conversion\n+Z    turn off convention/size/align warnings for unchecked conversion\n+*    indicates default in above list\n @end smallexample\n \n @noindent\n@@ -4796,6 +4919,7 @@ consideration, you should minimize the use of these attributes.\n * Mechanism_Code::\n * Null_Parameter::\n * Object_Size::\n+* Old::\n * Passed_By_Reference::\n * Pool_Address::\n * Range_Length::\n@@ -5324,39 +5448,45 @@ alignment will be 4, because of the\n integer field, and so the default size of record objects for this type\n will be 64 (8 bytes).\n \n-The @code{@var{type}'Object_Size} attribute\n-has been added to GNAT to allow the\n-default object size of a type to be easily determined.  For example,\n-@code{Natural'Object_Size} is 32, and\n-@code{Rec'Object_Size} (for the record type in the above example) will be\n-64.  Note also that, unlike the situation with the\n-@code{Size} attribute as defined in the Ada RM, the\n-@code{Object_Size} attribute can be specified individually\n-for different subtypes.  For example:\n+@node Old\n+@unnumberedsec Old\n+@cindex Capturing Old values\n+@cindex Postconditions\n+@noindent\n+The attribute Prefix'Old can be used within a\n+subprogram to refer to the value of the prefix on entry. So for\n+example if you have an argument of a record type X called Arg1,\n+you can refer to Arg1.Field'Old which yields the value of\n+Arg1.Field on entry. The implementation simply involves generating\n+an object declaration which captures the value on entry. Any\n+prefix is allowed except one of a limited type (since limited\n+types cannot be copied to capture their values).\n+\n+The following example shows the use of 'Old to implement\n+a test of a postcondition:\n \n @smallexample @c ada\n-type R is new Integer;\n-subtype R1 is R range 1 .. 10;\n-subtype R2 is R range 1 .. 10;\n-for R2'Object_Size use 8;\n-@end smallexample\n+with Old_Pkg;\n+procedure Old is\n+begin\n+   Old_Pkg.Incr;\n+end Old;\n \n-@noindent\n-In this example, @code{R'Object_Size} and @code{R1'Object_Size} are both\n-32 since the default object size for a subtype is the same as the object size\n-for the parent subtype.  This means that objects of type @code{R}\n-or @code{R1} will\n-by default be 32 bits (four bytes).  But objects of type\n-@code{R2} will be only\n-8 bits (one byte), since @code{R2'Object_Size} has been set to 8.\n+package Old_Pkg is\n+   procedure Incr;\n+end Old_Pkg;\n+\n+package body Old_Pkg is\n+   Count : Natural := 0;\n+\n+   procedure Incr is\n+   begin\n+      ... code manipulating the value of Count\n \n-Although @code{Object_Size} does properly reflect the default object size\n-value, it is not necessarily the case that all objects will be of this size\n-in a case where it is not specified explicitly. The compiler is free to\n-increase the size and alignment of stand alone objects to improve efficiency\n-of the generated code and sometimes does so in the case of large composite\n-objects. If the size of a stand alone object is critical to the\n-application, it should be specified explicitly.\n+      pragma Assert (Count = Count'Old + 1);\n+   end Incr;\n+end Old_Pkg;\n+@end smallexample\n \n @node Passed_By_Reference\n @unnumberedsec Passed_By_Reference\n@@ -12749,20 +12879,24 @@ of GNAT, and will generate a warning message.\n * Ada.Characters.Latin_9 (a-chlat9.ads)::\n * Ada.Characters.Wide_Latin_1 (a-cwila1.ads)::\n * Ada.Characters.Wide_Latin_9 (a-cwila9.ads)::\n-* Ada.Characters.Wide_Wide_Latin_1 (a-czila1.ads)::\n-* Ada.Characters.Wide_Wide_Latin_9 (a-czila9.ads)::\n-* Ada.Command_Line.Remove (a-colire.ads)::\n+* Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads)::\n+* Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads)::\n * Ada.Command_Line.Environment (a-colien.ads)::\n+* Ada.Command_Line.Remove (a-colire.ads)::\n+* Ada.Command_Line.Response_File (a-clrefi.ads)::\n * Ada.Direct_IO.C_Streams (a-diocst.ads)::\n * Ada.Exceptions.Is_Null_Occurrence (a-einuoc.ads)::\n+* Ada.Exceptions.Last_Chance_Handler (a-elchha.ads)::\n * Ada.Exceptions.Traceback (a-exctra.ads)::\n * Ada.Sequential_IO.C_Streams (a-siocst.ads)::\n * Ada.Streams.Stream_IO.C_Streams (a-ssicst.ads)::\n * Ada.Strings.Unbounded.Text_IO (a-suteio.ads)::\n * Ada.Strings.Wide_Unbounded.Wide_Text_IO (a-swuwti.ads)::\n * Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Text_IO (a-szuzti.ads)::\n * Ada.Text_IO.C_Streams (a-tiocst.ads)::\n+* Ada.Wide_Characters.Unicode (a-wichun.ads)::\n * Ada.Wide_Text_IO.C_Streams (a-wtcstr.ads)::\n+* Ada.Wide_Wide_Characters.Unicode (a-zchuni.ads)::\n * Ada.Wide_Wide_Text_IO.C_Streams (a-ztcstr.ads)::\n * GNAT.Altivec (g-altive.ads)::\n * GNAT.Altivec.Conversions (g-altcon.ads)::\n@@ -12780,14 +12914,14 @@ of GNAT, and will generate a warning message.\n * GNAT.Byte_Swapping (g-bytswa.ads)::\n * GNAT.Calendar (g-calend.ads)::\n * GNAT.Calendar.Time_IO (g-catiio.ads)::\n-* GNAT.CRC32 (g-crc32.ads)::\n * GNAT.Case_Util (g-casuti.ads)::\n * GNAT.CGI (g-cgi.ads)::\n * GNAT.CGI.Cookie (g-cgicoo.ads)::\n * GNAT.CGI.Debug (g-cgideb.ads)::\n * GNAT.Command_Line (g-comlin.ads)::\n * GNAT.Compiler_Version (g-comver.ads)::\n * GNAT.Ctrl_C (g-ctrl_c.ads)::\n+* GNAT.CRC32 (g-crc32.ads)::\n * GNAT.Current_Exception (g-curexc.ads)::\n * GNAT.Debug_Pools (g-debpoo.ads)::\n * GNAT.Debug_Utilities (g-debuti.ads)::\n@@ -12822,6 +12956,7 @@ of GNAT, and will generate a warning message.\n * GNAT.Regpat (g-regpat.ads)::\n * GNAT.Secondary_Stack_Info (g-sestin.ads)::\n * GNAT.Semaphores (g-semaph.ads)::\n+* GNAT.Serial_Communications (g-sercom.ads)::\n * GNAT.SHA1 (g-sha1.ads)::\n * GNAT.Signals (g-signal.ads)::\n * GNAT.Sockets (g-socket.ads)::\n@@ -12849,17 +12984,15 @@ of GNAT, and will generate a warning message.\n * Interfaces.C.Extensions (i-cexten.ads)::\n * Interfaces.C.Streams (i-cstrea.ads)::\n * Interfaces.CPP (i-cpp.ads)::\n-* Interfaces.Os2lib (i-os2lib.ads)::\n-* Interfaces.Os2lib.Errors (i-os2err.ads)::\n-* Interfaces.Os2lib.Synchronization (i-os2syn.ads)::\n-* Interfaces.Os2lib.Threads (i-os2thr.ads)::\n * Interfaces.Packed_Decimal (i-pacdec.ads)::\n * Interfaces.VxWorks (i-vxwork.ads)::\n * Interfaces.VxWorks.IO (i-vxwoio.ads)::\n * System.Address_Image (s-addima.ads)::\n * System.Assertions (s-assert.ads)::\n * System.Memory (s-memory.ads)::\n * System.Partition_Interface (s-parint.ads)::\n+* System.Pool_Global (s-pooglo.ads)::\n+* System.Pool_Local (s-pooloc.ads)::\n * System.Restrictions (s-restri.ads)::\n * System.Rident (s-rident.ads)::\n * System.Task_Info (s-tasinf.ads)::\n@@ -12909,9 +13042,9 @@ instead of @code{Character}.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n-@node Ada.Characters.Wide_Wide_Latin_1 (a-czila1.ads)\n-@section @code{Ada.Characters.Wide_Wide_Latin_1} (@file{a-czila1.ads})\n-@cindex @code{Ada.Characters.Wide_Wide_Latin_1} (@file{a-czila1.ads})\n+@node Ada.Characters.Wide_Wide_Latin_1 (a-chzla1.ads)\n+@section @code{Ada.Characters.Wide_Wide_Latin_1} (@file{a-chzla1.ads})\n+@cindex @code{Ada.Characters.Wide_Wide_Latin_1} (@file{a-chzla1.ads})\n @cindex Latin_1 constants for Wide_Wide_Character\n \n @noindent\n@@ -12923,9 +13056,9 @@ instead of @code{Character}.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n-@node Ada.Characters.Wide_Wide_Latin_9 (a-czila9.ads)\n-@section @code{Ada.Characters.Wide_Wide_Latin_9} (@file{a-czila9.ads})\n-@cindex @code{Ada.Characters.Wide_Wide_Latin_9} (@file{a-czila9.ads})\n+@node Ada.Characters.Wide_Wide_Latin_9 (a-chzla9.ads)\n+@section @code{Ada.Characters.Wide_Wide_Latin_9} (@file{a-chzla9.ads})\n+@cindex @code{Ada.Characters.Wide_Wide_Latin_9} (@file{a-chzla9.ads})\n @cindex Latin_9 constants for Wide_Wide_Character\n \n @noindent\n@@ -12937,6 +13070,16 @@ instead of @code{Character}.  The provision of such a package\n is specifically authorized by the Ada Reference Manual\n (RM A.3.3(27)).\n \n+@node Ada.Command_Line.Environment (a-colien.ads)\n+@section @code{Ada.Command_Line.Environment} (@file{a-colien.ads})\n+@cindex @code{Ada.Command_Line.Environment} (@file{a-colien.ads})\n+@cindex Environment entries\n+\n+@noindent\n+This child of @code{Ada.Command_Line}\n+provides a mechanism for obtaining environment values on systems\n+where this concept makes sense.\n+\n @node Ada.Command_Line.Remove (a-colire.ads)\n @section @code{Ada.Command_Line.Remove} (@file{a-colire.ads})\n @cindex @code{Ada.Command_Line.Remove} (@file{a-colire.ads})\n@@ -12950,15 +13093,18 @@ arguments from the argument list.  Once removed, an argument is not visible\n to further calls on the subprograms in @code{Ada.Command_Line} will not\n see the removed argument.\n \n-@node Ada.Command_Line.Environment (a-colien.ads)\n-@section @code{Ada.Command_Line.Environment} (@file{a-colien.ads})\n-@cindex @code{Ada.Command_Line.Environment} (@file{a-colien.ads})\n-@cindex Environment entries\n+@node Ada.Command_Line.Response_File (a-clrefi.ads)\n+@section @code{Ada.Command_Line.Response_File} (@file{a-clrefi.ads})\n+@cindex @code{Ada.Command_Line.Response_File} (@file{a-clrefi.ads})\n+@cindex Response file for command line\n+@cindex Command line, response file\n+@cindex Command line, handling long command lines\n \n @noindent\n-This child of @code{Ada.Command_Line}\n-provides a mechanism for obtaining environment values on systems\n-where this concept makes sense.\n+This child of @code{Ada.Command_Line} provides a mechanism facilities for\n+getting command line arguments from a text file, called a \"response file\".\n+Using a response file allow passing a set of arguments to an executable longer\n+than the maximum allowed by the system on the command line.\n \n @node Ada.Direct_IO.C_Streams (a-diocst.ads)\n @section @code{Ada.Direct_IO.C_Streams} (@file{a-diocst.ads})\n@@ -12981,6 +13127,16 @@ This child subprogram provides a way of testing for the null\n exception occurrence (@code{Null_Occurrence}) without raising\n an exception.\n \n+@node Ada.Exceptions.Last_Chance_Handler (a-elchha.ads)\n+@section @code{Ada.Exceptions.Last_Chance_Handler} (@file{a-elchha.ads})\n+@cindex @code{Ada.Exceptions.Last_Chance_Handler} (@file{a-elchha.ads})\n+@cindex Null_Occurrence, testing for\n+\n+@noindent\n+This child subprogram is used for handling otherwise unhandled\n+exceptions (hence the name last chance), and perform clean ups before\n+terminating the program. Note that this subprogram never returns.\n+\n @node Ada.Exceptions.Traceback (a-exctra.ads)\n @section @code{Ada.Exceptions.Traceback} (@file{a-exctra.ads})\n @cindex @code{Ada.Exceptions.Traceback} (@file{a-exctra.ads})\n@@ -13057,6 +13213,15 @@ C streams and @code{Text_IO}.  The stream identifier can be\n extracted from a file opened on the Ada side, and an Ada file\n can be constructed from a stream opened on the C side.\n \n+@node Ada.Wide_Characters.Unicode (a-wichun.ads)\n+@section @code{Ada.Wide_Characters.Unicode} (@file{a-wichun.ads})\n+@cindex @code{Ada.Wide_Characters.Unicode} (@file{a-wichun.ads})\n+@cindex Unicode categorization, Wide_Character\n+\n+@noindent\n+This package provides subprograms that allow categorization of\n+Wide_Character values according to Unicode categories.\n+\n @node Ada.Wide_Text_IO.C_Streams (a-wtcstr.ads)\n @section @code{Ada.Wide_Text_IO.C_Streams} (@file{a-wtcstr.ads})\n @cindex @code{Ada.Wide_Text_IO.C_Streams} (@file{a-wtcstr.ads})\n@@ -13068,6 +13233,15 @@ C streams and @code{Wide_Text_IO}.  The stream identifier can be\n extracted from a file opened on the Ada side, and an Ada file\n can be constructed from a stream opened on the C side.\n \n+@node Ada.Wide_Wide_Characters.Unicode (a-zchuni.ads)\n+@section @code{Ada.Wide_Wide_Characters.Unicode} (@file{a-zchuni.ads})\n+@cindex @code{Ada.Wide_Wide_Characters.Unicode} (@file{a-zchuni.ads})\n+@cindex Unicode categorization, Wide_Wide_Character\n+\n+@noindent\n+This package provides subprograms that allow categorization of\n+Wide_Wide_Character values according to Unicode categories.\n+\n @node Ada.Wide_Wide_Text_IO.C_Streams (a-ztcstr.ads)\n @section @code{Ada.Wide_Wide_Text_IO.C_Streams} (@file{a-ztcstr.ads})\n @cindex @code{Ada.Wide_Wide_Text_IO.C_Streams} (@file{a-ztcstr.ads})\n@@ -13726,6 +13900,15 @@ secondary stack.\n @noindent\n Provides classic counting and binary semaphores using protected types.\n \n+@node GNAT.Serial_Communications (g-sercom.ads)\n+@section @code{GNAT.Serial_Communications} (@file{g-sercom.ads})\n+@cindex @code{GNAT.Serial_Communications} (@file{g-sercom.ads})\n+@cindex Serial_Communications\n+\n+@noindent\n+Provides a simple interface to send and receive data over a serial\n+port. This is only supported on GNU/Linux and Windows.\n+\n @node GNAT.SHA1 (g-sha1.ads)\n @section @code{GNAT.SHA1} (@file{g-sha1.ads})\n @cindex @code{GNAT.SHA1} (@file{g-sha1.ads})\n@@ -14010,49 +14193,6 @@ This package provides facilities for use in interfacing to C++.  It\n is primarily intended to be used in connection with automated tools\n for the generation of C++ interfaces.\n \n-@node Interfaces.Os2lib (i-os2lib.ads)\n-@section @code{Interfaces.Os2lib} (@file{i-os2lib.ads})\n-@cindex @code{Interfaces.Os2lib} (@file{i-os2lib.ads})\n-@cindex Interfacing, to OS/2\n-@cindex OS/2 interfacing\n-\n-@noindent\n-This package provides interface definitions to the OS/2 library.\n-It is a thin binding which is a direct translation of the\n-various @file{<bse@.h>} files.\n-\n-@node Interfaces.Os2lib.Errors (i-os2err.ads)\n-@section @code{Interfaces.Os2lib.Errors} (@file{i-os2err.ads})\n-@cindex @code{Interfaces.Os2lib.Errors} (@file{i-os2err.ads})\n-@cindex OS/2 Error codes\n-@cindex Interfacing, to OS/2\n-@cindex OS/2 interfacing\n-\n-@noindent\n-This package provides definitions of the OS/2 error codes.\n-\n-@node Interfaces.Os2lib.Synchronization (i-os2syn.ads)\n-@section @code{Interfaces.Os2lib.Synchronization} (@file{i-os2syn.ads})\n-@cindex @code{Interfaces.Os2lib.Synchronization} (@file{i-os2syn.ads})\n-@cindex Interfacing, to OS/2\n-@cindex Synchronization, OS/2\n-@cindex OS/2 synchronization primitives\n-\n-@noindent\n-This is a child package that provides definitions for interfacing\n-to the @code{OS/2} synchronization primitives.\n-\n-@node Interfaces.Os2lib.Threads (i-os2thr.ads)\n-@section @code{Interfaces.Os2lib.Threads} (@file{i-os2thr.ads})\n-@cindex @code{Interfaces.Os2lib.Threads} (@file{i-os2thr.ads})\n-@cindex Interfacing, to OS/2\n-@cindex Thread control, OS/2\n-@cindex OS/2 thread interfacing\n-\n-@noindent\n-This is a child package that provides definitions for interfacing\n-to the @code{OS/2} thread primitives.\n-\n @node Interfaces.Packed_Decimal (i-pacdec.ads)\n @section @code{Interfaces.Packed_Decimal} (@file{i-pacdec.ads})\n @cindex @code{Interfaces.Packed_Decimal} (@file{i-pacdec.ads})\n@@ -14136,6 +14276,30 @@ This package provides facilities for partition interfacing.  It\n is used primarily in a distribution context when using Annex E\n with @code{GLADE}.\n \n+@node System.Pool_Global (s-pooglo.ads)\n+@section @code{System.Pool_Global} (@file{s-pooglo.ads})\n+@cindex @code{System.Pool_Global} (@file{s-pooglo.ads})\n+@cindex Storage pool, global\n+@cindex Global storage pool\n+\n+@noindent\n+This package provides a storage pool that is equivalent to the default\n+storage pool used for access types for which no pool is specifically\n+declared. It uses malloc/free to allocate/free and does not attempt to\n+do any automatic reclamation.\n+\n+@node System.Pool_Local (s-pooloc.ads)\n+@section @code{System.Pool_Local} (@file{s-pooloc.ads})\n+@cindex @code{System.Pool_Local} (@file{s-pooloc.ads})\n+@cindex Storage pool, local\n+@cindex Local storage pool\n+\n+@noindent\n+This package provides a storage pool that is intended for use with locally\n+defined access types. It uses malloc/free for allocate/free, and maintains\n+a list of allocated blocks, so that all storage allocated for the pool can\n+be freed automatically when the pool is finalized.\n+\n @node System.Restrictions (s-restri.ads)\n @section @code{System.Restrictions} (@file{s-restri.ads})\n @cindex @code{System.Restrictions} (@file{s-restri.ads})"}, {"sha": "69a2a3dd66e1c0497b946daece3eecc6faf7e351", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 352, "deletions": 8, "changes": 360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=da50876659b92539a199e1c1771c9ae107892894", "patch": "@@ -6,7 +6,7 @@\n @c                                                                            o\n @c                             G N A T _ U G N                                o\n @c                                                                            o\n-@c                     Copyright (C) 1992-2007, AdaCore                       o\n+@c                     Copyright (C) 1992-2008, AdaCore                       o\n @c                                                                            o\n @c  GNAT is free software;  you can  redistribute it  and/or modify it under  o\n @c  terms of the  GNU General Public License as published  by the Free Soft-  o\n@@ -89,7 +89,6 @@\n @set EDITION GNAT\n @set DEFAULTLANGUAGEVERSION Ada 2005\n @set NONDEFAULTLANGUAGEVERSION Ada 95\n-@set FILE gnat_ugn\n \n @ifset unw\n @set PLATFORM\n@@ -102,7 +101,7 @@\n @settitle @value{EDITION} User's Guide @value{PLATFORM}\n @dircategory GNU Ada tools\n @direntry\n-* @value{EDITION} User's Guide (@value{FILE}) @value{PLATFORM}\n+* @value{EDITION} User's Guide (gnat_ugn) @value{PLATFORM}\n @end direntry\n \n @include gcc-common.texi\n@@ -195,6 +194,9 @@ AdaCore@*\n * Creating Sample Bodies Using gnatstub::\n * Other Utility Programs::\n * Running and Debugging Ada Programs::\n+@ifclear vms\n+* Code Coverage and Profiling::\n+@end ifclear\n @ifset vms\n * Compatibility with HP Ada::\n @end ifset\n@@ -503,6 +505,13 @@ Other Utility Programs\n * The External Symbol Naming Scheme of GNAT::\n * Converting Ada Files to html with gnathtml::\n \n+@ifclear vms\n+Code Coverage and Profiling\n+\n+* Code Coverage of Ada Programs using gcov::\n+* Profiling an Ada Program using gprof::\n+@end ifclear\n+\n Running and Debugging Ada Programs\n \n * The GNAT Debugger GDB::\n@@ -587,6 +596,7 @@ Platform-Specific Information for the Run-Time Libraries\n * Solaris-Specific Considerations::\n * Linux-Specific Considerations::\n * AIX-Specific Considerations::\n+* Irix-Specific Considerations::\n \n Example of Binder Output File\n \n@@ -842,6 +852,12 @@ a utility that generates empty but compilable bodies for library units.\n @ref{Other Utility Programs}, discusses several other GNAT utilities,\n including @code{gnathtml}.\n \n+@ifclear vms\n+@item\n+@ref{Code Coverage and Profiling}, describes how to perform a structural\n+coverage and profile the execution of Ada programs.\n+@end ifclear\n+\n @item\n @ref{Running and Debugging Ada Programs}, describes how to run and debug\n Ada programs.\n@@ -5225,16 +5241,34 @@ This warning can also be turned on using @option{-gnatwa}.\n @item -gnatwW\n @emph{Suppress warnings on wrong low bound assumption.}\n @cindex @option{-gnatwW} (@command{gcc})\n-This switch activates warnings for indexing an unconstrained string parameter\n-with a literal or S'Length. This warning can also be suppressed by providing\n-an Assert pragma that checks the low bound, for example:\n+This switch suppresses warnings for indexing an unconstrained string parameter\n+with a literal or S'Length. Note that this warning can also be suppressed\n+in a particular case by adding an\n+assertion that the lower bound is 1,\n+as shown in the following example.\n \n @smallexample @c ada\n    procedure K (S : String) is\n       pragma Assert (S'First = 1);\n       @dots{}\n @end smallexample\n \n+@item -gnatw.w\n+@emph{Activate warnings on unnecessary Warnings Off pragmas}\n+@cindex @option{-gnatw.w} (@command{gcc})\n+@cindex Warnings Off control\n+This switch activates warnings for use of @code{pragma Warnings (Off, entity}\n+where either the pragma is entirely useless (because it suppresses no\n+warnings), or it could be replaced by @code{pragma Unreferenced} or\n+@code{pragma Unmodified}.The default is that these warnings are not given.\n+Note that this warning is not included in -gnatwa, it must be\n+activated explicitly.\n+\n+@item -gnatw.W\n+@emph{Suppress warnings on unnecessary Warnings Off pragmas}\n+@cindex @option{-gnatw.W} (@command{gcc})\n+This switch suppresses warnings for use of @code{pragma Warnings (Off, entity}.\n+\n @item -gnatwx\n @emph{Activate warnings on Export/Import pragmas.}\n @cindex @option{-gnatwx} (@command{gcc})\n@@ -5297,15 +5331,17 @@ incompatibilities between Ada 95 and Ada 2005.\n This switch activates warnings for unchecked conversions\n where the types are known at compile time to have different\n sizes. The default\n-is that such warnings are generated.\n+is that such warnings are generated. Warnings are also\n+generated for subprogram pointers with different conventions,\n+and, on VMS only, for data pointers with different conventions.\n This warning can also be turned on using @option{-gnatwa}.\n \n @item -gnatwZ\n @emph{Suppress warnings on unchecked conversions.}\n @cindex @option{-gnatwZ} (@command{gcc})\n This switch suppresses warnings for unchecked conversions\n where the types are known at compile time to have different\n-sizes.\n+sizes or conventions.\n \n @item ^-Wuninitialized^WARNINGS=UNINITIALIZED^\n @cindex @option{-Wuninitialized}\n@@ -21535,6 +21571,10 @@ into the body stub.\n @cindex @option{^-hg^/HEADER=GENERAL^} (@command{gnatstub})\n Put a sample comment header into the body stub.\n \n+@item ^--header-file=@var{filename}^/FROM_HEADER_FILE=@var{filename}^\n+@cindex @option{^--header-file^/FROM_HEADER_FILE=^} (@command{gnatstub})\n+Use the content of the file as the comment header for a generated body stub.\n+\n @ifclear vms\n @item -IDIR\n @cindex @option{-IDIR} (@command{gnatstub})\n@@ -21888,6 +21928,291 @@ $ RUN/DEBUG <PROGRAM_NAME>\n @noindent\n @end ifset\n \n+@ifclear vms\n+@c ******************************\n+@node Code Coverage and Profiling\n+@chapter Code Coverage and Profiling\n+@cindex Code Coverage\n+@cindex Profiling\n+\n+@noindent\n+This chapter describes how to use @code{gcov} - coverage testing tool - and\n+@code{gprof} - profiler tool - on your Ada programs.\n+\n+@menu\n+* Code Coverage of Ada Programs using gcov::\n+* Profiling an Ada Program using gprof::\n+@end menu\n+\n+@node Code Coverage of Ada Programs using gcov\n+@section Code Coverage of Ada Programs using gcov\n+@cindex gcov\n+@cindex -fprofile-arcs\n+@cindex -ftest-coverage\n+@cindex -coverage\n+@cindex Code Coverage\n+\n+@noindent\n+@code{gcov} is a test coverage program: it analyzes the execution of a given\n+program on selected tests, to help you determine the portions of the program\n+that are still untested.\n+\n+@code{gcov} is part of the GCC suite, and is described in detail in the GCC\n+User's Guide. You can refer to this documentation for a more complete\n+description.\n+\n+This chapter provides a quick startup guide, and\n+details some Gnat-specific features.\n+\n+@menu\n+* Quick startup guide::\n+* Gnat specifics::\n+@end menu\n+\n+@node Quick startup guide\n+@subsection Quick startup guide\n+\n+In order to perform coverage analysis of a program using @code{gcov}, 3\n+steps are needed:\n+\n+@itemize @bullet\n+@item\n+Code instrumentation during the compilation process\n+@item\n+Execution of the instrumented program\n+@item\n+Execution of the @code{gcov} tool to generate the result.\n+@end itemize\n+\n+The code instrumentation needed by gcov is created at the object level:\n+The source code is not modified in any way, because the instrumentation code is\n+inserted by gcc during the compilation process. To compile your code with code\n+coverage activated, you need to recompile your whole project using the\n+switches\n+@code{-fprofile-arcs} and @code{-ftest-coverage}, and link it using\n+@code{-fprofile-arcs}.\n+\n+@smallexample\n+$ gnatmake -P my_project.gpr -f -cargs -fprofile-arcs -ftest-coverage \\\n+   -largs -fprofile-arcs\n+@end smallexample\n+\n+This compilation process will create @file{.gcno} files together with\n+the usual object files.\n+\n+Once the program is compiled with coverage instrumentation, you can\n+run it as many times as needed - on portions of a test suite for\n+example. The first execution will produce @file{.gcda} files at the\n+same location as the @file{.gcno} files.  The following executions\n+will update those files, so that a cumulative result of the covered\n+portions of the program is generated.\n+\n+Finaly, you need to call the @code{gcov} tool. The different options of\n+@code{gcov} are available in the GCC User's Guide, section 'Invoking gcov'.\n+\n+This will create anotated source files with a @file{.gcov} extension:\n+@file{my_main.adb} file will be analysed in @file{my_main.adb.gcov}.\n+\n+@node Gnat specifics\n+@subsection Gnat specifics\n+\n+Because Ada semantics, portions of the source code may be shared among\n+several object files. This is the case for example when generics are\n+involved, when inlining is active  or when declarations generate  initialisation\n+calls. In order to take\n+into account this shared code, you need to call @code{gcov} on all\n+source files of the tested program at once.\n+\n+The list of source files might exceed the system's maximum command line\n+length. In order to bypass this limitation, a new mechanism has been\n+implemented in @code{gcov}: you can now list all your project's files into a\n+text file, and provide this file to gcov as a parameter,  preceded by a @@\n+(e.g. @samp{gcov @@mysrclist.txt}).\n+\n+@node Profiling an Ada Program using gprof\n+@section Profiling an Ada Program using gprof\n+@cindex gprof\n+@cindex -pg\n+@cindex Profiling\n+\n+@noindent\n+This section is not meant to be an exhaustive documentation of @code{gprof}.\n+Full documentation for it can be found in the GNU Profiler User's Guide\n+documentation that is part of this GNAT distribution.\n+\n+Profiling a program helps determine the parts of a program that are executed\n+most often, and are therefore the most time-consuming.\n+\n+@code{gprof} is the standard GNU profiling tool; it has been enhanced to\n+better handle Ada programs and multitasking.\n+It is currently supported on the following platoforms\n+@itemize @bullet\n+@item\n+linux x86/x86_64\n+@item\n+solaris sparc/sparc64/x86\n+@item\n+windows x86\n+@end itemize\n+\n+@noindent\n+In order to profile a program using @code{gprof}, 3 steps are needed:\n+\n+@itemize @bullet\n+@item\n+Code instrumentation, requiring a full recompilation of the project with the\n+proper switches.\n+@item\n+Execution of the program under the analysis conditions, i.e. with the desired\n+input.\n+@item\n+Analysis of the results using the @code{gprof} tool.\n+@end itemize\n+\n+@noindent\n+The following sections detail the different steps, and indicate how\n+to interpret the results:\n+@menu\n+* Compilation for profiling::\n+* Program execution::\n+* Running gprof::\n+* Interpretation of profiling results::\n+@end menu\n+\n+@node Compilation for profiling\n+@subsection Compilation for profiling\n+@cindex -pg\n+@cindex Profiling\n+\n+In order to profile a program the first step is to tell the compiler\n+to generate the necessary profiling information. The compiler switch to be used\n+is @code{-pg}, which must be added to other compilation switches. This\n+switch needs to be specified both during compilation and link stages, and can\n+be specified once when using gnatmake:\n+\n+@smallexample\n+gnatmake -f -pg -P my_project\n+@end smallexample\n+\n+@noindent\n+Note that only the objects that were compiled with the @samp{-pg} switch will be\n+profiled; if you need to profile your whole project, use the\n+@samp{-f} gnatmake switch to force full recompilation.\n+\n+@node Program execution\n+@subsection Program execution\n+\n+@noindent\n+Once the program has been compiled for profiling, you can run it as usual.\n+\n+The only constraint imposed by profiling is that the program must terminate\n+normally. An interrupted program (via a Ctrl-C, kill, etc.) will not be\n+properly analyzed.\n+\n+Once the program completes execution, a data file called @file{gmon.out} is\n+generated in the directory where the program was launched from. If this file\n+already exists, it will be overwritten.\n+\n+@node Running gprof\n+@subsection Running gprof\n+\n+@noindent\n+The @code{gprof} tool is called as follow:\n+\n+@smallexample\n+gprof my_prog gmon.out\n+@end smallexample\n+\n+@noindent\n+or simpler:\n+\n+@smallexample\n+gprof my_prog\n+@end smallexample\n+\n+@noindent\n+The complete form of the gprof command line is the following:\n+\n+@smallexample\n+gprof [^switches^options^] [executable [data-file]]\n+@end smallexample\n+\n+@noindent\n+@code{gprof} supports numerous ^switch^options^. The order of these\n+^switch^options^ does not matter. The full list of options can be found in\n+the GNU Profiler User's Guide documentation that comes with this documentation.\n+\n+The following is the subset of those switches that is most relevant:\n+\n+@table @option\n+\n+@item --demangle[=@var{style}]\n+@itemx --no-demangle\n+@cindex @option{--demangle} (@code{gprof})\n+These options control whether symbol names should be demangled when\n+printing output.  The default is to demangle C++ symbols.  The\n+@code{--no-demangle} option may be used to turn off demangling. Different\n+compilers have different mangling styles.  The optional demangling style\n+argument can be used to choose an appropriate demangling style for your\n+compiler, in particular Ada symbols generated by GNAT can be demangled using\n+@code{--demangle=gnat}.\n+\n+@item -e @var{function_name}\n+@cindex @option{-e} (@code{gprof})\n+The @samp{-e @var{function}} option tells @code{gprof} not to print\n+information about the function @var{function_name} (and its\n+children@dots{}) in the call graph.  The function will still be listed\n+as a child of any functions that call it, but its index number will be\n+shown as @samp{[not printed]}.  More than one @samp{-e} option may be\n+given; only one @var{function_name} may be indicated with each @samp{-e}\n+option.\n+\n+@item -E @var{function_name}\n+@cindex @option{-E} (@code{gprof})\n+The @code{-E @var{function}} option works like the @code{-e} option, but\n+execution time spent in the function (and children who were not called from\n+anywhere else), will not be used to compute the percentages-of-time for\n+the call graph.  More than one @samp{-E} option may be given; only one\n+@var{function_name} may be indicated with each @samp{-E} option.\n+\n+@item -f @var{function_name}\n+@cindex @option{-f} (@code{gprof})\n+The @samp{-f @var{function}} option causes @code{gprof} to limit the\n+call graph to the function @var{function_name} and its children (and\n+their children@dots{}).  More than one @samp{-f} option may be given;\n+only one @var{function_name} may be indicated with each @samp{-f}\n+option.\n+\n+@item -F @var{function_name}\n+@cindex @option{-F} (@code{gprof})\n+The @samp{-F @var{function}} option works like the @code{-f} option, but\n+only time spent in the function and its children (and their\n+children@dots{}) will be used to determine total-time and\n+percentages-of-time for the call graph.  More than one @samp{-F} option\n+may be given; only one @var{function_name} may be indicated with each\n+@samp{-F} option.  The @samp{-F} option overrides the @samp{-E} option.\n+\n+@end table\n+\n+@node Interpretation of profiling results\n+@subsection Interpretation of profiling results\n+\n+@noindent\n+\n+The results of the profiling analysis are represented by two arrays: the\n+'flat profile' and the 'call graph'. Full documentation of those outputs\n+can be found in the GNU Profiler User's Guide.\n+\n+The flat profile shows the time spent in each function of the program, and how\n+many time it has been called. This allows you to locate easily the most\n+time-consuming functions.\n+\n+The call graph shows, for each subprogram, the subprograms that call it,\n+and the subprograms that it calls. It also provides an estimate of the time\n+spent in each of those callers/called subprograms.\n+@end ifclear\n+\n+@c ******************************\n @node Running and Debugging Ada Programs\n @chapter Running and Debugging Ada Programs\n @cindex Debugging\n@@ -24694,6 +25019,7 @@ information about several specific platforms.\n * Solaris-Specific Considerations::\n * Linux-Specific Considerations::\n * AIX-Specific Considerations::\n+* Irix-Specific Considerations::\n @end menu\n \n @node Summary of Run-Time Configurations\n@@ -25010,6 +25336,24 @@ occurs in the environment task, or use @code{pragma Storage_Size} to\n specify a sufficiently large size for the stack of the task that contains\n this call.\n \n+@node Irix-Specific Considerations\n+@section Irix-Specific Considerations\n+@cindex Irix libraries\n+\n+@noindent\n+The GCC support libraries coming with the Irix compiler have moved to\n+their canonical place with respect to the general Irix ABI related\n+conventions. Running applications built with the default shared GNAT\n+run-time now requires the LD_LIBRARY_PATH environment variable to\n+include this location. A possible way to achieve this is to issue the\n+following command line on a bash prompt:\n+\n+@smallexample\n+@group\n+$  LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`dirname \\`gcc --print-file-name=libgcc_s.so\\``\n+@end group\n+@end smallexample\n+\n @c *******************************\n @node Example of Binder Output File\n @appendix Example of Binder Output File"}, {"sha": "3d8b83e0634837b23794d4f2d51c590aa941ef76", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=da50876659b92539a199e1c1771c9ae107892894", "patch": "@@ -159,6 +159,8 @@ gcc -c          ^ GNAT COMPILE\n -gnatwV         ^ /WARNINGS=NOVARIABLES_UNINITIALIZED\n -gnatww         ^ /WARNINGS=LOWBOUND_ASSUMED\n -gnatwW         ^ /WARNINGS=NOLOWBOUND_ASSUMED\n+-gnatw.w        ^ /WARNINGS=WARNINGS_OFF_PRAGMAS\n+-gnatw.W        ^ /WARNINGS=NOWARNINGS_OFF_PRAGMAS\n -gnatwx         ^ /WARNINGS=IMPORT_EXPORT_PRAGMAS\n -gnatwX         ^ /WARNINGS=NOIMPORT_EXPORT_PRAGMAS\n -gnatw.x        ^ /WARNINGS=LOCAL_RAISE_HANDLING"}, {"sha": "f64188e9b73eeb5b58088592f5c16ffc26f7a573", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da50876659b92539a199e1c1771c9ae107892894/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=da50876659b92539a199e1c1771c9ae107892894", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -362,7 +362,7 @@ begin\n \n    Write_Switch_Char (\"wxx\");\n    Write_Line (\"Enable selected warning modes, xx = list of parameters:\");\n-   Write_Line (\"        a    turn on all optional warnings (except d h l .o)\");\n+   Write_Line (\"        a    turn on all optional warnings (except dhl.o.w)\");\n    Write_Line (\"        A    turn off all optional warnings\");\n    Write_Line (\"        .a*  turn on warnings for failing assertions\");\n    Write_Line (\"        .A   turn off warnings for failing assertions\");\n@@ -428,6 +428,8 @@ begin\n    Write_Line (\"        w*   turn on warnings for wrong low bound assumption\");\n    Write_Line (\"        W    turn off warnings for wrong low bound \" &\n                                                   \"assumption\");\n+   Write_Line (\"        .w   turn on warnings on pragma Warnings Off\");\n+   Write_Line (\"        .w*  turn off warnings on pragma Warnings Off\");\n    Write_Line (\"        x*   turn on warnings for export/import\");\n    Write_Line (\"        X    turn off warnings for export/import\");\n    Write_Line (\"        .x   turn on warnings for non-local exceptions\");"}]}