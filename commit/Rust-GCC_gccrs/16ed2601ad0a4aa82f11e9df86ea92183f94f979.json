{"sha": "16ed2601ad0a4aa82f11e9df86ea92183f94f979", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZlZDI2MDFhZDBhNGFhODJmMTFlOWRmODZlYTkyMTgzZjk0Zjk3OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:26:19Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:26:19Z"}, "message": "i386: Emulate MMX pshufb with SSE version\n\nEmulate MMX version of pshufb with SSE version by masking out the bit 3\nof the shuffle control byte.  Only SSE register source operand is allowed.\n\n\tPR target/89021\n\t* config/i386/sse.md (ssse3_pshufbv8qi3): Changed to\n\tdefine_insn_and_split.  Also allow TARGET_MMX_WITH_SSE.  Add\n\tSSE emulation.\n\nFrom-SVN: r271245", "tree": {"sha": "95313e1174ccadadd8a79cd8cbe7807db53b0b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95313e1174ccadadd8a79cd8cbe7807db53b0b0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16ed2601ad0a4aa82f11e9df86ea92183f94f979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ed2601ad0a4aa82f11e9df86ea92183f94f979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ed2601ad0a4aa82f11e9df86ea92183f94f979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ed2601ad0a4aa82f11e9df86ea92183f94f979/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c5a35333444ae069556b59338b25550a84b5055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c5a35333444ae069556b59338b25550a84b5055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c5a35333444ae069556b59338b25550a84b5055"}], "stats": {"total": 53, "additions": 44, "deletions": 9}, "files": [{"sha": "8f702f83ca627ef2c44f39570cb926b74bad2569", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ed2601ad0a4aa82f11e9df86ea92183f94f979/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ed2601ad0a4aa82f11e9df86ea92183f94f979/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16ed2601ad0a4aa82f11e9df86ea92183f94f979", "patch": "@@ -1,3 +1,10 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/sse.md (ssse3_pshufbv8qi3): Changed to\n+\tdefine_insn_and_split.  Also allow TARGET_MMX_WITH_SSE.  Add\n+\tSSE emulation.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "9c2ca68e27ba02e9ec764ad15fbc9ca4f1edbf38", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16ed2601ad0a4aa82f11e9df86ea92183f94f979/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16ed2601ad0a4aa82f11e9df86ea92183f94f979/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=16ed2601ad0a4aa82f11e9df86ea92183f94f979", "patch": "@@ -16175,17 +16175,45 @@\n    (set_attr \"btver2_decode\" \"vector\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"ssse3_pshufbv8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n-\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")]\n-\t\t     UNSPEC_PSHUFB))]\n-  \"TARGET_SSSE3\"\n-  \"pshufb\\t{%2, %0|%0, %2}\";\n-  [(set_attr \"type\" \"sselog1\")\n+(define_insn_and_split \"ssse3_pshufbv8qi3\"\n+  [(set (match_operand:V8QI 0 \"register_operand\" \"=y,x,Yv\")\n+\t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"0,0,Yv\")\n+\t\t      (match_operand:V8QI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")]\n+\t\t     UNSPEC_PSHUFB))\n+   (clobber (match_scratch:V4SI 3 \"=X,x,Yv\"))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && TARGET_SSSE3\"\n+  \"@\n+   pshufb\\t{%2, %0|%0, %2}\n+   #\n+   #\"\n+  \"TARGET_MMX_WITH_SSE && reload_completed\"\n+  [(set (match_dup 3) (match_dup 5))\n+   (set (match_dup 3)\n+\t(and:V4SI (match_dup 3) (match_dup 2)))\n+   (set (match_dup 0)\n+\t(unspec:V16QI [(match_dup 1) (match_dup 4)] UNSPEC_PSHUFB))]\n+{\n+  /* Emulate MMX version of pshufb with SSE version by masking out the\n+     bit 3 of the shuffle control byte.  */\n+  operands[0] = lowpart_subreg (V16QImode, operands[0],\n+\t\t\t\tGET_MODE (operands[0]));\n+  operands[1] = lowpart_subreg (V16QImode, operands[1],\n+\t\t\t\tGET_MODE (operands[1]));\n+  operands[2] = lowpart_subreg (V4SImode, operands[2],\n+\t\t\t\tGET_MODE (operands[2]));\n+  operands[4] = lowpart_subreg (V16QImode, operands[3],\n+\t\t\t\tGET_MODE (operands[3]));\n+  rtvec par = gen_rtvec (4, GEN_INT (0xf7f7f7f7),\n+\t\t\t GEN_INT (0xf7f7f7f7),\n+\t\t\t GEN_INT (0xf7f7f7f7),\n+\t\t\t GEN_INT (0xf7f7f7f7));\n+  rtx vec_const = gen_rtx_CONST_VECTOR (V4SImode, par);\n+  operands[5] = force_const_mem (V4SImode, vec_const);\n+}\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n \n (define_insn \"<ssse3_avx2>_psign<mode>3\"\n   [(set (match_operand:VI124_AVX2 0 \"register_operand\" \"=x,x\")"}]}