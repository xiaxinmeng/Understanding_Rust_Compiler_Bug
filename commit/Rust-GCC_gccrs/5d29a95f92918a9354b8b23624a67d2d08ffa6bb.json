{"sha": "5d29a95f92918a9354b8b23624a67d2d08ffa6bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyOWE5NWY5MjkxOGE5MzU0YjhiMjM2MjRhNjdkMmQwOGZmYTZiYg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-10-21T16:04:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-10-21T16:04:57Z"}, "message": "mn10300.c (expand_epilogue): Rework to handle register restores in \"ret\" and \"retf\" instructions correctly.\n\n        * mn10300.c (expand_epilogue): Rework to handle register restores\n        in \"ret\" and \"retf\" instructions correctly.\n\nFrom-SVN: r16132", "tree": {"sha": "c1ab6b7233fd0f7a9cd9724226f10e227f1c0856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1ab6b7233fd0f7a9cd9724226f10e227f1c0856"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d29a95f92918a9354b8b23624a67d2d08ffa6bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d29a95f92918a9354b8b23624a67d2d08ffa6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d29a95f92918a9354b8b23624a67d2d08ffa6bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d29a95f92918a9354b8b23624a67d2d08ffa6bb/comments", "author": null, "committer": null, "parents": [{"sha": "3bf1b08254ade026581bee54226b2f42d7ec3482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf1b08254ade026581bee54226b2f42d7ec3482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf1b08254ade026581bee54226b2f42d7ec3482"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "c349ff9dbdfe94f4af9283fb74eccb64cd7689cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d29a95f92918a9354b8b23624a67d2d08ffa6bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d29a95f92918a9354b8b23624a67d2d08ffa6bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d29a95f92918a9354b8b23624a67d2d08ffa6bb", "patch": "@@ -1,3 +1,8 @@\n+Tue Oct 21 10:06:40 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* mn10300.c (expand_epilogue): Rework to handle register restores\n+\tin \"ret\" and \"retf\" instructions correctly.\n+\n Mon Oct 20 16:47:08 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* expmed.c (extract_bit_field): Don't make flag_force_mem disable"}, {"sha": "7706061aa83c5b97806555f33bc9b47b74c2120c", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d29a95f92918a9354b8b23624a67d2d08ffa6bb/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d29a95f92918a9354b8b23624a67d2d08ffa6bb/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=5d29a95f92918a9354b8b23624a67d2d08ffa6bb", "patch": "@@ -535,15 +535,29 @@ expand_epilogue ()\n   size = get_frame_size () + current_function_outgoing_args_size;\n   size += (current_function_outgoing_args_size ? 4 : 0);\n \n-  /* Cut back the stack.  */\n+  /* Maybe cut back the stack, except for the register save area.\n+\n+     If the frame pointer exists, then use the frame pointer to\n+     cut back the stack.\n+\n+     If the stack size + register save area is more than 255 bytes,\n+     then the stack must be cut back here since the size + register\n+     save size is too big for a ret/retf instruction. \n+\n+     Else leave it alone, it will be cut back as part of the\n+     ret/retf instruction, or there wasn't any stack to begin with.\n+\n+     Under no circumstanes should the register save area be\n+     deallocated here, that would leave a window where an interrupt\n+     could occur and trash the register save area.  */\n   if (frame_pointer_needed)\n     {\n       emit_move_insn (stack_pointer_rtx, frame_pointer_rtx);\n       size = 0;\n     }\n   else if ((regs_ever_live[2] || regs_ever_live[3]\n \t    || regs_ever_live[6] || regs_ever_live[7])\n-\t   && size > 255)\n+\t   && size + 16 > 255)\n     {\n       emit_insn (gen_addsi3 (stack_pointer_rtx,\n \t\t\t     stack_pointer_rtx,\n@@ -559,7 +573,7 @@ expand_epilogue ()\n   if (regs_ever_live[2] || regs_ever_live[3]\n       || regs_ever_live[6] || regs_ever_live[7]\n       || frame_pointer_needed)\n-    emit_jump_insn (gen_return_internal_regs (GEN_INT (size)));\n+    emit_jump_insn (gen_return_internal_regs (GEN_INT (size + 16)));\n   else\n     {\n       if (size)"}]}