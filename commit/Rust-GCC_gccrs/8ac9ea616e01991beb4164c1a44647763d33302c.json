{"sha": "8ac9ea616e01991beb4164c1a44647763d33302c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFjOWVhNjE2ZTAxOTkxYmViNDE2NGMxYTQ0NjQ3NzYzZDMzMzAyYw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-11-08T19:04:43Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-11-08T19:04:43Z"}, "message": "decl.c (shadow_warning): New function.\n\n\t* cp/decl.c (shadow_warning): New function.\n\t(pushdecl): Improve -Wshadow warnings.  Don't give both a warning\n\tand an error when a block scope decl shadows a parameter.\n\n\t* g++.dg/warn/Wshadow-1.C: New tests.\n\t* g++.old-deja/g++.mike/for3.C: Update.\n\nFrom-SVN: r46852", "tree": {"sha": "76fd6ca76e5f6ba17b56e70c9283886caa7a0d95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76fd6ca76e5f6ba17b56e70c9283886caa7a0d95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ac9ea616e01991beb4164c1a44647763d33302c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac9ea616e01991beb4164c1a44647763d33302c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ac9ea616e01991beb4164c1a44647763d33302c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ac9ea616e01991beb4164c1a44647763d33302c/comments", "author": null, "committer": null, "parents": [{"sha": "86724f7f86713c04e2e2be9e866032b12ff64a61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86724f7f86713c04e2e2be9e866032b12ff64a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86724f7f86713c04e2e2be9e866032b12ff64a61"}], "stats": {"total": 134, "additions": 104, "deletions": 30}, "files": [{"sha": "b410b511bf047d6904717193163bea047afe8dfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ac9ea616e01991beb4164c1a44647763d33302c", "patch": "@@ -1,3 +1,9 @@\n+2001-11-08  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp/decl.c (shadow_warning): New function.\n+\t(pushdecl): Improve -Wshadow warnings.  Don't give both a warning\n+\tand an error when a block scope decl shadows a parameter.\n+\n 2001-11-08  Richard Henderson  <rth@redhat.com>\n \n \t* config/fp-bit.h (usi_to_float): Define for US_SOFTWARE_GOFAST"}, {"sha": "a210a7b830fcc4ec3ebea48fa2703b87bb2f54a6", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 48, "deletions": 27, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8ac9ea616e01991beb4164c1a44647763d33302c", "patch": "@@ -147,6 +147,7 @@ static tree push_cp_library_fn PARAMS ((enum tree_code, tree));\n static tree build_cp_library_fn PARAMS ((tree, enum tree_code, tree));\n static void store_parm_decls PARAMS ((tree));\n static int cp_missing_noreturn_ok_p PARAMS ((tree));\n+static void shadow_warning PARAMS ((const char *, tree, tree));\n \n #if defined (DEBUG_CP_BINDING_LEVELS)\n static void indent PARAMS ((void));\n@@ -3788,6 +3789,20 @@ duplicate_decls (newdecl, olddecl)\n   return 1;\n }\n \n+/* Output a -Wshadow warning MSGID, if non-NULL, and give the location\n+   of the previous declaration.  */\n+static void\n+shadow_warning (msgid, name, decl)\n+     const char *msgid;\n+     tree name, decl;\n+{\n+  warning (\"declaration of `%s' shadows %s\", IDENTIFIER_POINTER (name), msgid);\n+  warning_with_file_and_line (DECL_SOURCE_FILE (decl),\n+\t\t\t      DECL_SOURCE_LINE (decl),\n+\t\t\t      \"shadowed declaration is here\");\n+}\n+\n+\n /* Record a decl-node X as belonging to the current lexical scope.\n    Check for errors (such as an incompatible declaration for the same\n    name already seen in the same scope).\n@@ -4173,47 +4188,53 @@ pushdecl (x)\n \t  if (oldlocal != NULL_TREE && !DECL_EXTERNAL (x)\n \t      /* Inline decls shadow nothing.  */\n \t      && !DECL_FROM_INLINE (x)\n-\t      && TREE_CODE (oldlocal) == PARM_DECL\n-\t      /* Don't complain if it's from an enclosing function.  */\n-\t      && DECL_CONTEXT (oldlocal) == current_function_decl\n-\t      && TREE_CODE (x) != PARM_DECL)\n+\t      && TREE_CODE (oldlocal) == PARM_DECL)\n \t    {\n-\t      /* Go to where the parms should be and see if we\n-\t\t find them there.  */\n-\t      struct binding_level *b = current_binding_level->level_chain;\n+\t      bool err = false;\n \n-\t      if (cleanup_label)\n-\t\tb = b->level_chain;\n+\t      /* Don't complain if it's from an enclosing function.  */\n+\t      if (DECL_CONTEXT (oldlocal) == current_function_decl\n+\t\t  && TREE_CODE (x) != PARM_DECL)\n+\t\t{\n+\t\t  /* Go to where the parms should be and see if we find\n+\t\t     them there.  */\n+\t\t  struct binding_level *b = current_binding_level->level_chain;\n \n-\t      /* ARM $8.3 */\n-\t      if (b->parm_flag == 1)\n-\t\tcp_error (\"declaration of `%#D' shadows a parameter\", name);\n+\t\t  if (cleanup_label)\n+\t\t    b = b->level_chain;\n+\n+\t\t  /* ARM $8.3 */\n+\t\t  if (b->parm_flag == 1)\n+\t\t    {\n+\t\t      cp_error (\"declaration of `%#D' shadows a parameter\",\n+\t\t\t\tname);\n+\t\t      err = true;\n+\t\t    }\n+\t\t}\n+\n+\t      if (warn_shadow && !err)\n+\t\tshadow_warning (\"a parameter\", name, oldlocal);\n \t    }\n \n \t  /* Maybe warn if shadowing something else.  */\n-\t  if (warn_shadow && !DECL_EXTERNAL (x)\n-\t      /* Inline decls shadow nothing.  */\n-\t      && !DECL_FROM_INLINE (x)\n+\t  else if (warn_shadow && !DECL_EXTERNAL (x)\n \t      /* No shadow warnings for internally generated vars.  */\n \t      && ! DECL_ARTIFICIAL (x)\n \t      /* No shadow warnings for vars made for inlining.  */\n \t      && ! DECL_FROM_INLINE (x))\n \t    {\n-\t      if (oldlocal != NULL_TREE && TREE_CODE (oldlocal) == PARM_DECL)\n-\t\twarning (\"declaration of `%s' shadows a parameter\",\n-\t\t\tIDENTIFIER_POINTER (name));\n-\t      else if (IDENTIFIER_CLASS_VALUE (name) != NULL_TREE\n+\t      if (IDENTIFIER_CLASS_VALUE (name) != NULL_TREE\n \t\t       && current_class_ptr\n \t\t       && !TREE_STATIC (name))\n-\t\twarning (\"declaration of `%s' shadows a member of `this'\",\n-\t\t\tIDENTIFIER_POINTER (name));\n-\t      else if (oldlocal != NULL_TREE)\n-\t\twarning (\"declaration of `%s' shadows previous local\",\n-\t\t\tIDENTIFIER_POINTER (name));\n-\t      else if (oldglobal != NULL_TREE)\n+\t\tcp_warning (\"declaration of `%s' shadows a member of `this'\",\n+\t\t\t    IDENTIFIER_POINTER (name));\n+\t      else if (oldlocal != NULL_TREE\n+\t\t       && TREE_CODE (oldlocal) == VAR_DECL)\n+\t\tshadow_warning (\"a previous local\", name, oldlocal);\n+\t      else if (oldglobal != NULL_TREE\n+\t\t       && TREE_CODE (oldglobal) == VAR_DECL)\n \t\t/* XXX shadow warnings in outer-more namespaces */\n-\t\twarning (\"declaration of `%s' shadows global declaration\",\n-\t\t\tIDENTIFIER_POINTER (name));\n+\t\tshadow_warning (\"a global declaration\", name, oldglobal);\n \t    }\n \t}\n "}, {"sha": "cd31ce70834d51612a3c5e5651f8c9840b8966b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ac9ea616e01991beb4164c1a44647763d33302c", "patch": "@@ -1,3 +1,8 @@\n+2001-11-08  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* g++.dg/warn/Wshadow-1.C: New tests.\n+\t* g++.old-deja/g++.mike/for3.C: Update.\n+\n 2001-11-06  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/c90-array-lval-1.c, gcc.dg/c90-array-lval-2.c,"}, {"sha": "b7d95e5b7d75c1345b53d3c4b3a30f2044de59ad", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-1.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-1.C?ref=8ac9ea616e01991beb4164c1a44647763d33302c", "patch": "@@ -0,0 +1,42 @@\n+/* Copyright (C) 2001 Free Software Foundation, Inc.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options -Wshadow } */\n+\n+/* Source: Neil Booth, 3 Nov 2001, and PR 16, 713.  -Wshadow was\n+   giving a bunch of warnings we didn't want, and wasn't giving the\n+   location of the shadowed variable.  */\n+\n+struct status\t\t\t// { dg-bogus \"shadowed declaration\" }\n+{\n+  int member;\n+  void foo2 ();\n+\n+  inline static int foo3 (int member) // { dg-bogus \"shadows\" }\n+  {\n+    return member;\n+  }\n+};\n+\n+int decl1;\t\t\t// { dg-warning \"shadowed declaration\" }\n+int decl2;\t\t\t// { dg-warning \"shadowed declaration\" }\n+void foo (struct status &status,// { dg-bogus \"shadows a global decl\" }\n+\t  double decl1)\n+{\t\t\t\t// { dg-warning \"shadows a global decl\" }\n+}\n+\n+void foo1 (int d)\n+{\n+  double d;\t\t\t// { dg-error \"shadows a parameter\" }\n+}\n+\n+// { dg-error \"In member function\" \"ignored\" { target *-*-* } 0 }\n+void status::foo2 ()\n+{\n+  int member;\t\t\t// { dg-warning \"shadows a member\" }\n+  int decl2;\t\t\t// { dg-warning \"shadows a global decl\" }\n+  int local;\t\t\t// { dg-warning \"shadowed declaration\" }\n+  {\n+    int local;\t\t\t// { dg-warning \"shadows a previous local\" }\n+  }\n+}"}, {"sha": "7e88d7e5baeb2ae2d9b53c2d3d946ce2e283e451", "filename": "gcc/testsuite/g++.old-deja/g++.mike/for3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Ffor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ac9ea616e01991beb4164c1a44647763d33302c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Ffor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Ffor3.C?ref=8ac9ea616e01991beb4164c1a44647763d33302c", "patch": "@@ -1,9 +1,9 @@\n // Special g++ Options: -Wshadow\n \n int\n-main(int i) {\n-  for(int i=1; i < 3; i++);\t// WARNING - shadows parm\n-  for(int i=1; i < 3; i++);\t// WARNING - shadows parm\n+main(int i) {\t\t\t// WARNING - shadowed decl\n+  for(int i=1; i < 3; i++);\t// WARNING - declaration of\n+  for(int i=1; i < 3; i++);\t// WARNING - declaration of\n   for(int j=1; j < 3; j++);\n   for(int j=1; j < 3; j++);\n }"}]}