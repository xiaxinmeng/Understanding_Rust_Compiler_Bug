{"sha": "5acd0beddc20481a35191fd439ecdea6617b8c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFjZDBiZWRkYzIwNDgxYTM1MTkxZmQ0MzllY2RlYTY2MTdiOGM5Yg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-20T13:16:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-20T13:16:44Z"}, "message": "* call.c, typeck.c: Fix comment typos.\n\nFrom-SVN: r89332", "tree": {"sha": "fd0b5a31baee27d7b919810270d098b493985dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd0b5a31baee27d7b919810270d098b493985dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5acd0beddc20481a35191fd439ecdea6617b8c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acd0beddc20481a35191fd439ecdea6617b8c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5acd0beddc20481a35191fd439ecdea6617b8c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5acd0beddc20481a35191fd439ecdea6617b8c9b/comments", "author": null, "committer": null, "parents": [{"sha": "34bc6352dcfec137ff217c125f2569b3f00bf345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bc6352dcfec137ff217c125f2569b3f00bf345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34bc6352dcfec137ff217c125f2569b3f00bf345"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "088dac2303242ea22003c8eac26e981994be6928", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acd0beddc20481a35191fd439ecdea6617b8c9b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acd0beddc20481a35191fd439ecdea6617b8c9b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5acd0beddc20481a35191fd439ecdea6617b8c9b", "patch": "@@ -1,3 +1,7 @@\n+2004-10-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* call.c, typeck.c: Fix comment typos.\n+\n 2004-10-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* parser.c (cp_token_position): New typedef. Define VEC thereof."}, {"sha": "46b270e3ff3edfaddefb54176492bd1f2c1966d4", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acd0beddc20481a35191fd439ecdea6617b8c9b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acd0beddc20481a35191fd439ecdea6617b8c9b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5acd0beddc20481a35191fd439ecdea6617b8c9b", "patch": "@@ -6303,7 +6303,7 @@ perform_implicit_conversion (tree type, tree expr)\n    permitted.  If the conversion is valid, the converted expression is\n    returned.  Otherwise, NULL_TREE is returned, except in the case\n    that TYPE is a class type; in that case, an error is issued.  If\n-   C_CAST_P is ttrue, then this direction initialization is taking\n+   C_CAST_P is true, then this direction initialization is taking\n    place as part of a static_cast being attempted as part of a C-style\n    cast.  */\n "}, {"sha": "763e4084b7ee374f05e198731d16066473365704", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5acd0beddc20481a35191fd439ecdea6617b8c9b/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5acd0beddc20481a35191fd439ecdea6617b8c9b/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=5acd0beddc20481a35191fd439ecdea6617b8c9b", "patch": "@@ -4862,7 +4862,7 @@ build_reinterpret_cast_1 (tree type, tree expr, bool c_cast_p,\n \t  || VOID_TYPE_P (TREE_TYPE (type))))\n     return convert_member_func_to_ptr (type, expr);\n \n-  /* If the cast is not to a reference type, the lvalue-to-rvale,\n+  /* If the cast is not to a reference type, the lvalue-to-rvalue,\n      array-to-pointer, and function-to-pointer conversions are\n      performed.  */\n   expr = decay_conversion (expr);"}]}