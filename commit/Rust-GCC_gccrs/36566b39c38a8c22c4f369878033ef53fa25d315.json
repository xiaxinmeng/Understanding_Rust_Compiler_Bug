{"sha": "36566b39c38a8c22c4f369878033ef53fa25d315", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY1NjZiMzljMzhhOGMyMmM0ZjM2OTg3ODAzM2VmNTNmYTI1ZDMxNQ==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2015-01-15T13:28:42Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2015-01-15T13:28:42Z"}, "message": "dojump.h: New header file.\n\n2015-10-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\t* dojump.h: New header file.\n\t* explow.h: Likewise.\n\t* expr.h: Remove includes.\n\tMove expmed.c prototypes to expmed.h.\n\tMove dojump.c prototypes to dojump.h.\n\tMove alias.c prototypes to alias.h.\n\tMove explow.c prototypes to explow.h.\n\tMove calls.c prototypes to calls.h.\n\tMove emit-rtl.c prototypes to emit-rtl.h.\n\tMove varasm.c prototypes to varasm.h.\n\tMove stmt.c prototypes to stmt.h.\n\t(saved_pending_stack_adjust): Move to dojump.h.\n\t(adjust_address): Move to explow.h.\n\t(adjust_address_nv): Move to emit-rtl.h.\n\t(adjust_bitfield_address): Likewise.\n\t(adjust_bitfield_address_size): Likewise.\n\t(adjust_bitfield_address_nv): Likewise.\n\t(adjust_automodify_address_nv): Likewise.\n\t* explow.c (expr_size): Move to expr.c.\n\t(int_expr_size): Likewise.\n\t(tree_expr_size): Likewise.\n\tInclude calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h statistics.h stmt.h varasm.h.\n\t* genemit.c (main): Generate includes statistics.h, real.h, fixed-value.h,\n\tinsn-config.h, expmed.h, dojump.h, explow.h, emit-rtl.h, stmt.h.\n\t* genopinit.c (main): Generate includes hashtab.h, hard-reg-set.h, function.h,\n\tstatistics.h, real.h, fixed-value.h, expmed.h, dojump.h, explow.h, emit-rtl.h,\n\tstmt.h.\n\t* genoutput.c (main): Generate includes hashtab.h, statistics.h, real.h,\n\tfixed-value.h, expmed.h, dojump.h, explow.h, emit-rtl.h, stmt.h.\n\t* genemit.c (open_base_files): Generate includes flags.h, statistics.h, real.h,\n\tfixed-value.h, tree.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h,\n\tstmt.h.\n\t* config/tilepro/gen-mul-tables.cc: Generate includes hashtab.h, hash-set.h, vec.h,\n\tmachmode.h, tm.h, hard-reg-set.h, input.h, function.h, rtl.h, flags.h, statistics.h,\n\tdouble-int.h, real.h, fixed-value.h, alias.h, wide-int.h, inchash.h, tree.h,\n\tinsn-config.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h, stmt.h.\n\t* config/tilegx/mul-tables.c: Include alias.h calls.h dojump.h\n\tdouble-int.h emit-rtl.h explow.h expmed.h fixed-value.h flags.h\n\tfunction.h hard-reg-set.h hash-set.h hashtab.h inchash.h input.h\n\tinsn-config.h machmode.h real.h rtl.h statistics.h stmt.h symtab.h\n\ttm.h tree.h varasm.h vec.h wide-int.h.\n\t* rtlhooks.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h flags.h function.h hard-reg-set.h\n\thash-set.h hashtab.h inchash.h input.h insn-config.h machmode.h\n\treal.h statistics.h stmt.h tree.h varasm.h vec.h wide-int.h.\n\t* cfgloopanal.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h flags.h inchash.h insn-config.h\n\treal.h statistics.h stmt.h tree.h varasm.h wide-int.h.\n\t* loop-iv.c: Likewise.\n\t* lra-assigns.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h flags.h inchash.h real.h\n\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n\t* lra-constraints.c: Likewise.\n\t* lra-eliminations.c: Likewise.\n\t* lra-lives.c: Likewise.\n\t* lra-remat.c: Likewise.\n\t* bt-load.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h inchash.h insn-config.h real.h\n\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n\t* hw-doloop.c: Likewise.\n\t* ira-color.c: Likewise.\n\t* ira-emit.c: Likewise.\n\t* loop-doloop.c: Likewise.\n\t* loop-invariant.c: Likewise.\n\t* reload.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h inchash.h real.h rtl.h\n\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n\t* caller-save.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h inchash.h real.h statistics.h\n\tstmt.h tree.h varasm.h wide-int.h.\n\t* combine-stack-adj.c: Likewise.\n\t* cse.c: Likewise.\n\t* ddg.c: Likewise.\n\t* ifcvt.c: Likewise.\n\t* ira-costs.c: Likewise.\n\t* jump.c: Likewise.\n\t* lra-coalesce.c: Likewise.\n\t* lra-spills.c: Likewise.\n\t* profile.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h insn-config.h real.h statistics.h\n\tstmt.h varasm.h wide-int.h.\n\t* lra.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h real.h statistics.h stmt.h\n\tvarasm.h.\n\t* config/sh/sh_treg_combine.cc: Include alias.h calls.h dojump.h\n\tdouble-int.h explow.h expmed.h fixed-value.h flags.h real.h\n\tstatistics.h stmt.h varasm.h wide-int.h.\n\t* reorg.c: Include alias.h calls.h dojump.h double-int.h explow.h\n\texpmed.h fixed-value.h inchash.h real.h statistics.h stmt.h tree.h\n\tvarasm.h wide-int.h.\n\t* reload1.c: Include alias.h calls.h dojump.h double-int.h explow.h\n\texpmed.h fixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n\t* config/tilegx/tilegx.c: Include alias.h dojump.h double-int.h\n\temit-rtl.h explow.h expmed.h fixed-value.h flags.h real.h\n\tstatistics.h stmt.h.\n\t* config/tilepro/tilepro.c: Likewise.\n\t* config/mmix/mmix.c: Include alias.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h real.h statistics.h stmt.h.\n\t* config/pdp11/pdp11.c: Likewise.\n\t* config/xtensa/xtensa.c: Likewise.\n\t* config/lm32/lm32.c: Include alias.h dojump.h double-int.h emit-rtl.h\n\texplow.h expmed.h fixed-value.h real.h statistics.h stmt.h\n\tvarasm.h.\n\t* tree-chkp.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n\tinsn-config.h real.h rtl.h statistics.h stmt.h tm.h.\n\t* cilk-common.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n\tinsn-config.h real.h rtl.h statistics.h stmt.h tm.h varasm.h.\n\t* rtl-chkp.c: Likewise.\n\t* tree-chkp-opt.c: Likewise.\n\t* config/arm/arm-builtins.c: Include calls.h dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n\tinsn-config.h real.h statistics.h stmt.h varasm.h.\n\t* ipa-icf.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h\n\tstatistics.h stmt.h.\n\t* tree-vect-data-refs.c: Likewise.\n\t* graphite-sese-to-poly.c: Include calls.h dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n\trtl.h statistics.h stmt.h varasm.h.\n\t* internal-fn.c: Likewise.\n\t* ipa-icf-gimple.c: Likewise.\n\t* lto-section-out.c: Likewise.\n\t* tree-data-ref.c: Likewise.\n\t* tree-nested.c: Likewise.\n\t* tree-outof-ssa.c: Likewise.\n\t* tree-predcom.c: Likewise.\n\t* tree-pretty-print.c: Likewise.\n\t* tree-scalar-evolution.c: Likewise.\n\t* tree-ssa-strlen.c: Likewise.\n\t* tree-vect-loop.c: Likewise.\n\t* tree-vect-patterns.c: Likewise.\n\t* tree-vect-slp.c: Likewise.\n\t* tree-vect-stmts.c: Likewise.\n\t* tsan.c: Likewise.\n\t* targhooks.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h hashtab.h insn-config.h real.h statistics.h\n\tstmt.h.\n\t* config/sh/sh-mem.cc: Include calls.h dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n\tstatistics.h stmt.h varasm.h.\n\t* loop-unroll.c: Likewise.\n\t* ubsan.c: Likewise.\n\t* tree-ssa-loop-prefetch.c: Include calls.h dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h flags.h hashtab.h real.h rtl.h statistics.h\n\tstmt.h varasm.h.\n\t* dse.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h function.h hashtab.h statistics.h stmt.h varasm.h.\n\t* tree-switch-conversion.c: Include calls.h dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h hashtab.h insn-config.h real.h rtl.h\n\tstatistics.h stmt.h.\n\t* generic-match-head.c: Include calls.h dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h hashtab.h insn-config.h real.h rtl.h\n\tstatistics.h stmt.h varasm.h.\n\t* gimple-match-head.c: Likewise.\n\t* lto-cgraph.c: Likewise.\n\t* lto-section-in.c: Likewise.\n\t* lto-streamer-in.c: Likewise.\n\t* lto-streamer-out.c: Likewise.\n\t* tree-affine.c: Likewise.\n\t* tree-cfg.c: Likewise.\n\t* tree-cfgcleanup.c: Likewise.\n\t* tree-if-conv.c: Likewise.\n\t* tree-into-ssa.c: Likewise.\n\t* tree-ssa-alias.c: Likewise.\n\t* tree-ssa-copyrename.c: Likewise.\n\t* tree-ssa-dse.c: Likewise.\n\t* tree-ssa-forwprop.c: Likewise.\n\t* tree-ssa-live.c: Likewise.\n\t* tree-ssa-math-opts.c: Likewise.\n\t* tree-ssa-pre.c: Likewise.\n\t* tree-ssa-sccvn.c: Likewise.\n\t* tree-tailcall.c: Likewise.\n\t* tree-vect-generic.c: Likewise.\n\t* tree-sra.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h insn-config.h real.h rtl.h stmt.h varasm.h.\n\t* stor-layout.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h insn-config.h real.h statistics.h stmt.h.\n\t* varasm.c: Likewise.\n\t* coverage.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h insn-config.h real.h statistics.h stmt.h\n\tvarasm.h.\n\t* init-regs.c: Likewise.\n\t* ira.c: Likewise.\n\t* omp-low.c: Likewise.\n\t* stack-ptr-mod.c: Likewise.\n\t* tree-ssa-reassoc.c: Likewise.\n\t* tree-complex.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h insn-config.h rtl.h statistics.h stmt.h\n\tvarasm.h.\n\t* dwarf2cfi.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h insn-config.h statistics.h stmt.h varasm.h.\n\t* shrink-wrap.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h rtl.h statistics.h stmt.h.\n\t* recog.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h rtl.h statistics.h stmt.h varasm.h.\n\t* tree-ssa-phiopt.c: Likewise.\n\t* config/darwin.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h statistics.h stmt.h.\n\t* config/fr30/fr30.c: Likewise.\n\t* config/frv/frv.c: Likewise.\n\t* expr.c: Likewise.\n\t* final.c: Likewise.\n\t* optabs.c: Likewise.\n\t* passes.c: Likewise.\n\t* simplify-rtx.c: Likewise.\n\t* stmt.c: Likewise.\n\t* toplev.c: Likewise.\n\t* var-tracking.c: Likewise.\n\t* gcse.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h statistics.h stmt.h varasm.h.\n\t* lower-subreg.c: Likewise.\n\t* postreload-gcse.c: Likewise.\n\t* ree.c: Likewise.\n\t* reginfo.c: Likewise.\n\t* store-motion.c: Likewise.\n\t* combine.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h stmt.h varasm.h.\n\t* emit-rtl.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h statistics.h stmt.h.\n\t* dojump.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h statistics.h stmt.h varasm.h.\n\t* except.c: Likewise.\n\t* explow.c: Likewise.\n\t* tree-dfa.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h insn-config.h real.h rtl.h statistics.h stmt.h\n\tvarasm.h.\n\t* gimple-fold.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h insn-config.h real.h rtl.h statistics.h varasm.h.\n\t* tree-ssa-structalias.c: Likewise.\n\t* cfgexpand.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h insn-config.h real.h statistics.h.\n\t* calls.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h insn-config.h real.h statistics.h stmt.h.\n\t* bb-reorder.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h insn-config.h real.h statistics.h stmt.h varasm.h.\n\t* cfgbuild.c: Likewise.\n\t* function.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h real.h rtl.h statistics.h stmt.h.\n\t* cfgrtl.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n\t* dbxout.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h real.h statistics.h stmt.h.\n\t* auto-inc-dec.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h real.h statistics.h stmt.h varasm.h.\n\t* cprop.c: Likewise.\n\t* modulo-sched.c: Likewise.\n\t* postreload.c: Likewise.\n\t* ccmp.c: Include calls.h dojump.h emit-rtl.h explow.h fixed-value.h\n\tflags.h function.h hard-reg-set.h hashtab.h insn-config.h real.h\n\tstatistics.h stmt.h varasm.h.\n\t* gimple-ssa-strength-reduction.c: Include calls.h dojump.h emit-rtl.h\n\texplow.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n\trtl.h statistics.h stmt.h varasm.h.\n\t* tree-ssa-loop-ivopts.c: Include calls.h dojump.h emit-rtl.h explow.h\n\tfixed-value.h flags.h hashtab.h real.h rtl.h statistics.h stmt.h\n\tvarasm.h.\n\t* expmed.c: Include calls.h dojump.h emit-rtl.h explow.h fixed-value.h\n\tfunction.h hard-reg-set.h hashtab.h real.h statistics.h stmt.h\n\tvarasm.h.\n\t* target-globals.c: Include calls.h dojump.h emit-rtl.h explow.h\n\tfixed-value.h function.h hashtab.h real.h statistics.h stmt.h\n\tvarasm.h.\n\t* tree-ssa-address.c: Include calls.h dojump.h emit-rtl.h explow.h\n\tfixed-value.h hashtab.h real.h statistics.h stmt.h varasm.h.\n\t* cfgcleanup.c: Include calls.h dojump.h explow.h expmed.h fixed-value.h\n\tfunction.h real.h statistics.h stmt.h varasm.h.\n\t* alias.c: Include calls.h dojump.h explow.h expmed.h fixed-value.h\n\tinsn-config.h real.h statistics.h stmt.h.\n\t* dwarf2out.c: Include calls.h dojump.h explow.h expmed.h fixed-value.h\n\tstatistics.h stmt.h.\n\t* config/nvptx/nvptx.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h hard-reg-set.h insn-config.h real.h\n\tstatistics.h stmt.h varasm.h.\n\t* gimplify.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n\tflags.h hashtab.h insn-config.h real.h rtl.h statistics.h.\n\t* asan.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n\tflags.h hashtab.h insn-config.h real.h rtl.h statistics.h stmt.h.\n\t* ipa-devirt.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h\n\tstatistics.h stmt.h varasm.h.\n\t* ipa-polymorphic-call.c: Likewise.\n\t* config/aarch64/aarch64.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h flags.h hashtab.h insn-config.h real.h statistics.h\n\tstmt.h.\n\t* config/c6x/c6x.c: Likewise.\n\t* config/aarch64/aarch64-builtins.c: Include dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n\tstatistics.h stmt.h varasm.h.\n\t* ipa-prop.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n\thashtab.h insn-config.h real.h rtl.h statistics.h stmt.h varasm.h.\n\t* ipa-split.c: Likewise.\n\t* tree-eh.c: Likewise.\n\t* tree-ssa-dce.c: Likewise.\n\t* tree-ssa-loop-niter.c: Likewise.\n\t* tree-vrp.c: Likewise.\n\t* config/nds32/nds32-cost.c: Include dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h hashtab.h insn-config.h real.h statistics.h\n\tstmt.h.\n\t* config/nds32/nds32-fp-as-gp.c: Likewise.\n\t* config/nds32/nds32-intrinsic.c: Likewise.\n\t* config/nds32/nds32-isr.c: Likewise.\n\t* config/nds32/nds32-md-auxiliary.c: Likewise.\n\t* config/nds32/nds32-memory-manipulation.c: Likewise.\n\t* config/nds32/nds32-pipelines-auxiliary.c: Likewise.\n\t* config/nds32/nds32-predicates.c: Likewise.\n\t* config/nds32/nds32.c: Likewise.\n\t* config/cris/cris.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h statistics.h.\n\t* config/alpha/alpha.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h statistics.h stmt.h.\n\t* config/arm/arm.c: Likewise.\n\t* config/avr/avr.c: Likewise.\n\t* config/bfin/bfin.c: Likewise.\n\t* config/h8300/h8300.c: Likewise.\n\t* config/i386/i386.c: Likewise.\n\t* config/ia64/ia64.c: Likewise.\n\t* config/iq2000/iq2000.c: Likewise.\n\t* config/m32c/m32c.c: Likewise.\n\t* config/m32r/m32r.c: Likewise.\n\t* config/m68k/m68k.c: Likewise.\n\t* config/mcore/mcore.c: Likewise.\n\t* config/mep/mep.c: Likewise.\n\t* config/mips/mips.c: Likewise.\n\t* config/mn10300/mn10300.c: Likewise.\n\t* config/moxie/moxie.c: Likewise.\n\t* config/pa/pa.c: Likewise.\n\t* config/rl78/rl78.c: Likewise.\n\t* config/rx/rx.c: Likewise.\n\t* config/s390/s390.c: Likewise.\n\t* config/sh/sh.c: Likewise.\n\t* config/sparc/sparc.c: Likewise.\n\t* config/spu/spu.c: Likewise.\n\t* config/stormy16/stormy16.c: Likewise.\n\t* config/v850/v850.c: Likewise.\n\t* config/vax/vax.c: Likewise.\n\t* config/cr16/cr16.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h hashtab.h real.h statistics.h stmt.h varasm.h.\n\t* config/msp430/msp430.c: Likewise.\n\t* predict.c: Likewise.\n\t* value-prof.c: Likewise.\n\t* config/epiphany/epiphany.c: Include dojump.h emit-rtl.h explow.h\n\texpmed.h fixed-value.h hashtab.h statistics.h stmt.h.\n\t* config/microblaze/microblaze.c: Likewise.\n\t* config/nios2/nios2.c: Likewise.\n\t* config/rs6000/rs6000.c: Likewise.\n\t* tree.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n\tinsn-config.h real.h rtl.h statistics.h stmt.h.\n\t* cgraph.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n\tinsn-config.h real.h statistics.h stmt.h.\n\t* fold-const.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h insn-config.h real.h statistics.h stmt.h varasm.h.\n\t* tree-inline.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n\t* builtins.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n\treal.h statistics.h stmt.h.\n\t* config/arc/arc.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h statistics.h stmt.h.\n\t* config/visium/visium.c: Include dojump.h emit-rtl.h explow.h expmed.h\n\tstmt.h.\n\njava/\t\n\t* builtins.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n\tfixed-value.h function.h hard-reg-set.h hashtab.h insn-config.h\n\treal.h statistics.h stmt.h varasm.h.\n\nFrom-SVN: r219655", "tree": {"sha": "7496e66b81b1c4ed6ec21d8dae21d1533fce5d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7496e66b81b1c4ed6ec21d8dae21d1533fce5d4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36566b39c38a8c22c4f369878033ef53fa25d315", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36566b39c38a8c22c4f369878033ef53fa25d315", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36566b39c38a8c22c4f369878033ef53fa25d315", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36566b39c38a8c22c4f369878033ef53fa25d315/comments", "author": null, "committer": null, "parents": [{"sha": "645c25f6425651f56d6d6cd09005d32756cb53be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645c25f6425651f56d6d6cd09005d32756cb53be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645c25f6425651f56d6d6cd09005d32756cb53be"}], "stats": {"total": 4811, "additions": 3935, "deletions": 876}, "files": [{"sha": "4a065131c7d3f06538e7dbcc8c4bb75807875b4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 365, "deletions": 0, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -1,3 +1,368 @@\n+2015-10-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* dojump.h: New header file.\n+\t* explow.h: Likewise.\n+\t* expr.h: Remove includes.\n+\tMove expmed.c prototypes to expmed.h.\n+\tMove dojump.c prototypes to dojump.h.\n+\tMove alias.c prototypes to alias.h.\n+\tMove explow.c prototypes to explow.h.\n+\tMove calls.c prototypes to calls.h.\n+\tMove emit-rtl.c prototypes to emit-rtl.h.\n+\tMove varasm.c prototypes to varasm.h.\n+\tMove stmt.c prototypes to stmt.h.\n+\t(saved_pending_stack_adjust): Move to dojump.h.\n+\t(adjust_address): Move to explow.h.\n+\t(adjust_address_nv): Move to emit-rtl.h.\n+\t(adjust_bitfield_address): Likewise.\n+\t(adjust_bitfield_address_size): Likewise.\n+\t(adjust_bitfield_address_nv): Likewise.\n+\t(adjust_automodify_address_nv): Likewise.\n+\t* explow.c (expr_size): Move to expr.c.\n+\t(int_expr_size): Likewise.\n+\t(tree_expr_size): Likewise.\n+\tInclude calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h statistics.h stmt.h varasm.h.\n+\t* genemit.c (main): Generate includes statistics.h, real.h, fixed-value.h,\n+\tinsn-config.h, expmed.h, dojump.h, explow.h, emit-rtl.h, stmt.h.\n+\t* genopinit.c (main): Generate includes hashtab.h, hard-reg-set.h, function.h,\n+\tstatistics.h, real.h, fixed-value.h, expmed.h, dojump.h, explow.h, emit-rtl.h,\n+\tstmt.h.\n+\t* genoutput.c (main): Generate includes hashtab.h, statistics.h, real.h,\n+\tfixed-value.h, expmed.h, dojump.h, explow.h, emit-rtl.h, stmt.h.\n+\t* genemit.c (open_base_files): Generate includes flags.h, statistics.h, real.h,\n+\tfixed-value.h, tree.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h,\n+\tstmt.h.\n+\t* config/tilepro/gen-mul-tables.cc: Generate includes hashtab.h, hash-set.h, vec.h,\n+\tmachmode.h, tm.h, hard-reg-set.h, input.h, function.h, rtl.h, flags.h, statistics.h,\n+\tdouble-int.h, real.h, fixed-value.h, alias.h, wide-int.h, inchash.h, tree.h,\n+\tinsn-config.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h, stmt.h.\n+\t* config/tilegx/mul-tables.c: Include alias.h calls.h dojump.h\n+\tdouble-int.h emit-rtl.h explow.h expmed.h fixed-value.h flags.h\n+\tfunction.h hard-reg-set.h hash-set.h hashtab.h inchash.h input.h\n+\tinsn-config.h machmode.h real.h rtl.h statistics.h stmt.h symtab.h\n+\ttm.h tree.h varasm.h vec.h wide-int.h.\n+\t* rtlhooks.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h flags.h function.h hard-reg-set.h\n+\thash-set.h hashtab.h inchash.h input.h insn-config.h machmode.h\n+\treal.h statistics.h stmt.h tree.h varasm.h vec.h wide-int.h.\n+\t* cfgloopanal.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h flags.h inchash.h insn-config.h\n+\treal.h statistics.h stmt.h tree.h varasm.h wide-int.h.\n+\t* loop-iv.c: Likewise.\n+\t* lra-assigns.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h flags.h inchash.h real.h\n+\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n+\t* lra-constraints.c: Likewise.\n+\t* lra-eliminations.c: Likewise.\n+\t* lra-lives.c: Likewise.\n+\t* lra-remat.c: Likewise.\n+\t* bt-load.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h inchash.h insn-config.h real.h\n+\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n+\t* hw-doloop.c: Likewise.\n+\t* ira-color.c: Likewise.\n+\t* ira-emit.c: Likewise.\n+\t* loop-doloop.c: Likewise.\n+\t* loop-invariant.c: Likewise.\n+\t* reload.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h inchash.h real.h rtl.h\n+\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n+\t* caller-save.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h inchash.h real.h statistics.h\n+\tstmt.h tree.h varasm.h wide-int.h.\n+\t* combine-stack-adj.c: Likewise.\n+\t* cse.c: Likewise.\n+\t* ddg.c: Likewise.\n+\t* ifcvt.c: Likewise.\n+\t* ira-costs.c: Likewise.\n+\t* jump.c: Likewise.\n+\t* lra-coalesce.c: Likewise.\n+\t* lra-spills.c: Likewise.\n+\t* profile.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h insn-config.h real.h statistics.h\n+\tstmt.h varasm.h wide-int.h.\n+\t* lra.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h real.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* config/sh/sh_treg_combine.cc: Include alias.h calls.h dojump.h\n+\tdouble-int.h explow.h expmed.h fixed-value.h flags.h real.h\n+\tstatistics.h stmt.h varasm.h wide-int.h.\n+\t* reorg.c: Include alias.h calls.h dojump.h double-int.h explow.h\n+\texpmed.h fixed-value.h inchash.h real.h statistics.h stmt.h tree.h\n+\tvarasm.h wide-int.h.\n+\t* reload1.c: Include alias.h calls.h dojump.h double-int.h explow.h\n+\texpmed.h fixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n+\t* config/tilegx/tilegx.c: Include alias.h dojump.h double-int.h\n+\temit-rtl.h explow.h expmed.h fixed-value.h flags.h real.h\n+\tstatistics.h stmt.h.\n+\t* config/tilepro/tilepro.c: Likewise.\n+\t* config/mmix/mmix.c: Include alias.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h real.h statistics.h stmt.h.\n+\t* config/pdp11/pdp11.c: Likewise.\n+\t* config/xtensa/xtensa.c: Likewise.\n+\t* config/lm32/lm32.c: Include alias.h dojump.h double-int.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h real.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* tree-chkp.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n+\tinsn-config.h real.h rtl.h statistics.h stmt.h tm.h.\n+\t* cilk-common.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n+\tinsn-config.h real.h rtl.h statistics.h stmt.h tm.h varasm.h.\n+\t* rtl-chkp.c: Likewise.\n+\t* tree-chkp-opt.c: Likewise.\n+\t* config/arm/arm-builtins.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n+\tinsn-config.h real.h statistics.h stmt.h varasm.h.\n+\t* ipa-icf.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h\n+\tstatistics.h stmt.h.\n+\t* tree-vect-data-refs.c: Likewise.\n+\t* graphite-sese-to-poly.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n+\trtl.h statistics.h stmt.h varasm.h.\n+\t* internal-fn.c: Likewise.\n+\t* ipa-icf-gimple.c: Likewise.\n+\t* lto-section-out.c: Likewise.\n+\t* tree-data-ref.c: Likewise.\n+\t* tree-nested.c: Likewise.\n+\t* tree-outof-ssa.c: Likewise.\n+\t* tree-predcom.c: Likewise.\n+\t* tree-pretty-print.c: Likewise.\n+\t* tree-scalar-evolution.c: Likewise.\n+\t* tree-ssa-strlen.c: Likewise.\n+\t* tree-vect-loop.c: Likewise.\n+\t* tree-vect-patterns.c: Likewise.\n+\t* tree-vect-slp.c: Likewise.\n+\t* tree-vect-stmts.c: Likewise.\n+\t* tsan.c: Likewise.\n+\t* targhooks.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h hashtab.h insn-config.h real.h statistics.h\n+\tstmt.h.\n+\t* config/sh/sh-mem.cc: Include calls.h dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n+\tstatistics.h stmt.h varasm.h.\n+\t* loop-unroll.c: Likewise.\n+\t* ubsan.c: Likewise.\n+\t* tree-ssa-loop-prefetch.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h flags.h hashtab.h real.h rtl.h statistics.h\n+\tstmt.h varasm.h.\n+\t* dse.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h function.h hashtab.h statistics.h stmt.h varasm.h.\n+\t* tree-switch-conversion.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h hashtab.h insn-config.h real.h rtl.h\n+\tstatistics.h stmt.h.\n+\t* generic-match-head.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h hashtab.h insn-config.h real.h rtl.h\n+\tstatistics.h stmt.h varasm.h.\n+\t* gimple-match-head.c: Likewise.\n+\t* lto-cgraph.c: Likewise.\n+\t* lto-section-in.c: Likewise.\n+\t* lto-streamer-in.c: Likewise.\n+\t* lto-streamer-out.c: Likewise.\n+\t* tree-affine.c: Likewise.\n+\t* tree-cfg.c: Likewise.\n+\t* tree-cfgcleanup.c: Likewise.\n+\t* tree-if-conv.c: Likewise.\n+\t* tree-into-ssa.c: Likewise.\n+\t* tree-ssa-alias.c: Likewise.\n+\t* tree-ssa-copyrename.c: Likewise.\n+\t* tree-ssa-dse.c: Likewise.\n+\t* tree-ssa-forwprop.c: Likewise.\n+\t* tree-ssa-live.c: Likewise.\n+\t* tree-ssa-math-opts.c: Likewise.\n+\t* tree-ssa-pre.c: Likewise.\n+\t* tree-ssa-sccvn.c: Likewise.\n+\t* tree-tailcall.c: Likewise.\n+\t* tree-vect-generic.c: Likewise.\n+\t* tree-sra.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h insn-config.h real.h rtl.h stmt.h varasm.h.\n+\t* stor-layout.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h insn-config.h real.h statistics.h stmt.h.\n+\t* varasm.c: Likewise.\n+\t* coverage.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h insn-config.h real.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* init-regs.c: Likewise.\n+\t* ira.c: Likewise.\n+\t* omp-low.c: Likewise.\n+\t* stack-ptr-mod.c: Likewise.\n+\t* tree-ssa-reassoc.c: Likewise.\n+\t* tree-complex.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h insn-config.h rtl.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* dwarf2cfi.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h insn-config.h statistics.h stmt.h varasm.h.\n+\t* shrink-wrap.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h rtl.h statistics.h stmt.h.\n+\t* recog.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h rtl.h statistics.h stmt.h varasm.h.\n+\t* tree-ssa-phiopt.c: Likewise.\n+\t* config/darwin.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h statistics.h stmt.h.\n+\t* config/fr30/fr30.c: Likewise.\n+\t* config/frv/frv.c: Likewise.\n+\t* expr.c: Likewise.\n+\t* final.c: Likewise.\n+\t* optabs.c: Likewise.\n+\t* passes.c: Likewise.\n+\t* simplify-rtx.c: Likewise.\n+\t* stmt.c: Likewise.\n+\t* toplev.c: Likewise.\n+\t* var-tracking.c: Likewise.\n+\t* gcse.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h statistics.h stmt.h varasm.h.\n+\t* lower-subreg.c: Likewise.\n+\t* postreload-gcse.c: Likewise.\n+\t* ree.c: Likewise.\n+\t* reginfo.c: Likewise.\n+\t* store-motion.c: Likewise.\n+\t* combine.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h stmt.h varasm.h.\n+\t* emit-rtl.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h statistics.h stmt.h.\n+\t* dojump.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h statistics.h stmt.h varasm.h.\n+\t* except.c: Likewise.\n+\t* explow.c: Likewise.\n+\t* tree-dfa.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h insn-config.h real.h rtl.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* gimple-fold.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h insn-config.h real.h rtl.h statistics.h varasm.h.\n+\t* tree-ssa-structalias.c: Likewise.\n+\t* cfgexpand.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h insn-config.h real.h statistics.h.\n+\t* calls.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h insn-config.h real.h statistics.h stmt.h.\n+\t* bb-reorder.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h insn-config.h real.h statistics.h stmt.h varasm.h.\n+\t* cfgbuild.c: Likewise.\n+\t* function.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h real.h rtl.h statistics.h stmt.h.\n+\t* cfgrtl.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n+\t* dbxout.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h real.h statistics.h stmt.h.\n+\t* auto-inc-dec.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h real.h statistics.h stmt.h varasm.h.\n+\t* cprop.c: Likewise.\n+\t* modulo-sched.c: Likewise.\n+\t* postreload.c: Likewise.\n+\t* ccmp.c: Include calls.h dojump.h emit-rtl.h explow.h fixed-value.h\n+\tflags.h function.h hard-reg-set.h hashtab.h insn-config.h real.h\n+\tstatistics.h stmt.h varasm.h.\n+\t* gimple-ssa-strength-reduction.c: Include calls.h dojump.h emit-rtl.h\n+\texplow.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n+\trtl.h statistics.h stmt.h varasm.h.\n+\t* tree-ssa-loop-ivopts.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\tfixed-value.h flags.h hashtab.h real.h rtl.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* expmed.c: Include calls.h dojump.h emit-rtl.h explow.h fixed-value.h\n+\tfunction.h hard-reg-set.h hashtab.h real.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* target-globals.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\tfixed-value.h function.h hashtab.h real.h statistics.h stmt.h\n+\tvarasm.h.\n+\t* tree-ssa-address.c: Include calls.h dojump.h emit-rtl.h explow.h\n+\tfixed-value.h hashtab.h real.h statistics.h stmt.h varasm.h.\n+\t* cfgcleanup.c: Include calls.h dojump.h explow.h expmed.h fixed-value.h\n+\tfunction.h real.h statistics.h stmt.h varasm.h.\n+\t* alias.c: Include calls.h dojump.h explow.h expmed.h fixed-value.h\n+\tinsn-config.h real.h statistics.h stmt.h.\n+\t* dwarf2out.c: Include calls.h dojump.h explow.h expmed.h fixed-value.h\n+\tstatistics.h stmt.h.\n+\t* config/nvptx/nvptx.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h hard-reg-set.h insn-config.h real.h\n+\tstatistics.h stmt.h varasm.h.\n+\t* gimplify.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n+\tflags.h hashtab.h insn-config.h real.h rtl.h statistics.h.\n+\t* asan.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n+\tflags.h hashtab.h insn-config.h real.h rtl.h statistics.h stmt.h.\n+\t* ipa-devirt.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h\n+\tstatistics.h stmt.h varasm.h.\n+\t* ipa-polymorphic-call.c: Likewise.\n+\t* config/aarch64/aarch64.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h hashtab.h insn-config.h real.h statistics.h\n+\tstmt.h.\n+\t* config/c6x/c6x.c: Likewise.\n+\t* config/aarch64/aarch64-builtins.c: Include dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n+\tstatistics.h stmt.h varasm.h.\n+\t* ipa-prop.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n+\thashtab.h insn-config.h real.h rtl.h statistics.h stmt.h varasm.h.\n+\t* ipa-split.c: Likewise.\n+\t* tree-eh.c: Likewise.\n+\t* tree-ssa-dce.c: Likewise.\n+\t* tree-ssa-loop-niter.c: Likewise.\n+\t* tree-vrp.c: Likewise.\n+\t* config/nds32/nds32-cost.c: Include dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h hashtab.h insn-config.h real.h statistics.h\n+\tstmt.h.\n+\t* config/nds32/nds32-fp-as-gp.c: Likewise.\n+\t* config/nds32/nds32-intrinsic.c: Likewise.\n+\t* config/nds32/nds32-isr.c: Likewise.\n+\t* config/nds32/nds32-md-auxiliary.c: Likewise.\n+\t* config/nds32/nds32-memory-manipulation.c: Likewise.\n+\t* config/nds32/nds32-pipelines-auxiliary.c: Likewise.\n+\t* config/nds32/nds32-predicates.c: Likewise.\n+\t* config/nds32/nds32.c: Likewise.\n+\t* config/cris/cris.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h statistics.h.\n+\t* config/alpha/alpha.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h statistics.h stmt.h.\n+\t* config/arm/arm.c: Likewise.\n+\t* config/avr/avr.c: Likewise.\n+\t* config/bfin/bfin.c: Likewise.\n+\t* config/h8300/h8300.c: Likewise.\n+\t* config/i386/i386.c: Likewise.\n+\t* config/ia64/ia64.c: Likewise.\n+\t* config/iq2000/iq2000.c: Likewise.\n+\t* config/m32c/m32c.c: Likewise.\n+\t* config/m32r/m32r.c: Likewise.\n+\t* config/m68k/m68k.c: Likewise.\n+\t* config/mcore/mcore.c: Likewise.\n+\t* config/mep/mep.c: Likewise.\n+\t* config/mips/mips.c: Likewise.\n+\t* config/mn10300/mn10300.c: Likewise.\n+\t* config/moxie/moxie.c: Likewise.\n+\t* config/pa/pa.c: Likewise.\n+\t* config/rl78/rl78.c: Likewise.\n+\t* config/rx/rx.c: Likewise.\n+\t* config/s390/s390.c: Likewise.\n+\t* config/sh/sh.c: Likewise.\n+\t* config/sparc/sparc.c: Likewise.\n+\t* config/spu/spu.c: Likewise.\n+\t* config/stormy16/stormy16.c: Likewise.\n+\t* config/v850/v850.c: Likewise.\n+\t* config/vax/vax.c: Likewise.\n+\t* config/cr16/cr16.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h real.h statistics.h stmt.h varasm.h.\n+\t* config/msp430/msp430.c: Likewise.\n+\t* predict.c: Likewise.\n+\t* value-prof.c: Likewise.\n+\t* config/epiphany/epiphany.c: Include dojump.h emit-rtl.h explow.h\n+\texpmed.h fixed-value.h hashtab.h statistics.h stmt.h.\n+\t* config/microblaze/microblaze.c: Likewise.\n+\t* config/nios2/nios2.c: Likewise.\n+\t* config/rs6000/rs6000.c: Likewise.\n+\t* tree.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n+\tinsn-config.h real.h rtl.h statistics.h stmt.h.\n+\t* cgraph.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n+\tinsn-config.h real.h statistics.h stmt.h.\n+\t* fold-const.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h insn-config.h real.h statistics.h stmt.h varasm.h.\n+\t* tree-inline.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n+\t* builtins.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n+\treal.h statistics.h stmt.h.\n+\t* config/arc/arc.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h statistics.h stmt.h.\n+\t* config/visium/visium.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tstmt.h.\n+\n 2015-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gengtype.c (create_user_defined_type): Workaround"}, {"sha": "a7160f3e9563b4d9ab0f93d5ada3f1139f7728fb", "filename": "gcc/alias.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,19 +35,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"fold-const.h\"\n #include \"varasm.h\"\n-#include \"expr.h\"\n-#include \"tm_p.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n-#include \"alias.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n #include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"tm_p.h\"\n #include \"regs.h\"\n-#include \"flags.h\"\n #include \"diagnostic-core.h\"\n #include \"cselib.h\"\n #include \"hash-map.h\""}, {"sha": "b7c2b11ed5479f1edd9b663e0e8ea3817f052df1", "filename": "gcc/asan.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -48,7 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n-#include \"inchash.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n@@ -66,6 +64,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"asan.h\"\n #include \"gimple-pretty-print.h\"\n #include \"target.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "7e3dd89affe8fc268439550fb56dc55009538aaf", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,11 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -52,6 +48,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n #include \"recog.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"df.h\""}, {"sha": "c2a3be3255a9252a71e0aa7f6574bfbfbf1ae7d7", "filename": "gcc/bb-reorder.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fbb-reorder.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fbb-reorder.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbb-reorder.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -98,14 +98,21 @@\n #include \"output.h\"\n #include \"target.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"params.h\""}, {"sha": "c028281ef3ffabeb38d85cc65ffeb645843ebd7e", "filename": "gcc/bt-load.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fbt-load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fbt-load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbt-load.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -27,15 +27,31 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"target.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n-#include \"flags.h\"\n-#include \"insn-attr.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"vec.h\"\n #include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"insn-attr.h\"\n #include \"except.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\""}, {"sha": "737023b3a9278470cc213c685984936c54041432", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"vec.h\"\n #include \"double-int.h\"\n #include \"input.h\"\n@@ -41,11 +40,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-object-size.h\"\n #include \"realmpfr.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"cfgrtl.h\"\n #include \"basic-block.h\"\n@@ -58,6 +54,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"except.h\"\n #include \"insn-config.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "3b01941d1168af14978cb91fdb1a8fe30324e749", "filename": "gcc/caller-save.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -40,6 +40,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"reload.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\""}, {"sha": "1c2f0adfa2354277bfa579aa24406a03cb154229", "filename": "gcc/calls.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,12 +38,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"attribs.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n@@ -52,6 +48,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"is-a.h\"\n #include \"gimple.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "fc8458c27a27cf1ea02b0778d17d1a3a27daa0d6", "filename": "gcc/calls.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcalls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcalls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -27,5 +27,11 @@ extern bool gimple_alloca_call_p (const_gimple);\n extern bool alloca_call_p (const_tree);\n extern bool must_pass_in_stack_var_size (machine_mode, const_tree);\n extern bool must_pass_in_stack_var_size_or_pad (machine_mode, const_tree);\n+extern rtx prepare_call_address (tree, rtx, rtx, rtx *, int, int);\n+extern bool shift_return_value (machine_mode, bool, rtx);\n+extern rtx expand_call (tree, rtx, int);\n+extern void fixup_tail_calls (void);\n+\n+\n \n #endif // GCC_CALLS_H"}, {"sha": "1130329ab3093fd3978a2ae466e8252b6cb8f95e", "filename": "gcc/ccmp.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fccmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fccmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fccmp.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,6 +37,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"regs.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n@@ -60,7 +75,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgexpand.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n-#include \"expmed.h\"\n #include \"ccmp.h\"\n \n /* The following functions expand conditional compare (CCMP) instructions."}, {"sha": "7cbed5006322e4a569cdc6ba86952d47c7cd413f", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,11 +35,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -50,6 +46,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"flags.h\"\n #include \"except.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"timevar.h\""}, {"sha": "cee152e90cea44e21e94e8c1b83e69ab4340e562", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -55,14 +55,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\" /* For inline functions in emit-rtl.h they need crtl.  */\n #include \"emit-rtl.h\"\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -75,7 +81,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"dce.h\"\n #include \"dbgcnt.h\"\n-#include \"emit-rtl.h\"\n #include \"rtl-iter.h\"\n \n #define FORWARDER_BLOCK_P(BB) ((BB)->flags & BB_FORWARDER_BLOCK)"}, {"sha": "4df973bd00cfb792962d048e92afcd7de5e5688f", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,11 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"print-tree.h\"\n #include \"tm_p.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -56,6 +52,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n #include \"expr.h\"\n #include \"langhooks.h\"\n #include \"bitmap.h\"\n@@ -80,7 +86,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa.h\"\n #include \"tree-pass.h\"\n #include \"except.h\"\n-#include \"flags.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n #include \"toplev.h\""}, {"sha": "8b05b4da0904b0a528a77d2e7d1583e118b15758", "filename": "gcc/cfgloopanal.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgloopanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgloopanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloopanal.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,6 +36,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"graphds.h\"\n #include \"params.h\""}, {"sha": "0e27eddd5a9b3450a3ba5fb13f06c500bca95ec9", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -71,6 +71,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"obstack.h\"\n #include \"insn-attr.h\"\n #include \"insn-config.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"target.h\"\n #include \"common/common-target.h\""}, {"sha": "1a06cadeb533df68a08bcb0708830cc3b352d8a1", "filename": "gcc/cgraph.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"langhooks.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n #include \"toplev.h\"\n #include \"flags.h\"\n #include \"debug.h\"\n@@ -56,10 +55,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n@@ -87,6 +83,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-inline.h\"\n #include \"cfgloop.h\"\n #include \"gimple-pretty-print.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"profile.h\""}, {"sha": "ab097c41df7915b9c16dc5b06dd8378a13cf5370", "filename": "gcc/cilk-common.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcilk-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcilk-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcilk-common.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,6 +38,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"langhooks.h\"\n+#include \"hashtab.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "83cdfaefe8d0b86d722173ed3c7635514f8565c8", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -56,6 +56,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "597aa8035ff3ac3199c65ed4fa2758230806b51f", "filename": "gcc/combine.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -96,7 +96,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -105,6 +104,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"insn-config.h\"\n /* Include expr.h after insn-config.h so we get HAVE_conditional_move.  */\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n@@ -123,8 +133,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n #include \"obstack.h\"\n-#include \"statistics.h\"\n-#include \"params.h\"\n #include \"rtl-iter.h\"\n \n /* Number of attempts to combine instructions in this function.  */"}, {"sha": "87f1ac2ec1e3c774782c567b20c673802ae90d99", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,6 +37,20 @@\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"calls.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"recog.h\"\n@@ -45,12 +59,8 @@\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"hash-table.h\"\n-#include \"vec.h\"\n #include \"ggc.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\""}, {"sha": "e1eb3258b2f71822f110a70646ac44dd37385498", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -53,15 +53,25 @@\n #include \"df.h\"\n #include \"hard-reg-set.h\"\n #include \"output.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n #include \"toplev.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"targhooks.h\"\n #include \"ggc.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"tm_p.h\"\n #include \"recog.h\"\n #include \"langhooks.h\""}, {"sha": "0c0df684dccf2854c3d5c856417eeb8c38b3341a", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,14 +46,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"reload.h\"\n #include \"obstack.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\""}, {"sha": "ab00ed2a70db457a3679912b585bfd2a2c1d7650", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -55,10 +55,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"conditions.h\"\n #include \"insn-flags.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"toplev.h\"\n #include \"ggc.h\"\n@@ -67,6 +63,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"debug.h\"\n@@ -89,7 +92,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"context.h\"\n #include \"pass_manager.h\"\n-#include \"wide-int.h\"\n #include \"builtins.h\"\n #include \"rtl-iter.h\"\n "}, {"sha": "37f27d74694ae063812538449c5ec7250bd54241", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -34,6 +34,21 @@\n #include \"tree.h\"\n #include \"fold-const.h\"\n #include \"stor-layout.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"recog.h\""}, {"sha": "a92b0080669f0cb4cf4b89a9cd5638cc28613ee5", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -50,8 +50,16 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"reload.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "c7074f079043606bbaad1c9c15319252f6da744b", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,12 +48,20 @@\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n #include \"output.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"c-family/c-common.h\"\n #include \"diagnostic-core.h\"\n #include \"obstack.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"recog.h\"\n #include \"optabs.h\"\n #include \"ggc.h\""}, {"sha": "1868c53b05f36669e661c54dff71d193fc38af56", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,10 +46,18 @@\n #include \"calls.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"recog.h\""}, {"sha": "03f6b3f3f29726ea8f6908a88fa4368670e23704", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -43,6 +43,19 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"insn-codes.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"regs.h\"\n #include \"optabs.h\"\n@@ -63,9 +76,6 @@\n #include \"tm-preds.h\"\n #include \"tm-constrs.h\"\n #include \"df.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"diagnostic-core.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\""}, {"sha": "47468b1bbdf807423fcb5fcde87495c24460a4bc", "filename": "gcc/config/cr16/cr16.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fcr16%2Fcr16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fcr16%2Fcr16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,9 +46,18 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\""}, {"sha": "650402e422e045cbd38db3603401a3d304561da4", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,10 +44,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"stmt.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n #include \"expr.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"diagnostic-core.h\"\n #include \"recog.h\"\n #include \"reload.h\""}, {"sha": "896f2ad23dadec8f89e2344ad1cbb025fd7552c9", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,10 +45,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ggc.h\"\n #include \"langhooks.h\"\n #include \"target.h\""}, {"sha": "12aac13c2683f6d5d2d85eef42e63fdf21d443b7", "filename": "gcc/config/epiphany/epiphany.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fepiphany%2Fepiphany.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,10 +46,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"recog.h\"\n@@ -67,7 +74,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"df.h\"\n #include \"langhooks.h\"\n-#include \"insn-codes.h\"\n #include \"ggc.h\"\n #include \"tm-constrs.h\"\n #include \"tree-pass.h\"\t/* for current_pass */"}, {"sha": "55fc0781863e297c57004f2c902ec69e28caa496", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,11 +46,20 @@\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"output.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"obstack.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\""}, {"sha": "4105fb36ec10f3ca91ceef313e60ce3cfb87311c", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,11 +46,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"reload.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"obstack.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\""}, {"sha": "5968e5572b948316ea6c5cd3f2e9b23ecf4686ee", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,9 +46,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n-#include \"expr.h\"\n-#include \"input.h\"\n+#include \"hashtab.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\""}, {"sha": "3fa7842c68c17e2b3a5e0822ca873ee38de33d2b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,9 +48,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\"\n@@ -97,7 +105,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"dumpfile.h\"\n #include \"tree-pass.h\"\n-#include \"wide-int.h\"\n #include \"context.h\"\n #include \"pass_manager.h\"\n #include \"target-globals.h\""}, {"sha": "6ef22d99705ef4439759e894f303160f63179ab9", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,12 +47,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ggc.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "86bcaa6b4bc87054bc534bc9c88e8e24a759db3e", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -43,8 +43,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "b13329721a42f25eb75ca1768366c45f86916a34", "filename": "gcc/config/lm32/lm32.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Flm32%2Flm32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Flm32%2Flm32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -54,8 +54,19 @@\n #include \"tree.h\"\n #include \"fold-const.h\"\n #include \"calls.h\"\n-#include \"expr.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"reload.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\""}, {"sha": "ffdeee0d08c97b837f26c28d9355387817dd145a", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -49,12 +49,20 @@\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"target-def.h\""}, {"sha": "f9c0493fda80871e25e8c527f60e73c5db5d3aaa", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,9 +44,17 @@\n #include \"dbxout.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"expr.h\"\n-#include \"input.h\"\n+#include \"hashtab.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\""}, {"sha": "fb82105a9a72dcec76fee0cb4f2af583c86f6f28", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"varasm.h\"\n #include \"rtl.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"regs.h\"\n #include \"insn-config.h\"\n@@ -46,13 +45,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"debug.h\"\n-#include \"flags.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\""}, {"sha": "868b1ed43f05bf62b76ddba74dd0141d738d356c", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,11 +47,19 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"obstack.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n #include \"recog.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ggc.h\"\n #include \"diagnostic-core.h\"\n #include \"target.h\""}, {"sha": "251e69cbe431d43e78619ca3f176c2ec5bdb2b25", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,11 +48,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"obstack.h\"\n-#include \"tree.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"reload.h\""}, {"sha": "8ef40df7349ba052f9c840b8990aeecaf3ee68e5", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,10 +45,17 @@\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n-#include \"input.h\"\n #include \"function.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"reload.h\"\n #include \"output.h\"\n #include \"ggc.h\""}, {"sha": "443a71216e786028239ec070cbbdb19d53876c61", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,13 +48,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"libfuncs.h\"\n-#include \"flags.h\"\n #include \"reload.h\"\n #include \"tm_p.h\"\n #include \"ggc.h\""}, {"sha": "23364005fbec30ab7365b293ab2126caefe37d3b", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -50,6 +50,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"recog.h\""}, {"sha": "58c97e8cf7dda8db6ccda130c74beb2014ca5235", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,11 +45,19 @@\n #include \"flags.h\"\n #include \"recog.h\"\n #include \"reload.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"obstack.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\""}, {"sha": "2450a827a63b6fc5bfdffffcb6fb50df05cb003a", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,12 +48,20 @@\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"target-def.h\""}, {"sha": "35d2a7dfe4b9fab505d8c257636e1818e60da1c1", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -43,8 +43,17 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "c6ec5ab845aebfabf95b64cce9425b929a600ca2", "filename": "gcc/config/nds32/nds32-cost.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-cost.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-cost.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-cost.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "e7b7c7071b176dd96f555807f8599cac02184d93", "filename": "gcc/config/nds32/nds32-fp-as-gp.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-fp-as-gp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-fp-as-gp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-fp-as-gp.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "9f0851d9f771acb24510a9f03febbc2aa88b8769", "filename": "gcc/config/nds32/nds32-intrinsic.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-intrinsic.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "1896fde9f1e50552a9ffc9422943eadd59c28fd5", "filename": "gcc/config/nds32/nds32-isr.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-isr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-isr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-isr.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "2f4927731befe25c4fce88b1c858388fb2990f4a", "filename": "gcc/config/nds32/nds32-md-auxiliary.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-md-auxiliary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-md-auxiliary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-md-auxiliary.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,8 +48,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "2f333371d78c743b6294089fd29d142dc155d2b9", "filename": "gcc/config/nds32/nds32-memory-manipulation.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-memory-manipulation.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,8 +48,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "6cc95939d2fd08e351420d49a8e3f3b45170830b", "filename": "gcc/config/nds32/nds32-pipelines-auxiliary.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-pipelines-auxiliary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-pipelines-auxiliary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-pipelines-auxiliary.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,8 +48,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "209b25f4c743a8446e30043d8bc38bb3d674778f", "filename": "gcc/config/nds32/nds32-predicates.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-predicates.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "f7d5e706e56a00a985d576b6c614ee83382cbb72", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,17 @@\n #include \"insn-codes.h\"\t\t/* For CODE_FOR_xxx.  */\n #include \"reload.h\"\t\t/* For push_reload().  */\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\""}, {"sha": "06c9d007537e46d08cc4a5a1e2d4c027cf7c3ae1", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,11 +44,21 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ggc.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n@@ -67,11 +77,8 @@\n #include \"langhooks.h\"\n #include \"df.h\"\n #include \"debug.h\"\n-#include \"real.h\"\n #include \"reload.h\"\n #include \"stor-layout.h\"\n-#include \"varasm.h\"\n-#include \"calls.h\"\n #include \"builtins.h\"\n \n /* Forward function declarations.  */"}, {"sha": "7cfe5505e7139e319be56b68786561b23951d0ad", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,6 +38,21 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"insn-codes.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"regs.h\"\n #include \"optabs.h\"\n@@ -47,7 +62,6 @@\n #include \"tm_p.h\"\n #include \"tm-preds.h\"\n #include \"tm-constrs.h\"\n-#include \"function.h\"\n #include \"langhooks.h\"\n #include \"dbxout.h\"\n #include \"target.h\"\n@@ -57,10 +71,8 @@\n #include \"basic-block.h\"\n #include \"cfgrtl.h\"\n #include \"stor-layout.h\"\n-#include \"calls.h\"\n #include \"df.h\"\n #include \"builtins.h\"\n-#include \"hashtab.h\"\n \n /* Record the function decls we've written, and the libfuncs and function\n    decls corresponding to them.  */"}, {"sha": "a568b2ff3de8bcc86517932490ff0e6ea9e38252", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,12 +47,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"dbxout.h\"\n #include \"except.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"reload.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\"\n #include \"recog.h\""}, {"sha": "1a2400484d8f3520de49c883461465b486d22158", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,6 +44,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\""}, {"sha": "6b199a6ea0ff6072c45a9f5f7594d888cc566b94", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,8 +44,16 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "ca214136e1fe09f6a2d441ceef400ffc763ad2af", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,12 +47,20 @@\n #include \"calls.h\"\n #include \"print-tree.h\"\n #include \"varasm.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"output.h\"\n #include \"dbxout.h\"\n #include \"predict.h\"\n@@ -101,7 +109,6 @@\n #include \"builtins.h\"\n #include \"context.h\"\n #include \"tree-pass.h\"\n-#include \"real.h\"\n #if TARGET_XCOFF\n #include \"xcoffout.h\"  /* get declarations of xcoff_*_section_name */\n #endif"}, {"sha": "6fe21aab98615182bac2a7b9c0a93104d85f9b55", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,8 +47,16 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "6985fb77675334579095ab69f4de9fad2e185704", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -50,9 +50,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"reload.h\"\n #include \"diagnostic-core.h\""}, {"sha": "d09209004a670d72991e7f881e9afba52ab61335", "filename": "gcc/config/sh/sh-mem.cc", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsh%2Fsh-mem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsh%2Fsh-mem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-mem.cc?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -32,12 +32,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"wide-int.h\"\n #include \"inchash.h\"\n #include \"tree.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\""}, {"sha": "9e1a09e7dd2295935000d593674ccef1ce1b2cd7", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,13 +44,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"calls.h\"\n #include \"varasm.h\"\n #include \"flags.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"reload.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"regs.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n@@ -10056,7 +10064,6 @@ reg_unused_after (rtx reg, rtx_insn *insn)\n   return true;\n }\n \f\n-#include \"ggc.h\"\n \n static GTY(()) rtx t_reg_rtx;\n rtx"}, {"sha": "e4f3581099c22669d45f6cd465160f0b9a06e733", "filename": "gcc/config/sh/sh_treg_combine.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsh%2Fsh_treg_combine.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsh%2Fsh_treg_combine.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh_treg_combine.cc?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -50,6 +50,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"optabs.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n \n #include <algorithm>"}, {"sha": "19e45c23fca408b0bb06c42a8aa7602bfba66db7", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,9 +48,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"flags.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"except.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n #include \"recog.h\"\n@@ -86,7 +94,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"tree-pass.h\"\n #include \"context.h\"\n-#include \"wide-int.h\"\n #include \"builtins.h\"\n #include \"rtl-iter.h\"\n "}, {"sha": "e99cea37d05144488d7ca52c9072280192866c97", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -42,12 +42,20 @@\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"varasm.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"output.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "1a43b58e4e0f2d23b137691809207b0b5392b704", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -49,12 +49,20 @@\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"calls.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"except.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"tm_p.h\""}, {"sha": "252ca08378a4e14a6ae2829dc383b351d15a5033", "filename": "gcc/config/tilegx/mul-tables.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilegx%2Fmul-tables.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilegx%2Fmul-tables.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Fmul-tables.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -24,6 +24,33 @@\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"hashtab.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"machmode.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n+#include \"input.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "e403c32657907758106e8f2fa45674b210d5b049", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -28,6 +28,30 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"machmode.h\"\n+#include \"hard-reg-set.h\"\n+#include \"input.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"langhooks.h\"\n #include \"insn-codes.h\"\n@@ -46,19 +70,8 @@\n #include \"tm-constrs.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dwarf2.h\"\n #include \"timevar.h\"\n-#include \"symtab.h\"\n-#include \"wide-int.h\"\n-#include \"inchash.h\"\n-#include \"tree.h\"\n #include \"fold-const.h\"\n #include \"hash-table.h\"\n #include \"ggc.h\"\n@@ -71,8 +84,6 @@\n #include \"gimple.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n-#include \"varasm.h\"\n-#include \"calls.h\"\n #include \"gimplify.h\"\n #include \"cfgloop.h\"\n #include \"tilegx-builtins.h\""}, {"sha": "b28d3d83cf5b013356cbbbd56afd73af2331a0a2", "filename": "gcc/config/tilepro/gen-mul-tables.cc", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Fgen-mul-tables.cc?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -1256,6 +1256,32 @@ main ()\n   printf (\"#include \\\"system.h\\\"\\n\");\n   printf (\"#include \\\"coretypes.h\\\"\\n\");\n   printf (\"#include \\\"symtab.h\\\"\\n\");\n+  printf (\"#include \\\"hashtab.h\\\"\\n\");\n+  printf (\"#include \\\"hash-set.h\\\"\\n\");\n+  printf (\"#include \\\"vec.h\\\"\\n\");\n+  printf (\"#include \\\"machmode.h\\\"\\n\");\n+  printf (\"#include \\\"tm.h\\\"\\n\");\n+  printf (\"#include \\\"hard-reg-set.h\\\"\\n\");\n+  printf (\"#include \\\"input.h\\\"\\n\");\n+  printf (\"#include \\\"function.h\\\"\\n\");\n+  printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"flags.h\\\"\\n\");\n+  printf (\"#include \\\"statistics.h\\\"\\n\");\n+  printf (\"#include \\\"double-int.h\\\"\\n\");\n+  printf (\"#include \\\"real.h\\\"\\n\");\n+  printf (\"#include \\\"fixed-value.h\\\"\\n\");\n+  printf (\"#include \\\"alias.h\\\"\\n\");\n+  printf (\"#include \\\"wide-int.h\\\"\\n\");\n+  printf (\"#include \\\"inchash.h\\\"\\n\");\n+  printf (\"#include \\\"tree.h\\\"\\n\");\n+  printf (\"#include \\\"insn-config.h\\\"\\n\");\n+  printf (\"#include \\\"expmed.h\\\"\\n\");\n+  printf (\"#include \\\"dojump.h\\\"\\n\");\n+  printf (\"#include \\\"explow.h\\\"\\n\");\n+  printf (\"#include \\\"calls.h\\\"\\n\");\n+  printf (\"#include \\\"emit-rtl.h\\\"\\n\");\n+  printf (\"#include \\\"varasm.h\\\"\\n\");\n+  printf (\"#include \\\"stmt.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"insn-codes.h\\\"\\n\");\n   printf (\"#include \\\"optabs.h\\\"\\n\");"}, {"sha": "f534b036e33af9f49728dff15c354a3c0eb2abec", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -28,6 +28,30 @@\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"machmode.h\"\n+#include \"hard-reg-set.h\"\n+#include \"input.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"symtab.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"langhooks.h\"\n #include \"insn-codes.h\"\n@@ -47,19 +71,8 @@\n #include \"tm-constrs.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dwarf2.h\"\n #include \"timevar.h\"\n-#include \"symtab.h\"\n-#include \"wide-int.h\"\n-#include \"inchash.h\"\n-#include \"tree.h\"\n #include \"fold-const.h\"\n #include \"hash-table.h\"\n #include \"ggc.h\"\n@@ -72,8 +85,6 @@\n #include \"gimple.h\"\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n-#include \"varasm.h\"\n-#include \"calls.h\"\n #include \"gimplify.h\"\n #include \"cfgloop.h\"\n #include \"tilepro-builtins.h\""}, {"sha": "f9cc3efb6a57ac2a8c2902c414b76294d4d2d46f", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,9 +45,17 @@\n #include \"insn-attr.h\"\n #include \"flags.h\"\n #include \"recog.h\"\n-#include \"expr.h\"\n-#include \"input.h\"\n+#include \"hashtab.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\""}, {"sha": "3a2a6508da869d658edada1ee537d5a6b5ea3978", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,15 +48,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"insn-config.h\"\n #include \"conditions.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n-#include \"flags.h\"\n #include \"debug.h\"\n #include \"diagnostic-core.h\"\n #include \"reload.h\"\n@@ -65,7 +73,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"target-def.h\"\n-#include \"wide-int.h\"\n #include \"builtins.h\"\n \n static void vax_option_override (void);"}, {"sha": "e656af941c14e38751fd0806645cf96d290920cd", "filename": "gcc/config/visium/visium.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fvisium%2Fvisium.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fvisium%2Fvisium.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -51,8 +51,13 @@\n #include \"conditions.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n-#include \"expr.h\"\n #include \"function.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"recog.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\""}, {"sha": "6c289e537193e54da96bb734b1b1a2347d9b2551", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -56,8 +56,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"calls.h\"\n #include \"varasm.h\"\n-#include \"expr.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"reload.h\"\n #include \"tm_p.h\"\n #include \"diagnostic-core.h\""}, {"sha": "661e44113241e63e11d3e8cbb8b67b6837079d5d", "filename": "gcc/coverage.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,10 +45,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"output.h\"\n #include \"regs.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\""}, {"sha": "c9fb2fc5129065cadd0df5b00626c408e51cb794", "filename": "gcc/cprop.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,11 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -54,6 +50,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lcm.h\"\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"params.h\""}, {"sha": "4732d81a72a60273102b88aebfeb3422d3211a55", "filename": "gcc/cse.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -42,6 +42,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"toplev.h\""}, {"sha": "c756f2e3dbb63f722cd18bbc14019844d23ea92f", "filename": "gcc/dbxout.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -96,16 +96,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"debug.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"target.h\"\n #include \"common/common-target.h\"\n #include \"langhooks.h\"\n #include \"obstack.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\""}, {"sha": "e6966f3823c428d5a59016b0ff309887f911db4b", "filename": "gcc/ddg.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fddg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fddg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fddg.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,6 +46,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"sbitmap.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"bitmap.h\"\n #include \"df.h\""}, {"sha": "ad356ba032ffed09fa30c6d0a0ea613af88a5c0c", "filename": "gcc/dojump.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,11 +37,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n /* Include expr.h after insn-config.h so we get HAVE_conditional_move.  */\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "b41ba815ff5123088a11388cdbdad43f4b435160", "filename": "gcc/dojump.h", "status": "added", "additions": 234, "deletions": 0, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdojump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdojump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -0,0 +1,234 @@\n+/* Export function prototypes from dojump.c.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_DOJUMP_H\n+#define GCC_DOJUMP_H\n+\n+/* At the start of a function, record that we have no previously-pushed\n+   arguments waiting to be popped.  */\n+extern void init_pending_stack_adjust (void);\n+\n+/* Discard any pending stack adjustment.  */\n+extern void discard_pending_stack_adjust (void);\n+\n+/* When exiting from function, if safe, clear out any pending stack adjust\n+   so the adjustment won't get done.  */\n+extern void clear_pending_stack_adjust (void);\n+\n+/* Pop any previously-pushed arguments that have not been popped yet.  */\n+extern void do_pending_stack_adjust (void);\n+\n+/* Struct for saving/restoring of pending_stack_adjust/stack_pointer_delta\n+   values.  */\n+\n+struct saved_pending_stack_adjust\n+{\n+  /* Saved value of pending_stack_adjust.  */\n+  int x_pending_stack_adjust;\n+\n+  /* Saved value of stack_pointer_delta.  */\n+  int x_stack_pointer_delta;\n+};\n+\n+/* Remember pending_stack_adjust/stack_pointer_delta.\n+   To be used around code that may call do_pending_stack_adjust (),\n+   but the generated code could be discarded e.g. using delete_insns_since.  */\n+\n+extern void save_pending_stack_adjust (saved_pending_stack_adjust *);\n+\n+/* Restore the saved pending_stack_adjust/stack_pointer_delta.  */\n+\n+extern void restore_pending_stack_adjust (saved_pending_stack_adjust *);\n+\n+/* Generate code to evaluate EXP and jump to LABEL if the value is zero.  */\n+extern void jumpifnot (tree, rtx, int);\n+extern void jumpifnot_1 (enum tree_code, tree, tree, rtx, int);\n+\n+/* Generate code to evaluate EXP and jump to LABEL if the value is nonzero.  */\n+extern void jumpif (tree, rtx, int);\n+extern void jumpif_1 (enum tree_code, tree, tree, rtx, int);\n+\n+/* Generate code to evaluate EXP and jump to IF_FALSE_LABEL if\n+   the result is zero, or IF_TRUE_LABEL if the result is one.  */\n+extern void do_jump (tree, rtx, rtx, int);\n+extern void do_jump_1 (enum tree_code, tree, tree, rtx, rtx, int);\n+\n+extern void do_compare_rtx_and_jump (rtx, rtx, enum rtx_code, int,\n+\t\t\t\t     machine_mode, rtx, rtx, rtx, int);\n+\n+extern bool split_comparison (enum rtx_code, machine_mode,\n+\t\t\t      enum rtx_code *, enum rtx_code *);\n+\n+#endif /* GCC_DOJUMP_H */\n+/* Export function prototypes from dojump.c.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_DOJUMP_H\n+#define GCC_DOJUMP_H\n+\n+/* At the start of a function, record that we have no previously-pushed\n+   arguments waiting to be popped.  */\n+extern void init_pending_stack_adjust (void);\n+\n+/* Discard any pending stack adjustment.  */\n+extern void discard_pending_stack_adjust (void);\n+\n+/* When exiting from function, if safe, clear out any pending stack adjust\n+   so the adjustment won't get done.  */\n+extern void clear_pending_stack_adjust (void);\n+\n+/* Pop any previously-pushed arguments that have not been popped yet.  */\n+extern void do_pending_stack_adjust (void);\n+\n+/* Struct for saving/restoring of pending_stack_adjust/stack_pointer_delta\n+   values.  */\n+\n+struct saved_pending_stack_adjust\n+{\n+  /* Saved value of pending_stack_adjust.  */\n+  int x_pending_stack_adjust;\n+\n+  /* Saved value of stack_pointer_delta.  */\n+  int x_stack_pointer_delta;\n+};\n+\n+/* Remember pending_stack_adjust/stack_pointer_delta.\n+   To be used around code that may call do_pending_stack_adjust (),\n+   but the generated code could be discarded e.g. using delete_insns_since.  */\n+\n+extern void save_pending_stack_adjust (saved_pending_stack_adjust *);\n+\n+/* Restore the saved pending_stack_adjust/stack_pointer_delta.  */\n+\n+extern void restore_pending_stack_adjust (saved_pending_stack_adjust *);\n+\n+/* Generate code to evaluate EXP and jump to LABEL if the value is zero.  */\n+extern void jumpifnot (tree, rtx, int);\n+extern void jumpifnot_1 (enum tree_code, tree, tree, rtx, int);\n+\n+/* Generate code to evaluate EXP and jump to LABEL if the value is nonzero.  */\n+extern void jumpif (tree, rtx, int);\n+extern void jumpif_1 (enum tree_code, tree, tree, rtx, int);\n+\n+/* Generate code to evaluate EXP and jump to IF_FALSE_LABEL if\n+   the result is zero, or IF_TRUE_LABEL if the result is one.  */\n+extern void do_jump (tree, rtx, rtx, int);\n+extern void do_jump_1 (enum tree_code, tree, tree, rtx, rtx, int);\n+\n+extern void do_compare_rtx_and_jump (rtx, rtx, enum rtx_code, int,\n+\t\t\t\t     machine_mode, rtx, rtx, rtx, int);\n+\n+extern bool split_comparison (enum rtx_code, machine_mode,\n+\t\t\t      enum rtx_code *, enum rtx_code *);\n+\n+#endif /* GCC_DOJUMP_H */\n+/* Export function prototypes from dojump.c.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_DOJUMP_H\n+#define GCC_DOJUMP_H\n+\n+/* At the start of a function, record that we have no previously-pushed\n+   arguments waiting to be popped.  */\n+extern void init_pending_stack_adjust (void);\n+\n+/* Discard any pending stack adjustment.  */\n+extern void discard_pending_stack_adjust (void);\n+\n+/* When exiting from function, if safe, clear out any pending stack adjust\n+   so the adjustment won't get done.  */\n+extern void clear_pending_stack_adjust (void);\n+\n+/* Pop any previously-pushed arguments that have not been popped yet.  */\n+extern void do_pending_stack_adjust (void);\n+\n+/* Struct for saving/restoring of pending_stack_adjust/stack_pointer_delta\n+   values.  */\n+\n+struct saved_pending_stack_adjust\n+{\n+  /* Saved value of pending_stack_adjust.  */\n+  int x_pending_stack_adjust;\n+\n+  /* Saved value of stack_pointer_delta.  */\n+  int x_stack_pointer_delta;\n+};\n+\n+/* Remember pending_stack_adjust/stack_pointer_delta.\n+   To be used around code that may call do_pending_stack_adjust (),\n+   but the generated code could be discarded e.g. using delete_insns_since.  */\n+\n+extern void save_pending_stack_adjust (saved_pending_stack_adjust *);\n+\n+/* Restore the saved pending_stack_adjust/stack_pointer_delta.  */\n+\n+extern void restore_pending_stack_adjust (saved_pending_stack_adjust *);\n+\n+/* Generate code to evaluate EXP and jump to LABEL if the value is zero.  */\n+extern void jumpifnot (tree, rtx, int);\n+extern void jumpifnot_1 (enum tree_code, tree, tree, rtx, int);\n+\n+/* Generate code to evaluate EXP and jump to LABEL if the value is nonzero.  */\n+extern void jumpif (tree, rtx, int);\n+extern void jumpif_1 (enum tree_code, tree, tree, rtx, int);\n+\n+/* Generate code to evaluate EXP and jump to IF_FALSE_LABEL if\n+   the result is zero, or IF_TRUE_LABEL if the result is one.  */\n+extern void do_jump (tree, rtx, rtx, int);\n+extern void do_jump_1 (enum tree_code, tree, tree, rtx, rtx, int);\n+\n+extern void do_compare_rtx_and_jump (rtx, rtx, enum rtx_code, int,\n+\t\t\t\t     machine_mode, rtx, rtx, rtx, int);\n+\n+extern bool split_comparison (enum rtx_code, machine_mode,\n+\t\t\t      enum rtx_code *, enum rtx_code *);\n+\n+#endif /* GCC_DOJUMP_H */"}, {"sha": "a7d46b85dc4a0c21f2984959c850816849d2ba39", "filename": "gcc/dse.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -55,8 +55,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cselib.h\"\n #include \"tree-pass.h\"\n #include \"alloc-pool.h\"\n-#include \"alias.h\"\n #include \"insn-config.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"insn-codes.h\""}, {"sha": "27474cba07d50eb04af27caeda94ed5299e9c991", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"cfgbuild.h\"\n #include \"dwarf2.h\"\n@@ -51,6 +50,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n \n #include \"except.h\"\t\t/* expand_builtin_dwarf_sp_column */\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\t\t/* init_return_column_size */\n #include \"regs.h\"\t\t/* expand_builtin_init_dwarf_reg_sizes */\n #include \"output.h\"\t\t/* asm_out_file */"}, {"sha": "ebb1b6d8c3e93858e7724b40ec12b57eefee37fb", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -76,11 +76,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"emit-rtl.h\"\n #include \"hash-table.h\"\n@@ -91,6 +87,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"reload.h\"\n #include \"output.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"dwarf2.h\""}, {"sha": "df85366c5d6d791d27da533ba07ead6ba5aaa898", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -52,17 +52,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"varasm.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"cfgrtl.h\"\n #include \"basic-block.h\"\n #include \"tree-eh.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"stringpool.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"regs.h\"\n-#include \"insn-config.h\"\n #include \"recog.h\"\n #include \"bitmap.h\"\n #include \"debug.h\""}, {"sha": "44ef034230fd1199bd8f23c339e673710c669394", "filename": "gcc/emit-rtl.h", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Femit-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Femit-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -119,4 +119,87 @@ get_max_uid (void)\n \n extern void set_decl_incoming_rtl (tree, rtx, bool);\n \n+/* Return a memory reference like MEMREF, but with its mode changed\n+   to MODE and its address changed to ADDR.\n+   (VOIDmode means don't change the mode.\n+   NULL for ADDR means don't change the address.)  */\n+extern rtx change_address (rtx, machine_mode, rtx);\n+\n+/* Return a memory reference like MEMREF, but with its mode changed\n+   to MODE and its address offset by OFFSET bytes.  */\n+#define adjust_address(MEMREF, MODE, OFFSET) \\\n+  adjust_address_1 (MEMREF, MODE, OFFSET, 1, 1, 0, 0)\n+\n+/* Likewise, but the reference is not required to be valid.  */\n+#define adjust_address_nv(MEMREF, MODE, OFFSET) \\\n+  adjust_address_1 (MEMREF, MODE, OFFSET, 0, 1, 0, 0)\n+\n+/* Return a memory reference like MEMREF, but with its mode changed\n+   to MODE and its address offset by OFFSET bytes.  Assume that it's\n+   for a bitfield and conservatively drop the underlying object if we\n+   cannot be sure to stay within its bounds.  */\n+#define adjust_bitfield_address(MEMREF, MODE, OFFSET) \\\n+  adjust_address_1 (MEMREF, MODE, OFFSET, 1, 1, 1, 0)\n+\n+/* As for adjust_bitfield_address, but specify that the width of\n+   BLKmode accesses is SIZE bytes.  */\n+#define adjust_bitfield_address_size(MEMREF, MODE, OFFSET, SIZE) \\\n+  adjust_address_1 (MEMREF, MODE, OFFSET, 1, 1, 1, SIZE)\n+\n+/* Likewise, but the reference is not required to be valid.  */\n+#define adjust_bitfield_address_nv(MEMREF, MODE, OFFSET) \\\n+  adjust_address_1 (MEMREF, MODE, OFFSET, 0, 1, 1, 0)\n+\n+/* Return a memory reference like MEMREF, but with its mode changed\n+   to MODE and its address changed to ADDR, which is assumed to be\n+   increased by OFFSET bytes from MEMREF.  */\n+#define adjust_automodify_address(MEMREF, MODE, ADDR, OFFSET) \\\n+  adjust_automodify_address_1 (MEMREF, MODE, ADDR, OFFSET, 1)\n+\n+/* Likewise, but the reference is not required to be valid.  */\n+#define adjust_automodify_address_nv(MEMREF, MODE, ADDR, OFFSET) \\\n+  adjust_automodify_address_1 (MEMREF, MODE, ADDR, OFFSET, 0)\n+\n+extern rtx adjust_address_1 (rtx, machine_mode, HOST_WIDE_INT, int, int,\n+\t\t\t     int, HOST_WIDE_INT);\n+extern rtx adjust_automodify_address_1 (rtx, machine_mode, rtx,\n+\t\t\t\t\tHOST_WIDE_INT, int);\n+\n+/* Return a memory reference like MEMREF, but whose address is changed by\n+   adding OFFSET, an RTX, to it.  POW2 is the highest power of two factor\n+   known to be in OFFSET (possibly 1).  */\n+extern rtx offset_address (rtx, rtx, unsigned HOST_WIDE_INT);\n+\n+/* Given REF, a MEM, and T, either the type of X or the expression\n+   corresponding to REF, set the memory attributes.  OBJECTP is nonzero\n+   if we are making a new object of this type.  */\n+extern void set_mem_attributes (rtx, tree, int);\n+\n+/* Similar, except that BITPOS has not yet been applied to REF, so if\n+   we alter MEM_OFFSET according to T then we should subtract BITPOS\n+   expecting that it'll be added back in later.  */\n+extern void set_mem_attributes_minus_bitpos (rtx, tree, int, HOST_WIDE_INT);\n+\n+/* Return OFFSET if XEXP (MEM, 0) - OFFSET is known to be ALIGN\n+   bits aligned for 0 <= OFFSET < ALIGN / BITS_PER_UNIT, or\n+   -1 if not known.  */\n+extern int get_mem_align_offset (rtx, unsigned int);\n+\n+/* Return a memory reference like MEMREF, but with its mode widened to\n+   MODE and adjusted by OFFSET.  */\n+extern rtx widen_memory_access (rtx, machine_mode, HOST_WIDE_INT);\n+\n+extern void store_bit_field (rtx, unsigned HOST_WIDE_INT,\n+\t\t\t     unsigned HOST_WIDE_INT,\n+\t\t\t     unsigned HOST_WIDE_INT,\n+\t\t\t     unsigned HOST_WIDE_INT,\n+\t\t\t     machine_mode, rtx);\n+extern rtx extract_bit_field (rtx, unsigned HOST_WIDE_INT,\n+\t\t\t      unsigned HOST_WIDE_INT, int, rtx,\n+\t\t\t      machine_mode, machine_mode);\n+extern rtx extract_low_bits (machine_mode, machine_mode, rtx);\n+extern rtx expand_mult (machine_mode, rtx, rtx, rtx, int);\n+extern rtx expand_mult_highpart_adjust (machine_mode, rtx, rtx, rtx, rtx, int);\n+\n+\n #endif /* GCC_EMIT_RTL_H */"}, {"sha": "833ec21f3296652efedaf4daf846aa7bb50815a6", "filename": "gcc/except.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -130,13 +130,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"libfuncs.h\"\n-#include \"insn-config.h\"\n #include \"except.h\"\n #include \"output.h\"\n #include \"dwarf2asm.h\""}, {"sha": "de446a903fd3dec8fcdc8f55673c538adfedeaa6", "filename": "gcc/explow.c", "status": "modified", "additions": 12, "deletions": 54, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -40,13 +40,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"except.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"libfuncs.h\"\n-#include \"insn-config.h\"\n #include \"ggc.h\"\n #include \"recog.h\"\n #include \"langhooks.h\"\n@@ -230,58 +239,6 @@ eliminate_constant_term (rtx x, rtx *constptr)\n   return x;\n }\n \n-/* Returns a tree for the size of EXP in bytes.  */\n-\n-static tree\n-tree_expr_size (const_tree exp)\n-{\n-  if (DECL_P (exp)\n-      && DECL_SIZE_UNIT (exp) != 0)\n-    return DECL_SIZE_UNIT (exp);\n-  else\n-    return size_in_bytes (TREE_TYPE (exp));\n-}\n-\n-/* Return an rtx for the size in bytes of the value of EXP.  */\n-\n-rtx\n-expr_size (tree exp)\n-{\n-  tree size;\n-\n-  if (TREE_CODE (exp) == WITH_SIZE_EXPR)\n-    size = TREE_OPERAND (exp, 1);\n-  else\n-    {\n-      size = tree_expr_size (exp);\n-      gcc_assert (size);\n-      gcc_assert (size == SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, exp));\n-    }\n-\n-  return expand_expr (size, NULL_RTX, TYPE_MODE (sizetype), EXPAND_NORMAL);\n-}\n-\n-/* Return a wide integer for the size in bytes of the value of EXP, or -1\n-   if the size can vary or is larger than an integer.  */\n-\n-HOST_WIDE_INT\n-int_expr_size (tree exp)\n-{\n-  tree size;\n-\n-  if (TREE_CODE (exp) == WITH_SIZE_EXPR)\n-    size = TREE_OPERAND (exp, 1);\n-  else\n-    {\n-      size = tree_expr_size (exp);\n-      gcc_assert (size);\n-    }\n-\n-  if (size == 0 || !tree_fits_shwi_p (size))\n-    return -1;\n-\n-  return tree_to_shwi (size);\n-}\n \f\n /* Return a copy of X in which all memory references\n    and all constants that involve symbol refs\n@@ -432,6 +389,7 @@ convert_memory_address_addr_space (machine_mode to_mode, rtx x, addr_space_t as)\n   return convert_memory_address_addr_space_1 (to_mode, x, as, false);\n }\n \f\n+\n /* Return something equivalent to X but valid as a memory address for something\n    of mode MODE in the named address space AS.  When X is not itself valid,\n    this works by copying X or subexpressions of it into registers.  */"}, {"sha": "042bec743c6dcd84939a1132b0608a89361547a5", "filename": "gcc/explow.h", "status": "added", "additions": 339, "deletions": 0, "changes": 339, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexplow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexplow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -0,0 +1,339 @@\n+/* Export function prototypes from explow.c.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_EXPLOW_H\n+#define GCC_EXPLOW_H\n+\n+/* Return a memory reference like MEMREF, but which is known to have a\n+   valid address.  */\n+extern rtx validize_mem (rtx);\n+\n+extern rtx use_anchored_address (rtx);\n+\n+/* Copy given rtx to a new temp reg and return that.  */\n+extern rtx copy_to_reg (rtx);\n+\n+/* Like copy_to_reg but always make the reg Pmode.  */\n+extern rtx copy_addr_to_reg (rtx);\n+\n+/* Like copy_to_reg but always make the reg the specified mode MODE.  */\n+extern rtx copy_to_mode_reg (machine_mode, rtx);\n+\n+/* Copy given rtx to given temp reg and return that.  */\n+extern rtx copy_to_suggested_reg (rtx, rtx, machine_mode);\n+\n+/* Copy a value to a register if it isn't already a register.\n+   Args are mode (in case value is a constant) and the value.  */\n+extern rtx force_reg (machine_mode, rtx);\n+\n+/* Return given rtx, copied into a new temp reg if it was in memory.  */\n+extern rtx force_not_mem (rtx);\n+\n+/* Return mode and signedness to use when an argument or result in the\n+   given mode is promoted.  */\n+extern machine_mode promote_function_mode (const_tree, machine_mode, int *,\n+\t\t\t\t\t        const_tree, int);\n+\n+/* Return mode and signedness to use when an object in the given mode\n+   is promoted.  */\n+extern machine_mode promote_mode (const_tree, machine_mode, int *);\n+\n+/* Return mode and signedness to use when object is promoted.  */\n+machine_mode promote_decl_mode (const_tree, int *);\n+\n+/* Remove some bytes from the stack.  An rtx says how many.  */\n+extern void adjust_stack (rtx);\n+\n+/* Add some bytes to the stack.  An rtx says how many.  */\n+extern void anti_adjust_stack (rtx);\n+\n+/* Add some bytes to the stack while probing it.  An rtx says how many. */\n+extern void anti_adjust_stack_and_probe (rtx, bool);\n+\n+/* This enum is used for the following two functions.  */\n+enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};\n+\n+/* Save the stack pointer at the specified level.  */\n+extern void emit_stack_save (enum save_level, rtx *);\n+\n+/* Restore the stack pointer from a save area of the specified level.  */\n+extern void emit_stack_restore (enum save_level, rtx);\n+\n+/* Invoke emit_stack_save for the nonlocal_goto_save_area.  */\n+extern void update_nonlocal_goto_save_area (void);\n+\n+/* Allocate some space on the stack dynamically and return its address.  */\n+extern rtx allocate_dynamic_stack_space (rtx, unsigned, unsigned, bool);\n+\n+/* Emit one stack probe at ADDRESS, an address within the stack.  */\n+extern void emit_stack_probe (rtx);\n+\n+/* Probe a range of stack addresses from FIRST to FIRST+SIZE, inclusive.\n+   FIRST is a constant and size is a Pmode RTX.  These are offsets from\n+   the current stack pointer.  STACK_GROWS_DOWNWARD says whether to add\n+   or subtract them from the stack pointer.  */\n+extern void probe_stack_range (HOST_WIDE_INT, rtx);\n+\n+/* Return an rtx that refers to the value returned by a library call\n+   in its original home.  This becomes invalid if any more code is emitted.  */\n+extern rtx hard_libcall_value (machine_mode, rtx);\n+\n+/* Return an rtx that refers to the value returned by a function\n+   in its original home.  This becomes invalid if any more code is emitted.  */\n+extern rtx hard_function_value (const_tree, const_tree, const_tree, int);\n+\n+/* Convert arg to a valid memory address for specified machine mode that points\n+   to a specific named address space, by emitting insns to perform arithmetic\n+   if necessary.  */\n+extern rtx memory_address_addr_space (machine_mode, rtx, addr_space_t);\n+\n+extern rtx eliminate_constant_term (rtx, rtx *);\n+\n+/* Like memory_address_addr_space, except assume the memory address points to\n+   the generic named address space.  */\n+#define memory_address(MODE,RTX) \\\n+\tmemory_address_addr_space ((MODE), (RTX), ADDR_SPACE_GENERIC)\n+\n+#endif /* GCC_EXPLOW_H */\n+/* Export function prototypes from explow.c.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_EXPLOW_H\n+#define GCC_EXPLOW_H\n+\n+/* Return a memory reference like MEMREF, but which is known to have a\n+   valid address.  */\n+extern rtx validize_mem (rtx);\n+\n+extern rtx use_anchored_address (rtx);\n+\n+/* Copy given rtx to a new temp reg and return that.  */\n+extern rtx copy_to_reg (rtx);\n+\n+/* Like copy_to_reg but always make the reg Pmode.  */\n+extern rtx copy_addr_to_reg (rtx);\n+\n+/* Like copy_to_reg but always make the reg the specified mode MODE.  */\n+extern rtx copy_to_mode_reg (machine_mode, rtx);\n+\n+/* Copy given rtx to given temp reg and return that.  */\n+extern rtx copy_to_suggested_reg (rtx, rtx, machine_mode);\n+\n+/* Copy a value to a register if it isn't already a register.\n+   Args are mode (in case value is a constant) and the value.  */\n+extern rtx force_reg (machine_mode, rtx);\n+\n+/* Return given rtx, copied into a new temp reg if it was in memory.  */\n+extern rtx force_not_mem (rtx);\n+\n+/* Return mode and signedness to use when an argument or result in the\n+   given mode is promoted.  */\n+extern machine_mode promote_function_mode (const_tree, machine_mode, int *,\n+\t\t\t\t\t        const_tree, int);\n+\n+/* Return mode and signedness to use when an object in the given mode\n+   is promoted.  */\n+extern machine_mode promote_mode (const_tree, machine_mode, int *);\n+\n+/* Return mode and signedness to use when object is promoted.  */\n+machine_mode promote_decl_mode (const_tree, int *);\n+\n+/* Remove some bytes from the stack.  An rtx says how many.  */\n+extern void adjust_stack (rtx);\n+\n+/* Add some bytes to the stack.  An rtx says how many.  */\n+extern void anti_adjust_stack (rtx);\n+\n+/* Add some bytes to the stack while probing it.  An rtx says how many. */\n+extern void anti_adjust_stack_and_probe (rtx, bool);\n+\n+/* This enum is used for the following two functions.  */\n+enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};\n+\n+/* Save the stack pointer at the specified level.  */\n+extern void emit_stack_save (enum save_level, rtx *);\n+\n+/* Restore the stack pointer from a save area of the specified level.  */\n+extern void emit_stack_restore (enum save_level, rtx);\n+\n+/* Invoke emit_stack_save for the nonlocal_goto_save_area.  */\n+extern void update_nonlocal_goto_save_area (void);\n+\n+/* Allocate some space on the stack dynamically and return its address.  */\n+extern rtx allocate_dynamic_stack_space (rtx, unsigned, unsigned, bool);\n+\n+/* Emit one stack probe at ADDRESS, an address within the stack.  */\n+extern void emit_stack_probe (rtx);\n+\n+/* Probe a range of stack addresses from FIRST to FIRST+SIZE, inclusive.\n+   FIRST is a constant and size is a Pmode RTX.  These are offsets from\n+   the current stack pointer.  STACK_GROWS_DOWNWARD says whether to add\n+   or subtract them from the stack pointer.  */\n+extern void probe_stack_range (HOST_WIDE_INT, rtx);\n+\n+/* Return an rtx that refers to the value returned by a library call\n+   in its original home.  This becomes invalid if any more code is emitted.  */\n+extern rtx hard_libcall_value (machine_mode, rtx);\n+\n+/* Return an rtx that refers to the value returned by a function\n+   in its original home.  This becomes invalid if any more code is emitted.  */\n+extern rtx hard_function_value (const_tree, const_tree, const_tree, int);\n+\n+/* Convert arg to a valid memory address for specified machine mode that points\n+   to a specific named address space, by emitting insns to perform arithmetic\n+   if necessary.  */\n+extern rtx memory_address_addr_space (machine_mode, rtx, addr_space_t);\n+\n+extern rtx eliminate_constant_term (rtx, rtx *);\n+\n+/* Like memory_address_addr_space, except assume the memory address points to\n+   the generic named address space.  */\n+#define memory_address(MODE,RTX) \\\n+\tmemory_address_addr_space ((MODE), (RTX), ADDR_SPACE_GENERIC)\n+\n+#endif /* GCC_EXPLOW_H */\n+/* Export function prototypes from explow.c.\n+   Copyright (C) 2015-2016 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_EXPLOW_H\n+#define GCC_EXPLOW_H\n+\n+/* Return a memory reference like MEMREF, but which is known to have a\n+   valid address.  */\n+extern rtx validize_mem (rtx);\n+\n+extern rtx use_anchored_address (rtx);\n+\n+/* Copy given rtx to a new temp reg and return that.  */\n+extern rtx copy_to_reg (rtx);\n+\n+/* Like copy_to_reg but always make the reg Pmode.  */\n+extern rtx copy_addr_to_reg (rtx);\n+\n+/* Like copy_to_reg but always make the reg the specified mode MODE.  */\n+extern rtx copy_to_mode_reg (machine_mode, rtx);\n+\n+/* Copy given rtx to given temp reg and return that.  */\n+extern rtx copy_to_suggested_reg (rtx, rtx, machine_mode);\n+\n+/* Copy a value to a register if it isn't already a register.\n+   Args are mode (in case value is a constant) and the value.  */\n+extern rtx force_reg (machine_mode, rtx);\n+\n+/* Return given rtx, copied into a new temp reg if it was in memory.  */\n+extern rtx force_not_mem (rtx);\n+\n+/* Return mode and signedness to use when an argument or result in the\n+   given mode is promoted.  */\n+extern machine_mode promote_function_mode (const_tree, machine_mode, int *,\n+\t\t\t\t\t        const_tree, int);\n+\n+/* Return mode and signedness to use when an object in the given mode\n+   is promoted.  */\n+extern machine_mode promote_mode (const_tree, machine_mode, int *);\n+\n+/* Return mode and signedness to use when object is promoted.  */\n+machine_mode promote_decl_mode (const_tree, int *);\n+\n+/* Remove some bytes from the stack.  An rtx says how many.  */\n+extern void adjust_stack (rtx);\n+\n+/* Add some bytes to the stack.  An rtx says how many.  */\n+extern void anti_adjust_stack (rtx);\n+\n+/* Add some bytes to the stack while probing it.  An rtx says how many. */\n+extern void anti_adjust_stack_and_probe (rtx, bool);\n+\n+/* This enum is used for the following two functions.  */\n+enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};\n+\n+/* Save the stack pointer at the specified level.  */\n+extern void emit_stack_save (enum save_level, rtx *);\n+\n+/* Restore the stack pointer from a save area of the specified level.  */\n+extern void emit_stack_restore (enum save_level, rtx);\n+\n+/* Invoke emit_stack_save for the nonlocal_goto_save_area.  */\n+extern void update_nonlocal_goto_save_area (void);\n+\n+/* Allocate some space on the stack dynamically and return its address.  */\n+extern rtx allocate_dynamic_stack_space (rtx, unsigned, unsigned, bool);\n+\n+/* Emit one stack probe at ADDRESS, an address within the stack.  */\n+extern void emit_stack_probe (rtx);\n+\n+/* Probe a range of stack addresses from FIRST to FIRST+SIZE, inclusive.\n+   FIRST is a constant and size is a Pmode RTX.  These are offsets from\n+   the current stack pointer.  STACK_GROWS_DOWNWARD says whether to add\n+   or subtract them from the stack pointer.  */\n+extern void probe_stack_range (HOST_WIDE_INT, rtx);\n+\n+/* Return an rtx that refers to the value returned by a library call\n+   in its original home.  This becomes invalid if any more code is emitted.  */\n+extern rtx hard_libcall_value (machine_mode, rtx);\n+\n+/* Return an rtx that refers to the value returned by a function\n+   in its original home.  This becomes invalid if any more code is emitted.  */\n+extern rtx hard_function_value (const_tree, const_tree, const_tree, int);\n+\n+/* Convert arg to a valid memory address for specified machine mode that points\n+   to a specific named address space, by emitting insns to perform arithmetic\n+   if necessary.  */\n+extern rtx memory_address_addr_space (machine_mode, rtx, addr_space_t);\n+\n+extern rtx eliminate_constant_term (rtx, rtx *);\n+\n+/* Like memory_address_addr_space, except assume the memory address points to\n+   the generic named address space.  */\n+#define memory_address(MODE,RTX) \\\n+\tmemory_address_addr_space ((MODE), (RTX), ADDR_SPACE_GENERIC)\n+\n+#endif /* GCC_EXPLOW_H */"}, {"sha": "480601cf48276a3f896e6ab1c22ffecc3f43830e", "filename": "gcc/expmed.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -40,6 +40,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"insn-config.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n@@ -49,7 +62,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"df.h\"\n #include \"target.h\"\n-#include \"expmed.h\"\n \n struct target_expmed default_target_expmed;\n #if SWITCHABLE_TARGET"}, {"sha": "e36e4f76cf654c510829cd6abd393ac116ad3b23", "filename": "gcc/expmed.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpmed.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpmed.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -671,4 +671,36 @@ extern rtx emit_cstore (rtx target, enum insn_code icode, enum rtx_code code,\n \t\t\tenum machine_mode mode, enum machine_mode compare_mode,\n \t\t\tint unsignedp, rtx x, rtx y, int normalizep,\n \t\t\tenum machine_mode target_mode);\n+\n+/* Arguments MODE, RTX: return an rtx for the negation of that value.\n+   May emit insns.  */\n+extern rtx negate_rtx (machine_mode, rtx);\n+\n+/* Expand a logical AND operation.  */\n+extern rtx expand_and (machine_mode, rtx, rtx, rtx);\n+\n+/* Emit a store-flag operation.  */\n+extern rtx emit_store_flag (rtx, enum rtx_code, rtx, rtx, machine_mode,\n+\t\t\t    int, int);\n+\n+/* Like emit_store_flag, but always succeeds.  */\n+extern rtx emit_store_flag_force (rtx, enum rtx_code, rtx, rtx,\n+\t\t\t\t  machine_mode, int, int);\n+\n+/* Choose a minimal N + 1 bit approximation to 1/D that can be used to\n+   replace division by D, and put the least significant N bits of the result\n+   in *MULTIPLIER_PTR and return the most significant bit.  */\n+extern unsigned HOST_WIDE_INT choose_multiplier (unsigned HOST_WIDE_INT, int,\n+\t\t\t\t\t\t int, unsigned HOST_WIDE_INT *,\n+\t\t\t\t\t\t int *, int *);\n+\n+#ifdef TREE_CODE\n+extern rtx expand_variable_shift (enum tree_code, machine_mode,\n+\t\t\t\t  rtx, tree, rtx, int);\n+extern rtx expand_shift (enum tree_code, machine_mode, rtx, int, rtx,\n+\t\t\t     int);\n+extern rtx expand_divmod (int, enum tree_code, machine_mode, rtx, rtx,\n+\t\t\t  rtx, int);\n #endif\n+\n+#endif  // EXPMED_H"}, {"sha": "89ca12945ff8fdb230caaa6d62a5631dea0d7a12", "filename": "gcc/expr.c", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,10 +41,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n /* Include expr.h after insn-config.h so we get HAVE_conditional_move.  */\n #include \"expr.h\"\n #include \"insn-codes.h\"\n@@ -173,6 +182,8 @@ static void emit_single_push_insn (machine_mode, rtx, tree);\n #endif\n static void do_tablejump (rtx, machine_mode, rtx, rtx, rtx, int);\n static rtx const_vector_from_tree (tree);\n+static tree tree_expr_size (const_tree);\n+static HOST_WIDE_INT int_expr_size (tree);\n \n \f\n /* This is run to set up which modes can be used\n@@ -11438,4 +11449,57 @@ get_personality_function (tree decl)\n   return XEXP (DECL_RTL (personality), 0);\n }\n \n+/* Returns a tree for the size of EXP in bytes.  */\n+\n+static tree\n+tree_expr_size (const_tree exp)\n+{\n+  if (DECL_P (exp)\n+      && DECL_SIZE_UNIT (exp) != 0)\n+    return DECL_SIZE_UNIT (exp);\n+  else\n+    return size_in_bytes (TREE_TYPE (exp));\n+}\n+\n+/* Return an rtx for the size in bytes of the value of EXP.  */\n+\n+rtx\n+expr_size (tree exp)\n+{\n+  tree size;\n+\n+  if (TREE_CODE (exp) == WITH_SIZE_EXPR)\n+    size = TREE_OPERAND (exp, 1);\n+  else\n+    {\n+      size = tree_expr_size (exp);\n+      gcc_assert (size);\n+      gcc_assert (size == SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, exp));\n+    }\n+\n+  return expand_expr (size, NULL_RTX, TYPE_MODE (sizetype), EXPAND_NORMAL);\n+}\n+\n+/* Return a wide integer for the size in bytes of the value of EXP, or -1\n+   if the size can vary or is larger than an integer.  */\n+\n+static HOST_WIDE_INT\n+int_expr_size (tree exp)\n+{\n+  tree size;\n+\n+  if (TREE_CODE (exp) == WITH_SIZE_EXPR)\n+    size = TREE_OPERAND (exp, 1);\n+  else\n+    {\n+      size = tree_expr_size (exp);\n+      gcc_assert (size);\n+    }\n+\n+  if (size == 0 || !tree_fits_shwi_p (size))\n+    return -1;\n+\n+  return tree_to_shwi (size);\n+}\n+\n #include \"gt-expr.h\""}, {"sha": "867852e1153de4c897ed59792f25d79fb3e1880f", "filename": "gcc/expr.h", "status": "modified", "additions": 5, "deletions": 326, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -20,25 +20,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_EXPR_H\n #define GCC_EXPR_H\n \n-/* For inhibit_defer_pop */\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n-#include \"tm.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n-/* For XEXP, GEN_INT, rtx_code */\n-#include \"rtl.h\"\n-/* For optimize_size */\n-#include \"flags.h\"\n-/* For tree_fits_[su]hwi_p, tree_to_[su]hwi, fold_convert, size_binop,\n-   ssize_int, TREE_CODE, TYPE_SIZE, int_size_in_bytes,    */\n-#include \"tree-core.h\"\n-/* For GET_MODE_BITSIZE, word_mode */\n-#include \"insn-config.h\"\n-\n /* This is the 4th arg to `expand_expr'.\n    EXPAND_STACK_PARM means we are possibly expanding a call param onto\n    the stack.\n@@ -73,32 +54,6 @@ typedef struct separate_ops\n   tree op0, op1, op2;\n } *sepops;\n \f\n-/* Functions from expmed.c:  */\n-\n-/* Arguments MODE, RTX: return an rtx for the negation of that value.\n-   May emit insns.  */\n-extern rtx negate_rtx (machine_mode, rtx);\n-\n-/* Expand a logical AND operation.  */\n-extern rtx expand_and (machine_mode, rtx, rtx, rtx);\n-\n-/* Emit a store-flag operation.  */\n-extern rtx emit_store_flag (rtx, enum rtx_code, rtx, rtx, machine_mode,\n-\t\t\t    int, int);\n-\n-/* Like emit_store_flag, but always succeeds.  */\n-extern rtx emit_store_flag_force (rtx, enum rtx_code, rtx, rtx,\n-\t\t\t\t  machine_mode, int, int);\n-\n-/* Choose a minimal N + 1 bit approximation to 1/D that can be used to\n-   replace division by D, and put the least significant N bits of the result\n-   in *MULTIPLIER_PTR and return the most significant bit.  */\n-extern unsigned HOST_WIDE_INT choose_multiplier (unsigned HOST_WIDE_INT, int,\n-\t\t\t\t\t\t int, unsigned HOST_WIDE_INT *,\n-\t\t\t\t\t\t int *, int *);\n-\f\n-/* Functions from expr.c:  */\n-\n /* This is run during target initialization to set up which modes can be\n    used directly in memory and to initialize the block move optab.  */\n extern void init_expr_target (void);\n@@ -305,301 +260,20 @@ expand_normal (tree exp)\n   return expand_expr_real (exp, NULL_RTX, VOIDmode, EXPAND_NORMAL, NULL, false);\n }\n \n-/* At the start of a function, record that we have no previously-pushed\n-   arguments waiting to be popped.  */\n-extern void init_pending_stack_adjust (void);\n-\n-/* Discard any pending stack adjustment.  */\n-extern void discard_pending_stack_adjust (void);\n-\n-/* When exiting from function, if safe, clear out any pending stack adjust\n-   so the adjustment won't get done.  */\n-extern void clear_pending_stack_adjust (void);\n-\n-/* Pop any previously-pushed arguments that have not been popped yet.  */\n-extern void do_pending_stack_adjust (void);\n-\n-/* Struct for saving/restoring of pending_stack_adjust/stack_pointer_delta\n-   values.  */\n-\n-struct saved_pending_stack_adjust\n-{\n-  /* Saved value of pending_stack_adjust.  */\n-  int x_pending_stack_adjust;\n-\n-  /* Saved value of stack_pointer_delta.  */\n-  int x_stack_pointer_delta;\n-};\n-\n-/* Remember pending_stack_adjust/stack_pointer_delta.\n-   To be used around code that may call do_pending_stack_adjust (),\n-   but the generated code could be discarded e.g. using delete_insns_since.  */\n-\n-extern void save_pending_stack_adjust (saved_pending_stack_adjust *);\n-\n-/* Restore the saved pending_stack_adjust/stack_pointer_delta.  */\n-\n-extern void restore_pending_stack_adjust (saved_pending_stack_adjust *);\n \n /* Return the tree node and offset if a given argument corresponds to\n    a string constant.  */\n extern tree string_constant (tree, tree *);\n \n-/* Generate code to evaluate EXP and jump to LABEL if the value is zero.  */\n-extern void jumpifnot (tree, rtx, int);\n-extern void jumpifnot_1 (enum tree_code, tree, tree, rtx, int);\n-\n-/* Generate code to evaluate EXP and jump to LABEL if the value is nonzero.  */\n-extern void jumpif (tree, rtx, int);\n-extern void jumpif_1 (enum tree_code, tree, tree, rtx, int);\n-\n-/* Generate code to evaluate EXP and jump to IF_FALSE_LABEL if\n-   the result is zero, or IF_TRUE_LABEL if the result is one.  */\n-extern void do_jump (tree, rtx, rtx, int);\n-extern void do_jump_1 (enum tree_code, tree, tree, rtx, rtx, int);\n-\n-extern void do_compare_rtx_and_jump (rtx, rtx, enum rtx_code, int,\n-\t\t\t\t     machine_mode, rtx, rtx, rtx, int);\n-\n /* Two different ways of generating switch statements.  */\n extern int try_casesi (tree, tree, tree, tree, rtx, rtx, rtx, int);\n extern int try_tablejump (tree, tree, tree, tree, rtx, rtx, int);\n \n-/* Functions from alias.c */\n-#include \"alias.h\"\n-\n-\f\n-/* rtl.h and tree.h were included.  */\n-/* Return an rtx for the size in bytes of the value of an expr.  */\n-extern rtx expr_size (tree);\n-\n-/* Return a wide integer for the size in bytes of the value of EXP, or -1\n-   if the size can vary or is larger than an integer.  */\n-extern HOST_WIDE_INT int_expr_size (tree);\n-\n-/* Return an rtx that refers to the value returned by a function\n-   in its original home.  This becomes invalid if any more code is emitted.  */\n-extern rtx hard_function_value (const_tree, const_tree, const_tree, int);\n-\n-extern rtx prepare_call_address (tree, rtx, rtx, rtx *, int, int);\n-\n-extern bool shift_return_value (machine_mode, bool, rtx);\n-\n-extern rtx expand_call (tree, rtx, int);\n-\n-extern void fixup_tail_calls (void);\n-\n-#ifdef TREE_CODE\n-extern rtx expand_variable_shift (enum tree_code, machine_mode,\n-\t\t\t\t  rtx, tree, rtx, int);\n-extern rtx expand_shift (enum tree_code, machine_mode, rtx, int, rtx,\n-\t\t\t     int);\n-extern rtx expand_divmod (int, enum tree_code, machine_mode, rtx, rtx,\n-\t\t\t  rtx, int);\n-#endif\n-\n-/* Return the CODE_LABEL rtx for a LABEL_DECL, creating it if necessary.  */\n-extern rtx label_rtx (tree);\n-\n-/* As label_rtx, but additionally the label is placed on the forced label\n-   list of its containing function (i.e. it is treated as reachable even\n-   if how is not obvious).  */\n-extern rtx force_label_rtx (tree);\n-\n-/* Return an rtx like arg but sans any constant terms.\n-   Returns the original rtx if it has no constant terms.\n-   The constant terms are added and stored via a second arg.  */\n-extern rtx eliminate_constant_term (rtx, rtx *);\n-\n-/* Convert arg to a valid memory address for specified machine mode that points\n-   to a specific named address space, by emitting insns to perform arithmetic\n-   if necessary.  */\n-extern rtx memory_address_addr_space (machine_mode, rtx, addr_space_t);\n-\n-/* Like memory_address_addr_space, except assume the memory address points to\n-   the generic named address space.  */\n-#define memory_address(MODE,RTX) \\\n-\tmemory_address_addr_space ((MODE), (RTX), ADDR_SPACE_GENERIC)\n-\n-/* Return a memory reference like MEMREF, but with its mode changed\n-   to MODE and its address changed to ADDR.\n-   (VOIDmode means don't change the mode.\n-   NULL for ADDR means don't change the address.)  */\n-extern rtx change_address (rtx, machine_mode, rtx);\n-\n-/* Return a memory reference like MEMREF, but with its mode changed\n-   to MODE and its address offset by OFFSET bytes.  */\n-#define adjust_address(MEMREF, MODE, OFFSET) \\\n-  adjust_address_1 (MEMREF, MODE, OFFSET, 1, 1, 0, 0)\n-\n-/* Likewise, but the reference is not required to be valid.  */\n-#define adjust_address_nv(MEMREF, MODE, OFFSET) \\\n-  adjust_address_1 (MEMREF, MODE, OFFSET, 0, 1, 0, 0)\n-\n-/* Return a memory reference like MEMREF, but with its mode changed\n-   to MODE and its address offset by OFFSET bytes.  Assume that it's\n-   for a bitfield and conservatively drop the underlying object if we\n-   cannot be sure to stay within its bounds.  */\n-#define adjust_bitfield_address(MEMREF, MODE, OFFSET) \\\n-  adjust_address_1 (MEMREF, MODE, OFFSET, 1, 1, 1, 0)\n-\n-/* As for adjust_bitfield_address, but specify that the width of\n-   BLKmode accesses is SIZE bytes.  */\n-#define adjust_bitfield_address_size(MEMREF, MODE, OFFSET, SIZE) \\\n-  adjust_address_1 (MEMREF, MODE, OFFSET, 1, 1, 1, SIZE)\n-\n-/* Likewise, but the reference is not required to be valid.  */\n-#define adjust_bitfield_address_nv(MEMREF, MODE, OFFSET) \\\n-  adjust_address_1 (MEMREF, MODE, OFFSET, 0, 1, 1, 0)\n-\n-/* Return a memory reference like MEMREF, but with its mode changed\n-   to MODE and its address changed to ADDR, which is assumed to be\n-   increased by OFFSET bytes from MEMREF.  */\n-#define adjust_automodify_address(MEMREF, MODE, ADDR, OFFSET) \\\n-  adjust_automodify_address_1 (MEMREF, MODE, ADDR, OFFSET, 1)\n-\n-/* Likewise, but the reference is not required to be valid.  */\n-#define adjust_automodify_address_nv(MEMREF, MODE, ADDR, OFFSET) \\\n-  adjust_automodify_address_1 (MEMREF, MODE, ADDR, OFFSET, 0)\n-\n-extern rtx adjust_address_1 (rtx, machine_mode, HOST_WIDE_INT, int, int,\n-\t\t\t     int, HOST_WIDE_INT);\n-extern rtx adjust_automodify_address_1 (rtx, machine_mode, rtx,\n-\t\t\t\t\tHOST_WIDE_INT, int);\n-\n-/* Return a memory reference like MEMREF, but whose address is changed by\n-   adding OFFSET, an RTX, to it.  POW2 is the highest power of two factor\n-   known to be in OFFSET (possibly 1).  */\n-extern rtx offset_address (rtx, rtx, unsigned HOST_WIDE_INT);\n-\n-/* Definitions from emit-rtl.c */\n-#include \"emit-rtl.h\"\n-\n-/* Return a memory reference like MEMREF, but with its mode widened to\n-   MODE and adjusted by OFFSET.  */\n-extern rtx widen_memory_access (rtx, machine_mode, HOST_WIDE_INT);\n-\n-/* Return a memory reference like MEMREF, but which is known to have a\n-   valid address.  */\n-extern rtx validize_mem (rtx);\n-\n-extern rtx use_anchored_address (rtx);\n-\n-/* Given REF, a MEM, and T, either the type of X or the expression\n-   corresponding to REF, set the memory attributes.  OBJECTP is nonzero\n-   if we are making a new object of this type.  */\n-extern void set_mem_attributes (rtx, tree, int);\n-\n-/* Similar, except that BITPOS has not yet been applied to REF, so if\n-   we alter MEM_OFFSET according to T then we should subtract BITPOS\n-   expecting that it'll be added back in later.  */\n-extern void set_mem_attributes_minus_bitpos (rtx, tree, int, HOST_WIDE_INT);\n-\n-/* Return OFFSET if XEXP (MEM, 0) - OFFSET is known to be ALIGN\n-   bits aligned for 0 <= OFFSET < ALIGN / BITS_PER_UNIT, or\n-   -1 if not known.  */\n-extern int get_mem_align_offset (rtx, unsigned int);\n-\n-/* Assemble the static constant template for function entry trampolines.  */\n-extern rtx assemble_trampoline_template (void);\n-\n-/* Copy given rtx to a new temp reg and return that.  */\n-extern rtx copy_to_reg (rtx);\n-\n-/* Like copy_to_reg but always make the reg Pmode.  */\n-extern rtx copy_addr_to_reg (rtx);\n-\n-/* Like copy_to_reg but always make the reg the specified mode MODE.  */\n-extern rtx copy_to_mode_reg (machine_mode, rtx);\n-\n-/* Copy given rtx to given temp reg and return that.  */\n-extern rtx copy_to_suggested_reg (rtx, rtx, machine_mode);\n-\n-/* Copy a value to a register if it isn't already a register.\n-   Args are mode (in case value is a constant) and the value.  */\n-extern rtx force_reg (machine_mode, rtx);\n-\n-/* Return given rtx, copied into a new temp reg if it was in memory.  */\n-extern rtx force_not_mem (rtx);\n-\n-/* Return mode and signedness to use when an argument or result in the\n-   given mode is promoted.  */\n-extern machine_mode promote_function_mode (const_tree, machine_mode, int *,\n-\t\t\t\t\t        const_tree, int);\n-\n-/* Return mode and signedness to use when an object in the given mode\n-   is promoted.  */\n-extern machine_mode promote_mode (const_tree, machine_mode, int *);\n-\n-/* Return mode and signedness to use when object is promoted.  */\n-machine_mode promote_decl_mode (const_tree, int *);\n-\n-/* Remove some bytes from the stack.  An rtx says how many.  */\n-extern void adjust_stack (rtx);\n-\n-/* Add some bytes to the stack.  An rtx says how many.  */\n-extern void anti_adjust_stack (rtx);\n-\n-/* Add some bytes to the stack while probing it.  An rtx says how many. */\n-extern void anti_adjust_stack_and_probe (rtx, bool);\n-\n-/* This enum is used for the following two functions.  */\n-enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};\n-\n-/* Save the stack pointer at the specified level.  */\n-extern void emit_stack_save (enum save_level, rtx *);\n-\n-/* Restore the stack pointer from a save area of the specified level.  */\n-extern void emit_stack_restore (enum save_level, rtx);\n-\n-/* Invoke emit_stack_save for the nonlocal_goto_save_area.  */\n-extern void update_nonlocal_goto_save_area (void);\n-\n-/* Allocate some space on the stack dynamically and return its address.  */\n-extern rtx allocate_dynamic_stack_space (rtx, unsigned, unsigned, bool);\n-\n-/* Emit one stack probe at ADDRESS, an address within the stack.  */\n-extern void emit_stack_probe (rtx);\n-\n-/* Probe a range of stack addresses from FIRST to FIRST+SIZE, inclusive.\n-   FIRST is a constant and size is a Pmode RTX.  These are offsets from\n-   the current stack pointer.  STACK_GROWS_DOWNWARD says whether to add\n-   or subtract them from the stack pointer.  */\n-extern void probe_stack_range (HOST_WIDE_INT, rtx);\n-\n-/* Return an rtx that refers to the value returned by a library call\n-   in its original home.  This becomes invalid if any more code is emitted.  */\n-extern rtx hard_libcall_value (machine_mode, rtx);\n-\n-extern void store_bit_field (rtx, unsigned HOST_WIDE_INT,\n-\t\t\t     unsigned HOST_WIDE_INT,\n-\t\t\t     unsigned HOST_WIDE_INT,\n-\t\t\t     unsigned HOST_WIDE_INT,\n-\t\t\t     machine_mode, rtx);\n-extern rtx extract_bit_field (rtx, unsigned HOST_WIDE_INT,\n-\t\t\t      unsigned HOST_WIDE_INT, int, rtx,\n-\t\t\t      machine_mode, machine_mode);\n-extern rtx extract_low_bits (machine_mode, machine_mode, rtx);\n-extern rtx expand_mult (machine_mode, rtx, rtx, rtx, int);\n-extern rtx expand_mult_highpart_adjust (machine_mode, rtx, rtx, rtx, rtx, int);\n-\n-extern rtx assemble_static_space (unsigned HOST_WIDE_INT);\n extern int safe_from_p (const_rtx, tree, int);\n-extern bool split_comparison (enum rtx_code, machine_mode,\n-\t\t\t      enum rtx_code *, enum rtx_code *);\n \n /* Get the personality libfunc for a function decl.  */\n rtx get_personality_function (tree);\n \n-\n-/* In stmt.c */\n-\n-/* Expand a GIMPLE_SWITCH statement.  */\n-extern void expand_case (gswitch *);\n-\n-/* Like expand_case but special-case for SJLJ exception dispatching.  */\n-extern void expand_sjlj_dispatch_table (rtx, vec<tree> );\n-\n /* Determine whether the LEN bytes can be moved by using several move\n    instructions.  Return nonzero if a call to move_by_pieces should\n    succeed.  */\n@@ -621,4 +295,9 @@ extern tree component_ref_field_offset (tree);\n \n extern void expand_operands (tree, tree, rtx, rtx*, rtx*,\n \t\t\t     enum expand_modifier);\n+\n+/* rtl.h and tree.h were included.  */\n+/* Return an rtx for the size in bytes of the value of an expr.  */\n+extern rtx expr_size (tree);\n+\n #endif /* GCC_EXPR_H */"}, {"sha": "1fa93d9036dabff8e8288556c684990414031d45", "filename": "gcc/final.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -68,7 +68,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"output.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"rtl-error.h\"\n #include \"toplev.h\" /* exact_log2, floor_log2 */\n@@ -82,6 +81,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"targhooks.h\"\n #include \"debug.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"hash-map.h\""}, {"sha": "8974dc0b91a1bda7ac1d8d45be0c89d576785018", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -61,6 +61,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"realmpfr.h\"\n #include \"rtl.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"target.h\"\n@@ -69,11 +82,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"md5.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hashtab.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "2c3d1426c1877ab77e886fe4be3c06af86bfc940", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -53,18 +53,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"except.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"libfuncs.h\"\n #include \"regs.h\"\n-#include \"insn-config.h\"\n #include \"recog.h\"\n #include \"output.h\"\n #include \"tm_p.h\""}, {"sha": "e03b36c3a8529d23a8a0ba92563de099214d8dea", "filename": "gcc/gcse.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -157,7 +157,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -166,6 +165,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lcm.h\"\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"ggc.h\""}, {"sha": "1bcb66b682b2d1f2bc9a36f3fbafc722ee052eeb", "filename": "gcc/genemit.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -811,19 +811,23 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n   printf (\"#include \\\"tm_p.h\\\"\\n\");\n   printf (\"#include \\\"hashtab.h\\\"\\n\");\n-  printf (\"#include \\\"hash-set.h\\\"\\n\");\n-  printf (\"#include \\\"vec.h\\\"\\n\");\n-  printf (\"#include \\\"machmode.h\\\"\\n\");\n   printf (\"#include \\\"hard-reg-set.h\\\"\\n\");\n-  printf (\"#include \\\"input.h\\\"\\n\");\n   printf (\"#include \\\"function.h\\\"\\n\");\n+  printf (\"#include \\\"flags.h\\\"\\n\");\n+  printf (\"#include \\\"statistics.h\\\"\\n\");\n+  printf (\"#include \\\"real.h\\\"\\n\");\n+  printf (\"#include \\\"fixed-value.h\\\"\\n\");\n+  printf (\"#include \\\"insn-config.h\\\"\\n\");\n+  printf (\"#include \\\"expmed.h\\\"\\n\");\n+  printf (\"#include \\\"dojump.h\\\"\\n\");\n+  printf (\"#include \\\"explow.h\\\"\\n\");\n+  printf (\"#include \\\"emit-rtl.h\\\"\\n\");\n+  printf (\"#include \\\"stmt.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"insn-codes.h\\\"\\n\");\n   printf (\"#include \\\"optabs.h\\\"\\n\");\n   printf (\"#include \\\"dfp.h\\\"\\n\");\n-  printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n-  printf (\"#include \\\"insn-config.h\\\"\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\");\n   printf (\"#include \\\"predict.h\\\"\\n\");\n   printf (\"#include \\\"basic-block.h\\\"\\n\");"}, {"sha": "daa56aa370ec6c93024e2c541aa10a6c33e2c597", "filename": "gcc/generic-match-head.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgeneric-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgeneric-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgeneric-match-head.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n@@ -50,6 +49,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssanames.h\"\n #include \"gimple-fold.h\"\n #include \"gimple-iterator.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"builtins.h\""}, {"sha": "02012d54506b607d6b4e5c4b682ca7050fb99000", "filename": "gcc/gengtype.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -1716,8 +1716,11 @@ open_base_files (void)\n       \"wide-int.h\", \"inchash.h\",\n       \"tree.h\", \"fold-const.h\", \"rtl.h\",\n       \"machmode.h\", \"tm.h\", \"hard-reg-set.h\", \"input.h\", \"predict.h\",\n-      \"function.h\", \"insn-config.h\", \"expr.h\", \"alloc-pool.h\",\n-      \"hard-reg-set.h\", \"basic-block.h\", \"cselib.h\", \"insn-addr.h\",\n+      \"function.h\", \"insn-config.h\", \"flags.h\", \"statistics.h\",\n+      \"real.h\", \"fixed-value.h\", \"tree.h\", \"expmed.h\", \"dojump.h\",\n+      \"explow.h\", \"calls.h\", \"emit-rtl.h\", \"varasm.h\", \"stmt.h\",\n+      \"expr.h\", \"alloc-pool.h\",\n+      \"basic-block.h\", \"cselib.h\", \"insn-addr.h\",\n       \"optabs.h\", \"libfuncs.h\", \"debug.h\", \"ggc.h\", \n       \"ggc.h\", \"dominance.h\", \"cfg.h\", \"basic-block.h\",\n       \"tree-ssa-alias.h\", \"internal-fn.h\", \"gimple-fold.h\", \"tree-eh.h\","}, {"sha": "7fa59eb89aa50af6d5d82e64495bd43fff168382", "filename": "gcc/genopinit.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgenopinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgenopinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenopinit.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -483,6 +483,17 @@ main (int argc, char **argv)\n \t   \"#include \\\"tm_p.h\\\"\\n\"\n \t   \"#include \\\"flags.h\\\"\\n\"\n \t   \"#include \\\"insn-config.h\\\"\\n\"\n+\t   \"#include \\\"hashtab.h\\\"\\n\"\n+\t   \"#include \\\"hard-reg-set.h\\\"\\n\"\n+\t   \"#include \\\"function.h\\\"\\n\"\n+\t   \"#include \\\"statistics.h\\\"\\n\"\n+\t   \"#include \\\"real.h\\\"\\n\"\n+\t   \"#include \\\"fixed-value.h\\\"\\n\"\n+\t   \"#include \\\"expmed.h\\\"\\n\"\n+\t   \"#include \\\"dojump.h\\\"\\n\"\n+\t   \"#include \\\"explow.h\\\"\\n\"\n+\t   \"#include \\\"emit-rtl.h\\\"\\n\"\n+\t   \"#include \\\"stmt.h\\\"\\n\"\n \t   \"#include \\\"expr.h\\\"\\n\"\n \t   \"#include \\\"insn-codes.h\\\"\\n\"\n \t   \"#include \\\"optabs.h\\\"\\n\""}, {"sha": "3be3e13fbead88e608779653bb4957855a5ebd3c", "filename": "gcc/genoutput.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -243,13 +243,22 @@ output_prologue (void)\n   printf (\"#include \\\"stor-layout.h\\\"\\n\");\n   printf (\"#include \\\"calls.h\\\"\\n\");\n   printf (\"#include \\\"rtl.h\\\"\\n\");\n+  printf (\"#include \\\"hashtab.h\\\"\\n\");\n+  printf (\"#include \\\"hard-reg-set.h\\\"\\n\");\n+  printf (\"#include \\\"function.h\\\"\\n\");\n+  printf (\"#include \\\"statistics.h\\\"\\n\");\n+  printf (\"#include \\\"real.h\\\"\\n\");\n+  printf (\"#include \\\"fixed-value.h\\\"\\n\");\n+  printf (\"#include \\\"insn-config.h\\\"\\n\");\n+  printf (\"#include \\\"expmed.h\\\"\\n\");\n+  printf (\"#include \\\"dojump.h\\\"\\n\");\n+  printf (\"#include \\\"explow.h\\\"\\n\");\n+  printf (\"#include \\\"emit-rtl.h\\\"\\n\");\n+  printf (\"#include \\\"stmt.h\\\"\\n\");\n   printf (\"#include \\\"expr.h\\\"\\n\");\n   printf (\"#include \\\"insn-codes.h\\\"\\n\");\n   printf (\"#include \\\"tm_p.h\\\"\\n\");\n-  printf (\"#include \\\"function.h\\\"\\n\");\n   printf (\"#include \\\"regs.h\\\"\\n\");\n-  printf (\"#include \\\"hard-reg-set.h\\\"\\n\");\n-  printf (\"#include \\\"insn-config.h\\\"\\n\\n\");\n   printf (\"#include \\\"conditions.h\\\"\\n\");\n   printf (\"#include \\\"insn-attr.h\\\"\\n\\n\");\n   printf (\"#include \\\"recog.h\\\"\\n\\n\");"}, {"sha": "baec077a53313a46d0a97321615cea1bd44e50e5", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -34,17 +34,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"fold-const.h\"\n #include \"stringpool.h\"\n-#include \"expr.h\"\n-#include \"stmt.h\"\n-#include \"stor-layout.h\"\n-#include \"flags.h\"\n #include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"stor-layout.h\"\n #include \"dumpfile.h\"\n #include \"bitmap.h\"\n #include \"predict.h\""}, {"sha": "0ca189dfe970d041b4b877c3b9df741d112fe3a8", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,11 +36,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"flags.h\"\n-#include \"tm.h\"\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n@@ -51,6 +49,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssanames.h\"\n #include \"gimple-fold.h\"\n #include \"gimple-iterator.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"builtins.h\""}, {"sha": "5b84bbecde9b669fae50354b3caf5a82a71ce39d", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -51,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -64,6 +63,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n #include \"stor-layout.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n@@ -75,7 +88,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"domwalk.h\"\n-#include \"expmed.h\"\n #include \"params.h\"\n #include \"tree-ssa-address.h\"\n #include \"tree-affine.h\""}, {"sha": "2472d86002cec590ab10d107d6715d2efedabd76", "filename": "gcc/gimplify.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,12 +35,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"fold-const.h\"\n-#include \"expr.h\"\n-#include \"predict.h\"\n+#include \"hashtab.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"predict.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n@@ -52,10 +65,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"stringpool.h\"\n-#include \"calls.h\"\n-#include \"varasm.h\"\n #include \"stor-layout.h\"\n-#include \"stmt.h\"\n #include \"print-tree.h\"\n #include \"tree-iterator.h\"\n #include \"tree-inline.h\""}, {"sha": "23b63ad1f5ea55ea89ddbf77717c9f7d256cc9b4", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -55,7 +55,6 @@ extern \"C\" {\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -88,6 +87,20 @@ extern \"C\" {\n #include \"tree-ssa-propagate.h\"\n \n #ifdef HAVE_isl\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"graphite-poly.h\"\n #include \"graphite-sese-to-poly.h\""}, {"sha": "ff2cb7bac45ad55fdd0735b5469ef9e03c2d7afd", "filename": "gcc/hw-doloop.c", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fhw-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fhw-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhw-doloop.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -25,16 +25,32 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n-#include \"hard-reg-set.h\"\n-#include \"regs.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n+#include \"vec.h\"\n #include \"machmode.h\"\n+#include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"regs.h\"\n+#include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\""}, {"sha": "a3e3e5c2313e5148ff4a9d3302f6d3b912a3cfd0", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -43,6 +43,21 @@\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"output.h\"\n #include \"insn-codes.h\""}, {"sha": "14b56f1f16b10001805c4964d36b71719b2f93cc", "filename": "gcc/init-regs.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Finit-regs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Finit-regs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finit-regs.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -33,16 +33,27 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n-#include \"flags.h\"\n #include \"df.h\"\n \n /* Check all of the uses of pseudo variables.  If any use that is MUST"}, {"sha": "0609e4a34c7c303429efbfef2a59a7274904d35f", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -34,19 +34,31 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"internal-fn.h\"\n #include \"stor-layout.h\"\n+#include \"hashtab.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"predict.h\"\n-#include \"tm.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n-#include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\""}, {"sha": "70f2bc88bd571d7df9ec41bc5944374da12163cb", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -128,15 +128,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"target.h\"\n #include \"hash-table.h\"\n-#include \"inchash.h\"\n #include \"tree-pretty-print.h\"\n #include \"ipa-utils.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "b35d66c9a454e541a9f98c90e4989a6727030124", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,14 +37,27 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-ssa.h\""}, {"sha": "bbd5724a5e912a91a74cd02e7406eb102e421b3b", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -69,7 +69,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -79,6 +78,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"gimple-iterator.h\"\n #include \"gimple-ssa.h\"\n@@ -109,7 +122,6 @@ along with GCC; see the file COPYING3.  If not see\n #include <list>\n #include \"ipa-icf-gimple.h\"\n #include \"ipa-icf.h\"\n-#include \"varasm.h\"\n \n using namespace ipa_icf_gimple;\n "}, {"sha": "5ad5e517fed7a5209b56dc05560f063a3b90ed06", "filename": "gcc/ipa-polymorphic-call.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-polymorphic-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-polymorphic-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-polymorphic-call.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,6 +35,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"print-tree.h\"\n #include \"calls.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"target.h\"\n@@ -44,9 +59,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n #include \"ipa-utils.h\""}, {"sha": "6807c22d7ed9105d1edfa2c5f36a968cf2424e00", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -47,6 +46,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"stor-layout.h\"\n #include \"print-tree.h\"\n@@ -73,7 +86,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"tree-inline.h\"\n #include \"ipa-inline.h\"\n-#include \"flags.h\"\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n #include \"lto-streamer.h\"\n@@ -86,7 +98,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbgcnt.h\"\n #include \"domwalk.h\"\n #include \"builtins.h\"\n-#include \"calls.h\"\n \n /* Intermediate information that we get from alias analysis about a particular\n    parameter in a particular basic_block.  When a parameter or the memory it"}, {"sha": "7e2e3007197ce2573cee4320ce0b70d8a944a0d7", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -92,7 +92,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -104,8 +103,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"is-a.h\"\n #include \"gimple.h\"\n #include \"stringpool.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n #include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"gimplify.h\"\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n@@ -122,12 +134,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-cfg.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n-#include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n-#include \"flags.h\"\n #include \"diagnostic.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\""}, {"sha": "d04be29ff4f1207df03ef59a22addea65fd2a6ed", "filename": "gcc/ira-color.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -42,6 +42,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"reload.h\""}, {"sha": "0acb949d905c39c3af18d370da88b4ce6e7c8049", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -26,22 +26,37 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"rtl.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n-#include \"tm_p.h\"\n-#include \"flags.h\"\n-#include \"predict.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n+#include \"vec.h\"\n #include \"machmode.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"tm_p.h\"\n+#include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"addresses.h\"\n-#include \"insn-config.h\"\n #include \"recog.h\"\n #include \"reload.h\"\n #include \"diagnostic-core.h\""}, {"sha": "88375875beb9fbed14fc2e4d24b78ecc5c44aeed", "filename": "gcc/ira-emit.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-emit.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -90,6 +90,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgbuild.h\"\n #include \"basic-block.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"params.h\""}, {"sha": "ea2b69fee76ab53bc03713a1e1ac63360280e663", "filename": "gcc/ira.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -386,7 +386,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"bitmap.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -395,6 +394,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n #include \"df.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"params.h\""}, {"sha": "3b77d48aa06e2f215b320050bebc90674b6b3eb2", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -1,3 +1,9 @@\n+2015-10-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\t\n+\t* builtins.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h function.h hard-reg-set.h hashtab.h insn-config.h\n+\treal.h statistics.h stmt.h varasm.h.\n+\n 2015-01-09  Michael Collison  <michael.collison@linaro.org>\n \n \t* boehm.c: Include hash-set.h, machmode.h, vec.h, double-int.h,"}, {"sha": "067ce9fc5d0716a7de03fdb8b97c11b4f7f34e76", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -53,6 +53,20 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n    Front ends should never have to look at that.  */\n #include \"rtl.h\"\n #include \"insn-codes.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"optabs.h\"\n "}, {"sha": "3b8c91e007fe879bff00aa85c24b2b965fc685ce", "filename": "gcc/jump.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -57,6 +57,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgrtl.h\"\n #include \"basic-block.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"diagnostic-core.h\""}, {"sha": "0b6447adedebd13a551fc6bd89efa7bfabefd487", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -25,14 +25,30 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n-#include \"hard-reg-set.h\"\n-#include \"vec.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n+#include \"vec.h\"\n #include \"machmode.h\"\n+#include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"tm_p.h\"\n #include \"predict.h\""}, {"sha": "f79b497ea7f73481de939746dee25e9a2b5c1002", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -55,10 +55,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"target.h\"\n-#include \"flags.h\"\n #include \"df.h\"\n #include \"hash-table.h\"\n #include \"except.h\""}, {"sha": "de2b15a8fef734a0cbf53b798959852dbf3f0990", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -66,6 +66,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"cfgloop.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"intl.h\"\n #include \"diagnostic-core.h\""}, {"sha": "2befb61719ea8df81691eaddeeb86dfb541fd4ca", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"obstack.h\"\n #include \"profile.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -46,6 +45,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"hash-table.h\"\n #include \"recog.h\""}, {"sha": "9d5fd3be31f34106716e195ecb97fd1e0c5367dc", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"tm.h\"\n #include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"vec.h\"\n #include \"double-int.h\"\n #include \"input.h\"\n@@ -41,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"obstack.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -51,6 +49,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"bitmap.h\"\n #include \"dce.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"regs.h\""}, {"sha": "2462af5f1723417846c4af114b94d01f59e55cdd", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -94,6 +94,22 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "045691d5257bd55222687e9c6233c039bc8a8a32", "filename": "gcc/lra-coalesce.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-coalesce.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -61,6 +61,21 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "cdfa94441e04799322684ae31dc4d81d8df6f994", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -127,6 +127,22 @@\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "fe05a1f25274a57ee776732a1c949dfa8287e3e8", "filename": "gcc/lra-eliminations.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-eliminations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-eliminations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-eliminations.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -72,6 +72,22 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "50d3969ea3bde8f70754b1c3159582e0cd342417", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -43,6 +43,22 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "68146a1110038dd2ed5c2d95f527ee749f15a677", "filename": "gcc/lra-remat.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-remat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-remat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-remat.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -72,6 +72,22 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n@@ -82,7 +98,6 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"ira.h\"\n #include \"sparseset.h\"\n #include \"params.h\"\n-#include \"df.h\"\n #include \"lra-int.h\"\n \n /* Number of candidates for rematerialization.  */"}, {"sha": "184735135dc5911ef8445b6eef9af15a0376d82f", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -74,6 +74,21 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "bc6723db242d29d5962f67054780000d8ffba19c", "filename": "gcc/lra.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -125,6 +125,18 @@ along with GCC; see the file COPYING3.\tIf not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"optabs.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "403d9595d5a9e8aea0aeb912242c9789237a7720", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,16 +38,28 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"params.h\"\n #include \"langhooks.h\"\n #include \"bitmap.h\""}, {"sha": "7bc014d125251a6dc9479ceed85d974d86936b35", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,16 +36,28 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"params.h\"\n #include \"diagnostic-core.h\"\n #include \"except.h\""}, {"sha": "11b7cd0e9784362cd01f659eafd97bc0c6023900", "filename": "gcc/lto-section-out.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-section-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-section-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-out.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,14 +36,27 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"params.h\"\n #include \"except.h\""}, {"sha": "fbb272f7bbff748101223adee47419904a331369", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,13 +37,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"fold-const.h\"\n #include \"stringpool.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"params.h\"\n-#include \"input.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n@@ -72,7 +84,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-streamer.h\"\n #include \"lto-streamer.h\"\n #include \"tree-streamer.h\"\n-#include \"tree-pass.h\"\n #include \"streamer-hooks.h\"\n #include \"cfgloop.h\"\n "}, {"sha": "bc265c2b460640ddc3f570bead16ac0bbe62dd02", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,13 +37,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"stringpool.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"params.h\"\n-#include \"input.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\""}, {"sha": "22cd21650f6cf36cd61d45a72aaac7796dd0df30", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -48,18 +48,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sched-int.h\"\n #include \"target.h\"\n #include \"cfgloop.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n-#include \"vec.h\"\n #include \"double-int.h\"\n-#include \"input.h\"\n #include \"alias.h\"\n #include \"symtab.h\"\n #include \"wide-int.h\"\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"params.h\"\n #include \"gcov-io.h\""}, {"sha": "9ec3d497a305517f77633ca655d689c017052055", "filename": "gcc/omp-low.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -71,11 +70,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n-#include \"flags.h\"\n-#include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"except.h\"\n #include \"splay-tree.h\""}, {"sha": "e9dc7981c631d0c060fed2e0f1a1142d166bfe41", "filename": "gcc/optabs.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,9 +45,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"except.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "411e3bb4d6a0413ad77de139eab9c472072bcb0b", "filename": "gcc/passes.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"vec.h\"\n #include \"double-int.h\"\n-#include \"input.h\"\n #include \"alias.h\"\n #include \"symtab.h\"\n #include \"wide-int.h\"\n@@ -52,6 +51,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"function.h\"\n #include \"toplev.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"predict.h\"\n #include \"basic-block.h\""}, {"sha": "324264ac6524660428e818743eeaabd3aab8e7f9", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -42,13 +42,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\"\n #include \"basic-block.h\"\n #include \"profile.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"intl.h\""}, {"sha": "30fa4498dc72b7dc771be7b2e45aff0f8bf04b16", "filename": "gcc/postreload.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,6 +35,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n@@ -51,13 +66,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cselib.h\"\n #include \"diagnostic-core.h\"\n #include \"except.h\"\n-#include \"double-int.h\"\n-#include \"input.h\"\n-#include \"alias.h\"\n-#include \"symtab.h\"\n-#include \"wide-int.h\"\n-#include \"inchash.h\"\n-#include \"tree.h\"\n #include \"target.h\"\n #include \"tree-pass.h\"\n #include \"df.h\""}, {"sha": "505c06dc0c86208866c4b0cb041e4d8dc55c98b5", "filename": "gcc/predict.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -47,7 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -60,6 +59,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"diagnostic-core.h\"\n #include \"recog.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"coverage.h\"\n #include \"sreal.h\"\n@@ -84,7 +93,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop.h\"\n #include \"tree-pass.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"cfgloop.h\"\n \n /* real constants: 0, 1, 1-1/REG_BR_PROB_BASE, REG_BR_PROB_BASE,\n \t\t   1/REG_BR_PROB_BASE, 0.5, BB_FREQ_MAX.  */"}, {"sha": "a178a1b4e3caf0fa8f9f0aac3e9b7dcc623b3fd3", "filename": "gcc/profile.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -55,14 +55,30 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"regs.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"vec.h\"\n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -71,9 +87,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic-core.h\"\n #include \"coverage.h\"\n #include \"value-prof.h\"\n-#include \"symtab.h\"\n-#include \"inchash.h\"\n-#include \"tree.h\"\n #include \"fold-const.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "7b5ca8b9f1e2b120498bd3878e44c69131970602", "filename": "gcc/recog.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -40,10 +40,21 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"regs.h\"\n #include \"addresses.h\"\n-#include \"expr.h\"\n-#include \"input.h\"\n+#include \"hashtab.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n #include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\""}, {"sha": "c85ca0afb82b7b0e3e36addea866088645c01f48", "filename": "gcc/ree.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -235,14 +235,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"predict.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfgrtl.h\"\n #include \"basic-block.h\"\n #include \"insn-config.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-attr.h\"\n #include \"recog.h\""}, {"sha": "2a18fb83473c1ff59b0babac61f69a755b6c7693", "filename": "gcc/reginfo.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,18 +41,28 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n-#include \"flags.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"addresses.h\"\n-#include \"insn-config.h\"\n #include \"recog.h\"\n #include \"reload.h\"\n #include \"diagnostic-core.h\""}, {"sha": "70b86a9f67430277cd7633bf74b85d6a59ce7054", "filename": "gcc/reload.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -96,6 +96,30 @@ a register with any other reload.  */\n #include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"symtab.h\"\n+#include \"hashtab.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"machmode.h\"\n+#include \"hard-reg-set.h\"\n+#include \"input.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n@@ -108,14 +132,6 @@ a register with any other reload.  */\n #include \"reload.h\"\n #include \"regs.h\"\n #include \"addresses.h\"\n-#include \"hard-reg-set.h\"\n-#include \"flags.h\"\n-#include \"hashtab.h\"\n-#include \"hash-set.h\"\n-#include \"vec.h\"\n-#include \"machmode.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"params.h\"\n #include \"target.h\"\n #include \"ira.h\""}, {"sha": "5a010454c8e71267dc584d89acb57b22c867ef4a", "filename": "gcc/reload1.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,6 +36,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"input.h\"\n #include \"function.h\"\n #include \"symtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n@@ -51,13 +67,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"recog.h\"\n #include \"except.h\"\n-#include \"symtab.h\"\n-#include \"wide-int.h\"\n-#include \"inchash.h\"\n-#include \"tree.h\"\n #include \"ira.h\"\n #include \"target.h\"\n-#include \"emit-rtl.h\"\n #include \"dumpfile.h\"\n #include \"rtl-iter.h\"\n "}, {"sha": "8f0e063f3e70edd870af04d416e84b249e14f858", "filename": "gcc/reorg.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -108,31 +108,45 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"tm_p.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n #include \"hashtab.h\"\n #include \"hash-set.h\"\n #include \"vec.h\"\n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"input.h\"\n #include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n #include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"conditions.h\"\n #include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"recog.h\"\n-#include \"flags.h\"\n #include \"obstack.h\"\n #include \"insn-attr.h\"\n #include \"resource.h\"\n #include \"except.h\"\n #include \"params.h\"\n #include \"target.h\"\n #include \"tree-pass.h\"\n-#include \"emit-rtl.h\"\n \n #ifdef DELAY_SLOTS\n "}, {"sha": "5f12843adb71bb3fb4183c2f4c20fabe2fd5241f", "filename": "gcc/rtl-chkp.c", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Frtl-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Frtl-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-chkp.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -22,23 +22,39 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"symtab.h\"\n-#include \"expr.h\"\n-#include \"target.h\"\n-#include \"tree-ssa-alias.h\"\n-#include \"internal-fn.h\"\n-#include \"is-a.h\"\n-#include \"predict.h\"\n-#include \"basic-block.h\"\n+#include \"hashtab.h\"\n #include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"vec.h\"\n-#include \"double-int.h\"\n+#include \"machmode.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n #include \"input.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n #include \"alias.h\"\n-#include \"symtab.h\"\n #include \"wide-int.h\"\n #include \"inchash.h\"\n #include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"target.h\"\n+#include \"tree-ssa-alias.h\"\n+#include \"internal-fn.h\"\n+#include \"is-a.h\"\n+#include \"predict.h\"\n+#include \"basic-block.h\"\n #include \"fold-const.h\"\n #include \"gimple-expr.h\"\n #include \"gimple.h\""}, {"sha": "48cb7580478f1b97a14cfd854dd46f30cff7b2a9", "filename": "gcc/rtlhooks.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Frtlhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Frtlhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlhooks.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -24,6 +24,30 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl.h\"\n #include \"rtlhooks-def.h\"\n #include \"symtab.h\"\n+#include \"hashtab.h\"\n+#include \"hash-set.h\"\n+#include \"vec.h\"\n+#include \"machmode.h\"\n+#include \"hard-reg-set.h\"\n+#include \"input.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"double-int.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"alias.h\"\n+#include \"wide-int.h\"\n+#include \"inchash.h\"\n+#include \"tree.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n \f"}, {"sha": "3928f3d8fa29876f3f8d97e2741a8d60df53e53d", "filename": "gcc/shrink-wrap.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fshrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fshrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,14 +41,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"except.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"libfuncs.h\"\n #include \"regs.h\"\n-#include \"insn-config.h\"\n #include \"recog.h\"\n #include \"output.h\"\n #include \"tm_p.h\""}, {"sha": "4ee63d21a58fcd681eb3382629dd2045e4bc8a85", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,10 +41,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"insn-config.h\"\n #include \"recog.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"ggc.h\""}, {"sha": "5db8fc0efa81adcc7af159f2ba0a2ac0ec3c64c7", "filename": "gcc/stack-ptr-mod.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstack-ptr-mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstack-ptr-mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstack-ptr-mod.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -33,16 +33,27 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n-#include \"flags.h\"\n #include \"output.h\"\n #include \"df.h\"\n "}, {"sha": "d1333adbb9977e23e95120b8a7d75fbb0ea6c5cf", "filename": "gcc/stmt.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,9 +45,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"except.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"insn-config.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"libfuncs.h\"\n #include \"recog.h\""}, {"sha": "620b0f134b080ce3fd8277666eed3a978e1f4788", "filename": "gcc/stmt.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -31,4 +31,18 @@ extern tree resolve_asm_operand_names (tree, tree, tree, tree);\n extern tree tree_overlaps_hard_reg_set (tree, HARD_REG_SET *);\n #endif\n \n+/* Return the CODE_LABEL rtx for a LABEL_DECL, creating it if necessary.  */\n+extern rtx label_rtx (tree);\n+\n+/* As label_rtx, but additionally the label is placed on the forced label\n+   list of its containing function (i.e. it is treated as reachable even\n+   if how is not obvious).  */\n+extern rtx force_label_rtx (tree);\n+\n+/* Expand a GIMPLE_SWITCH statement.  */\n+extern void expand_case (gswitch *);\n+\n+/* Like expand_case but special-case for SJLJ exception dispatching.  */\n+extern void expand_sjlj_dispatch_table (rtx, vec<tree> );\n+\n #endif  // GCC_STMT_H"}, {"sha": "273a12b0cf2307574fa1e6b480acd12556519d8f", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,8 +41,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"diagnostic-core.h\"\n #include \"target.h\""}, {"sha": "530766f800d2e6075800ef0a9909642c3da5f18a", "filename": "gcc/store-motion.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"recog.h\"\n #include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -51,6 +50,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lcm.h\"\n #include \"cfgcleanup.h\"\n #include \"basic-block.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"except.h\"\n #include \"ggc.h\""}, {"sha": "6983b5cc9b5dba1f9473c3d275a85d03eeda7bf5", "filename": "gcc/target-globals.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftarget-globals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftarget-globals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,6 +41,17 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hard-reg-set.h\"\n #include \"reload.h\"\n #include \"expmed.h\"\n+#include \"hashtab.h\"\n+#include \"function.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "0c141037664f45f391d15bd9c3a98d474c684f80", "filename": "gcc/targhooks.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -53,7 +53,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"vec.h\"\n #include \"double-int.h\"\n #include \"input.h\"\n@@ -65,12 +64,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"stor-layout.h\"\n #include \"varasm.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"output.h\"\n #include \"diagnostic-core.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"target.h\"\n #include \"tm_p.h\"\n #include \"target-def.h\""}, {"sha": "7bf177fa970538a57d8a24d6cd4d31ef2b311c86", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"machmode.h\"\n #include \"vec.h\"\n #include \"double-int.h\"\n-#include \"input.h\"\n #include \"alias.h\"\n #include \"symtab.h\"\n #include \"wide-int.h\"\n@@ -55,6 +54,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"function.h\"\n #include \"toplev.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"intl.h\"\n #include \"regs.h\""}, {"sha": "a8055d6485a2a81fe67b1b35375a0f9de2cb7a42", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -32,22 +32,34 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"fold-const.h\"\n+#include \"hashtab.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-affine.h\"\n #include \"predict.h\"\n-#include \"tm.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\"\n #include \"gimple.h\"\n #include \"gimplify.h\"\n-#include \"flags.h\"\n #include \"dumpfile.h\"\n #include \"cfgexpand.h\"\n #include \"wide-int-print.h\""}, {"sha": "006bc08bbcac7d85f7841eda58a0e5b9b1fa404a", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -71,6 +70,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n@@ -86,7 +98,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-live.h\"\n #include \"omp-low.h\"\n #include \"tree-cfgcleanup.h\"\n-#include \"wide-int.h\"\n #include \"wide-int-print.h\"\n \n /* This file contains functions for building the Control Flow Graph (CFG)"}, {"sha": "5c5c7bace75d62b7a6e66322593dfe3511a92c79", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -60,6 +59,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-manip.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\""}, {"sha": "3fa2380d4bf621b3e9b43eeb9cee7e99f2f4de46", "filename": "gcc/tree-chkp-opt.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-chkp-opt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-chkp-opt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp-opt.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -58,6 +58,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimplify.h\"\n #include \"gimplify-me.h\"\n+#include \"hashtab.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-chkp.h\"\n #include \"ipa-chkp.h\""}, {"sha": "45ac11e33f59a4d40854f5bb5a055de593c9fa4c", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -65,6 +65,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimplify.h\"\n #include \"gimplify-me.h\"\n #include \"print-tree.h\"\n+#include \"hashtab.h\"\n+#include \"tm.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"gimple-fold.h\"\n@@ -77,8 +93,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"ipa-chkp.h\"\n #include \"params.h\"\n-#include \"ipa-chkp.h\"\n-#include \"params.h\"\n \n /*  Pointer Bounds Checker instruments code with memory checks to find\n     out-of-bounds memory accesses.  Checks are performed by computing"}, {"sha": "c5b8688b66e301f5b2cc322681d2abd19664f123", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -57,6 +56,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\""}, {"sha": "3d1d5f8c0fe5cb572118aff0a3552f638ac29cc8", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -88,13 +88,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"fold-const.h\"\n-#include \"expr.h\"\n-#include \"gimple-pretty-print.h\"\n-#include \"predict.h\"\n+#include \"hashtab.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"gimple-pretty-print.h\"\n+#include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\""}, {"sha": "8ee46dc81f490ab80e3ea7dba29d5dc40e140dcd", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -58,12 +57,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\"\n #include \"params.h\"\n-#include \"wide-int.h\"\n \n /* Build and maintain data flow information for trees.  */\n "}, {"sha": "159fa2bee1116289d53a70905bc48aea7ba2df0c", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -33,12 +33,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"fold-const.h\"\n-#include \"expr.h\"\n-#include \"calls.h\"\n-#include \"flags.h\"\n+#include \"hashtab.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n #include \"except.h\"\n #include \"predict.h\"\n #include \"dominance.h\""}, {"sha": "cb535bc571bf8e2fae4a61c42c533c40eaf033fc", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -99,7 +99,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -130,6 +129,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-address.h\"\n #include \"tree-pass.h\"\n #include \"dbgcnt.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "ac16e24e2edb99729b83e93b57c17da3e17bf2b6", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,14 +39,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-inline.h\"\n #include \"flags.h\"\n #include \"params.h\"\n-#include \"input.h\"\n #include \"insn-config.h\"\n #include \"hashtab.h\"\n #include \"langhooks.h\"\n #include \"predict.h\"\n-#include \"vec.h\"\n-#include \"hash-set.h\"\n-#include \"machmode.h\"\n #include \"hard-reg-set.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n@@ -73,6 +69,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\""}, {"sha": "258962882f4564d769a1d5bc5168bcc0ef88553e", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -59,6 +58,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n@@ -68,7 +80,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"domwalk.h\"\n #include \"params.h\"\n #include \"diagnostic-core.h\"\n-#include \"tree-into-ssa.h\"\n \n #define PERCENT(x,y) ((float)(x) * 100.0 / (float)(y))\n "}, {"sha": "526e617557725ba48e681f38baff491d39929806", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@\n #include \"stor-layout.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\"\n@@ -57,6 +56,20 @@\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n #include \"tree-cfg.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\t/* FIXME: For STACK_SAVEAREA_MODE and SAVE_NONLOCAL.  */\n #include \"langhooks.h\"\n #include \"gimple-low.h\""}, {"sha": "e6310cdfd3cca2efb88995b4fa3f62a3026e189f", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -68,6 +67,20 @@ along with GCC; see the file COPYING3.  If not see\n \n /* FIXME: A lot of code here deals with expanding to RTL.  All that code\n    should be in cfgexpand.c.  */\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n \n /* Return TRUE if expression STMT is suitable for replacement.  */"}, {"sha": "ac32c849a121559bd3663aa31c965f8a76e8a47f", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -203,7 +203,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -227,6 +226,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\""}, {"sha": "5773eba5843aa10f11fd836d34c611b5bcc9860f", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -33,16 +33,29 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"stor-layout.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pretty-print.h\"\n #include \"gimple-expr.h\"\n #include \"predict.h\"\n #include \"hash-map.h\"\n #include \"is-a.h\"\n #include \"plugin-api.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n #include \"langhooks.h\""}, {"sha": "d89f6314c4dbccf4f35f77f039b6ce184e71e302", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -268,13 +268,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"fold-const.h\"\n-#include \"expr.h\"\n-#include \"gimple-pretty-print.h\"\n-#include \"predict.h\"\n+#include \"hashtab.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"gimple-pretty-print.h\"\n+#include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n@@ -304,7 +317,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"gimple-fold.h\"\n-#include \"gimplify-me.h\"\n \n static tree analyze_scalar_evolution_1 (struct loop *, tree, tree);\n static tree analyze_scalar_evolution_for_address_of (struct loop *loop,"}, {"sha": "51a1b1a986d6a73e08933814542e99993f2eb682", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -91,7 +91,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -114,6 +113,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n@@ -123,10 +136,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"symbol-summary.h\"\n #include \"ipa-prop.h\"\n-#include \"statistics.h\"\n #include \"params.h\"\n #include \"target.h\"\n-#include \"flags.h\"\n #include \"dbgcnt.h\"\n #include \"tree-inline.h\"\n #include \"gimple-pretty-print.h\""}, {"sha": "d6afa2b8d66ca98efbe77f4b2d3cc3643f4cb459", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"tree-pretty-print.h\"\n@@ -53,20 +52,29 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-ivopts.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"dumpfile.h\"\n-#include \"flags.h\"\n #include \"tree-inline.h\"\n #include \"tree-affine.h\"\n \n /* FIXME: We compute address costs using RTL.  */\n-#include \"insn-config.h\"\n-#include \"rtl.h\"\n #include \"recog.h\"\n-#include \"expr.h\"\n #include \"target.h\"\n-#include \"expmed.h\"\n #include \"tree-ssa-address.h\"\n \n /* TODO -- handling of symbols (according to Richard Hendersons"}, {"sha": "31db17a7dbfe7cf3b42da8dd0ea45c391d4c88db", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n \n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"basic-block.h\"\n@@ -56,12 +55,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\"\n #include \"params.h\"\n #include \"alloc-pool.h\"\n-#include \"tree-ssa-alias.h\"\n #include \"bitmap.h\"\n #include \"hash-map.h\"\n #include \"plugin-api.h\""}, {"sha": "f3cb56ef5f96fdbfdac026f61edb2d28a0695403", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -52,6 +51,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-ssa.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\""}, {"sha": "c9cb0e4895350446bbe16e8134c111fc05b8b342", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -61,7 +61,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -83,10 +82,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n-#include \"flags.h\"\n #include \"cfgloop.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"tree-chkp.h\""}, {"sha": "ce4e60d7499ea0b65105ef7077c01830d53b35d7", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -54,11 +53,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n #include \"domwalk.h\"\n-#include \"flags.h\"\n #include \"langhooks.h\"\n #include \"tree-cfgcleanup.h\"\n "}, {"sha": "a4140e5e6ae72cf99c536ca798a70297e7a205d8", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -58,13 +57,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n #include \"langhooks.h\"\n-#include \"flags.h\"\n #include \"diagnostic.h\"\n-#include \"expr.h\"\n #include \"cfgloop.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "cc164fb32b79a932b6e392396d3379589f33f7bd", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sbitmap.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -55,14 +54,27 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"timevar.h\"\n #include \"dumpfile.h\"\n #include \"tree-ssa-live.h\"\n #include \"diagnostic-core.h\"\n #include \"debug.h\"\n-#include \"flags.h\"\n #include \"tree-ssa.h\"\n \n #ifdef ENABLE_CHECKING"}, {"sha": "d50adb0f257cc302ee001b35d49ec4d8b654a25c", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -80,7 +80,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -110,29 +109,39 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"cfgloop.h\"\n #include \"tree-pass.h\"\n-#include \"insn-config.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n-#include \"cfgloop.h\"\n #include \"params.h\"\n #include \"langhooks.h\"\n #include \"tree-affine.h\"\n #include \"target.h\"\n #include \"tree-inline.h\"\n #include \"tree-ssa-propagate.h\"\n-#include \"expmed.h\"\n #include \"tree-ssa-address.h\"\n #include \"builtins.h\"\n \n /* FIXME: Expressions are expanded to RTL in this pass to determine the\n    cost of different addressing modes.  This should be moved to a TBD\n    interface between the GIMPLE and RTL worlds.  */\n-#include \"expr.h\"\n #include \"recog.h\"\n \n /* The infinite cost.  */"}, {"sha": "919f5c0d8f21e2af066c2a5fa57e8ec080d8d3ef", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -33,12 +33,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"fold-const.h\"\n #include \"calls.h\"\n+#include \"hashtab.h\"\n+#include \"hard-reg-set.h\"\n+#include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tm_p.h\"\n #include \"predict.h\"\n-#include \"hard-reg-set.h\"\n-#include \"input.h\"\n-#include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n@@ -64,7 +76,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-scalar-evolution.h\"\n #include \"tree-data-ref.h\"\n #include \"params.h\"\n-#include \"flags.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-inline.h\"\n #include \"tree-pass.h\""}, {"sha": "10e156e997f3ebbcbfc49c03e95cee7ed43f6c19", "filename": "gcc/tree-ssa-loop-prefetch.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-loop-prefetch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-loop-prefetch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-prefetch.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -70,6 +69,19 @@ along with GCC; see the file COPYING3.  If not see\n \n /* FIXME: Needed for optabs, but this should all be moved to a TBD interface\n    between the GIMPLE and RTL worlds.  */\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "479f49f3a90996ba7dd3fcdab1590cd82e87d096", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -102,7 +102,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -123,6 +122,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\""}, {"sha": "bad546dd4b767fac6b8242c14659248825b77fe6", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -58,6 +57,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n@@ -66,8 +78,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-data-ref.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"insn-config.h\"\n-#include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"tree-scalar-evolution.h\""}, {"sha": "3ef7510df663c8fc890b9ef9c8b4b0a8bbd0aefa", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,15 +36,13 @@ along with GCC; see the file COPYING3.  If not see\n #include \"fold-const.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"cfganal.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n #include \"tree-inline.h\"\n-#include \"inchash.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n@@ -64,14 +62,27 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"tree-iterator.h\"\n #include \"alloc-pool.h\"\n #include \"obstack.h\"\n #include \"tree-pass.h\"\n-#include \"flags.h\"\n #include \"langhooks.h\"\n #include \"cfgloop.h\"\n #include \"tree-ssa-sccvn.h\""}, {"sha": "9952222f71512a9a42df305903f0d6c0c01a4ad5", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -65,6 +64,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssanames.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-ssa-loop.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n@@ -73,7 +85,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"alloc-pool.h\"\n #include \"langhooks.h\"\n #include \"cfgloop.h\"\n-#include \"flags.h\"\n #include \"target.h\"\n #include \"params.h\"\n #include \"diagnostic-core.h\""}, {"sha": "25c67d01a7a16d6331d23313ff3c0744d6840b52", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -47,7 +46,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n-#include \"inchash.h\"\n #include \"gimple-fold.h\"\n #include \"tree-eh.h\"\n #include \"gimple-expr.h\"\n@@ -59,12 +57,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-ssa.h\"\n #include \"dumpfile.h\"\n #include \"alloc-pool.h\"\n-#include \"flags.h\"\n #include \"cfgloop.h\"\n #include \"params.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "34776a38c3e0550a7ec519c9cb3e2557de557617", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"predict.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -60,6 +59,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ssa-iterators.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-pass.h\"\n@@ -68,7 +81,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-propagate.h\"\n #include \"gimple-pretty-print.h\"\n #include \"params.h\"\n-#include \"expr.h\"\n #include \"plugin-api.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\""}, {"sha": "96d1ce3faeb5a892d6a17506ad7260cf03a2b953", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -61,6 +61,17 @@\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"tree-inline.h\"\n@@ -69,7 +80,6 @@\n #include \"alloc-pool.h\"\n #include \"splay-tree.h\"\n #include \"params.h\"\n-#include \"alias.h\"\n #include \"tree-phinodes.h\"\n #include \"ssa-iterators.h\"\n #include \"tree-pretty-print.h\""}, {"sha": "6b68a161c44d9f742f8146d12ce47f71a5b93889", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -44,7 +44,6 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"stor-layout.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -76,6 +75,18 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"langhooks.h\"\n \n /* Need to include expr.h and optabs.h for lshift_cheap_p.  */\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "1d065fb17a8c5270eefac6e127f2579950d196a0", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -54,12 +53,25 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"tree-into-ssa.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"gimple-pretty-print.h\"\n #include \"except.h\"\n #include \"tree-pass.h\"\n-#include \"flags.h\"\n #include \"langhooks.h\"\n #include \"dbgcnt.h\"\n #include \"target.h\""}, {"sha": "52d6a869c4e6dfbc15b1c5cf1afa070d5efd270f", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -63,7 +62,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-ivopts.h\"\n #include \"tree-ssa-loop-manip.h\"\n #include \"tree-ssa-loop.h\"\n-#include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n #include \"tree-scalar-evolution.h\"\n@@ -74,11 +72,24 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n /* Need to include rtl.h, expr.h, etc. for optabs.  */\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"builtins.h\"\n-#include \"varasm.h\"\n \n /* Return true if load- or store-lanes optab OPTAB is implemented for\n    COUNT vectors of type VECTYPE.  NAME is the name of OPTAB.  */"}, {"sha": "8233c65a86ba81c398be0c2f3bfe8bbf561f685f", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -61,6 +60,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n \n /* Need to include rtl.h, expr.h, etc. for optabs.  */\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "afc12a7f7600f2b9f414cc74815e335c913f9a27", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stor-layout.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -63,6 +62,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-loop-niter.h\"\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\n #include \"insn-codes.h\""}, {"sha": "d06d69666aefc8adf55c402d7aa0c1bd16fd8739", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"basic-block.h\"\n@@ -56,6 +55,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n #include \"cfgloop.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\""}, {"sha": "ce0ca9103021d2133253804760b7c14beebe228a", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n@@ -56,6 +55,20 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssanames.h\"\n #include \"tree-pass.h\"\n #include \"cfgloop.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\t\t/* FIXME: for insn_data */\n #include \"insn-codes.h\""}, {"sha": "6c3037de850e94826fc4c1355703a91a7beca84c", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -64,13 +63,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"tree-ssa-loop.h\"\n #include \"tree-scalar-evolution.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"recog.h\"\t\t/* FIXME: for insn_data */\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"diagnostic-core.h\"\n #include \"tree-vectorizer.h\"\n-#include \"dumpfile.h\"\n #include \"hash-map.h\"\n #include \"plugin-api.h\"\n #include \"ipa-ref.h\""}, {"sha": "acf6b20fd4fac2bb516a2cfbc61dba300034aa9d", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"calls.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -74,11 +73,22 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-propagate.h\"\n #include \"tree-chrec.h\"\n #include \"tree-ssa-threadupdate.h\"\n+#include \"hashtab.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n #include \"tree-ssa-threadedge.h\"\n-#include \"wide-int.h\"\n \n \n "}, {"sha": "f9818b578afb3be54f5acf01c8a18bdffc513315", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -50,11 +50,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"hashtab.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"obstack.h\"\n #include \"toplev.h\" /* get_random_seed */\n-#include \"inchash.h\"\n #include \"filenames.h\"\n #include \"output.h\"\n #include \"target.h\"\n@@ -82,6 +80,16 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-phinodes.h\"\n #include \"stringpool.h\"\n #include \"tree-ssanames.h\"\n+#include \"rtl.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-dfa.h\"\n #include \"params.h\"\n@@ -93,7 +101,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"debug.h\"\n #include \"intl.h\"\n-#include \"wide-int.h\"\n #include \"builtins.h\"\n \n /* Tree code classes.  */"}, {"sha": "7c172620367819d9ccecc063c8161bd085680f6a", "filename": "gcc/tsan.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Ftsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsan.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -34,13 +34,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"inchash.h\"\n #include \"tree.h\"\n #include \"fold-const.h\"\n-#include \"expr.h\"\n-#include \"intl.h\"\n+#include \"hashtab.h\"\n #include \"tm.h\"\n-#include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"rtl.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"intl.h\"\n+#include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n@@ -64,7 +77,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"langhooks.h\"\n #include \"output.h\"\n-#include \"options.h\"\n #include \"target.h\"\n #include \"diagnostic.h\"\n #include \"tree-ssa-propagate.h\""}, {"sha": "7c94dab036c0f8bbb9792729038cc8c00f2c70fa", "filename": "gcc/ubsan.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"plugin-api.h\"\n #include \"tm.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"ipa-ref.h\"\n #include \"cgraph.h\"\n@@ -65,6 +64,19 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ubsan.h\"\n #include \"c-family/c-common.h\"\n #include \"rtl.h\"\n+#include \"hashtab.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-ssanames.h\"\n #include \"asan.h\""}, {"sha": "1de8e1b806bc1a1fc7091277755c051b001e22fd", "filename": "gcc/value-prof.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -35,17 +35,26 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-nested.h\"\n #include \"calls.h\"\n #include \"rtl.h\"\n-#include \"expr.h\"\n+#include \"hashtab.h\"\n #include \"hard-reg-set.h\"\n-#include \"predict.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"flags.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"emit-rtl.h\"\n+#include \"varasm.h\"\n+#include \"stmt.h\"\n+#include \"expr.h\"\n+#include \"predict.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n #include \"basic-block.h\"\n #include \"value-prof.h\"\n-#include \"flags.h\"\n-#include \"insn-config.h\"\n #include \"recog.h\"\n #include \"insn-codes.h\"\n #include \"optabs.h\"\n@@ -67,7 +76,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"gimple-pretty-print.h\"\n #include \"coverage.h\"\n-#include \"tree.h\"\n #include \"gcov-io.h\"\n #include \"timevar.h\"\n #include \"dumpfile.h\"\n@@ -78,7 +86,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"data-streamer.h\"\n #include \"builtins.h\"\n-#include \"tree-nested.h\"\n #include \"params.h\"\n #include \"tree-chkp.h\"\n "}, {"sha": "9ec5d8bcf81c384bf00642ae69308fc08b5fd145", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -106,7 +106,6 @@\n #include \"hash-table.h\"\n #include \"predict.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n #include \"dominance.h\"\n #include \"cfg.h\"\n@@ -120,6 +119,16 @@\n #include \"sbitmap.h\"\n #include \"alloc-pool.h\"\n #include \"regs.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"tree-pass.h\"\n #include \"bitmap.h\"\n@@ -131,8 +140,6 @@\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"recog.h\"\n-#include \"tm_p.h\"\n-#include \"alias.h\"\n #include \"rtl-iter.h\"\n #include \"fibonacci_heap.h\"\n "}, {"sha": "36c3633deb4cb4c17af2a810da3753205dc09c9d", "filename": "gcc/varasm.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -46,8 +46,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"varasm.h\"\n #include \"flags.h\"\n #include \"hard-reg-set.h\"\n-#include \"input.h\"\n #include \"function.h\"\n+#include \"hashtab.h\"\n+#include \"statistics.h\"\n+#include \"real.h\"\n+#include \"fixed-value.h\"\n+#include \"insn-config.h\"\n+#include \"expmed.h\"\n+#include \"dojump.h\"\n+#include \"explow.h\"\n+#include \"calls.h\"\n+#include \"emit-rtl.h\"\n+#include \"stmt.h\"\n #include \"expr.h\"\n #include \"regs.h\"\n #include \"output.h\""}, {"sha": "d2dafb7a55ed5f2738664d5d79b52a7be931d0c3", "filename": "gcc/varasm.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvarasm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36566b39c38a8c22c4f369878033ef53fa25d315/gcc%2Fvarasm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.h?ref=36566b39c38a8c22c4f369878033ef53fa25d315", "patch": "@@ -68,4 +68,8 @@ extern bool constructor_static_from_elts_p (const_tree);\n \n extern void init_varasm_status (void);\n \n+extern rtx assemble_static_space (unsigned HOST_WIDE_INT);\n+\n+extern rtx assemble_trampoline_template (void);\n+\n #endif  // GCC_VARASM_H"}]}