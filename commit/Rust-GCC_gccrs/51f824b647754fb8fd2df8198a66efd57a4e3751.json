{"sha": "51f824b647754fb8fd2df8198a66efd57a4e3751", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFmODI0YjY0Nzc1NGZiOGZkMmRmODE5OGE2NmVmZDU3YTRlMzc1MQ==", "commit": {"author": {"name": "Erik Edelmann", "email": "eedelman@gcc.gnu.org", "date": "2006-11-19T21:27:16Z"}, "committer": {"name": "Erik Edelmann", "email": "eedelman@gcc.gnu.org", "date": "2006-11-19T21:27:16Z"}, "message": "resolve.c (resolve_ref): Check for ALLOCATABLEs to the right of nonzero rank part references too.\n\nfortran/\n2006-11-19  Erik Edelmann  <eedelman@gcc.gnu.org>\n\n        * resolve.c (resolve_ref): Check for ALLOCATABLEs to the right of\n        nonzero rank part references too.\n\n\ntestsuite/\n2006-11-19  Erik Edelmann  <eedelman@gcc.gnu.org>\n\n        * gfortran.dg/alloc_comp_constraint_5.f90: New.\n        * gfortran.dg/alloc_comp_assign_2.f90: Removed invalid code.\n\nFrom-SVN: r118999", "tree": {"sha": "af12fdcf3beba892bb802c4d80e240632d1ab3ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af12fdcf3beba892bb802c4d80e240632d1ab3ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51f824b647754fb8fd2df8198a66efd57a4e3751", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f824b647754fb8fd2df8198a66efd57a4e3751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51f824b647754fb8fd2df8198a66efd57a4e3751", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f824b647754fb8fd2df8198a66efd57a4e3751/comments", "author": null, "committer": null, "parents": [{"sha": "39f87c0333117fa64894cb1f7dd0e69307a9cf0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39f87c0333117fa64894cb1f7dd0e69307a9cf0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39f87c0333117fa64894cb1f7dd0e69307a9cf0d"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "6efdfac0496a92ce32d8a328a4dbf1a4a322f0f4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=51f824b647754fb8fd2df8198a66efd57a4e3751", "patch": "@@ -1,3 +1,8 @@\n+2006-11-19  Erik Edelmann  <eedelman@gcc.gnu.org>\n+\n+\t* resolve.c (resolve_ref): Check for ALLOCATABLEs to the right of\n+\t  nonzero rank part references too.\n+\n 2006-11-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* module.c (gfc_use_module): Uncomment the ISO_FORTRAN_ENV code."}, {"sha": "3d567cb7cadf9d6cb2ea0d966e3461226f0db71b", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=51f824b647754fb8fd2df8198a66efd57a4e3751", "patch": "@@ -2797,14 +2797,24 @@ resolve_ref (gfc_expr * expr)\n \t  break;\n \n \tcase REF_COMPONENT:\n-\t  if ((current_part_dimension || seen_part_dimension)\n-\t      && ref->u.c.component->pointer)\n+\t  if (current_part_dimension || seen_part_dimension)\n \t    {\n-\t      gfc_error\n-\t\t(\"Component to the right of a part reference with nonzero \"\n-\t\t \"rank must not have the POINTER attribute at %L\",\n-\t\t &expr->where);\n-\t      return FAILURE;\n+\t      if (ref->u.c.component->pointer)\n+\t        {\n+\t\t  gfc_error\n+\t\t    (\"Component to the right of a part reference with nonzero \"\n+\t\t     \"rank must not have the POINTER attribute at %L\",\n+\t\t     &expr->where);\n+\t\t  return FAILURE;\n+\t\t}\n+\t      else if (ref->u.c.component->allocatable)\n+\t        {\n+\t\t  gfc_error\n+\t\t    (\"Component to the right of a part reference with nonzero \"\n+\t\t     \"rank must not have the ALLOCATABLE attribute at %L\",\n+\t\t     &expr->where);\n+\t\t  return FAILURE;\n+\t\t}\n \t    }\n \n \t  n_components++;"}, {"sha": "a44c291307f383e54b6b3c4211d74e7a0a4649a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51f824b647754fb8fd2df8198a66efd57a4e3751", "patch": "@@ -1,3 +1,8 @@\n+2006-11-19  Erik Edelmann  <eedelman@gcc.gnu.org>\n+\n+\t* gfortran.dg/alloc_comp_constraint_5.f90: New.\n+\t* gfortran.dg/alloc_comp_assign_2.f90: Removed invalid code.\n+\n 2006-11-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* gfortran.dg/use_3.f90: Remove error message."}, {"sha": "32c3c82dc6727293b4fca07ef375b32cfdd3bc4d", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_assign_2.f90", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_assign_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_assign_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_assign_2.f90?ref=51f824b647754fb8fd2df8198a66efd57a4e3751", "patch": "@@ -38,12 +38,6 @@\n   if (any( (/(((y(k)%at(i)%i(j), j = 1,4), i = 1,2), k = 1,2)/) .ne. &\n          (/0,0,2,1,11,12,6,5,11,12,3,2,9,8,7,6/))) call abort () \n \n-  where (y((2))%at(:)%i(2) > 8)\n-    y(2)%at(:)%i(2) = 77\n-  end where\n-  if (any ((/(((y(k)%at(i)%i(j), j = 1,4), i = 1,2), k = 1,2)/) .ne. &\n-         (/0,0,2,1,11,12,6,5,11,77,3,2,9,8,7,6/))) call abort ()\n-\n ! Check that temporaries and full array  alloctable component assignments\n ! are correctly handled in FORALL.\n "}, {"sha": "d0e57aea593e4695a768596b5ad2435ccc0e3059", "filename": "gcc/testsuite/gfortran.dg/alloc_comp_constraint_5.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_constraint_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51f824b647754fb8fd2df8198a66efd57a4e3751/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_constraint_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Falloc_comp_constraint_5.f90?ref=51f824b647754fb8fd2df8198a66efd57a4e3751", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+! Check that ALLOCATABLE components aren't allowed to the right of a non-zero\n+! rank part reference.\n+program test\n+\n+    implicit none\n+    type :: foo\n+        real, allocatable :: bar(:)\n+    end type foo\n+    type(foo), target :: x(3)\n+    integer :: i\n+    real, pointer :: p(:)\n+\n+    allocate(x(:)%bar(5))! { dg-error \"must not have the ALLOCATABLE attribute\" }\n+    x(:)%bar(1) = 1.0    ! { dg-error \"must not have the ALLOCATABLE attribute\" }\n+    p => x(:)%bar(1)     ! { dg-error \"must not have the ALLOCATABLE attribute\" }\n+\n+end program test"}]}