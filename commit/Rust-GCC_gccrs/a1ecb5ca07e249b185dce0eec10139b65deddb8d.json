{"sha": "a1ecb5ca07e249b185dce0eec10139b65deddb8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFlY2I1Y2EwN2UyNDliMTg1ZGNlMGVlYzEwMTM5YjY1ZGVkZGI4ZA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-04-18T15:42:48Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-18T15:42:48Z"}, "message": "Fix regmove typos spotted by H.J. Lu.\n\n\t* regmove.c (fixup_match_1): In three places, in flag_exceptions\n\tcheck, change p to q.\n\nFrom-SVN: r19282", "tree": {"sha": "0bd7aa4ae114e9515a1c389c00fff4dfb58c48e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bd7aa4ae114e9515a1c389c00fff4dfb58c48e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ecb5ca07e249b185dce0eec10139b65deddb8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ecb5ca07e249b185dce0eec10139b65deddb8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ecb5ca07e249b185dce0eec10139b65deddb8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ecb5ca07e249b185dce0eec10139b65deddb8d/comments", "author": null, "committer": null, "parents": [{"sha": "a2a05b0a358ce7cbd768224e99ea194a51e39150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a05b0a358ce7cbd768224e99ea194a51e39150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a05b0a358ce7cbd768224e99ea194a51e39150"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "0ead4e8b1438ca5be13d93aabbbb4b3c2c42ec1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ecb5ca07e249b185dce0eec10139b65deddb8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ecb5ca07e249b185dce0eec10139b65deddb8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1ecb5ca07e249b185dce0eec10139b65deddb8d", "patch": "@@ -1,3 +1,8 @@\n+Sat Apr 18 15:41:16 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* regmove.c (fixup_match_1): In three places, in flag_exceptions\n+\tcheck, change p to q.\n+\n Sat Apr 18 15:30:49 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* gcc.c (lang_specific_driver): Add new parm type to prototype."}, {"sha": "5e805086bb9b5efa7e9b819288889baa852d8dac", "filename": "gcc/regmove.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ecb5ca07e249b185dce0eec10139b65deddb8d/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ecb5ca07e249b185dce0eec10139b65deddb8d/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=a1ecb5ca07e249b185dce0eec10139b65deddb8d", "patch": "@@ -1345,7 +1345,7 @@ fixup_match_1 (insn, set, src, src_subreg, dst, backward, operand_number,\n \t\t     it is inside an EH region.  There is no easy way to tell,\n \t\t     so we just always break when we see a CALL_INSN if\n \t\t     flag_exceptions is nonzero.  */\n-\t\t  if (flag_exceptions && GET_CODE (p) == CALL_INSN)\n+\t\t  if (flag_exceptions && GET_CODE (q) == CALL_INSN)\n \t\t    {\n \t\t      q = 0;\n \t\t      break;\n@@ -1520,7 +1520,7 @@ fixup_match_1 (insn, set, src, src_subreg, dst, backward, operand_number,\n \t\t it is inside an EH region.  There is no easy way to tell,\n \t\t so we just always break when we see a CALL_INSN if\n \t\t flag_exceptions is nonzero.  */\n-\t      if (flag_exceptions && GET_CODE (p) == CALL_INSN)\n+\t      if (flag_exceptions && GET_CODE (q) == CALL_INSN)\n \t\t{\n \t\t  q = 0;\n \t\t  break;\n@@ -1604,7 +1604,7 @@ fixup_match_1 (insn, set, src, src_subreg, dst, backward, operand_number,\n \t     is inside an EH region.  There is no easy way to tell so we\n \t     just always break when we see a CALL_INSN if flag_exceptions\n \t     is nonzero.  */\n-\t  if (flag_exceptions && GET_CODE (p) == CALL_INSN)\n+\t  if (flag_exceptions && GET_CODE (q) == CALL_INSN)\n \t    break;\n \n \t  if (GET_RTX_CLASS (GET_CODE (q)) != 'i')"}]}