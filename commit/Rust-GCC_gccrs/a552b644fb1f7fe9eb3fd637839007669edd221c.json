{"sha": "a552b644fb1f7fe9eb3fd637839007669edd221c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1MmI2NDRmYjFmN2ZlOWViM2ZkNjM3ODM5MDA3NjY5ZWRkMjIxYw==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2009-08-20T08:09:29Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-08-20T08:09:29Z"}, "message": "Fix twolf ICE for ARM\n\n2009-08-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n            Richard Earnshaw  <richard.earnshaw@arm.com>\n\n        * config/arm/arm.c (arm_emit_movpair): Handle CONST_INT.\n        * config/arm/arm.md (*arm_movtas_ze): New pattern for\n        movt.\n\n2009-08-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n            Richard Earnshaw  <richard.earnshaw@arm.com>\n\n        * testsuite/gcc.target/arm/20090811-1.c: New test.\n\nCo-Authored-By: Richard Earnshaw <rearnsha@arm.com>\n\nFrom-SVN: r150953", "tree": {"sha": "bd85b09ef5c6933e665835ee19e44cea0afdcc28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd85b09ef5c6933e665835ee19e44cea0afdcc28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a552b644fb1f7fe9eb3fd637839007669edd221c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a552b644fb1f7fe9eb3fd637839007669edd221c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a552b644fb1f7fe9eb3fd637839007669edd221c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a552b644fb1f7fe9eb3fd637839007669edd221c/comments", "author": null, "committer": null, "parents": [{"sha": "2fd74bffecf5255a07b42e935c8e44cb55414841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fd74bffecf5255a07b42e935c8e44cb55414841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fd74bffecf5255a07b42e935c8e44cb55414841"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "51f783e16e0faf9f37517462acd8c938b0abc6f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a552b644fb1f7fe9eb3fd637839007669edd221c", "patch": "@@ -1,3 +1,10 @@\n+2009-08-20  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+            Richard Earnshaw  <richard.earnshaw@arm.com>\n+\n+        * config/arm/arm.c (arm_emit_movpair): Handle CONST_INT.\n+        * config/arm/arm.md (*arm_movtas_ze): New pattern for\n+        movt.\n+\n 2009-08-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.md (reload_inhi, reload_outhi, reload_inqi, reload_outqi): New"}, {"sha": "e7e6beef09bf49c6f064b65fd2f85a863bb8a012", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a552b644fb1f7fe9eb3fd637839007669edd221c", "patch": "@@ -11558,14 +11558,23 @@ output_mov_long_double_arm_from_arm (rtx *operands)\n   return \"\";\n }\n \n-\n-/* Emit a MOVW/MOVT pair.  */\n-void arm_emit_movpair (rtx dest, rtx src)\n-{\n-  emit_set_insn (dest, gen_rtx_HIGH (SImode, src));\n-  emit_set_insn (dest, gen_rtx_LO_SUM (SImode, dest, src));\n-}\n-\n+void\n+arm_emit_movpair (rtx dest, rtx src)\n+ {\n+  /* If the src is an immediate, simplify it.  */\n+  if (CONST_INT_P (src))\n+    {\n+      HOST_WIDE_INT val = INTVAL (src);\n+      emit_set_insn (dest, GEN_INT (val & 0x0000ffff));\n+      if ((val >> 16) & 0x0000ffff)\n+        emit_set_insn (gen_rtx_ZERO_EXTRACT (SImode, dest, GEN_INT (16),\n+                                             GEN_INT (16)),\n+                       GEN_INT ((val >> 16) & 0x0000ffff));\n+      return;\n+    }\n+   emit_set_insn (dest, gen_rtx_HIGH (SImode, src));\n+   emit_set_insn (dest, gen_rtx_LO_SUM (SImode, dest, src));\n+ }\n \n /* Output a move from arm registers to an fpa registers.\n    OPERANDS[0] is an fpa register."}, {"sha": "09a1b0841e96537088b7d349118cee69272b3595", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=a552b644fb1f7fe9eb3fd637839007669edd221c", "patch": "@@ -11050,6 +11050,17 @@\n   [(set_attr \"conds\" \"clob\")]\n )\n \n+(define_insn \"*arm_movtas_ze\" \n+  [(set (zero_extract:SI (match_operand:SI 0 \"s_register_operand\" \"+r\")\n+                   (const_int 16)\n+                   (const_int 16))\n+        (match_operand:SI 1 \"const_int_operand\" \"\"))]\n+  \"TARGET_32BIT\"\n+  \"movt%?\\t%0, %c1\"\n+ [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"length\" \"4\")]\n+)\n+\n ;; Load the FPA co-processor patterns\n (include \"fpa.md\")\n ;; Load the Maverick co-processor patterns"}, {"sha": "b4ba7972c4fe8546bb676761d21799d1a3f6dfc2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a552b644fb1f7fe9eb3fd637839007669edd221c", "patch": "@@ -1,3 +1,8 @@\n+2009-08-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+            Richard Earnshaw  <richard.earnshaw@arm.com>\n+\n+        * testsuite/gcc.target/arm/20090811-1.c: New test.\n+\n 2009-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/41123"}, {"sha": "bc0dc93970fd77ccd60b4013cfd9465370dd1056", "filename": "gcc/testsuite/gcc.target/arm/20090811-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2F20090811-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a552b644fb1f7fe9eb3fd637839007669edd221c/gcc%2Ftestsuite%2Fgcc.target%2Farm%2F20090811-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2F20090811-1.c?ref=a552b644fb1f7fe9eb3fd637839007669edd221c", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mcpu=cortex-a8 -mfpu=vfp3 -mfloat-abi=softfp\" } */\n+\n+typedef struct cb\n+{\n+  int cxc;\n+  short int pside;\n+}  *CBPTR;\n+typedef struct rwb\n+{\n+  int stx;\n+} RWB;\n+extern CBPTR *car;\n+extern RWB *rwAr;\n+extern int nts;\n+extern int nRws;\n+void f()\n+{\n+  CBPTR pptr ;\n+  int  k_lt, k_rt, k_span, rw, p, rt;\n+  int sa ;\n+  k_rt = 0;\n+  k_lt = 10000000;\n+  for (rw = 1; rw <= nRws; rw++)\n+    k_lt = rwAr[rw].stx;\n+  k_span = k_rt - k_lt;\n+  for (; p <= nts; p++)\n+    {\n+      pptr = car[p];\n+      if (pptr->pside == 3)\n+        pptr->cxc += (int)(((double)rt / (double) k_span) *((double) sa));\n+    }\n+}"}]}