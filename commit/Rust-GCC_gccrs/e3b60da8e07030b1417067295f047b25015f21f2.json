{"sha": "e3b60da8e07030b1417067295f047b25015f21f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiNjBkYThlMDcwMzBiMTQxNzA2NzI5NWYwNDdiMjUwMTVmMjFmMg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-01-29T17:02:14Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-01-29T19:14:40Z"}, "message": "c++: Fix template arguments comparison with class NTTP [PR91754]\n\nHere we fail to compile the attached test, stating that the use of\nT<s> in T<s>::T() {} is \"invalid use of incomplete type\".  It is a\nfunction definition so grokdeclarator checks that the qualifying type\nis complete.\n\nWhen we parsed the class T, finish_struct gave the class a non-null\nTYPE_SIZE, making it COMPLETE_TYPE_P.  But then we're parsing T<s>,\na TEMPLATE_ID, in\n\n  T<s>::T() {}\n\nso try to lookup_template_class T.  This failed because we couldn't\nfind such a class: comp_template_args told us that the argument lists\ndon't match, because one of the args was wrapped in a VIEW_CONVERT_EXPR\nto make it look const.  It seems to me that we should see through\nthese artificial wrappers and consider the args same.\n\n2020-01-29  Marek Polacek  <polacek@redhat.com>\n\n\tPR c++/91754 - Fix template arguments comparison with class NTTP.\n\t* pt.c (class_nttp_const_wrapper_p): New.\n\t(template_args_equal): See through class_nttp_const_wrapper_p\n\targuments.\n\n\t* g++.dg/cpp2a/nontype-class30.C: New test.", "tree": {"sha": "6c497a22156de30d0464486756e4fe5c5fcf9673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c497a22156de30d0464486756e4fe5c5fcf9673"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3b60da8e07030b1417067295f047b25015f21f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b60da8e07030b1417067295f047b25015f21f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b60da8e07030b1417067295f047b25015f21f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b60da8e07030b1417067295f047b25015f21f2/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "423284053ec51832bc4c823fb90dc41e632e37ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423284053ec51832bc4c823fb90dc41e632e37ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423284053ec51832bc4c823fb90dc41e632e37ac"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "3029714d2828fc64600ac30067fd44e27ca0d9e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e3b60da8e07030b1417067295f047b25015f21f2", "patch": "@@ -1,3 +1,10 @@\n+2020-01-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91754 - Fix template arguments comparison with class NTTP.\n+\t* pt.c (class_nttp_const_wrapper_p): New.\n+\t(template_args_equal): See through class_nttp_const_wrapper_p\n+\targuments.\n+\n 2020-01-29  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/92948 - Fix class NTTP with template arguments."}, {"sha": "416ff63ca3ccd76a3fe9b5c2cd414aed86ce1ee3", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e3b60da8e07030b1417067295f047b25015f21f2", "patch": "@@ -8989,6 +8989,19 @@ coerce_innermost_template_parms (tree parms,\n   return coerced_args;\n }\n \n+/* Returns true if T is a wrapper to make a C++20 template parameter\n+   object const.  */\n+\n+static bool\n+class_nttp_const_wrapper_p (tree t)\n+{\n+  if (cxx_dialect < cxx2a)\n+    return false;\n+  return (TREE_CODE (t) == VIEW_CONVERT_EXPR\n+\t  && CP_TYPE_CONST_P (TREE_TYPE (t))\n+\t  && TREE_CODE (TREE_OPERAND (t, 0)) == TEMPLATE_PARM_INDEX);\n+}\n+\n /* Returns 1 if template args OT and NT are equivalent.  */\n \n int\n@@ -9001,6 +9014,11 @@ template_args_equal (tree ot, tree nt, bool partial_order /* = false */)\n   if (nt == any_targ_node || ot == any_targ_node)\n     return true;\n \n+  if (class_nttp_const_wrapper_p (nt))\n+    nt = TREE_OPERAND (nt, 0);\n+  if (class_nttp_const_wrapper_p (ot))\n+    ot = TREE_OPERAND (ot, 0);\n+\n   if (TREE_CODE (nt) == TREE_VEC)\n     /* For member templates */\n     return TREE_CODE (ot) == TREE_VEC && comp_template_args (ot, nt);"}, {"sha": "e38c4da8d72f133c60ed2ae716fd852b4228139a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3b60da8e07030b1417067295f047b25015f21f2", "patch": "@@ -1,3 +1,8 @@\n+2020-01-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/91754 - Fix template arguments comparison with class NTTP.\n+\t* g++.dg/cpp2a/nontype-class30.C: New test.\n+\n 2020-01-29  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/92948 - Fix class NTTP with template arguments."}, {"sha": "b2e174c7fd35e8569ad0ac9ed519fdfb1d266ab3", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class30.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3b60da8e07030b1417067295f047b25015f21f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class30.C?ref=e3b60da8e07030b1417067295f047b25015f21f2", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/91754 - Fix template arguments comparison with class NTTP.\n+// { dg-do compile { target c++2a } }\n+\n+struct S {};\n+\n+template<S s>\n+struct T {\n+  T();\n+};\n+\n+template<S s>\n+T<s>::T() {} \n+\n+S s;\n+T<s> t;"}]}