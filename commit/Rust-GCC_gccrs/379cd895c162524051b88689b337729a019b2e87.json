{"sha": "379cd895c162524051b88689b337729a019b2e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc5Y2Q4OTVjMTYyNTI0MDUxYjg4Njg5YjMzNzcyOWEwMTliMmU4Nw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-19T13:39:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-19T13:39:35Z"}, "message": "gcc/\n\t* config/m68k/m68k.md (bordered, bunordered, buneq, bunge, bungt)\n\t(bunle, bunlt, bltgt, bordered_rev, bunordered_rev, buneq_rev)\n\t(bunge_rev, bungt_rev, bunle_rev, bunlt_rev, bltgt_rev): Change\n\tcondition from TARGET_68881 to TARGET_HARD_FLOAT.\n\nFrom-SVN: r120960", "tree": {"sha": "b5bfcb0c7030167f974ced8b35153b91f42a48c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5bfcb0c7030167f974ced8b35153b91f42a48c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/379cd895c162524051b88689b337729a019b2e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/379cd895c162524051b88689b337729a019b2e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/379cd895c162524051b88689b337729a019b2e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/379cd895c162524051b88689b337729a019b2e87/comments", "author": null, "committer": null, "parents": [{"sha": "7a6525d680adecf48a0302cb13cc9dcc93fe78d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a6525d680adecf48a0302cb13cc9dcc93fe78d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a6525d680adecf48a0302cb13cc9dcc93fe78d3"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "ba4a8b5ead583b1b697c8bb84d1795612730bfa4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/379cd895c162524051b88689b337729a019b2e87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/379cd895c162524051b88689b337729a019b2e87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=379cd895c162524051b88689b337729a019b2e87", "patch": "@@ -1,3 +1,10 @@\n+2007-01-19  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/m68k/m68k.md (bordered, bunordered, buneq, bunge, bungt)\n+\t(bunle, bunlt, bltgt, bordered_rev, bunordered_rev, buneq_rev)\n+\t(bunge_rev, bungt_rev, bunle_rev, bunlt_rev, bltgt_rev): Change\n+\tcondition from TARGET_68881 to TARGET_HARD_FLOAT.\n+\n 2007-01-19  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* longlong.h (count_leading_zeros, COUNT_LEADING_ZEROS_0): Add"}, {"sha": "4d92e18011111b2fb9f3972ce87daa703580f00b", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/379cd895c162524051b88689b337729a019b2e87/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/379cd895c162524051b88689b337729a019b2e87/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=379cd895c162524051b88689b337729a019b2e87", "patch": "@@ -5900,7 +5900,7 @@\n \t(if_then_else (ordered (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbor %l0\" : \"fjor %l0\";\n@@ -5911,7 +5911,7 @@\n \t(if_then_else (unordered (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbun %l0\" : \"fjun %l0\";\n@@ -5922,7 +5922,7 @@\n \t(if_then_else (uneq (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbueq %l0\" : \"fjueq %l0\";\n@@ -5933,7 +5933,7 @@\n \t(if_then_else (unge (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbuge %l0\" : \"fjuge %l0\";\n@@ -5944,7 +5944,7 @@\n \t(if_then_else (ungt (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbugt %l0\" : \"fjugt %l0\";\n@@ -5955,7 +5955,7 @@\n \t(if_then_else (unle (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbule %l0\" : \"fjule %l0\";\n@@ -5966,7 +5966,7 @@\n \t(if_then_else (unlt (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbult %l0\" : \"fjult %l0\";\n@@ -5977,7 +5977,7 @@\n \t(if_then_else (ltgt (cc0) (const_int 0))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbogl %l0\" : \"fjogl %l0\";\n@@ -6118,7 +6118,7 @@\n \t(if_then_else (ordered (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbun %l0\" : \"fjun %l0\";\n@@ -6129,7 +6129,7 @@\n \t(if_then_else (unordered (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbor %l0\" : \"fjor %l0\";\n@@ -6140,7 +6140,7 @@\n \t(if_then_else (uneq (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbogl %l0\" : \"fjogl %l0\";\n@@ -6151,7 +6151,7 @@\n \t(if_then_else (unge (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbolt %l0\" : \"fjolt %l0\";\n@@ -6162,7 +6162,7 @@\n \t(if_then_else (ungt (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbole %l0\" : \"fjole %l0\";\n@@ -6173,7 +6173,7 @@\n \t(if_then_else (unle (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbogt %l0\" : \"fjogt %l0\";\n@@ -6184,7 +6184,7 @@\n \t(if_then_else (unlt (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fboge %l0\" : \"fjoge %l0\";\n@@ -6195,7 +6195,7 @@\n \t(if_then_else (ltgt (cc0) (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_68881\"\n+  \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n   return MOTOROLA ? \"fbueq %l0\" : \"fjueq %l0\";"}]}