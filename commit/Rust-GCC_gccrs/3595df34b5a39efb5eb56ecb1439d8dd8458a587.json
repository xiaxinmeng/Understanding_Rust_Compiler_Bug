{"sha": "3595df34b5a39efb5eb56ecb1439d8dd8458a587", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5NWRmMzRiNWEzOWVmYjVlYjU2ZWNiMTQzOWQ4ZGQ4NDU4YTU4Nw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-21T20:26:12Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-21T20:26:12Z"}, "message": "re PR d/90130 (gdc.test/runnable/test12.d FAILs)\n\n    PR d/90130\nd/dmd: Merge upstream dmd 065fbd452\n\nFixes endian bug in CTFE, and corrects tests in the D2 testsuite that\nfailed on big endian targets.\n\nInitial patch by Robin Dapp.\n\nReviewed-on: https://github.com/dlang/dmd/pull/9665\n\nFrom-SVN: r270485", "tree": {"sha": "b99cfbb7070c222a9e0d179244991d1cb7441d0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b99cfbb7070c222a9e0d179244991d1cb7441d0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3595df34b5a39efb5eb56ecb1439d8dd8458a587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3595df34b5a39efb5eb56ecb1439d8dd8458a587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3595df34b5a39efb5eb56ecb1439d8dd8458a587", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3595df34b5a39efb5eb56ecb1439d8dd8458a587/comments", "author": null, "committer": null, "parents": [{"sha": "f94302e90b09bc30d5ba357d4f84aa37f7a75ad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94302e90b09bc30d5ba357d4f84aa37f7a75ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f94302e90b09bc30d5ba357d4f84aa37f7a75ad1"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "c360fe5c2ed427a44b63eeb25b4e8d2c477007fd", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=3595df34b5a39efb5eb56ecb1439d8dd8458a587", "patch": "@@ -1,4 +1,4 @@\n-c185f9df1789456c7d88d047f2df23dd784f1182\n+065fbd452f2aa498fc3a554be48a5495bd98aa14\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "ed3e7491983106425a5910a343bba18aadc709dd", "filename": "gcc/d/dmd/constfold.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Fd%2Fdmd%2Fconstfold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Fd%2Fdmd%2Fconstfold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fconstfold.c?ref=3595df34b5a39efb5eb56ecb1439d8dd8458a587", "patch": "@@ -1752,14 +1752,16 @@ UnionExp Cat(Type *type, Expression *e1, Expression *e2)\n     }\n     else if (e1->op == TOKint64 && e2->op == TOKstring)\n     {\n-        // Concatenate the strings\n+        // [w|d]?char ~ string --> string\n+        // We assume that we only ever prepend one char of the same type\n+        // (wchar,dchar) as the string's characters.\n         StringExp *es2 = (StringExp *)e2;\n         size_t len = 1 + es2->len;\n         unsigned char sz = es2->sz;\n         dinteger_t v = e1->toInteger();\n \n         void *s = mem.xmalloc((len + 1) * sz);\n-        memcpy((char *)s, &v, sz);\n+        Port::valcpy((char *)s, v, sz);\n         memcpy((char *)s + sz, es2->string, es2->len * sz);\n \n         // Add terminating 0"}, {"sha": "91d93dbf81ee438f385de20c10293015a6dbe390", "filename": "gcc/testsuite/gdc.test/runnable/mars1.d", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d?ref=3595df34b5a39efb5eb56ecb1439d8dd8458a587", "patch": "@@ -238,13 +238,13 @@ void test13023(ulong n)\n \n struct U { int a; union { char c; int d; } long b; }\n \n-U f = { b:3, d:2, a:1 };\n+U f = { b:3, d:0x22222222, a:1 };\n \n void testU()\n {\n     assert(f.b == 3);\n-    assert(f.d == 2);\n-    assert(f.c == 2);\n+    assert(f.d == 0x22222222);\n+    assert(f.c == 0x22);\n     assert(f.a == 1);\n     assert(f.sizeof == 16);\n     assert(U.sizeof == 16);"}, {"sha": "2b1fb0e62f7b5dac50b5be7fd29da704785c3b1e", "filename": "gcc/testsuite/gdc.test/runnable/test12.d", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d?ref=3595df34b5a39efb5eb56ecb1439d8dd8458a587", "patch": "@@ -622,9 +622,12 @@ struct S29 {\n \n int hoge(S29 s) {\n     char[10] b;\n-    printf(\"%x\\n\", s);\n-    sprintf(b.ptr, \"%x\", s);\n-    assert(b[0 .. 7] == \"4030201\");\n+    printf(\"%x\\n\", *cast(int*)&s);\n+    sprintf(b.ptr, \"%x\", *cast(int*)&s);\n+    version (LittleEndian)\n+        assert(b[0 .. 7] == \"4030201\");\n+    version (BigEndian)\n+        assert(b[0 .. 7] == \"1020304\");\n     return 0;\n }\n "}, {"sha": "f43f6a4609163e15bf4ec709c59d557318cb56d3", "filename": "gcc/testsuite/gdc.test/runnable/test23.d", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3595df34b5a39efb5eb56ecb1439d8dd8458a587/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d?ref=3595df34b5a39efb5eb56ecb1439d8dd8458a587", "patch": "@@ -553,19 +553,22 @@ void test24()\n \n void test25()\n {\n-  char[6] cstr = \"123456\"c;\n-  auto str1 = cast(wchar[3])(cstr);\n-\n-  writefln(\"str1: \", (cast(char[])str1).length , \" : \", (cast(char[])str1));\n-  assert(cast(char[])str1 == \"123456\"c);\n-\n-  auto str2 = cast(wchar[3])(\"789abc\"c);\n-  writefln(\"str2: \", (cast(char[])str2).length , \" : \", (cast(char[])str2));\n-  assert(cast(char[])str2 == \"789abc\"c);\n-\n-  auto str3 = cast(wchar[3])(\"defghi\");\n-  writefln(\"str3: \", (cast(char[])str3).length , \" : \", (cast(char[])str3));\n-  assert(cast(char[])str3 == \"d\\000e\\000f\\000\"c);\n+    char[6] cstr = \"123456\"c;\n+    auto str1 = cast(wchar[3])(cstr);\n+\n+    writefln(\"str1: \", (cast(char[])str1).length , \" : \", (cast(char[])str1));\n+    assert(cast(char[])str1 == \"123456\"c);\n+\n+    auto str2 = cast(wchar[3])(\"789abc\"c);\n+    writefln(\"str2: \", (cast(char[])str2).length , \" : \", (cast(char[])str2));\n+    assert(cast(char[])str2 == \"789abc\"c);\n+\n+    auto str3 = cast(wchar[3])(\"defghi\");\n+    writefln(\"str3: \", (cast(char[])str3).length , \" : \", (cast(char[])str3));\n+    version (LittleEndian)\n+        assert(cast(char[])str3 == \"d\\000e\\000f\\000\"c);\n+    version (BigEndian)\n+        assert(cast(char[])str3 == \"\\000d\\000e\\000f\"c);\n }\n \n /*******************************************/"}]}