{"sha": "2c9b7077b72529fbbe896212a0088bff6025c5e7", "node_id": "C_kwDOANBUbNoAKDJjOWI3MDc3YjcyNTI5ZmJiZTg5NjIxMmEwMDg4YmZmNjAyNWM1ZTc", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-02-17T05:04:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-02-17T22:50:59Z"}, "message": "c++: inlining explicit instantiations [PR104539]\n\nThe PR10968 fix cleared DECL_COMDAT to force output of explicit\ninstantiations.  Then the PR59469 fix added a call to mark_needed, after\nwhich we no longer need to clear DECL_COMDAT, and leaving it set allows us\nto inline explicit instantiations without worrying about symbol\ninterposition.\n\nI suppose there's an argument to be made that an explicit instantiation\ndeclaration (extern template) should clear DECL_COMDAT, since that suggests\nthat there will be only a single instantiation somewhere that could be\nsubject to interposition, but that doesn't change the 'inline' semantics,\nand it seems cleaner to treat template instantiations uniformly.\n\n\tPR c++/104539\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (mark_decl_instantiated): Don't clear DECL_COMDAT.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/ipa/inline-4.C: New test.", "tree": {"sha": "c84aba9d3039be7e36d91f78bac3246369748514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c84aba9d3039be7e36d91f78bac3246369748514"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c9b7077b72529fbbe896212a0088bff6025c5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9b7077b72529fbbe896212a0088bff6025c5e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9b7077b72529fbbe896212a0088bff6025c5e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9b7077b72529fbbe896212a0088bff6025c5e7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b71bc7c8b18bd1b22debfde155f175fd1654942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b71bc7c8b18bd1b22debfde155f175fd1654942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b71bc7c8b18bd1b22debfde155f175fd1654942"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "352cff944d00906eb5682bb97f597f0ce633ac70", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9b7077b72529fbbe896212a0088bff6025c5e7/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9b7077b72529fbbe896212a0088bff6025c5e7/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=2c9b7077b72529fbbe896212a0088bff6025c5e7", "patch": "@@ -24726,9 +24726,6 @@ mark_decl_instantiated (tree result, int extern_p)\n        set correctly by tsubst.  */\n     TREE_PUBLIC (result) = 1;\n \n-  /* This might have been set by an earlier implicit instantiation.  */\n-  DECL_COMDAT (result) = 0;\n-\n   if (extern_p)\n     {\n       DECL_EXTERNAL (result) = 1;"}, {"sha": "204aa7a366e41c4d35c4f70d42e9ef3c0dfb0f71", "filename": "gcc/testsuite/g++.dg/ipa/inline-4.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9b7077b72529fbbe896212a0088bff6025c5e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Finline-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9b7077b72529fbbe896212a0088bff6025c5e7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Finline-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Finline-4.C?ref=2c9b7077b72529fbbe896212a0088bff6025c5e7", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/104539\n+// { dg-additional-options \"-O3 -fdump-ipa-inline\" }\n+// { dg-final { scan-ipa-dump-not \"overwritten at link time\" \"inline\" } }\n+\n+template <int>\n+//inline\n+int f() {\n+  return 0;\n+}\n+\n+template int f<0>();\n+\n+int g() {\n+  return f<0>() + 1;\n+}"}]}