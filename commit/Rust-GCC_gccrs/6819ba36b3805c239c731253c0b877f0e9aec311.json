{"sha": "6819ba36b3805c239c731253c0b877f0e9aec311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgxOWJhMzZiMzgwNWMyMzljNzMxMjUzYzBiODc3ZjBlOWFlYzMxMQ==", "commit": {"author": {"name": "Eric Blake", "email": "ericb@gcc.gnu.org", "date": "2008-06-19T15:08:53Z"}, "committer": {"name": "Eric Blake", "email": "ericb@gcc.gnu.org", "date": "2008-06-19T15:08:53Z"}, "message": "Adjust strsignal to POSIX 200x prototype.\n\n2008-06-19  Eric Blake  <ebb9@byu.net>\n\n\tAdjust strsignal to POSIX 200x prototype.\n\t* strsignal.c (strsignal): Remove const.\n\nFrom-SVN: r136949", "tree": {"sha": "33bdae1b6448e6192b4c73feab2fce1f71a8594b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33bdae1b6448e6192b4c73feab2fce1f71a8594b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6819ba36b3805c239c731253c0b877f0e9aec311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6819ba36b3805c239c731253c0b877f0e9aec311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6819ba36b3805c239c731253c0b877f0e9aec311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6819ba36b3805c239c731253c0b877f0e9aec311/comments", "author": null, "committer": null, "parents": [{"sha": "09a46078e1500a32482f8c689948b86869bfcec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09a46078e1500a32482f8c689948b86869bfcec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09a46078e1500a32482f8c689948b86869bfcec1"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "b77e66df94cf1c27122c80c492f27974ec48c0d5", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6819ba36b3805c239c731253c0b877f0e9aec311/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6819ba36b3805c239c731253c0b877f0e9aec311/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=6819ba36b3805c239c731253c0b877f0e9aec311", "patch": "@@ -1,3 +1,8 @@\n+2008-06-19  Eric Blake  <ebb9@byu.net>\n+\n+\tAdjust strsignal to POSIX 200x prototype.\n+\t* strsignal.c (strsignal): Remove const.\n+\n 2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate.\n@@ -123,9 +128,9 @@\n \t* pexecute.txh (pex_free): Document process killing.\n \n 2007-08-31  Douglas Gregor  <doug.gregor@gmail.com>\n-\t\n+\n \t* cp-demangle.c (d_dump): Handle\n-\tDEMANGLE_COMPONENT_RVALUE_REFERENCE. \n+\tDEMANGLE_COMPONENT_RVALUE_REFERENCE.\n \t(d_make_comp): Ditto.\n \t(cplus_demangle_type): Ditto.\n \t(d_print_comp): Ditto.\n@@ -252,7 +257,7 @@\n \t* testsuite/Makefile.in: Add dummy install-pdf target.\n \n 2007-03-01  Peter Breitenlohner  <peb@mppmu.mpg.de>\n-            Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\t    Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR other/16513\n \t* Makefile.in: Install library under $(MULTIOSDIR), not $(MULTISUBDIR).\n@@ -263,7 +268,7 @@\n \t* configure.ac: add djgpp-specific results, so we don't have to\n \tlink during a cross compilation.\n \t* configure: Regenerated.\n-\t\n+\n 2007-01-31  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* hex.c: Fix typo.\n@@ -273,7 +278,7 @@\n 2007-01-31  Vladimir Prus  <vladimir@codesourcery.com>\n \n \t* pex-common.h (struct pex_obj): New fields\n-\tstderr_pipe and read_err.\t\n+\tstderr_pipe and read_err.\n \t* pex-common.c (pex_init_common): Initialize\n \tstderr_pipe.\n \t(pex_run_in_environment): Add error checking\n@@ -362,7 +367,7 @@\n \tthe end of the string.\n \n 2006-11-30  Andrew Stubbs  <andrew.stubbs@st.com>\n-            J\"orn Rennecke <joern.rennecke@st.com>\n+\t    J\"orn Rennecke <joern.rennecke@st.com>\n \n \tPR driver/29931\n \t* make-relative-prefix.c (make_relative_prefix_1): New function,\n@@ -377,7 +382,7 @@\n \t(std_suffixes): Add \"\" as first element.\n \t(find_executable): Remove detection of already-present\n \textension. Try all suffixes in std_suffixes.\n-\t\t\t\t\n+\n 2006-11-07  Julian Brown  <julian@codesourcery.com>\n \n \t* floatformat.c (get_field): Fix segfault with little-endian word\n@@ -396,7 +401,7 @@\n 2006-10-25  Ben Elliston  <bje@au.ibm.com>\n \n \t* pexecute.txh: Wrap pexecute's \"flag\" argument with @var {..}.\n-\t\n+\n 2006-10-10  Brooks Moses  <bmoses@stanford.edu>\n \n \t* Makefile.in: Added \"pdf\", \"libiberty.pdf\" target support.\n@@ -501,8 +506,8 @@\n 2006-04-06  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.in: Add install-html, install-html-am, and\n-\tinstall-html-recursive targets. Define mkdir_p and \n-\tNORMAL_INSTALL. \n+\tinstall-html-recursive targets. Define mkdir_p and\n+\tNORMAL_INSTALL.\n \t* configure.ac: AC_SUBST datarootdir, docdir, htmldir.\n \t* configure: Regenerate.\n \t* testsuite/Makefile.in: Add install-html and html targets.\n@@ -552,7 +557,7 @@\n 2006-01-29  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* configure.ac: Add -Wc++-compat to ac_libibety_warn_cflags where\n-\tsupported. \n+\tsupported.\n \t* configure: Regenerated.\n \n 2006-01-20  Carlos O'Donell  <carlos@codesourcery.com>\n@@ -582,7 +587,7 @@\n \t* testsuite/test-demangle.c (main): Recognize option --ret-postfix\n \t* testsuite/demangle-expected: Test cases to verify extended encoding.\n \tUpdated comment to document --ret-postfix option.\n-\t\n+\n 2005-11-06  Richard Guenther  <rguenther@suse.de>\n \n \t* splay-tree.c (rotate_left): New function.\n@@ -718,7 +723,7 @@\n 2005-06-30  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* hashtab.c (EMPTY_ENTRY): Moved and renamed.\n-\t(DELETED_ENTRY): Ditto.\t\n+\t(DELETED_ENTRY): Ditto.\n \n 2005-06-20  Geoffrey Keating  <geoffk@apple.com>\n "}, {"sha": "666b1b4f15e577ec2d18cb68fbea0c7f9777accf", "filename": "libiberty/strsignal.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6819ba36b3805c239c731253c0b877f0e9aec311/libiberty%2Fstrsignal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6819ba36b3805c239c731253c0b877f0e9aec311/libiberty%2Fstrsignal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrsignal.c?ref=6819ba36b3805c239c731253c0b877f0e9aec311", "patch": "@@ -404,10 +404,10 @@ call to @code{strsignal}.\n \n #ifndef HAVE_STRSIGNAL\n \n-const char *\n+char *\n strsignal (int signo)\n {\n-  const char *msg;\n+  char *msg;\n   static char buf[32];\n \n #ifndef HAVE_SYS_SIGLIST\n@@ -428,14 +428,16 @@ strsignal (int signo)\n     {\n       /* In range, but no sys_siglist or no entry at this index. */\n       sprintf (buf, \"Signal %d\", signo);\n-      msg = (const char *) buf;\n+      msg = buf;\n     }\n   else\n     {\n-      /* In range, and a valid message.  Just return the message. */\n-      msg = (const char *) sys_siglist[signo];\n+      /* In range, and a valid message.  Just return the message.  We\n+\t can safely cast away const, since POSIX says the user must\n+\t not modify the result.\t */\n+      msg = (char *) sys_siglist[signo];\n     }\n-  \n+\n   return (msg);\n }\n "}]}