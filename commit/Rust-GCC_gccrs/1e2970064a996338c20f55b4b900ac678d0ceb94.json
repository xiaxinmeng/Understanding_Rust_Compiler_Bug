{"sha": "1e2970064a996338c20f55b4b900ac678d0ceb94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyOTcwMDY0YTk5NjMzOGMyMGY1NWI0YjkwMGFjNjc4ZDBjZWI5NA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-01-19T14:02:40Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-01-19T14:02:40Z"}, "message": "re PR c++/68586 (Enum template parameter wrongly rejected)\n\n\tPR c++/68586\n\t* constexpr.c (clear_cv_cache): New.\n\t* cp-gimplify.c (clear_fold_cache): New.\n\t* cp-tree.h (clear_cv_cache, clear_fold_cache): Declare.\n\t* decl.c (finish_enum_value_list): Call them.\n\n\t* g++.dg/cpp0x/enum30.C: New test.\n\nFrom-SVN: r232562", "tree": {"sha": "decf75e7e87bfbaae21783d477ba29dfa48b91bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/decf75e7e87bfbaae21783d477ba29dfa48b91bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e2970064a996338c20f55b4b900ac678d0ceb94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2970064a996338c20f55b4b900ac678d0ceb94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2970064a996338c20f55b4b900ac678d0ceb94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2970064a996338c20f55b4b900ac678d0ceb94/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8012fbce973bebc5cf2a9905ebfa9fbaec1afa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8012fbce973bebc5cf2a9905ebfa9fbaec1afa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8012fbce973bebc5cf2a9905ebfa9fbaec1afa0"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "f9fce9d0e4fe4a5dcb845bd0e2129bee1c37244e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -1,3 +1,11 @@\n+2016-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/68586\n+\t* constexpr.c (clear_cv_cache): New.\n+\t* cp-gimplify.c (clear_fold_cache): New.\n+\t* cp-tree.h (clear_cv_cache, clear_fold_cache): Declare.\n+\t* decl.c (finish_enum_value_list): Call them.\n+\n 2016-01-18  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/11858"}, {"sha": "6b0e5a8717f456fae51658bd357291521455de59", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -4027,6 +4027,14 @@ maybe_constant_value (tree t, tree decl)\n   return ret;\n }\n \n+/* Dispose of the whole CV_CACHE.  */\n+\n+void\n+clear_cv_cache (void)\n+{\n+  gt_cleare_cache (cv_cache);\n+}\n+\n /* Like maybe_constant_value but first fully instantiate the argument.\n \n    Note: this is equivalent to instantiate_non_dependent_expr_sfinae"}, {"sha": "3f96901583037d1a0f0dd4a7ecab33afee72c213", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -1896,6 +1896,14 @@ c_fully_fold (tree x, bool /*in_init*/, bool */*maybe_const*/)\n \n static GTY((cache, deletable)) cache_map fold_cache;\n \n+/* Dispose of the whole FOLD_CACHE.  */\n+\n+void\n+clear_fold_cache (void)\n+{\n+  gt_cleare_cache (fold_cache);\n+}\n+\n /*  This function tries to fold an expression X.\n     To avoid combinatorial explosion, folding results are kept in fold_cache.\n     If we are processing a template or X is invalid, we don't fold at all."}, {"sha": "51589c3311b9ba8d038a59e6a47ac70d76056e08", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -6819,6 +6819,7 @@ extern bool cxx_omp_privatize_by_reference\t(const_tree);\n extern bool cxx_omp_disregard_value_expr\t(tree, bool);\n extern void cp_fold_function\t\t\t(tree);\n extern tree cp_fully_fold\t\t\t(tree);\n+extern void clear_fold_cache\t\t\t(void);\n \n /* in name-lookup.c */\n extern void suggest_alternatives_for            (location_t, tree);\n@@ -6919,6 +6920,7 @@ extern bool var_in_constexpr_fn                 (tree);\n extern void explain_invalid_constexpr_fn        (tree);\n extern vec<tree> cx_error_context               (void);\n extern tree fold_sizeof_expr\t\t\t(tree);\n+extern void clear_cv_cache\t\t\t(void);\n \n /* In c-family/cilk.c */\n extern bool cilk_valid_spawn                    (tree);"}, {"sha": "ceeef6061172361e406fafb85adbc872f558bec8", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -13392,6 +13392,11 @@ finish_enum_value_list (tree enumtype)\n \n   /* Finish debugging output for this type.  */\n   rest_of_type_compilation (enumtype, namespace_bindings_p ());\n+\n+  /* Each enumerator now has the type of its enumeration.  Clear the cache\n+     so that this change in types doesn't confuse us later on.  */\n+  clear_cv_cache ();\n+  clear_fold_cache ();\n }\n \n /* Finishes the enum type. This is called only the first time an"}, {"sha": "7aaebb007dc20da4980312e6b61761deb52fcad3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -1,3 +1,8 @@\n+2016-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/68586\n+\t* g++.dg/cpp0x/enum30.C: New test.\n+\n 2016-01-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69336"}, {"sha": "cf0c1b5e7ae6b625bbda0bc28007ada6eebcb5f3", "filename": "gcc/testsuite/g++.dg/cpp0x/enum30.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2970064a996338c20f55b4b900ac678d0ceb94/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum30.C?ref=1e2970064a996338c20f55b4b900ac678d0ceb94", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/68586\n+// { dg-do compile { target c++11 } }\n+\n+enum E { x , y = 1 + (x << 1) };\n+template<E> struct A {};\n+A<x> a;\n+\n+enum E2 : int { x2 , y2 = x2 << 1 };\n+template<E2> struct A2 {};\n+A2<x2> a2;\n+\n+enum class E3 { x3 , y3 = x3 << 1 };\n+template<E3> struct A3 {};\n+A3<E3::x3> a3;"}]}