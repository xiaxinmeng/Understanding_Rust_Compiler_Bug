{"sha": "b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjExOGRmZGI2ZDVhZDY4YzhmZjcwZWE1MTc5MjhjMzdlYmIxZmExMQ==", "commit": {"author": {"name": "Edward Smith-Rowland", "email": "emsr@gcc.gnu.org", "date": "2018-05-07T16:02:46Z"}, "committer": {"name": "Edward Smith-Rowland", "email": "emsr@gcc.gnu.org", "date": "2018-05-07T16:02:46Z"}, "message": "Revert 20001.\n\nFrom-SVN: r260002", "tree": {"sha": "83049b9daf6d6b066967bde3dc602ef4d22faa49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83049b9daf6d6b066967bde3dc602ef4d22faa49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/comments", "author": null, "committer": null, "parents": [{"sha": "c69c7d0381fb310ddc9635a2bf9a474ba2c73cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69c7d0381fb310ddc9635a2bf9a474ba2c73cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c69c7d0381fb310ddc9635a2bf9a474ba2c73cf9"}], "stats": {"total": 2818, "additions": 2487, "deletions": 331}, "files": [{"sha": "93935ab9787870db7c538bee3a0c45d97469bfb4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -1,9 +1,3 @@\n-2018-05-07  Edward Smith-Rowland  <3dw4rd@verizon.net>\n-\n-\tMoar PR libstdc++/80506\n-\t* include/bits/random.tcc (gamma_distribution::__generate_impl()):\n-\tFix magic number used in loop condition.\n-\n 2018-05-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/85642 fix is_nothrow_default_constructible<optional<T>>"}, {"sha": "f398150d41605bad62c8b0c75f2f1feaec89450f", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -2408,7 +2408,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t  __v = __v * __v * __v;\n \t\t  __u = __aurng();\n \t\t}\n-\t      while (__u > result_type(1.0) - 0.331 * __n * __n * __n * __n\n+\t      while (__u > result_type(1.0) - 0.0331 * __n * __n * __n * __n\n \t\t     && (std::log(__u) > (0.5 * __n * __n + __a1\n \t\t\t\t\t  * (1.0 - __v + std::log(__v)))));\n \n@@ -2429,7 +2429,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t  __v = __v * __v * __v;\n \t\t  __u = __aurng();\n \t\t}\n-\t      while (__u > result_type(1.0) - 0.331 * __n * __n * __n * __n\n+\t      while (__u > result_type(1.0) - 0.0331 * __n * __n * __n * __n\n \t\t     && (std::log(__u) > (0.5 * __n * __n + __a1\n \t\t\t\t\t  * (1.0 - __v + std::log(__v)))));\n "}, {"sha": "54f2b9db898d91e66353cbb01e0798c560f5430e", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 33, "deletions": 32, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -70,7 +70,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   ///  Return phase angle of @a z.\n   template<typename _Tp> _Tp arg(const complex<_Tp>&);\n   ///  Return @a z magnitude squared.\n-  template<typename _Tp> _Tp norm(const complex<_Tp>&);\n+  template<typename _Tp> _Tp _GLIBCXX_CONSTEXPR norm(const complex<_Tp>&);\n \n   ///  Return complex conjugate of @a z.\n   template<typename _Tp> complex<_Tp> conj(const complex<_Tp>&);\n@@ -322,7 +322,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   ///  Return new complex value @a x plus @a y.\n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator+(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -331,7 +331,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator+(const complex<_Tp>& __x, const _Tp& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -340,7 +340,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator+(const _Tp& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __y;\n@@ -352,7 +352,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   ///  Return new complex value @a x minus @a y.\n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -361,7 +361,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator-(const complex<_Tp>& __x, const _Tp& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -370,7 +370,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator-(const _Tp& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r(__x, -__y.imag());\n@@ -382,7 +382,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   ///  Return new complex value @a x times @a y.\n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -391,7 +391,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    inline _GLIBCXX_CONSTEXPR complex<_Tp>\n     operator*(const complex<_Tp>& __x, const _Tp& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -400,7 +400,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator*(const _Tp& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __y;\n@@ -412,7 +412,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   ///  Return new complex value @a x divided by @a y.\n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator/(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -421,7 +421,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator/(const complex<_Tp>& __x, const _Tp& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -430,7 +430,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator/(const _Tp& __x, const complex<_Tp>& __y)\n     {\n       complex<_Tp> __r = __x;\n@@ -441,48 +441,48 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   ///  Return @a x.\n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator+(const complex<_Tp>& __x)\n     { return __x; }\n \n   ///  Return complex negation of @a x.\n   template<typename _Tp>\n-    inline complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline complex<_Tp>\n     operator-(const complex<_Tp>& __x)\n     {  return complex<_Tp>(-__x.real(), -__x.imag()); }\n \n   //@{\n   ///  Return true if @a x is equal to @a y.\n   template<typename _Tp>\n-    inline _GLIBCXX_CONSTEXPR bool\n+    _GLIBCXX_CONSTEXPR inline bool\n     operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     { return __x.real() == __y.real() && __x.imag() == __y.imag(); }\n \n   template<typename _Tp>\n-    inline _GLIBCXX_CONSTEXPR bool\n+    _GLIBCXX_CONSTEXPR inline bool\n     operator==(const complex<_Tp>& __x, const _Tp& __y)\n     { return __x.real() == __y && __x.imag() == _Tp(); }\n \n   template<typename _Tp>\n-    inline _GLIBCXX_CONSTEXPR bool\n+    _GLIBCXX_CONSTEXPR inline bool\n     operator==(const _Tp& __x, const complex<_Tp>& __y)\n     { return __x == __y.real() && _Tp() == __y.imag(); }\n   //@}\n \n   //@{\n   ///  Return false if @a x is equal to @a y.\n   template<typename _Tp>\n-    inline _GLIBCXX_CONSTEXPR bool\n+    _GLIBCXX_CONSTEXPR inline bool\n     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     { return __x.real() != __y.real() || __x.imag() != __y.imag(); }\n \n   template<typename _Tp>\n-    inline _GLIBCXX_CONSTEXPR bool\n+    _GLIBCXX_CONSTEXPR inline bool\n     operator!=(const complex<_Tp>& __x, const _Tp& __y)\n     { return __x.real() != __y || __x.imag() != _Tp(); }\n \n   template<typename _Tp>\n-    inline _GLIBCXX_CONSTEXPR bool\n+    _GLIBCXX_CONSTEXPR inline bool\n     operator!=(const _Tp& __x, const complex<_Tp>& __y)\n     { return __x != __y.real() || _Tp() != __y.imag(); }\n   //@}\n@@ -658,7 +658,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct _Norm_helper\n     {\n       template<typename _Tp>\n-        static inline _Tp _S_do_it(const complex<_Tp>& __z)\n+        static _GLIBCXX_CONSTEXPR inline _Tp _S_do_it(const complex<_Tp>& __z)\n         {\n           const _Tp __x = __z.real();\n           const _Tp __y = __z.imag();\n@@ -670,15 +670,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct _Norm_helper<true>\n     {\n       template<typename _Tp>\n-        static inline _Tp _S_do_it(const complex<_Tp>& __z)\n+        static _GLIBCXX_CONSTEXPR inline _Tp _S_do_it(const complex<_Tp>& __z)\n         {\n           _Tp __res = std::abs(__z);\n           return __res * __res;\n         }\n     };\n \n   template<typename _Tp>\n-    inline _Tp\n+    _GLIBCXX_CONSTEXPR inline _Tp\n     norm(const complex<_Tp>& __z)\n     {\n       return _Norm_helper<__is_floating<_Tp>::__value\n@@ -1866,7 +1866,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return _Tp(); }\n \n   template<typename _Tp>\n-    inline typename __gnu_cxx::__promote<_Tp>::__type\n+    _GLIBCXX_CONSTEXPR inline typename __gnu_cxx::__promote<_Tp>::__type\n     norm(_Tp __x)\n     {\n       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;\n@@ -1905,10 +1905,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // Forward declarations.\n   // DR 781.\n-  template<typename _Tp> std::complex<_Tp> proj(const std::complex<_Tp>&);\n+  template<typename _Tp>\n+    _GLIBCXX_CONSTEXPR std::complex<_Tp> proj(const std::complex<_Tp>&);\n \n   template<typename _Tp>\n-    std::complex<_Tp>\n+    _GLIBCXX_CONSTEXPR std::complex<_Tp>\n     __complex_proj(const std::complex<_Tp>& __z)\n     {\n       const _Tp __den = (__z.real() * __z.real()\n@@ -1919,25 +1920,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n #if _GLIBCXX_USE_C99_COMPLEX\n-  inline __complex__ float\n+  _GLIBCXX_CONSTEXPR inline __complex__ float\n   __complex_proj(__complex__ float __z)\n   { return __builtin_cprojf(__z); }\n \n-  inline __complex__ double\n+  _GLIBCXX_CONSTEXPR inline __complex__ double\n   __complex_proj(__complex__ double __z)\n   { return __builtin_cproj(__z); }\n \n-  inline __complex__ long double\n+  _GLIBCXX_CONSTEXPR inline __complex__ long double\n   __complex_proj(const __complex__ long double& __z)\n   { return __builtin_cprojl(__z); }\n \n   template<typename _Tp>\n-    inline std::complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline std::complex<_Tp>\n     proj(const std::complex<_Tp>& __z)\n     { return __complex_proj(__z.__rep()); }\n #else\n   template<typename _Tp>\n-    inline std::complex<_Tp>\n+    _GLIBCXX_CONSTEXPR inline std::complex<_Tp>\n     proj(const std::complex<_Tp>& __z)\n     { return __complex_proj(__z); }\n #endif"}, {"sha": "1ae88a3c95228fd878112c2b7f64bb4cd4bf00ef", "filename": "libstdc++-v3/include/tr1/bessel_function.tcc", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fbessel_function.tcc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -353,21 +353,47 @@ namespace tr1\n      *   @param  __x   The argument of the Bessel functions.\n      *   @param  __Jnu  The output Bessel function of the first kind.\n      *   @param  __Nnu  The output Neumann function (Bessel function of the second kind).\n+     *\n+     *  Adapted for libstdc++ from GNU GSL version 2.4 specfunc/bessel_j.c\n+     *  Copyright (C) 1996,1997,1998,1999,2000,2001,2002,2003 Gerard Jungman\n      */\n     template <typename _Tp>\n     void\n     __cyl_bessel_jn_asymp(_Tp __nu, _Tp __x, _Tp & __Jnu, _Tp & __Nnu)\n     {\n       const _Tp __mu   = _Tp(4) * __nu * __nu;\n-      const _Tp __mum1 = __mu - _Tp(1);\n-      const _Tp __mum9 = __mu - _Tp(9);\n-      const _Tp __mum25 = __mu - _Tp(25);\n-      const _Tp __mum49 = __mu - _Tp(49);\n-      const _Tp __xx = _Tp(64) * __x * __x;\n-      const _Tp __P = _Tp(1) - __mum1 * __mum9 / (_Tp(2) * __xx)\n-                    * (_Tp(1) - __mum25 * __mum49 / (_Tp(12) * __xx));\n-      const _Tp __Q = __mum1 / (_Tp(8) * __x)\n-                    * (_Tp(1) - __mum9 * __mum25 / (_Tp(6) * __xx));\n+      const _Tp __8x = _Tp(8) * __x;\n+\n+      _Tp __P = _Tp(0);\n+      _Tp __Q = _Tp(0);\n+\n+      _Tp k = _Tp(0);\n+      _Tp __term = _Tp(1);\n+\n+      int __epsP = 0;\n+      int __epsQ = 0;\n+\n+      _Tp __eps = std::numeric_limits<_Tp>::epsilon();\n+\n+      do\n+        {\n+          __term *= (k == 0) ? _Tp(1) : -(__mu - (2 * k - 1) * (2 * k - 1)) / (k * __8x);\n+          __epsP = std::abs(__term) < std::abs(__eps * __P);\n+          __P += __term;\n+\n+          k++;\n+\n+          __term *= (__mu - (2 * k - 1) * (2 * k - 1)) / (k * __8x);\n+          __epsQ = std::abs(__term) < std::abs(__eps * __Q);\n+          __Q += __term;\n+\n+          if (__epsP && __epsQ && k > __nu / 2.)\n+            break;\n+\n+          k++;\n+        }\n+      while (k < 1000);\n+\n \n       const _Tp __chi = __x - (__nu + _Tp(0.5L))\n                             * __numeric_constants<_Tp>::__pi_2();"}, {"sha": "e2d1880ecb003b4d9ddc6a8b4fbbd5904f98a16b", "filename": "libstdc++-v3/include/tr1/legendre_function.tcc", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Flegendre_function.tcc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -65,7 +65,7 @@ namespace tr1\n   namespace __detail\n   {\n     /**\n-     *   @brief  Return the Legendre polynomial by recursion on degree\n+     *   @brief  Return the Legendre polynomial by recursion on order\n      *           @f$ l @f$.\n      * \n      *   The Legendre function of @f$ l @f$ and @f$ x @f$,\n@@ -74,7 +74,7 @@ namespace tr1\n      *     P_l(x) = \\frac{1}{2^l l!}\\frac{d^l}{dx^l}(x^2 - 1)^{l}\n      *   @f]\n      * \n-     *   @param  l  The degree of the Legendre polynomial.  @f$l >= 0@f$.\n+     *   @param  l  The order of the Legendre polynomial.  @f$l >= 0@f$.\n      *   @param  x  The argument of the Legendre polynomial.  @f$|x| <= 1@f$.\n      */\n     template<typename _Tp>\n@@ -127,19 +127,16 @@ namespace tr1\n      *     P_l^m(x) = (1 - x^2)^{m/2}\\frac{d^m}{dx^m}P_l(x)\n      *   @f]\n      * \n-     *   @param  l  The degree of the associated Legendre function.\n+     *   @param  l  The order of the associated Legendre function.\n      *              @f$ l >= 0 @f$.\n      *   @param  m  The order of the associated Legendre function.\n      *              @f$ m <= l @f$.\n      *   @param  x  The argument of the associated Legendre function.\n      *              @f$ |x| <= 1 @f$.\n-     *   @param  phase  The phase of the associated Legendre function.\n-     *                  Use -1 for the Condon-Shortley phase convention.\n      */\n     template<typename _Tp>\n     _Tp\n-    __assoc_legendre_p(unsigned int __l, unsigned int __m, _Tp __x,\n-\t\t       _Tp __phase = _Tp{+1})\n+    __assoc_legendre_p(unsigned int __l, unsigned int __m, _Tp __x)\n     {\n \n       if (__x < _Tp(-1) || __x > _Tp(+1))\n@@ -163,7 +160,7 @@ namespace tr1\n               _Tp __fact = _Tp(1);\n               for (unsigned int __i = 1; __i <= __m; ++__i)\n                 {\n-                  __p_mm *= __phase * __fact * __root;\n+                  __p_mm *= -__fact * __root;\n                   __fact += _Tp(2);\n                 }\n             }\n@@ -208,10 +205,8 @@ namespace tr1\n      *   but this factor is rather large for large @f$ l @f$ and @f$ m @f$\n      *   and so this function is stable for larger differences of @f$ l @f$\n      *   and @f$ m @f$.\n-     *   @note Unlike the case for __assoc_legendre_p the Condon-Shortley\n-     *   phase factor @f$ (-1)^m @f$ is present here.\n      * \n-     *   @param  l  The degree of the spherical associated Legendre function.\n+     *   @param  l  The order of the spherical associated Legendre function.\n      *              @f$ l >= 0 @f$.\n      *   @param  m  The order of the spherical associated Legendre function.\n      *              @f$ m <= l @f$.\n@@ -270,15 +265,19 @@ namespace tr1\n           const _Tp __lnpre_val =\n                     -_Tp(0.25L) * __numeric_constants<_Tp>::__lnpi()\n                     + _Tp(0.5L) * (__lnpoch + __m * __lncirc);\n-          const _Tp __sr = std::sqrt((_Tp(2) + _Tp(1) / __m)\n-                         / (_Tp(4) * __numeric_constants<_Tp>::__pi()));\n+          _Tp __sr = std::sqrt((_Tp(2) + _Tp(1) / __m)\n+                   / (_Tp(4) * __numeric_constants<_Tp>::__pi()));\n           _Tp __y_mm = __sgn * __sr * std::exp(__lnpre_val);\n           _Tp __y_mp1m = __y_mp1m_factor * __y_mm;\n \n           if (__l == __m)\n-            return __y_mm;\n+            {\n+              return __y_mm;\n+            }\n           else if (__l == __m + 1)\n-            return __y_mp1m;\n+            {\n+              return __y_mp1m;\n+            }\n           else\n             {\n               _Tp __y_lm = _Tp(0);"}, {"sha": "e393b4aa18347df2d5a0c3fb579e5c4b4e1eb46c", "filename": "libstdc++-v3/testsuite/special_functions/02_assoc_legendre/check_value.cc", "status": "modified", "additions": 267, "deletions": 267, "changes": 534, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F02_assoc_legendre%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F02_assoc_legendre%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F02_assoc_legendre%2Fcheck_value.cc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -1,6 +1,6 @@\n // { dg-do run { target c++11 } }\n-// { dg-options \"-D__STDCPP_WANT_MATH_SPEC_FUNCS__ -ffp-contract=off\" }\n-\n+// { dg-options \"-D__STDCPP_WANT_MATH_SPEC_FUNCS__\" }\n+//\n // Copyright (C) 2016-2018 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -30,7 +30,7 @@\n     { \\\n       std::cout << \"line \" << __LINE__ \\\n \t<< \"  max_abs_frac = \" << max_abs_frac \\\n-\t<< '\\n'; \\\n+\t<< std::endl; \\\n     }\n #else\n #  include <testsuite_hooks.h>\n@@ -148,53 +148,53 @@ const double toler002 = 2.5000000000000020e-13;\n // Test data for l=1, m=1.\n // max(|f - f_GSL|): 2.2204460492503131e-16 at index 12\n // max(|f - f_GSL| / |f_GSL|): 2.4227052612512390e-16\n-// mean(f - f_GSL): -1.0573552615477681e-17\n+// mean(f - f_GSL): 1.0573552615477681e-17\n // variance(f - f_GSL): 5.8695007828944331e-36\n // stddev(f - f_GSL): 2.4227052612512388e-18\n const testcase_assoc_legendre<double>\n data003[21] =\n {\n-  { 0.0000000000000000, 1, 1, \n+  { -0.0000000000000000, 1, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { 0.43588989435406728, 1, 1, \n+  { -0.43588989435406728, 1, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { 0.59999999999999987, 1, 1, \n+  { -0.59999999999999987, 1, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { 0.71414284285428509, 1, 1, \n+  { -0.71414284285428509, 1, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { 0.80000000000000004, 1, 1, \n+  { -0.80000000000000004, 1, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { 0.86602540378443860, 1, 1, \n+  { -0.86602540378443860, 1, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { 0.91651513899116799, 1, 1, \n+  { -0.91651513899116799, 1, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { 0.95393920141694555, 1, 1, \n+  { -0.95393920141694555, 1, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { 0.97979589711327120, 1, 1, \n+  { -0.97979589711327120, 1, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { 0.99498743710661997, 1, 1, \n+  { -0.99498743710661997, 1, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { 1.0000000000000000, 1, 1, \n+  { -1.0000000000000000, 1, 1, \n \t  0.0000000000000000, 0.0 },\n-  { 0.99498743710661997, 1, 1, \n+  { -0.99498743710661997, 1, 1, \n \t  0.10000000000000009, 0.0 },\n-  { 0.97979589711327120, 1, 1, \n+  { -0.97979589711327120, 1, 1, \n \t  0.20000000000000018, 0.0 },\n-  { 0.95393920141694577, 1, 1, \n+  { -0.95393920141694577, 1, 1, \n \t  0.30000000000000004, 0.0 },\n-  { 0.91651513899116788, 1, 1, \n+  { -0.91651513899116788, 1, 1, \n \t  0.40000000000000013, 0.0 },\n-  { 0.86602540378443860, 1, 1, \n+  { -0.86602540378443860, 1, 1, \n \t  0.50000000000000000, 0.0 },\n-  { 0.79999999999999993, 1, 1, \n+  { -0.79999999999999993, 1, 1, \n \t  0.60000000000000009, 0.0 },\n-  { 0.71414284285428475, 1, 1, \n+  { -0.71414284285428475, 1, 1, \n \t  0.70000000000000018, 0.0 },\n-  { 0.59999999999999987, 1, 1, \n+  { -0.59999999999999987, 1, 1, \n \t  0.80000000000000004, 0.0 },\n-  { 0.43588989435406711, 1, 1, \n+  { -0.43588989435406711, 1, 1, \n \t  0.90000000000000013, 0.0 },\n-  { 0.0000000000000000, 1, 1, \n+  { -0.0000000000000000, 1, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler003 = 2.5000000000000020e-13;\n@@ -256,53 +256,53 @@ const double toler004 = 2.5000000000000020e-13;\n // Test data for l=2, m=1.\n // max(|f - f_GSL|): 2.2204460492503131e-16 at index 3\n // max(|f - f_GSL| / |f_GSL|): 3.7770554319736585e-16\n-// mean(f - f_GSL): 1.0573552615477681e-17\n+// mean(f - f_GSL): -1.0573552615477681e-17\n // variance(f - f_GSL): 5.8695007828944331e-36\n // stddev(f - f_GSL): 2.4227052612512388e-18\n const testcase_assoc_legendre<double>\n data005[21] =\n {\n-  { -0.0000000000000000, 2, 1, \n+  { 0.0000000000000000, 2, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { -1.1769027147559816, 2, 1, \n+  { 1.1769027147559816, 2, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { -1.4399999999999999, 2, 1, \n+  { 1.4399999999999999, 2, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { -1.4996999699939983, 2, 1, \n+  { 1.4996999699939983, 2, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { -1.4399999999999999, 2, 1, \n+  { 1.4399999999999999, 2, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { -1.2990381056766580, 2, 1, \n+  { 1.2990381056766580, 2, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { -1.0998181667894014, 2, 1, \n+  { 1.0998181667894014, 2, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { -0.85854528127525076, 2, 1, \n+  { 0.85854528127525076, 2, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { -0.58787753826796263, 2, 1, \n+  { 0.58787753826796263, 2, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { -0.29849623113198592, 2, 1, \n+  { 0.29849623113198592, 2, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { 0.0000000000000000, 2, 1, \n+  { -0.0000000000000000, 2, 1, \n \t  0.0000000000000000, 0.0 },\n-  { 0.29849623113198626, 2, 1, \n+  { -0.29849623113198626, 2, 1, \n \t  0.10000000000000009, 0.0 },\n-  { 0.58787753826796330, 2, 1, \n+  { -0.58787753826796330, 2, 1, \n \t  0.20000000000000018, 0.0 },\n-  { 0.85854528127525132, 2, 1, \n+  { -0.85854528127525132, 2, 1, \n \t  0.30000000000000004, 0.0 },\n-  { 1.0998181667894018, 2, 1, \n+  { -1.0998181667894018, 2, 1, \n \t  0.40000000000000013, 0.0 },\n-  { 1.2990381056766580, 2, 1, \n+  { -1.2990381056766580, 2, 1, \n \t  0.50000000000000000, 0.0 },\n-  { 1.4400000000000002, 2, 1, \n+  { -1.4400000000000002, 2, 1, \n \t  0.60000000000000009, 0.0 },\n-  { 1.4996999699939983, 2, 1, \n+  { -1.4996999699939983, 2, 1, \n \t  0.70000000000000018, 0.0 },\n-  { 1.4399999999999999, 2, 1, \n+  { -1.4399999999999999, 2, 1, \n \t  0.80000000000000004, 0.0 },\n-  { 1.1769027147559812, 2, 1, \n+  { -1.1769027147559812, 2, 1, \n \t  0.90000000000000013, 0.0 },\n-  { 0.0000000000000000, 2, 1, \n+  { -0.0000000000000000, 2, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler005 = 2.5000000000000020e-13;\n@@ -418,53 +418,53 @@ const double toler007 = 2.5000000000000020e-13;\n // Test data for l=5, m=1.\n // max(|f - f_GSL|): 6.6613381477509392e-16 at index 14\n // max(|f - f_GSL| / |f_GSL|): 5.5186908001167120e-16\n-// mean(f - f_GSL): 1.0573552615477681e-17\n+// mean(f - f_GSL): -1.0573552615477681e-17\n // variance(f - f_GSL): 5.8695007828944331e-36\n // stddev(f - f_GSL): 2.4227052612512388e-18\n const testcase_assoc_legendre<double>\n data008[21] =\n {\n-  { -0.0000000000000000, 5, 1, \n+  { 0.0000000000000000, 5, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { 2.8099369608350981, 5, 1, \n+  { -2.8099369608350981, 5, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { 0.72180000000000089, 5, 1, \n+  { -0.72180000000000089, 5, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { -1.0951826834447254, 5, 1, \n+  { 1.0951826834447254, 5, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { -1.9775999999999998, 5, 1, \n+  { 1.9775999999999998, 5, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { -1.9282596881137892, 5, 1, \n+  { 1.9282596881137892, 5, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { -1.2070504380513671, 5, 1, \n+  { 1.2070504380513671, 5, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { -0.16079837663884300, 5, 1, \n+  { 0.16079837663884300, 5, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { 0.87005875663658538, 5, 1, \n+  { -0.87005875663658538, 5, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { 1.6083350053680323, 5, 1, \n+  { -1.6083350053680323, 5, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { 1.8750000000000000, 5, 1, \n+  { -1.8750000000000000, 5, 1, \n \t  0.0000000000000000, 0.0 },\n-  { 1.6083350053680314, 5, 1, \n+  { -1.6083350053680314, 5, 1, \n \t  0.10000000000000009, 0.0 },\n-  { 0.87005875663658327, 5, 1, \n+  { -0.87005875663658327, 5, 1, \n \t  0.20000000000000018, 0.0 },\n-  { -0.16079837663884422, 5, 1, \n+  { 0.16079837663884422, 5, 1, \n \t  0.30000000000000004, 0.0 },\n-  { -1.2070504380513694, 5, 1, \n+  { 1.2070504380513694, 5, 1, \n \t  0.40000000000000013, 0.0 },\n-  { -1.9282596881137892, 5, 1, \n+  { 1.9282596881137892, 5, 1, \n \t  0.50000000000000000, 0.0 },\n-  { -1.9775999999999998, 5, 1, \n+  { 1.9775999999999998, 5, 1, \n \t  0.60000000000000009, 0.0 },\n-  { -1.0951826834447216, 5, 1, \n+  { 1.0951826834447216, 5, 1, \n \t  0.70000000000000018, 0.0 },\n-  { 0.72180000000000089, 5, 1, \n+  { -0.72180000000000089, 5, 1, \n \t  0.80000000000000004, 0.0 },\n-  { 2.8099369608350999, 5, 1, \n+  { -2.8099369608350999, 5, 1, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 5, 1, \n+  { 0.0000000000000000, 5, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler008 = 2.5000000000000020e-13;\n@@ -526,53 +526,53 @@ const double toler009 = 2.5000000000000020e-13;\n // Test data for l=5, m=5.\n // max(|f - f_GSL|): 1.0231815394945443e-12 at index 12\n // max(|f - f_GSL| / |f_GSL|): 1.1990652164995755e-15\n-// mean(f - f_GSL): -3.1128538899966297e-14\n+// mean(f - f_GSL): 3.1128538899966297e-14\n // variance(f - f_GSL): 5.0871761537452526e-29\n // stddev(f - f_GSL): 7.1324442891236469e-15\n const testcase_assoc_legendre<double>\n data010[21] =\n {\n-  { 0.0000000000000000, 5, 5, \n+  { -0.0000000000000000, 5, 5, \n \t  -1.0000000000000000, 0.0 },\n-  { 14.870165800941818, 5, 5, \n+  { -14.870165800941818, 5, 5, \n \t  -0.90000000000000002, 0.0 },\n-  { 73.483199999999925, 5, 5, \n+  { -73.483199999999925, 5, 5, \n \t  -0.80000000000000004, 0.0 },\n-  { 175.53238298794764, 5, 5, \n+  { -175.53238298794764, 5, 5, \n \t  -0.69999999999999996, 0.0 },\n-  { 309.65760000000006, 5, 5, \n+  { -309.65760000000006, 5, 5, \n \t  -0.59999999999999998, 0.0 },\n-  { 460.34662869916559, 5, 5, \n+  { -460.34662869916559, 5, 5, \n \t  -0.50000000000000000, 0.0 },\n-  { 611.12496255819883, 5, 5, \n+  { -611.12496255819883, 5, 5, \n \t  -0.39999999999999991, 0.0 },\n-  { 746.50941479523703, 5, 5, \n+  { -746.50941479523703, 5, 5, \n \t  -0.29999999999999993, 0.0 },\n-  { 853.31600434671316, 5, 5, \n+  { -853.31600434671316, 5, 5, \n \t  -0.19999999999999996, 0.0 },\n-  { 921.55189181724734, 5, 5, \n+  { -921.55189181724734, 5, 5, \n \t  -0.099999999999999978, 0.0 },\n-  { 945.00000000000000, 5, 5, \n+  { -945.00000000000000, 5, 5, \n \t  0.0000000000000000, 0.0 },\n-  { 921.55189181724734, 5, 5, \n+  { -921.55189181724734, 5, 5, \n \t  0.10000000000000009, 0.0 },\n-  { 853.31600434671316, 5, 5, \n+  { -853.31600434671316, 5, 5, \n \t  0.20000000000000018, 0.0 },\n-  { 746.50941479523760, 5, 5, \n+  { -746.50941479523760, 5, 5, \n \t  0.30000000000000004, 0.0 },\n-  { 611.12496255819838, 5, 5, \n+  { -611.12496255819838, 5, 5, \n \t  0.40000000000000013, 0.0 },\n-  { 460.34662869916559, 5, 5, \n+  { -460.34662869916559, 5, 5, \n \t  0.50000000000000000, 0.0 },\n-  { 309.65759999999989, 5, 5, \n+  { -309.65759999999989, 5, 5, \n \t  0.60000000000000009, 0.0 },\n-  { 175.53238298794724, 5, 5, \n+  { -175.53238298794724, 5, 5, \n \t  0.70000000000000018, 0.0 },\n-  { 73.483199999999925, 5, 5, \n+  { -73.483199999999925, 5, 5, \n \t  0.80000000000000004, 0.0 },\n-  { 14.870165800941789, 5, 5, \n+  { -14.870165800941789, 5, 5, \n \t  0.90000000000000013, 0.0 },\n-  { 0.0000000000000000, 5, 5, \n+  { -0.0000000000000000, 5, 5, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler010 = 2.5000000000000020e-13;\n@@ -634,53 +634,53 @@ const double toler011 = 2.5000000000000020e-13;\n // Test data for l=10, m=1.\n // max(|f - f_GSL|): 1.3322676295501878e-15 at index 14\n // max(|f - f_GSL| / |f_GSL|): 5.3672431731635395e-16\n-// mean(f - f_GSL): -6.3441315692866085e-17\n+// mean(f - f_GSL): 6.3441315692866085e-17\n // variance(f - f_GSL): 2.1130202818419960e-34\n // stddev(f - f_GSL): 1.4536231567507432e-17\n const testcase_assoc_legendre<double>\n data012[21] =\n {\n-  { 0.0000000000000000, 10, 1, \n+  { -0.0000000000000000, 10, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { 3.0438748781479039, 10, 1, \n+  { -3.0438748781479039, 10, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { 0.87614260800000254, 10, 1, \n+  { -0.87614260800000254, 10, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { -2.9685359952934527, 10, 1, \n+  { 2.9685359952934527, 10, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { -1.2511825919999997, 10, 1, \n+  { 1.2511825919999997, 10, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { 2.0066877394361260, 10, 1, \n+  { -2.0066877394361260, 10, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { 2.4822196173476647, 10, 1, \n+  { -2.4822196173476647, 10, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { 0.12309508907433593, 10, 1, \n+  { -0.12309508907433593, 10, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { -2.2468221751958413, 10, 1, \n+  { 2.2468221751958413, 10, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { -2.2472659777983512, 10, 1, \n+  { 2.2472659777983512, 10, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { 0.0000000000000000, 10, 1, \n+  { -0.0000000000000000, 10, 1, \n \t  0.0000000000000000, 0.0 },\n-  { 2.2472659777983535, 10, 1, \n+  { -2.2472659777983535, 10, 1, \n \t  0.10000000000000009, 0.0 },\n-  { 2.2468221751958377, 10, 1, \n+  { -2.2468221751958377, 10, 1, \n \t  0.20000000000000018, 0.0 },\n-  { -0.12309508907433910, 10, 1, \n+  { 0.12309508907433910, 10, 1, \n \t  0.30000000000000004, 0.0 },\n-  { -2.4822196173476669, 10, 1, \n+  { 2.4822196173476669, 10, 1, \n \t  0.40000000000000013, 0.0 },\n-  { -2.0066877394361260, 10, 1, \n+  { 2.0066877394361260, 10, 1, \n \t  0.50000000000000000, 0.0 },\n-  { 1.2511825920000037, 10, 1, \n+  { -1.2511825920000037, 10, 1, \n \t  0.60000000000000009, 0.0 },\n-  { 2.9685359952934505, 10, 1, \n+  { -2.9685359952934505, 10, 1, \n \t  0.70000000000000018, 0.0 },\n-  { -0.87614260800000254, 10, 1, \n+  { 0.87614260800000254, 10, 1, \n \t  0.80000000000000004, 0.0 },\n-  { -3.0438748781478981, 10, 1, \n+  { 3.0438748781478981, 10, 1, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 10, 1, \n+  { 0.0000000000000000, 10, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler012 = 2.5000000000000020e-13;\n@@ -742,53 +742,53 @@ const double toler013 = 2.5000000000000020e-13;\n // Test data for l=10, m=5.\n // max(|f - f_GSL|): 2.9103830456733704e-11 at index 12\n // max(|f - f_GSL| / |f_GSL|): 1.4825078449301893e-15\n-// mean(f - f_GSL): -2.4253192047278085e-12\n+// mean(f - f_GSL): 2.4253192047278085e-12\n // variance(f - f_GSL): 3.0881409535313035e-25\n // stddev(f - f_GSL): 5.5571044200476413e-13\n const testcase_assoc_legendre<double>\n data014[21] =\n {\n-  { -0.0000000000000000, 10, 5, \n+  { 0.0000000000000000, 10, 5, \n \t  -1.0000000000000000, 0.0 },\n-  { -21343.618518164680, 10, 5, \n+  { 21343.618518164680, 10, 5, \n \t  -0.90000000000000002, 0.0 },\n-  { -40457.016407807983, 10, 5, \n+  { 40457.016407807983, 10, 5, \n \t  -0.80000000000000004, 0.0 },\n-  { -20321.279317331315, 10, 5, \n+  { 20321.279317331315, 10, 5, \n \t  -0.69999999999999996, 0.0 },\n-  { 14410.820616192004, 10, 5, \n+  { -14410.820616192004, 10, 5, \n \t  -0.59999999999999998, 0.0 },\n-  { 30086.169706116176, 10, 5, \n+  { -30086.169706116176, 10, 5, \n \t  -0.50000000000000000, 0.0 },\n-  { 17177.549337582834, 10, 5, \n+  { -17177.549337582834, 10, 5, \n \t  -0.39999999999999991, 0.0 },\n-  { -9272.5119495412546, 10, 5, \n+  { 9272.5119495412546, 10, 5, \n \t  -0.29999999999999993, 0.0 },\n-  { -26591.511184414714, 10, 5, \n+  { 26591.511184414714, 10, 5, \n \t  -0.19999999999999996, 0.0 },\n-  { -21961.951238504211, 10, 5, \n+  { 21961.951238504211, 10, 5, \n \t  -0.099999999999999978, 0.0 },\n-  { 0.0000000000000000, 10, 5, \n+  { -0.0000000000000000, 10, 5, \n \t  0.0000000000000000, 0.0 },\n-  { 21961.951238504229, 10, 5, \n+  { -21961.951238504229, 10, 5, \n \t  0.10000000000000009, 0.0 },\n-  { 26591.511184414703, 10, 5, \n+  { -26591.511184414703, 10, 5, \n \t  0.20000000000000018, 0.0 },\n-  { 9272.5119495412364, 10, 5, \n+  { -9272.5119495412364, 10, 5, \n \t  0.30000000000000004, 0.0 },\n-  { -17177.549337582877, 10, 5, \n+  { 17177.549337582877, 10, 5, \n \t  0.40000000000000013, 0.0 },\n-  { -30086.169706116176, 10, 5, \n+  { 30086.169706116176, 10, 5, \n \t  0.50000000000000000, 0.0 },\n-  { -14410.820616191972, 10, 5, \n+  { 14410.820616191972, 10, 5, \n \t  0.60000000000000009, 0.0 },\n-  { 20321.279317331391, 10, 5, \n+  { -20321.279317331391, 10, 5, \n \t  0.70000000000000018, 0.0 },\n-  { 40457.016407807983, 10, 5, \n+  { -40457.016407807983, 10, 5, \n \t  0.80000000000000004, 0.0 },\n-  { 21343.618518164636, 10, 5, \n+  { -21343.618518164636, 10, 5, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 10, 5, \n+  { 0.0000000000000000, 10, 5, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler014 = 2.5000000000000020e-13;\n@@ -904,53 +904,53 @@ const double toler016 = 2.5000000000000020e-13;\n // Test data for l=20, m=1.\n // max(|f - f_GSL|): 1.3322676295501878e-15 at index 12\n // max(|f - f_GSL| / |f_GSL|): 1.0752784502271902e-15\n-// mean(f - f_GSL): -1.4274296030894871e-16\n+// mean(f - f_GSL): 1.4274296030894871e-16\n // variance(f - f_GSL): 1.0697165176825104e-33\n // stddev(f - f_GSL): 3.2706521026891724e-17\n const testcase_assoc_legendre<double>\n data017[21] =\n {\n-  { -0.0000000000000000, 20, 1, \n+  { 0.0000000000000000, 20, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { -4.3838334818220499, 20, 1, \n+  { 4.3838334818220499, 20, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { 0.63138296146340844, 20, 1, \n+  { -0.63138296146340844, 20, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { -0.72274871413391395, 20, 1, \n+  { 0.72274871413391395, 20, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { 2.3203528743824910, 20, 1, \n+  { -2.3203528743824910, 20, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { -3.7399919228791405, 20, 1, \n+  { 3.7399919228791405, 20, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { 3.1692202279270085, 20, 1, \n+  { -3.1692202279270085, 20, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { -0.15804468835345031, 20, 1, \n+  { 0.15804468835345031, 20, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { -3.0366182393271171, 20, 1, \n+  { 3.0366182393271171, 20, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { 3.2115523815580209, 20, 1, \n+  { -3.2115523815580209, 20, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { -0.0000000000000000, 20, 1, \n+  { 0.0000000000000000, 20, 1, \n \t  0.0000000000000000, 0.0 },\n-  { -3.2115523815580169, 20, 1, \n+  { 3.2115523815580169, 20, 1, \n \t  0.10000000000000009, 0.0 },\n-  { 3.0366182393271259, 20, 1, \n+  { -3.0366182393271259, 20, 1, \n \t  0.20000000000000018, 0.0 },\n-  { 0.15804468835344135, 20, 1, \n+  { -0.15804468835344135, 20, 1, \n \t  0.30000000000000004, 0.0 },\n-  { -3.1692202279269970, 20, 1, \n+  { 3.1692202279269970, 20, 1, \n \t  0.40000000000000013, 0.0 },\n-  { 3.7399919228791405, 20, 1, \n+  { -3.7399919228791405, 20, 1, \n \t  0.50000000000000000, 0.0 },\n-  { -2.3203528743824995, 20, 1, \n+  { 2.3203528743824995, 20, 1, \n \t  0.60000000000000009, 0.0 },\n-  { 0.72274871413393793, 20, 1, \n+  { -0.72274871413393793, 20, 1, \n \t  0.70000000000000018, 0.0 },\n-  { -0.63138296146340844, 20, 1, \n+  { 0.63138296146340844, 20, 1, \n \t  0.80000000000000004, 0.0 },\n-  { 4.3838334818220686, 20, 1, \n+  { -4.3838334818220686, 20, 1, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 20, 1, \n+  { 0.0000000000000000, 20, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler017 = 2.5000000000000020e-13;\n@@ -1012,53 +1012,53 @@ const double toler018 = 2.5000000000000020e-13;\n // Test data for l=20, m=5.\n // max(|f - f_GSL|): 1.2805685400962830e-09 at index 14\n // max(|f - f_GSL| / |f_GSL|): 2.0861530799041223e-15\n-// mean(f - f_GSL): -1.1641532182693481e-10\n+// mean(f - f_GSL): 1.1641532182693481e-10\n // variance(f - f_GSL): 7.1150767569361226e-22\n // stddev(f - f_GSL): 2.6674101216228678e-11\n const testcase_assoc_legendre<double>\n data019[21] =\n {\n-  { 0.0000000000000000, 20, 5, \n+  { -0.0000000000000000, 20, 5, \n \t  -1.0000000000000000, 0.0 },\n-  { 315702.32715134218, 20, 5, \n+  { -315702.32715134218, 20, 5, \n \t  -0.90000000000000002, 0.0 },\n-  { -503060.91484852589, 20, 5, \n+  { 503060.91484852589, 20, 5, \n \t  -0.80000000000000004, 0.0 },\n-  { 298127.28360361955, 20, 5, \n+  { -298127.28360361955, 20, 5, \n \t  -0.69999999999999996, 0.0 },\n-  { 114444.61447464029, 20, 5, \n+  { -114444.61447464029, 20, 5, \n \t  -0.59999999999999998, 0.0 },\n-  { -543428.40914592845, 20, 5, \n+  { 543428.40914592845, 20, 5, \n \t  -0.50000000000000000, 0.0 },\n-  { 613842.07728185481, 20, 5, \n+  { -613842.07728185481, 20, 5, \n \t  -0.39999999999999991, 0.0 },\n-  { -143765.42411271061, 20, 5, \n+  { 143765.42411271061, 20, 5, \n \t  -0.29999999999999993, 0.0 },\n-  { -472600.45321372285, 20, 5, \n+  { 472600.45321372285, 20, 5, \n \t  -0.19999999999999996, 0.0 },\n-  { 563861.76771496492, 20, 5, \n+  { -563861.76771496492, 20, 5, \n \t  -0.099999999999999978, 0.0 },\n-  { -0.0000000000000000, 20, 5, \n+  { 0.0000000000000000, 20, 5, \n \t  0.0000000000000000, 0.0 },\n-  { -563861.76771496458, 20, 5, \n+  { 563861.76771496458, 20, 5, \n \t  0.10000000000000009, 0.0 },\n-  { 472600.45321372483, 20, 5, \n+  { -472600.45321372483, 20, 5, \n \t  0.20000000000000018, 0.0 },\n-  { 143765.42411270936, 20, 5, \n+  { -143765.42411270936, 20, 5, \n \t  0.30000000000000004, 0.0 },\n-  { -613842.07728185353, 20, 5, \n+  { 613842.07728185353, 20, 5, \n \t  0.40000000000000013, 0.0 },\n-  { 543428.40914592845, 20, 5, \n+  { -543428.40914592845, 20, 5, \n \t  0.50000000000000000, 0.0 },\n-  { -114444.61447464178, 20, 5, \n+  { 114444.61447464178, 20, 5, \n \t  0.60000000000000009, 0.0 },\n-  { -298127.28360361519, 20, 5, \n+  { 298127.28360361519, 20, 5, \n \t  0.70000000000000018, 0.0 },\n-  { 503060.91484852589, 20, 5, \n+  { -503060.91484852589, 20, 5, \n \t  0.80000000000000004, 0.0 },\n-  { -315702.32715133618, 20, 5, \n+  { 315702.32715133618, 20, 5, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 20, 5, \n+  { 0.0000000000000000, 20, 5, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler019 = 2.5000000000000020e-13;\n@@ -1228,53 +1228,53 @@ const double toler022 = 2.5000000000000020e-13;\n // Test data for l=50, m=1.\n // max(|f - f_GSL|): 4.4408920985006262e-15 at index 3\n // max(|f - f_GSL| / |f_GSL|): 6.6657627150738456e-16\n-// mean(f - f_GSL): -6.3441315692866085e-17\n+// mean(f - f_GSL): 6.3441315692866085e-17\n // variance(f - f_GSL): 2.1130202818419960e-34\n // stddev(f - f_GSL): 1.4536231567507432e-17\n const testcase_assoc_legendre<double>\n data023[21] =\n {\n-  { -0.0000000000000000, 50, 1, \n+  { 0.0000000000000000, 50, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { 0.13424149984449490, 50, 1, \n+  { -0.13424149984449490, 50, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { -2.2011219672413018, 50, 1, \n+  { 2.2011219672413018, 50, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { -6.6622414993232004, 50, 1, \n+  { 6.6622414993232004, 50, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { -5.5772846936919249, 50, 1, \n+  { 5.5772846936919249, 50, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { -5.8787148815607608, 50, 1, \n+  { 5.8787148815607608, 50, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { -5.5473459458634080, 50, 1, \n+  { 5.5473459458634080, 50, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { -1.8444956647620248, 50, 1, \n+  { 1.8444956647620248, 50, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { 3.8722014306642127, 50, 1, \n+  { -3.8722014306642127, 50, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { 5.3488751322285628, 50, 1, \n+  { -5.3488751322285628, 50, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { 0.0000000000000000, 50, 1, \n+  { -0.0000000000000000, 50, 1, \n \t  0.0000000000000000, 0.0 },\n-  { -5.3488751322285522, 50, 1, \n+  { 5.3488751322285522, 50, 1, \n \t  0.10000000000000009, 0.0 },\n-  { -3.8722014306642620, 50, 1, \n+  { 3.8722014306642620, 50, 1, \n \t  0.20000000000000018, 0.0 },\n-  { 1.8444956647619930, 50, 1, \n+  { -1.8444956647619930, 50, 1, \n \t  0.30000000000000004, 0.0 },\n-  { 5.5473459458633814, 50, 1, \n+  { -5.5473459458633814, 50, 1, \n \t  0.40000000000000013, 0.0 },\n-  { 5.8787148815607608, 50, 1, \n+  { -5.8787148815607608, 50, 1, \n \t  0.50000000000000000, 0.0 },\n-  { 5.5772846936919453, 50, 1, \n+  { -5.5772846936919453, 50, 1, \n \t  0.60000000000000009, 0.0 },\n-  { 6.6622414993232182, 50, 1, \n+  { -6.6622414993232182, 50, 1, \n \t  0.70000000000000018, 0.0 },\n-  { 2.2011219672413018, 50, 1, \n+  { -2.2011219672413018, 50, 1, \n \t  0.80000000000000004, 0.0 },\n-  { -0.13424149984438935, 50, 1, \n+  { 0.13424149984438935, 50, 1, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 50, 1, \n+  { 0.0000000000000000, 50, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler023 = 2.5000000000000020e-13;\n@@ -1336,53 +1336,53 @@ const double toler024 = 5.0000000000000039e-13;\n // Test data for l=50, m=5.\n // max(|f - f_GSL|): 7.4505805969238281e-08 at index 14\n // max(|f - f_GSL| / |f_GSL|): 2.0088060426072767e-15\n-// mean(f - f_GSL): 6.3862119402204238e-09\n+// mean(f - f_GSL): -6.3862119402204238e-09\n // variance(f - f_GSL): 2.1411444046342303e-18\n // stddev(f - f_GSL): 1.4632649810045447e-09\n const testcase_assoc_legendre<double>\n data025[21] =\n {\n-  { 0.0000000000000000, 50, 5, \n+  { -0.0000000000000000, 50, 5, \n \t  -1.0000000000000000, 0.0 },\n-  { 27340473.952132829, 50, 5, \n+  { -27340473.952132829, 50, 5, \n \t  -0.90000000000000002, 0.0 },\n-  { -27753716.768532373, 50, 5, \n+  { 27753716.768532373, 50, 5, \n \t  -0.80000000000000004, 0.0 },\n-  { -40808153.913493633, 50, 5, \n+  { 40808153.913493633, 50, 5, \n \t  -0.69999999999999996, 0.0 },\n-  { -32071189.035790090, 50, 5, \n+  { 32071189.035790090, 50, 5, \n \t  -0.59999999999999998, 0.0 },\n-  { -36265736.218529105, 50, 5, \n+  { 36265736.218529105, 50, 5, \n \t  -0.50000000000000000, 0.0 },\n-  { -37089596.700204931, 50, 5, \n+  { 37089596.700204931, 50, 5, \n \t  -0.39999999999999991, 0.0 },\n-  { -14562029.629244687, 50, 5, \n+  { 14562029.629244687, 50, 5, \n \t  -0.29999999999999993, 0.0 },\n-  { 23686895.217517190, 50, 5, \n+  { -23686895.217517190, 50, 5, \n \t  -0.19999999999999996, 0.0 },\n-  { 34878992.965676002, 50, 5, \n+  { -34878992.965676002, 50, 5, \n \t  -0.099999999999999978, 0.0 },\n-  { 0.0000000000000000, 50, 5, \n+  { -0.0000000000000000, 50, 5, \n \t  0.0000000000000000, 0.0 },\n-  { -34878992.965675958, 50, 5, \n+  { 34878992.965675958, 50, 5, \n \t  0.10000000000000009, 0.0 },\n-  { -23686895.217517529, 50, 5, \n+  { 23686895.217517529, 50, 5, \n \t  0.20000000000000018, 0.0 },\n-  { 14562029.629244499, 50, 5, \n+  { -14562029.629244499, 50, 5, \n \t  0.30000000000000004, 0.0 },\n-  { 37089596.700204782, 50, 5, \n+  { -37089596.700204782, 50, 5, \n \t  0.40000000000000013, 0.0 },\n-  { 36265736.218529105, 50, 5, \n+  { -36265736.218529105, 50, 5, \n \t  0.50000000000000000, 0.0 },\n-  { 32071189.035790242, 50, 5, \n+  { -32071189.035790242, 50, 5, \n \t  0.60000000000000009, 0.0 },\n-  { 40808153.913493834, 50, 5, \n+  { -40808153.913493834, 50, 5, \n \t  0.70000000000000018, 0.0 },\n-  { 27753716.768532373, 50, 5, \n+  { -27753716.768532373, 50, 5, \n \t  0.80000000000000004, 0.0 },\n-  { -27340473.952132136, 50, 5, \n+  { 27340473.952132136, 50, 5, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 50, 5, \n+  { 0.0000000000000000, 50, 5, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler025 = 2.5000000000000020e-13;\n@@ -1606,53 +1606,53 @@ const double toler029 = 5.0000000000000039e-13;\n // Test data for l=100, m=1.\n // max(|f - f_GSL|): 1.1546319456101628e-14 at index 3\n // max(|f - f_GSL| / |f_GSL|): 2.1111954004946762e-15\n-// mean(f - f_GSL): 8.0358999877630379e-16\n+// mean(f - f_GSL): -8.0358999877630379e-16\n // variance(f - f_GSL): 3.3902236521998243e-32\n // stddev(f - f_GSL): 1.8412559985509414e-16\n const testcase_assoc_legendre<double>\n data030[21] =\n {\n-  { 0.0000000000000000, 100, 1, \n+  { -0.0000000000000000, 100, 1, \n \t  -1.0000000000000000, 0.0 },\n-  { -6.5200167187780345, 100, 1, \n+  { 6.5200167187780345, 100, 1, \n \t  -0.90000000000000002, 0.0 },\n-  { -9.0065170007027486, 100, 1, \n+  { 9.0065170007027486, 100, 1, \n \t  -0.80000000000000004, 0.0 },\n-  { 5.4690908541180976, 100, 1, \n+  { -5.4690908541180976, 100, 1, \n \t  -0.69999999999999996, 0.0 },\n-  { 8.6275439170430790, 100, 1, \n+  { -8.6275439170430790, 100, 1, \n \t  -0.59999999999999998, 0.0 },\n-  { 6.0909031663448454, 100, 1, \n+  { -6.0909031663448454, 100, 1, \n \t  -0.50000000000000000, 0.0 },\n-  { -4.1160338699560395, 100, 1, \n+  { 4.1160338699560395, 100, 1, \n \t  -0.39999999999999991, 0.0 },\n-  { -5.8491043010758634, 100, 1, \n+  { 5.8491043010758634, 100, 1, \n \t  -0.29999999999999993, 0.0 },\n-  { 7.9435138723089826, 100, 1, \n+  { -7.9435138723089826, 100, 1, \n \t  -0.19999999999999996, 0.0 },\n-  { -4.7996285823989355, 100, 1, \n+  { 4.7996285823989355, 100, 1, \n \t  -0.099999999999999978, 0.0 },\n-  { -0.0000000000000000, 100, 1, \n+  { 0.0000000000000000, 100, 1, \n \t  0.0000000000000000, 0.0 },\n-  { 4.7996285823990101, 100, 1, \n+  { -4.7996285823990101, 100, 1, \n \t  0.10000000000000009, 0.0 },\n-  { -7.9435138723090155, 100, 1, \n+  { 7.9435138723090155, 100, 1, \n \t  0.20000000000000018, 0.0 },\n-  { 5.8491043010758013, 100, 1, \n+  { -5.8491043010758013, 100, 1, \n \t  0.30000000000000004, 0.0 },\n-  { 4.1160338699562162, 100, 1, \n+  { -4.1160338699562162, 100, 1, \n \t  0.40000000000000013, 0.0 },\n-  { -6.0909031663448454, 100, 1, \n+  { 6.0909031663448454, 100, 1, \n \t  0.50000000000000000, 0.0 },\n-  { -8.6275439170430470, 100, 1, \n+  { 8.6275439170430470, 100, 1, \n \t  0.60000000000000009, 0.0 },\n-  { -5.4690908541178693, 100, 1, \n+  { 5.4690908541178693, 100, 1, \n \t  0.70000000000000018, 0.0 },\n-  { 9.0065170007027486, 100, 1, \n+  { -9.0065170007027486, 100, 1, \n \t  0.80000000000000004, 0.0 },\n-  { 6.5200167187777787, 100, 1, \n+  { -6.5200167187777787, 100, 1, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 100, 1, \n+  { 0.0000000000000000, 100, 1, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler030 = 2.5000000000000020e-13;\n@@ -1714,53 +1714,53 @@ const double toler031 = 2.5000000000000020e-13;\n // Test data for l=100, m=5.\n // max(|f - f_GSL|): 1.4305114746093750e-06 at index 14\n // max(|f - f_GSL| / |f_GSL|): 3.7628882298853693e-15\n-// mean(f - f_GSL): 5.1089695521763390e-08\n+// mean(f - f_GSL): -5.1089695521763390e-08\n // variance(f - f_GSL): 1.3703324189659077e-16\n // stddev(f - f_GSL): 1.1706119848036358e-08\n const testcase_assoc_legendre<double>\n data032[21] =\n {\n-  { -0.0000000000000000, 100, 5, \n+  { 0.0000000000000000, 100, 5, \n \t  -1.0000000000000000, 0.0 },\n-  { -900551126.09653807, 100, 5, \n+  { 900551126.09653807, 100, 5, \n \t  -0.90000000000000002, 0.0 },\n-  { -988567431.55756140, 100, 5, \n+  { 988567431.55756140, 100, 5, \n \t  -0.80000000000000004, 0.0 },\n-  { 645646451.90344620, 100, 5, \n+  { -645646451.90344620, 100, 5, \n \t  -0.69999999999999996, 0.0 },\n-  { 897114585.29920685, 100, 5, \n+  { -897114585.29920685, 100, 5, \n \t  -0.59999999999999998, 0.0 },\n-  { 661710744.42483854, 100, 5, \n+  { -661710744.42483854, 100, 5, \n \t  -0.50000000000000000, 0.0 },\n-  { -380163158.51424754, 100, 5, \n+  { 380163158.51424754, 100, 5, \n \t  -0.39999999999999991, 0.0 },\n-  { -617391071.36633193, 100, 5, \n+  { 617391071.36633193, 100, 5, \n \t  -0.29999999999999993, 0.0 },\n-  { 805288801.85509109, 100, 5, \n+  { -805288801.85509109, 100, 5, \n \t  -0.19999999999999996, 0.0 },\n-  { -481041740.16728652, 100, 5, \n+  { 481041740.16728652, 100, 5, \n \t  -0.099999999999999978, 0.0 },\n-  { -0.0000000000000000, 100, 5, \n+  { 0.0000000000000000, 100, 5, \n \t  0.0000000000000000, 0.0 },\n-  { 481041740.16729391, 100, 5, \n+  { -481041740.16729391, 100, 5, \n \t  0.10000000000000009, 0.0 },\n-  { -805288801.85509515, 100, 5, \n+  { 805288801.85509515, 100, 5, \n \t  0.20000000000000018, 0.0 },\n-  { 617391071.36632574, 100, 5, \n+  { -617391071.36632574, 100, 5, \n \t  0.30000000000000004, 0.0 },\n-  { 380163158.51426536, 100, 5, \n+  { -380163158.51426536, 100, 5, \n \t  0.40000000000000013, 0.0 },\n-  { -661710744.42483854, 100, 5, \n+  { 661710744.42483854, 100, 5, \n \t  0.50000000000000000, 0.0 },\n-  { -897114585.29920483, 100, 5, \n+  { 897114585.29920483, 100, 5, \n \t  0.60000000000000009, 0.0 },\n-  { -645646451.90342283, 100, 5, \n+  { 645646451.90342283, 100, 5, \n \t  0.70000000000000018, 0.0 },\n-  { 988567431.55756140, 100, 5, \n+  { -988567431.55756140, 100, 5, \n \t  0.80000000000000004, 0.0 },\n-  { 900551126.09651637, 100, 5, \n+  { -900551126.09651637, 100, 5, \n \t  0.90000000000000013, 0.0 },\n-  { -0.0000000000000000, 100, 5, \n+  { 0.0000000000000000, 100, 5, \n \t  1.0000000000000000, 0.0 },\n };\n const double toler032 = 2.5000000000000020e-13;"}, {"sha": "74c08d021dc86aab89d7a17ba2e5811bee32b2e9", "filename": "libstdc++-v3/testsuite/special_functions/08_cyl_bessel_j/check_value.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F08_cyl_bessel_j%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F08_cyl_bessel_j%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F08_cyl_bessel_j%2Fcheck_value.cc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -698,6 +698,26 @@ data026[21] =\n };\n const double toler026 = 1.0000000000000006e-11;\n \n+// Test data for nu=100.00000000000000.\n+// max(|f - f_GSL|): 2.5857788132910287e-14\n+// max(|f - f_GSL| / |f_GSL|): 1.6767662425535933e-11\n+const testcase_cyl_bessel_j<double>\n+data027[11] =\n+{\n+  { 0.0116761350077845, 100.0000000000000000, 1000.0000000000000000, 0.0 },\n+  {-0.0116998547780258, 100.0000000000000000, 1100.0000000000000000, 0.0 },\n+  {-0.0228014834050837, 100.0000000000000000, 1200.0000000000000000, 0.0 },\n+  {-0.0169735007873739, 100.0000000000000000, 1300.0000000000000000, 0.0 },\n+  {-0.0014154528803530, 100.0000000000000000, 1400.0000000000000000, 0.0 },\n+  { 0.0133337265844988, 100.0000000000000000, 1500.0000000000000000, 0.0 },\n+  { 0.0198025620201474, 100.0000000000000000, 1600.0000000000000000, 0.0 },\n+  { 0.0161297712798388, 100.0000000000000000, 1700.0000000000000000, 0.0 },\n+  { 0.0053753369281577, 100.0000000000000000, 1800.0000000000000000, 0.0 },\n+  {-0.0069238868725646, 100.0000000000000000, 1900.0000000000000000, 0.0 },\n+  {-0.0154878717200738, 100.0000000000000000, 2000.0000000000000000, 0.0 },\n+};\n+const double toler027 = 1.0000000000000006e-10;\n+\n template<typename Ret, unsigned int Num>\n   void\n   test(const testcase_cyl_bessel_j<Ret> (&data)[Num], Ret toler)\n@@ -748,5 +768,6 @@ main()\n   test(data024, toler024);\n   test(data025, toler025);\n   test(data026, toler026);\n+  test(data027, toler027);\n   return 0;\n }"}, {"sha": "cde8cf611f9fd6afd5ca4c9b20db2842c5a8d430", "filename": "libstdc++-v3/testsuite/special_functions/10_cyl_neumann/check_value.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F10_cyl_neumann%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F10_cyl_neumann%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fspecial_functions%2F10_cyl_neumann%2Fcheck_value.cc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -742,6 +742,26 @@ data028[20] =\n };\n const double toler028 = 1.0000000000000006e-11;\n \n+// Test data for nu=100.00000000000000.\n+// max(|f - f_GSL|): 3.1049815496508870e-14\n+// max(|f - f_GSL| / |f_GSL|): 8.4272302674970308e-12\n+const testcase_cyl_neumann<double>\n+data029[11] =\n+{\n+  {-0.0224386882577326, 100.0000000000000000, 1000.0000000000000000, 0.0 },\n+  {-0.0210775951598200, 100.0000000000000000, 1100.0000000000000000, 0.0 },\n+  {-0.0035299439206693, 100.0000000000000000, 1200.0000000000000000, 0.0 },\n+  { 0.0142500193265366, 100.0000000000000000, 1300.0000000000000000, 0.0 },\n+  { 0.0213046790897353, 100.0000000000000000, 1400.0000000000000000, 0.0 },\n+  { 0.0157343950779022, 100.0000000000000000, 1500.0000000000000000, 0.0 },\n+  { 0.0025544633636228, 100.0000000000000000, 1600.0000000000000000, 0.0 },\n+  {-0.0107220455248494, 100.0000000000000000, 1700.0000000000000000, 0.0 },\n+  {-0.0180369192432256, 100.0000000000000000, 1800.0000000000000000, 0.0 },\n+  {-0.0169584155930798, 100.0000000000000000, 1900.0000000000000000, 0.0 },\n+  {-0.0088788704566206, 100.0000000000000000, 2000.0000000000000000, 0.0 },\n+};\n+const double toler029 = 1.0000000000000006e-11;\n+\n template<typename Ret, unsigned int Num>\n   void\n   test(const testcase_cyl_neumann<Ret> (&data)[Num], Ret toler)\n@@ -794,5 +814,6 @@ main()\n   test(data026, toler026);\n   test(data027, toler027);\n   test(data028, toler028);\n+  test(data029, toler029);\n   return 0;\n }"}, {"sha": "782894cb94dc1f0bc4fb75f9c04633f3022edc4f", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/02_assoc_legendre/check_value.cc", "status": "added", "additions": 2052, "deletions": 0, "changes": 2052, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F02_assoc_legendre%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F02_assoc_legendre%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F02_assoc_legendre%2Fcheck_value.cc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -0,0 +1,2052 @@\n+// { dg-do run { target c++11 } }\n+// { dg-options \"-D__STDCPP_WANT_MATH_SPEC_FUNCS__\" }\n+//\n+// Copyright (C) 2016-2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+//  assoc_legendre\n+//  Compare against values generated by the GNU Scientific Library.\n+//  The GSL can be found on the web: http://www.gnu.org/software/gsl/\n+#include <limits>\n+#include <tr1/cmath>\n+#if defined(__TEST_DEBUG)\n+#  include <iostream>\n+#  define VERIFY(A) \\\n+  if (!(A)) \\\n+    { \\\n+      std::cout << \"line \" << __LINE__ \\\n+\t<< \"  max_abs_frac = \" << max_abs_frac \\\n+\t<< std::endl; \\\n+    }\n+#else\n+#  include <testsuite_hooks.h>\n+#endif\n+#include <specfun_testcase.h>\n+\n+// Test data for l=0, m=0.\n+// max(|f - f_GSL|): 0.0000000000000000 at index 0\n+// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000\n+// mean(f - f_GSL): 0.0000000000000000\n+// variance(f - f_GSL): 0.0000000000000000\n+// stddev(f - f_GSL): 0.0000000000000000\n+const testcase_assoc_legendre<double>\n+data001[21] =\n+{\n+  { 1.0000000000000000, 0, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 0, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler001 = 2.5000000000000020e-13;\n+\n+// Test data for l=1, m=0.\n+// max(|f - f_GSL|): 0.0000000000000000 at index 0\n+// max(|f - f_GSL| / |f_GSL|): 0.0000000000000000\n+// mean(f - f_GSL): 0.0000000000000000\n+// variance(f - f_GSL): 0.0000000000000000\n+// stddev(f - f_GSL): 0.0000000000000000\n+const testcase_assoc_legendre<double>\n+data002[21] =\n+{\n+  { -1.0000000000000000, 1, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { -0.90000000000000002, 1, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { -0.80000000000000004, 1, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { -0.69999999999999996, 1, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { -0.59999999999999998, 1, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.50000000000000000, 1, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { -0.39999999999999991, 1, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { -0.29999999999999993, 1, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { -0.19999999999999996, 1, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.099999999999999978, 1, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.0000000000000000, 1, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { 0.10000000000000009, 1, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { 0.20000000000000018, 1, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.30000000000000004, 1, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { 0.40000000000000013, 1, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { 0.50000000000000000, 1, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { 0.60000000000000009, 1, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { 0.70000000000000018, 1, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.80000000000000004, 1, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { 0.90000000000000013, 1, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 1, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler002 = 2.5000000000000020e-13;\n+\n+// Test data for l=1, m=1.\n+// max(|f - f_GSL|): 2.2204460492503131e-16 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 2.4227052612512390e-16\n+// mean(f - f_GSL): 1.0573552615477681e-17\n+// variance(f - f_GSL): 5.8695007828944331e-36\n+// stddev(f - f_GSL): 2.4227052612512388e-18\n+const testcase_assoc_legendre<double>\n+data003[21] =\n+{\n+  { -0.0000000000000000, 1, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { -0.43588989435406728, 1, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { -0.59999999999999987, 1, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { -0.71414284285428509, 1, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { -0.80000000000000004, 1, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.86602540378443860, 1, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { -0.91651513899116799, 1, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { -0.95393920141694555, 1, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { -0.97979589711327120, 1, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.99498743710661997, 1, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { -1.0000000000000000, 1, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.99498743710661997, 1, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { -0.97979589711327120, 1, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { -0.95393920141694577, 1, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { -0.91651513899116788, 1, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { -0.86602540378443860, 1, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { -0.79999999999999993, 1, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { -0.71414284285428475, 1, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { -0.59999999999999987, 1, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { -0.43588989435406711, 1, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { -0.0000000000000000, 1, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler003 = 2.5000000000000020e-13;\n+\n+// Test data for l=2, m=0.\n+// max(|f - f_GSL|): 1.1102230246251565e-16 at index 17\n+// max(|f - f_GSL| / |f_GSL|): 1.3877787807814482e-15\n+// mean(f - f_GSL): 1.8503717077085941e-17\n+// variance(f - f_GSL): 1.7975346147614202e-35\n+// stddev(f - f_GSL): 4.2397342071896678e-18\n+const testcase_assoc_legendre<double>\n+data004[21] =\n+{\n+  { 1.0000000000000000, 2, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { 0.71500000000000008, 2, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 0.46000000000000019, 2, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { 0.23499999999999988, 2, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { 0.039999999999999925, 2, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.12500000000000000, 2, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { -0.26000000000000012, 2, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { -0.36500000000000005, 2, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { -0.44000000000000006, 2, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.48499999999999999, 2, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.50000000000000000, 2, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.48499999999999999, 2, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { -0.43999999999999989, 2, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { -0.36499999999999999, 2, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { -0.25999999999999984, 2, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { -0.12500000000000000, 2, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { 0.040000000000000147, 2, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { 0.23500000000000032, 2, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.46000000000000019, 2, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { 0.71500000000000030, 2, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 2, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler004 = 2.5000000000000020e-13;\n+\n+// Test data for l=2, m=1.\n+// max(|f - f_GSL|): 2.2204460492503131e-16 at index 3\n+// max(|f - f_GSL| / |f_GSL|): 3.7770554319736585e-16\n+// mean(f - f_GSL): -1.0573552615477681e-17\n+// variance(f - f_GSL): 5.8695007828944331e-36\n+// stddev(f - f_GSL): 2.4227052612512388e-18\n+const testcase_assoc_legendre<double>\n+data005[21] =\n+{\n+  { 0.0000000000000000, 2, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { 1.1769027147559816, 2, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { 1.4399999999999999, 2, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.4996999699939983, 2, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { 1.4399999999999999, 2, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { 1.2990381056766580, 2, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { 1.0998181667894014, 2, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.85854528127525076, 2, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { 0.58787753826796263, 2, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { 0.29849623113198592, 2, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.0000000000000000, 2, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.29849623113198626, 2, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { -0.58787753826796330, 2, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { -0.85854528127525132, 2, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { -1.0998181667894018, 2, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { -1.2990381056766580, 2, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { -1.4400000000000002, 2, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { -1.4996999699939983, 2, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { -1.4399999999999999, 2, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { -1.1769027147559812, 2, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { -0.0000000000000000, 2, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler005 = 2.5000000000000020e-13;\n+\n+// Test data for l=2, m=2.\n+// max(|f - f_GSL|): 1.3322676295501878e-15 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 5.2867763077388426e-16\n+// mean(f - f_GSL): -8.4588420923821446e-17\n+// variance(f - f_GSL): 3.7564805010524372e-34\n+// stddev(f - f_GSL): 1.9381642090009910e-17\n+const testcase_assoc_legendre<double>\n+data006[21] =\n+{\n+  { 0.0000000000000000, 2, 2, \n+\t  -1.0000000000000000, 0.0 },\n+  { 0.56999999999999984, 2, 2, \n+\t  -0.90000000000000002, 0.0 },\n+  { 1.0799999999999996, 2, 2, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.5300000000000005, 2, 2, \n+\t  -0.69999999999999996, 0.0 },\n+  { 1.9200000000000004, 2, 2, \n+\t  -0.59999999999999998, 0.0 },\n+  { 2.2500000000000000, 2, 2, \n+\t  -0.50000000000000000, 0.0 },\n+  { 2.5200000000000000, 2, 2, \n+\t  -0.39999999999999991, 0.0 },\n+  { 2.7299999999999995, 2, 2, \n+\t  -0.29999999999999993, 0.0 },\n+  { 2.8799999999999999, 2, 2, \n+\t  -0.19999999999999996, 0.0 },\n+  { 2.9700000000000002, 2, 2, \n+\t  -0.099999999999999978, 0.0 },\n+  { 3.0000000000000000, 2, 2, \n+\t  0.0000000000000000, 0.0 },\n+  { 2.9700000000000002, 2, 2, \n+\t  0.10000000000000009, 0.0 },\n+  { 2.8799999999999999, 2, 2, \n+\t  0.20000000000000018, 0.0 },\n+  { 2.7300000000000004, 2, 2, \n+\t  0.30000000000000004, 0.0 },\n+  { 2.5199999999999991, 2, 2, \n+\t  0.40000000000000013, 0.0 },\n+  { 2.2500000000000000, 2, 2, \n+\t  0.50000000000000000, 0.0 },\n+  { 1.9199999999999997, 2, 2, \n+\t  0.60000000000000009, 0.0 },\n+  { 1.5299999999999989, 2, 2, \n+\t  0.70000000000000018, 0.0 },\n+  { 1.0799999999999996, 2, 2, \n+\t  0.80000000000000004, 0.0 },\n+  { 0.56999999999999929, 2, 2, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 2, 2, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler006 = 2.5000000000000020e-13;\n+\n+// Test data for l=5, m=0.\n+// max(|f - f_GSL|): 2.0122792321330962e-16 at index 19\n+// max(|f - f_GSL| / |f_GSL|): 4.8911475274405560e-15\n+// mean(f - f_GSL): -2.3129646346357427e-18\n+// variance(f - f_GSL): 2.8086478355647191e-37\n+// stddev(f - f_GSL): 5.2996677589870847e-19\n+const testcase_assoc_legendre<double>\n+data007[21] =\n+{\n+  { -1.0000000000000000, 5, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { 0.041141250000000087, 5, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 0.39951999999999993, 5, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { 0.36519874999999991, 5, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { 0.15263999999999994, 5, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.089843750000000000, 5, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { -0.27064000000000010, 5, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { -0.34538624999999995, 5, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { -0.30751999999999996, 5, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.17882874999999995, 5, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.0000000000000000, 5, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { 0.17882875000000015, 5, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { 0.30752000000000013, 5, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.34538625000000001, 5, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { 0.27063999999999988, 5, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { 0.089843750000000000, 5, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { -0.15264000000000016, 5, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { -0.36519875000000024, 5, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { -0.39951999999999993, 5, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { -0.041141249999999151, 5, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 5, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler007 = 2.5000000000000020e-13;\n+\n+// Test data for l=5, m=1.\n+// max(|f - f_GSL|): 6.6613381477509392e-16 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 5.5186908001167120e-16\n+// mean(f - f_GSL): -1.0573552615477681e-17\n+// variance(f - f_GSL): 5.8695007828944331e-36\n+// stddev(f - f_GSL): 2.4227052612512388e-18\n+const testcase_assoc_legendre<double>\n+data008[21] =\n+{\n+  { 0.0000000000000000, 5, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { -2.8099369608350981, 5, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { -0.72180000000000089, 5, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.0951826834447254, 5, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { 1.9775999999999998, 5, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { 1.9282596881137892, 5, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { 1.2070504380513671, 5, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.16079837663884300, 5, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { -0.87005875663658538, 5, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { -1.6083350053680323, 5, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { -1.8750000000000000, 5, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { -1.6083350053680314, 5, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { -0.87005875663658327, 5, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.16079837663884422, 5, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { 1.2070504380513694, 5, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { 1.9282596881137892, 5, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { 1.9775999999999998, 5, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { 1.0951826834447216, 5, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { -0.72180000000000089, 5, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { -2.8099369608350999, 5, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 5, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler008 = 2.5000000000000020e-13;\n+\n+// Test data for l=5, m=2.\n+// max(|f - f_GSL|): 3.5527136788005009e-15 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 5.4136589391245733e-16\n+// mean(f - f_GSL): 0.0000000000000000\n+// variance(f - f_GSL): 0.0000000000000000\n+// stddev(f - f_GSL): 0.0000000000000000\n+const testcase_assoc_legendre<double>\n+data009[21] =\n+{\n+  { 0.0000000000000000, 5, 2, \n+\t  -1.0000000000000000, 0.0 },\n+  { -12.837825000000000, 5, 2, \n+\t  -0.90000000000000002, 0.0 },\n+  { -13.910400000000001, 5, 2, \n+\t  -0.80000000000000004, 0.0 },\n+  { -8.8089749999999967, 5, 2, \n+\t  -0.69999999999999996, 0.0 },\n+  { -1.6128000000000000, 5, 2, \n+\t  -0.59999999999999998, 0.0 },\n+  { 4.9218750000000000, 5, 2, \n+\t  -0.50000000000000000, 0.0 },\n+  { 9.1728000000000005, 5, 2, \n+\t  -0.39999999999999991, 0.0 },\n+  { 10.462724999999997, 5, 2, \n+\t  -0.29999999999999993, 0.0 },\n+  { 8.8703999999999983, 5, 2, \n+\t  -0.19999999999999996, 0.0 },\n+  { 5.0415749999999990, 5, 2, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.0000000000000000, 5, 2, \n+\t  0.0000000000000000, 0.0 },\n+  { -5.0415750000000044, 5, 2, \n+\t  0.10000000000000009, 0.0 },\n+  { -8.8704000000000054, 5, 2, \n+\t  0.20000000000000018, 0.0 },\n+  { -10.462725000000001, 5, 2, \n+\t  0.30000000000000004, 0.0 },\n+  { -9.1727999999999970, 5, 2, \n+\t  0.40000000000000013, 0.0 },\n+  { -4.9218750000000000, 5, 2, \n+\t  0.50000000000000000, 0.0 },\n+  { 1.6128000000000047, 5, 2, \n+\t  0.60000000000000009, 0.0 },\n+  { 8.8089750000000109, 5, 2, \n+\t  0.70000000000000018, 0.0 },\n+  { 13.910400000000001, 5, 2, \n+\t  0.80000000000000004, 0.0 },\n+  { 12.837824999999990, 5, 2, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 5, 2, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler009 = 2.5000000000000020e-13;\n+\n+// Test data for l=5, m=5.\n+// max(|f - f_GSL|): 1.0231815394945443e-12 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 1.1990652164995755e-15\n+// mean(f - f_GSL): 3.1128538899966297e-14\n+// variance(f - f_GSL): 5.0871761537452526e-29\n+// stddev(f - f_GSL): 7.1324442891236469e-15\n+const testcase_assoc_legendre<double>\n+data010[21] =\n+{\n+  { -0.0000000000000000, 5, 5, \n+\t  -1.0000000000000000, 0.0 },\n+  { -14.870165800941818, 5, 5, \n+\t  -0.90000000000000002, 0.0 },\n+  { -73.483199999999925, 5, 5, \n+\t  -0.80000000000000004, 0.0 },\n+  { -175.53238298794764, 5, 5, \n+\t  -0.69999999999999996, 0.0 },\n+  { -309.65760000000006, 5, 5, \n+\t  -0.59999999999999998, 0.0 },\n+  { -460.34662869916559, 5, 5, \n+\t  -0.50000000000000000, 0.0 },\n+  { -611.12496255819883, 5, 5, \n+\t  -0.39999999999999991, 0.0 },\n+  { -746.50941479523703, 5, 5, \n+\t  -0.29999999999999993, 0.0 },\n+  { -853.31600434671316, 5, 5, \n+\t  -0.19999999999999996, 0.0 },\n+  { -921.55189181724734, 5, 5, \n+\t  -0.099999999999999978, 0.0 },\n+  { -945.00000000000000, 5, 5, \n+\t  0.0000000000000000, 0.0 },\n+  { -921.55189181724734, 5, 5, \n+\t  0.10000000000000009, 0.0 },\n+  { -853.31600434671316, 5, 5, \n+\t  0.20000000000000018, 0.0 },\n+  { -746.50941479523760, 5, 5, \n+\t  0.30000000000000004, 0.0 },\n+  { -611.12496255819838, 5, 5, \n+\t  0.40000000000000013, 0.0 },\n+  { -460.34662869916559, 5, 5, \n+\t  0.50000000000000000, 0.0 },\n+  { -309.65759999999989, 5, 5, \n+\t  0.60000000000000009, 0.0 },\n+  { -175.53238298794724, 5, 5, \n+\t  0.70000000000000018, 0.0 },\n+  { -73.483199999999925, 5, 5, \n+\t  0.80000000000000004, 0.0 },\n+  { -14.870165800941789, 5, 5, \n+\t  0.90000000000000013, 0.0 },\n+  { -0.0000000000000000, 5, 5, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler010 = 2.5000000000000020e-13;\n+\n+// Test data for l=10, m=0.\n+// max(|f - f_GSL|): 3.8857805861880479e-16 at index 19\n+// max(|f - f_GSL| / |f_GSL|): 1.4766655123690915e-15\n+// mean(f - f_GSL): -2.5112187461759493e-17\n+// variance(f - f_GSL): 3.3107652853513909e-35\n+// stddev(f - f_GSL): 5.7539249954716919e-18\n+const testcase_assoc_legendre<double>\n+data011[21] =\n+{\n+  { 1.0000000000000000, 10, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { -0.26314561785585960, 10, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 0.30052979560000004, 10, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { 0.085805795531640333, 10, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { -0.24366274560000001, 10, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.18822860717773438, 10, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { 0.096839064400000258, 10, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.25147634951601561, 10, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { 0.12907202559999983, 10, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.12212499738710943, 10, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.24609375000000000, 10, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.12212499738710922, 10, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { 0.12907202560000042, 10, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.25147634951601561, 10, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { 0.096839064399999633, 10, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { -0.18822860717773438, 10, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { -0.24366274559999984, 10, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { 0.085805795531641277, 10, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.30052979560000004, 10, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { -0.26314561785586010, 10, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 10, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler011 = 2.5000000000000020e-13;\n+\n+// Test data for l=10, m=1.\n+// max(|f - f_GSL|): 1.3322676295501878e-15 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 5.3672431731635395e-16\n+// mean(f - f_GSL): 6.3441315692866085e-17\n+// variance(f - f_GSL): 2.1130202818419960e-34\n+// stddev(f - f_GSL): 1.4536231567507432e-17\n+const testcase_assoc_legendre<double>\n+data012[21] =\n+{\n+  { -0.0000000000000000, 10, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { -3.0438748781479039, 10, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { -0.87614260800000254, 10, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { 2.9685359952934527, 10, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { 1.2511825919999997, 10, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { -2.0066877394361260, 10, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { -2.4822196173476647, 10, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { -0.12309508907433593, 10, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { 2.2468221751958413, 10, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { 2.2472659777983512, 10, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.0000000000000000, 10, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { -2.2472659777983535, 10, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { -2.2468221751958377, 10, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.12309508907433910, 10, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { 2.4822196173476669, 10, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { 2.0066877394361260, 10, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { -1.2511825920000037, 10, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { -2.9685359952934505, 10, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.87614260800000254, 10, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { 3.0438748781478981, 10, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 10, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler012 = 2.5000000000000020e-13;\n+\n+// Test data for l=10, m=2.\n+// max(|f - f_GSL|): 1.2434497875801753e-14 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 1.9632900580960751e-15\n+// mean(f - f_GSL): -8.4588420923821446e-17\n+// variance(f - f_GSL): 3.7564805010524372e-34\n+// stddev(f - f_GSL): 1.9381642090009910e-17\n+const testcase_assoc_legendre<double>\n+data013[21] =\n+{\n+  { 0.0000000000000000, 10, 2, \n+\t  -1.0000000000000000, 0.0 },\n+  { 16.376387762496137, 10, 2, \n+\t  -0.90000000000000002, 0.0 },\n+  { -35.394657804000005, 10, 2, \n+\t  -0.80000000000000004, 0.0 },\n+  { -3.6191429423788648, 10, 2, \n+\t  -0.69999999999999996, 0.0 },\n+  { 28.679675904000014, 10, 2, \n+\t  -0.59999999999999998, 0.0 },\n+  { 18.388023376464844, 10, 2, \n+\t  -0.50000000000000000, 0.0 },\n+  { -12.818955996000021, 10, 2, \n+\t  -0.39999999999999991, 0.0 },\n+  { -27.739821675972646, 10, 2, \n+\t  -0.29999999999999993, 0.0 },\n+  { -13.280661503999987, 10, 2, \n+\t  -0.19999999999999996, 0.0 },\n+  { 13.885467170308601, 10, 2, \n+\t  -0.099999999999999978, 0.0 },\n+  { 27.070312500000000, 10, 2, \n+\t  0.0000000000000000, 0.0 },\n+  { 13.885467170308573, 10, 2, \n+\t  0.10000000000000009, 0.0 },\n+  { -13.280661504000051, 10, 2, \n+\t  0.20000000000000018, 0.0 },\n+  { -27.739821675972664, 10, 2, \n+\t  0.30000000000000004, 0.0 },\n+  { -12.818955995999961, 10, 2, \n+\t  0.40000000000000013, 0.0 },\n+  { 18.388023376464844, 10, 2, \n+\t  0.50000000000000000, 0.0 },\n+  { 28.679675904000000, 10, 2, \n+\t  0.60000000000000009, 0.0 },\n+  { -3.6191429423789856, 10, 2, \n+\t  0.70000000000000018, 0.0 },\n+  { -35.394657804000005, 10, 2, \n+\t  0.80000000000000004, 0.0 },\n+  { 16.376387762496201, 10, 2, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 10, 2, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler013 = 2.5000000000000020e-13;\n+\n+// Test data for l=10, m=5.\n+// max(|f - f_GSL|): 2.9103830456733704e-11 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 1.4825078449301893e-15\n+// mean(f - f_GSL): 2.4253192047278085e-12\n+// variance(f - f_GSL): 3.0881409535313035e-25\n+// stddev(f - f_GSL): 5.5571044200476413e-13\n+const testcase_assoc_legendre<double>\n+data014[21] =\n+{\n+  { 0.0000000000000000, 10, 5, \n+\t  -1.0000000000000000, 0.0 },\n+  { 21343.618518164680, 10, 5, \n+\t  -0.90000000000000002, 0.0 },\n+  { 40457.016407807983, 10, 5, \n+\t  -0.80000000000000004, 0.0 },\n+  { 20321.279317331315, 10, 5, \n+\t  -0.69999999999999996, 0.0 },\n+  { -14410.820616192004, 10, 5, \n+\t  -0.59999999999999998, 0.0 },\n+  { -30086.169706116176, 10, 5, \n+\t  -0.50000000000000000, 0.0 },\n+  { -17177.549337582834, 10, 5, \n+\t  -0.39999999999999991, 0.0 },\n+  { 9272.5119495412546, 10, 5, \n+\t  -0.29999999999999993, 0.0 },\n+  { 26591.511184414714, 10, 5, \n+\t  -0.19999999999999996, 0.0 },\n+  { 21961.951238504211, 10, 5, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.0000000000000000, 10, 5, \n+\t  0.0000000000000000, 0.0 },\n+  { -21961.951238504229, 10, 5, \n+\t  0.10000000000000009, 0.0 },\n+  { -26591.511184414703, 10, 5, \n+\t  0.20000000000000018, 0.0 },\n+  { -9272.5119495412364, 10, 5, \n+\t  0.30000000000000004, 0.0 },\n+  { 17177.549337582877, 10, 5, \n+\t  0.40000000000000013, 0.0 },\n+  { 30086.169706116176, 10, 5, \n+\t  0.50000000000000000, 0.0 },\n+  { 14410.820616191972, 10, 5, \n+\t  0.60000000000000009, 0.0 },\n+  { -20321.279317331391, 10, 5, \n+\t  0.70000000000000018, 0.0 },\n+  { -40457.016407807983, 10, 5, \n+\t  0.80000000000000004, 0.0 },\n+  { -21343.618518164636, 10, 5, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 10, 5, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler014 = 2.5000000000000020e-13;\n+\n+// Test data for l=10, m=10.\n+// max(|f - f_GSL|): 1.1920928955078125e-06 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 2.3944993944674592e-15\n+// mean(f - f_GSL): -1.5610740298316593e-08\n+// variance(f - f_GSL): 1.2793998664727994e-17\n+// stddev(f - f_GSL): 3.5768699535666649e-09\n+const testcase_assoc_legendre<double>\n+data015[21] =\n+{\n+  { 0.0000000000000000, 10, 10, \n+\t  -1.0000000000000000, 0.0 },\n+  { 162117.40078784220, 10, 10, \n+\t  -0.90000000000000002, 0.0 },\n+  { 3958896.3481267113, 10, 10, \n+\t  -0.80000000000000004, 0.0 },\n+  { 22589806.343887307, 10, 10, \n+\t  -0.69999999999999996, 0.0 },\n+  { 70300999.121633321, 10, 10, \n+\t  -0.59999999999999998, 0.0 },\n+  { 155370278.54003900, 10, 10, \n+\t  -0.50000000000000000, 0.0 },\n+  { 273815518.20150518, 10, 10, \n+\t  -0.39999999999999991, 0.0 },\n+  { 408571989.13158852, 10, 10, \n+\t  -0.29999999999999993, 0.0 },\n+  { 533848212.07990247, 10, 10, \n+\t  -0.19999999999999996, 0.0 },\n+  { 622640835.70523083, 10, 10, \n+\t  -0.099999999999999978, 0.0 },\n+  { 654729075.00000000, 10, 10, \n+\t  0.0000000000000000, 0.0 },\n+  { 622640835.70523083, 10, 10, \n+\t  0.10000000000000009, 0.0 },\n+  { 533848212.07990247, 10, 10, \n+\t  0.20000000000000018, 0.0 },\n+  { 408571989.13158917, 10, 10, \n+\t  0.30000000000000004, 0.0 },\n+  { 273815518.20150483, 10, 10, \n+\t  0.40000000000000013, 0.0 },\n+  { 155370278.54003900, 10, 10, \n+\t  0.50000000000000000, 0.0 },\n+  { 70300999.121633217, 10, 10, \n+\t  0.60000000000000009, 0.0 },\n+  { 22589806.343887202, 10, 10, \n+\t  0.70000000000000018, 0.0 },\n+  { 3958896.3481267113, 10, 10, \n+\t  0.80000000000000004, 0.0 },\n+  { 162117.40078784159, 10, 10, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 10, 10, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler015 = 2.5000000000000020e-13;\n+\n+// Test data for l=20, m=0.\n+// max(|f - f_GSL|): 3.6082248300317588e-16 at index 19\n+// max(|f - f_GSL| / |f_GSL|): 2.4166281401316513e-15\n+// mean(f - f_GSL): 0.0000000000000000\n+// variance(f - f_GSL): 4.9424644697959907e-65\n+// stddev(f - f_GSL): 7.0302663319365015e-33\n+const testcase_assoc_legendre<double>\n+data016[21] =\n+{\n+  { 1.0000000000000000, 20, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { -0.14930823530984835, 20, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 0.22420460541741347, 20, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { -0.20457394463834172, 20, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { 0.15916752910098109, 20, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.048358381067373557, 20, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { -0.10159261558628112, 20, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.18028715947998047, 20, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { -0.098042194344594796, 20, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.082077130944527663, 20, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.17619705200195312, 20, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.082077130944528023, 20, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { -0.098042194344594089, 20, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.18028715947998042, 20, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { -0.10159261558628192, 20, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { -0.048358381067373557, 20, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { 0.15916752910098075, 20, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { -0.20457394463834136, 20, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.22420460541741347, 20, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { -0.14930823530984758, 20, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 20, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler016 = 2.5000000000000020e-13;\n+\n+// Test data for l=20, m=1.\n+// max(|f - f_GSL|): 1.3322676295501878e-15 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 1.0752784502271902e-15\n+// mean(f - f_GSL): 1.4274296030894871e-16\n+// variance(f - f_GSL): 1.0697165176825104e-33\n+// stddev(f - f_GSL): 3.2706521026891724e-17\n+const testcase_assoc_legendre<double>\n+data017[21] =\n+{\n+  { 0.0000000000000000, 20, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { 4.3838334818220499, 20, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { -0.63138296146340844, 20, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { 0.72274871413391395, 20, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { -2.3203528743824910, 20, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { 3.7399919228791405, 20, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { -3.1692202279270085, 20, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.15804468835345031, 20, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { 3.0366182393271171, 20, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { -3.2115523815580209, 20, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.0000000000000000, 20, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { 3.2115523815580169, 20, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { -3.0366182393271259, 20, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { -0.15804468835344135, 20, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { 3.1692202279269970, 20, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { -3.7399919228791405, 20, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { 2.3203528743824995, 20, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { -0.72274871413393793, 20, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.63138296146340844, 20, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { -4.3838334818220686, 20, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 20, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler017 = 2.5000000000000020e-13;\n+\n+// Test data for l=20, m=2.\n+// max(|f - f_GSL|): 2.4868995751603507e-14 at index 5\n+// max(|f - f_GSL| / |f_GSL|): 1.0097407175524082e-15\n+// mean(f - f_GSL): -2.0301221021717147e-15\n+// variance(f - f_GSL): 2.1637327686062039e-31\n+// stddev(f - f_GSL): 4.6515941016023782e-16\n+const testcase_assoc_legendre<double>\n+data018[21] =\n+{\n+  { 0.0000000000000000, 20, 2, \n+\t  -1.0000000000000000, 0.0 },\n+  { 80.812425587310102, 20, 2, \n+\t  -0.90000000000000002, 0.0 },\n+  { -95.849622172549374, 20, 2, \n+\t  -0.80000000000000004, 0.0 },\n+  { 87.337927630325510, 20, 2, \n+\t  -0.69999999999999996, 0.0 },\n+  { -70.330891533985834, 20, 2, \n+\t  -0.59999999999999998, 0.0 },\n+  { 24.629090735179489, 20, 2, \n+\t  -0.50000000000000000, 0.0 },\n+  { 39.902576338912247, 20, 2, \n+\t  -0.39999999999999991, 0.0 },\n+  { -75.621201471396546, 20, 2, \n+\t  -0.29999999999999993, 0.0 },\n+  { 42.417415829726494, 20, 2, \n+\t  -0.19999999999999996, 0.0 },\n+  { 33.826848678871293, 20, 2, \n+\t  -0.099999999999999978, 0.0 },\n+  { -74.002761840820312, 20, 2, \n+\t  0.0000000000000000, 0.0 },\n+  { 33.826848678871464, 20, 2, \n+\t  0.10000000000000009, 0.0 },\n+  { 42.417415829726188, 20, 2, \n+\t  0.20000000000000018, 0.0 },\n+  { -75.621201471396603, 20, 2, \n+\t  0.30000000000000004, 0.0 },\n+  { 39.902576338912553, 20, 2, \n+\t  0.40000000000000013, 0.0 },\n+  { 24.629090735179489, 20, 2, \n+\t  0.50000000000000000, 0.0 },\n+  { -70.330891533985721, 20, 2, \n+\t  0.60000000000000009, 0.0 },\n+  { 87.337927630325453, 20, 2, \n+\t  0.70000000000000018, 0.0 },\n+  { -95.849622172549374, 20, 2, \n+\t  0.80000000000000004, 0.0 },\n+  { 80.812425587309747, 20, 2, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 20, 2, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler018 = 2.5000000000000020e-13;\n+\n+// Test data for l=20, m=5.\n+// max(|f - f_GSL|): 1.2805685400962830e-09 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 2.0861530799041223e-15\n+// mean(f - f_GSL): 1.1641532182693481e-10\n+// variance(f - f_GSL): 7.1150767569361226e-22\n+// stddev(f - f_GSL): 2.6674101216228678e-11\n+const testcase_assoc_legendre<double>\n+data019[21] =\n+{\n+  { -0.0000000000000000, 20, 5, \n+\t  -1.0000000000000000, 0.0 },\n+  { -315702.32715134218, 20, 5, \n+\t  -0.90000000000000002, 0.0 },\n+  { 503060.91484852589, 20, 5, \n+\t  -0.80000000000000004, 0.0 },\n+  { -298127.28360361955, 20, 5, \n+\t  -0.69999999999999996, 0.0 },\n+  { -114444.61447464029, 20, 5, \n+\t  -0.59999999999999998, 0.0 },\n+  { 543428.40914592845, 20, 5, \n+\t  -0.50000000000000000, 0.0 },\n+  { -613842.07728185481, 20, 5, \n+\t  -0.39999999999999991, 0.0 },\n+  { 143765.42411271061, 20, 5, \n+\t  -0.29999999999999993, 0.0 },\n+  { 472600.45321372285, 20, 5, \n+\t  -0.19999999999999996, 0.0 },\n+  { -563861.76771496492, 20, 5, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.0000000000000000, 20, 5, \n+\t  0.0000000000000000, 0.0 },\n+  { 563861.76771496458, 20, 5, \n+\t  0.10000000000000009, 0.0 },\n+  { -472600.45321372483, 20, 5, \n+\t  0.20000000000000018, 0.0 },\n+  { -143765.42411270936, 20, 5, \n+\t  0.30000000000000004, 0.0 },\n+  { 613842.07728185353, 20, 5, \n+\t  0.40000000000000013, 0.0 },\n+  { -543428.40914592845, 20, 5, \n+\t  0.50000000000000000, 0.0 },\n+  { 114444.61447464178, 20, 5, \n+\t  0.60000000000000009, 0.0 },\n+  { 298127.28360361519, 20, 5, \n+\t  0.70000000000000018, 0.0 },\n+  { -503060.91484852589, 20, 5, \n+\t  0.80000000000000004, 0.0 },\n+  { 315702.32715133618, 20, 5, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 20, 5, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler019 = 2.5000000000000020e-13;\n+\n+// Test data for l=20, m=10.\n+// max(|f - f_GSL|): 0.0039062500000000000 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 2.6634565089260680e-15\n+// mean(f - f_GSL): -0.00043596540178571431\n+// variance(f - f_GSL): 9.9784562846311215e-09\n+// stddev(f - f_GSL): 9.9892223344117843e-05\n+const testcase_assoc_legendre<double>\n+data020[21] =\n+{\n+  { -0.0000000000000000, 20, 10, \n+\t  -1.0000000000000000, 0.0 },\n+  { 990017476694.99084, 20, 10, \n+\t  -0.90000000000000002, 0.0 },\n+  { 2392757933281.0498, 20, 10, \n+\t  -0.80000000000000004, 0.0 },\n+  { -1548364524949.5808, 20, 10, \n+\t  -0.69999999999999996, 0.0 },\n+  { -424471915195.05627, 20, 10, \n+\t  -0.59999999999999998, 0.0 },\n+  { 1744502295946.2073, 20, 10, \n+\t  -0.50000000000000000, 0.0 },\n+  { -899973487310.55530, 20, 10, \n+\t  -0.39999999999999991, 0.0 },\n+  { -1092420454297.7119, 20, 10, \n+\t  -0.29999999999999993, 0.0 },\n+  { 1466609267659.8816, 20, 10, \n+\t  -0.19999999999999996, 0.0 },\n+  { 356041756390.71674, 20, 10, \n+\t  -0.099999999999999978, 0.0 },\n+  { -1612052956674.3164, 20, 10, \n+\t  0.0000000000000000, 0.0 },\n+  { 356041756390.71985, 20, 10, \n+\t  0.10000000000000009, 0.0 },\n+  { 1466609267659.8796, 20, 10, \n+\t  0.20000000000000018, 0.0 },\n+  { -1092420454297.7161, 20, 10, \n+\t  0.30000000000000004, 0.0 },\n+  { -899973487310.54810, 20, 10, \n+\t  0.40000000000000013, 0.0 },\n+  { 1744502295946.2073, 20, 10, \n+\t  0.50000000000000000, 0.0 },\n+  { -424471915195.05896, 20, 10, \n+\t  0.60000000000000009, 0.0 },\n+  { -1548364524949.5730, 20, 10, \n+\t  0.70000000000000018, 0.0 },\n+  { 2392757933281.0498, 20, 10, \n+\t  0.80000000000000004, 0.0 },\n+  { 990017476694.98828, 20, 10, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 20, 10, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler020 = 2.5000000000000020e-13;\n+\n+// Test data for l=20, m=20.\n+// max(|f - f_GSL|): 838860800.00000000 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 4.3488507135833189e-15\n+// mean(f - f_GSL): -2855497.1428571427\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data021[21] =\n+{\n+  { 0.0000000000000000, 20, 20, \n+\t  -1.0000000000000000, 0.0 },\n+  { 19609049712023808., 20, 20, \n+\t  -0.90000000000000002, 0.0 },\n+  { 1.1693527616833221e+19, 20, 20, \n+\t  -0.80000000000000004, 0.0 },\n+  { 3.8073455880620691e+20, 20, 20, \n+\t  -0.69999999999999996, 0.0 },\n+  { 3.6874002249007927e+21, 20, 20, \n+\t  -0.59999999999999998, 0.0 },\n+  { 1.8010806978179592e+22, 20, 20, \n+\t  -0.50000000000000000, 0.0 },\n+  { 5.5938832584012466e+22, 20, 20, \n+\t  -0.39999999999999991, 0.0 },\n+  { 1.2454734132297759e+23, 20, 20, \n+\t  -0.29999999999999993, 0.0 },\n+  { 2.1263407800797497e+23, 20, 20, \n+\t  -0.19999999999999996, 0.0 },\n+  { 2.8924941146976873e+23, 20, 20, \n+\t  -0.099999999999999978, 0.0 },\n+  { 3.1983098677287775e+23, 20, 20, \n+\t  0.0000000000000000, 0.0 },\n+  { 2.8924941146976873e+23, 20, 20, \n+\t  0.10000000000000009, 0.0 },\n+  { 2.1263407800797497e+23, 20, 20, \n+\t  0.20000000000000018, 0.0 },\n+  { 1.2454734132297811e+23, 20, 20, \n+\t  0.30000000000000004, 0.0 },\n+  { 5.5938832584012366e+22, 20, 20, \n+\t  0.40000000000000013, 0.0 },\n+  { 1.8010806978179592e+22, 20, 20, \n+\t  0.50000000000000000, 0.0 },\n+  { 3.6874002249007807e+21, 20, 20, \n+\t  0.60000000000000009, 0.0 },\n+  { 3.8073455880620343e+20, 20, 20, \n+\t  0.70000000000000018, 0.0 },\n+  { 1.1693527616833221e+19, 20, 20, \n+\t  0.80000000000000004, 0.0 },\n+  { 19609049712023672., 20, 20, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 20, 20, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler021 = 2.5000000000000020e-13;\n+\n+// Test data for l=50, m=0.\n+// max(|f - f_GSL|): 1.6653345369377348e-16 at index 2\n+// max(|f - f_GSL| / |f_GSL|): 1.6665460706897444e-15\n+// mean(f - f_GSL): -8.0953762212251003e-18\n+// variance(f - f_GSL): 3.4405935985667807e-36\n+// stddev(f - f_GSL): 1.8548837156454796e-18\n+const testcase_assoc_legendre<double>\n+data022[21] =\n+{\n+  { 1.0000000000000000, 50, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { -0.17003765994383671, 50, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 0.13879737345093113, 50, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { -0.014572731645892852, 50, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { -0.058860798844002096, 50, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.031059099239609811, 50, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { 0.041569033381824674, 50, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.10911051574714790, 50, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { 0.083432272204197494, 50, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.038205812661313600, 50, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.11227517265921705, 50, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.038205812661314155, 50, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { 0.083432272204196564, 50, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.10911051574714797, 50, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { 0.041569033381826007, 50, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { -0.031059099239609811, 50, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { -0.058860798844001430, 50, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { -0.014572731645890737, 50, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.13879737345093113, 50, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { -0.17003765994383679, 50, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 50, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler022 = 2.5000000000000020e-13;\n+\n+// Test data for l=50, m=1.\n+// max(|f - f_GSL|): 4.4408920985006262e-15 at index 3\n+// max(|f - f_GSL| / |f_GSL|): 6.6657627150738456e-16\n+// mean(f - f_GSL): 6.3441315692866085e-17\n+// variance(f - f_GSL): 2.1130202818419960e-34\n+// stddev(f - f_GSL): 1.4536231567507432e-17\n+const testcase_assoc_legendre<double>\n+data023[21] =\n+{\n+  { 0.0000000000000000, 50, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { -0.13424149984449490, 50, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { 2.2011219672413018, 50, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { 6.6622414993232004, 50, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { 5.5772846936919249, 50, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { 5.8787148815607608, 50, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { 5.5473459458634080, 50, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { 1.8444956647620248, 50, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { -3.8722014306642127, 50, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { -5.3488751322285628, 50, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.0000000000000000, 50, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { 5.3488751322285522, 50, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { 3.8722014306642620, 50, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { -1.8444956647619930, 50, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { -5.5473459458633814, 50, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { -5.8787148815607608, 50, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { -5.5772846936919453, 50, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { -6.6622414993232182, 50, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { -2.2011219672413018, 50, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { 0.13424149984438935, 50, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 50, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler023 = 2.5000000000000020e-13;\n+\n+// Test data for l=50, m=2.\n+// max(|f - f_GSL|): 3.0553337637684308e-13 at index 3\n+// max(|f - f_GSL| / |f_GSL|): 6.0837685805857877e-15\n+// mean(f - f_GSL): -3.3835368369528578e-16\n+// variance(f - f_GSL): 6.0103688016838995e-33\n+// stddev(f - f_GSL): 7.7526568360039641e-17\n+const testcase_assoc_legendre<double>\n+data024[21] =\n+{\n+  { 0.0000000000000000, 50, 2, \n+\t  -1.0000000000000000, 0.0 },\n+  { 433.04168483713511, 50, 2, \n+\t  -0.90000000000000002, 0.0 },\n+  { -348.06364372056424, 50, 2, \n+\t  -0.80000000000000004, 0.0 },\n+  { 50.221071418108444, 50, 2, \n+\t  -0.69999999999999996, 0.0 },\n+  { 158.46096409274352, 50, 2, \n+\t  -0.59999999999999998, 0.0 },\n+  { 85.988858299721457, 50, 2, \n+\t  -0.50000000000000000, 0.0 },\n+  { -101.15891460879088, 50, 2, \n+\t  -0.39999999999999991, 0.0 },\n+  { -277.07168105316526, 50, 2, \n+\t  -0.29999999999999993, 0.0 },\n+  { -214.33311373510401, 50, 2, \n+\t  -0.19999999999999996, 0.0 },\n+  { 96.349657930951665, 50, 2, \n+\t  -0.099999999999999978, 0.0 },\n+  { 286.30169028100346, 50, 2, \n+\t  0.0000000000000000, 0.0 },\n+  { 96.349657930953242, 50, 2, \n+\t  0.10000000000000009, 0.0 },\n+  { -214.33311373510165, 50, 2, \n+\t  0.20000000000000018, 0.0 },\n+  { -277.07168105316617, 50, 2, \n+\t  0.30000000000000004, 0.0 },\n+  { -101.15891460879435, 50, 2, \n+\t  0.40000000000000013, 0.0 },\n+  { 85.988858299721457, 50, 2, \n+\t  0.50000000000000000, 0.0 },\n+  { 158.46096409274153, 50, 2, \n+\t  0.60000000000000009, 0.0 },\n+  { 50.221071418103143, 50, 2, \n+\t  0.70000000000000018, 0.0 },\n+  { -348.06364372056424, 50, 2, \n+\t  0.80000000000000004, 0.0 },\n+  { 433.04168483713596, 50, 2, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 50, 2, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler024 = 5.0000000000000039e-13;\n+\n+// Test data for l=50, m=5.\n+// max(|f - f_GSL|): 7.4505805969238281e-08 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 2.0088060426072767e-15\n+// mean(f - f_GSL): -6.3862119402204238e-09\n+// variance(f - f_GSL): 2.1411444046342303e-18\n+// stddev(f - f_GSL): 1.4632649810045447e-09\n+const testcase_assoc_legendre<double>\n+data025[21] =\n+{\n+  { -0.0000000000000000, 50, 5, \n+\t  -1.0000000000000000, 0.0 },\n+  { -27340473.952132829, 50, 5, \n+\t  -0.90000000000000002, 0.0 },\n+  { 27753716.768532373, 50, 5, \n+\t  -0.80000000000000004, 0.0 },\n+  { 40808153.913493633, 50, 5, \n+\t  -0.69999999999999996, 0.0 },\n+  { 32071189.035790090, 50, 5, \n+\t  -0.59999999999999998, 0.0 },\n+  { 36265736.218529105, 50, 5, \n+\t  -0.50000000000000000, 0.0 },\n+  { 37089596.700204931, 50, 5, \n+\t  -0.39999999999999991, 0.0 },\n+  { 14562029.629244687, 50, 5, \n+\t  -0.29999999999999993, 0.0 },\n+  { -23686895.217517190, 50, 5, \n+\t  -0.19999999999999996, 0.0 },\n+  { -34878992.965676002, 50, 5, \n+\t  -0.099999999999999978, 0.0 },\n+  { -0.0000000000000000, 50, 5, \n+\t  0.0000000000000000, 0.0 },\n+  { 34878992.965675958, 50, 5, \n+\t  0.10000000000000009, 0.0 },\n+  { 23686895.217517529, 50, 5, \n+\t  0.20000000000000018, 0.0 },\n+  { -14562029.629244499, 50, 5, \n+\t  0.30000000000000004, 0.0 },\n+  { -37089596.700204782, 50, 5, \n+\t  0.40000000000000013, 0.0 },\n+  { -36265736.218529105, 50, 5, \n+\t  0.50000000000000000, 0.0 },\n+  { -32071189.035790242, 50, 5, \n+\t  0.60000000000000009, 0.0 },\n+  { -40808153.913493834, 50, 5, \n+\t  0.70000000000000018, 0.0 },\n+  { -27753716.768532373, 50, 5, \n+\t  0.80000000000000004, 0.0 },\n+  { 27340473.952132136, 50, 5, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 50, 5, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler025 = 2.5000000000000020e-13;\n+\n+// Test data for l=50, m=10.\n+// max(|f - f_GSL|): 22.000000000000000 at index 3\n+// max(|f - f_GSL| / |f_GSL|): 2.2163032493360465e-15\n+// mean(f - f_GSL): -1.9821428571428572\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data026[21] =\n+{\n+  { -0.0000000000000000, 50, 10, \n+\t  -1.0000000000000000, 0.0 },\n+  { -8994661710093155.0, 50, 10, \n+\t  -0.90000000000000002, 0.0 },\n+  { 932311375306569.62, 50, 10, \n+\t  -0.80000000000000004, 0.0 },\n+  { 12153535011507012., 50, 10, \n+\t  -0.69999999999999996, 0.0 },\n+  { 12176690755542240., 50, 10, \n+\t  -0.59999999999999998, 0.0 },\n+  { 9180035388465754.0, 50, 10, \n+\t  -0.50000000000000000, 0.0 },\n+  { 889201701866984.00, 50, 10, \n+\t  -0.39999999999999991, 0.0 },\n+  { -9451384032851544.0, 50, 10, \n+\t  -0.29999999999999993, 0.0 },\n+  { -9926439446673564.0, 50, 10, \n+\t  -0.19999999999999996, 0.0 },\n+  { 2794368162749970.5, 50, 10, \n+\t  -0.099999999999999978, 0.0 },\n+  { 11452238249246346., 50, 10, \n+\t  0.0000000000000000, 0.0 },\n+  { 2794368162750031.0, 50, 10, \n+\t  0.10000000000000009, 0.0 },\n+  { -9926439446673506.0, 50, 10, \n+\t  0.20000000000000018, 0.0 },\n+  { -9451384032851604.0, 50, 10, \n+\t  0.30000000000000004, 0.0 },\n+  { 889201701866835.25, 50, 10, \n+\t  0.40000000000000013, 0.0 },\n+  { 9180035388465754.0, 50, 10, \n+\t  0.50000000000000000, 0.0 },\n+  { 12176690755542214., 50, 10, \n+\t  0.60000000000000009, 0.0 },\n+  { 12153535011506908., 50, 10, \n+\t  0.70000000000000018, 0.0 },\n+  { 932311375306569.62, 50, 10, \n+\t  0.80000000000000004, 0.0 },\n+  { -8994661710093013.0, 50, 10, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 50, 10, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler026 = 2.5000000000000020e-13;\n+\n+// Test data for l=50, m=20.\n+// max(|f - f_GSL|): 3.6028797018963968e+18 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 5.0227025739283085e-15\n+// mean(f - f_GSL): -1.8529095609752899e+17\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data027[21] =\n+{\n+  { 0.0000000000000000, 50, 20, \n+\t  -1.0000000000000000, 0.0 },\n+  { 1.6630925158645501e+33, 50, 20, \n+\t  -0.90000000000000002, 0.0 },\n+  { 1.0622676657892052e+33, 50, 20, \n+\t  -0.80000000000000004, 0.0 },\n+  { 8.6022521164717112e+32, 50, 20, \n+\t  -0.69999999999999996, 0.0 },\n+  { 4.0860128756808466e+32, 50, 20, \n+\t  -0.59999999999999998, 0.0 },\n+  { -4.0169860814274459e+32, 50, 20, \n+\t  -0.50000000000000000, 0.0 },\n+  { -8.2324325279773994e+32, 50, 20, \n+\t  -0.39999999999999991, 0.0 },\n+  { -4.0054067236247267e+31, 50, 20, \n+\t  -0.29999999999999993, 0.0 },\n+  { 7.9309266056434309e+32, 50, 20, \n+\t  -0.19999999999999996, 0.0 },\n+  { 5.4151358290898977e+31, 50, 20, \n+\t  -0.099999999999999978, 0.0 },\n+  { -7.8735935697332210e+32, 50, 20, \n+\t  0.0000000000000000, 0.0 },\n+  { 5.4151358290894924e+31, 50, 20, \n+\t  0.10000000000000009, 0.0 },\n+  { 7.9309266056434453e+32, 50, 20, \n+\t  0.20000000000000018, 0.0 },\n+  { -4.0054067236243731e+31, 50, 20, \n+\t  0.30000000000000004, 0.0 },\n+  { -8.2324325279773893e+32, 50, 20, \n+\t  0.40000000000000013, 0.0 },\n+  { -4.0169860814274459e+32, 50, 20, \n+\t  0.50000000000000000, 0.0 },\n+  { 4.0860128756807846e+32, 50, 20, \n+\t  0.60000000000000009, 0.0 },\n+  { 8.6022521164716291e+32, 50, 20, \n+\t  0.70000000000000018, 0.0 },\n+  { 1.0622676657892052e+33, 50, 20, \n+\t  0.80000000000000004, 0.0 },\n+  { 1.6630925158645541e+33, 50, 20, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 50, 20, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler027 = 5.0000000000000039e-13;\n+\n+// Test data for l=50, m=50.\n+// max(|f - f_GSL|): 1.0695779622587839e+64 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 1.1061123055945194e-14\n+// mean(f - f_GSL): -2.0817504896587826e+62\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data028[21] =\n+{\n+  { 0.0000000000000000, 50, 50, \n+\t  -1.0000000000000000, 0.0 },\n+  { 2.5366994974431341e+60, 50, 50, \n+\t  -0.90000000000000002, 0.0 },\n+  { 2.2028834403101213e+67, 50, 50, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.3325496559566651e+71, 50, 50, \n+\t  -0.69999999999999996, 0.0 },\n+  { 3.8898096431781969e+73, 50, 50, \n+\t  -0.59999999999999998, 0.0 },\n+  { 2.0509760257037188e+75, 50, 50, \n+\t  -0.50000000000000000, 0.0 },\n+  { 3.4866724533443283e+76, 50, 50, \n+\t  -0.39999999999999991, 0.0 },\n+  { 2.5790740224149893e+77, 50, 50, \n+\t  -0.29999999999999993, 0.0 },\n+  { 9.8222237931680989e+77, 50, 50, \n+\t  -0.19999999999999996, 0.0 },\n+  { 2.1198682190366617e+78, 50, 50, \n+\t  -0.099999999999999978, 0.0 },\n+  { 2.7253921397507295e+78, 50, 50, \n+\t  0.0000000000000000, 0.0 },\n+  { 2.1198682190366617e+78, 50, 50, \n+\t  0.10000000000000009, 0.0 },\n+  { 9.8222237931680989e+77, 50, 50, \n+\t  0.20000000000000018, 0.0 },\n+  { 2.5790740224150207e+77, 50, 50, \n+\t  0.30000000000000004, 0.0 },\n+  { 3.4866724533443123e+76, 50, 50, \n+\t  0.40000000000000013, 0.0 },\n+  { 2.0509760257037188e+75, 50, 50, \n+\t  0.50000000000000000, 0.0 },\n+  { 3.8898096431781724e+73, 50, 50, \n+\t  0.60000000000000009, 0.0 },\n+  { 1.3325496559566344e+71, 50, 50, \n+\t  0.70000000000000018, 0.0 },\n+  { 2.2028834403101213e+67, 50, 50, \n+\t  0.80000000000000004, 0.0 },\n+  { 2.5366994974430855e+60, 50, 50, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 50, 50, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler028 = 1.0000000000000008e-12;\n+\n+// Test data for l=100, m=0.\n+// max(|f - f_GSL|): 3.4694469519536142e-16 at index 2\n+// max(|f - f_GSL| / |f_GSL|): 6.8214063779431592e-15\n+// mean(f - f_GSL): -4.1385545784018113e-17\n+// variance(f - f_GSL): 8.9920078491655612e-35\n+// stddev(f - f_GSL): 9.4826198116161765e-18\n+const testcase_assoc_legendre<double>\n+data029[21] =\n+{\n+  { 1.0000000000000000, 100, 0, \n+\t  -1.0000000000000000, 0.0 },\n+  { 0.10226582055871893, 100, 0, \n+\t  -0.90000000000000002, 0.0 },\n+  { 0.050861167913584228, 100, 0, \n+\t  -0.80000000000000004, 0.0 },\n+  { -0.077132507199778641, 100, 0, \n+\t  -0.69999999999999996, 0.0 },\n+  { -0.023747023905133141, 100, 0, \n+\t  -0.59999999999999998, 0.0 },\n+  { -0.060518025961861198, 100, 0, \n+\t  -0.50000000000000000, 0.0 },\n+  { -0.072258202125685025, 100, 0, \n+\t  -0.39999999999999991, 0.0 },\n+  { 0.057127392202801046, 100, 0, \n+\t  -0.29999999999999993, 0.0 },\n+  { 0.014681835355659706, 100, 0, \n+\t  -0.19999999999999996, 0.0 },\n+  { -0.063895098434750205, 100, 0, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.079589237387178727, 100, 0, \n+\t  0.0000000000000000, 0.0 },\n+  { -0.063895098434749761, 100, 0, \n+\t  0.10000000000000009, 0.0 },\n+  { 0.014681835355657875, 100, 0, \n+\t  0.20000000000000018, 0.0 },\n+  { 0.057127392202801566, 100, 0, \n+\t  0.30000000000000004, 0.0 },\n+  { -0.072258202125684082, 100, 0, \n+\t  0.40000000000000013, 0.0 },\n+  { -0.060518025961861198, 100, 0, \n+\t  0.50000000000000000, 0.0 },\n+  { -0.023747023905134217, 100, 0, \n+\t  0.60000000000000009, 0.0 },\n+  { -0.077132507199780501, 100, 0, \n+\t  0.70000000000000018, 0.0 },\n+  { 0.050861167913584228, 100, 0, \n+\t  0.80000000000000004, 0.0 },\n+  { 0.10226582055872063, 100, 0, \n+\t  0.90000000000000013, 0.0 },\n+  { 1.0000000000000000, 100, 0, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler029 = 5.0000000000000039e-13;\n+\n+// Test data for l=100, m=1.\n+// max(|f - f_GSL|): 1.1546319456101628e-14 at index 3\n+// max(|f - f_GSL| / |f_GSL|): 2.1111954004946762e-15\n+// mean(f - f_GSL): -8.0358999877630379e-16\n+// variance(f - f_GSL): 3.3902236521998243e-32\n+// stddev(f - f_GSL): 1.8412559985509414e-16\n+const testcase_assoc_legendre<double>\n+data030[21] =\n+{\n+  { -0.0000000000000000, 100, 1, \n+\t  -1.0000000000000000, 0.0 },\n+  { 6.5200167187780345, 100, 1, \n+\t  -0.90000000000000002, 0.0 },\n+  { 9.0065170007027486, 100, 1, \n+\t  -0.80000000000000004, 0.0 },\n+  { -5.4690908541180976, 100, 1, \n+\t  -0.69999999999999996, 0.0 },\n+  { -8.6275439170430790, 100, 1, \n+\t  -0.59999999999999998, 0.0 },\n+  { -6.0909031663448454, 100, 1, \n+\t  -0.50000000000000000, 0.0 },\n+  { 4.1160338699560395, 100, 1, \n+\t  -0.39999999999999991, 0.0 },\n+  { 5.8491043010758634, 100, 1, \n+\t  -0.29999999999999993, 0.0 },\n+  { -7.9435138723089826, 100, 1, \n+\t  -0.19999999999999996, 0.0 },\n+  { 4.7996285823989355, 100, 1, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.0000000000000000, 100, 1, \n+\t  0.0000000000000000, 0.0 },\n+  { -4.7996285823990101, 100, 1, \n+\t  0.10000000000000009, 0.0 },\n+  { 7.9435138723090155, 100, 1, \n+\t  0.20000000000000018, 0.0 },\n+  { -5.8491043010758013, 100, 1, \n+\t  0.30000000000000004, 0.0 },\n+  { -4.1160338699562162, 100, 1, \n+\t  0.40000000000000013, 0.0 },\n+  { 6.0909031663448454, 100, 1, \n+\t  0.50000000000000000, 0.0 },\n+  { 8.6275439170430470, 100, 1, \n+\t  0.60000000000000009, 0.0 },\n+  { 5.4690908541178693, 100, 1, \n+\t  0.70000000000000018, 0.0 },\n+  { -9.0065170007027486, 100, 1, \n+\t  0.80000000000000004, 0.0 },\n+  { -6.5200167187777787, 100, 1, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 1, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler030 = 2.5000000000000020e-13;\n+\n+// Test data for l=100, m=2.\n+// max(|f - f_GSL|): 6.8212102632969618e-13 at index 5\n+// max(|f - f_GSL| / |f_GSL|): 2.0632212207447263e-15\n+// mean(f - f_GSL): 8.2558298821649733e-14\n+// variance(f - f_GSL): 3.5783331697705263e-28\n+// stddev(f - f_GSL): 1.8916482679849673e-14\n+const testcase_assoc_legendre<double>\n+data031[21] =\n+{\n+  { 0.0000000000000000, 100, 2, \n+\t  -1.0000000000000000, 0.0 },\n+  { -1005.9604880761002, 100, 2, \n+\t  -0.90000000000000002, 0.0 },\n+  { -489.68041725865947, 100, 2, \n+\t  -0.80000000000000004, 0.0 },\n+  { 768.31676011669924, 100, 2, \n+\t  -0.69999999999999996, 0.0 },\n+  { 226.90362556627937, 100, 2, \n+\t  -0.59999999999999998, 0.0 },\n+  { 604.19889304940341, 100, 2, \n+\t  -0.50000000000000000, 0.0 },\n+  { 733.40061037838518, 100, 2, \n+\t  -0.39999999999999991, 0.0 },\n+  { -573.30774483995629, 100, 2, \n+\t  -0.29999999999999993, 0.0 },\n+  { -151.52946305080880, 100, 2, \n+\t  -0.19999999999999996, 0.0 },\n+  { 646.30525583587985, 100, 2, \n+\t  -0.099999999999999978, 0.0 },\n+  { -803.85129761050518, 100, 2, \n+\t  0.0000000000000000, 0.0 },\n+  { 646.30525583587439, 100, 2, \n+\t  0.10000000000000009, 0.0 },\n+  { -151.52946305079013, 100, 2, \n+\t  0.20000000000000018, 0.0 },\n+  { -573.30774483996390, 100, 2, \n+\t  0.30000000000000004, 0.0 },\n+  { 733.40061037837552, 100, 2, \n+\t  0.40000000000000013, 0.0 },\n+  { 604.19889304940341, 100, 2, \n+\t  0.50000000000000000, 0.0 },\n+  { 226.90362556629168, 100, 2, \n+\t  0.60000000000000009, 0.0 },\n+  { 768.31676011671766, 100, 2, \n+\t  0.70000000000000018, 0.0 },\n+  { -489.68041725865947, 100, 2, \n+\t  0.80000000000000004, 0.0 },\n+  { -1005.9604880761161, 100, 2, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 2, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler031 = 2.5000000000000020e-13;\n+\n+// Test data for l=100, m=5.\n+// max(|f - f_GSL|): 1.4305114746093750e-06 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 3.7628882298853693e-15\n+// mean(f - f_GSL): -5.1089695521763390e-08\n+// variance(f - f_GSL): 1.3703324189659077e-16\n+// stddev(f - f_GSL): 1.1706119848036358e-08\n+const testcase_assoc_legendre<double>\n+data032[21] =\n+{\n+  { 0.0000000000000000, 100, 5, \n+\t  -1.0000000000000000, 0.0 },\n+  { 900551126.09653807, 100, 5, \n+\t  -0.90000000000000002, 0.0 },\n+  { 988567431.55756140, 100, 5, \n+\t  -0.80000000000000004, 0.0 },\n+  { -645646451.90344620, 100, 5, \n+\t  -0.69999999999999996, 0.0 },\n+  { -897114585.29920685, 100, 5, \n+\t  -0.59999999999999998, 0.0 },\n+  { -661710744.42483854, 100, 5, \n+\t  -0.50000000000000000, 0.0 },\n+  { 380163158.51424754, 100, 5, \n+\t  -0.39999999999999991, 0.0 },\n+  { 617391071.36633193, 100, 5, \n+\t  -0.29999999999999993, 0.0 },\n+  { -805288801.85509109, 100, 5, \n+\t  -0.19999999999999996, 0.0 },\n+  { 481041740.16728652, 100, 5, \n+\t  -0.099999999999999978, 0.0 },\n+  { 0.0000000000000000, 100, 5, \n+\t  0.0000000000000000, 0.0 },\n+  { -481041740.16729391, 100, 5, \n+\t  0.10000000000000009, 0.0 },\n+  { 805288801.85509515, 100, 5, \n+\t  0.20000000000000018, 0.0 },\n+  { -617391071.36632574, 100, 5, \n+\t  0.30000000000000004, 0.0 },\n+  { -380163158.51426536, 100, 5, \n+\t  0.40000000000000013, 0.0 },\n+  { 661710744.42483854, 100, 5, \n+\t  0.50000000000000000, 0.0 },\n+  { 897114585.29920483, 100, 5, \n+\t  0.60000000000000009, 0.0 },\n+  { 645646451.90342283, 100, 5, \n+\t  0.70000000000000018, 0.0 },\n+  { -988567431.55756140, 100, 5, \n+\t  0.80000000000000004, 0.0 },\n+  { -900551126.09651637, 100, 5, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 5, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler032 = 2.5000000000000020e-13;\n+\n+// Test data for l=100, m=10.\n+// max(|f - f_GSL|): 14336.000000000000 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 3.4905902237930355e-15\n+// mean(f - f_GSL): 341.33333333333331\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data033[21] =\n+{\n+  { 0.0000000000000000, 100, 10, \n+\t  -1.0000000000000000, 0.0 },\n+  { 2.5643395957658602e+17, 100, 10, \n+\t  -0.90000000000000002, 0.0 },\n+  { 1.5778673545673485e+18, 100, 10, \n+\t  -0.80000000000000004, 0.0 },\n+  { 4.4355048487496801e+18, 100, 10, \n+\t  -0.69999999999999996, 0.0 },\n+  { -9.5936111659124288e+17, 100, 10, \n+\t  -0.59999999999999998, 0.0 },\n+  { 4.2387123021963438e+18, 100, 10, \n+\t  -0.50000000000000000, 0.0 },\n+  { 8.2370834618426767e+18, 100, 10, \n+\t  -0.39999999999999991, 0.0 },\n+  { -4.9089358388051978e+18, 100, 10, \n+\t  -0.29999999999999993, 0.0 },\n+  { -2.3468810358091274e+18, 100, 10, \n+\t  -0.19999999999999996, 0.0 },\n+  { 6.8627855225034568e+18, 100, 10, \n+\t  -0.099999999999999978, 0.0 },\n+  { -8.2494597181670380e+18, 100, 10, \n+\t  0.0000000000000000, 0.0 },\n+  { 6.8627855225034056e+18, 100, 10, \n+\t  0.10000000000000009, 0.0 },\n+  { -2.3468810358089518e+18, 100, 10, \n+\t  0.20000000000000018, 0.0 },\n+  { -4.9089358388052941e+18, 100, 10, \n+\t  0.30000000000000004, 0.0 },\n+  { 8.2370834618426112e+18, 100, 10, \n+\t  0.40000000000000013, 0.0 },\n+  { 4.2387123021963438e+18, 100, 10, \n+\t  0.50000000000000000, 0.0 },\n+  { -9.5936111659112640e+17, 100, 10, \n+\t  0.60000000000000009, 0.0 },\n+  { 4.4355048487499668e+18, 100, 10, \n+\t  0.70000000000000018, 0.0 },\n+  { 1.5778673545673485e+18, 100, 10, \n+\t  0.80000000000000004, 0.0 },\n+  { 2.5643395957630058e+17, 100, 10, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 10, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler033 = 2.5000000000000020e-13;\n+\n+// Test data for l=100, m=20.\n+// max(|f - f_GSL|): 3.9290089137475448e+24 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 5.1615589395022552e-15\n+// mean(f - f_GSL): -5.0371909150609551e+23\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data034[21] =\n+{\n+  { 0.0000000000000000, 100, 20, \n+\t  -1.0000000000000000, 0.0 },\n+  { 7.1604344878780134e+37, 100, 20, \n+\t  -0.90000000000000002, 0.0 },\n+  { -8.3963895116962231e+38, 100, 20, \n+\t  -0.80000000000000004, 0.0 },\n+  { 7.9022236853110145e+38, 100, 20, \n+\t  -0.69999999999999996, 0.0 },\n+  { 8.2680005574121013e+38, 100, 20, \n+\t  -0.59999999999999998, 0.0 },\n+  { 3.0750497039999552e+38, 100, 20, \n+\t  -0.50000000000000000, 0.0 },\n+  { -7.6120586043843556e+38, 100, 20, \n+\t  -0.39999999999999991, 0.0 },\n+  { 1.1474496891900921e+38, 100, 20, \n+\t  -0.29999999999999993, 0.0 },\n+  { 4.3966251307444241e+38, 100, 20, \n+\t  -0.19999999999999996, 0.0 },\n+  { -7.0503266451702591e+38, 100, 20, \n+\t  -0.099999999999999978, 0.0 },\n+  { 7.7727439836159581e+38, 100, 20, \n+\t  0.0000000000000000, 0.0 },\n+  { -7.0503266451702213e+38, 100, 20, \n+\t  0.10000000000000009, 0.0 },\n+  { 4.3966251307442783e+38, 100, 20, \n+\t  0.20000000000000018, 0.0 },\n+  { 1.1474496891901797e+38, 100, 20, \n+\t  0.30000000000000004, 0.0 },\n+  { -7.6120586043844176e+38, 100, 20, \n+\t  0.40000000000000013, 0.0 },\n+  { 3.0750497039999552e+38, 100, 20, \n+\t  0.50000000000000000, 0.0 },\n+  { 8.2680005574120394e+38, 100, 20, \n+\t  0.60000000000000009, 0.0 },\n+  { 7.9022236853108422e+38, 100, 20, \n+\t  0.70000000000000018, 0.0 },\n+  { -8.3963895116962231e+38, 100, 20, \n+\t  0.80000000000000004, 0.0 },\n+  { 7.1604344878751847e+37, 100, 20, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 20, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler034 = 5.0000000000000039e-13;\n+\n+// Test data for l=100, m=50.\n+// max(|f - f_GSL|): 6.8296953242310788e+83 at index 14\n+// max(|f - f_GSL| / |f_GSL|): 2.0345950516284159e-14\n+// mean(f - f_GSL): 7.0103750947133818e+82\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data035[21] =\n+{\n+  { 0.0000000000000000, 100, 50, \n+\t  -1.0000000000000000, 0.0 },\n+  { 9.3231278516893716e+96, 100, 50, \n+\t  -0.90000000000000002, 0.0 },\n+  { -1.1029797977454281e+98, 100, 50, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.8089333903465606e+97, 100, 50, \n+\t  -0.69999999999999996, 0.0 },\n+  { 5.9364045925669405e+97, 100, 50, \n+\t  -0.59999999999999998, 0.0 },\n+  { -8.2252620339727118e+97, 100, 50, \n+\t  -0.50000000000000000, 0.0 },\n+  { 7.1431385093740728e+97, 100, 50, \n+\t  -0.39999999999999991, 0.0 },\n+  { -3.3520602067479935e+97, 100, 50, \n+\t  -0.29999999999999993, 0.0 },\n+  { -2.7791149588121382e+97, 100, 50, \n+\t  -0.19999999999999996, 0.0 },\n+  { 9.0119338550180417e+97, 100, 50, \n+\t  -0.099999999999999978, 0.0 },\n+  { -1.1712145031578381e+98, 100, 50, \n+\t  0.0000000000000000, 0.0 },\n+  { 9.0119338550181207e+97, 100, 50, \n+\t  0.10000000000000009, 0.0 },\n+  { -2.7791149588123644e+97, 100, 50, \n+\t  0.20000000000000018, 0.0 },\n+  { -3.3520602067479344e+97, 100, 50, \n+\t  0.30000000000000004, 0.0 },\n+  { 7.1431385093738816e+97, 100, 50, \n+\t  0.40000000000000013, 0.0 },\n+  { -8.2252620339727118e+97, 100, 50, \n+\t  0.50000000000000000, 0.0 },\n+  { 5.9364045925668024e+97, 100, 50, \n+\t  0.60000000000000009, 0.0 },\n+  { 1.8089333903469005e+97, 100, 50, \n+\t  0.70000000000000018, 0.0 },\n+  { -1.1029797977454281e+98, 100, 50, \n+\t  0.80000000000000004, 0.0 },\n+  { 9.3231278516892938e+96, 100, 50, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 50, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler035 = 2.5000000000000015e-12;\n+\n+// Test data for l=100, m=100.\n+// max(|f - f_GSL|): 1.9201920817492002e+172 at index 12\n+// max(|f - f_GSL| / |f_GSL|): 2.3348104188683898e-14\n+// mean(f - f_GSL): -4.0709851490379341e+170\n+// variance(f - f_GSL): inf\n+// stddev(f - f_GSL): inf\n+const testcase_assoc_legendre<double>\n+data036[21] =\n+{\n+  { 0.0000000000000000, 100, 100, \n+\t  -1.0000000000000000, 0.0 },\n+  { 5.7751792255758316e+150, 100, 100, \n+\t  -0.90000000000000002, 0.0 },\n+  { 4.3552236041585515e+164, 100, 100, \n+\t  -0.80000000000000004, 0.0 },\n+  { 1.5936546850595123e+172, 100, 100, \n+\t  -0.69999999999999996, 0.0 },\n+  { 1.3579510590289176e+177, 100, 100, \n+\t  -0.59999999999999998, 0.0 },\n+  { 3.7752749682889513e+180, 100, 100, \n+\t  -0.50000000000000000, 0.0 },\n+  { 1.0910627330458913e+183, 100, 100, \n+\t  -0.39999999999999991, 0.0 },\n+  { 5.9697347526821064e+184, 100, 100, \n+\t  -0.29999999999999993, 0.0 },\n+  { 8.6585879147526714e+185, 100, 100, \n+\t  -0.19999999999999996, 0.0 },\n+  { 4.0331571908057011e+186, 100, 100, \n+\t  -0.099999999999999978, 0.0 },\n+  { 6.6663086700729543e+186, 100, 100, \n+\t  0.0000000000000000, 0.0 },\n+  { 4.0331571908057011e+186, 100, 100, \n+\t  0.10000000000000009, 0.0 },\n+  { 8.6585879147526714e+185, 100, 100, \n+\t  0.20000000000000018, 0.0 },\n+  { 5.9697347526822483e+184, 100, 100, \n+\t  0.30000000000000004, 0.0 },\n+  { 1.0910627330458797e+183, 100, 100, \n+\t  0.40000000000000013, 0.0 },\n+  { 3.7752749682889513e+180, 100, 100, \n+\t  0.50000000000000000, 0.0 },\n+  { 1.3579510590289000e+177, 100, 100, \n+\t  0.60000000000000009, 0.0 },\n+  { 1.5936546850594382e+172, 100, 100, \n+\t  0.70000000000000018, 0.0 },\n+  { 4.3552236041585515e+164, 100, 100, \n+\t  0.80000000000000004, 0.0 },\n+  { 5.7751792255756128e+150, 100, 100, \n+\t  0.90000000000000013, 0.0 },\n+  { 0.0000000000000000, 100, 100, \n+\t  1.0000000000000000, 0.0 },\n+};\n+const double toler036 = 2.5000000000000015e-12;\n+\n+template<typename Ret, unsigned int Num>\n+  void\n+  test(const testcase_assoc_legendre<Ret> (&data)[Num], Ret toler)\n+  {\n+    bool test __attribute__((unused)) = true;\n+    const Ret eps = std::numeric_limits<Ret>::epsilon();\n+    Ret max_abs_diff = -Ret(1);\n+    Ret max_abs_frac = -Ret(1);\n+    unsigned int num_datum = Num;\n+    for (unsigned int i = 0; i < num_datum; ++i)\n+  \t {\n+\tconst Ret f = std::tr1::assoc_legendre(data[i].l, data[i].m,\n+\t\t     data[i].x);\n+\tconst Ret f0 = data[i].f0;\n+\tconst Ret diff = f - f0;\n+\tif (std::abs(diff) > max_abs_diff)\n+\t  max_abs_diff = std::abs(diff);\n+\tif (std::abs(f0) > Ret(10) * eps\n+\t && std::abs(f) > Ret(10) * eps)\n+\t  {\n+\t    const Ret frac = diff / f0;\n+\t    if (std::abs(frac) > max_abs_frac)\n+\t      max_abs_frac = std::abs(frac);\n+\t  }\n+      }\n+    VERIFY(max_abs_frac < toler);\n+  }\n+\n+int\n+main()\n+{\n+  test(data001, toler001);\n+  test(data002, toler002);\n+  test(data003, toler003);\n+  test(data004, toler004);\n+  test(data005, toler005);\n+  test(data006, toler006);\n+  test(data007, toler007);\n+  test(data008, toler008);\n+  test(data009, toler009);\n+  test(data010, toler010);\n+  test(data011, toler011);\n+  test(data012, toler012);\n+  test(data013, toler013);\n+  test(data014, toler014);\n+  test(data015, toler015);\n+  test(data016, toler016);\n+  test(data017, toler017);\n+  test(data018, toler018);\n+  test(data019, toler019);\n+  test(data020, toler020);\n+  test(data021, toler021);\n+  test(data022, toler022);\n+  test(data023, toler023);\n+  test(data024, toler024);\n+  test(data025, toler025);\n+  test(data026, toler026);\n+  test(data027, toler027);\n+  test(data028, toler028);\n+  test(data029, toler029);\n+  test(data030, toler030);\n+  test(data031, toler031);\n+  test(data032, toler032);\n+  test(data033, toler033);\n+  test(data034, toler034);\n+  test(data035, toler035);\n+  test(data036, toler036);\n+  return 0;\n+}"}, {"sha": "82141c89ee9d790d4c5ec7fa7cf0e577f00da395", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/09_cyl_bessel_j/check_value.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F09_cyl_bessel_j%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F09_cyl_bessel_j%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F09_cyl_bessel_j%2Fcheck_value.cc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -698,6 +698,26 @@ data026[21] =\n };\n const double toler026 = 1.0000000000000006e-11;\n \n+// Test data for nu=100.00000000000000.\n+// max(|f - f_GSL|): 2.5857788132910287e-14\n+// max(|f - f_GSL| / |f_GSL|): 1.6767662425535933e-11\n+const testcase_cyl_bessel_j<double>\n+data027[11] =\n+{\n+  { 0.0116761350077845, 100.0000000000000000, 1000.0000000000000000, 0.0 },\n+  {-0.0116998547780258, 100.0000000000000000, 1100.0000000000000000, 0.0 },\n+  {-0.0228014834050837, 100.0000000000000000, 1200.0000000000000000, 0.0 },\n+  {-0.0169735007873739, 100.0000000000000000, 1300.0000000000000000, 0.0 },\n+  {-0.0014154528803530, 100.0000000000000000, 1400.0000000000000000, 0.0 },\n+  { 0.0133337265844988, 100.0000000000000000, 1500.0000000000000000, 0.0 },\n+  { 0.0198025620201474, 100.0000000000000000, 1600.0000000000000000, 0.0 },\n+  { 0.0161297712798388, 100.0000000000000000, 1700.0000000000000000, 0.0 },\n+  { 0.0053753369281577, 100.0000000000000000, 1800.0000000000000000, 0.0 },\n+  {-0.0069238868725646, 100.0000000000000000, 1900.0000000000000000, 0.0 },\n+  {-0.0154878717200738, 100.0000000000000000, 2000.0000000000000000, 0.0 },\n+};\n+const double toler027 = 1.0000000000000006e-10;\n+\n template<typename Ret, unsigned int Num>\n   void\n   test(const testcase_cyl_bessel_j<Ret> (&data)[Num], Ret toler)\n@@ -748,5 +768,6 @@ main()\n   test(data024, toler024);\n   test(data025, toler025);\n   test(data026, toler026);\n+  test(data027, toler027);\n   return 0;\n }"}, {"sha": "86678be73e1e3bb4a9886e19554baa3343081321", "filename": "libstdc++-v3/testsuite/tr1/5_numerical_facilities/special_functions/11_cyl_neumann/check_value.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F11_cyl_neumann%2Fcheck_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F11_cyl_neumann%2Fcheck_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F5_numerical_facilities%2Fspecial_functions%2F11_cyl_neumann%2Fcheck_value.cc?ref=b118dfdb6d5ad68c8ff70ea517928c37ebb1fa11", "patch": "@@ -742,6 +742,26 @@ data028[20] =\n };\n const double toler028 = 1.0000000000000006e-11;\n \n+// Test data for nu=100.00000000000000.\n+// max(|f - f_GSL|): 3.1049815496508870e-14\n+// max(|f - f_GSL| / |f_GSL|): 8.4272302674970308e-12\n+const testcase_cyl_neumann<double>\n+data029[11] =\n+{\n+  {-0.0224386882577326, 100.0000000000000000, 1000.0000000000000000, 0.0 },\n+  {-0.0210775951598200, 100.0000000000000000, 1100.0000000000000000, 0.0 },\n+  {-0.0035299439206693, 100.0000000000000000, 1200.0000000000000000, 0.0 },\n+  { 0.0142500193265366, 100.0000000000000000, 1300.0000000000000000, 0.0 },\n+  { 0.0213046790897353, 100.0000000000000000, 1400.0000000000000000, 0.0 },\n+  { 0.0157343950779022, 100.0000000000000000, 1500.0000000000000000, 0.0 },\n+  { 0.0025544633636228, 100.0000000000000000, 1600.0000000000000000, 0.0 },\n+  {-0.0107220455248494, 100.0000000000000000, 1700.0000000000000000, 0.0 },\n+  {-0.0180369192432256, 100.0000000000000000, 1800.0000000000000000, 0.0 },\n+  {-0.0169584155930798, 100.0000000000000000, 1900.0000000000000000, 0.0 },\n+  {-0.0088788704566206, 100.0000000000000000, 2000.0000000000000000, 0.0 },\n+};\n+const double toler029 = 1.0000000000000006e-11;\n+\n template<typename Ret, unsigned int Num>\n   void\n   test(const testcase_cyl_neumann<Ret> (&data)[Num], Ret toler)\n@@ -794,5 +814,6 @@ main()\n   test(data026, toler026);\n   test(data027, toler027);\n   test(data028, toler028);\n+  test(data029, toler029);\n   return 0;\n }"}]}