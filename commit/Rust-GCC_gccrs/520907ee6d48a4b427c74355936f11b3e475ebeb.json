{"sha": "520907ee6d48a4b427c74355936f11b3e475ebeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIwOTA3ZWU2ZDQ4YTRiNDI3Yzc0MzU1OTM2ZjExYjNlNDc1ZWJlYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-13T00:49:03Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-13T00:49:03Z"}, "message": "ltcf-c.sh: On Solaris, use `gcc -shared' to build a shared library if we've got GCC.\n\n\t* ltcf-c.sh: On Solaris, use `gcc -shared' to build a shared library\n\tif we've got GCC.\n\nFrom-SVN: r37414", "tree": {"sha": "2f7a4855fc6e11e7ff93b4256828062efa66fe64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f7a4855fc6e11e7ff93b4256828062efa66fe64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/520907ee6d48a4b427c74355936f11b3e475ebeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520907ee6d48a4b427c74355936f11b3e475ebeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/520907ee6d48a4b427c74355936f11b3e475ebeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/520907ee6d48a4b427c74355936f11b3e475ebeb/comments", "author": null, "committer": null, "parents": [{"sha": "81dfdc485e91ca648578a9e6e688730eb93b49c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81dfdc485e91ca648578a9e6e688730eb93b49c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81dfdc485e91ca648578a9e6e688730eb93b49c8"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "024b60186f90d748e502bf8394aa99170fede222", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520907ee6d48a4b427c74355936f11b3e475ebeb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520907ee6d48a4b427c74355936f11b3e475ebeb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=520907ee6d48a4b427c74355936f11b3e475ebeb", "patch": "@@ -1,3 +1,8 @@\n+2000-11-12  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* ltcf-c.sh: On Solaris, use `gcc -shared' to build a shared library\n+\tif we've got GCC.\n+\n 2000-11-11  Philip Blundell  <philb@gnu.org>\n \n \t* MAINTAINERS: Add self to Write After Approval list."}, {"sha": "57df16c939bc68de3282d8e742d517fea49c0083", "filename": "ltcf-c.sh", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/520907ee6d48a4b427c74355936f11b3e475ebeb/ltcf-c.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/520907ee6d48a4b427c74355936f11b3e475ebeb/ltcf-c.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-c.sh?ref=520907ee6d48a4b427c74355936f11b3e475ebeb", "patch": "@@ -425,11 +425,15 @@ else\n \n   solaris*)\n     no_undefined_flag=' -z text'\n-    # $CC -shared without GNU ld will not create a library from C++\n-    # object files and a static libstdc++, better avoid it by now\n-    archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n-    archive_expsym_cmds='$echo \"{ global:\" > $lib.exp~cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n-\t\t$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'\n+    if test \"$with_gcc\" = yes; then\n+      archive_cmds='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n+      archive_expsym_cmds='$echo \"{ global:\" > $lib.exp~cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n+                  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'\n+    else\n+      archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n+      archive_expsym_cmds='$echo \"{ global:\" > $lib.exp~cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n+\t\t  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'\n+    fi\n     hardcode_libdir_flag_spec='-R$libdir'\n     hardcode_shlibpath_var=no\n     case \"$host_os\" in"}]}