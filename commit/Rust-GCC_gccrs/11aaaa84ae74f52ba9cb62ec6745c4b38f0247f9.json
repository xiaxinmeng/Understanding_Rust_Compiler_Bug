{"sha": "11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhYWFhODRhZTc0ZjUyYmE5Y2I2MmVjNjc0NWM0YjM4ZjAyNDdmOQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-10-14T21:05:24Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-10-14T21:05:24Z"}, "message": "mt_allocator.h: Tweaks.\n\n\n2004-10-14  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/mt_allocator.h: Tweaks.\n\t* src/mt_allocator.cc: Same.\n\nFrom-SVN: r89052", "tree": {"sha": "8dfe6ae36b4eea62bc05af4e0a631eb473549320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dfe6ae36b4eea62bc05af4e0a631eb473549320"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/comments", "author": null, "committer": null, "parents": [{"sha": "ed674251587d9dcc99e617713da9a992774d6b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed674251587d9dcc99e617713da9a992774d6b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed674251587d9dcc99e617713da9a992774d6b73"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "31a9db02ad32f4e76ea5d7da68a961bc5f596ba0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "patch": "@@ -1,3 +1,8 @@\n+2004-10-14  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/mt_allocator.h: Tweaks.\n+\t* src/mt_allocator.cc: Same.\n+\n 2004-10-14  Dhruv Matani  <dhruvbird@gmx.net>\n \n \t* ext/bitmap_allocator.h: Clean-up add/remove functions."}, {"sha": "3bbfc79b4bb5ad995c7065856f770f3a03afd6e0", "filename": "libstdc++-v3/include/ext/mt_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmt_allocator.h?ref=11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "patch": "@@ -705,7 +705,7 @@ namespace __gnu_cxx\n \t  // Already reserved.\n \t  typedef typename __pool_type::_Block_record _Block_record;\n \t  _Block_record* __block = __bin._M_first[__thread_id];\n-\t  __bin._M_first[__thread_id] = __bin._M_first[__thread_id]->_M_next;\n+\t  __bin._M_first[__thread_id] = __block->_M_next;\n \t  \n \t  __pool._M_adjust_freelist(__bin, __block, __thread_id);\n \t  const __pool_base::_Tune& __options = __pool._M_get_options();"}, {"sha": "7dff273ba12b39470f35f80ed262a0e0d97d8f60", "filename": "libstdc++-v3/src/mt_allocator.cc", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc?ref=11aaaa84ae74f52ba9cb62ec6745c4b38f0247f9", "patch": "@@ -89,6 +89,7 @@ namespace __gnu_cxx\n   {\n     // Round up to power of 2 and figure out which bin to use.\n     const size_t __which = _M_binmap[__bytes];\n+    _Bin_record& __bin = _M_bin[__which];\n     const _Tune& __options = _M_get_options();\n     const size_t __bin_size = ((__options._M_min_bin << __which) \n \t\t\t       + __options._M_align);\n@@ -97,24 +98,23 @@ namespace __gnu_cxx\n     // Get a new block dynamically, set it up for use.\n     void* __v = ::operator new(__options._M_chunk_size);\n     _Block_record* __block = static_cast<_Block_record*>(__v);\n-    --__block_count;\n-    _Block_record* __tmp = __block;\n-    while (__block_count-- > 0)\n+    __bin._M_first[__thread_id] = __block;\n+    while (--__block_count > 0)\n       {\n-\tchar* __c = reinterpret_cast<char*>(__tmp) + __bin_size;\n-\t__tmp->_M_next = reinterpret_cast<_Block_record*>(__c);\n-\t__tmp = __tmp->_M_next;\n+\tchar* __c = reinterpret_cast<char*>(__block) + __bin_size;\n+\t__block->_M_next = reinterpret_cast<_Block_record*>(__c);\n+\t__block = __block->_M_next;\n       }\n-    __tmp->_M_next = NULL;\n+    __block->_M_next = NULL;\n \n-    // Update _Bin_record fields.\n-    _Bin_record& __bin = _M_bin[__which];\n-    __bin._M_first[__thread_id] = __block->_M_next;\n     _Block_address* __address = new _Block_address;\n     __address->_M_initial = __v;\n     __address->_M_next = __bin._M_address;\n     __bin._M_address = __address;\n \n+    __block = __bin._M_first[__thread_id];\n+    __bin._M_first[__thread_id] = __block->_M_next;\n+\n     // NB: For alignment reasons, we can't use the first _M_align\n     // bytes, even when sizeof(_Block_record) < _M_align.\n     return reinterpret_cast<char*>(__block) + __options._M_align;\n@@ -245,8 +245,7 @@ namespace __gnu_cxx\n \t    _Block_record* __first = __tmp;\n \t    __remove /= __options._M_freelist_headroom;\n \t    const long __removed = __remove;\n-\t    --__remove;\n-\t    while (__remove-- > 0)\n+\t    while (--__remove > 0)\n \t      __tmp = __tmp->_M_next;\n \t    __bin._M_first[__thread_id] = __tmp->_M_next;\n \t    __bin._M_free[__thread_id] -= __removed;\n@@ -308,11 +307,10 @@ namespace __gnu_cxx\n \t    __gthread_mutex_unlock(__bin._M_mutex);\n \n \t    void* __v = ::operator new(__options._M_chunk_size);\n-\t    __bin._M_first[__thread_id] = static_cast<_Block_record*>(__v);\n+\t    __block = static_cast<_Block_record*>(__v);\n \t    __bin._M_free[__thread_id] = __block_count;\n-\t    --__block_count;\n-\t    __block = __bin._M_first[__thread_id];\n-\t    while (__block_count-- > 0)\n+\t    __bin._M_first[__thread_id] = __block;\n+\t    while (--__block_count > 0)\n \t      {\n \t\tchar* __c = reinterpret_cast<char*>(__block) + __bin_size;\n \t\t__block->_M_next = reinterpret_cast<_Block_record*>(__c);\n@@ -343,9 +341,8 @@ namespace __gnu_cxx\n \t      {\n \t\t__bin._M_free[__thread_id] = __block_count;\n \t\t__bin._M_free[0] -= __block_count;\n-\t\t--__block_count;\n \t\t__block = __bin._M_first[0];\n-\t\twhile (__block_count-- > 0)\n+\t\twhile (--__block_count > 0)\n \t\t  __block = __block->_M_next;\n \t\t__bin._M_first[0] = __block->_M_next;\n \t\t__block->_M_next = NULL;\n@@ -358,8 +355,7 @@ namespace __gnu_cxx\n \tvoid* __v = ::operator new(__options._M_chunk_size);\n \t__block = static_cast<_Block_record*>(__v);\n \t__bin._M_first[0] = __block;\n-\t--__block_count;\n-\twhile (__block_count-- > 0)\n+\twhile (--__block_count > 0)\n \t  {\n \t    char* __c = reinterpret_cast<char*>(__block) + __bin_size;\n \t    __block->_M_next = reinterpret_cast<_Block_record*>(__c);\n@@ -374,7 +370,7 @@ namespace __gnu_cxx\n       }\n       \n     __block = __bin._M_first[__thread_id];\n-    __bin._M_first[__thread_id] = __bin._M_first[__thread_id]->_M_next;\n+    __bin._M_first[__thread_id] = __block->_M_next;\n \n     if (__gthread_active_p())\n       {"}]}