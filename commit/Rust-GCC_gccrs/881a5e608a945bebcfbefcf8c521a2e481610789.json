{"sha": "881a5e608a945bebcfbefcf8c521a2e481610789", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgxYTVlNjA4YTk0NWJlYmNmYmVmY2Y4YzUyMWEyZTQ4MTYxMDc4OQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2015-06-11T12:40:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2015-06-11T12:40:10Z"}, "message": "Restore DW_AT_abstract_origin for cross-unit call sites\n\nPR debug/66503\n\ngcc/ChangeLog:\n\t* debug.h (struct gcc_debug_hooks): Add a\n\tregister_main_translation_unit hook.\n\t* debug.c (do_nothing_debug_hooks): Provide a function for this\n\tnew hook.\n\t* dbxout.c (dbx_debug_hooks): Likewise.\n\t* sdbout.c (sdb_debug_hooks): Likewise.\n\t* vmsdbgout.c (vmsdbg_debug_hooks): Likewise.\n\t* dwarf2out.c (main_translation_unit): New global variable.\n\t(dwarf2out_register_main_translation_unit): New function\n\timplementing the new hook.\n\t(dwarf2_debug_hooks): Assign\n\tdwarf2out_register_main_translation_unit to this new hook.\n\t(dwarf2out_init): Associate any main translation unit to\n\tcomp_unit_die ().\n\t* c/c-decl.c (pop_scope): Register the main translation unit\n\tthrough the new debug hook.\n\t* cp/decl.c (cxx_init_decl_processing): Likewise.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/utils.c (get_global_context): Register the main\n\ttranslation unit through the new debug hook.\n\ngcc/fortran/ChangeLog:\n\t* f95-lang.c (gfc_create_decls): Register the main translation\n\tunit through the new debug hook.\n\nFrom-SVN: r224371", "tree": {"sha": "f7c9d03a32db11d1b9f07488e40eac40beba11a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7c9d03a32db11d1b9f07488e40eac40beba11a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/881a5e608a945bebcfbefcf8c521a2e481610789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881a5e608a945bebcfbefcf8c521a2e481610789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/881a5e608a945bebcfbefcf8c521a2e481610789", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/881a5e608a945bebcfbefcf8c521a2e481610789/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f13c4673a54c76a1c92018d630f48126349732b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13c4673a54c76a1c92018d630f48126349732b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f13c4673a54c76a1c92018d630f48126349732b0"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "902f708140bef336ba8e0d98b3675c58b9fa2d2b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -1,3 +1,23 @@\n+2015-06-11  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* debug.h (struct gcc_debug_hooks): Add a\n+\tregister_main_translation_unit hook.\n+\t* debug.c (do_nothing_debug_hooks): Provide a function for this\n+\tnew hook.\n+\t* dbxout.c (dbx_debug_hooks): Likewise.\n+\t* sdbout.c (sdb_debug_hooks): Likewise.\n+\t* vmsdbgout.c (vmsdbg_debug_hooks): Likewise.\n+\t* dwarf2out.c (main_translation_unit): New global variable.\n+\t(dwarf2out_register_main_translation_unit): New function\n+\timplementing the new hook.\n+\t(dwarf2_debug_hooks): Assign\n+\tdwarf2out_register_main_translation_unit to this new hook.\n+\t(dwarf2out_init): Associate any main translation unit to\n+\tcomp_unit_die ().\n+\t* c/c-decl.c (pop_scope): Register the main translation unit\n+\tthrough the new debug hook.\n+        * cp/decl.c (cxx_init_decl_processing): Likewise.\n+\n 2015-06-11  Marek Polacek  <polacek@redhat.com>\n \n \t* match.pd ((x & y) ^ (x | y) -> x ^ y): New pattern."}, {"sha": "4eeb13e4844fdf096e920771e8b7b471b10ec965", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -1,3 +1,8 @@\n+2015-06-11  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* gcc-interface/utils.c (get_global_context): Register the main\n+\ttranslation unit through the new debug hook.\n+\n 2015-06-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/misc.c: Remove duplicate include directives."}, {"sha": "655bfa1b8d50ba19b276fda240f3e21024e71295", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -667,7 +667,10 @@ static tree\n get_global_context (void)\n {\n   if (!global_context)\n-    global_context = build_translation_unit_decl (NULL_TREE);\n+    {\n+      global_context = build_translation_unit_decl (NULL_TREE);\n+      debug_hooks->register_main_translation_unit (global_context);\n+    }\n   return global_context;\n }\n "}, {"sha": "3fde22fba94831bccbb9d36b17c811a052c4786a", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -1196,6 +1196,7 @@ pop_scope (void)\n     {\n       tree file_decl = build_translation_unit_decl (NULL_TREE);\n       context = file_decl;\n+      debug_hooks->register_main_translation_unit (file_decl);\n     }\n   else\n     context = block;"}, {"sha": "ffd068aadebe0e6e2bcfcb6984576dfe04ad5850", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -3831,6 +3831,8 @@ cxx_init_decl_processing (void)\n   global_namespace = build_lang_decl (NAMESPACE_DECL, global_scope_name,\n \t\t\t\t      void_type_node);\n   DECL_CONTEXT (global_namespace) = build_translation_unit_decl (NULL_TREE);\n+  debug_hooks->register_main_translation_unit\n+    (DECL_CONTEXT (global_namespace));\n   TREE_PUBLIC (global_namespace) = 1;\n   begin_scope (sk_namespace, global_namespace);\n "}, {"sha": "94fac4273b1686679b942c13549277ee048b32c0", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -380,6 +380,7 @@ const struct gcc_debug_hooks dbx_debug_hooks =\n   debug_nothing_tree,\t\t         /* begin_function */\n #endif\n   debug_nothing_int,\t\t         /* end_function */\n+  debug_nothing_tree,\t\t\t /* register_main_translation_unit */\n   dbxout_function_decl,\n   dbxout_early_global_decl,\t\t /* early_global_decl */\n   dbxout_late_global_decl,\t\t /* late_global_decl */"}, {"sha": "ab92cc870cb4daf0f1e8784d5df25b38b3a82953", "filename": "gcc/debug.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -46,6 +46,7 @@ const struct gcc_debug_hooks do_nothing_debug_hooks =\n   debug_nothing_int_charstar,\t         /* end_epilogue */\n   debug_nothing_tree,\t\t         /* begin_function */\n   debug_nothing_int,\t\t         /* end_function */\n+  debug_nothing_tree,\t\t         /* register_main_translation_unit */\n   debug_nothing_tree,\t\t         /* function_decl */\n   debug_nothing_tree,\t         \t /* early_global_decl */\n   debug_nothing_tree,\t         \t /* late_global_decl */"}, {"sha": "269c4d83f171da31a124e771e7f2bb6f86775c7a", "filename": "gcc/debug.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -89,6 +89,10 @@ struct gcc_debug_hooks\n   /* Record end of function.  LINE is highest line number in function.  */\n   void (* end_function) (unsigned int line);\n \n+  /* Register UNIT as the main translation unit.  Called from front-ends when\n+     they create their main translation unit.  */\n+  void (* register_main_translation_unit) (tree);\n+\n   /* Debug information for a function DECL.  This might include the\n      function name (a symbol), its parameters, and the block that\n      makes up the function's body, and the local variables of the"}, {"sha": "8a36fe8db355b9f151415f7031a53e6af1248b54", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -2446,6 +2446,7 @@ static void dwarf2out_abstract_function (tree);\n static void dwarf2out_var_location (rtx_insn *);\n static void dwarf2out_begin_function (tree);\n static void dwarf2out_end_function (unsigned int);\n+static void dwarf2out_register_main_translation_unit (tree unit);\n static void dwarf2out_set_name (tree, tree);\n \n /* The debug hooks structure.  */\n@@ -2475,6 +2476,7 @@ const struct gcc_debug_hooks dwarf2_debug_hooks =\n   dwarf2out_end_epilogue,\n   dwarf2out_begin_function,\n   dwarf2out_end_function,\t/* end_function */\n+  dwarf2out_register_main_translation_unit,\n   dwarf2out_function_decl,\t/* function_decl */\n   dwarf2out_early_global_decl,\n   dwarf2out_late_global_decl,\n@@ -22505,6 +22507,26 @@ dwarf2out_end_function (unsigned int)\n   maybe_at_text_label_p = false;\n }\n \n+/* Temporary holder for dwarf2out_register_main_translation_unit.  Used to let\n+   front-ends register a translation unit even before dwarf2out_init is\n+   called.  */\n+static tree main_translation_unit = NULL_TREE;\n+\n+/* Hook called by front-ends after they built their main translation unit.\n+   Associate comp_unit_die to UNIT.  */\n+\n+static void\n+dwarf2out_register_main_translation_unit (tree unit)\n+{\n+  gcc_assert (TREE_CODE (unit) == TRANSLATION_UNIT_DECL\n+\t      && main_translation_unit == NULL_TREE);\n+  main_translation_unit = unit;\n+  /* If dwarf2out_init has not been called yet, it will perform the association\n+     itself looking at main_translation_unit.  */\n+  if (decl_die_table != NULL)\n+    equate_decl_number_to_die (unit, comp_unit_die ());\n+}\n+\n /* Add OPCODE+VAL as an entry at the end of the opcode array in TABLE.  */\n \n static void\n@@ -23242,6 +23264,11 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n   /* Make sure the line number table for .text always exists.  */\n   text_section_line_info = new_line_info_table ();\n   text_section_line_info->end_label = text_end_label;\n+\n+  /* If front-ends already registered a main translation unit but we were not\n+     ready to perform the association, do this now.  */\n+  if (main_translation_unit != NULL_TREE)\n+    equate_decl_number_to_die (main_translation_unit, comp_unit_die ());\n }\n \n /* Called before compile () starts outputtting functions, variables"}, {"sha": "57a9997ad90bdb784a0ce97058bf11ee836ecd73", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -1,3 +1,8 @@\n+2015-06-11  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* f95-lang.c (gfc_create_decls): Register the main translation unit\n+\tthrough the new debug hook.\n+\n 2015-06-08  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* convert.c : Adjust include files."}, {"sha": "2c055f59d3d950abd0e4e52d1302d8ce72aebe86", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -204,6 +204,7 @@ gfc_create_decls (void)\n \n   /* Build our translation-unit decl.  */\n   current_translation_unit = build_translation_unit_decl (NULL_TREE);\n+  debug_hooks->register_main_translation_unit (current_translation_unit);\n }\n \n "}, {"sha": "033886a675e8ba3635a35c856b1cb998ea831c1b", "filename": "gcc/sdbout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -296,6 +296,7 @@ const struct gcc_debug_hooks sdb_debug_hooks =\n   sdbout_end_epilogue,\t\t         /* end_epilogue */\n   sdbout_begin_function,\t         /* begin_function */\n   sdbout_end_function,\t\t         /* end_function */\n+  debug_nothing_tree,\t\t         /* register_main_translation_unit */\n   debug_nothing_tree,\t\t         /* function_decl */\n   sdbout_early_global_decl,\t\t /* early_global_decl */\n   sdbout_late_global_decl,\t\t /* late_global_decl */"}, {"sha": "8c917e07d7975ffec9c96c0cca69ca378cc2d5e0", "filename": "gcc/vmsdbgout.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fvmsdbgout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/881a5e608a945bebcfbefcf8c521a2e481610789/gcc%2Fvmsdbgout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvmsdbgout.c?ref=881a5e608a945bebcfbefcf8c521a2e481610789", "patch": "@@ -194,6 +194,7 @@ const struct gcc_debug_hooks vmsdbg_debug_hooks\n    vmsdbgout_end_epilogue,\n    vmsdbgout_begin_function,\n    vmsdbgout_end_function,\n+   debug_nothing_tree,\t\t  /* register_main_translation_unit */\n    vmsdbgout_function_decl,\n    vmsdbgout_early_global_decl,\n    vmsdbgout_late_global_decl,"}]}