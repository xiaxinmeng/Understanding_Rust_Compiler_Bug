{"sha": "8182dc46dcab34bf325d0cb13b0c8b3617124a0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE4MmRjNDZkY2FiMzRiZjMyNWQwY2IxM2IwYzhiMzYxNzEyNGEwYg==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-03-11T14:37:09Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-03-11T14:37:09Z"}, "message": "Add AUTOMATIC to list of unsupported extensions\n\nFrom-SVN: r25706", "tree": {"sha": "722f128992c3d0c00db83055b4cea5d308e25995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/722f128992c3d0c00db83055b4cea5d308e25995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8182dc46dcab34bf325d0cb13b0c8b3617124a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8182dc46dcab34bf325d0cb13b0c8b3617124a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8182dc46dcab34bf325d0cb13b0c8b3617124a0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8182dc46dcab34bf325d0cb13b0c8b3617124a0b/comments", "author": null, "committer": null, "parents": [{"sha": "827e80cc8b2870fe81e6c7857ce5d8eb78edc59e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827e80cc8b2870fe81e6c7857ce5d8eb78edc59e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/827e80cc8b2870fe81e6c7857ce5d8eb78edc59e"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "01fd18d5ee1e7e827870a8cb2b1e11d5ce7e4b16", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8182dc46dcab34bf325d0cb13b0c8b3617124a0b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8182dc46dcab34bf325d0cb13b0c8b3617124a0b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=8182dc46dcab34bf325d0cb13b0c8b3617124a0b", "patch": "@@ -1,3 +1,7 @@\n+Thu Mar 11 17:32:55 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* g77.texi: Add AUTOMATIC to list of unsupported extensions.\n+\n Sat Mar  6 02:28:35 1999  Craig Burley  <craig@jcb-sc.com>\n \n \tWarn about non-Y2K-compliant intrinsics:"}, {"sha": "d6d6c570a67efb5f7f105c7971744f2bfb388212", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8182dc46dcab34bf325d0cb13b0c8b3617124a0b/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8182dc46dcab34bf325d0cb13b0c8b3617124a0b/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=8182dc46dcab34bf325d0cb13b0c8b3617124a0b", "patch": "@@ -14,7 +14,7 @@\n @c %**start of header\n @setfilename g77.info\n \n-@set last-up-date 1999-03-06\n+@set last-up-date 1999-03-11\n @set version-g77 0.5.24\n @set email-general egcs@@egcs.cygnus.com\n @set email-bugs egcs-bugs@@egcs.cygnus.com\n@@ -11999,6 +11999,7 @@ GNU Fortran language:\n * Intrinsics in PARAMETER Statements::\n * SELECT CASE on CHARACTER Type::\n * RECURSIVE Keyword::\n+* AUTOMATIC Statement::\n * Popular Non-standard Types::\n * Full Support for Compiler Types::\n * Array Bounds Expressions::\n@@ -12157,6 +12158,30 @@ designed to do recursion.\n All recursive code can be rewritten to not use recursion,\n but the result is not pretty.\n \n+@node AUTOMATIC Statement\n+@subsection @code{AUTOMATIC} Statement\n+@cindex @code{AUTOMATIC} statement\n+@cindex statements, @code{AUTOMATIC}\n+@cindex automatic variables\n+@cindex variables, automatic\n+\n+@code{g77} doesn't support the @code{AUTOMATIC} keyword that\n+@code{f2c} does.\n+\n+It is not yet clear exactly what this statement would achieve.\n+The semantic equivalent would be provided by @code{RECURSIVE}\n+combined with lack of @code{SAVE}.\n+In that sense, perhaps all it would provide is an\n+overriding of an unadorned (blanket) @code{SAVE} statement\n+for specific variables.\n+\n+It might also serve as a hint to the compiler that placing\n+even a very large array on the stack is acceptable.\n+\n+Perhaps it should disallow @code{DATA}\n+or other specification of any initial values\n+for affected variables as well.\n+\n @node Increasing Precision/Range\n @subsection Increasing Precision/Range\n @cindex -r8"}]}