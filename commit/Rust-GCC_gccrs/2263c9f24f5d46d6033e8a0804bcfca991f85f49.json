{"sha": "2263c9f24f5d46d6033e8a0804bcfca991f85f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2M2M5ZjI0ZjVkNDZkNjAzM2U4YTA4MDRiY2ZjYTk5MWY4NWY0OQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-02-22T10:49:43Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-02-22T10:49:43Z"}, "message": "[C, C++] Use correct location information for OpenACC shape and simple clauses\n\n\tgcc/c/\n\t* c-parser.c (c_parser_oacc_shape_clause): Add loc formal\n\tparameter.  Adjust all users.\n\t(c_parser_oacc_simple_clause): Replace parser with loc formal\n\tparameter.  Adjust all users.\n\tgcc/cp/\n\t* parser.c (cp_parser_oacc_simple_clause): Remove parser formal\n\tparameter, move loc formal parameter to the front.  Adjust all\n\tusers.\n\t(cp_parser_oacc_shape_clause): Add loc formal parameter.  Adjust\n\tall users.\n\nFrom-SVN: r269102", "tree": {"sha": "f330c0245b5f793d1ca2b2c26de5e55977735a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f330c0245b5f793d1ca2b2c26de5e55977735a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2263c9f24f5d46d6033e8a0804bcfca991f85f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2263c9f24f5d46d6033e8a0804bcfca991f85f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2263c9f24f5d46d6033e8a0804bcfca991f85f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2263c9f24f5d46d6033e8a0804bcfca991f85f49/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81a5f36d669aeea5333de16d2a3d6d1ff60ca842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a5f36d669aeea5333de16d2a3d6d1ff60ca842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a5f36d669aeea5333de16d2a3d6d1ff60ca842"}], "stats": {"total": 88, "additions": 52, "deletions": 36}, "files": [{"sha": "6b26ca0f9b3f99bc9dfcbcdf9a6c4ade45b5c374", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=2263c9f24f5d46d6033e8a0804bcfca991f85f49", "patch": "@@ -1,3 +1,10 @@\n+2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_oacc_shape_clause): Add loc formal\n+\tparameter.  Adjust all users.\n+\t(c_parser_oacc_simple_clause): Replace parser with loc formal\n+\tparameter.  Adjust all users.\n+\n 2019-02-19  Chung-Lin Tang <cltang@codesourcery.com>\n \n \tPR c/87924"}, {"sha": "22c7416ac94e62974661ec0e1456c4bee9a2e633", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=2263c9f24f5d46d6033e8a0804bcfca991f85f49", "patch": "@@ -13159,12 +13159,12 @@ c_parser_oacc_single_int_clause (c_parser *parser, omp_clause_code code,\n */\n \n static tree\n-c_parser_oacc_shape_clause (c_parser *parser, omp_clause_code kind,\n+c_parser_oacc_shape_clause (c_parser *parser, location_t loc,\n+\t\t\t    omp_clause_code kind,\n \t\t\t    const char *str, tree list)\n {\n   const char *id = \"num\";\n   tree ops[2] = { NULL_TREE, NULL_TREE }, c;\n-  location_t loc = c_parser_peek_token (parser)->location;\n \n   if (kind == OMP_CLAUSE_VECTOR)\n     id = \"length\";\n@@ -13296,12 +13296,12 @@ c_parser_oacc_shape_clause (c_parser *parser, omp_clause_code kind,\n    seq */\n \n static tree\n-c_parser_oacc_simple_clause (c_parser *parser, enum omp_clause_code code,\n+c_parser_oacc_simple_clause (location_t loc, enum omp_clause_code code,\n \t\t\t     tree list)\n {\n   check_no_duplicate_clause (list, code, omp_clause_code_name[code]);\n \n-  tree c = build_omp_clause (c_parser_peek_token (parser)->location, code);\n+  tree c = build_omp_clause (loc, code);\n   OMP_CLAUSE_CHAIN (c) = list;\n \n   return c;\n@@ -14807,8 +14807,8 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  c_name = \"async\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_AUTO:\n-\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_AUTO,\n-\t\t\t\t\t\tclauses);\n+\t  clauses = c_parser_oacc_simple_clause (here, OMP_CLAUSE_AUTO,\n+\t\t\t\t\t\t clauses);\n \t  c_name = \"auto\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_COLLAPSE:\n@@ -14852,7 +14852,7 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  c_name = \"device_resident\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_FINALIZE:\n-\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_FINALIZE,\n+\t  clauses = c_parser_oacc_simple_clause (here, OMP_CLAUSE_FINALIZE,\n \t\t\t\t\t\t clauses);\n \t  c_name = \"finalize\";\n \t  break;\n@@ -14862,7 +14862,7 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_GANG:\n \t  c_name = \"gang\";\n-\t  clauses = c_parser_oacc_shape_clause (parser, OMP_CLAUSE_GANG,\n+\t  clauses = c_parser_oacc_shape_clause (parser, here, OMP_CLAUSE_GANG,\n \t\t\t\t\t\tc_name, clauses);\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_HOST:\n@@ -14874,13 +14874,13 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  c_name = \"if\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_IF_PRESENT:\n-\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_IF_PRESENT,\n+\t  clauses = c_parser_oacc_simple_clause (here, OMP_CLAUSE_IF_PRESENT,\n \t\t\t\t\t\t clauses);\n \t  c_name = \"if_present\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_INDEPENDENT:\n-\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_INDEPENDENT,\n-\t\t\t\t\t\tclauses);\n+\t  clauses = c_parser_oacc_simple_clause (here, OMP_CLAUSE_INDEPENDENT,\n+\t\t\t\t\t\t clauses);\n \t  c_name = \"independent\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_LINK:\n@@ -14914,7 +14914,7 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  c_name = \"reduction\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_SEQ:\n-\t  clauses = c_parser_oacc_simple_clause (parser, OMP_CLAUSE_SEQ,\n+\t  clauses = c_parser_oacc_simple_clause (here, OMP_CLAUSE_SEQ,\n \t\t\t\t\t\t clauses);\n \t  c_name = \"seq\";\n \t  break;\n@@ -14928,7 +14928,7 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_VECTOR:\n \t  c_name = \"vector\";\n-\t  clauses = c_parser_oacc_shape_clause (parser, OMP_CLAUSE_VECTOR,\n+\t  clauses = c_parser_oacc_shape_clause (parser, here, OMP_CLAUSE_VECTOR,\n \t\t\t\t\t\tc_name,\tclauses);\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_VECTOR_LENGTH:\n@@ -14943,7 +14943,7 @@ c_parser_oacc_all_clauses (c_parser *parser, omp_clause_mask mask,\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_WORKER:\n \t  c_name = \"worker\";\n-\t  clauses = c_parser_oacc_shape_clause (parser, OMP_CLAUSE_WORKER,\n+\t  clauses = c_parser_oacc_shape_clause (parser, here, OMP_CLAUSE_WORKER,\n \t\t\t\t\t\tc_name, clauses);\n \t  break;\n \tdefault:"}, {"sha": "0858646d19e3280ecf6536810d1b33c39e4336c3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2263c9f24f5d46d6033e8a0804bcfca991f85f49", "patch": "@@ -1,3 +1,11 @@\n+2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* parser.c (cp_parser_oacc_simple_clause): Remove parser formal\n+\tparameter, move loc formal parameter to the front.  Adjust all\n+\tusers.\n+\t(cp_parser_oacc_shape_clause): Add loc formal parameter.  Adjust\n+\tall users.\n+\n 2019-02-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/87685 - generic lambda 'this' capture error."}, {"sha": "545047c91af247930f85692c52422238f166f265", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2263c9f24f5d46d6033e8a0804bcfca991f85f49/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2263c9f24f5d46d6033e8a0804bcfca991f85f49", "patch": "@@ -32595,13 +32595,14 @@ cp_parser_oacc_data_clause_deviceptr (cp_parser *parser, tree list)\n    seq */\n \n static tree\n-cp_parser_oacc_simple_clause (cp_parser * /* parser  */,\n-\t\t\t      enum omp_clause_code code,\n-\t\t\t      tree list, location_t location)\n+cp_parser_oacc_simple_clause (location_t loc, enum omp_clause_code code,\n+\t\t\t      tree list)\n {\n-  check_no_duplicate_clause (list, code, omp_clause_code_name[code], location);\n-  tree c = build_omp_clause (location, code);\n+  check_no_duplicate_clause (list, code, omp_clause_code_name[code], loc);\n+\n+  tree c = build_omp_clause (loc, code);\n   OMP_CLAUSE_CHAIN (c) = list;\n+\n   return c;\n }\n \n@@ -32657,13 +32658,13 @@ cp_parser_oacc_single_int_clause (cp_parser *parser, omp_clause_code code,\n */\n \n static tree\n-cp_parser_oacc_shape_clause (cp_parser *parser, omp_clause_code kind,\n+cp_parser_oacc_shape_clause (cp_parser *parser, location_t loc,\n+\t\t\t     omp_clause_code kind,\n \t\t\t     const char *str, tree list)\n {\n   const char *id = \"num\";\n   cp_lexer *lexer = parser->lexer;\n   tree ops[2] = { NULL_TREE, NULL_TREE }, c;\n-  location_t loc = cp_lexer_peek_token (lexer)->location;\n \n   if (kind == OMP_CLAUSE_VECTOR)\n     id = \"length\";\n@@ -34884,8 +34885,8 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  c_name = \"async\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_AUTO:\n-\t  clauses = cp_parser_oacc_simple_clause (parser, OMP_CLAUSE_AUTO,\n-\t\t\t\t\t\t clauses, here);\n+\t  clauses = cp_parser_oacc_simple_clause (here, OMP_CLAUSE_AUTO,\n+\t\t\t\t\t\t  clauses);\n \t  c_name = \"auto\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_COLLAPSE:\n@@ -34929,8 +34930,8 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  c_name = \"device_resident\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_FINALIZE:\n-\t  clauses = cp_parser_oacc_simple_clause (parser, OMP_CLAUSE_FINALIZE,\n-\t\t\t\t\t\t  clauses, here);\n+\t  clauses = cp_parser_oacc_simple_clause (here, OMP_CLAUSE_FINALIZE,\n+\t\t\t\t\t\t  clauses);\n \t  c_name = \"finalize\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_FIRSTPRIVATE:\n@@ -34940,7 +34941,7 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_GANG:\n \t  c_name = \"gang\";\n-\t  clauses = cp_parser_oacc_shape_clause (parser, OMP_CLAUSE_GANG,\n+\t  clauses = cp_parser_oacc_shape_clause (parser, here, OMP_CLAUSE_GANG,\n \t\t\t\t\t\t c_name, clauses);\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_HOST:\n@@ -34952,15 +34953,13 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  c_name = \"if\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_IF_PRESENT:\n-\t  clauses = cp_parser_oacc_simple_clause (parser,\n-\t\t\t\t\t\t  OMP_CLAUSE_IF_PRESENT,\n-\t\t\t\t\t\t  clauses, here);\n+\t  clauses = cp_parser_oacc_simple_clause (here, OMP_CLAUSE_IF_PRESENT,\n+\t\t\t\t\t\t  clauses);\n \t  c_name = \"if_present\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_INDEPENDENT:\n-\t  clauses = cp_parser_oacc_simple_clause (parser,\n-\t\t\t\t\t\t  OMP_CLAUSE_INDEPENDENT,\n-\t\t\t\t\t\t  clauses, here);\n+\t  clauses = cp_parser_oacc_simple_clause (here, OMP_CLAUSE_INDEPENDENT,\n+\t\t\t\t\t\t  clauses);\n \t  c_name = \"independent\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_LINK:\n@@ -34995,8 +34994,8 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  c_name = \"reduction\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_SEQ:\n-\t  clauses = cp_parser_oacc_simple_clause (parser, OMP_CLAUSE_SEQ,\n-\t\t\t\t\t\t clauses, here);\n+\t  clauses = cp_parser_oacc_simple_clause (here, OMP_CLAUSE_SEQ,\n+\t\t\t\t\t\t  clauses);\n \t  c_name = \"seq\";\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_TILE:\n@@ -35010,7 +35009,8 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_VECTOR:\n \t  c_name = \"vector\";\n-\t  clauses = cp_parser_oacc_shape_clause (parser, OMP_CLAUSE_VECTOR,\n+\t  clauses = cp_parser_oacc_shape_clause (parser, here,\n+\t\t\t\t\t\t OMP_CLAUSE_VECTOR,\n \t\t\t\t\t\t c_name, clauses);\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_VECTOR_LENGTH:\n@@ -35025,7 +35025,8 @@ cp_parser_oacc_all_clauses (cp_parser *parser, omp_clause_mask mask,\n \t  break;\n \tcase PRAGMA_OACC_CLAUSE_WORKER:\n \t  c_name = \"worker\";\n-\t  clauses = cp_parser_oacc_shape_clause (parser, OMP_CLAUSE_WORKER,\n+\t  clauses = cp_parser_oacc_shape_clause (parser, here,\n+\t\t\t\t\t\t OMP_CLAUSE_WORKER,\n \t\t\t\t\t\t c_name, clauses);\n \t  break;\n \tdefault:"}]}