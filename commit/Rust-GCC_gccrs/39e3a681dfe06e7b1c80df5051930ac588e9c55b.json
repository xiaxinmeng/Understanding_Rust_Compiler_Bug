{"sha": "39e3a681dfe06e7b1c80df5051930ac588e9c55b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllM2E2ODFkZmUwNmU3YjFjODBkZjUwNTE5MzBhYzU4OGU5YzU1Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-08-06T15:36:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-08-06T15:36:40Z"}, "message": "i386.c (x86_field_alignment): Apply min for all MODE_INT and MODE_CLASS_INT modes.\n\n\t* config/i386/i386.c (x86_field_alignment): Apply min for all MODE_INT\n\tand MODE_CLASS_INT modes.\n\n\t* g++.dg/abi/bitfield3.C: New test.\n\nFrom-SVN: r56072", "tree": {"sha": "8dfb24299d0ff2af9f2ae136e568ab51bac236c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dfb24299d0ff2af9f2ae136e568ab51bac236c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39e3a681dfe06e7b1c80df5051930ac588e9c55b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e3a681dfe06e7b1c80df5051930ac588e9c55b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e3a681dfe06e7b1c80df5051930ac588e9c55b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e3a681dfe06e7b1c80df5051930ac588e9c55b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "609a87f3b342bcda458f73d4de4a463f32eb3483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/609a87f3b342bcda458f73d4de4a463f32eb3483", "html_url": "https://github.com/Rust-GCC/gccrs/commit/609a87f3b342bcda458f73d4de4a463f32eb3483"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "f609be35ccc281a80c2a11e2a4e3bb9ebf01bb62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39e3a681dfe06e7b1c80df5051930ac588e9c55b", "patch": "@@ -1,3 +1,9 @@\n+2002-08-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (x86_field_alignment): Don't check\n+\tTARGET_ALIGN_DOUBLE for the second time.\n+\tApply min for all MODE_INT and MODE_CLASS_INT modes.\n+\n 2002-08-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config.gcc (*-*-linux*): Default to --enable-threads=posix if no"}, {"sha": "ae2fe990db3086f13ddb3b27f0aa1d6fe2887b2e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=39e3a681dfe06e7b1c80df5051930ac588e9c55b", "patch": "@@ -13822,7 +13822,9 @@ x86_field_alignment (field, computed)\n     return computed;\n   mode = TYPE_MODE (TREE_CODE (TREE_TYPE (field)) == ARRAY_TYPE\n \t\t    ? get_inner_array_type (field) : TREE_TYPE (field));\n-  if (mode == DFmode || mode == DCmode || mode == DImode || mode == CDImode)\n+  if (mode == DFmode || mode == DCmode\n+      || GET_MODE_CLASS (mode) == MODE_INT\n+      || GET_MODE_CLASS (mode) == MODE_COMPLEX_INT)\n     return MIN (32, computed);\n   return computed;\n }"}, {"sha": "016152af1d1387b83977a36a541c45fb48c8b92d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39e3a681dfe06e7b1c80df5051930ac588e9c55b", "patch": "@@ -1,3 +1,7 @@\n+2002-08-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/abi/bitfield3.C: New test.\n+\n 2002-08-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* lib/gcov.exp: Tweak expected line formats."}, {"sha": "1e599355f6976de33807888632af2f16ba92d8f7", "filename": "gcc/testsuite/g++.dg/abi/bitfield3.C", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e3a681dfe06e7b1c80df5051930ac588e9c55b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C?ref=39e3a681dfe06e7b1c80df5051930ac588e9c55b", "patch": "@@ -0,0 +1,80 @@\n+// Test for oversized bitfield alignment in structs on IA-32\n+// { dg-do run { target i?86-*-* } }\n+// { dg-options \"-O2\" }\n+\n+struct A\n+{\n+  char a;\n+  int b : 224;\t// { dg-warning \"exceeds its type\" \"\" }\n+  char c;\n+} a, a4[4];\n+\n+struct B\n+{\n+  char d;\n+  A e;\n+  char f;\n+} b;\n+\n+struct C\n+{\n+  char g;\n+  long long h : 64;\n+  char i;\n+} c, c4[4];\n+\n+struct D\n+{\n+  char j;\n+  C k;\n+  char l;\n+} d;\n+\n+struct E\n+{\n+  char m;\n+  long long n : 160;\t// { dg-warning \"exceeds its type\" \"\" }\n+  char o;\n+} e, e4[4];\n+\n+struct F\n+{\n+  char p;\n+  E q;\n+  char r;\n+} f;\n+\n+int main (void)\n+{\n+  if (&a.c - &a.a != 32)\n+    return 1;\n+  if (sizeof (a) != 36)\n+    return 2;\n+  if (sizeof (a4) != 4 * 36)\n+    return 3;\n+  if (sizeof (b) != 2 * 4 + 36)\n+    return 4;\n+  if (__alignof__ (b.e) != 4)\n+    return 5;\n+  if (&c.i - &c.g != 16)\n+    return 6;\n+  if (sizeof (c) != 24)\n+    return 7;\n+  if (sizeof (c4) != 4 * 24)\n+    return 8;\n+  if (sizeof (d) != 2 * 8 + 24)\n+    return 9;\n+  if (__alignof__ (d.k) != 8)\n+    return 10;\n+  if (&e.o - &e.m != 28)\n+    return 11;\n+  if (sizeof (e) != 32)\n+    return 12;\n+  if (sizeof (e4) != 4 * 32)\n+    return 13;\n+  if (sizeof (f) != 2 * 8 + 32)\n+    return 14;\n+  if (__alignof__ (f.q) != 8)\n+    return 15;\n+  return 0;\n+}"}]}