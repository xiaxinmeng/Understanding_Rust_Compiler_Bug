{"sha": "e2346a33b05871fc065815d4cfd531dfa0195507", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIzNDZhMzNiMDU4NzFmYzA2NTgxNWQ0Y2ZkNTMxZGZhMDE5NTUwNw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-01-15T02:54:27Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-01-15T02:54:27Z"}, "message": "Fix setting of DECL_CONTEXT in pushdecl (PR c/93072).\n\nBug 93072 is a case where the C front end (a) wrongly interprets an\ninline declaration at block scope as indicating that DECL_CONTEXT\nshould be set for an inline function and (b) this results in an ICE.\nThis is a regression resulting from a previous fix of mine for other\nbugs involving such declarations being wrongly interpreted elsewhere\nas nested function declarations.  The fix is similar to the previous\nfix: use TREE_PUBLIC instead of DECL_EXTERNAL in another place as the\nrelevant test to determine whether to set DECL_CONTEXT.  (When a\nvariable reaches the code in question in pushdecl, the two are\nequivalent.)\n\nBootstrapped with no regressions for x86_64-pc-linux-gnu.\n\n\tPR c/93072\ngcc/c:\n\t* c-decl.c (pushdecl): Use TREE_PUBLIC, not DECL_EXTERNAL, to\n\tdetermine whether to set DECL_CONTEXT.\n\ngcc/testsuite:\n\t* gcc.dg/inline-42.c, gcc.dg/inline-43.c: New tests.", "tree": {"sha": "68cb8ed2cb75abd6f81449339a0c2f4a11bb1684", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68cb8ed2cb75abd6f81449339a0c2f4a11bb1684"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2346a33b05871fc065815d4cfd531dfa0195507", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2346a33b05871fc065815d4cfd531dfa0195507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2346a33b05871fc065815d4cfd531dfa0195507", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2346a33b05871fc065815d4cfd531dfa0195507/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab7c7b46c35ed1be68d4c020a2f20ee96f68b64b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7c7b46c35ed1be68d4c020a2f20ee96f68b64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab7c7b46c35ed1be68d4c020a2f20ee96f68b64b"}], "stats": {"total": 113, "additions": 112, "deletions": 1}, "files": [{"sha": "b702b39b95aee48e8b3724cfeafa16c7484781a9", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=e2346a33b05871fc065815d4cfd531dfa0195507", "patch": "@@ -1,3 +1,9 @@\n+2020-01-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/93072\n+\t* c-decl.c (pushdecl): Use TREE_PUBLIC, not DECL_EXTERNAL, to\n+\tdetermine whether to set DECL_CONTEXT.\n+\n 2020-01-13  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/93241"}, {"sha": "8281af7307aefaaa83cb47c6995ff040dc720ff4", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=e2346a33b05871fc065815d4cfd531dfa0195507", "patch": "@@ -3048,7 +3048,7 @@ pushdecl (tree x)\n      unless they have initializers (which generate code).  */\n   if (current_function_decl\n       && (!VAR_OR_FUNCTION_DECL_P (x)\n-\t  || DECL_INITIAL (x) || !DECL_EXTERNAL (x)))\n+\t  || DECL_INITIAL (x) || !TREE_PUBLIC (x)))\n     DECL_CONTEXT (x) = current_function_decl;\n \n   /* Anonymous decls are just inserted in the scope.  */"}, {"sha": "879d7b1d4a31c0afcfa584b1855f895ece40e447", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2346a33b05871fc065815d4cfd531dfa0195507", "patch": "@@ -1,3 +1,8 @@\n+2020-01-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/93072\n+\t* gcc.dg/inline-42.c, gcc.dg/inline-43.c: New tests.\n+\n 2020-01-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/analyzer/signal-6.c: New test."}, {"sha": "f5ccea8f3cf1e7d62bbaca784b35ccfa9754ad41", "filename": "gcc/testsuite/gcc.dg/inline-42.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Ftestsuite%2Fgcc.dg%2Finline-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Ftestsuite%2Fgcc.dg%2Finline-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-42.c?ref=e2346a33b05871fc065815d4cfd531dfa0195507", "patch": "@@ -0,0 +1,50 @@\n+/* Test inline functions declared in inner scopes.  Bug 93072.  */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void\n+inline_1 (void)\n+{\n+}\n+\n+void\n+inline_2 (void)\n+{\n+}\n+\n+static void\n+inline_static_1 (void)\n+{\n+}\n+\n+static void\n+inline_static_2 (void)\n+{\n+}\n+\n+static void\n+test (void)\n+{\n+  inline void inline_1 (void);\n+  if (inline_1 == 0) ;\n+  extern inline void inline_2 (void);\n+  if (inline_2 == 0) ;\n+  inline void inline_3 (void);\n+  if (inline_3 == 0) ;\n+  extern inline void inline_4 (void);\n+  if (inline_4 == 0) ;\n+  inline void inline_static_1 (void);\n+  if (inline_static_1 == 0) ;\n+  extern inline void inline_static_2 (void);\n+  if (inline_static_2 == 0) ;\n+}\n+\n+void\n+inline_3 (void)\n+{\n+}\n+\n+void\n+inline_4 (void)\n+{\n+}"}, {"sha": "87b24450384ce638ed10622548b8214ee9d0e264", "filename": "gcc/testsuite/gcc.dg/inline-43.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Ftestsuite%2Fgcc.dg%2Finline-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2346a33b05871fc065815d4cfd531dfa0195507/gcc%2Ftestsuite%2Fgcc.dg%2Finline-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finline-43.c?ref=e2346a33b05871fc065815d4cfd531dfa0195507", "patch": "@@ -0,0 +1,50 @@\n+/* Test inline functions declared in inner scopes.  Bug 93072.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-fgnu89-inline\" } */\n+\n+void\n+inline_1 (void)\n+{\n+}\n+\n+void\n+inline_2 (void)\n+{\n+}\n+\n+static void\n+inline_static_1 (void)\n+{\n+}\n+\n+static void\n+inline_static_2 (void)\n+{\n+}\n+\n+static void\n+test (void)\n+{\n+  inline void inline_1 (void);\n+  if (inline_1 == 0) ;\n+  extern inline void inline_2 (void);\n+  if (inline_2 == 0) ;\n+  inline void inline_3 (void);\n+  if (inline_3 == 0) ;\n+  extern inline void inline_4 (void);\n+  if (inline_4 == 0) ;\n+  inline void inline_static_1 (void);\n+  if (inline_static_1 == 0) ;\n+  extern inline void inline_static_2 (void);\n+  if (inline_static_2 == 0) ;\n+}\n+\n+void\n+inline_3 (void)\n+{\n+}\n+\n+void\n+inline_4 (void)\n+{\n+}"}]}