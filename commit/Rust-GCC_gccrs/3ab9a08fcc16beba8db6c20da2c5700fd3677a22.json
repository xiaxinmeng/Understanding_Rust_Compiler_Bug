{"sha": "3ab9a08fcc16beba8db6c20da2c5700fd3677a22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FiOWEwOGZjYzE2YmViYThkYjZjMjBkYTJjNTcwMGZkMzY3N2EyMg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2000-11-16T15:19:01Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2000-11-16T15:19:01Z"}, "message": "rtl.c (read_rtx): Provide suitable names for unnamed define_insn and define_insn_and_split...\n\n* rtl.c (read_rtx): Provide suitable names for unnamed\ndefine_insn and define_insn_and_split patterns, based on file\nand line numbers.\n\nFrom-SVN: r37499", "tree": {"sha": "e6c08d191a7b37ea863449df2f5678ff741b0852", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6c08d191a7b37ea863449df2f5678ff741b0852"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ab9a08fcc16beba8db6c20da2c5700fd3677a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab9a08fcc16beba8db6c20da2c5700fd3677a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab9a08fcc16beba8db6c20da2c5700fd3677a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab9a08fcc16beba8db6c20da2c5700fd3677a22/comments", "author": null, "committer": null, "parents": [{"sha": "cdb7167327858bd38a88f22e5f986197ed0f2343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb7167327858bd38a88f22e5f986197ed0f2343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb7167327858bd38a88f22e5f986197ed0f2343"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "7f1cea548edb59e856c724fbeb75bdbc8594b75d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab9a08fcc16beba8db6c20da2c5700fd3677a22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab9a08fcc16beba8db6c20da2c5700fd3677a22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ab9a08fcc16beba8db6c20da2c5700fd3677a22", "patch": "@@ -1,3 +1,9 @@\n+2000-11-16  DJ Delorie  <dj@redhat.com>\n+\n+\t* rtl.c (read_rtx): Provide suitable names for unnamed\n+\tdefine_insn and define_insn_and_split patterns, based on file\n+\tand line numbers.\n+\n 2000-11-15  Neil Booth  <neilb@earthling.net>\n \n         * cpplib.c (start_directive, end_directive): New functions."}, {"sha": "1ad5b3c4b8208d6c0edc4b75fee85285bd7cf50e", "filename": "gcc/rtl.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ab9a08fcc16beba8db6c20da2c5700fd3677a22/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ab9a08fcc16beba8db6c20da2c5700fd3677a22/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=3ab9a08fcc16beba8db6c20da2c5700fd3677a22", "patch": "@@ -1038,6 +1038,7 @@ read_rtx (infile)\n \t{\n \t  int saw_paren = 0;\n \t  register char *stringbuf;\n+\t  int saw_anything = 0;\n \n \t  c = read_skip_spaces (infile);\n \t  if (c == '(')\n@@ -1070,6 +1071,28 @@ read_rtx (infile)\n \t\tbreak;\n \n \t      obstack_1grow (&rtl_obstack, c);\n+\t      saw_anything = 1;\n+\t    }\n+\n+\t  /* For insn patterns, we want to provide a default name\n+\t     based on the file and line, like \"*foo.md:12\", if the\n+\t     given name is blank.  These are only for define_insn and\n+\t     define_insn_and_split, to aid debugging.  */\n+\t  if (!saw_anything\n+\t      && i == 0\n+\t      && (GET_CODE (return_rtx) == DEFINE_INSN\n+\t\t  || GET_CODE (return_rtx) == DEFINE_INSN_AND_SPLIT))\n+\t    {\n+\t      char line_name[20];\n+\t      const char *fn = (read_rtx_filename ? read_rtx_filename : \"rtx\");\n+\t      char *slash;\n+\t      for (slash = fn; *slash; slash ++)\n+\t\tif (*slash == '/' || *slash == '\\\\' || *slash == ':')\n+\t\t  fn = slash + 1;\n+\t      obstack_1grow (&rtl_obstack, '*');\n+\t      obstack_grow (&rtl_obstack, fn, strlen (fn));\n+\t      sprintf (line_name, \":%d\", read_rtx_lineno);\n+\t      obstack_grow (&rtl_obstack, line_name, strlen (line_name));\n \t    }\n \n \t  obstack_1grow (&rtl_obstack, 0);"}]}