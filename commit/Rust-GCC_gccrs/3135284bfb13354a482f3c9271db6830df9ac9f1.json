{"sha": "3135284bfb13354a482f3c9271db6830df9ac9f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzNTI4NGJmYjEzMzU0YTQ4MmYzYzkyNzFkYjY4MzBkZjlhYzlmMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2002-04-11T14:17:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2002-04-11T14:17:56Z"}, "message": "* g++.dg/ext/attrib5.C: New test.\n\nFrom-SVN: r52160", "tree": {"sha": "6115d7c540e4175a16050ebc6d5d3694a3799513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6115d7c540e4175a16050ebc6d5d3694a3799513"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3135284bfb13354a482f3c9271db6830df9ac9f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3135284bfb13354a482f3c9271db6830df9ac9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3135284bfb13354a482f3c9271db6830df9ac9f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3135284bfb13354a482f3c9271db6830df9ac9f1/comments", "author": null, "committer": null, "parents": [{"sha": "d75ff184174b2678007e544e63491b741b940c07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d75ff184174b2678007e544e63491b741b940c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d75ff184174b2678007e544e63491b741b940c07"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "eeb964a92208c2cc83a64d1c2ebd9c35f2105197", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3135284bfb13354a482f3c9271db6830df9ac9f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3135284bfb13354a482f3c9271db6830df9ac9f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3135284bfb13354a482f3c9271db6830df9ac9f1", "patch": "@@ -1,3 +1,7 @@\n+2002-04-11  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* g++.dg/ext/attrib5.C: New test.\n+\n 2002-04-10  Janis Johnson  <janis187@us.ibm.com>\n \n \t* g77.f-torture/execute/6177.f: New test."}, {"sha": "47511934cc9a87660a01ea081f44abeca916e514", "filename": "gcc/testsuite/g++.dg/ext/attrib5.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3135284bfb13354a482f3c9271db6830df9ac9f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3135284bfb13354a482f3c9271db6830df9ac9f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib5.C?ref=3135284bfb13354a482f3c9271db6830df9ac9f1", "patch": "@@ -0,0 +1,27 @@\n+// There were two related problems here, depending on the vintage.  At\n+// one time:\n+//\n+//    typedef struct A { ... } A __attribute__ ((aligned (16)));\n+//\n+// would cause original_types to go into an infinite loop.  At other\n+// times, the attributes applied to an explicit typedef would be lost\n+// (check_b2 would have a negative size).\n+\n+// First check that the declaration is accepted and has an effect.\n+typedef struct A { int i; } A __attribute__ ((aligned (16)));\n+int check_A[__alignof__ (A) >= 16 ? 1 : -1];\n+\n+// Check that the alignment is only applied to the typedef.\n+struct B { int i; };\n+namespace N { typedef B B; };\n+typedef struct B B __attribute__((aligned (16)));\n+N::B b1;\n+B b2;\n+int check_b1[__alignof__ (b1) == __alignof__ (int) ? 1 : -1];\n+int check_b2[__alignof__ (b2) >= 16 ? 1 : -1];\n+\n+// The fix for this case involved a change to lookup_tag.  This \n+// bit just checks against a possible regression.\n+namespace N { struct C; };\n+typedef struct N::C C;\t\t// { dg-error \"previous declaration\" }\n+struct C;\t\t\t// { dg-error \"conflicting types\" }"}]}