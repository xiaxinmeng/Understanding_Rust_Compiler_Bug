{"sha": "427180d243e562912cc37f09b140a4d8c042ae4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI3MTgwZDI0M2U1NjI5MTJjYzM3ZjA5YjE0MGE0ZDhjMDQyYWU0Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-05-29T18:17:40Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-29T18:17:40Z"}, "message": "re PR fortran/18918 (Eventually support Fortran 2008's coarrays [co-arrays])\n\n2011-05-29  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * interface.c (compare_parameter): Add check for passing coarray\n        to allocatable noncoarray dummy.\n\n2011-05-29  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/18918\n        * gfortran.dg/coarray_24.f90: New.\n\nFrom-SVN: r174411", "tree": {"sha": "58e3db3d3be0f4d93c2a283b0fa80d1b591cddcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58e3db3d3be0f4d93c2a283b0fa80d1b591cddcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/427180d243e562912cc37f09b140a4d8c042ae4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427180d243e562912cc37f09b140a4d8c042ae4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427180d243e562912cc37f09b140a4d8c042ae4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427180d243e562912cc37f09b140a4d8c042ae4c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a5c4899e8f57f09e288043984cc0f4584f17fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5c4899e8f57f09e288043984cc0f4584f17fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5c4899e8f57f09e288043984cc0f4584f17fc4"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "5ffa5f673f9de2b2e0f4bccaa036d4ae83a6c5fd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=427180d243e562912cc37f09b140a4d8c042ae4c", "patch": "@@ -1,3 +1,9 @@\n+2011-05-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* interface.c (compare_parameter): Add check for passing coarray\n+\tto allocatable noncoarray dummy.\n+\n 2011-05-29  Tobias Burnus  <burnus@net-b.de>\n \t    Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "6575fbe1539d5090689502c91413fc9d40895988", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=427180d243e562912cc37f09b140a4d8c042ae4c", "patch": "@@ -1645,6 +1645,24 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n       return 0;\n     }\n \n+  if (formal->attr.allocatable && !formal->attr.codimension\n+      && gfc_expr_attr (actual).codimension)\n+    {\n+      if (formal->attr.intent == INTENT_OUT)\n+\t{\n+\t  if (where)\n+\t    gfc_error (\"Passing coarray at %L to allocatable, noncoarray, \"\n+\t\t       \"INTENT(OUT) dummy argument '%s'\", &actual->where,\n+\t\t       formal->name);\n+\t    return 0;\n+\t}\n+      else if (gfc_option.warn_surprising && where\n+\t       && formal->attr.intent != INTENT_IN)\n+\tgfc_warning (\"Passing coarray at %L to allocatable, noncoarray dummy \"\n+\t\t     \"argument '%s', which is invalid if the allocation status\"\n+\t\t     \" is modified\",  &actual->where, formal->name);\n+    }\n+\n   if (symbol_rank (formal) == actual->rank)\n     return 1;\n "}, {"sha": "c416d1aea3086d4fa1a4cf27e366f87726afb991", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=427180d243e562912cc37f09b140a4d8c042ae4c", "patch": "@@ -1,3 +1,8 @@\n+2011-05-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/18918\n+\t* gfortran.dg/coarray_24.f90: New.\n+\n 2011-05-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "d8d92816d26ec51f732b8b61594d0d037c7d9257", "filename": "gcc/testsuite/gfortran.dg/coarray_24.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427180d243e562912cc37f09b140a4d8c042ae4c/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_24.f90?ref=427180d243e562912cc37f09b140a4d8c042ae4c", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single -Wall\" }\n+!\n+! This program is perfectly valid; however, passing an (allocatable) coarray\n+! as actual argument to a non-coarray allocatable dummy is doubtful as\n+! reallocation is not allowed. Thus, an intent(out) dummy should be always\n+! wrong.\n+!\n+\n+integer, allocatable :: myCaf(:)[:]\n+\n+allocate(myCaf(1)[*])\n+\n+call doubtful_valid(myCaf)  ! { dg-warning \"to allocatable, noncoarray dummy\" }\n+call invalid(myCaf)         ! { dg-error \"to allocatable, noncoarray, INTENT.OUT. dummy\" }\n+contains\n+  subroutine doubtful_valid(x)\n+    integer, allocatable :: x(:)\n+    ! Valid as x's allocation status is not touched.\n+    x(1) = 7\n+  end subroutine doubtful_valid\n+  subroutine invalid(y)\n+    integer, allocatable, intent(out) :: y(:)\n+    allocate (y(1))\n+  end subroutine invalid\n+end"}]}