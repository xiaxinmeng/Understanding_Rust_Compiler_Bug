{"sha": "5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4MDg1MDExYWUwYTBhZWJlNjY1YWI5ZTM2MTVlNWMwZDFjMjA3Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-11T08:24:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-11T08:24:15Z"}, "message": "sse-12.c: Add -msse4a to dg-options.\n\n\t* gcc-target/i386/sse-12.c: Add -msse4a to dg-options.\n\t* gcc-target/i386/sse-13.c: Add -msse4a, -mfma4, -mbmi and -mtbm\n\tto dg-options.\n\t* gcc-target/i386/sse-14.c: Add -mfma4a and -mbmi to dg-options.\n\t* g++.dg/other/i386-2.C: Add -msse4a and -mfma4 to dg-options.\n\t* g++.dg/other/i386-3.C: Ditto.\n\nFrom-SVN: r166596", "tree": {"sha": "e486af5b4bb43a639ee2ada2720b61f8e6f7b0e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e486af5b4bb43a639ee2ada2720b61f8e6f7b0e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/comments", "author": null, "committer": null, "parents": [{"sha": "dcc53f137c4136424445416601f9889d18b3344c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc53f137c4136424445416601f9889d18b3344c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc53f137c4136424445416601f9889d18b3344c"}], "stats": {"total": 54, "additions": 34, "deletions": 20}, "files": [{"sha": "8998070766390e903380e7071124c4c1afb03fba", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "patch": "@@ -1,3 +1,12 @@\n+2010-11-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc-target/i386/sse-12.c: Add -msse4a to dg-options.\n+\t* gcc-target/i386/sse-13.c: Add -msse4a, -mfma4, -mbmi and -mtbm\n+\tto dg-options.\n+\t* gcc-target/i386/sse-14.c: Add -mfma4a and -mbmi to dg-options.\n+\t* g++.dg/other/i386-2.C: Add -msse4a and -mfma4 to dg-options.\n+\t* g++.dg/other/i386-3.C: Ditto.\n+\n 2010-11-10  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/constexpr-46420.C: New.\n@@ -13,7 +22,7 @@\n 2010-11-10  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimize/38669\n-\t* gcc.dg/tree-ssa/pr38699.c\n+\t* gcc.dg/tree-ssa/pr38699.c: New testcase.\n \n 2010-11-10  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "1a445f1b52e0fb4a9cefc48587f0c11f6342a3db", "filename": "gcc/testsuite/g++.dg/other/i386-2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C?ref=5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "patch": "@@ -1,9 +1,9 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -pedantic-errors -march=k8 -m3dnow -mavx -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n+/* { dg-options \"-O -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n \n-/* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, xopintrin.h, abmintrin.h,\n-   bmiintrin.h, tbmintrin.h, lwpintrin.h, popcntintrin.h and mm3dnow.h\n-   are usable with -O -pedantic-errors.  */\n+/* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n+   xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,\n+   popcntintrin.h and mm_malloc.h.h are usable with -O -pedantic-errors.  */\n \n #include <x86intrin.h>\n "}, {"sha": "66eec1422aeb4e4adacceedc8525e6b663f06807", "filename": "gcc/testsuite/g++.dg/other/i386-3.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-3.C?ref=5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "patch": "@@ -1,8 +1,9 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O -fkeep-inline-functions -march=k8 -m3dnow -mavx -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n+/* { dg-options \"-O -fkeep-inline-functions -march=k8 -msse4a -m3dnow -mavx -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n \n-/* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, xopintrin.h, abmintrin.h,\n-   bmiintrin.h, tbmintrin.h, lwpintrin.h, popcntintrin.h and mm3dnow.h\n-   are usable with -O -fkeep-inline-functions.  */\n+/* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n+   xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,\n+   popcntintrin.h and mm_malloc.h are usable with\n+   -O -fkeep-inline-functions.  */\n \n #include <x86intrin.h>"}, {"sha": "4f8aaec6d3a3189703bcfedc31278b4bd6a3f88e", "filename": "gcc/testsuite/gcc.target/i386/sse-12.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-12.c?ref=5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "patch": "@@ -1,9 +1,9 @@\n-/* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, xopintrin.h, mm3dnow.h,\n-   fma4intrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,\n+/* Test that {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h, fma4intrin.h,\n+   xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h, lwpintrin.h,\n    popcntintrin.h and mm_malloc.h are usable\n    with -O -std=c89 -pedantic-errors.  */\n /* { dg-do compile } */\n-/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -m3dnow -mavx -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n+/* { dg-options \"-O -std=c89 -pedantic-errors -march=k8 -msse4a -m3dnow -mavx -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n \n #include <x86intrin.h>\n "}, {"sha": "188b2e6dc087658167bb46b1c5074b2b630ab438", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "patch": "@@ -1,14 +1,16 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -m3dnow -mavx -mxop -maes -mpclmul -mpopcnt -mabm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n+/* { dg-options \"-O2 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n \n #include <mm_malloc.h>\n \n /* Test that the intrinsics compile with optimization.  All of them\n    are defined as inline functions in {,x,e,p,t,s,w,a,b,i}mmintrin.h,\n-   xopintrin.h, abmintrin.h, tbmintrin.h, lwpintrin.h, popcntintrin.h\n-   and mm3dnow.h that reference the proper builtin functions.  Defining\n-   away \"extern\" and \"__inline\" results in all of them being compiled as\n-   proper functions.  */\n+   mm3dnow.h, fma4intrin.h, xopintrin.h, abmintrin.h, bmiintrin.h,\n+   tbmintrin.h, lwpintrin.h, popcntintrin.h and mm_malloc.h that\n+   reference the proper builtin functions.\n+\n+   Defining away \"extern\" and \"__inline\" results in all of them being\n+   compiled as proper functions.  */\n \n #define extern\n #define __inline"}, {"sha": "22ea61f68b4e76e76537aa97adf9c4465b5edf54", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8085011ae0a0aebe665ab9e3615e5c0d1c207c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=5f8085011ae0a0aebe665ab9e3615e5c0d1c207c", "patch": "@@ -1,11 +1,13 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -m3dnow -mavx -mxop -msse4a -maes -mpclmul -mpopcnt -mabm -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n+/* { dg-options \"-O0 -Werror-implicit-function-declaration -march=k8 -msse4a -m3dnow -mavx -mfma4 -mxop -maes -mpclmul -mpopcnt -mabm -mbmi -mtbm -mlwp -mfsgsbase -mrdrnd -mf16c\" } */\n \n #include <mm_malloc.h>\n \n /* Test that the intrinsics compile without optimization.  All of them are\n-   defined as inline functions in {,x,e,p,t,s,w,a}mmintrin.h, xopintrin.h,\n-   lwpintrin.h and mm3dnow.h that reference the proper builtin functions.\n+   defined as inline functions in {,x,e,p,t,s,w,a,b,i}mmintrin.h, mm3dnow.h,\n+   fma4intrin.h, xopintrin.h, abmintrin.h, bmiintrin.h, tbmintrin.h,\n+   lwpintrin.h and mm_malloc.h that reference the proper builtin functions.\n+\n    Defining away \"extern\" and \"__inline\" results in all of them being compiled\n    as proper functions.  */\n "}]}