{"sha": "2db262f29a4b1495885b1f23335b6dc363bf1143", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiMjYyZjI5YTRiMTQ5NTg4NWIxZjIzMzM1YjZkYzM2M2JmMTE0Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-03-11T11:56:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-10T13:35:02Z"}, "message": "[Ada] AI12-0311 New checks for language-defined units\n\n2020-06-10  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* snames.ads-tmpl (Name_Characters_Assertion_Check,\n\tName_Containers_Assertion_Check,\n\tName_Interfaces_Assertion_Check, Name_IO_Assertion_Check,\n\tName_Numerics_Assertion_Check, Name_Strings_Assertion_Check,\n\tName_System_Assertion_Check): New constants.\n\t* types.ads (Characters_Assertion_Check,\n\tContainers_Assertion_Check, Interfaces_Assertion_Check,\n\tIO_Assertion_Check, Numerics_Assertion_Check,\n\tStrings_Assertion_Check, System_Assertion_Check): New constants.\n\t(All_Checks): Update accordingly.", "tree": {"sha": "3d381feca9d32e614254a4bcaa1ba12a3512b3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d381feca9d32e614254a4bcaa1ba12a3512b3a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2db262f29a4b1495885b1f23335b6dc363bf1143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db262f29a4b1495885b1f23335b6dc363bf1143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db262f29a4b1495885b1f23335b6dc363bf1143", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db262f29a4b1495885b1f23335b6dc363bf1143/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8439cae845f2148c2df5aefa120b968ec73dd07e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8439cae845f2148c2df5aefa120b968ec73dd07e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8439cae845f2148c2df5aefa120b968ec73dd07e"}], "stats": {"total": 63, "additions": 39, "deletions": 24}, "files": [{"sha": "a1a7bf7bfcaecf889d12fdbefc0dc324ad77cd8a", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db262f29a4b1495885b1f23335b6dc363bf1143/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db262f29a4b1495885b1f23335b6dc363bf1143/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=2db262f29a4b1495885b1f23335b6dc363bf1143", "patch": "@@ -1206,21 +1206,28 @@ package Snames is\n    Name_Alignment_Check                : constant Name_Id := N + $; -- GNAT\n    Name_Allocation_Check               : constant Name_Id := N + $;\n    Name_Atomic_Synchronization         : constant Name_Id := N + $; -- GNAT\n+   Name_Characters_Assertion_Check     : constant Name_Id := N + $;\n+   Name_Containers_Assertion_Check     : constant Name_Id := N + $;\n    Name_Discriminant_Check             : constant Name_Id := N + $;\n    Name_Division_Check                 : constant Name_Id := N + $;\n    Name_Duplicated_Tag_Check           : constant Name_Id := N + $; -- GNAT\n    Name_Elaboration_Check              : constant Name_Id := N + $;\n    Name_Index_Check                    : constant Name_Id := N + $;\n+   Name_Interfaces_Assertion_Check     : constant Name_Id := N + $;\n+   Name_IO_Assertion_Check             : constant Name_Id := N + $;\n    Name_Length_Check                   : constant Name_Id := N + $;\n+   Name_Numerics_Assertion_Check       : constant Name_Id := N + $;\n    Name_Overflow_Check                 : constant Name_Id := N + $;\n    Name_Predicate_Check                : constant Name_Id := N + $; -- GNAT\n+   Name_Program_Error_Check            : constant Name_Id := N + $;\n    Name_Range_Check                    : constant Name_Id := N + $;\n    Name_Storage_Check                  : constant Name_Id := N + $;\n+   Name_Strings_Assertion_Check        : constant Name_Id := N + $;\n+   Name_System_Assertion_Check         : constant Name_Id := N + $;\n    Name_Tag_Check                      : constant Name_Id := N + $;\n    Name_Validity_Check                 : constant Name_Id := N + $; -- GNAT\n    Name_Container_Checks               : constant Name_Id := N + $; -- GNAT\n    Name_Tampering_Check                : constant Name_Id := N + $; -- GNAT\n-   Name_Program_Error_Check            : constant Name_Id := N + $;\n    Name_Tasking_Check                  : constant Name_Id := N + $;\n    Name_All_Checks                     : constant Name_Id := N + $;\n    Last_Check_Name                     : constant Name_Id := N + $;"}, {"sha": "6a1d94db8b0e4bd47a4364074de4131d992f9286", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db262f29a4b1495885b1f23335b6dc363bf1143/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db262f29a4b1495885b1f23335b6dc363bf1143/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=2db262f29a4b1495885b1f23335b6dc363bf1143", "patch": "@@ -668,32 +668,39 @@ package Types is\n    No_Check_Id : constant := 0;\n    --  Check_Id value used to indicate no check\n \n-   Access_Check           : constant :=  1;\n-   Accessibility_Check    : constant :=  2;\n-   Alignment_Check        : constant :=  3;\n-   Allocation_Check       : constant :=  4;\n-   Atomic_Synchronization : constant :=  5;\n-   Discriminant_Check     : constant :=  6;\n-   Division_Check         : constant :=  7;\n-   Duplicated_Tag_Check   : constant :=  8;\n-   Elaboration_Check      : constant :=  9;\n-   Index_Check            : constant := 10;\n-   Length_Check           : constant := 11;\n-   Overflow_Check         : constant := 12;\n-   Predicate_Check        : constant := 13;\n-   Range_Check            : constant := 14;\n-   Storage_Check          : constant := 15;\n-   Tag_Check              : constant := 16;\n-   Validity_Check         : constant := 17;\n-   Container_Checks       : constant := 18;\n-   Tampering_Check        : constant := 19;\n-   Program_Error_Check    : constant := 20;\n-   Tasking_Check          : constant := 21;\n+   Access_Check               : constant :=  1;\n+   Accessibility_Check        : constant :=  2;\n+   Alignment_Check            : constant :=  3;\n+   Allocation_Check           : constant :=  4;\n+   Atomic_Synchronization     : constant :=  5;\n+   Characters_Assertion_Check : constant :=  6;\n+   Containers_Assertion_Check : constant :=  7;\n+   Discriminant_Check         : constant :=  8;\n+   Division_Check             : constant :=  9;\n+   Duplicated_Tag_Check       : constant := 10;\n+   Elaboration_Check          : constant := 11;\n+   Index_Check                : constant := 12;\n+   Interfaces_Assertion_Check : constant := 13;\n+   IO_Assertion_Check         : constant := 14;\n+   Length_Check               : constant := 15;\n+   Numerics_Assertion_Check   : constant := 16;\n+   Overflow_Check             : constant := 17;\n+   Predicate_Check            : constant := 18;\n+   Program_Error_Check        : constant := 19;\n+   Range_Check                : constant := 20;\n+   Storage_Check              : constant := 21;\n+   Strings_Assertion_Check    : constant := 22;\n+   System_Assertion_Check     : constant := 23;\n+   Tag_Check                  : constant := 24;\n+   Validity_Check             : constant := 25;\n+   Container_Checks           : constant := 26;\n+   Tampering_Check            : constant := 27;\n+   Tasking_Check              : constant := 28;\n    --  Values used to represent individual predefined checks (including the\n    --  setting of Atomic_Synchronization, which is implemented internally using\n    --  a \"check\" whose name is Atomic_Synchronization).\n \n-   All_Checks : constant := 22;\n+   All_Checks : constant := 29;\n    --  Value used to represent All_Checks value\n \n    subtype Predefined_Check_Id is Check_Id range 1 .. All_Checks;\n@@ -717,7 +724,8 @@ package Types is\n    --  To add a new check type to GNAT, the following steps are required:\n \n    --    1.  Add an entry to Snames spec for the new name\n-   --    2.  Add an entry to the definition of Check_Id above\n+   --    2.  Add an entry to the definition of Check_Id above (very important:\n+   --        these definitions should be in the same order in Snames and here)\n    --    3.  Add a new function to Checks to handle the new check test\n    --    4.  Add a new Do_xxx_Check flag to Sinfo (if required)\n    --    5.  Add appropriate checks for the new test"}]}