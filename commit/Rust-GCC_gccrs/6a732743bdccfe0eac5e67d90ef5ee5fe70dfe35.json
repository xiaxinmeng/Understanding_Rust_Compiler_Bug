{"sha": "6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3MzI3NDNiZGNjZmUwZWFjNWU2N2Q5MGVmNWVlNWZlNzBkZmUzNQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2008-03-03T11:51:36Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2008-03-03T11:51:36Z"}, "message": "tree-scalar-evolution.c (instantiate_parameters_1): An SSA_NAME defined in a loop at depth 0 is invariant.\n\n\t* tree-scalar-evolution.c (instantiate_parameters_1): An SSA_NAME\n\tdefined in a loop at depth 0 is invariant.\n\t* tree-chrec.c (evolution_function_is_invariant_rec_p): Ditto.\n\t* tree-ssa-loop-ivopts.c (expr_invariant_in_loop_p): Should never\n\tbe called at loop depth 0.\n\nFrom-SVN: r132835", "tree": {"sha": "4e849176d532002d0c8d07318e28dbf4d03df03c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e849176d532002d0c8d07318e28dbf4d03df03c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9310e5e3189bad87ed8eb2bc1e53a0a0be0c5524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9310e5e3189bad87ed8eb2bc1e53a0a0be0c5524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9310e5e3189bad87ed8eb2bc1e53a0a0be0c5524"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "65657636a2b4dd61ce7d9563de3268465fa41b3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "patch": "@@ -1,3 +1,11 @@\n+2008-03-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-scalar-evolution.c (instantiate_parameters_1): An SSA_NAME\n+\tdefined in a loop at depth 0 is invariant.\n+\t* tree-chrec.c (evolution_function_is_invariant_rec_p): Ditto.\n+\t* tree-ssa-loop-ivopts.c (expr_invariant_in_loop_p): Should never\n+\tbe called at loop depth 0.\n+\n 2008-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR driver/35420"}, {"sha": "295fb7920c922167649267ca629cf5d009fd814a", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "patch": "@@ -948,8 +948,9 @@ evolution_function_is_invariant_rec_p (tree chrec, int loopnum)\n   if (evolution_function_is_constant_p (chrec))\n     return true;\n \n-  if (TREE_CODE (chrec) == SSA_NAME \n-      && expr_invariant_in_loop_p (get_loop (loopnum), chrec))\n+  if (TREE_CODE (chrec) == SSA_NAME\n+      && (loopnum == 0\n+\t  || expr_invariant_in_loop_p (get_loop (loopnum), chrec)))\n     return true;\n \n   if (TREE_CODE (chrec) == POLYNOMIAL_CHREC)"}, {"sha": "4d771b7e5dd6545eca8cec7aa20435d04dc4edac", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "patch": "@@ -1971,6 +1971,7 @@ instantiate_parameters_1 (struct loop *loop, tree chrec, int flags, htab_t cache\n       /* A parameter (or loop invariant and we do not want to include\n \t evolutions in outer loops), nothing to do.  */\n       if (!def_bb\n+\t  || loop_depth (def_bb->loop_father) == 0\n \t  || (!(flags & INSERT_SUPERLOOP_CHRECS)\n \t      && !flow_bb_inside_loop_p (loop, def_bb)))\n \treturn chrec;"}, {"sha": "4121d821aa7c27d576d56a4b4d4b26eb00e27018", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=6a732743bdccfe0eac5e67d90ef5ee5fe70dfe35", "patch": "@@ -1254,14 +1254,17 @@ find_interesting_uses_cond (struct ivopts_data *data, tree stmt, tree *cond_p)\n }\n \n /* Returns true if expression EXPR is obviously invariant in LOOP,\n-   i.e. if all its operands are defined outside of the LOOP.  */\n+   i.e. if all its operands are defined outside of the LOOP.  LOOP\n+   should not be the function body.  */\n \n bool\n expr_invariant_in_loop_p (struct loop *loop, tree expr)\n {\n   basic_block def_bb;\n   unsigned i, len;\n \n+  gcc_assert (loop_depth (loop) > 0);\n+\n   if (is_gimple_min_invariant (expr))\n     return true;\n "}]}