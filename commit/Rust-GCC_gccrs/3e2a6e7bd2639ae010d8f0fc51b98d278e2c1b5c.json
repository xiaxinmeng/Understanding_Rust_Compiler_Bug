{"sha": "3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyYTZlN2JkMjYzOWFlMDEwZDhmMGZjNTFiOThkMjc4ZTJjMWI1Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-24T22:45:34Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-01-24T22:45:34Z"}, "message": "oops, wrong variant of patch.\n\nFrom-SVN: r121146", "tree": {"sha": "dcb4a389c2ddd7c6fe0406606b7d82b5522836a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcb4a389c2ddd7c6fe0406606b7d82b5522836a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c/comments", "author": null, "committer": null, "parents": [{"sha": "ca32e64edd247c50165fcf52427972d5587e2754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca32e64edd247c50165fcf52427972d5587e2754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca32e64edd247c50165fcf52427972d5587e2754"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "430f2ceed39b3a26b515fc3ae84af11004f3d619", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=3e2a6e7bd2639ae010d8f0fc51b98d278e2c1b5c", "patch": "@@ -760,8 +760,8 @@ compute_max_insns (int insns)\n   if (max_insns < PARAM_VALUE (PARAM_LARGE_UNIT_INSNS))\n     max_insns = PARAM_VALUE (PARAM_LARGE_UNIT_INSNS);\n \n-  return max_insns = ((HOST_WIDEST_INT) max_insns\n-\t              * (100 + PARAM_VALUE (PARAM_INLINE_UNIT_GROWTH)) / 100);\n+  return ((HOST_WIDEST_INT) max_insns\n+\t  * (100 + PARAM_VALUE (PARAM_INLINE_UNIT_GROWTH)) / 100);\n }\n \n /* We use greedy algorithm for inlining of small functions:"}]}