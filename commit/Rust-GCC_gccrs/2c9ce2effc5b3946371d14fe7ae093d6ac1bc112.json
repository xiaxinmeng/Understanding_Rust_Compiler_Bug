{"sha": "2c9ce2effc5b3946371d14fe7ae093d6ac1bc112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM5Y2UyZWZmYzViMzk0NjM3MWQxNGZlN2FlMDkzZDZhYzFiYzExMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-03T22:39:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-03T22:39:33Z"}, "message": "(emit_reload_insns): Don't update the status of a register from an\ninput reload if it also has an output reload.\n\nFrom-SVN: r3994", "tree": {"sha": "32b383fd9ddd1a5ef9e6258e14a5f30c7a87c19b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b383fd9ddd1a5ef9e6258e14a5f30c7a87c19b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c9ce2effc5b3946371d14fe7ae093d6ac1bc112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9ce2effc5b3946371d14fe7ae093d6ac1bc112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9ce2effc5b3946371d14fe7ae093d6ac1bc112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9ce2effc5b3946371d14fe7ae093d6ac1bc112/comments", "author": null, "committer": null, "parents": [{"sha": "c03b7665c267cb9a910c05323c8d4c0571711cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03b7665c267cb9a910c05323c8d4c0571711cd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03b7665c267cb9a910c05323c8d4c0571711cd0"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "bcbd68f5916b5395ce57b3bf9c1e35b6b1939651", "filename": "gcc/reload1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9ce2effc5b3946371d14fe7ae093d6ac1bc112/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9ce2effc5b3946371d14fe7ae093d6ac1bc112/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=2c9ce2effc5b3946371d14fe7ae093d6ac1bc112", "patch": "@@ -6148,11 +6148,15 @@ emit_reload_insns (insn)\n \t\t}\n \t    }\n \n-\t  /* Maybe the spill reg contains a copy of reload_in.  */\n+\t  /* Maybe the spill reg contains a copy of reload_in.  Only do\n+\t     something if there will not be an output reload for\n+\t     the register being reloaded.  */\n \t  else if (reload_out[r] == 0\n \t\t   && reload_in[r] != 0\n-\t\t   && (GET_CODE (reload_in[r]) == REG\n-\t\t       || GET_CODE (reload_in_reg[r]) == REG))\n+\t\t   && ((GET_CODE (reload_in[r]) == REG\n+\t\t\t&& ! reg_has_output_reload[REGNO (reload_in[r])]\n+\t\t       || (GET_CODE (reload_in_reg[r]) == REG\n+\t\t\t   && ! reg_has_output_reload[REGNO (reload_in_reg[r])]))))\n \t    {\n \t      register int nregno;\n \t      int nnr;"}]}