{"sha": "402464a01f94f1978277aa360ff15e1af0a11543", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyNDY0YTAxZjk0ZjE5NzgyNzdhYTM2MGZmMTVlMWFmMGExMTU0Mw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-07-14T15:17:28Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-07-14T15:17:28Z"}, "message": "lower-subreg.c (subreg_context): New static bitmap.\n\n\t* lower-subreg.c (subreg_context): New static bitmap.\n\t(decompose_multiword_subregs): Allocate and free it.\n\t(find_decomposable_subregs): Set a bit in it for a register that\n\toccurs in a subreg that changes mode but not size.\n\t(can_decompose_p): Test it instead of non_decomposable_context.\n\nFrom-SVN: r162181", "tree": {"sha": "0d942eece72d3638f3d5e0c7f55262afe7c363cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d942eece72d3638f3d5e0c7f55262afe7c363cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/402464a01f94f1978277aa360ff15e1af0a11543", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/402464a01f94f1978277aa360ff15e1af0a11543", "html_url": "https://github.com/Rust-GCC/gccrs/commit/402464a01f94f1978277aa360ff15e1af0a11543", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/402464a01f94f1978277aa360ff15e1af0a11543/comments", "author": null, "committer": null, "parents": [{"sha": "bf9899d44b2e83156d90e3b4c48765d57cea5061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9899d44b2e83156d90e3b4c48765d57cea5061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf9899d44b2e83156d90e3b4c48765d57cea5061"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "e894e6236458bd6bf6d121799f3498906d7e902c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/402464a01f94f1978277aa360ff15e1af0a11543/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/402464a01f94f1978277aa360ff15e1af0a11543/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=402464a01f94f1978277aa360ff15e1af0a11543", "patch": "@@ -1,3 +1,11 @@\n+2010-07-14  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* lower-subreg.c (subreg_context): New static bitmap.\n+\t(decompose_multiword_subregs): Allocate and free it.\n+\t(find_decomposable_subregs): Set a bit in it for a register that\n+\toccurs in a subreg that changes mode but not size.\n+\t(can_decompose_p): Test it instead of non_decomposable_context.\n+\n 2010-07-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44824"}, {"sha": "1cc972ac72d0af350e60d3fc287a680264a59260", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/402464a01f94f1978277aa360ff15e1af0a11543/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/402464a01f94f1978277aa360ff15e1af0a11543/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=402464a01f94f1978277aa360ff15e1af0a11543", "patch": "@@ -63,6 +63,12 @@ static bitmap decomposable_context;\n    which it can not be decomposed.  */\n static bitmap non_decomposable_context;\n \n+/* Bit N in this bitmap is set if regno N is used in a subreg\n+   which changes the mode but not the size.  This typically happens\n+   when the register accessed as a floating-point value; we want to\n+   avoid generating accesses to its subwords in integer modes.  */\n+static bitmap subreg_context;\n+\n /* Bit N in the bitmap in element M of this array is set if there is a\n    copy from reg M to reg N.  */\n static VEC(bitmap,heap) *reg_copy_graph;\n@@ -289,6 +295,7 @@ find_decomposable_subregs (rtx *px, void *data)\n \t  && !MODES_TIEABLE_P (GET_MODE (x), GET_MODE (inner)))\n \t{\n \t  bitmap_set_bit (non_decomposable_context, regno);\n+\t  bitmap_set_bit (subreg_context, regno);\n \t  return -1;\n \t}\n     }\n@@ -616,7 +623,7 @@ can_decompose_p (rtx x)\n \treturn (validate_subreg (word_mode, GET_MODE (x), x, UNITS_PER_WORD)\n \t\t&& HARD_REGNO_MODE_OK (regno, word_mode));\n       else\n-\treturn !bitmap_bit_p (non_decomposable_context, regno);\n+\treturn !bitmap_bit_p (subreg_context, regno);\n     }\n \n   return true;\n@@ -1091,6 +1098,7 @@ decompose_multiword_subregs (void)\n \n   decomposable_context = BITMAP_ALLOC (NULL);\n   non_decomposable_context = BITMAP_ALLOC (NULL);\n+  subreg_context = BITMAP_ALLOC (NULL);\n \n   reg_copy_graph = VEC_alloc (bitmap, heap, max);\n   VEC_safe_grow (bitmap, heap, reg_copy_graph, max);\n@@ -1309,6 +1317,7 @@ decompose_multiword_subregs (void)\n \n   BITMAP_FREE (decomposable_context);\n   BITMAP_FREE (non_decomposable_context);\n+  BITMAP_FREE (subreg_context);\n }\n \f\n /* Gate function for lower subreg pass.  */"}]}