{"sha": "4d0e69c3f028843b21182d4d4431b5a93766673b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQwZTY5YzNmMDI4ODQzYjIxMTgyZDRkNDQzMWI1YTkzNzY2NjczYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-27T15:46:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-27T15:46:56Z"}, "message": "(mostly_true_jump): When trying to determine if the current insn is essentially a conditional return...\n\n(mostly_true_jump): When trying to determine if the current insn is\nessentially a conditional return, look inside of SEQUENCE insns for\njumps.\nPredict jumps to the exit test for loops as likely to be taken.\n\nFrom-SVN: r2925", "tree": {"sha": "8e8de4b74ccee3ffacb1b1787bdc49ca9e026032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e8de4b74ccee3ffacb1b1787bdc49ca9e026032"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d0e69c3f028843b21182d4d4431b5a93766673b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0e69c3f028843b21182d4d4431b5a93766673b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d0e69c3f028843b21182d4d4431b5a93766673b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d0e69c3f028843b21182d4d4431b5a93766673b/comments", "author": null, "committer": null, "parents": [{"sha": "cf526dcc5c28c03eb46440208663802b4f4bc171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf526dcc5c28c03eb46440208663802b4f4bc171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf526dcc5c28c03eb46440208663802b4f4bc171"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "bcee35ebf172ead10a349cc304b56fed22a74e78", "filename": "gcc/reorg.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d0e69c3f028843b21182d4d4431b5a93766673b/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d0e69c3f028843b21182d4d4431b5a93766673b/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=4d0e69c3f028843b21182d4d4431b5a93766673b", "patch": "@@ -1069,10 +1069,13 @@ mostly_true_jump (jump_insn, condition)\n \n   /* If TARGET_LABEL has no jumps between it and the end of the function,\n      this is essentially a conditional return, so predict it as false.  */\n-  for (insn = NEXT_INSN (target_label);\n-       insn && GET_CODE (insn) != JUMP_INSN;\n-       insn = NEXT_INSN (insn))\n-    ;\n+  for (insn = NEXT_INSN (target_label); insn; insn = NEXT_INSN (insn))\n+    {\n+      if (GET_CODE (insn) == INSN && GET_CODE (PATTERN (insn)) == SEQUENCE)\n+\tinsn = XVECEXP (PATTERN (insn), 0, 0);\n+      if (GET_CODE (insn) == JUMP_INSN)\n+\tbreak;\n+    }\n \n   if (insn == 0)\n     return 0;\n@@ -1086,6 +1089,16 @@ mostly_true_jump (jump_insn, condition)\n     if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG)\n       return 2;\n \n+  /* If this is a jump to the test of a loop, it is likely true.  We scan\n+     forwards from the target label.  If we find a NOTE_INSN_LOOP_VTOP\n+     before the next real insn, we assume the branch is to the loop branch\n+     test.  */\n+  for (insn = NEXT_INSN (target_label);\n+       insn && GET_CODE (insn) == NOTE;\n+       insn = PREV_INSN (insn))\n+    if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_VTOP)\n+      return 1;\n+\n   /* If we couldn't figure out what this jump was, assume it won't be \n      taken.  This should be rare.  */\n   if (condition == 0)"}]}