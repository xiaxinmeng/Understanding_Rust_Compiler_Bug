{"sha": "8741664047034e6bb35eb06645ceeb3a08eb6a3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0MTY2NDA0NzAzNGU2YmIzNWViMDY2NDVjZWViM2EwOGViNmEzYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-26T20:36:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-26T20:36:10Z"}, "message": "(check_format_info): Don't warn about format type mismatch if the\nargument is an ERROR_MARK.\n\nFrom-SVN: r10401", "tree": {"sha": "77d15f2e923c778fa16a4372e9a4be408693efe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77d15f2e923c778fa16a4372e9a4be408693efe8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8741664047034e6bb35eb06645ceeb3a08eb6a3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8741664047034e6bb35eb06645ceeb3a08eb6a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8741664047034e6bb35eb06645ceeb3a08eb6a3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8741664047034e6bb35eb06645ceeb3a08eb6a3a/comments", "author": null, "committer": null, "parents": [{"sha": "f05a769fb8c39bf579ea51cb11f7d7033877d997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05a769fb8c39bf579ea51cb11f7d7033877d997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05a769fb8c39bf579ea51cb11f7d7033877d997"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "41362faf2c49b54493c6853298f37f9eec13f10c", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8741664047034e6bb35eb06645ceeb3a08eb6a3a/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8741664047034e6bb35eb06645ceeb3a08eb6a3a/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=8741664047034e6bb35eb06645ceeb3a08eb6a3a", "patch": "@@ -1224,16 +1224,20 @@ check_format_info (info, params)\n \t      cur_type = TREE_TYPE (cur_type);\n \t      continue;\n \t    }\n-\t  sprintf (message,\n-\t\t   \"format argument is not a %s (arg %d)\",\n-\t\t   ((fci->pointer_count == 1) ? \"pointer\" : \"pointer to a pointer\"),\n-\t\t   arg_num);\n-\t  warning (message);\n+\t  if (TREE_CODE (cur_type) != ERROR_MARK)\n+\t    {\n+\t      sprintf (message,\n+\t\t       \"format argument is not a %s (arg %d)\",\n+\t\t       ((fci->pointer_count == 1) ? \"pointer\" : \"pointer to a pointer\"),\n+\t\t       arg_num);\n+\t      warning (message);\n+\t    }\n \t  break;\n \t}\n \n       /* Check the type of the \"real\" argument, if there's a type we want.  */\n       if (i == fci->pointer_count && wanted_type != 0\n+\t  && TREE_CODE (cur_type) != ERROR_MARK\n \t  && wanted_type != TYPE_MAIN_VARIANT (cur_type)\n \t  /* If we want `void *', allow any pointer type.\n \t     (Anything else would already have got a warning.)  */"}]}