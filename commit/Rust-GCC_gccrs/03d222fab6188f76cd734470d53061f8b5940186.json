{"sha": "03d222fab6188f76cd734470d53061f8b5940186", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNkMjIyZmFiNjE4OGY3NmNkNzM0NDcwZDUzMDYxZjhiNTk0MDE4Ng==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2016-12-15T15:49:13Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-12-15T15:49:13Z"}, "message": "[arm] Rework arm-common to use new feature bits.\n\nThis converts the recently added implicit -mthumb support code to use\nthe new data structures.  Since we have a very simple query and no\ninitialized copies of the sbitmaps, for now we simply scan the list of\nfeatures to look for the one of interest.\n\n\t* arm-opts.h (struct arm_arch_core_flag): Add new field ISA.\n\tInitialize it.\n   \t(arm_arch_core_flag): Delete flags field.\n    \t(arm_arch_core_flags): Don't initialize flags field.\n \t* common/config/arm/arm-common.c (check_isa_bits_for): New function.\n\t(arm_target_thumb_only): Use new isa bits arrays.\n\nFrom-SVN: r243704", "tree": {"sha": "cbea8a3df69757818781cf5341197b7f37ac1572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbea8a3df69757818781cf5341197b7f37ac1572"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03d222fab6188f76cd734470d53061f8b5940186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d222fab6188f76cd734470d53061f8b5940186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d222fab6188f76cd734470d53061f8b5940186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d222fab6188f76cd734470d53061f8b5940186/comments", "author": null, "committer": null, "parents": [{"sha": "6c466c7c6f4b58c7ee2b45bf448ec20bb715f4bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c466c7c6f4b58c7ee2b45bf448ec20bb715f4bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c466c7c6f4b58c7ee2b45bf448ec20bb715f4bc"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "95e5d1e891045a399014fe3efa3ceec4bb9816b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d222fab6188f76cd734470d53061f8b5940186/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d222fab6188f76cd734470d53061f8b5940186/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03d222fab6188f76cd734470d53061f8b5940186", "patch": "@@ -1,3 +1,12 @@\n+2016-12-15  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm-opts.h (struct arm_arch_core_flag): Add new field ISA.\n+\tInitialize it.\n+   \t(arm_arch_core_flag): Delete flags field.\n+    \t(arm_arch_core_flags): Don't initialize flags field.\n+ \t* common/config/arm/arm-common.c (check_isa_bits_for): New function.\n+\t(arm_target_thumb_only): Use new isa bits arrays.\n+\n 2016-12-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm-protos.h (insn_flags): Delete declaration."}, {"sha": "dca3682afe0102261da33bff38f95c1acd9106b7", "filename": "gcc/common/config/arm/arm-common.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d222fab6188f76cd734470d53061f8b5940186/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d222fab6188f76cd734470d53061f8b5940186/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c?ref=03d222fab6188f76cd734470d53061f8b5940186", "patch": "@@ -101,23 +101,37 @@ arm_rewrite_mcpu (int argc, const char **argv)\n struct arm_arch_core_flag\n {\n   const char *const name;\n-  const arm_feature_set flags;\n+  const enum isa_feature isa_bits[isa_num_bits];\n };\n \n static const struct arm_arch_core_flag arm_arch_core_flags[] =\n {\n #undef ARM_CORE\n #define ARM_CORE(NAME, X, IDENT, TUNE_FLAGS, ARCH, ISA, FLAGS, COSTS)\t\\\n-  {NAME, FLAGS},\n+  {NAME, {ISA isa_nobit}},\n #include \"config/arm/arm-cores.def\"\n #undef ARM_CORE\n #undef ARM_ARCH\n #define ARM_ARCH(NAME, CORE, TUNE_FLAGS, ARCH, ISA, FLAGS)\t\\\n-  {NAME, FLAGS},\n+  {NAME, {ISA isa_nobit}},\n #include \"config/arm/arm-arches.def\"\n #undef ARM_ARCH\n };\n \n+/* Scan over a raw feature array BITS checking for BIT being present.\n+   This is slower than the normal bitmask checks, but we would spend longer\n+   initializing that than doing the check this way.  Returns true iff\n+   BIT is found.  */\n+static bool\n+check_isa_bits_for (const enum isa_feature* bits, enum isa_feature bit)\n+{\n+  while (*bits != isa_nobit)\n+    if (*bits++ == bit)\n+      return true;\n+\n+  return false;\n+}\n+\n /* Called by the driver to check whether the target denoted by current\n    command line options is a Thumb-only target.  ARGV is an array of\n    -march and -mcpu values (ie. it contains the rhs after the equal\n@@ -132,7 +146,8 @@ arm_target_thumb_only (int argc, const char **argv)\n     {\n       for (opt = 0; opt < (ARRAY_SIZE (arm_arch_core_flags)); opt++)\n \tif ((strcmp (argv[argc - 1], arm_arch_core_flags[opt].name) == 0)\n-\t    && !ARM_FSET_HAS_CPU1(arm_arch_core_flags[opt].flags, FL_NOTM))\n+\t    && !check_isa_bits_for (arm_arch_core_flags[opt].isa_bits,\n+\t\t\t\t    isa_bit_notm))\n \t  return \"-mthumb\";\n \n       return NULL;"}, {"sha": "52c69e9d280450887ee3d61252886172c06ed86a", "filename": "gcc/config/arm/arm-opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d222fab6188f76cd734470d53061f8b5940186/gcc%2Fconfig%2Farm%2Farm-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d222fab6188f76cd734470d53061f8b5940186/gcc%2Fconfig%2Farm%2Farm-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-opts.h?ref=03d222fab6188f76cd734470d53061f8b5940186", "patch": "@@ -26,6 +26,7 @@\n #define ARM_OPTS_H\n \n #include \"arm-flags.h\"\n+#include \"arm-isa.h\"\n \n /* The various ARM cores.  */\n enum processor_type"}]}