{"sha": "81072bab8d1e48ee83d9711dcb559ea1e019b351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEwNzJiYWI4ZDFlNDhlZTgzZDk3MTFkY2I1NTllYTFlMDE5YjM1MQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-06-11T10:05:40Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-07-14T11:56:20Z"}, "message": "Fortran  : ICE in gfc_check_pointer_assign PR95612\n\nOutput an error if the right hand value is a zero sized array or\ndoes not have a symbol tree otherwise continue checking.\n\n2020-07-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n\ngcc/fortran/\n\n\tPR fortran/95612\n\t* expr.c (gfc_check_pointer_assigb): Output an error if\n\trvalue is a zero sized array or output an error if rvalue\n\tdoesn't have a symbol tree.\n\n2020-07-14  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/95612\n\t* gfortran.dg/pr95612.f90: New test.", "tree": {"sha": "8bdd1d3ff4a94be2ec4199a356ef5485d6c1c5b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bdd1d3ff4a94be2ec4199a356ef5485d6c1c5b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81072bab8d1e48ee83d9711dcb559ea1e019b351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81072bab8d1e48ee83d9711dcb559ea1e019b351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81072bab8d1e48ee83d9711dcb559ea1e019b351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81072bab8d1e48ee83d9711dcb559ea1e019b351/comments", "author": null, "committer": null, "parents": [{"sha": "102502e32ea4e8a75d6b252ba319d09d735d9aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102502e32ea4e8a75d6b252ba319d09d735d9aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/102502e32ea4e8a75d6b252ba319d09d735d9aa7"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "6707ca550a0f7696b1abd34a1788560276b7e310", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81072bab8d1e48ee83d9711dcb559ea1e019b351/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81072bab8d1e48ee83d9711dcb559ea1e019b351/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=81072bab8d1e48ee83d9711dcb559ea1e019b351", "patch": "@@ -4271,7 +4271,20 @@ gfc_check_pointer_assign (gfc_expr *lvalue, gfc_expr *rvalue,\n       gfc_symbol *sym;\n       bool target;\n \n-      gcc_assert (rvalue->symtree);\n+      if (gfc_is_size_zero_array (rvalue))\n+\t{\n+\t  gfc_error (\"Zero-sized array detected at %L where an entity with \"\n+\t\t     \"the TARGET attribute is expected\", &rvalue->where);\n+\t  return false;\n+\t}\n+      else if (!rvalue->symtree)\n+\t{\n+\t  gfc_error (\"Pointer assignment target in initialization expression \"\n+\t\t     \"does not have the TARGET attribute at %L\",\n+\t\t     &rvalue->where);\n+\t  return false;\n+\t}\n+\n       sym = rvalue->symtree->n.sym;\n \n       if (sym->ts.type == BT_CLASS && sym->attr.class_ok)"}, {"sha": "b3cac8c1d814a7692caa9c37cacae4504065a289", "filename": "gcc/testsuite/gfortran.dg/pr95612.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81072bab8d1e48ee83d9711dcb559ea1e019b351/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95612.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81072bab8d1e48ee83d9711dcb559ea1e019b351/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95612.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95612.f90?ref=81072bab8d1e48ee83d9711dcb559ea1e019b351", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+\n+program p\n+   integer, pointer :: y(:) => shape(1)   ! { dg-error \"Zero-sized array detected at .1. where an entity with the TARGET attribute is expected\" }\n+   integer, pointer :: z(:) => shape([1]) ! { dg-error \"Pointer assignment target in initialization expression does not have the TARGET attribute at .1.\" }\n+end\n+"}]}