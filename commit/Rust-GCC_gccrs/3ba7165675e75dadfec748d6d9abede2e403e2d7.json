{"sha": "3ba7165675e75dadfec748d6d9abede2e403e2d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhNzE2NTY3NWU3NWRhZGZlYzc0OGQ2ZDlhYmVkZTJlNDAzZTJkNw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:36:23Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:36:23Z"}, "message": "rtl.h: (HARD_FRAME_POINTER_REGNUM): New macro.\n\n* rtl.h: (HARD_FRAME_POINTER_REGNUM): New macro.\n(hard_frame_pointer_rtx): New variable\n\nFrom-SVN: r5449", "tree": {"sha": "349e5b190e37988bd3e15ccdba7200f747d54703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/349e5b190e37988bd3e15ccdba7200f747d54703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ba7165675e75dadfec748d6d9abede2e403e2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba7165675e75dadfec748d6d9abede2e403e2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba7165675e75dadfec748d6d9abede2e403e2d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba7165675e75dadfec748d6d9abede2e403e2d7/comments", "author": null, "committer": null, "parents": [{"sha": "fe089a905abbbde679e6d643959a57e06f914f63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe089a905abbbde679e6d643959a57e06f914f63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe089a905abbbde679e6d643959a57e06f914f63"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "fa91347b000a12ea7551e25e427ff58417ebe750", "filename": "gcc/rtl.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba7165675e75dadfec748d6d9abede2e403e2d7/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba7165675e75dadfec748d6d9abede2e403e2d7/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=3ba7165675e75dadfec748d6d9abede2e403e2d7", "patch": "@@ -826,13 +826,24 @@ extern rtx const_tiny_rtx[3][(int) MAX_MACHINE_MODE];\n    go through these unique rtx objects.  */\n extern rtx stack_pointer_rtx;\n extern rtx frame_pointer_rtx;\n+extern rtx hard_frame_pointer_rtx;\n extern rtx arg_pointer_rtx;\n extern rtx pic_offset_table_rtx;\n extern rtx struct_value_rtx;\n extern rtx struct_value_incoming_rtx;\n extern rtx static_chain_rtx;\n extern rtx static_chain_incoming_rtx;\n \n+/* If HARD_FRAME_POINTER_REGNUM is defined, then a special dummy reg\n+   is used to represent the frame pointer.  This is because the\n+   hard frame pointer and the automatic variables are separated by an amount\n+   that cannot be determined until after register allocation.  We can assume\n+   that in this case ELIMINABLE_REGS will be defined, one action of which\n+   will be to eliminate FRAME_POINTER_REGNUM into HARD_FRAME_POINTER_REGNUM. */\n+#ifndef HARD_FRAME_POINTER_REGNUM\n+#define HARD_FRAME_POINTER_REGNUM FRAME_POINTER_REGNUM\n+#endif\n+\n /* Virtual registers are used during RTL generation to refer to locations into\n    the stack frame when the actual location isn't known until RTL generation\n    is complete.  The routine instantiate_virtual_regs replaces these with"}]}