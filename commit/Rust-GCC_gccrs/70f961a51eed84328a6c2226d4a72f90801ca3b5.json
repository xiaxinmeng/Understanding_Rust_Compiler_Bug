{"sha": "70f961a51eed84328a6c2226d4a72f90801ca3b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmOTYxYTUxZWVkODQzMjhhNmMyMjI2ZDRhNzJmOTA4MDFjYTNiNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-01-14T13:08:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-01-14T13:08:02Z"}, "message": "re PR c++/46688 (g++ requires a function declaration when it should not)\n\n\tPR c++/46688\n\t* tree.c (build_vec_init_expr): Handle flexible array\n\tproperly.\n\nFrom-SVN: r168782", "tree": {"sha": "0ccd3b413969c837c4e57539fdf78029b0c0ba41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ccd3b413969c837c4e57539fdf78029b0c0ba41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70f961a51eed84328a6c2226d4a72f90801ca3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f961a51eed84328a6c2226d4a72f90801ca3b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f961a51eed84328a6c2226d4a72f90801ca3b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f961a51eed84328a6c2226d4a72f90801ca3b5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f66db3b32436cd7902dc553cc013dddf5b26b79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f66db3b32436cd7902dc553cc013dddf5b26b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f66db3b32436cd7902dc553cc013dddf5b26b79"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "d8416864178f238a7aaf727c2be66b03b28f18f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=70f961a51eed84328a6c2226d4a72f90801ca3b5", "patch": "@@ -1,3 +1,9 @@\n+2011-01-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/46688\n+\t* tree.c (build_vec_init_expr): Handle flexible array\n+\tproperly.\n+\n 2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR c++/47213"}, {"sha": "813b88d12d2df46f1812e4682a63316f19d60c3f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=70f961a51eed84328a6c2226d4a72f90801ca3b5", "patch": "@@ -474,7 +474,12 @@ build_vec_init_expr (tree type, tree init)\n      what functions are needed.  Here we assume that init is either\n      NULL_TREE, void_type_node (indicating value-initialization), or\n      another array to copy.  */\n-  if (init == void_type_node)\n+  if (integer_zerop (array_type_nelts_total (type)))\n+    {\n+      /* No actual initialization to do.  */;\n+      init = NULL_TREE;\n+    }\n+  else if (init == void_type_node)\n     {\n       elt_init = build_value_init (inner_type, tf_warning_or_error);\n       value_init = true;"}, {"sha": "9851be4425383fa3e1c4a2f61ff256486e5a47ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=70f961a51eed84328a6c2226d4a72f90801ca3b5", "patch": "@@ -1,3 +1,7 @@\n+2011-01-14  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/ext/flexary2.C: New.\n+\n 2011-01-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/47281"}, {"sha": "4855b3f5725c4f91b3fe2c5da70aff05652dafdd", "filename": "gcc/testsuite/g++.dg/ext/flexary2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70f961a51eed84328a6c2226d4a72f90801ca3b5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fflexary2.C?ref=70f961a51eed84328a6c2226d4a72f90801ca3b5", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/46688\n+// { dg-options \"\" }\n+\n+struct A {\n+   A(int);\n+};\n+\n+struct B {\n+   B() {}\n+   A a[];\n+};"}]}