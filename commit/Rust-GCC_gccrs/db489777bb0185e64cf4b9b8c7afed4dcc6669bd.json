{"sha": "db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI0ODk3NzdiYjAxODVlNjRjZjRiOWI4YzdhZmVkNGRjYzY2NjliZA==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-11-10T09:42:45Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-11-10T09:42:45Z"}, "message": "[testsuite] Fix retrieval of testname\n\nWhen gcc-dg-runtest is used to run a test the test is run several times\nwith different options. For clarity of the log, the test infrastructure\nthen append the options to the testname. This means that all the code\nthat must deal with the testcase itself (eg. removing the output files\nafter the test has run) needs to remove the option name.\n\nThere is already a pattern (see below) for this in several place of the\ntestsuite framework but it is also missing in many places. This patch\nfixes all of these places. The pattern is as follows:\n\nset testcase [testname-for-summary]\n; The name might include a list of options; extract the file name.\nset testcase [lindex $testcase 0]\n\n2017-11-10  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/testsuite/\n    * lib/scanasm.exp (scan-assembler): Extract filename from testname used\n    in summary.\n    (scan-assembler-not): Likewise.\n    (scan-hidden): Likewise.\n    (scan-not-hidden): Likewise.\n    (scan-stack-usage): Likewise.\n    (scan-stack-usage-not): Likewise.\n    (scan-assembler-times): Likewise.\n    (scan-assembler-dem): Likewise.\n    (scan-assembler-dem-not): Likewise.\n    (object-size): Likewise.\n    (scan-lto-assembler): Likewise.\n    * lib/scandump.exp (scan-dump): Likewise.\n    (scan-dump-times): Likewise.\n    (scan-dump-not): Likewise.\n    (scan-dump-dem): Likewise.\n    (scan-dump-dem-not): Likewise\n\nFrom-SVN: r254622", "tree": {"sha": "3371df485b71dc0f1f15ca9d26faa59f8cd0e71e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3371df485b71dc0f1f15ca9d26faa59f8cd0e71e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b51b7be18d529a6342c48d690b9bb20543660fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51b7be18d529a6342c48d690b9bb20543660fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51b7be18d529a6342c48d690b9bb20543660fd8"}], "stats": {"total": 84, "additions": 68, "deletions": 16}, "files": [{"sha": "e83d3ce03dbbd9e8e3c66db04b973e80c7012339", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "patch": "@@ -1,3 +1,23 @@\n+2017-11-10  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* lib/scanasm.exp (scan-assembler): Extract filename from testname used\n+\tin summary.\n+\t(scan-assembler-not): Likewise.\n+\t(scan-hidden): Likewise.\n+\t(scan-not-hidden): Likewise.\n+\t(scan-stack-usage): Likewise.\n+\t(scan-stack-usage-not): Likewise.\n+\t(scan-assembler-times): Likewise.\n+\t(scan-assembler-dem): Likewise.\n+\t(scan-assembler-dem-not): Likewise.\n+\t(object-size): Likewise.\n+\t(scan-lto-assembler): Likewise.\n+\t* lib/scandump.exp (scan-dump): Likewise.\n+\t(scan-dump-times): Likewise.\n+\t(scan-dump-not): Likewise.\n+\t(scan-dump-dem): Likewise.\n+\t(scan-dump-dem-not): Likewise\n+\n 2017-11-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt69.adb: New test."}, {"sha": "33286152f30df959a4bffa81634d0bfe7b898e8f", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "patch": "@@ -78,7 +78,9 @@ proc dg-scan { name positive testcase output_file orig_args } {\n \n proc scan-assembler { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].s\"\n     dg-scan \"scan-assembler\" 1 $testcase $output_file $args\n }\n \n@@ -89,7 +91,9 @@ force_conventional_output_for scan-assembler\n \n proc scan-assembler-not { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].s\"\n \n     dg-scan \"scan-assembler-not\" 0 $testcase $output_file $args\n }\n@@ -117,7 +121,9 @@ proc hidden-scan-for { symbol } {\n \n proc scan-hidden { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].s\"\n \n     set symbol [lindex $args 0]\n \n@@ -133,7 +139,9 @@ proc scan-hidden { args } {\n \n proc scan-not-hidden { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].s\"\n \n     set symbol [lindex $args 0]\n     set hidden_scan [hidden-scan-for $symbol]\n@@ -163,7 +171,9 @@ proc scan-file-not { output_file args } {\n \n proc scan-stack-usage { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].su\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].su\"\n \n     dg-scan \"scan-file\" 1 $testcase $output_file $args\n }\n@@ -173,7 +183,9 @@ proc scan-stack-usage { args } {\n \n proc scan-stack-usage-not { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].su\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].su\"\n \n     dg-scan \"scan-file-not\" 0 $testcase $output_file $args\n }\n@@ -230,12 +242,14 @@ proc scan-assembler-times { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set pattern [lindex $args 0]\n     set times [lindex $args 1]\n     set pp_pattern [make_pattern_printable $pattern]\n \n     # This must match the rule in gcc-dg.exp.\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    set output_file \"[file rootname [file tail $filename]].s\"\n \n     set files [glob -nocomplain $output_file]\n     if { $files == \"\" } {\n@@ -292,9 +306,11 @@ proc scan-assembler-dem { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set pattern [lindex $args 0]\n     set pp_pattern [make_pattern_printable $pattern]\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    set output_file \"[file rootname [file tail $filename]].s\"\n \n     set files [glob -nocomplain $output_file]\n     if { $files == \"\" } {\n@@ -346,9 +362,11 @@ proc scan-assembler-dem-not { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set pattern [lindex $args 0]\n     set pp_pattern [make_pattern_printable $pattern]\n-    set output_file \"[file rootname [file tail $testcase]].s\"\n+    set output_file \"[file rootname [file tail $filename]].s\"\n \n     set files [glob -nocomplain $output_file]\n     if { $files == \"\" } {\n@@ -401,6 +419,8 @@ proc object-size { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set what [lindex $args 0]\n     set where [lsearch { text data bss total } $what]\n     if { $where == -1 } {\n@@ -418,7 +438,7 @@ proc object-size { args } {\n         return\n     }\n \n-    set output_file \"[file rootname [file tail $testcase]].o\"\n+    set output_file \"[file rootname [file tail $filename]].o\"\n     if ![file_on_host exists $output_file] {\n \tverbose -log \"$testcase: $output_file does not exist\"\n \tunresolved \"$testcase object-size $what $cmp $with\"\n@@ -512,7 +532,9 @@ proc dg-function-on-line { args } {\n \n proc scan-lto-assembler { args } {\n     set testcase [testname-for-summary]\n-    set output_file \"[file rootname [file tail $testcase]].exe.ltrans0.s\"\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n+    set output_file \"[file rootname [file tail $filename]].exe.ltrans0.s\"\n     verbose \"output_file: $output_file\"\n     dg-scan \"scan-assembler\" 1 $testcase $output_file $args\n }"}, {"sha": "a2425a23c1e79103286250df353dab3e5eea622e", "filename": "gcc/testsuite/lib/scandump.exp", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db489777bb0185e64cf4b9b8c7afed4dcc6669bd/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscandump.exp?ref=db489777bb0185e64cf4b9b8c7afed4dcc6669bd", "patch": "@@ -45,11 +45,13 @@ proc scan-dump { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n \n     set printable_pattern [make_pattern_printable [lindex $args 1]]\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump $suf \\\"$printable_pattern\\\"\"\n-    set src [file tail [lindex $testcase 0]]\n+    set src [file tail $filename]\n     set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n@@ -86,11 +88,13 @@ proc scan-dump-times { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set times [lindex $args 2]\n     set suf [dump-suffix [lindex $args 3]]\n     set printable_pattern [make_pattern_printable [lindex $args 1]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-times $suf \\\"$printable_pattern\\\" [lindex $args 2]\"\n-    set src [file tail [lindex $testcase 0]]\n+    set src [file tail $filename]\n     set output_file \"[glob -nocomplain $src.[lindex $args 3]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n@@ -128,10 +132,12 @@ proc scan-dump-not { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set printable_pattern [make_pattern_printable [lindex $args 1]]\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-not $suf \\\"$printable_pattern\\\"\"\n-    set src [file tail [lindex $testcase 0]]\n+    set src [file tail $filename]\n     set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n@@ -181,10 +187,12 @@ proc scan-dump-dem { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set printable_pattern [make_pattern_printable [lindex $args 1]]\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-dem $suf \\\"$printable_pattern\\\"\"\n-    set src [file tail [lindex $testcase 0]]\n+    set src [file tail $filename]\n     set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\"\n@@ -233,10 +241,12 @@ proc scan-dump-dem-not { args } {\n     }\n \n     set testcase [testname-for-summary]\n+    # The name might include a list of options; extract the file name.\n+    set filename [lindex $testcase 0]\n     set printable_pattern [make_pattern_printable [lindex $args 1]\n     set suf [dump-suffix [lindex $args 2]]\n     set testname \"$testcase scan-[lindex $args 0]-dump-dem-not $suf \\\"$printable_pattern\\\"\"\n-    set src [file tail [lindex $testcase 0]]\n+    set src [file tail $filename]\n     set output_file \"[glob -nocomplain $src.[lindex $args 2]]\"\n     if { $output_file == \"\" } {\n \tverbose -log \"$testcase: dump file does not exist\""}]}