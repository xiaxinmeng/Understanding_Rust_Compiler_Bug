{"sha": "ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5YzM0OWVjODE3YzIxZWY3YTcyNDU1YTI0MGNkYzhmMmM0OTI2ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-13T14:34:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-13T14:34:05Z"}, "message": "pt.c (tsubst_copy_and_build): Don't complain about unqualified lookup failing if we're still in a template.\n\n\t* pt.c (tsubst_copy_and_build) [CALL_EXPR]: Don't complain about\n\tunqualified lookup failing if we're still in a template.\n\nFrom-SVN: r172372", "tree": {"sha": "5a9801136f60b7ac6e79940996b56da6b7e6d023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a9801136f60b7ac6e79940996b56da6b7e6d023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "094d76619206390a925563a063b50bfcf3a88bbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094d76619206390a925563a063b50bfcf3a88bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094d76619206390a925563a063b50bfcf3a88bbd"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "f144d5004cfbf8884d08366186506cfa1f218d80", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "patch": "@@ -1,3 +1,9 @@\n+2011-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48581\n+\t* pt.c (tsubst_copy_and_build) [CALL_EXPR]: Don't complain about\n+\tunqualified lookup failing if we're still in a template.\n+\n 2011-04-12  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* cp-lang.c (cp_init_ts): Call cp_common_init_ts.  Move"}, {"sha": "3356e7555f5bd7ec476c0d7103e18e85aa39b333", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "patch": "@@ -12938,7 +12938,8 @@ tsubst_copy_and_build (tree t,\n \t    && !any_type_dependent_arguments_p (call_args))\n \t  function = perform_koenig_lookup (function, call_args, false);\n \n-\tif (TREE_CODE (function) == IDENTIFIER_NODE)\n+\tif (TREE_CODE (function) == IDENTIFIER_NODE\n+\t    && !processing_template_decl)\n \t  {\n \t    unqualified_name_lookup_error (function);\n \t    release_tree_vector (call_args);"}, {"sha": "e740808ddcba7c8e2b6e837f5416e2c9f5f46b33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "patch": "@@ -1,3 +1,7 @@\n+2011-04-13  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/sfinae13.C: New.\n+\n 2011-04-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/sse2-init-v2di-2.c: Update scan pattern."}, {"sha": "465df2d8b8c13636c4529b8396c22b398bc04868", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae13.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9c349ec817c21ef7a72455a240cdc8f2c4926d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae13.C?ref=ba9c349ec817c21ef7a72455a240cdc8f2c4926d", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/48581\n+// { dg-options -std=c++0x }\n+\n+template<class T>\n+T&& create();\n+\n+template<class T,\n+  class = decltype(foo(create<T>()))\n+>\n+auto f(int) -> char;\n+\n+template<class>\n+auto f(...) -> char (&)[2];\n+\n+struct S {};\n+void foo(S);\n+\n+static_assert(sizeof(f<S>(0)) == 1, \"Error\"); // (#)\n+\n+int main() {}"}]}