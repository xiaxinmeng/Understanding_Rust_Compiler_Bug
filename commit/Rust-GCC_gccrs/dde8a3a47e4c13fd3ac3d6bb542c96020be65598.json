{"sha": "dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlOGEzYTQ3ZTRjMTNmZDNhYzNkNmJiNTQyYzk2MDIwYmU2NTU5OA==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-01-13T20:24:19Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-01-13T20:24:19Z"}, "message": "xtensa.h (XTENSA_LIBCALL_VALUE, [...]): Remove macros.\n\n\t* config/xtensa/xtensa.h (XTENSA_LIBCALL_VALUE, LIBCALL_VALUE,\n\tLIBCALL_OUTGOING_VALUE, FUNCTION_VALUE_REGNO_P): Remove macros.\n\t* config/xtensa/xtensa.c (xtensa_libcall_value,\n\txtensa_function_value_regno_p): New functions.\n\t(TARGET_LIBCALL_VALUE, TARGET_FUNCTION_VALUE_REGNO_P): Define.\n\nFrom-SVN: r168765", "tree": {"sha": "6e8c242feb8e288d26c0b81cc1417be27855547d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e8c242feb8e288d26c0b81cc1417be27855547d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/comments", "author": null, "committer": null, "parents": [{"sha": "389295b785f9c396c703c186bd5e2fe1f697ed38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389295b785f9c396c703c186bd5e2fe1f697ed38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/389295b785f9c396c703c186bd5e2fe1f697ed38"}], "stats": {"total": 64, "additions": 35, "deletions": 29}, "files": [{"sha": "417509a951174f9764658b5c18b3d22d061f0776", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "patch": "@@ -1,3 +1,11 @@\n+2011-01-13  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/xtensa/xtensa.h (XTENSA_LIBCALL_VALUE, LIBCALL_VALUE,\n+\tLIBCALL_OUTGOING_VALUE, FUNCTION_VALUE_REGNO_P): Remove macros.\n+\t* config/xtensa/xtensa.c (xtensa_libcall_value,\n+\txtensa_function_value_regno_p): New functions.\n+\t(TARGET_LIBCALL_VALUE, TARGET_FUNCTION_VALUE_REGNO_P): Define.\n+\n 2011-01-13  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR c++/47213"}, {"sha": "7e244e2318c630c2dd77a463e3f869d5d0c53109", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for Tensilica's Xtensa architecture.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n@@ -147,6 +147,8 @@ static rtx xtensa_function_arg (CUMULATIVE_ARGS *, enum machine_mode,\n static rtx xtensa_function_incoming_arg (CUMULATIVE_ARGS *,\n \t\t\t\t\t enum machine_mode, const_tree, bool);\n static rtx xtensa_function_value (const_tree, const_tree, bool);\n+static rtx xtensa_libcall_value (enum machine_mode, const_rtx);\n+static bool xtensa_function_value_regno_p (const unsigned int);\n static unsigned int xtensa_function_arg_boundary (enum machine_mode,\n \t\t\t\t\t\t  const_tree);\n static void xtensa_init_builtins (void);\n@@ -220,6 +222,11 @@ static const struct default_options xtensa_option_optimization_table[] =\n #define TARGET_RETURN_IN_MEMORY xtensa_return_in_memory\n #undef TARGET_FUNCTION_VALUE\n #define TARGET_FUNCTION_VALUE xtensa_function_value\n+#undef TARGET_LIBCALL_VALUE\n+#define TARGET_LIBCALL_VALUE xtensa_libcall_value\n+#undef TARGET_FUNCTION_VALUE_REGNO_P\n+#define TARGET_FUNCTION_VALUE_REGNO_P xtensa_function_value_regno_p\n+\n #undef TARGET_SPLIT_COMPLEX_ARG\n #define TARGET_SPLIT_COMPLEX_ARG hook_bool_const_tree_true\n #undef TARGET_MUST_PASS_IN_STACK\n@@ -3496,6 +3503,24 @@ xtensa_function_value (const_tree valtype, const_tree func ATTRIBUTE_UNUSED,\n                      outgoing ? GP_OUTGOING_RETURN : GP_RETURN);\n }\n \n+/* Worker function for TARGET_LIBCALL_VALUE.  */\n+\n+static rtx\n+xtensa_libcall_value (enum machine_mode mode, const_rtx fun ATTRIBUTE_UNUSED)\n+{\n+  return gen_rtx_REG ((GET_MODE_CLASS (mode) == MODE_INT\n+\t\t       && GET_MODE_SIZE (mode) < UNITS_PER_WORD)\n+\t\t      ? SImode : mode, GP_RETURN);\n+}\n+\n+/* Worker function TARGET_FUNCTION_VALUE_REGNO_P.  */\n+\n+static bool\n+xtensa_function_value_regno_p (const unsigned int regno)\n+{\n+  return (regno == GP_RETURN);\n+}\n+\n /* The static chain is passed in memory.  Provide rtx giving 'mem'\n    expressions that denote where they are stored.  */\n "}, {"sha": "e465e8f634770ca942332dd87a1607bdaaeac1fd", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde8a3a47e4c13fd3ac3d6bb542c96020be65598/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=dde8a3a47e4c13fd3ac3d6bb542c96020be65598", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of Tensilica's Xtensa target machine for GNU compiler.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n@@ -539,33 +539,6 @@ extern const enum reg_class xtensa_regno_to_class[FIRST_PSEUDO_REGISTER];\n /* Don't worry about compatibility with PCC.  */\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n-/* Define how to find the value returned by a library function\n-   assuming the value has mode MODE.  Because we have defined\n-   TARGET_PROMOTE_FUNCTION_MODE to promote everything, we have to\n-   perform the same promotions as PROMOTE_MODE.  */\n-#define XTENSA_LIBCALL_VALUE(MODE, OUTGOINGP)\t\t\t\t\\\n-  gen_rtx_REG ((GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\\\n-\t\t&& GET_MODE_SIZE (MODE) < UNITS_PER_WORD)\t\t\\\n-\t       ? SImode : (MODE),\t\t\t\t\t\\\n-\t       OUTGOINGP ? GP_OUTGOING_RETURN : GP_RETURN)\n-\n-#define LIBCALL_VALUE(MODE)\t\t\t\t\t\t\\\n-  XTENSA_LIBCALL_VALUE ((MODE), 0)\n-\n-#define LIBCALL_OUTGOING_VALUE(MODE)\t\t\t \t\t\\\n-  XTENSA_LIBCALL_VALUE ((MODE), 1)\n-\n-/* A C expression that is nonzero if REGNO is the number of a hard\n-   register in which the values of called function may come back.  A\n-   register whose use for returning values is limited to serving as\n-   the second of a pair (for a value of type 'double', say) need not\n-   be recognized by this macro.  If the machine has register windows,\n-   so that the caller and the called function use different registers\n-   for the return value, this macro should recognize only the caller's\n-   register numbers.  */\n-#define FUNCTION_VALUE_REGNO_P(N)\t\t\t\t\t\\\n-  ((N) == GP_RETURN)\n-\n /* A C expression that is nonzero if REGNO is the number of a hard\n    register in which function arguments are sometimes passed.  This\n    does *not* include implicit arguments such as the static chain and"}]}