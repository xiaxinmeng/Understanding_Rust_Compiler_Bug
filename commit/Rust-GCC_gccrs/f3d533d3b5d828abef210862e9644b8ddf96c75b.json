{"sha": "f3d533d3b5d828abef210862e9644b8ddf96c75b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNkNTMzZDNiNWQ4MjhhYmVmMjEwODYyZTk2NDRiOGRkZjk2Yzc1Yg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-02-12T12:02:24Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-02-12T12:02:24Z"}, "message": "re PR lto/47225 (cross-compile fails while configuring libgcc with \"xgcc: fatal error: -fuse-linker-plugin, but liblto_plugin.so not found\")\n\nChangeLog:\nPR lto/47225\n* Makefile.def (lto-plugin): Double dash for enable-shared.\n(configure-gcc): Depend on all-lto-plugin.\n* Makefile.in: Rebuilt.\nlto-plugin/ChangeLog:\nPR lto/47225\n* Makefile.am (gcc_build_dir, in_gcc_libs): New.\n(liblto_plugin_la_LDFLAGS): Add -module.\n(copy_lto_plugin): Renamed to...\n($(in_gcc_libs)): ... this.  Add mkinstalldirs.  Skip copying\nof static modules.\n* Makefile.in: Rebuild.\ngcc/ChangeLog:\nPR lto/47225\n* configure.ac (gcc_cv_lto_plugin): Test for liblto_plugin.la\nin the current directory.\n* configure: Rebuilt.\n\nFrom-SVN: r170070", "tree": {"sha": "8bcfb9dcec7e48ff47e67ef09881b7425eafa407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bcfb9dcec7e48ff47e67ef09881b7425eafa407"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3d533d3b5d828abef210862e9644b8ddf96c75b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d533d3b5d828abef210862e9644b8ddf96c75b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d533d3b5d828abef210862e9644b8ddf96c75b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d533d3b5d828abef210862e9644b8ddf96c75b/comments", "author": null, "committer": null, "parents": [{"sha": "9d53403cd24de4e43af117c256dabda6a8035ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d53403cd24de4e43af117c256dabda6a8035ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d53403cd24de4e43af117c256dabda6a8035ee7"}], "stats": {"total": 93, "additions": 65, "deletions": 28}, "files": [{"sha": "afa98d1c5b1920e824682f06cf1eda030a2a621a", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -1,3 +1,10 @@\n+2011-02-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR lto/47225\n+\t* Makefile.def (lto-plugin): Double dash for enable-shared.\n+\t(configure-gcc): Depend on all-lto-plugin.\n+\t* Makefile.in: Rebuilt.\n+\n 2011-02-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac: Remove extra bracket."}, {"sha": "85b582c9944f55f700b3193b5be331b604693eaf", "filename": "Makefile.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -146,7 +146,7 @@ host_modules= { module= libtermcap; no_check=true;\n host_modules= { module= utils; no_check=true; };\n host_modules= { module= gnattools; };\n host_modules= { module= lto-plugin; bootstrap=true;\n-\t\textra_configure_flags=-enable-shared; };\n+\t\textra_configure_flags=--enable-shared; };\n \n target_modules = { module= libstdc++-v3;\n \t\t   bootstrap=true;\n@@ -322,7 +322,7 @@ dependencies = { module=all-build-fixincludes; on=all-build-libiberty; };\n \n // Host modules specific to gcc.\n dependencies = { module=configure-gcc; on=configure-intl; };\n-dependencies = { module=configure-gcc; on=configure-lto-plugin; };\n+dependencies = { module=configure-gcc; on=all-lto-plugin; };\n dependencies = { module=configure-gcc; on=all-binutils; };\n dependencies = { module=configure-gcc; on=all-gas; };\n dependencies = { module=configure-gcc; on=all-ld; };"}, {"sha": "660f8132246059d04011fbfa8b697ba407e9869c", "filename": "Makefile.in", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -45248,7 +45248,7 @@ configure-lto-plugin:\n \tlibsrcdir=\"$$s/lto-plugin\"; \\\n \t$(SHELL) $${libsrcdir}/configure \\\n \t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n-\t  --target=${target_alias} $${srcdiroption} -enable-shared \\\n+\t  --target=${target_alias} $${srcdiroption} --enable-shared \\\n \t  || exit 1\n @endif lto-plugin\n \n@@ -45283,7 +45283,7 @@ configure-stage1-lto-plugin:\n \t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n \t  --target=${target_alias} $${srcdiroption} \\\n \t  $(STAGE1_CONFIGURE_FLAGS) \\\n-\t  -enable-shared\n+\t  --enable-shared\n @endif lto-plugin-bootstrap\n \n .PHONY: configure-stage2-lto-plugin maybe-configure-stage2-lto-plugin\n@@ -45317,7 +45317,7 @@ configure-stage2-lto-plugin:\n \t  --target=${target_alias} $${srcdiroption} \\\n \t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n \t  $(STAGE2_CONFIGURE_FLAGS) \\\n-\t  -enable-shared\n+\t  --enable-shared\n @endif lto-plugin-bootstrap\n \n .PHONY: configure-stage3-lto-plugin maybe-configure-stage3-lto-plugin\n@@ -45351,7 +45351,7 @@ configure-stage3-lto-plugin:\n \t  --target=${target_alias} $${srcdiroption} \\\n \t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n \t  $(STAGE3_CONFIGURE_FLAGS) \\\n-\t  -enable-shared\n+\t  --enable-shared\n @endif lto-plugin-bootstrap\n \n .PHONY: configure-stage4-lto-plugin maybe-configure-stage4-lto-plugin\n@@ -45385,7 +45385,7 @@ configure-stage4-lto-plugin:\n \t  --target=${target_alias} $${srcdiroption} \\\n \t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n \t  $(STAGE4_CONFIGURE_FLAGS) \\\n-\t  -enable-shared\n+\t  --enable-shared\n @endif lto-plugin-bootstrap\n \n .PHONY: configure-stageprofile-lto-plugin maybe-configure-stageprofile-lto-plugin\n@@ -45419,7 +45419,7 @@ configure-stageprofile-lto-plugin:\n \t  --target=${target_alias} $${srcdiroption} \\\n \t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n \t  $(STAGEprofile_CONFIGURE_FLAGS) \\\n-\t  -enable-shared\n+\t  --enable-shared\n @endif lto-plugin-bootstrap\n \n .PHONY: configure-stagefeedback-lto-plugin maybe-configure-stagefeedback-lto-plugin\n@@ -45453,7 +45453,7 @@ configure-stagefeedback-lto-plugin:\n \t  --target=${target_alias} $${srcdiroption} \\\n \t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n \t  $(STAGEfeedback_CONFIGURE_FLAGS) \\\n-\t  -enable-shared\n+\t  --enable-shared\n @endif lto-plugin-bootstrap\n \n \n@@ -60266,14 +60266,14 @@ configure-stage3-gcc: maybe-configure-stage3-intl\n configure-stage4-gcc: maybe-configure-stage4-intl\n configure-stageprofile-gcc: maybe-configure-stageprofile-intl\n configure-stagefeedback-gcc: maybe-configure-stagefeedback-intl\n-configure-gcc: maybe-configure-lto-plugin\n-\n-configure-stage1-gcc: maybe-configure-stage1-lto-plugin\n-configure-stage2-gcc: maybe-configure-stage2-lto-plugin\n-configure-stage3-gcc: maybe-configure-stage3-lto-plugin\n-configure-stage4-gcc: maybe-configure-stage4-lto-plugin\n-configure-stageprofile-gcc: maybe-configure-stageprofile-lto-plugin\n-configure-stagefeedback-gcc: maybe-configure-stagefeedback-lto-plugin\n+configure-gcc: maybe-all-lto-plugin\n+\n+configure-stage1-gcc: maybe-all-stage1-lto-plugin\n+configure-stage2-gcc: maybe-all-stage2-lto-plugin\n+configure-stage3-gcc: maybe-all-stage3-lto-plugin\n+configure-stage4-gcc: maybe-all-stage4-lto-plugin\n+configure-stageprofile-gcc: maybe-all-stageprofile-lto-plugin\n+configure-stagefeedback-gcc: maybe-all-stagefeedback-lto-plugin\n configure-gcc: maybe-all-binutils\n \n configure-stage1-gcc: maybe-all-stage1-binutils"}, {"sha": "143264b80c818681bc1b07794f175a1e172b293d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -1,3 +1,10 @@\n+2011-02-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR lto/47225\n+\t* configure.ac (gcc_cv_lto_plugin): Test for liblto_plugin.la\n+\tin the current directory.\n+\t* configure: Rebuilt.\n+\n 2011-02-12  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/darwin.c (darwin_override_options): Add a hunk missed"}, {"sha": "340c81511793becd9056198e5334619caf0bf287", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -23125,7 +23125,7 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker plugin support\" >&5\n $as_echo_n \"checking linker plugin support... \" >&6; }\n gcc_cv_lto_plugin=no\n-if test -f ../lto-plugin/Makefile ; then\n+if test -f liblto_plugin.la; then\n   if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET=\" = x\"$gcc_cv_ld\"; then\n     if test x\"$ld_is_gold\" = xyes; then\n       gcc_cv_lto_plugin=yes"}, {"sha": "0c065e0de9bbdff95f971602607713579a31e05a", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -3174,7 +3174,7 @@ fi\n \n AC_MSG_CHECKING(linker plugin support)\n gcc_cv_lto_plugin=no\n-if test -f ../lto-plugin/Makefile ; then\n+if test -f liblto_plugin.la; then\n   if test $in_tree_ld = yes -a x\"$ORIGINAL_PLUGIN_LD_FOR_TARGET=\" = x\"$gcc_cv_ld\"; then\n     if test x\"$ld_is_gold\" = xyes; then\n       gcc_cv_lto_plugin=yes"}, {"sha": "9355ea57dfc35ff177bc5c686c959d5b8d7a1cf7", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -1,3 +1,13 @@\n+2011-02-12  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR lto/47225\n+\t* Makefile.am (gcc_build_dir, in_gcc_libs): New.\n+\t(liblto_plugin_la_LDFLAGS): Add -module.\n+\t(copy_lto_plugin): Renamed to...\n+\t($(in_gcc_libs)): ... this.  Add mkinstalldirs.  Skip copying\n+\tof static modules.\n+\t* Makefile.in: Rebuild.\n+\n 2011-02-07  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR lto/47225"}, {"sha": "fd9ea625f9bf3fd4ae1fceeb170d063b20d488cd", "filename": "lto-plugin/Makefile.am", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/lto-plugin%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/lto-plugin%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.am?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -12,6 +12,8 @@ AM_CFLAGS = -Wall -Werror\n AM_LIBTOOLFLAGS = --tag=disable-static\n \n libexecsub_LTLIBRARIES = liblto_plugin.la\n+gcc_build_dir = ../gcc\n+in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n \n # Can be removed when libiberty becomes a normal convenience library\n Wc=-Wc,\n@@ -20,13 +22,17 @@ liblto_plugin_la_SOURCES = lto-plugin.c\n liblto_plugin_la_LIBADD = \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wc)../libiberty/pic/libiberty.a,)\n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n-liblto_plugin_la_LDFLAGS = $(lt_host_flags) -bindir $(libexecsubdir) \\\n+liblto_plugin_la_LDFLAGS = $(lt_host_flags) -module -bindir $(libexecsubdir) \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a)\n liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\\n \t../libiberty/pic/libiberty.a),../libiberty/pic/libiberty.a,)\n \n-all: copy_lto_plugin\n-\n-copy_lto_plugin: all-am\n-\t$(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $(libexecsub_LTLIBRARIES) `pwd`/../gcc/\n+all: $(in_gcc_libs)\n \n+$(in_gcc_libs) : $(gcc_build_dir)/%: %\n+\t@if test \"X`dlname=; . ./$*; echo dlname:$$dlname`\" = \"Xdlname:\"; then \\\n+\t  echo WARNING: $* is static, not copying to $@ >&2 ; \\\n+\telse \\\n+\t  $(mkinstalldirs) $(gcc_build_dir) && \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $* `pwd`/$@ ; \\\n+\tfi"}, {"sha": "c5192041703dd288d6f13f52993435ac8053dfe3", "filename": "lto-plugin/Makefile.in", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d533d3b5d828abef210862e9644b8ddf96c75b/lto-plugin%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d533d3b5d828abef210862e9644b8ddf96c75b/lto-plugin%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FMakefile.in?ref=f3d533d3b5d828abef210862e9644b8ddf96c75b", "patch": "@@ -230,6 +230,8 @@ AM_CPPFLAGS = -I$(top_srcdir)/../include $(DEFS)\n AM_CFLAGS = -Wall -Werror\n AM_LIBTOOLFLAGS = --tag=disable-static\n libexecsub_LTLIBRARIES = liblto_plugin.la\n+gcc_build_dir = ../gcc\n+in_gcc_libs = $(foreach lib, $(libexecsub_LTLIBRARIES), $(gcc_build_dir)/$(lib))\n \n # Can be removed when libiberty becomes a normal convenience library\n Wc = -Wc,\n@@ -238,7 +240,7 @@ liblto_plugin_la_LIBADD = \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),$(Wc)../libiberty/pic/libiberty.a,)\n \n # Note that we intentionally override the bindir supplied by ACX_LT_HOST_FLAGS\n-liblto_plugin_la_LDFLAGS = $(lt_host_flags) -bindir $(libexecsubdir) \\\n+liblto_plugin_la_LDFLAGS = $(lt_host_flags) -module -bindir $(libexecsubdir) \\\n \t$(if $(wildcard ../libiberty/pic/libiberty.a),,-Wc,../libiberty/libiberty.a)\n \n liblto_plugin_la_DEPENDENCIES = $(if $(wildcard \\\n@@ -530,10 +532,15 @@ uninstall-am: uninstall-libexecsubLTLIBRARIES\n \ttags uninstall uninstall-am uninstall-libexecsubLTLIBRARIES\n \n \n-all: copy_lto_plugin\n+all: $(in_gcc_libs)\n \n-copy_lto_plugin: all-am\n-\t$(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $(libexecsub_LTLIBRARIES) `pwd`/../gcc/\n+$(in_gcc_libs) : $(gcc_build_dir)/%: %\n+\t@if test \"X`dlname=; . ./$*; echo dlname:$$dlname`\" = \"Xdlname:\"; then \\\n+\t  echo WARNING: $* is static, not copying to $@ >&2 ; \\\n+\telse \\\n+\t  $(mkinstalldirs) $(gcc_build_dir) && \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $* `pwd`/$@ ; \\\n+\tfi\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."}]}