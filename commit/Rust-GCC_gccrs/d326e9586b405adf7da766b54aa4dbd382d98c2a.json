{"sha": "d326e9586b405adf7da766b54aa4dbd382d98c2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMyNmU5NTg2YjQwNWFkZjdkYTc2NmI1NGFhNGRiZDM4MmQ5OGMyYQ==", "commit": {"author": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2020-03-23T18:37:02Z"}, "committer": {"name": "Lewis Hyatt", "email": "lhyatt@gmail.com", "date": "2020-03-23T18:37:02Z"}, "message": "driver: Improve the generated help text for alias options\n\ngcc/ChangeLog:\n\n2020-03-23  Lewis Hyatt  <lhyatt@gmail.com>\n\n\t* opts.c (print_filtered_help): Improve the help text for alias options.", "tree": {"sha": "457bd1266e906f6f5ad2569431977d5d892d264e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/457bd1266e906f6f5ad2569431977d5d892d264e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d326e9586b405adf7da766b54aa4dbd382d98c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d326e9586b405adf7da766b54aa4dbd382d98c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d326e9586b405adf7da766b54aa4dbd382d98c2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d326e9586b405adf7da766b54aa4dbd382d98c2a/comments", "author": null, "committer": null, "parents": [{"sha": "88c9a831f3a54a17e9722e15cb99459e21bccaad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c9a831f3a54a17e9722e15cb99459e21bccaad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c9a831f3a54a17e9722e15cb99459e21bccaad"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "4509447caa3e7627e58acf8e4264af2089997b90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d326e9586b405adf7da766b54aa4dbd382d98c2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d326e9586b405adf7da766b54aa4dbd382d98c2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d326e9586b405adf7da766b54aa4dbd382d98c2a", "patch": "@@ -1,3 +1,7 @@\n+2020-03-23  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* opts.c (print_filtered_help): Improve the help text for alias options.\n+\n 2020-03-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n             Andre Vieira  <andre.simoesdiasvieira@arm.com>\n             Mihail Ionescu  <mihail.ionescu@arm.com>"}, {"sha": "5dc7d65dedd244b65d239b995fc20f78cc28a4bf", "filename": "gcc/opts.c", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d326e9586b405adf7da766b54aa4dbd382d98c2a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d326e9586b405adf7da766b54aa4dbd382d98c2a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=d326e9586b405adf7da766b54aa4dbd382d98c2a", "patch": "@@ -1315,14 +1315,31 @@ print_filtered_help (unsigned int include_flags,\n       if (option->alias_target < N_OPTS\n \t  && cl_options [option->alias_target].help)\n \t{\n+\t  const struct cl_option *target = cl_options + option->alias_target;\n \t  if (option->help == NULL)\n \t    {\n-\t      /* For undocumented options that are aliases for other options\n-\t\t that are documented, point the reader to the other option in\n-\t\t preference of the former.  */\n-\t      snprintf (new_help, sizeof new_help,\n-\t\t\t_(\"Same as %s.  Use the latter option instead.\"),\n-\t\t\tcl_options [option->alias_target].opt_text);\n+\t      /* The option is undocumented but is an alias for an option that\n+\t\t is documented.  If the option has alias arguments, then its\n+\t\t purpose is to provide certain arguments to the other option, so\n+\t\t inform the reader of this.  Otherwise, point the reader to the\n+\t\t other option in preference to the former.  */\n+\n+\t      if (option->alias_arg)\n+\t\t{\n+\t\t  if (option->neg_alias_arg)\n+\t\t    snprintf (new_help, sizeof new_help,\n+\t\t\t      _(\"Same as %s%s (or, in negated form, %s%s).\"),\n+\t\t\t      target->opt_text, option->alias_arg,\n+\t\t\t      target->opt_text, option->neg_alias_arg);\n+\t\t  else\n+\t\t    snprintf (new_help, sizeof new_help,\n+\t\t\t      _(\"Same as %s%s.\"),\n+\t\t\t      target->opt_text, option->alias_arg);\n+\t\t}\n+\t      else\n+\t\tsnprintf (new_help, sizeof new_help,\n+\t\t\t  _(\"Same as %s.\"),\n+\t\t\t  target->opt_text);\n \t    }\n \t  else\n \t    {"}]}