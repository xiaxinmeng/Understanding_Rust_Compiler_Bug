{"sha": "e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTllY2FjMzA2Yjk3MmE0NWUyYTZhNDM4NWJkZjJiZGM3ZjdlZDY4Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-14T14:12:24Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-14T14:12:24Z"}, "message": "P0935R0 Eradicating unnecessarily explicit default constructors\n\nMore pieces of P0935R0, making default constructors non-explicit.\n\n\t* include/backward/strstream (strstreambuf): Add non-explicit default\n\tconstructor.\n\t* include/bits/locale_conv.h (wbuffer_convert, wstring_convert):\n\tLikewise.\n\t* include/bits/regex.h (match_results): Likewise.\n\t* testsuite/22_locale/conversions/buffer/1.cc: Test for non-explicit\n\tdefault constructor.\n\t* testsuite/22_locale/conversions/string/1.cc: Likewise.\n\t* testsuite/28_regex/match_results/ctors/char/default.cc: Likewise.\n\t* testsuite/28_regex/match_results/ctors/wchar_t/default.cc: Likewise.\n\nFrom-SVN: r261597", "tree": {"sha": "1588c66da6304cb6c241c08dbf17f45ed0186a09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1588c66da6304cb6c241c08dbf17f45ed0186a09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74755c6afcf45be8723e30f08b6e38ec105a636a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74755c6afcf45be8723e30f08b6e38ec105a636a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74755c6afcf45be8723e30f08b6e38ec105a636a"}], "stats": {"total": 79, "additions": 68, "deletions": 11}, "files": [{"sha": "94541d1a68dcad84319745536b85d815dacc91bf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -1,5 +1,17 @@\n 2018-06-14  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tP0935R0 Eradicating unnecessarily explicit default constructors\n+\t* include/backward/strstream (strstreambuf): Add non-explicit default\n+\tconstructor.\n+\t* include/bits/locale_conv.h (wbuffer_convert, wstring_convert):\n+\tLikewise.\n+\t* include/bits/regex.h (match_results): Likewise.\n+\t* testsuite/22_locale/conversions/buffer/1.cc: Test for non-explicit\n+\tdefault constructor.\n+\t* testsuite/22_locale/conversions/string/1.cc: Likewise.\n+\t* testsuite/28_regex/match_results/ctors/char/default.cc: Likewise.\n+\t* testsuite/28_regex/match_results/ctors/wchar_t/default.cc: Likewise.\n+\n \t* include/std/tuple (__cpp_lib_tuple_element_t): Move feature test\n \tmacro from <utility> and change type to long.\n \t* include/std/utility (__cpp_lib_tuple_element_t): Remove."}, {"sha": "566ad8cd1301e8a91f98736b723e2b703ba43676", "filename": "libstdc++-v3/include/backward/strstream", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fstrstream?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -68,7 +68,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   public:\n     // Constructor, destructor\n+#if __cplusplus >= 201103L\n+    strstreambuf() : strstreambuf(0) { }\n+    explicit strstreambuf(streamsize __initial_capacity);\n+#else\n     explicit strstreambuf(streamsize __initial_capacity = 0);\n+#endif\n     strstreambuf(void* (*__alloc)(size_t), void (*__free)(void*));\n \n     strstreambuf(char* __get, streamsize __n, char* __put = 0) throw ();"}, {"sha": "e9b684b4f98850f0152861a8189b230ef77bea87", "filename": "libstdc++-v3/include/bits/locale_conv.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -174,14 +174,17 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       typedef typename _Codecvt::state_type \t\t\t   state_type;\n       typedef typename wide_string::traits_type::int_type\t   int_type;\n \n-      /** Default constructor.\n+      /// Default constructor.\n+      wstring_convert() : _M_cvt(new _Codecvt()) { }\n+\n+      /** Constructor.\n        *\n        * @param  __pcvt The facet to use for conversions.\n        *\n        * Takes ownership of @p __pcvt and will delete it in the destructor.\n        */\n       explicit\n-      wstring_convert(_Codecvt* __pcvt = new _Codecvt()) : _M_cvt(__pcvt)\n+      wstring_convert(_Codecvt* __pcvt) : _M_cvt(__pcvt)\n       {\n \tif (!_M_cvt)\n \t  __throw_logic_error(\"wstring_convert\");\n@@ -325,7 +328,10 @@ _GLIBCXX_END_NAMESPACE_CXX11\n     public:\n       typedef typename _Codecvt::state_type state_type;\n \n-      /** Default constructor.\n+      /// Default constructor.\n+      wbuffer_convert() : wbuffer_convert(nullptr) { }\n+\n+      /** Constructor.\n        *\n        * @param  __bytebuf The underlying byte stream buffer.\n        * @param  __pcvt    The facet to use for conversions.\n@@ -334,7 +340,7 @@ _GLIBCXX_END_NAMESPACE_CXX11\n        * Takes ownership of @p __pcvt and will delete it in the destructor.\n        */\n       explicit\n-      wbuffer_convert(streambuf* __bytebuf = 0, _Codecvt* __pcvt = new _Codecvt,\n+      wbuffer_convert(streambuf* __bytebuf, _Codecvt* __pcvt = new _Codecvt,\n \t\t      state_type __state = state_type())\n       : _M_buf(__bytebuf), _M_cvt(__pcvt), _M_state(__state)\n       {"}, {"sha": "6b6501e98ae546b967b5f2e2a7ffcb8b34152d7c", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -1600,12 +1600,17 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       /**\n        * @brief Constructs a default %match_results container.\n        * @post size() returns 0 and str() returns an empty string.\n+       * @{\n        */\n+      match_results() : match_results(_Alloc()) { }\n+\n       explicit\n-      match_results(const _Alloc& __a = _Alloc()) noexcept\n+      match_results(const _Alloc& __a) noexcept\n       : _Base_type(__a)\n       { }\n \n+      // @}\n+\n       /**\n        * @brief Copy constructs a %match_results.\n        */"}, {"sha": "0f3f9ffb35a646c41ec14c35fb39fa03329a0549", "filename": "libstdc++-v3/testsuite/22_locale/conversions/buffer/1.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fbuffer%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fbuffer%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fbuffer%2F1.cc?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -22,6 +22,7 @@\n #include <locale>\n #include <sstream>\n #include <testsuite_hooks.h>\n+#include <testsuite_common_types.h>\n \n template<typename Elem>\n struct cvt : std::codecvt<Elem, char, std::mbstate_t> { };\n@@ -42,6 +43,9 @@ void test01()\n   VERIFY( buf.rdbuf(&sbuf) == nullptr );\n   VERIFY( buf.rdbuf() == &sbuf );\n   VERIFY( buf.rdbuf(nullptr) == &sbuf );\n+\n+  __gnu_test::implicitly_default_constructible test;\n+  test.operator()<buf_conv<wchar_t>>(); // P0935R0\n }\n \n void test02()"}, {"sha": "a2a8641d520f046aa92200f6379de5c481f19771", "filename": "libstdc++-v3/testsuite/22_locale/conversions/string/1.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fconversions%2Fstring%2F1.cc?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -22,6 +22,7 @@\n #include <locale>\n #include <string>\n #include <testsuite_hooks.h>\n+#include <testsuite_common_types.h>\n \n template<typename Elem>\n struct cvt : std::codecvt<Elem, char, std::mbstate_t> { };\n@@ -43,6 +44,9 @@ void test01()\n   string roundtrip = c.to_bytes(output);\n   VERIFY( input == roundtrip );\n   VERIFY( c.converted() == roundtrip.length() );\n+\n+  __gnu_test::implicitly_default_constructible test;\n+  test.operator()<sc>(); // P0935R0\n }\n \n void test02()\n@@ -64,6 +68,9 @@ void test02()\n   VERIFY( c.to_bytes(output[0]) == input.substr(0, 1) );\n   VERIFY( c.to_bytes(output.c_str()) == input );\n   VERIFY( c.to_bytes(output.data(), output.data()+output.size()) == input );\n+\n+  __gnu_test::implicitly_default_constructible test;\n+  test.operator()<wsc>(); // P0935R0\n }\n \n int main()"}, {"sha": "1023ad44d3e7d1b44529d0fabe671c821760b820", "filename": "libstdc++-v3/testsuite/28_regex/match_results/ctors/char/default.cc", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fctors%2Fchar%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fctors%2Fchar%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fctors%2Fchar%2Fdefault.cc?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -23,8 +23,9 @@\n \n #include <regex>\n #include <testsuite_hooks.h>\n+#include <testsuite_common_types.h>\n \n-// Tests default constructor of the match_result class.  \n+// Tests default constructor of the match_result class.\n void test01()\n {\n   std::cmatch cm;\n@@ -43,10 +44,18 @@ void test02()\n   VERIFY( sm.begin() == sm.end() ); // PR libstdc++/83600\n }\n \n+void test03()\n+{\n+  // P0935R0\n+  __gnu_test::implicitly_default_constructible test;\n+  test.operator()<std::cmatch>();\n+  test.operator()<std::smatch>();\n+}\n+\n int\n main()\n-{ \n+{\n   test01();\n   test02();\n-  return 0;\n+  test03();\n }"}, {"sha": "f533f0ed402627dd5bc64a489d76f4c2bb59b6d0", "filename": "libstdc++-v3/testsuite/28_regex/match_results/ctors/wchar_t/default.cc", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fctors%2Fwchar_t%2Fdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fctors%2Fwchar_t%2Fdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fmatch_results%2Fctors%2Fwchar_t%2Fdefault.cc?ref=e9ecac306b972a45e2a6a4385bdf2bdc7f7ed68c", "patch": "@@ -23,8 +23,9 @@\n \n #include <regex>\n #include <testsuite_hooks.h>\n+#include <testsuite_common_types.h>\n \n-// Tests default constructor of the match_result class.  \n+// Tests default constructor of the match_result class.\n void test01()\n {\n   std::wcmatch cm;\n@@ -43,10 +44,18 @@ void test02()\n   VERIFY( sm.begin() == sm.end() ); // PR libstdc++/83600\n }\n \n+void test03()\n+{\n+  // P0935R0\n+  __gnu_test::implicitly_default_constructible test;\n+  test.operator()<std::wcmatch>();\n+  test.operator()<std::wsmatch>();\n+}\n+\n int\n main()\n-{ \n+{\n   test01();\n   test02();\n-  return 0;\n+  test03();\n }"}]}