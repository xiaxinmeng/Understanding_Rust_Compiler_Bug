{"sha": "48f3e29b3804ae097bd90258457de373ed02dd80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmM2UyOWIzODA0YWUwOTdiZDkwMjU4NDU3ZGUzNzNlZDAyZGQ4MA==", "commit": {"author": {"name": "Philippe De Muyter", "email": "phdm@macqel.be", "date": "2000-06-08T07:29:53Z"}, "committer": {"name": "Philippe De Muyter", "email": "phdm@gcc.gnu.org", "date": "2000-06-08T07:29:53Z"}, "message": "cp-demangle.c (stdio.h): File included unconditionaly.\n\n\t* cp-demangle.c (stdio.h): File included unconditionaly.\n\t(template_arg_list_new): Parameter list is PARAMS ((void)), not ().\n\t* dyn-string.c (stdio.h): File included.\n\t* partition.c (partition_print): No `&' needed to take the address of\n\ta function.\n\nFrom-SVN: r34450", "tree": {"sha": "999aee73b1806e604e7b73860639851ee3697973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/999aee73b1806e604e7b73860639851ee3697973"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f3e29b3804ae097bd90258457de373ed02dd80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f3e29b3804ae097bd90258457de373ed02dd80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f3e29b3804ae097bd90258457de373ed02dd80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f3e29b3804ae097bd90258457de373ed02dd80/comments", "author": {"login": "phdm", "id": 2923420, "node_id": "MDQ6VXNlcjI5MjM0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2923420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phdm", "html_url": "https://github.com/phdm", "followers_url": "https://api.github.com/users/phdm/followers", "following_url": "https://api.github.com/users/phdm/following{/other_user}", "gists_url": "https://api.github.com/users/phdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/phdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phdm/subscriptions", "organizations_url": "https://api.github.com/users/phdm/orgs", "repos_url": "https://api.github.com/users/phdm/repos", "events_url": "https://api.github.com/users/phdm/events{/privacy}", "received_events_url": "https://api.github.com/users/phdm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5667abce2904b9b040ffb51d79da04545503bf6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5667abce2904b9b040ffb51d79da04545503bf6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5667abce2904b9b040ffb51d79da04545503bf6c"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "a86839693951f29a12e2a9ad5414bde920e0d19c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=48f3e29b3804ae097bd90258457de373ed02dd80", "patch": "@@ -1,3 +1,11 @@\n+Thu Jun  8 09:25:54 2000  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* cp-demangle.c (stdio.h): File included unconditionaly.\n+\t(template_arg_list_new): Parameter list is PARAMS ((void)), not ().\n+\t* dyn-string.c (stdio.h): File included.\n+\t* partition.c (partition_print): No `&' needed to take the address of\n+\ta function.\n+\n 2000-06-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (ac_libiberty_warn_cflags): Add -pedantic."}, {"sha": "58aed0d5f4fda15dadb005056ace043db8a8a185", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=48f3e29b3804ae097bd90258457de373ed02dd80", "patch": "@@ -33,9 +33,7 @@\n #include <stdlib.h>\n #endif\n \n-#if defined(CP_DEMANGLE_DEBUG) || defined(STANDALONE_DEMANGLER)\n #include <stdio.h>\n-#endif\n \n #ifdef HAVE_STRING_H\n #include <string.h>\n@@ -514,7 +512,7 @@ substitutions_print (dm, fp)\n /* Creates a new template argument list.  */\n \n static template_arg_list_t\n-template_arg_list_new ()\n+template_arg_list_new PARAMS((void))\n {\n   template_arg_list_t new_list \n     = (template_arg_list_t) xmalloc (sizeof (struct template_arg_list_def));"}, {"sha": "f4a9d9a74f8368c44874145ebeb4a6f469a7bb65", "filename": "libiberty/dyn-string.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2Fdyn-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2Fdyn-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fdyn-string.c?ref=48f3e29b3804ae097bd90258457de373ed02dd80", "patch": "@@ -23,6 +23,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #endif\n \n+#include <stdio.h>\n+\n #ifdef HAVE_STRING_H\n #include <string.h>\n #endif"}, {"sha": "a5a734937ae9edb7d3fcf55eb7afbe3399a71efc", "filename": "libiberty/partition.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2Fpartition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f3e29b3804ae097bd90258457de373ed02dd80/libiberty%2Fpartition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpartition.c?ref=48f3e29b3804ae097bd90258457de373ed02dd80", "patch": "@@ -177,7 +177,7 @@ partition_print (part, fp)\n \t  c = elements[c].next - elements;\n \t}\n \t/* Sort them.  */\n-\tqsort ((void *) class_elements, count, sizeof (int), &elem_compare);\n+\tqsort ((void *) class_elements, count, sizeof (int), elem_compare);\n \t/* Print them.  */\n \tfputc ('(', fp);\n \tfor (i = 0; i < count; ++i) "}]}