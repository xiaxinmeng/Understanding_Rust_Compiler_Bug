{"sha": "d07a3fed35de9508708429980aad386c53fdad61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA3YTNmZWQzNWRlOTUwODcwODQyOTk4MGFhZDM4NmM1M2ZkYWQ2MQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2014-06-19T12:21:13Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2014-06-19T12:21:13Z"}, "message": "Fix aarch64_emit_call_insn return type\n\n2014-06-19  Tom de Vries  <tom@codesourcery.com>\n\n\t* config/aarch64/aarch64-protos.h (aarch64_emit_call_insn): Change\n\treturn type to void.\n\t* config/aarch64/aarch64.c (aarch64_emit_call_insn): Same.\n\nFrom-SVN: r211823", "tree": {"sha": "bfe4230db01d9d41daf5e4d3b6ccd7772ae645ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfe4230db01d9d41daf5e4d3b6ccd7772ae645ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d07a3fed35de9508708429980aad386c53fdad61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07a3fed35de9508708429980aad386c53fdad61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d07a3fed35de9508708429980aad386c53fdad61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d07a3fed35de9508708429980aad386c53fdad61/comments", "author": null, "committer": null, "parents": [{"sha": "c8d599e1ddb1947d5c4c48a8c9aa45c52d9159a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d599e1ddb1947d5c4c48a8c9aa45c52d9159a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d599e1ddb1947d5c4c48a8c9aa45c52d9159a8"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3e43695dc88c8dd676a722ed2f51f96a8cda2e46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07a3fed35de9508708429980aad386c53fdad61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07a3fed35de9508708429980aad386c53fdad61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d07a3fed35de9508708429980aad386c53fdad61", "patch": "@@ -1,3 +1,9 @@\n+2014-06-19  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* config/aarch64/aarch64-protos.h (aarch64_emit_call_insn): Change\n+\treturn type to void.\n+\t* config/aarch64/aarch64.c (aarch64_emit_call_insn): Same.\n+\n 2014-06-19  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n \n \t* loop-invariant.c (get_inv_cost): Skip invariants, which are marked"}, {"sha": "53023bab4c3f3ac801a7068b7573863b198d1e93", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07a3fed35de9508708429980aad386c53fdad61/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07a3fed35de9508708429980aad386c53fdad61/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=d07a3fed35de9508708429980aad386c53fdad61", "patch": "@@ -245,7 +245,7 @@ void aarch64_init_cumulative_args (CUMULATIVE_ARGS *, const_tree, rtx,\n void aarch64_init_expanders (void);\n void aarch64_print_operand (FILE *, rtx, char);\n void aarch64_print_operand_address (FILE *, rtx);\n-bool aarch64_emit_call_insn (rtx);\n+void aarch64_emit_call_insn (rtx);\n \n /* Initialize builtins for SIMD intrinsics.  */\n void init_aarch64_simd_builtins (void);"}, {"sha": "f0aafbd5b554f810b9485189fdfd6ea01557a315", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d07a3fed35de9508708429980aad386c53fdad61/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d07a3fed35de9508708429980aad386c53fdad61/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d07a3fed35de9508708429980aad386c53fdad61", "patch": "@@ -3395,7 +3395,7 @@ aarch64_fixed_condition_code_regs (unsigned int *p1, unsigned int *p2)\n \n /* Emit call insn with PAT and do aarch64-specific handling.  */\n \n-bool\n+void\n aarch64_emit_call_insn (rtx pat)\n {\n   rtx insn = emit_call_insn (pat);"}]}