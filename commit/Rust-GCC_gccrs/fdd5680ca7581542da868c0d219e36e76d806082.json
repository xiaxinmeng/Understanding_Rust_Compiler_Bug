{"sha": "fdd5680ca7581542da868c0d219e36e76d806082", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRkNTY4MGNhNzU4MTU0MmRhODY4YzBkMjE5ZTM2ZTc2ZDgwNjA4Mg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-04-27T18:18:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-04-27T18:18:45Z"}, "message": "df: make df_problem instances \"const\"\n\nThe various struct df_problem instances are constant data; mark them\nas such.\n\ngcc/ChangeLog:\n\t* df-core.c (df_add_problem): Make the problem param be const.\n\t(df_remove_problem): Make local \"problem\" be const.\n\t* df-problems.c (problem_RD): Make const.\n\t(problem_LR): Likewise.\n\t(problem_LIVE): Likewise.\n\t(problem_MIR): Likewise.\n\t(problem_CHAIN): Likewise.\n\t(problem_WORD_LR): Likewise.\n\t(problem_NOTE): Likewise.\n\t(problem_MD): Likewise.\n\t* df-scan.c (problem_SCAN): Likewise.\n\t* df.h (struct df_problem): Make field \"dependent_problem\" be\n\tconst.\n\t(struct dataflow): Likewise for field \"problem\".\n\t(df_add_problem): Make param const.\n\nFrom-SVN: r235524", "tree": {"sha": "c849235ee7d2d12dc908fe717f2c035f003c47b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c849235ee7d2d12dc908fe717f2c035f003c47b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdd5680ca7581542da868c0d219e36e76d806082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd5680ca7581542da868c0d219e36e76d806082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd5680ca7581542da868c0d219e36e76d806082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd5680ca7581542da868c0d219e36e76d806082/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98544adc26c0f956ecf63495749f029e3943bc31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98544adc26c0f956ecf63495749f029e3943bc31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98544adc26c0f956ecf63495749f029e3943bc31"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "d894e8cb5de2a92ecf91d8704497748ebe8bc239", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdd5680ca7581542da868c0d219e36e76d806082", "patch": "@@ -1,3 +1,21 @@\n+2016-04-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* df-core.c (df_add_problem): Make the problem param be const.\n+\t(df_remove_problem): Make local \"problem\" be const.\n+\t* df-problems.c (problem_RD): Make const.\n+\t(problem_LR): Likewise.\n+\t(problem_LIVE): Likewise.\n+\t(problem_MIR): Likewise.\n+\t(problem_CHAIN): Likewise.\n+\t(problem_WORD_LR): Likewise.\n+\t(problem_NOTE): Likewise.\n+\t(problem_MD): Likewise.\n+\t* df-scan.c (problem_SCAN): Likewise.\n+\t* df.h (struct df_problem): Make field \"dependent_problem\" be\n+\tconst.\n+\t(struct dataflow): Likewise for field \"problem\".\n+\t(df_add_problem): Make param const.\n+\n 2016-04-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_spill_class): Enable for TARGET_SSE2 when"}, {"sha": "c1e97146e312ab2b2a4b0fbdaeed23d2272fa6ca", "filename": "gcc/df-core.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=fdd5680ca7581542da868c0d219e36e76d806082", "patch": "@@ -411,7 +411,7 @@ struct df_d *df;\n /* Add PROBLEM (and any dependent problems) to the DF instance.  */\n \n void\n-df_add_problem (struct df_problem *problem)\n+df_add_problem (const struct df_problem *problem)\n {\n   struct dataflow *dflow;\n   int i;\n@@ -584,7 +584,7 @@ df_set_blocks (bitmap blocks)\n void\n df_remove_problem (struct dataflow *dflow)\n {\n-  struct df_problem *problem;\n+  const struct df_problem *problem;\n   int i;\n \n   if (!dflow)"}, {"sha": "132c1276e89173b08b8ffa7dd33e6a4f7f2843e6", "filename": "gcc/df-problems.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=fdd5680ca7581542da868c0d219e36e76d806082", "patch": "@@ -668,7 +668,7 @@ df_rd_bottom_dump (basic_block bb, FILE *file)\n \n /* All of the information associated with every instance of the problem.  */\n \n-static struct df_problem problem_RD =\n+static const struct df_problem problem_RD =\n {\n   DF_RD,                      /* Problem id.  */\n   DF_FORWARD,                 /* Direction.  */\n@@ -1190,7 +1190,7 @@ df_lr_verify_solution_end (void)\n \n /* All of the information associated with every instance of the problem.  */\n \n-static struct df_problem problem_LR =\n+static const struct df_problem problem_LR =\n {\n   DF_LR,                      /* Problem id.  */\n   DF_BACKWARD,                /* Direction.  */\n@@ -1718,7 +1718,7 @@ df_live_verify_solution_end (void)\n \n /* All of the information associated with every instance of the problem.  */\n \n-static struct df_problem problem_LIVE =\n+static const struct df_problem problem_LIVE =\n {\n   DF_LIVE,                      /* Problem id.  */\n   DF_FORWARD,                   /* Direction.  */\n@@ -2169,7 +2169,7 @@ df_mir_verify_solution_end (void)\n \n /* All of the information associated with every instance of the problem.  */\n \n-static struct df_problem problem_MIR =\n+static const struct df_problem problem_MIR =\n {\n   DF_MIR,                       /* Problem id.  */\n   DF_FORWARD,                   /* Direction.  */\n@@ -2641,7 +2641,7 @@ df_chain_insn_bottom_dump (const rtx_insn *insn, FILE *file)\n     }\n }\n \n-static struct df_problem problem_CHAIN =\n+static const struct df_problem problem_CHAIN =\n {\n   DF_CHAIN,                   /* Problem id.  */\n   DF_NONE,                    /* Direction.  */\n@@ -3008,7 +3008,7 @@ df_word_lr_bottom_dump (basic_block bb, FILE *file)\n \n /* All of the information associated with every instance of the problem.  */\n \n-static struct df_problem problem_WORD_LR =\n+static const struct df_problem problem_WORD_LR =\n {\n   DF_WORD_LR,                      /* Problem id.  */\n   DF_BACKWARD,                     /* Direction.  */\n@@ -3683,7 +3683,7 @@ df_note_free (void)\n \n /* All of the information associated every instance of the problem.  */\n \n-static struct df_problem problem_NOTE =\n+static const struct df_problem problem_NOTE =\n {\n   DF_NOTE,                    /* Problem id.  */\n   DF_NONE,                    /* Direction.  */\n@@ -4693,7 +4693,7 @@ df_md_bottom_dump (basic_block bb, FILE *file)\n   df_print_regset (file, &bb_info->out);\n }\n \n-static struct df_problem problem_MD =\n+static const struct df_problem problem_MD =\n {\n   DF_MD,                      /* Problem id.  */\n   DF_FORWARD,                 /* Direction.  */"}, {"sha": "e6d01d600826a11b58e98a85358dd6dec3eac1bb", "filename": "gcc/df-scan.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=fdd5680ca7581542da868c0d219e36e76d806082", "patch": "@@ -396,7 +396,7 @@ df_scan_start_block (basic_block bb, FILE *file)\n #endif\n }\n \n-static struct df_problem problem_SCAN =\n+static const struct df_problem problem_SCAN =\n {\n   DF_SCAN,                    /* Problem id.  */\n   DF_NONE,                    /* Direction.  */"}, {"sha": "40c3794343acf382df7ec16931ed0ddd667a9939", "filename": "gcc/df.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdd5680ca7581542da868c0d219e36e76d806082/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=fdd5680ca7581542da868c0d219e36e76d806082", "patch": "@@ -275,7 +275,7 @@ struct df_problem {\n   df_dump_insn_problem_function dump_insn_bottom_fun;\n   df_verify_solution_start verify_start_fun;\n   df_verify_solution_end verify_end_fun;\n-  struct df_problem *dependent_problem;\n+  const struct df_problem *dependent_problem;\n   unsigned int block_info_elt_size;\n \n   /* The timevar id associated with this pass.  */\n@@ -290,7 +290,7 @@ struct df_problem {\n /* The specific instance of the problem to solve.  */\n struct dataflow\n {\n-  struct df_problem *problem;           /* The problem to be solved.  */\n+  const struct df_problem *problem;     /* The problem to be solved.  */\n \n   /* Array indexed by bb->index, that contains basic block problem and\n      solution specific information.  */\n@@ -948,7 +948,7 @@ extern struct df_d *df;\n \n /* Functions defined in df-core.c.  */\n \n-extern void df_add_problem (struct df_problem *);\n+extern void df_add_problem (const struct df_problem *);\n extern int df_set_flags (int);\n extern int df_clear_flags (int);\n extern void df_set_blocks (bitmap);"}]}