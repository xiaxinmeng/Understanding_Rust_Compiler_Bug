{"sha": "e5b792193379be3beab505f1a72fb4fedaf62e6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTViNzkyMTkzMzc5YmUzYmVhYjUwNWYxYTcyZmI0ZmVkYWY2MmU2Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-02-19T22:18:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-02-19T22:18:50Z"}, "message": "c-opts.c (warn_variadic_macros): New.\n\n        * c-opts.c (warn_variadic_macros): New.\n        (c_common_handle_option): Set it.\n        (sanitize_cpp_opts): Copy it to cpp_opts.\n        * c.opt (Wvariadic-macros): New.\n        * cpplib.h (struct cpp_options): Add warn_variadic_macros.\n        * cppinit.c (cpp_create_reader): Initialize it.\n        * cppmacro.c (parse_params): Check it.\n\nFrom-SVN: r78125", "tree": {"sha": "9effadec8dda0ac6017abf144d9416979aa975a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9effadec8dda0ac6017abf144d9416979aa975a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5b792193379be3beab505f1a72fb4fedaf62e6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b792193379be3beab505f1a72fb4fedaf62e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5b792193379be3beab505f1a72fb4fedaf62e6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5b792193379be3beab505f1a72fb4fedaf62e6b/comments", "author": null, "committer": null, "parents": [{"sha": "2df93cf3c4021f576c9381f6e25d9d847114f548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df93cf3c4021f576c9381f6e25d9d847114f548", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df93cf3c4021f576c9381f6e25d9d847114f548"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "6ab7b701cd2041324aaea62ef679eff36f99f902", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5b792193379be3beab505f1a72fb4fedaf62e6b", "patch": "@@ -1,3 +1,13 @@\n+2004-02-19  Richard Henderson  <rth@redhat.com>\n+\n+\t* c-opts.c (warn_variadic_macros): New.\n+\t(c_common_handle_option): Set it.\n+\t(sanitize_cpp_opts): Copy it to cpp_opts.\n+\t* c.opt (Wvariadic-macros): New.\n+\t* cpplib.h (struct cpp_options): Add warn_variadic_macros.\n+\t* cppinit.c (cpp_create_reader): Initialize it.\n+\t* cppmacro.c (parse_params): Check it.\n+\n 2004-02-19  David Daney <ddaney@avtrex.com>\n \n \tPR preprocessor/14198"}, {"sha": "c9b34db492169a61b745c76971de9f2ac18df9a0", "filename": "gcc/c-opts.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=e5b792193379be3beab505f1a72fb4fedaf62e6b", "patch": "@@ -88,6 +88,9 @@ static bool quote_chain_split;\n /* If -Wunused-macros.  */\n static bool warn_unused_macros;\n \n+/* If -Wvariadic-macros.  */\n+static bool warn_variadic_macros = true;\n+\n /* Number of deferred options.  */\n static size_t deferred_count;\n \n@@ -646,6 +649,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       warn_unused_macros = value;\n       break;\n \n+    case OPT_Wvariadic_macros:\n+      warn_variadic_macros = value;\n+      break;\n+\n     case OPT_Wwrite_strings:\n       if (!c_dialect_cxx ())\n \tflag_const_strings = value;\n@@ -1360,6 +1367,11 @@ sanitize_cpp_opts (void)\n   cpp_opts->warn_long_long\n     = warn_long_long && ((!flag_isoc99 && pedantic) || warn_traditional);\n \n+  /* Similarly with -Wno-variadic-macros.  No check for c99 here, since\n+     this also turns off warnings about GCCs extension.  */\n+  cpp_opts->warn_variadic_macros\n+    = warn_variadic_macros && (pedantic || warn_traditional);\n+\n   /* If we're generating preprocessor output, emit current directory\n      if explicitly requested or if debugging information is enabled.\n      ??? Maybe we should only do it for debugging formats that"}, {"sha": "0674627bb921f1d01a53143211398fed639536cc", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=e5b792193379be3beab505f1a72fb4fedaf62e6b", "patch": "@@ -399,6 +399,10 @@ Wunused-macros\n C ObjC C++ ObjC++\n Warn about macros defined in the main file that are not used\n \n+Wvariadic-macros\n+C ObjC C++ ObjC++\n+Do not warn about using variadic macros when -pedantic\n+\n Wwrite-strings\n C ObjC C++ ObjC++\n Give strings the type \\\"array of char\\\""}, {"sha": "a6da0b69b6f6186727d81ff6682260068a891b5d", "filename": "gcc/cppinit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=e5b792193379be3beab505f1a72fb4fedaf62e6b", "patch": "@@ -147,6 +147,7 @@ cpp_create_reader (enum c_lang lang, hash_table *table,\n   CPP_OPTION (pfile, warn_long_long) = !CPP_OPTION (pfile, c99);\n   CPP_OPTION (pfile, dollars_in_ident) = 1;\n   CPP_OPTION (pfile, warn_dollars) = 1;\n+  CPP_OPTION (pfile, warn_variadic_macros) = 1;\n \n   /* Default CPP arithmetic to something sensible for the host for the\n      benefit of dumb users like fix-header.  */"}, {"sha": "dddbac2a4517575df63cb48cef1c8c802862d8ea", "filename": "gcc/cpplib.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=e5b792193379be3beab505f1a72fb4fedaf62e6b", "patch": "@@ -283,6 +283,10 @@ struct cpp_options\n      promotions.  */\n   unsigned char warn_num_sign_change;\n \n+  /* Zero means don't warn about __VA_ARGS__ usage in c89 pedantic mode.\n+     Presumably the usage is protected by the appropriate #ifdef.  */\n+  unsigned char warn_variadic_macros;\n+\n   /* Nonzero means turn warnings into errors.  */\n   unsigned char warnings_are_errors;\n "}, {"sha": "065c3972016656fbebd8a481b145350486e11abc", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5b792193379be3beab505f1a72fb4fedaf62e6b/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=e5b792193379be3beab505f1a72fb4fedaf62e6b", "patch": "@@ -1327,11 +1327,14 @@ parse_params (cpp_reader *pfile, cpp_macro *macro)\n \t      _cpp_save_parameter (pfile, macro,\n \t\t\t\t   pfile->spec_nodes.n__VA_ARGS__);\n \t      pfile->state.va_args_ok = 1;\n-\t      if (! CPP_OPTION (pfile, c99) && CPP_OPTION (pfile, pedantic))\n+\t      if (! CPP_OPTION (pfile, c99)\n+\t\t  && CPP_OPTION (pfile, pedantic)\n+\t\t  && CPP_OPTION (pfile, warn_variadic_macros))\n \t\tcpp_error (pfile, CPP_DL_PEDWARN,\n \t\t\t   \"anonymous variadic macros were introduced in C99\");\n \t    }\n-\t  else if (CPP_OPTION (pfile, pedantic))\n+\t  else if (CPP_OPTION (pfile, pedantic)\n+\t\t   && CPP_OPTION (pfile, warn_variadic_macros))\n \t    cpp_error (pfile, CPP_DL_PEDWARN,\n \t\t       \"ISO C does not permit named variadic macros\");\n "}]}