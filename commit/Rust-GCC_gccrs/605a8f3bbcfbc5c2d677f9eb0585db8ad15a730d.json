{"sha": "605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjA1YThmM2JiY2ZiYzVjMmQ2NzdmOWViMDU4NWRiOGFkMTVhNzMwZA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-23T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-06-23T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "ec48eec9514c252e52d1980a546065e6e3c1cbfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec48eec9514c252e52d1980a546065e6e3c1cbfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/comments", "author": null, "committer": null, "parents": [{"sha": "0164e59835de81d758fd4c56248ad7a46435fbfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0164e59835de81d758fd4c56248ad7a46435fbfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0164e59835de81d758fd4c56248ad7a46435fbfa"}], "stats": {"total": 348, "additions": 347, "deletions": 1}, "files": [{"sha": "df8e512ae6696ab404f8e2487ff0c084a7ba7f76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,98 @@\n+2020-06-22  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/altivec.h: Use _ARCH_PWR10, not _ARCH_PWR_FUTURE.\n+\tUpdate comment for ISA 3.1.\n+\t* config/rs6000/altivec.md: Use TARGET_POWER10, not TARGET_FUTURE.\n+\t* config/rs6000/driver-rs6000.c (asm_names): Use -mpwr10 for power10\n+\ton AIX, and -mpower10 elsewhere.\n+\t* config/rs6000/future.md: Delete.\n+\t* config/rs6000/linux64.h: Update comments.  Use TARGET_POWER10, not\n+\tTARGET_FUTURE.\n+\t* config/rs6000/power10.md: New file.\n+\t* config/rs6000/ppc-auxv.h: Use PPC_PLATFORM_POWER10, not\n+\tPPC_PLATFORM_FUTURE.\n+\t* config/rs6000/rs6000-builtin.def: Update comments.  Use BU_P10V_*\n+\tnames instead of BU_FUTURE_V_* names.  Use RS6000_BTM_P10 instead of\n+\tRS6000_BTM_FUTURE.  Use P10_BUILTIN_* instead of FUTURE_BUILTIN_*.\n+\tUse BU_P10_* instead of BU_FUTURE_*.\n+\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Define\n+\t_ARCH_PWR10 instead of _ARCH_PWR_FUTURE.\n+\t(altivec_resolve_overloaded_builtin): Use P10_BUILTIN_VEC_XXEVAL, not\n+\tFUTURE_BUILTIN_VEC_XXEVAL.\n+\t* config/rs6000/rs6000-call.c: Use P10_BUILTIN_*, not FUTURE_BUILTIN_*.\n+\tUpdate compiler messages.\n+\t* config/rs6000/rs6000-cpus.def: Update comments.  Use ISA_3_1_*, not\n+\tISA_FUTURE_*.  Use OPTION_MASK_POWER10, not OPTION_MASK_FUTURE.\n+\t* config/rs6000/rs6000-opts.h: Use PROCESSOR_POWER10, not\n+\tPROCESSOR_FUTURE.\n+\t* config/rs6000/rs6000-string.c: Ditto.\n+\t* config/rs6000/rs6000-tables.opt (rs6000_cpu_opt_value): Use \"power10\"\n+\tinstead of \"future\", reorder it to right after \"power9\".\n+\t* config/rs6000/rs6000.c: Update comments.  Use OPTION_MASK_POWER10,\n+\tnot OPTION_MASK_FUTURE.  Use TARGET_POWER10, not TARGET_FUTURE.  Use\n+\tRS6000_BTM_P10, not RS6000_BTM_FUTURE.  Update compiler messages.\n+\tUse PROCESSOR_POWER10, not PROCESSOR_FUTURE.  Use ISA_3_1_MASKS_SERVER,\n+\tnot ISA_FUTURE_MASKS_SERVER.\n+\t(rs6000_opt_masks): Use \"power10\" instead of \"future\".\n+\t(rs6000_builtin_mask_names): Ditto.\n+\t(rs6000_disable_incompatible_switches): Ditto.\n+\t* config/rs6000/rs6000.h: Use -mpower10, not -mfuture.  Use\n+\t-mcpu=power10, not -mcpu=future.  Use MASK_POWER10, not MASK_FUTURE.\n+\tUse OPTION_MASK_POWER10, not OPTION_MASK_FUTURE.  Use RS6000_BTM_P10,\n+\tnot RS6000_BTM_FUTURE.\n+\t* config/rs6000/rs6000.md: Use \"power10\", not \"future\".  Use\n+\tTARGET_POWER10, not TARGET_FUTURE.  Include \"power10.md\", not\n+\t\"future.md\".\n+\t* config/rs6000/rs6000.opt (mfuture): Delete.\n+\t(mpower10): New.\n+\t* config/rs6000/t-rs6000: Use \"power10.md\", not \"future.md\".\n+\t* config/rs6000/vsx.md: Use TARGET_POWER10, not TARGET_FUTURE.\n+\n+2020-06-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* coretypes.h (first_type): Delete.\n+\t* recog.h (insn_gen_fn::operator()): Go back to using a decltype.\n+\n+2020-06-22  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\t* doc/sourcebuild.texi (arm_v8_1m_mve_fp_ok): Add item.\n+\t(arm_mve_hw): Likewise.\n+\n+2020-06-22  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/95791\n+\t* config/i386/i386.c (ix86_dirflag_mode_needed): Skip\n+\tEXT_REX_SSE_REG_P.\n+\n+2020-06-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95770\n+\t* tree-vect-slp.c (vect_schedule_slp_instance): Also consider\n+\texternal defs.\n+\n+2020-06-22  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn.c (gcn_function_arg): Disallow vector arguments.\n+\t(gcn_return_in_memory): Return vectors in memory.\n+\n+2020-06-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-general.c (omp_extract_for_data): For triangular loops with\n+\tall loop invariant expressions constant where the innermost loop is\n+\texecuted at least once compute number of iterations at compile time.\n+\n+2020-06-22  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv.h (ASM_SPEC): Remove riscv_expand_arch call.\n+\t(DRIVER_SELF_SPECS): New.\n+\n+2020-06-22  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv-builtins.c (RISCV_FTYPE_NAME0): New.\n+\t(RISCV_FTYPE_ATYPES0): New.\n+\t(riscv_builtins): Using RISCV_USI_FTYPE for frflags.\n+\t* config/riscv/riscv-ftypes.def: Remove VOID argument.\n+\n 2020-06-21  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config.gcc: Use t-aix64, biarch64 and default64 for cpu_is_64bit."}, {"sha": "01621c4e8201ef81fe28ff2fe429cecc3bf0efb7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1 +1 @@\n-20200622\n+20200623"}, {"sha": "a1fefe899eb8d92bce5cc2dc755878628ef534eb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,27 @@\n+2020-06-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/95708\n+\t* intrinsic.c (add_functions): Replace CLASS_INQUIRY with\n+\tCLASS_TRANSFORMATIONAL for intrinsic num_images.\n+\t(make_generic): Replace ACTUAL_NO with ACTUAL_YES for\n+\tintrinsic team_number.\n+\t* resolve.c (resolve_fl_procedure): Check pointer ts.u.derived\n+\texists before using it.\n+\n+2020-06-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/95585\n+\t* check.c (gfc_check_reshape): Add check for a value when\n+\tthe symbol has an attribute flavor FL_PARAMETER.\n+\n+2020-06-22  Mark Eggleston  <markeggleston@gcc.gnu.org>\n+\n+\tPR fortran/42693\n+\t* arith.c (gfc_arith_error): Enclose strings in G_() instead\n+\tof _().\n+\n 2020-06-20  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95707"}, {"sha": "abba89d49d049b4b2527fb0ae21877d204983f93", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,7 @@\n+2020-06-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2020-06-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* sv.po: Update."}, {"sha": "e1c78bcbd3455b69735a88a9ae023059cc23ba80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,206 @@\n+2020-06-22  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/cfuged-0.c: I protest.\n+\t* gcc.target/powerpc/cfuged-1.c: I protest.\n+\t* gcc.target/powerpc/clone3.c: I protest.\n+\t* gcc.target/powerpc/cntlzdm-0.c: I protest.\n+\t* gcc.target/powerpc/cntlzdm-1.c: I protest.\n+\t* gcc.target/powerpc/cnttzdm-0.c: I protest.\n+\t* gcc.target/powerpc/cnttzdm-1.c: I protest.\n+\t* gcc.target/powerpc/cpu-future.c: I protest.\n+\t* gcc.target/powerpc/dg-future-0.c: I protest.\n+\t* gcc.target/powerpc/dg-future-1.c: I protest.\n+\t* gcc.target/powerpc/localentry-1.c: I protest.\n+\t* gcc.target/powerpc/localentry-detect-1.c: I protest.\n+\t* gcc.target/powerpc/mma-builtin-1.c: I protest.\n+\t* gcc.target/powerpc/mma-builtin-2.c: I protest.\n+\t* gcc.target/powerpc/mma-builtin-3.c: I protest.\n+\t* gcc.target/powerpc/mma-builtin-4.c: I protest.\n+\t* gcc.target/powerpc/mma-builtin-5.c: I protest.\n+\t* gcc.target/powerpc/mma-builtin-6.c: I protest.\n+\t* gcc.target/powerpc/notoc-direct-1.c: I protest.\n+\t* gcc.target/powerpc/pcrel-sibcall-1.c: I protest.\n+\t* gcc.target/powerpc/pdep-0.c: I protest.\n+\t* gcc.target/powerpc/pdep-1.c: I protest.\n+\t* gcc.target/powerpc/pextd-0.c: I protest.\n+\t* gcc.target/powerpc/pextd-1.c: I protest.\n+\t* gcc.target/powerpc/pr93122.c: I protest.\n+\t* gcc.target/powerpc/pr94740.c: I protest.\n+\t* gcc.target/powerpc/setbceq.c: I protest.\n+\t* gcc.target/powerpc/setbcge.c: I protest.\n+\t* gcc.target/powerpc/setbcgt.c: I protest.\n+\t* gcc.target/powerpc/setbcle.c: I protest.\n+\t* gcc.target/powerpc/setbclt.c: I protest.\n+\t* gcc.target/powerpc/setbcne.c: I protest.\n+\t* gcc.target/powerpc/setnbceq.c: I protest.\n+\t* gcc.target/powerpc/setnbcge.c: I protest.\n+\t* gcc.target/powerpc/setnbcgt.c: I protest.\n+\t* gcc.target/powerpc/setnbcle.c: I protest.\n+\t* gcc.target/powerpc/setnbclt.c: I protest.\n+\t* gcc.target/powerpc/setnbcne.c: I protest.\n+\t* gcc.target/powerpc/vec-cfuged-0.c: I protest.\n+\t* gcc.target/powerpc/vec-cfuged-1.c: I protest.\n+\t* gcc.target/powerpc/vec-clrl-0.c: I protest.\n+\t* gcc.target/powerpc/vec-clrl-1.c: I protest.\n+\t* gcc.target/powerpc/vec-clrl-2.c: I protest.\n+\t* gcc.target/powerpc/vec-clrl-3.c: I protest.\n+\t* gcc.target/powerpc/vec-clrr-0.c: I protest.\n+\t* gcc.target/powerpc/vec-clrr-1.c: I protest.\n+\t* gcc.target/powerpc/vec-clrr-2.c: I protest.\n+\t* gcc.target/powerpc/vec-clrr-3.c: I protest.\n+\t* gcc.target/powerpc/vec-cntlzm-0.c: I protest.\n+\t* gcc.target/powerpc/vec-cntlzm-1.c: I protest.\n+\t* gcc.target/powerpc/vec-cnttzm-0.c: I protest.\n+\t* gcc.target/powerpc/vec-cnttzm-1.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-0.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-1.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-2.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-3.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-4.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-5.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-6.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-7.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-be-0.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-be-1.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-be-2.c: I protest.\n+\t* gcc.target/powerpc/vec-extracth-be-3.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-0.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-1.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-2.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-3.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-4.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-5.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-6.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-7.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-be-0.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-be-1.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-be-2.c: I protest.\n+\t* gcc.target/powerpc/vec-extractl-be-3.c: I protest.\n+\t* gcc.target/powerpc/vec-gnb-0.c: I protest.\n+\t* gcc.target/powerpc/vec-gnb-1.c: I protest.\n+\t* gcc.target/powerpc/vec-gnb-2.c: I protest.\n+\t* gcc.target/powerpc/vec-pdep-0.c: I protest.\n+\t* gcc.target/powerpc/vec-pdep-1.c: I protest.\n+\t* gcc.target/powerpc/vec-pext-0.c: I protest.\n+\t* gcc.target/powerpc/vec-pext-1.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-0.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-1.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-10.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-11.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-12.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-13.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-14.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-15.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-16.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-17.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-18.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-19.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-2.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-20.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-21.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-22.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-23.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-3.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-4.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-5.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-6.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-7.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-8.c: I protest.\n+\t* gcc.target/powerpc/vec-stril-9.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-0.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-1.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-10.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-11.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-2.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-3.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-4.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-5.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-6.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-7.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-8.c: I protest.\n+\t* gcc.target/powerpc/vec-stril_p-9.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-0.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-1.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-10.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-11.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-12.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-13.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-14.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-15.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-16.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-17.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-18.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-19.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-2.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-20.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-21.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-22.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-23.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-3.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-4.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-5.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-6.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-7.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-8.c: I protest.\n+\t* gcc.target/powerpc/vec-strir-9.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-0.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-1.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-10.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-11.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-2.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-3.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-4.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-5.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-6.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-7.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-8.c: I protest.\n+\t* gcc.target/powerpc/vec-strir_p-9.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-0.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-1.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-10.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-2.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-3.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-4.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-5.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-6.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-7.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-8.c: I protest.\n+\t* gcc.target/powerpc/vec-ternarylogic-9.c: I protest.\n+\t* gcc.target/powerpc/xxgenpc-runnable.c: I protest.\n+\t* lib/target-supports.exp: Stuff.\n+\n+2020-06-22  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n+\n+\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts1.c: Modify.\n+\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts2.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts3.c: Likewise.\n+\t* gcc.target/arm/mve/intrinsics/mve_scalar_shifts4.c: Likewise.\n+\t* lib/target-supports.exp (check_effective_target_arm_mve_hw): Define.\n+\n+2020-06-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/95708\n+\t* gfortran.dg/pr95708.f90: New test.\n+\n+2020-06-22  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/95791\n+\t* gcc.target/i386/pr95791.c: New test.\n+\n+2020-06-22  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/95585\n+\t* gfortran.dg/pr95585.f90: New test.\n+\n+2020-06-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95770\n+\t* gcc.dg/pr95770.c: New testcase.\n+\n+2020-06-22  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* g++.target/riscv/frflags.C: New.\n+\n 2020-06-21  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* gcc.target/powerpc/mma-builtin-1.c: New file."}, {"sha": "67217dadef4eae79011998b9b4f74a8cfd5c7672", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,8 @@\n+2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* Makefile.am: Use -include.\n+\t* Makefile.in: Regenerate.\n+\n 2020-06-21  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* Makefile.am (tmake_file): Build and install AIX-style FAT libraries."}, {"sha": "0c38d4db5498d1f666e8505826bf86589003c845", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,8 @@\n+2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* Makefile.am: Use -include.\n+\t* Makefile.in: Regenerate.\n+\n 2020-06-21  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* Makefile.am (tmake_file): Build and install AIX-style FAT libraries."}, {"sha": "d5d3036995af40706874af030554e6b432c51f0b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,8 @@\n+2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* Makefile.am: Use -include.\n+\t* Makefile.in: Regenerate.\n+\n 2020-06-21  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* Makefile.am (tmake_file): Build and install AIX-style FAT libraries."}, {"sha": "5b73af14b769a435947de7b7a3fa93fae3b6b58f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=605a8f3bbcfbc5c2d677f9eb0585db8ad15a730d", "patch": "@@ -1,3 +1,8 @@\n+2020-06-22  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* Makefile.am: Use -include.\n+\t* Makefile.in: Regenerate.\n+\n 2020-06-21  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* Makefile.am (tmake_file): Build and install AIX-style FAT libraries."}]}