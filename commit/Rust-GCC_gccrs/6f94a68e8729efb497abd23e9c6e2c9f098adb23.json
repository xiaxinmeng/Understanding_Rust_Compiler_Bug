{"sha": "6f94a68e8729efb497abd23e9c6e2c9f098adb23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY5NGE2OGU4NzI5ZWZiNDk3YWJkMjNlOWM2ZTJjOWYwOThhZGIyMw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2003-10-16T01:16:38Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-10-16T01:16:38Z"}, "message": "darwin-protos.h (machopic_non_lazy_ptr_name): Delete prototype.\n\n\t* config/darwin-protos.h (machopic_non_lazy_ptr_name): Delete\n\tprototype.  Clean up some whitespace.\n\t* config/darwin.c: Use gen_rtx_FOO (...) rather than\n\tgen_rtx (FOO, ...).\n\t(machopic_non_lazy_ptr_name): Make static.\n\t(name_needs_quotes): Allow '.' and '$' unquoted.\n\t(machopic_legitimize_pic_address): Improve codegen in dynamic-no-pic\n\tcase.\n\nFrom-SVN: r72544", "tree": {"sha": "dec1094929bf75d2bbc45fecaebe181c188880a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dec1094929bf75d2bbc45fecaebe181c188880a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f94a68e8729efb497abd23e9c6e2c9f098adb23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f94a68e8729efb497abd23e9c6e2c9f098adb23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f94a68e8729efb497abd23e9c6e2c9f098adb23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f94a68e8729efb497abd23e9c6e2c9f098adb23/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42f3a0a059b723c985d23bbcf6ec93c8ccf0d1d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f3a0a059b723c985d23bbcf6ec93c8ccf0d1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f3a0a059b723c985d23bbcf6ec93c8ccf0d1d3"}], "stats": {"total": 204, "additions": 111, "deletions": 93}, "files": [{"sha": "108831c07ed355513f41c423580bc85631010791", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f94a68e8729efb497abd23e9c6e2c9f098adb23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f94a68e8729efb497abd23e9c6e2c9f098adb23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f94a68e8729efb497abd23e9c6e2c9f098adb23", "patch": "@@ -1,3 +1,14 @@\n+2003-10-15  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/darwin-protos.h (machopic_non_lazy_ptr_name): Delete\n+\tprototype.  Clean up some whitespace.\n+\t* config/darwin.c: Use gen_rtx_FOO (...) rather than \n+\tgen_rtx (FOO, ...).  \n+\t(machopic_non_lazy_ptr_name): Make static.\n+\t(name_needs_quotes): Allow '.' and '$' unquoted.\n+\t(machopic_legitimize_pic_address): Improve codegen in dynamic-no-pic\n+\tcase.\n+\t\n 2003-10-15  G\ufffdbor L\ufffdki  <alga@rgai.hu>\n \n \t* fold-const.c (tree_swap_operands_p): disables"}, {"sha": "69b0b6fcb3e2e1f1c8f4e2d36911c159f6d96d32", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f94a68e8729efb497abd23e9c6e2c9f098adb23/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f94a68e8729efb497abd23e9c6e2c9f098adb23/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=6f94a68e8729efb497abd23e9c6e2c9f098adb23", "patch": "@@ -24,7 +24,6 @@ extern void machopic_validate_stub_or_non_lazy_ptr (const char *, int);\n \n extern const char *machopic_function_base_name (void);\n extern void machopic_output_function_base_name (FILE *);\n-extern const char *machopic_non_lazy_ptr_name (const char*);\n extern const char *machopic_stub_name (const char*);\n \n extern void machopic_picsymbol_stub_section (void);"}, {"sha": "dcb42d5199a285985bdd7c3e331ea570c398da6e", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 100, "deletions": 92, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f94a68e8729efb497abd23e9c6e2c9f098adb23/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f94a68e8729efb497abd23e9c6e2c9f098adb23/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=6f94a68e8729efb497abd23e9c6e2c9f098adb23", "patch": "@@ -45,13 +45,14 @@ Boston, MA 02111-1307, USA.  */\n static int machopic_data_defined_p (const char *);\n static void update_non_lazy_ptrs (const char *);\n static void update_stubs (const char *);\n+static const char *machopic_non_lazy_ptr_name (const char*);\n \n int\n name_needs_quotes (const char *name)\n {\n   int c;\n   while ((c = *name++) != '\\0')\n-    if (! ISIDNUM (c))\n+    if (! ISIDNUM (c) && c != '.' && c != '$')\n       return 1;\n   return 0;\n }\n@@ -262,7 +263,7 @@ static GTY(()) tree machopic_non_lazy_pointers;\n    either by finding it in our list of pointer names, or by generating\n    a new one.  */\n \n-const char *\n+static const char *\n machopic_non_lazy_ptr_name (const char *name)\n {\n   const char *temp_name;\n@@ -446,7 +447,6 @@ machopic_indirect_data_reference (rtx orig, rtx reg)\n   if (GET_CODE (orig) == SYMBOL_REF)\n     {\n       const char *name = XSTR (orig, 0);\n-\n       int defined = machopic_data_defined_p (name);\n \n       if (defined && MACHO_DYNAMIC_NO_PIC_P)\n@@ -463,10 +463,10 @@ machopic_indirect_data_reference (rtx orig, rtx reg)\n       else if (defined)\n \t{\n #if defined (TARGET_TOC) || defined (HAVE_lo_sum)\n-\t  rtx pic_base = gen_rtx (SYMBOL_REF, Pmode,\n-\t\t\t\t  machopic_function_base_name ());\n-\t  rtx offset = gen_rtx (CONST, Pmode,\n-\t\t\t\tgen_rtx (MINUS, Pmode, orig, pic_base));\n+\t  rtx pic_base = gen_rtx_SYMBOL_REF (Pmode,\n+\t\t\t\t\t     machopic_function_base_name ());\n+\t  rtx offset = gen_rtx_CONST (Pmode,\n+\t\t\t\t      gen_rtx_MINUS (Pmode, orig, pic_base));\n #endif\n \n #if defined (TARGET_TOC) /* i.e., PowerPC */\n@@ -475,32 +475,31 @@ machopic_indirect_data_reference (rtx orig, rtx reg)\n \t  if (reg == NULL)\n \t    abort ();\n \n-\t  emit_insn (gen_rtx (SET, Pmode, hi_sum_reg,\n-\t\t\t      gen_rtx (PLUS, Pmode, pic_offset_table_rtx,\n-\t\t\t\t       gen_rtx (HIGH, Pmode, offset))));\n-\t  emit_insn (gen_rtx (SET, Pmode, reg,\n-\t\t\t      gen_rtx (LO_SUM, Pmode, hi_sum_reg, offset)));\n+\t  emit_insn (gen_rtx_SET (Pmode, hi_sum_reg,\n+\t\t\t      gen_rtx_PLUS (Pmode, pic_offset_table_rtx,\n+\t\t\t\t       gen_rtx_HIGH (Pmode, offset))));\n+\t  emit_insn (gen_rtx_SET (Pmode, reg,\n+\t\t\t\t  gen_rtx_LO_SUM (Pmode, hi_sum_reg, offset)));\n \n \t  orig = reg;\n #else\n #if defined (HAVE_lo_sum)\n \t  if (reg == 0) abort ();\n \n-\t  emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t      gen_rtx (HIGH, Pmode, offset)));\n-\t  emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t      gen_rtx (LO_SUM, Pmode, reg, offset)));\n-\t  emit_insn (gen_rtx (USE, VOIDmode,\n-\t\t\t      gen_rtx_REG (Pmode, PIC_OFFSET_TABLE_REGNUM)));\n+\t  emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t  gen_rtx_HIGH (Pmode, offset)));\n+\t  emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t  gen_rtx_LO_SUM (Pmode, reg, offset)));\n+\t  emit_insn (gen_rtx_USE (VOIDmode, pic_offset_table_rtx));\n \n-\t  orig = gen_rtx (PLUS, Pmode, pic_offset_table_rtx, reg);\n+\t  orig = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, reg);\n #endif\n #endif\n \t  return orig;\n \t}\n \n-      ptr_ref = gen_rtx (SYMBOL_REF, Pmode,\n-                         machopic_non_lazy_ptr_name (name));\n+      ptr_ref = gen_rtx_SYMBOL_REF (Pmode,\n+\t\t\t\t    machopic_non_lazy_ptr_name (name));\n \n       ptr_ref = gen_rtx_MEM (Pmode, ptr_ref);\n       RTX_UNCHANGING_P (ptr_ref) = 1;\n@@ -525,7 +524,7 @@ machopic_indirect_data_reference (rtx orig, rtx reg)\n       if (MACHOPIC_PURE && GET_CODE (orig) == CONST_INT)\n \tresult = plus_constant (base, INTVAL (orig));\n       else\n-\tresult = gen_rtx (PLUS, Pmode, base, orig);\n+\tresult = gen_rtx_PLUS (Pmode, base, orig);\n \n       if (MACHOPIC_JUST_INDIRECT && GET_CODE (base) == MEM)\n \t{\n@@ -587,7 +586,7 @@ machopic_indirect_call_target (rtx target)\n \t{\n \t  const char *stub_name = machopic_stub_name (name);\n \n-\t  XEXP (target, 0) = gen_rtx (SYMBOL_REF, mode, stub_name);\n+\t  XEXP (target, 0) = gen_rtx_SYMBOL_REF (mode, stub_name);\n \t  RTX_UNCHANGING_P (target) = 1;\n \t}\n     }\n@@ -627,7 +626,7 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n       if (MACHO_DYNAMIC_NO_PIC_P)\n \tpic_base = CONST0_RTX (Pmode);\n       else\n-      pic_base = gen_rtx (SYMBOL_REF, Pmode, machopic_function_base_name ());\n+      pic_base = gen_rtx_SYMBOL_REF (Pmode, machopic_function_base_name ());\n \n       if (GET_CODE (orig) == MEM)\n \t{\n@@ -651,9 +650,9 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \n \t      emit_insn (gen_macho_high (temp_reg, asym));\n \t      mem = gen_rtx_MEM (GET_MODE (orig),\n-\t\t\t\t gen_rtx (LO_SUM, Pmode, temp_reg, asym));\n+\t\t\t\t gen_rtx_LO_SUM (Pmode, temp_reg, asym));\n \t      RTX_UNCHANGING_P (mem) = 1;\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg, mem));\n+\t      emit_insn (gen_rtx_SET (VOIDmode, reg, mem));\n #else\n \t      /* Some other CPU -- WriteMe! but right now there are no other platform that can use dynamic-no-pic  */\n \t      abort ();\n@@ -664,37 +663,47 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t  if (GET_CODE (XEXP (orig, 0)) == SYMBOL_REF\n \t      || GET_CODE (XEXP (orig, 0)) == LABEL_REF)\n \t    {\n-\t      rtx offset = gen_rtx (CONST, Pmode,\n-\t\t\t\t    gen_rtx (MINUS, Pmode,\n-\t\t\t\t\t     XEXP (orig, 0), pic_base));\n+\t      rtx offset = gen_rtx_CONST (Pmode,\n+\t\t\t\t\t  gen_rtx_MINUS (Pmode,\n+\t\t\t\t\t\t\t XEXP (orig, 0),\n+\t\t\t\t\t\t\t pic_base));\n #if defined (TARGET_TOC) /* i.e., PowerPC */\n \t      /* Generating a new reg may expose opportunities for\n \t\t common subexpression elimination.  */\n-              rtx hi_sum_reg =\n-\t\t(reload_in_progress ? reg : gen_reg_rtx (SImode));\n-\n-\t      emit_insn (gen_rtx (SET, Pmode, hi_sum_reg,\n-\t\t\t\t  gen_rtx (PLUS, Pmode,\n-\t\t\t\t\t   pic_offset_table_rtx,\n-\t\t\t\t\t   gen_rtx (HIGH, Pmode, offset))));\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t\t  gen_rtx (MEM, GET_MODE (orig),\n-\t\t\t\t\t   gen_rtx (LO_SUM, Pmode,\n-\t\t\t\t\t\t    hi_sum_reg, offset))));\n-\t      pic_ref = reg;\n+              rtx hi_sum_reg = no_new_pseudos ? reg : gen_reg_rtx (SImode);\n+\t      rtx mem;\n+\t      rtx insn;\n+\t      rtx sum;\n+\t      \n+\t      sum = gen_rtx_HIGH (Pmode, offset);\n+\t      if (! MACHO_DYNAMIC_NO_PIC_P)\n+\t\tsum = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, sum);\n \n+\t      emit_insn (gen_rtx_SET (Pmode, hi_sum_reg, sum));\n+\n+\t      mem = gen_rtx_MEM (GET_MODE (orig),\n+\t\t\t\t gen_rtx_LO_SUM (Pmode, \n+\t\t\t\t\t\t hi_sum_reg, offset));\n+\t      RTX_UNCHANGING_P (mem) = 1;\n+\t      insn = emit_insn (gen_rtx_SET (VOIDmode, reg, mem));\n+\t      REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_EQUAL, pic_ref, \n+\t\t\t\t\t\t    REG_NOTES (insn));\n+\n+\t      pic_ref = reg;\n #else\n-\t      emit_insn (gen_rtx (USE, VOIDmode,\n-\t\t\t      gen_rtx_REG (Pmode, PIC_OFFSET_TABLE_REGNUM)));\n-\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t\t  gen_rtx (HIGH, Pmode,\n-\t\t\t\t\t   gen_rtx (CONST, Pmode, offset))));\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t\t  gen_rtx (LO_SUM, Pmode, reg,\n-\t\t\t\t\t   gen_rtx (CONST, Pmode, offset))));\n-\t      pic_ref = gen_rtx (PLUS, Pmode,\n-\t\t\t\t pic_offset_table_rtx, reg);\n+\t      emit_insn (gen_rtx_USE (VOIDmode,\n+\t\t\t\t      gen_rtx_REG (Pmode, \n+\t\t\t\t\t\t   PIC_OFFSET_TABLE_REGNUM)));\n+\n+\t      emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t      gen_rtx_HIGH (Pmode,\n+\t\t\t\t\t\t    gen_rtx_CONST (Pmode, \n+\t\t\t\t\t\t\t\t   offset))));\n+\t      emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t  gen_rtx_LO_SUM (Pmode, reg,\n+\t\t\t\t\t   gen_rtx_CONST (Pmode, offset))));\n+\t      pic_ref = gen_rtx_PLUS (Pmode,\n+\t\t\t\t      pic_offset_table_rtx, reg);\n #endif\n \t    }\n \t  else\n@@ -707,21 +716,22 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t\t  pic = reg;\n \t\t}\n #if 0\n-\t      emit_insn (gen_rtx (USE, VOIDmode,\n-\t\t\t\t  gen_rtx (REG, Pmode, PIC_OFFSET_TABLE_REGNUM)));\n+\t      emit_insn (gen_rtx_USE (VOIDmode,\n+\t\t\t\t      gen_rtx_REG (Pmode, \n+\t\t\t\t\t\t   PIC_OFFSET_TABLE_REGNUM)));\n #endif\n \n-\t      pic_ref = gen_rtx (PLUS, Pmode,\n-\t\t\t\t pic,\n-\t\t\t\t gen_rtx (CONST, Pmode,\n-\t\t\t\t\t  gen_rtx (MINUS, Pmode,\n-\t\t\t\t\t\t   XEXP (orig, 0),\n-\t\t\t\t\t\t   pic_base)));\n+\t      pic_ref = gen_rtx_PLUS (Pmode,\n+\t\t\t\t      pic,\n+\t\t\t\t      gen_rtx_CONST (Pmode,\n+\t\t\t\t\t  gen_rtx_MINUS (Pmode,\n+\t\t\t\t\t\t\t XEXP (orig, 0),\n+\t\t\t\t\t\t\t pic_base)));\n \t    }\n \n #if !defined (TARGET_TOC)\n \t  emit_move_insn (reg, pic_ref);\n-\t  pic_ref = gen_rtx (MEM, GET_MODE (orig), reg);\n+\t  pic_ref = gen_rtx_MEM (GET_MODE (orig), reg);\n #endif\n \t  RTX_UNCHANGING_P (pic_ref) = 1;\n \t}\n@@ -732,8 +742,9 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t  if (GET_CODE (orig) == SYMBOL_REF\n \t      || GET_CODE (orig) == LABEL_REF)\n \t    {\n-\t      rtx offset = gen_rtx (CONST, Pmode,\n-\t\t\t\t    gen_rtx (MINUS, Pmode, orig, pic_base));\n+\t      rtx offset = gen_rtx_CONST (Pmode,\n+\t\t\t\t\t  gen_rtx_MINUS (Pmode, \n+\t\t\t\t\t\t\t orig, pic_base));\n #if defined (TARGET_TOC) /* i.e., PowerPC */\n               rtx hi_sum_reg;\n \n@@ -747,24 +758,25 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \n \t      hi_sum_reg = reg;\n \n-\t      emit_insn (gen_rtx (SET, Pmode, hi_sum_reg,\n-\t\t\t   (MACHO_DYNAMIC_NO_PIC_P)\n-\t\t\t\t? gen_rtx (HIGH, Pmode, offset)\n-\t\t\t\t: gen_rtx (PLUS, Pmode,\n-\t\t\t\t\t   pic_offset_table_rtx,\n-\t\t\t\t\t   gen_rtx (HIGH, Pmode, offset))));\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t\t  gen_rtx (LO_SUM, Pmode,\n-\t\t\t\t\t   hi_sum_reg, offset)));\n+\t      emit_insn (gen_rtx_SET (Pmode, hi_sum_reg,\n+\t\t\t\t      (MACHO_DYNAMIC_NO_PIC_P)\n+\t\t\t\t      ? gen_rtx_HIGH (Pmode, offset)\n+\t\t\t\t      : gen_rtx_PLUS (Pmode,\n+\t\t\t\t\t\t      pic_offset_table_rtx,\n+\t\t\t\t\t\t      gen_rtx_HIGH (Pmode, \n+\t\t\t\t\t\t\t\t    offset))));\n+\t      emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t      gen_rtx_LO_SUM (Pmode,\n+\t\t\t\t\t\t      hi_sum_reg, offset)));\n \t      pic_ref = reg;\n \t      RTX_UNCHANGING_P (pic_ref) = 1;\n #else\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t\t  gen_rtx (HIGH, Pmode, offset)));\n-\t      emit_insn (gen_rtx (SET, VOIDmode, reg,\n-\t\t\t\t  gen_rtx (LO_SUM, Pmode, reg, offset)));\n-\t      pic_ref = gen_rtx (PLUS, Pmode,\n-\t\t\t\t pic_offset_table_rtx, reg);\n+\t      emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t      gen_rtx_HIGH (Pmode, offset)));\n+\t      emit_insn (gen_rtx_SET (VOIDmode, reg,\n+\t\t\t\t      gen_rtx_LO_SUM (Pmode, reg, offset)));\n+\t      pic_ref = gen_rtx_PLUS (Pmode,\n+\t\t\t\t      pic_offset_table_rtx, reg);\n \t      RTX_UNCHANGING_P (pic_ref) = 1;\n #endif\n \t    }\n@@ -784,14 +796,14 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t\t      pic = reg;\n \t\t    }\n #if 0\n-\t\t  emit_insn (gen_rtx (USE, VOIDmode,\n-\t\t\t\t      pic_offset_table_rtx));\n+\t\t  emit_insn (gen_rtx_USE (VOIDmode,\n+\t\t\t\t\t  pic_offset_table_rtx));\n #endif\n-\t\t  pic_ref = gen_rtx (PLUS, Pmode,\n-\t\t\t\t     pic,\n-\t\t\t\t     gen_rtx (CONST, Pmode,\n-\t\t\t\t\t      gen_rtx (MINUS, Pmode,\n-\t\t\t\t\t\t       orig, pic_base)));\n+\t\t  pic_ref = gen_rtx_PLUS (Pmode,\n+\t\t\t\t\t  pic,\n+\t\t\t\t\t  gen_rtx_CONST (Pmode,\n+\t\t\t\t\t      gen_rtx_MINUS (Pmode,\n+\t\t\t\t\t\t\t     orig, pic_base)));\n \t\t}\n \t    }\n \t}\n@@ -837,7 +849,7 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n \t  is_complex = 1;\n \t}\n       else\n-\tpic_ref = gen_rtx (PLUS, Pmode, base, orig);\n+\tpic_ref = gen_rtx_PLUS (Pmode, base, orig);\n \n       if (RTX_UNCHANGING_P (base) && RTX_UNCHANGING_P (orig))\n \tRTX_UNCHANGING_P (pic_ref) = 1;\n@@ -860,7 +872,7 @@ machopic_legitimize_pic_address (rtx orig, enum machine_mode mode, rtx reg)\n     {\n       rtx addr = machopic_legitimize_pic_address (XEXP (orig, 0), Pmode, reg);\n \n-      addr = gen_rtx (MEM, GET_MODE (orig), addr);\n+      addr = gen_rtx_MEM (GET_MODE (orig), addr);\n       RTX_UNCHANGING_P (addr) = RTX_UNCHANGING_P (orig);\n       emit_move_insn (reg, addr);\n       pic_ref = reg;\n@@ -925,7 +937,7 @@ machopic_finish (FILE *asm_out_file)\n \t  data_section ();\n \t  assemble_align (GET_MODE_ALIGNMENT (Pmode));\n \t  assemble_label (lazy_name);\n-\t  assemble_integer (gen_rtx (SYMBOL_REF, Pmode, sym_name),\n+\t  assemble_integer (gen_rtx_SYMBOL_REF (Pmode, sym_name),\n \t\t\t    GET_MODE_SIZE (Pmode),\n \t\t\t    GET_MODE_ALIGNMENT (Pmode), 1);\n \t}\n@@ -1092,7 +1104,6 @@ machopic_output_possible_stub_label (FILE *file, const char *name)\n {\n   tree temp;\n \n-\n   /* Ensure we're looking at a section-encoded name.  */\n   if (name[0] != '!' || (name[1] != 't' && name[1] != 'T'))\n     return;\n@@ -1281,23 +1292,20 @@ machopic_select_rtx_section (enum machine_mode mode, rtx x,\n void\n machopic_asm_out_constructor (rtx symbol, int priority ATTRIBUTE_UNUSED)\n {\n-\n   if (MACHOPIC_INDIRECT)\n     mod_init_section ();\n   else\n     constructor_section ();\n   assemble_align (POINTER_SIZE);\n   assemble_integer (symbol, POINTER_SIZE / BITS_PER_UNIT, POINTER_SIZE, 1);\n \n-\n   if (! MACHOPIC_INDIRECT)\n     fprintf (asm_out_file, \".reference .constructors_used\\n\");\n }\n \n void\n machopic_asm_out_destructor (rtx symbol, int priority ATTRIBUTE_UNUSED)\n {\n-\n   if (MACHOPIC_INDIRECT)\n     mod_term_section ();\n   else"}]}