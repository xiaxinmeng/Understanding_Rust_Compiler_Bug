{"sha": "90573e884b212c911f1804a56904974d5d9e7bc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA1NzNlODg0YjIxMmM5MTFmMTgwNGE1NjkwNDk3NGQ1ZDllN2JjNw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-02-19T10:38:22Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-02-19T10:38:22Z"}, "message": "S/390: Add single element vector types to iterators.\n\ngcc/ChangeLog:\n\n\t* config/s390/vector.md (VI, VI_QHS): Add single element vector\n\ttypes to mode iterators.\n\t(vec_double): ... and mode attribute.\n\t* config/s390/vx-builtins.md (non_vec_int): Likewise.\n\nFrom-SVN: r233555", "tree": {"sha": "dca5ef78870ed3318b6822b5e9fc5f21be52be69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dca5ef78870ed3318b6822b5e9fc5f21be52be69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90573e884b212c911f1804a56904974d5d9e7bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90573e884b212c911f1804a56904974d5d9e7bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90573e884b212c911f1804a56904974d5d9e7bc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90573e884b212c911f1804a56904974d5d9e7bc7/comments", "author": null, "committer": null, "parents": [{"sha": "6448f0645b918b340f8b01c60b10af8409c51b56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6448f0645b918b340f8b01c60b10af8409c51b56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6448f0645b918b340f8b01c60b10af8409c51b56"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "d932ee884bb8a33e471c8ee68e7759b302e39162", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90573e884b212c911f1804a56904974d5d9e7bc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90573e884b212c911f1804a56904974d5d9e7bc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90573e884b212c911f1804a56904974d5d9e7bc7", "patch": "@@ -1,3 +1,10 @@\n+2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/vector.md (VI, VI_QHS): Add single element vector\n+\ttypes to mode iterators.\n+\t(vec_double): ... and mode attribute.\n+\t* config/s390/vx-builtins.md (non_vec_int): Likewise.\n+\n 2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/vector.md (\"<ti*>add<mode>3\", \"<ti*>sub<mode>3\"):"}, {"sha": "3101057506f7b0870d99571b92cec24883b3977c", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90573e884b212c911f1804a56904974d5d9e7bc7/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90573e884b212c911f1804a56904974d5d9e7bc7/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=90573e884b212c911f1804a56904974d5d9e7bc7", "patch": "@@ -43,8 +43,8 @@\n \n ; All integer vector modes supported in a vector register + TImode\n (define_mode_iterator VIT [V1QI V2QI V4QI V8QI V16QI V1HI V2HI V4HI V8HI V1SI V2SI V4SI V1DI V2DI V1TI TI])\n-(define_mode_iterator VI  [V2QI V4QI V8QI V16QI V2HI V4HI V8HI V2SI V4SI V2DI])\n-(define_mode_iterator VI_QHS [V4QI V8QI V16QI V4HI V8HI V4SI])\n+(define_mode_iterator VI  [V1QI V2QI V4QI V8QI V16QI V1HI V2HI V4HI V8HI V1SI V2SI V4SI V1DI V2DI])\n+(define_mode_iterator VI_QHS [V1QI V2QI V4QI V8QI V16QI V1HI V2HI V4HI V8HI V1SI V2SI V4SI])\n \n (define_mode_iterator V_8   [V1QI])\n (define_mode_iterator V_16  [V2QI  V1HI])\n@@ -100,11 +100,11 @@\n \t\t\t    (V1TF \"V1TI\")])\n \n ; Vector with doubled element size.\n-(define_mode_attr vec_double [(V2QI \"V1HI\") (V4QI \"V2HI\") (V8QI \"V4HI\") (V16QI \"V8HI\")\n-\t\t\t      (V2HI \"V1SI\") (V4HI \"V2SI\") (V8HI \"V4SI\")\n-\t\t\t      (V2SI \"V1DI\") (V4SI \"V2DI\")\n-\t\t\t      (V2DI \"V1TI\")\n-\t\t\t      (V2SF \"V1DF\") (V4SF \"V2DF\")])\n+(define_mode_attr vec_double [(V1QI \"V1HI\") (V2QI \"V1HI\") (V4QI \"V2HI\") (V8QI \"V4HI\") (V16QI \"V8HI\")\n+\t\t\t      (V1HI \"V1SI\") (V2HI \"V1SI\") (V4HI \"V2SI\") (V8HI \"V4SI\")\n+\t\t\t      (V1SI \"V1DI\") (V2SI \"V1DI\") (V4SI \"V2DI\")\n+\t\t\t      (V1DI \"V1TI\") (V2DI \"V1TI\")\n+\t\t\t      (V1SF \"V1DF\") (V2SF \"V1DF\") (V4SF \"V2DF\")])\n \n ; Vector with half the element size.\n (define_mode_attr vec_half [(V1HI \"V2QI\") (V2HI \"V4QI\") (V4HI \"V8QI\") (V8HI \"V16QI\")"}, {"sha": "65e683c972d19b58d0f2bda1517832f0fe1a5832", "filename": "gcc/config/s390/vx-builtins.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90573e884b212c911f1804a56904974d5d9e7bc7/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90573e884b212c911f1804a56904974d5d9e7bc7/gcc%2Fconfig%2Fs390%2Fvx-builtins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvx-builtins.md?ref=90573e884b212c911f1804a56904974d5d9e7bc7", "patch": "@@ -28,12 +28,12 @@\n \n ; The element type of the vector with floating point modes translated\n ; to int modes of the same size.\n-(define_mode_attr non_vec_int[(V2QI \"QI\") (V4QI \"QI\") (V8QI \"QI\") (V16QI \"QI\")\n-\t\t\t      (V2HI \"HI\") (V4HI \"HI\") (V8HI \"HI\")\n-\t\t\t      (V2SI \"SI\") (V4SI \"SI\")\n-\t\t\t      (V2DI \"DI\")\n-\t\t\t      (V2SF \"SI\") (V4SF \"SI\")\n-\t\t\t      (V2DF \"DI\")])\n+(define_mode_attr non_vec_int[(V1QI \"QI\") (V2QI \"QI\") (V4QI \"QI\") (V8QI \"QI\") (V16QI \"QI\")\n+\t\t\t      (V1HI \"HI\") (V2HI \"HI\") (V4HI \"HI\") (V8HI \"HI\")\n+\t\t\t      (V1SI \"SI\") (V2SI \"SI\") (V4SI \"SI\")\n+\t\t\t      (V1DI \"DI\") (V2DI \"DI\")\n+\t\t\t      (V1SF \"SI\") (V2SF \"SI\") (V4SF \"SI\")\n+\t\t\t      (V1DF \"DI\") (V2DF \"DI\")])\n \n ; Condition code modes generated by int comparisons\n (define_mode_iterator VICMP [CCVEQ CCVH CCVHU])"}]}