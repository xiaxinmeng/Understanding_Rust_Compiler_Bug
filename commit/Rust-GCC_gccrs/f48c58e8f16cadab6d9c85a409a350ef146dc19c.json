{"sha": "f48c58e8f16cadab6d9c85a409a350ef146dc19c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ4YzU4ZThmMTZjYWRhYjZkOWM4NWE0MDlhMzUwZWYxNDZkYzE5Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-04-08T17:07:16Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-04-08T17:07:16Z"}, "message": "* expr.c, gjavah.c: Fix comment typos.\n\nFrom-SVN: r112784", "tree": {"sha": "cd370533fb704da2c648e7a1615a0ea5474a67be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd370533fb704da2c648e7a1615a0ea5474a67be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f48c58e8f16cadab6d9c85a409a350ef146dc19c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48c58e8f16cadab6d9c85a409a350ef146dc19c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48c58e8f16cadab6d9c85a409a350ef146dc19c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48c58e8f16cadab6d9c85a409a350ef146dc19c/comments", "author": null, "committer": null, "parents": [{"sha": "917f1b7ea3e4737fccda44b8dfb5c868b3d5fed4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917f1b7ea3e4737fccda44b8dfb5c868b3d5fed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917f1b7ea3e4737fccda44b8dfb5c868b3d5fed4"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "fe19f2c8e5166df83cd2c683c07c6007ce4e58c3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48c58e8f16cadab6d9c85a409a350ef146dc19c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48c58e8f16cadab6d9c85a409a350ef146dc19c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f48c58e8f16cadab6d9c85a409a350ef146dc19c", "patch": "@@ -1,3 +1,7 @@\n+2006-04-08  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* expr.c, gjavah.c: Fix comment typos.\n+\n 2006-04-03  Andrew Haley  <aph@redhat.com>\n \n \tPR java/26858"}, {"sha": "1cd405a6bb775377cfb5506223a9d3ffad8c0dbf", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48c58e8f16cadab6d9c85a409a350ef146dc19c/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48c58e8f16cadab6d9c85a409a350ef146dc19c/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=f48c58e8f16cadab6d9c85a409a350ef146dc19c", "patch": "@@ -1694,7 +1694,7 @@ build_field_ref (tree self_value, tree self_class, tree name)\n \n \t We assume that Page 0 will be mapped with NOPERM, and that\n \t memory may be allocated from any other page, so only field\n-\t offsets < pagesize are guaratneed to trap.  We also assume\n+\t offsets < pagesize are guaranteed to trap.  We also assume\n \t the smallest page size we'll encounter is 4k bytes.  */\n       if (! flag_syntax_only && check && ! flag_check_references \n \t  && ! flag_indirect_dispatch)"}, {"sha": "c79a0a918c7991b358682499125c4b9f66a5183c", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48c58e8f16cadab6d9c85a409a350ef146dc19c/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48c58e8f16cadab6d9c85a409a350ef146dc19c/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=f48c58e8f16cadab6d9c85a409a350ef146dc19c", "patch": "@@ -252,7 +252,7 @@ static int is_first_data_member = 0;\n \n /* Only include byte-code decompilation optimizations for ELF targets\n    since the generated headers are only known to work with ELF weak\n-   symbol semnatics. Specifically, these optimizations are known to\n+   symbol semantics. Specifically, these optimizations are known to\n    not work on PE-COFF and possibly others.  */\n #ifdef OBJECT_FORMAT_ELF\n #define HANDLE_CODE_ATTRIBUTE(MAX_STACK, MAX_LOCALS, CODE_LENGTH)\t\\"}]}