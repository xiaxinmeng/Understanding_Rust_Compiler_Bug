{"sha": "e8ee97bf2b2e777b3c98f2d7030a43531287126d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlZTk3YmYyYjJlNzc3YjNjOThmMmQ3MDMwYTQzNTMxMjg3MTI2ZA==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1997-09-16T03:59:48Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1997-09-16T03:59:48Z"}, "message": "Renamed fixinc.math to fixinc.wrap\n\nFrom-SVN: r15465", "tree": {"sha": "9c9d255641ec9b6b9afd4b46e7163067874c1838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c9d255641ec9b6b9afd4b46e7163067874c1838"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ee97bf2b2e777b3c98f2d7030a43531287126d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ee97bf2b2e777b3c98f2d7030a43531287126d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ee97bf2b2e777b3c98f2d7030a43531287126d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ee97bf2b2e777b3c98f2d7030a43531287126d/comments", "author": null, "committer": null, "parents": [{"sha": "ca55abaee78c7f75c7036d8616781bba42f1af6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca55abaee78c7f75c7036d8616781bba42f1af6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca55abaee78c7f75c7036d8616781bba42f1af6c"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "406c87e9c03bd42fe5ce35d8e7f1da8927ee16b6", "filename": "gcc/fixinc.wrap", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ee97bf2b2e777b3c98f2d7030a43531287126d/gcc%2Ffixinc.wrap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ee97bf2b2e777b3c98f2d7030a43531287126d/gcc%2Ffixinc.wrap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.wrap?ref=e8ee97bf2b2e777b3c98f2d7030a43531287126d", "patch": "@@ -0,0 +1,86 @@\n+#! /bin/sh\n+# Create wrappers for include files instead of replacing them.\n+#\n+# This script is designed for systems whose include files can be fixed\n+# by creating small wrappers around them.\n+# An advantage of this method is that if the system include files are changed\n+# (e.g. by OS upgrade), you need not re-run fixincludes.\n+#\n+# See README-fixinc for more information.\n+\n+# Directory containing the original header files.\n+# (This was named INCLUDES, but that conflicts with a name in Makefile.in.)\n+INPUT=${2-${INPUT-/usr/include}}\n+\n+# Directory in which to store the results.\n+LIB=${1?\"fixincludes: output directory not specified\"}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+echo Building fixed headers in ${LIB}\n+\n+# Some math.h files define struct exception, which conflicts with\n+# the class exception defined in the C++ file std/stdexcept.h.  We\n+# redefine it to __math_exception.  This is not a great fix, but I\n+# haven't been able to think of anything better.\n+file=math.h\n+if [ -r $INPUT/$file ]; then\n+  echo Checking $INPUT/$file\n+  if grep 'struct exception' $INPUT/$file >/dev/null\n+  then\n+    echo Fixed $file\n+    rm -f $LIB/$file\n+    cat <<'__EOF__' >$LIB/$file\n+#ifndef _MATH_H_WRAPPER\n+#ifdef __cplusplus\n+# define exception __math_exception\n+#endif\n+#include_next <math.h>\n+#ifdef __cplusplus\n+# undef exception\n+#endif\n+#define _MATH_H_WRAPPER\n+#endif /* _MATH_H_WRAPPER */\n+__EOF__\n+    # Define _MATH_H_WRAPPER at the end of the wrapper, not the start,\n+    # so that if #include_next gets another instance of the wrapper,\n+    # this will follow the #include_next chain until we arrive at\n+    # the real <math.h>.\n+    chmod a+r $LIB/$file\n+  fi\n+fi\n+\n+# Avoid the definition of the bool type in the Solaris 2.x curses.h when using\n+# g++, since it's now an official type in the C++ language.\n+file=curses.h\n+if [ -r $INPUT/$file ]; then\n+  echo Checking $INPUT/$file\n+  w='[\t ]'\n+  if grep \"typedef$w$w*char$w$w*bool$w*;\" $INPUT/$file >/dev/null\n+  then\n+    echo Fixed $file\n+    rm -f $LIB/$file\n+    cat <<'__EOF__' >$LIB/$file\n+#ifndef _CURSES_H_WRAPPER\n+#ifdef __cplusplus\n+# define bool __curses_bool_t\n+#endif\n+#include_next <curses.h>\n+#ifdef __cplusplus\n+# undef bool\n+#endif\n+#define _CURSES_H_WRAPPER\n+#endif /* _CURSES_H_WRAPPER */\n+__EOF__\n+    # Define _CURSES_H_WRAPPER at the end of the wrapper, not the start,\n+    # so that if #include_next gets another instance of the wrapper,\n+    # this will follow the #include_next chain until we arrive at\n+    # the real <curses.h>.\n+    chmod a+r $LIB/$file\n+  fi\n+fi\n+\n+exit 0"}]}