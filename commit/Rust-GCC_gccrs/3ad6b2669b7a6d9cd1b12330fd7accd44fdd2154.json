{"sha": "3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkNmIyNjY5YjdhNmQ5Y2QxYjEyMzMwZmQ3YWNjZDQ0ZmRkMjE1NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-02-11T21:57:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-02-11T21:57:52Z"}, "message": "re PR middle-end/39154 (Miscompilation of VLAs in nested parallel regions)\n\n\tPR middle-end/39154\n\t* gimplify.c (omp_notice_variable): If adding GOVD_SEEN\n\tbit to variable length decl's flags, add it also to its\n\tpointer replacement variable.\n\n\t* testsuite/libgomp.c/pr39154.c: New test.\n\nFrom-SVN: r144111", "tree": {"sha": "4a20f063b19d39a1b3b6f180cab2f0a734d92d9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a20f063b19d39a1b3b6f180cab2f0a734d92d9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b058b753550ca9588b3961e75f6d30399f9d2c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b058b753550ca9588b3961e75f6d30399f9d2c67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b058b753550ca9588b3961e75f6d30399f9d2c67"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "8f65c785480ee232307fbac687615147305e865d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "patch": "@@ -1,3 +1,10 @@\n+2009-02-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/39154\n+\t* gimplify.c (omp_notice_variable): If adding GOVD_SEEN\n+\tbit to variable length decl's flags, add it also to its\n+\tpointer replacement variable.\n+\n 2009-02-11  Uros Bizjak  <ubizjak@gmail.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "ae12424589b75389f5e89c44ac5a8468766fdbf5", "filename": "gcc/gimplify.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "patch": "@@ -5308,6 +5308,20 @@ omp_notice_variable (struct gimplify_omp_ctx *ctx, tree decl, bool in_code)\n       goto do_outer;\n     }\n \n+  if ((n->value & (GOVD_SEEN | GOVD_LOCAL)) == 0\n+      && (flags & (GOVD_SEEN | GOVD_LOCAL)) == GOVD_SEEN\n+      && DECL_SIZE (decl)\n+      && TREE_CODE (DECL_SIZE (decl)) != INTEGER_CST)\n+    {\n+      splay_tree_node n2;\n+      tree t = DECL_VALUE_EXPR (decl);\n+      gcc_assert (TREE_CODE (t) == INDIRECT_REF);\n+      t = TREE_OPERAND (t, 0);\n+      gcc_assert (DECL_P (t));\n+      n2 = splay_tree_lookup (ctx->variables, (splay_tree_key) t);\n+      n2->value |= GOVD_SEEN;\n+    }\n+\n   shared = ((flags | n->value) & GOVD_SHARED) != 0;\n   ret = lang_hooks.decls.omp_disregard_value_expr (decl, shared);\n "}, {"sha": "3d0d3e8ad12226d2e0307259bddcdf3f6d4951e7", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "patch": "@@ -1,3 +1,8 @@\n+2009-02-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/39154\n+\t* testsuite/libgomp.c/pr39154.c: New test.\n+\n 2009-01-30  Ian Lance Taylor  <iant@google.com>\n \n \t* acinclude.m4 (LIBCOMP_CHECK_LINKER_FEATURES): Set"}, {"sha": "5a4c89e13eb537d70bdcbb7af52c46f191cbb197", "filename": "libgomp/testsuite/libgomp.c/pr39154.c", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr39154.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr39154.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr39154.c?ref=3ad6b2669b7a6d9cd1b12330fd7accd44fdd2154", "patch": "@@ -0,0 +1,105 @@\n+/* PR middle-end/39154 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -std=gnu99\" } */\n+\n+extern void abort (void);\n+\n+int n = 20;\n+\n+int\n+main (void)\n+{\n+  int a[n], b[n][n];\n+\n+#pragma omp parallel for\n+    for (int i = 0; i < n; i++)\n+      {\n+\ta[i] = i + 1;\n+#pragma omp parallel for\n+\tfor (int j = 0; j < n; j++)\n+\t  b[i][j] = a[i];\n+      }\n+\n+  for (int i = 0; i < n; i++)\n+    {\n+      for (int j = 0; j < n; j++)\n+\tif (b[i][j] != i + 1)\n+\t  abort ();\n+      if (a[i] != i + 1)\n+\tabort ();\n+    }\n+\n+#pragma omp parallel for shared (n, a, b)\n+    for (int i = 0; i < n; i++)\n+      {\n+\ta[i] = i + 3;\n+#pragma omp parallel for\n+\tfor (int j = 0; j < n; j++)\n+\t  b[i][j] = a[i];\n+      }\n+\n+  for (int i = 0; i < n; i++)\n+    {\n+      for (int j = 0; j < n; j++)\n+\tif (b[i][j] != i + 3)\n+\t  abort ();\n+      if (a[i] != i + 3)\n+\tabort ();\n+    }\n+\n+#pragma omp parallel for\n+    for (int i = 0; i < n; i++)\n+      {\n+\ta[i] = i + 5;\n+#pragma omp parallel for shared (n, a, b)\n+\tfor (int j = 0; j < n; j++)\n+\t  b[i][j] = a[i];\n+      }\n+\n+  for (int i = 0; i < n; i++)\n+    {\n+      for (int j = 0; j < n; j++)\n+\tif (b[i][j] != i + 5)\n+\t  abort ();\n+      if (a[i] != i + 5)\n+\tabort ();\n+    }\n+\n+#pragma omp parallel for shared (n, a, b)\n+    for (int i = 0; i < n; i++)\n+      {\n+\ta[i] = i + 7;\n+#pragma omp parallel for shared (n, a, b)\n+\tfor (int j = 0; j < n; j++)\n+\t  b[i][j] = a[i];\n+      }\n+\n+  for (int i = 0; i < n; i++)\n+    {\n+      for (int j = 0; j < n; j++)\n+\tif (b[i][j] != i + 7)\n+\t  abort ();\n+      if (a[i] != i + 7)\n+\tabort ();\n+    }\n+\n+#pragma omp parallel for private (a, b)\n+    for (int i = 0; i < n; i++)\n+      {\n+\ta[i] = i + 1;\n+#pragma omp parallel for\n+\tfor (int j = 0; j < n; j++)\n+\t  b[i][j] = a[i];\n+      }\n+\n+#pragma omp parallel for private (a, b)\n+    for (int i = 0; i < n; i++)\n+      {\n+\ta[i] = i + 1;\n+#pragma omp parallel for private (b)\n+\tfor (int j = 0; j < n; j++)\n+\t  b[i][j] = a[i];\n+      }\n+\n+  return 0;\n+}"}]}