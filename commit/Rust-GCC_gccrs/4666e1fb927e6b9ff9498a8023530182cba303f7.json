{"sha": "4666e1fb927e6b9ff9498a8023530182cba303f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY2NmUxZmI5MjdlNmI5ZmY5NDk4YTgwMjM1MzAxODJjYmEzMDNmNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-18T12:34:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-18T12:34:43Z"}, "message": "dyncast.cc (__dynamic_cast): Handle mid-destruction dynamic_cast more gracefully.\n\n\t* libsupc++/dyncast.cc (__dynamic_cast): Handle mid-destruction\n\tdynamic_cast more gracefully.\n\nFrom-SVN: r215350", "tree": {"sha": "fe6c5b9c31673294c79433d2e8dfa4e8007754b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe6c5b9c31673294c79433d2e8dfa4e8007754b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4666e1fb927e6b9ff9498a8023530182cba303f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4666e1fb927e6b9ff9498a8023530182cba303f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4666e1fb927e6b9ff9498a8023530182cba303f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4666e1fb927e6b9ff9498a8023530182cba303f7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e770bfd997bb5803b88ca4081bdbca3e250fc92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e770bfd997bb5803b88ca4081bdbca3e250fc92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e770bfd997bb5803b88ca4081bdbca3e250fc92e"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "deb43976630c4829078e0b1eda2f83a86cb449c8", "filename": "gcc/testsuite/g++.dg/rtti/dyncast7.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4666e1fb927e6b9ff9498a8023530182cba303f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fdyncast7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4666e1fb927e6b9ff9498a8023530182cba303f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fdyncast7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fdyncast7.C?ref=4666e1fb927e6b9ff9498a8023530182cba303f7", "patch": "@@ -0,0 +1,28 @@\n+// I think this dynamic_cast has undefined behavior when destroying E::o\n+// because we're the F period of destruction has started and ap doesn't\n+// point to the object currently being destroyed--but the reasonable\n+// options are success or failure, not SEGV.\n+\n+// { dg-do run }\n+\n+extern \"C\" void abort();\n+\n+struct A { virtual ~A(); };\n+struct B { virtual ~B() { } };\n+struct C : B, A { };\n+struct E : virtual B { A o; };\n+struct F : virtual C, virtual E { };\n+\n+A* ap;\n+C* cp;\n+\n+A::~A() {\n+  C* cp2 = dynamic_cast<C*>(ap);\n+  if (cp2 != cp && cp2 != 0)\n+    abort();\n+}\n+\n+int main() {\n+  F f;\n+  ap = cp = &f;\n+}"}, {"sha": "7682e279876732f3c539c2bc5186e45a47cfdf11", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4666e1fb927e6b9ff9498a8023530182cba303f7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4666e1fb927e6b9ff9498a8023530182cba303f7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4666e1fb927e6b9ff9498a8023530182cba303f7", "patch": "@@ -1,3 +1,8 @@\n+2014-09-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* libsupc++/dyncast.cc (__dynamic_cast): Handle mid-destruction\n+\tdynamic_cast more gracefully.\n+\n 2014-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/Makefile.am (check_p_numbers0, check_p_numbers1,"}, {"sha": "9f6adeffcf2f06a05cedd6f330a5d94580ed609c", "filename": "libstdc++-v3/libsupc++/dyncast.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4666e1fb927e6b9ff9498a8023530182cba303f7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdyncast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4666e1fb927e6b9ff9498a8023530182cba303f7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdyncast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fdyncast.cc?ref=4666e1fb927e6b9ff9498a8023530182cba303f7", "patch": "@@ -55,6 +55,18 @@ __dynamic_cast (const void *src_ptr,    // object started from\n       adjust_pointer <void> (src_ptr, prefix->whole_object);\n   const __class_type_info *whole_type = prefix->whole_type;\n   __class_type_info::__dyncast_result result;\n+\n+  // If the whole object vptr doesn't refer to the whole object type, we're\n+  // in the middle of constructing a primary base, and src is a separate\n+  // base.  This has undefined behavior and we can't find anything outside\n+  // of the base we're actually constructing, so fail now rather than\n+  // segfault later trying to use a vbase offset that doesn't exist.\n+  const void *whole_vtable = *static_cast <const void *const *> (whole_ptr);\n+  const vtable_prefix *whole_prefix =\n+    adjust_pointer <vtable_prefix> (whole_vtable,\n+\t\t\t\t    -offsetof (vtable_prefix, origin));\n+  if (whole_prefix->whole_type != whole_type)\n+    return NULL;\n   \n   whole_type->__do_dyncast (src2dst, __class_type_info::__contained_public,\n                             dst_type, whole_ptr, src_type, src_ptr, result);"}]}