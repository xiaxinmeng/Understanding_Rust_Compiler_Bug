{"sha": "40f954f62b05c18cec23e155d43e9cc717f1e7d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBmOTU0ZjYyYjA1YzE4Y2VjMjNlMTU1ZDQzZTljYzcxN2YxZTdkMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T20:21:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-27T20:21:34Z"}, "message": "(reg_rtx_no, regno_pointer_{flag_length,align): New decls.\n\n(REGNO_POINTER_ALIGN): New macro.\n\nFrom-SVN: r10866", "tree": {"sha": "86d9a0aa4a25d986d34dc3fbcd5f2b12934290ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86d9a0aa4a25d986d34dc3fbcd5f2b12934290ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40f954f62b05c18cec23e155d43e9cc717f1e7d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f954f62b05c18cec23e155d43e9cc717f1e7d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40f954f62b05c18cec23e155d43e9cc717f1e7d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f954f62b05c18cec23e155d43e9cc717f1e7d0/comments", "author": null, "committer": null, "parents": [{"sha": "86fe05e0beee49c54406b267f7ffcaebaf3f6438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fe05e0beee49c54406b267f7ffcaebaf3f6438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86fe05e0beee49c54406b267f7ffcaebaf3f6438"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "17293d684970d6ed72258123802afcd42f6cd8bf", "filename": "gcc/regs.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40f954f62b05c18cec23e155d43e9cc717f1e7d0/gcc%2Fregs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40f954f62b05c18cec23e155d43e9cc717f1e7d0/gcc%2Fregs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregs.h?ref=40f954f62b05c18cec23e155d43e9cc717f1e7d0", "patch": "@@ -1,5 +1,5 @@\n /* Define per-register tables for data flow info and register allocation.\n-   Copyright (C) 1987, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1993, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -136,12 +136,23 @@ extern int *regno_last_uid;\n \n extern int *regno_last_note_uid;\n \n+/* This is reset to LAST_VIRTUAL_REGISTER + 1 at the start of each function.\n+   After rtl generation, it is 1 plus the largest register number used.  */\n+\n+extern int reg_rtx_no;\n+\n /* Vector indexed by regno; contains 1 for a register is considered a pointer.\n    Reloading, etc. will use a pointer register rather than a non-pointer\n    as the base register in an address, when there is a choice of two regs.  */\n \n extern char *regno_pointer_flag;\n #define REGNO_POINTER_FLAG(REGNO) regno_pointer_flag[REGNO]\n+extern int regno_pointer_flag_length;\n+\n+/* Similarly, contains the alignment in bytes for a register that contains\n+   a pointer, if known.  */\n+extern char *regno_pointer_align;\n+#define REGNO_POINTER_ALIGN(REGNO) regno_pointer_align[REGNO]\n \n /* List made of EXPR_LIST rtx's which gives pairs of pseudo registers\n    that have to go in the same hard reg.  */"}]}