{"sha": "434c87d422b306c985a1c4e67ebba27d24bd50b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM0Yzg3ZDQyMmIzMDZjOTg1YTFjNGU2N2ViYmEyN2QyNGJkNTBiNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-02-01T13:16:29Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-02-01T13:16:29Z"}, "message": "* combine.c (combine_simplify_rtx):  Use reversed_comparison_code_parts.\n\nFrom-SVN: r62246", "tree": {"sha": "caf6da448f14a24291c429a078aa69f184ca1c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf6da448f14a24291c429a078aa69f184ca1c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/434c87d422b306c985a1c4e67ebba27d24bd50b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434c87d422b306c985a1c4e67ebba27d24bd50b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/434c87d422b306c985a1c4e67ebba27d24bd50b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/434c87d422b306c985a1c4e67ebba27d24bd50b7/comments", "author": null, "committer": null, "parents": [{"sha": "271bd540d12af3d965059fb09b5311224fb3214c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271bd540d12af3d965059fb09b5311224fb3214c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271bd540d12af3d965059fb09b5311224fb3214c"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "a226c3b1652b228d816b292393531d16d9e703a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434c87d422b306c985a1c4e67ebba27d24bd50b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434c87d422b306c985a1c4e67ebba27d24bd50b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=434c87d422b306c985a1c4e67ebba27d24bd50b7", "patch": "@@ -1,3 +1,7 @@\n+Sat Feb  1 14:14:40 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* combine.c (combine_simplify_rtx):  Use reversed_comparison_code_parts.\n+\n 2003-02-01  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* flags.h (flag_volatile): Remove declaration."}, {"sha": "d6915c1517850722536592cc3c130522853f2103", "filename": "gcc/combine.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/434c87d422b306c985a1c4e67ebba27d24bd50b7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/434c87d422b306c985a1c4e67ebba27d24bd50b7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=434c87d422b306c985a1c4e67ebba27d24bd50b7", "patch": "@@ -3708,6 +3708,8 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n \t  if (general_operand (true_rtx, VOIDmode)\n \t      && general_operand (false_rtx, VOIDmode))\n \t    {\n+\t      enum rtx_code reversed;\n+\n \t      /* Restarting if we generate a store-flag expression will cause\n \t\t us to loop.  Just drop through in this case.  */\n \n@@ -3716,9 +3718,10 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n \t      if (true_rtx == const_true_rtx && false_rtx == const0_rtx)\n \t\tx = gen_binary (cond_code, mode, cond, cop1);\n \t      else if (true_rtx == const0_rtx && false_rtx == const_true_rtx\n-\t\t       && reverse_condition (cond_code) != UNKNOWN)\n-\t\tx = gen_binary (reverse_condition (cond_code),\n-\t\t\t\tmode, cond, cop1);\n+\t\t       && ((reversed = reversed_comparison_code_parts\n+\t\t\t   \t\t(cond_code, cond, cop1, NULL))\n+\t\t           != UNKNOWN))\n+\t\tx = gen_binary (reversed, mode, cond, cop1);\n \n \t      /* Likewise, we can make the negate of a comparison operation\n \t\t if the result values are - STORE_FLAG_VALUE and zero.  */\n@@ -3731,11 +3734,13 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n \t\t\t\t\tmode);\n \t      else if (GET_CODE (false_rtx) == CONST_INT\n \t\t       && INTVAL (false_rtx) == - STORE_FLAG_VALUE\n-\t\t       && true_rtx == const0_rtx)\n+\t\t       && true_rtx == const0_rtx\n+\t\t       && ((reversed = reversed_comparison_code_parts\n+\t\t\t   \t\t(cond_code, cond, cop1, NULL))\n+\t\t           != UNKNOWN))\n \t\tx = simplify_gen_unary (NEG, mode,\n-\t\t\t\t\tgen_binary (reverse_condition\n-\t\t\t\t\t\t    (cond_code),\n-\t\t\t\t\t\t    mode, cond, cop1),\n+\t\t\t\t\tgen_binary (reversed, mode,\n+\t\t\t\t\t  \t    cond, cop1),\n \t\t\t\t\tmode);\n \t      else\n \t\treturn gen_rtx_IF_THEN_ELSE (mode,"}]}