{"sha": "6837d899c86d8b5eab15103e9466039304897ae7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzN2Q4OTljODZkOGI1ZWFiMTUxMDNlOTQ2NjAzOTMwNDg5N2FlNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-11-25T08:58:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-11-25T08:58:32Z"}, "message": "re PR target/67089 (Integer overflow checks not optimized on x86/x86_64)\n\n\tPR target/67089\n\t* tree-ssa-math-opts.c (uaddsub_overflow_check_p,\n\tmatch_uaddsub_overflow): New functions.\n\t(pass_optimize_widening_mul::execute): Call match_uaddsub_overflow.\n\n\t* gcc.dg/pr67089-1.c: New test.\n\t* gcc.dg/pr67089-2.c: New test.\n\t* gcc.dg/pr67089-3.c: New test.\n\t* gcc.dg/pr67089-4.c: New test.\n\t* gcc.dg/pr67089-5.c: New test.\n\t* gcc.dg/pr67089-6.c: New test.\n\t* gcc.dg/pr67089-7.c: New test.\n\nFrom-SVN: r230856", "tree": {"sha": "677c7add8d2188eeaeeed19d735f8bf09de3aa7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/677c7add8d2188eeaeeed19d735f8bf09de3aa7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6837d899c86d8b5eab15103e9466039304897ae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6837d899c86d8b5eab15103e9466039304897ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6837d899c86d8b5eab15103e9466039304897ae7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6837d899c86d8b5eab15103e9466039304897ae7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85c69b0b05356480db26c2b118c21002cd6423bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85c69b0b05356480db26c2b118c21002cd6423bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85c69b0b05356480db26c2b118c21002cd6423bf"}], "stats": {"total": 858, "additions": 857, "deletions": 1}, "files": [{"sha": "9504817e269a56ca728a54a8a43d5aba4b79a658", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -1,3 +1,10 @@\n+2015-11-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/67089\n+\t* tree-ssa-math-opts.c (uaddsub_overflow_check_p,\n+\tmatch_uaddsub_overflow): New functions.\n+\t(pass_optimize_widening_mul::execute): Call match_uaddsub_overflow.\n+\n 2015-11-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68492"}, {"sha": "ac85edf1b996ed94bb70be2dd965921610437fdc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -1,3 +1,14 @@\n+2015-11-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/67089\n+\t* gcc.dg/pr67089-1.c: New test.\n+\t* gcc.dg/pr67089-2.c: New test.\n+\t* gcc.dg/pr67089-3.c: New test.\n+\t* gcc.dg/pr67089-4.c: New test.\n+\t* gcc.dg/pr67089-5.c: New test.\n+\t* gcc.dg/pr67089-6.c: New test.\n+\t* gcc.dg/pr67089-7.c: New test.\n+\n 2015-11-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/68502"}, {"sha": "e26474977da47bb976775eeacdcaa56c3a478614", "filename": "gcc/testsuite/gcc.dg/pr67089-1.c", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-1.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,112 @@\n+/* PR target/67089 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+int cnt, d;\n+\n+__attribute__((noinline, noclone))\n+void foo (int x)\n+{\n+  asm volatile (\"\" : \"+m\" (d) : \"g\" (x) : \"memory\");\n+  cnt++;\n+}\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x, type y)\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x - y, if (r > x) foo (0))\n+T (2, unsigned long, x - y, if (r <= x) foo (0))\n+T (3, unsigned short, x - y, if (x < r) foo (r))\n+T (4, unsigned long long, x - y, if (x >= r) foo (0))\n+T (5, unsigned int, x - y, if (r >= x) foo (0))\n+T (6, unsigned long, x - y, if (r < x) foo (0))\n+T (7, unsigned short, x - y, if (x <= r) foo (r))\n+T (8, unsigned long long, x - y, if (d || x > r) foo (0))\n+T (9, unsigned int, x - y, if (d || r > x) foo (0))\n+T (10, unsigned long, x - y, if (d || r <= x) foo (0))\n+T (11, unsigned char, x - y, if (d || x < r) foo (0))\n+T (12, unsigned long long, x - y, if (d || x >= r) foo (0))\n+T (13, unsigned int, x - y, if (d || r >= x) foo (0))\n+T (14, unsigned long, x - y, if (d || r < x) foo (0))\n+T (15, unsigned short, x - y, if (d || x <= r) foo (0))\n+T (16, unsigned long long, x - y, if (d || x > r) foo (0))\n+\n+int\n+main ()\n+{\n+  if (f1 (5, 3) != 2U || cnt != 0) abort ();\n+  if (f1 (5, 7) != -2U || cnt != 1) abort ();\n+  if (f1 (5, 5) != 0U || cnt != 1) abort ();\n+  if (f1 (5, 0) != 5U || cnt != 1) abort ();\n+  if (f2 (7, 1) != 6UL || cnt != 2) abort ();\n+  if (f2 (7, 8) != -1UL || cnt != 2) abort ();\n+  if (f2 (9, 9) != 0UL || cnt != 3) abort ();\n+  if (f2 (9, 0) != 9UL || cnt != 4) abort ();\n+  if (f3 (15, 14) != 1 || cnt != 4) abort ();\n+  if (f3 (15, 25) != (unsigned short) -10 || cnt != 5) abort ();\n+  if (f3 (15, 15) != 0 || cnt != 5) abort ();\n+  if (f3 (15, 0) != 15 || cnt != 5) abort ();\n+  if (f4 (9132, 9127) != 5ULL || cnt != 6) abort ();\n+  if (f4 (9132, 9137) != -5ULL || cnt != 6) abort ();\n+  if (f4 (9132, 9132) != 0 || cnt != 7) abort ();\n+  if (f4 (9132, 0) != 9132ULL || cnt != 8) abort ();\n+  if (f5 (5, 3) != 2U || cnt != 8) abort ();\n+  if (f5 (5, 7) != -2U || cnt != 9) abort ();\n+  if (f5 (5, 5) != 0U || cnt != 9) abort ();\n+  if (f5 (5, 0) != 5U || cnt != 10) abort ();\n+  if (f6 (7, 1) != 6UL || cnt != 11) abort ();\n+  if (f6 (7, 8) != -1UL || cnt != 11) abort ();\n+  if (f6 (9, 9) != 0UL || cnt != 12) abort ();\n+  if (f6 (9, 0) != 9UL || cnt != 12) abort ();\n+  if (f7 (15, 14) != 1 || cnt != 12) abort ();\n+  if (f7 (15, 25) != (unsigned short) -10 || cnt != 13) abort ();\n+  if (f7 (15, 15) != 0 || cnt != 13) abort ();\n+  if (f7 (15, 0) != 15 || cnt != 14) abort ();\n+  if (f8 (9132, 9127) != 5ULL || cnt != 15) abort ();\n+  if (f8 (9132, 9137) != -5ULL || cnt != 15) abort ();\n+  if (f8 (9132, 9132) != 0 || cnt != 16) abort ();\n+  if (f8 (9132, 0) != 9132ULL || cnt != 16) abort ();\n+  cnt = 0;\n+  if (f9 (5, 3) != 2U || cnt != 0) abort ();\n+  if (f9 (5, 7) != -2U || cnt != 1) abort ();\n+  if (f9 (5, 5) != 0U || cnt != 1) abort ();\n+  if (f9 (5, 0) != 5U || cnt != 1) abort ();\n+  if (f10 (7, 1) != 6UL || cnt != 2) abort ();\n+  if (f10 (7, 8) != -1UL || cnt != 2) abort ();\n+  if (f10 (9, 9) != 0UL || cnt != 3) abort ();\n+  if (f10 (9, 0) != 9UL || cnt != 4) abort ();\n+  if (f11 (15, 14) != 1 || cnt != 4) abort ();\n+  if (f11 (15, 25) != (unsigned char) -10 || cnt != 5) abort ();\n+  if (f11 (15, 15) != 0 || cnt != 5) abort ();\n+  if (f11 (15, 0) != 15 || cnt != 5) abort ();\n+  if (f12 (9132, 9127) != 5ULL || cnt != 6) abort ();\n+  if (f12 (9132, 9137) != -5ULL || cnt != 6) abort ();\n+  if (f12 (9132, 9132) != 0 || cnt != 7) abort ();\n+  if (f12 (9132, 0) != 9132ULL || cnt != 8) abort ();\n+  if (f13 (5, 3) != 2U || cnt != 8) abort ();\n+  if (f13 (5, 7) != -2U || cnt != 9) abort ();\n+  if (f13 (5, 5) != 0U || cnt != 9) abort ();\n+  if (f13 (5, 0) != 5U || cnt != 10) abort ();\n+  if (f14 (7, 1) != 6UL || cnt != 11) abort ();\n+  if (f14 (7, 8) != -1UL || cnt != 11) abort ();\n+  if (f14 (9, 9) != 0UL || cnt != 12) abort ();\n+  if (f14 (9, 0) != 9UL || cnt != 12) abort ();\n+  if (f15 (15, 14) != 1 || cnt != 12) abort ();\n+  if (f15 (15, 25) != (unsigned short) -10 || cnt != 13) abort ();\n+  if (f15 (15, 15) != 0 || cnt != 13) abort ();\n+  if (f15 (15, 0) != 15 || cnt != 14) abort ();\n+  if (f16 (9132, 9127) != 5ULL || cnt != 15) abort ();\n+  if (f16 (9132, 9137) != -5ULL || cnt != 15) abort ();\n+  if (f16 (9132, 9132) != 0 || cnt != 16) abort ();\n+  if (f16 (9132, 0) != 9132ULL || cnt != 16) abort ();\n+  return 0;\n+}"}, {"sha": "59b27a7d686ebb2dfe2aedf7eee872e25152e2a7", "filename": "gcc/testsuite/gcc.dg/pr67089-2.c", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-2.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,112 @@\n+/* PR target/67089 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+int cnt, d;\n+\n+__attribute__((noinline, noclone))\n+void foo (int x)\n+{\n+  asm volatile (\"\" : \"+m\" (d) : \"g\" (x) : \"memory\");\n+  cnt++;\n+}\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x, type y)\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x - y, if (r > y) foo (0))\n+T (2, unsigned long, x - y, if (r <= y) foo (0))\n+T (3, unsigned short, x - y, if (y < r) foo (r))\n+T (4, unsigned long long, x - y, if (y >= r) foo (0))\n+T (5, unsigned int, x - y, if (r >= y) foo (0))\n+T (6, unsigned long, x - y, if (r < y) foo (0))\n+T (7, unsigned short, x - y, if (y <= r) foo (r))\n+T (8, unsigned long long, x - y, if (d || y > r) foo (0))\n+T (9, unsigned int, x - y, if (d || r > y) foo (0))\n+T (10, unsigned long, x - y, if (d || r <= y) foo (0))\n+T (11, unsigned char, x - y, if (d || y < r) foo (0))\n+T (12, unsigned long long, x - y, if (d || y >= r) foo (0))\n+T (13, unsigned int, x - y, if (d || r >= y) foo (0))\n+T (14, unsigned long, x - y, if (d || r < y) foo (0))\n+T (15, unsigned short, x - y, if (d || y <= r) foo (0))\n+T (16, unsigned long long, x - y, if (d || y > r) foo (0))\n+\n+int\n+main ()\n+{\n+  if (f1 (5, 3) != 2U || cnt != 0) abort ();\n+  if (f1 (5, 7) != -2U || cnt != 1) abort ();\n+  if (f1 (5, 5) != 0U || cnt != 1) abort ();\n+  if (f1 (5, 0) != 5U || cnt != 2) abort ();\n+  if (f2 (7, 1) != 6UL || cnt != 2) abort ();\n+  if (f2 (7, 8) != -1UL || cnt != 2) abort ();\n+  if (f2 (9, 9) != 0UL || cnt != 3) abort ();\n+  if (f2 (9, 0) != 9UL || cnt != 3) abort ();\n+  if (f3 (15, 14) != 1 || cnt != 3) abort ();\n+  if (f3 (15, 25) != (unsigned short) -10 || cnt != 4) abort ();\n+  if (f3 (15, 15) != 0 || cnt != 4) abort ();\n+  if (f3 (15, 0) != 15 || cnt != 5) abort ();\n+  if (f4 (9132, 9127) != 5ULL || cnt != 6) abort ();\n+  if (f4 (9132, 9137) != -5ULL || cnt != 6) abort ();\n+  if (f4 (9132, 9132) != 0 || cnt != 7) abort ();\n+  if (f4 (9132, 0) != 9132ULL || cnt != 7) abort ();\n+  if (f5 (5, 3) != 2U || cnt != 7) abort ();\n+  if (f5 (5, 7) != -2U || cnt != 8) abort ();\n+  if (f5 (5, 5) != 0U || cnt != 8) abort ();\n+  if (f5 (5, 0) != 5U || cnt != 9) abort ();\n+  if (f6 (7, 1) != 6UL || cnt != 9) abort ();\n+  if (f6 (7, 8) != -1UL || cnt != 9) abort ();\n+  if (f6 (9, 9) != 0UL || cnt != 10) abort ();\n+  if (f6 (9, 0) != 9UL || cnt != 10) abort ();\n+  if (f7 (15, 14) != 1 || cnt != 10) abort ();\n+  if (f7 (15, 25) != (unsigned short) -10 || cnt != 11) abort ();\n+  if (f7 (15, 15) != 0 || cnt != 11) abort ();\n+  if (f7 (15, 0) != 15 || cnt != 12) abort ();\n+  if (f8 (9132, 9127) != 5ULL || cnt != 13) abort ();\n+  if (f8 (9132, 9137) != -5ULL || cnt != 13) abort ();\n+  if (f8 (9132, 9132) != 0 || cnt != 14) abort ();\n+  if (f8 (9132, 0) != 9132ULL || cnt != 14) abort ();\n+  cnt = 0;\n+  if (f9 (5, 3) != 2U || cnt != 0) abort ();\n+  if (f9 (5, 7) != -2U || cnt != 1) abort ();\n+  if (f9 (5, 5) != 0U || cnt != 1) abort ();\n+  if (f9 (5, 0) != 5U || cnt != 2) abort ();\n+  if (f10 (7, 1) != 6UL || cnt != 2) abort ();\n+  if (f10 (7, 8) != -1UL || cnt != 2) abort ();\n+  if (f10 (9, 9) != 0UL || cnt != 3) abort ();\n+  if (f10 (9, 0) != 9UL || cnt != 3) abort ();\n+  if (f11 (15, 14) != 1 || cnt != 3) abort ();\n+  if (f11 (15, 25) != (unsigned char) -10 || cnt != 4) abort ();\n+  if (f11 (15, 15) != 0 || cnt != 4) abort ();\n+  if (f11 (15, 0) != 15 || cnt != 5) abort ();\n+  if (f12 (9132, 9127) != 5ULL || cnt != 6) abort ();\n+  if (f12 (9132, 9137) != -5ULL || cnt != 6) abort ();\n+  if (f12 (9132, 9132) != 0 || cnt != 7) abort ();\n+  if (f12 (9132, 0) != 9132ULL || cnt != 7) abort ();\n+  if (f13 (5, 3) != 2U || cnt != 7) abort ();\n+  if (f13 (5, 7) != -2U || cnt != 8) abort ();\n+  if (f13 (5, 5) != 0U || cnt != 8) abort ();\n+  if (f13 (5, 0) != 5U || cnt != 9) abort ();\n+  if (f14 (7, 1) != 6UL || cnt != 9) abort ();\n+  if (f14 (7, 8) != -1UL || cnt != 9) abort ();\n+  if (f14 (9, 9) != 0UL || cnt != 10) abort ();\n+  if (f14 (9, 0) != 9UL || cnt != 10) abort ();\n+  if (f15 (15, 14) != 1 || cnt != 10) abort ();\n+  if (f15 (15, 25) != (unsigned short) -10 || cnt != 11) abort ();\n+  if (f15 (15, 15) != 0 || cnt != 11) abort ();\n+  if (f15 (15, 0) != 15 || cnt != 12) abort ();\n+  if (f16 (9132, 9127) != 5ULL || cnt != 13) abort ();\n+  if (f16 (9132, 9137) != -5ULL || cnt != 13) abort ();\n+  if (f16 (9132, 9132) != 0 || cnt != 14) abort ();\n+  if (f16 (9132, 0) != 9132ULL || cnt != 14) abort ();\n+  return 0;\n+}"}, {"sha": "22576e56cbf11278ab80ef282dcc3cc26dcf5d95", "filename": "gcc/testsuite/gcc.dg/pr67089-3.c", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-3.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,112 @@\n+/* PR target/67089 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+int cnt, d;\n+\n+__attribute__((noinline, noclone))\n+void foo (int x)\n+{\n+  asm volatile (\"\" : \"+m\" (d) : \"g\" (x) : \"memory\");\n+  cnt++;\n+}\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x, type y)\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x + y, if (r > x) foo (0))\n+T (2, unsigned long, x + y, if (r <= x) foo (0))\n+T (3, unsigned short, x + y, if (x < r) foo (r))\n+T (4, unsigned long long, x + y, if (x >= r) foo (0))\n+T (5, unsigned int, x + y, if (r >= x) foo (0))\n+T (6, unsigned long, x + y, if (r < x) foo (0))\n+T (7, unsigned short, x + y, if (x <= r) foo (r))\n+T (8, unsigned long long, x + y, if (d || x > r) foo (0))\n+T (9, unsigned int, x + y, if (d || r > x) foo (0))\n+T (10, unsigned long, x + y, if (d || r <= x) foo (0))\n+T (11, unsigned char, x + y, if (d || x < r) foo (0))\n+T (12, unsigned long long, x + y, if (d || x >= r) foo (0))\n+T (13, unsigned int, x + y, if (d || r >= x) foo (0))\n+T (14, unsigned long, x + y, if (d || r < x) foo (0))\n+T (15, unsigned short, x + y, if (d || x <= r) foo (0))\n+T (16, unsigned long long, x + y, if (d || x > r) foo (0))\n+\n+int\n+main ()\n+{\n+  if (f1 (-7U, 0) != -7U || cnt != 0) abort ();\n+  if (f1 (-7U, 6) != -1U || cnt != 1) abort ();\n+  if (f1 (-7U, 7) != 0U || cnt != 1) abort ();\n+  if (f1 (-7U, 8) != 1U || cnt != 1) abort ();\n+  if (f2 (-9UL, 0) != -9UL || cnt != 2) abort ();\n+  if (f2 (-9UL, 8) != -1UL || cnt != 2) abort ();\n+  if (f2 (-9UL, 9) != 0UL || cnt != 3) abort ();\n+  if (f2 (-9UL, 10) != 1UL || cnt != 4) abort ();\n+  if (f3 (-15, 0) != (unsigned short) -15 || cnt != 4) abort ();\n+  if (f3 (-15, 14) != (unsigned short) -1 || cnt != 5) abort ();\n+  if (f3 (-15, 15) != 0 || cnt != 5) abort ();\n+  if (f3 (-15, 16) != 1 || cnt != 5) abort ();\n+  if (f4 (-9132ULL, 0) != -9132ULL || cnt != 6) abort ();\n+  if (f4 (-9132ULL, 9131) != -1ULL || cnt != 6) abort ();\n+  if (f4 (-9132ULL, 9132) != 0 || cnt != 7) abort ();\n+  if (f4 (-9132ULL, 9133) != 1ULL || cnt != 8) abort ();\n+  if (f5 (-7U, 0) != -7U || cnt != 9) abort ();\n+  if (f5 (-7U, 6) != -1U || cnt != 10) abort ();\n+  if (f5 (-7U, 7) != 0U || cnt != 10) abort ();\n+  if (f5 (-7U, 8) != 1U || cnt != 10) abort ();\n+  if (f6 (-9UL, 0) != -9UL || cnt != 10) abort ();\n+  if (f6 (-9UL, 8) != -1UL || cnt != 10) abort ();\n+  if (f6 (-9UL, 9) != 0UL || cnt != 11) abort ();\n+  if (f6 (-9UL, 10) != 1UL || cnt != 12) abort ();\n+  if (f7 (-15, 0) != (unsigned short) -15 || cnt != 13) abort ();\n+  if (f7 (-15, 14) != (unsigned short) -1 || cnt != 14) abort ();\n+  if (f7 (-15, 15) != 0 || cnt != 14) abort ();\n+  if (f7 (-15, 16) != 1 || cnt != 14) abort ();\n+  if (f8 (-9132ULL, 0) != -9132ULL || cnt != 14) abort ();\n+  if (f8 (-9132ULL, 9131) != -1ULL || cnt != 14) abort ();\n+  if (f8 (-9132ULL, 9132) != 0 || cnt != 15) abort ();\n+  if (f8 (-9132ULL, 9133) != 1ULL || cnt != 16) abort ();\n+  cnt = 0;\n+  if (f9 (-7U, 0) != -7U || cnt != 0) abort ();\n+  if (f9 (-7U, 6) != -1U || cnt != 1) abort ();\n+  if (f9 (-7U, 7) != 0U || cnt != 1) abort ();\n+  if (f9 (-7U, 8) != 1U || cnt != 1) abort ();\n+  if (f10 (-9UL, 0) != -9UL || cnt != 2) abort ();\n+  if (f10 (-9UL, 8) != -1UL || cnt != 2) abort ();\n+  if (f10 (-9UL, 9) != 0UL || cnt != 3) abort ();\n+  if (f10 (-9UL, 10) != 1UL || cnt != 4) abort ();\n+  if (f11 (-15, 0) != (unsigned char) -15 || cnt != 4) abort ();\n+  if (f11 (-15, 14) != (unsigned char) -1 || cnt != 5) abort ();\n+  if (f11 (-15, 15) != 0 || cnt != 5) abort ();\n+  if (f11 (-15, 16) != 1 || cnt != 5) abort ();\n+  if (f12 (-9132ULL, 0) != -9132ULL || cnt != 6) abort ();\n+  if (f12 (-9132ULL, 9131) != -1ULL || cnt != 6) abort ();\n+  if (f12 (-9132ULL, 9132) != 0 || cnt != 7) abort ();\n+  if (f12 (-9132ULL, 9133) != 1ULL || cnt != 8) abort ();\n+  if (f13 (-7U, 0) != -7U || cnt != 9) abort ();\n+  if (f13 (-7U, 6) != -1U || cnt != 10) abort ();\n+  if (f13 (-7U, 7) != 0U || cnt != 10) abort ();\n+  if (f13 (-7U, 8) != 1U || cnt != 10) abort ();\n+  if (f14 (-9UL, 0) != -9UL || cnt != 10) abort ();\n+  if (f14 (-9UL, 8) != -1UL || cnt != 10) abort ();\n+  if (f14 (-9UL, 9) != 0UL || cnt != 11) abort ();\n+  if (f14 (-9UL, 10) != 1UL || cnt != 12) abort ();\n+  if (f15 (-15, 0) != (unsigned short) -15 || cnt != 13) abort ();\n+  if (f15 (-15, 14) != (unsigned short) -1 || cnt != 14) abort ();\n+  if (f15 (-15, 15) != 0 || cnt != 14) abort ();\n+  if (f15 (-15, 16) != 1 || cnt != 14) abort ();\n+  if (f16 (-9132ULL, 0) != -9132ULL || cnt != 14) abort ();\n+  if (f16 (-9132ULL, 9131) != -1ULL || cnt != 14) abort ();\n+  if (f16 (-9132ULL, 9132) != 0 || cnt != 15) abort ();\n+  if (f16 (-9132ULL, 9133) != 1ULL || cnt != 16) abort ();\n+  return 0;\n+}"}, {"sha": "f4f7439f9d5f78248ef346d61492e57002347f59", "filename": "gcc/testsuite/gcc.dg/pr67089-4.c", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-4.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,112 @@\n+/* PR target/67089 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+int cnt, d;\n+\n+__attribute__((noinline, noclone))\n+void foo (int x)\n+{\n+  asm volatile (\"\" : \"+m\" (d) : \"g\" (x) : \"memory\");\n+  cnt++;\n+}\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x, type y)\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x + y, if (r > y) foo (0))\n+T (2, unsigned long, x + y, if (r <= y) foo (0))\n+T (3, unsigned short, x + y, if (y < r) foo (r))\n+T (4, unsigned long long, x + y, if (y >= r) foo (0))\n+T (5, unsigned int, x + y, if (r >= y) foo (0))\n+T (6, unsigned long, x + y, if (r < y) foo (0))\n+T (7, unsigned short, x + y, if (y <= r) foo (r))\n+T (8, unsigned long long, x + y, if (d || y > r) foo (0))\n+T (9, unsigned int, x + y, if (d || r > y) foo (0))\n+T (10, unsigned long, x + y, if (d || r <= y) foo (0))\n+T (11, unsigned char, x + y, if (d || y < r) foo (0))\n+T (12, unsigned long long, x + y, if (d || y >= r) foo (0))\n+T (13, unsigned int, x + y, if (d || r >= y) foo (0))\n+T (14, unsigned long, x + y, if (d || r < y) foo (0))\n+T (15, unsigned short, x + y, if (d || y <= r) foo (0))\n+T (16, unsigned long long, x + y, if (d || y > r) foo (0))\n+\n+int\n+main ()\n+{\n+  if (f1 (-7U, 0) != -7U || cnt != 1) abort ();\n+  if (f1 (-7U, 6) != -1U || cnt != 2) abort ();\n+  if (f1 (-7U, 7) != 0U || cnt != 2) abort ();\n+  if (f1 (-7U, 8) != 1U || cnt != 2) abort ();\n+  if (f2 (-9UL, 0) != -9UL || cnt != 2) abort ();\n+  if (f2 (-9UL, 8) != -1UL || cnt != 2) abort ();\n+  if (f2 (-9UL, 9) != 0UL || cnt != 3) abort ();\n+  if (f2 (-9UL, 10) != 1UL || cnt != 4) abort ();\n+  if (f3 (-15, 0) != (unsigned short) -15 || cnt != 5) abort ();\n+  if (f3 (-15, 14) != (unsigned short) -1 || cnt != 6) abort ();\n+  if (f3 (-15, 15) != 0 || cnt != 6) abort ();\n+  if (f3 (-15, 16) != 1 || cnt != 6) abort ();\n+  if (f4 (-9132ULL, 0) != -9132ULL || cnt != 6) abort ();\n+  if (f4 (-9132ULL, 9131) != -1ULL || cnt != 6) abort ();\n+  if (f4 (-9132ULL, 9132) != 0 || cnt != 7) abort ();\n+  if (f4 (-9132ULL, 9133) != 1ULL || cnt != 8) abort ();\n+  if (f5 (-7U, 0) != -7U || cnt != 9) abort ();\n+  if (f5 (-7U, 6) != -1U || cnt != 10) abort ();\n+  if (f5 (-7U, 7) != 0U || cnt != 10) abort ();\n+  if (f5 (-7U, 8) != 1U || cnt != 10) abort ();\n+  if (f6 (-9UL, 0) != -9UL || cnt != 10) abort ();\n+  if (f6 (-9UL, 8) != -1UL || cnt != 10) abort ();\n+  if (f6 (-9UL, 9) != 0UL || cnt != 11) abort ();\n+  if (f6 (-9UL, 10) != 1UL || cnt != 12) abort ();\n+  if (f7 (-15, 0) != (unsigned short) -15 || cnt != 13) abort ();\n+  if (f7 (-15, 14) != (unsigned short) -1 || cnt != 14) abort ();\n+  if (f7 (-15, 15) != 0 || cnt != 14) abort ();\n+  if (f7 (-15, 16) != 1 || cnt != 14) abort ();\n+  if (f8 (-9132ULL, 0) != -9132ULL || cnt != 14) abort ();\n+  if (f8 (-9132ULL, 9131) != -1ULL || cnt != 14) abort ();\n+  if (f8 (-9132ULL, 9132) != 0 || cnt != 15) abort ();\n+  if (f8 (-9132ULL, 9133) != 1ULL || cnt != 16) abort ();\n+  cnt = 0;\n+  if (f9 (-7U, 0) != -7U || cnt != 1) abort ();\n+  if (f9 (-7U, 6) != -1U || cnt != 2) abort ();\n+  if (f9 (-7U, 7) != 0U || cnt != 2) abort ();\n+  if (f9 (-7U, 8) != 1U || cnt != 2) abort ();\n+  if (f10 (-9UL, 0) != -9UL || cnt != 2) abort ();\n+  if (f10 (-9UL, 8) != -1UL || cnt != 2) abort ();\n+  if (f10 (-9UL, 9) != 0UL || cnt != 3) abort ();\n+  if (f10 (-9UL, 10) != 1UL || cnt != 4) abort ();\n+  if (f11 (-15, 0) != (unsigned char) -15 || cnt != 5) abort ();\n+  if (f11 (-15, 14) != (unsigned char) -1 || cnt != 6) abort ();\n+  if (f11 (-15, 15) != 0 || cnt != 6) abort ();\n+  if (f11 (-15, 16) != 1 || cnt != 6) abort ();\n+  if (f12 (-9132ULL, 0) != -9132ULL || cnt != 6) abort ();\n+  if (f12 (-9132ULL, 9131) != -1ULL || cnt != 6) abort ();\n+  if (f12 (-9132ULL, 9132) != 0 || cnt != 7) abort ();\n+  if (f12 (-9132ULL, 9133) != 1ULL || cnt != 8) abort ();\n+  if (f13 (-7U, 0) != -7U || cnt != 9) abort ();\n+  if (f13 (-7U, 6) != -1U || cnt != 10) abort ();\n+  if (f13 (-7U, 7) != 0U || cnt != 10) abort ();\n+  if (f13 (-7U, 8) != 1U || cnt != 10) abort ();\n+  if (f14 (-9UL, 0) != -9UL || cnt != 10) abort ();\n+  if (f14 (-9UL, 8) != -1UL || cnt != 10) abort ();\n+  if (f14 (-9UL, 9) != 0UL || cnt != 11) abort ();\n+  if (f14 (-9UL, 10) != 1UL || cnt != 12) abort ();\n+  if (f15 (-15, 0) != (unsigned short) -15 || cnt != 13) abort ();\n+  if (f15 (-15, 14) != (unsigned short) -1 || cnt != 14) abort ();\n+  if (f15 (-15, 15) != 0 || cnt != 14) abort ();\n+  if (f15 (-15, 16) != 1 || cnt != 14) abort ();\n+  if (f16 (-9132ULL, 0) != -9132ULL || cnt != 14) abort ();\n+  if (f16 (-9132ULL, 9131) != -1ULL || cnt != 14) abort ();\n+  if (f16 (-9132ULL, 9132) != 0 || cnt != 15) abort ();\n+  if (f16 (-9132ULL, 9133) != 1ULL || cnt != 16) abort ();\n+  return 0;\n+}"}, {"sha": "f937375737e746353d4df5fb38c570f61898a673", "filename": "gcc/testsuite/gcc.dg/pr67089-5.c", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-5.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,82 @@\n+/* PR target/67089 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-loop-if-convert\" } */\n+\n+extern void abort (void);\n+\n+int cnt;\n+unsigned int a[16], b[16], c[16];\n+\n+__attribute__((noinline, noclone))\n+void foo (int x)\n+{\n+  asm volatile (\"\" : : \"g\" (x) : \"memory\");\n+  cnt++;\n+}\n+\n+__attribute__((noinline, noclone)) void\n+f0 (unsigned int x)\n+{\n+  for (int i = 0; i < 16; i++)\n+    {\n+      unsigned int r = x - a[i];\n+      b[i] = r;\n+      c[i] = r > x ? 7 : x;\n+    }\n+}\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x)\t\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x - 2U, if (r > x) foo (0))\n+T (2, unsigned long, x - 2U, if (r <= x) foo (0))\n+T (3, unsigned short, 2U - x, if (r > 2U) foo (0))\n+T (4, unsigned char, 2U - x, if (r <= 2U) foo (0))\n+T (5, unsigned int, x + -2U, if (r > x) foo (0))\n+T (6, unsigned long, x + -2UL, if (r <= x) foo (0))\n+T (7, unsigned short, (unsigned short) -2 + x, if (r > (unsigned short) -2) foo (0))\n+T (8, unsigned char, (unsigned char) -2 + x, if (r <= (unsigned char) -2) foo (0))\n+\n+int\n+main ()\n+{\n+  int i;\n+  for (i = 0; i < 16; i++)\n+    a[i] = i - 7;\n+  f0 (5);\n+  for (i = 0; i < 16; i++)\n+    if (b[i] != 12U - i || c[i] != 7 - 2 * (i >= 7 && i < 13))\n+      abort ();\n+  if (f1 (3) != 1 || cnt != 0) abort ();\n+  if (f1 (2) != 0 || cnt != 0) abort ();\n+  if (f1 (1) != -1U || cnt != 1) abort ();\n+  if (f2 (3) != 1 || cnt != 2) abort ();\n+  if (f2 (2) != 0 || cnt != 3) abort ();\n+  if (f2 (1) != -1UL || cnt != 3) abort ();\n+  if (f3 (3) != (unsigned short) -1 || cnt != 4) abort ();\n+  if (f3 (2) != 0 || cnt != 4) abort ();\n+  if (f3 (1) != 1 || cnt != 4) abort ();\n+  if (f4 (3) != (unsigned char) -1 || cnt != 4) abort ();\n+  if (f4 (2) != 0 || cnt != 5) abort ();\n+  if (f4 (1) != 1 || cnt != 6) abort ();\n+  if (f5 (3) != 1 || cnt != 6) abort ();\n+  if (f5 (2) != 0 || cnt != 6) abort ();\n+  if (f5 (1) != -1U || cnt != 7) abort ();\n+  if (f6 (3) != 1 || cnt != 8) abort ();\n+  if (f6 (2) != 0 || cnt != 9) abort ();\n+  if (f6 (1) != -1UL || cnt != 9) abort ();\n+  if (f7 (3) != 1 || cnt != 9) abort ();\n+  if (f7 (2) != 0 || cnt != 9) abort ();\n+  if (f7 (1) != (unsigned short) -1 || cnt != 10) abort ();\n+  if (f8 (3) != 1 || cnt != 11) abort ();\n+  if (f8 (2) != 0 || cnt != 12) abort ();\n+  if (f8 (1) != (unsigned char) -1 || cnt != 12) abort ();\n+  return 0;\n+}"}, {"sha": "9b0708b5bc4d076eb79a9eb388ed8ddc7baecf96", "filename": "gcc/testsuite/gcc.dg/pr67089-6.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-6.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,62 @@\n+/* PR target/67089 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul\" } */\n+\n+extern void abort (void);\n+\n+int cnt;\n+unsigned int a[16], b[16], c[16], d;\n+void foo (int x);\n+\n+__attribute__((noinline, noclone)) void\n+f0 (unsigned int x)\n+{\n+  for (int i = 0; i < 16; i++)\n+    {\n+      unsigned int r = x - a[i];\n+      b[i] = r;\n+      c[i] = r > x ? 7 : x;\n+    }\n+}\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x, type y)\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x - y, if (r > x) foo (0))\n+T (2, unsigned long, x - y, if (r <= x) foo (0))\n+T (3, unsigned short, x - y, if (x < r) foo (r))\n+T (4, unsigned long long, x - y, if (x >= r) foo (0))\n+T (5, unsigned int, x - y, if (d || r > x) foo (0))\n+T (6, unsigned long, x - y, if (d || r <= x) foo (0))\n+T (7, unsigned char, x - y, if (d || x < r) foo (0))\n+T (8, unsigned long long, x - y, if (d || x >= r) foo (0))\n+T (9, unsigned int, x + y, if (r >= x) foo (0))\n+T (10, unsigned long, x + y, if (r < x) foo (0))\n+T (11, unsigned short, x + y, if (x <= r) foo (r))\n+T (12, unsigned long long, x + y, if (d || x > r) foo (0))\n+T (13, unsigned int, x + y, if (d || r >= x) foo (0))\n+T (14, unsigned long, x + y, if (d || r < x) foo (0))\n+T (15, unsigned short, x + y, if (d || x <= r) foo (0))\n+T (16, unsigned long long, x + y, if (d || x > r) foo (0))\n+T (17, unsigned int, x + y, if (r >= y) foo (0))\n+T (18, unsigned long, x + y, if (r < y) foo (0))\n+T (19, unsigned short, x + y, if (y <= r) foo (r))\n+T (20, unsigned long long, x + y, if (d || y > r) foo (0))\n+T (21, unsigned int, x + y, if (d || r >= y) foo (0))\n+T (22, unsigned long, x + y, if (d || r < y) foo (0))\n+T (23, unsigned short, x + y, if (d || y <= r) foo (0))\n+T (24, unsigned long long, x + y, if (d || y > r) foo (0))\n+T (25, unsigned short, 2U - x, if (r > 2U) foo (0))\n+T (26, unsigned char, 2U - x, if (r <= 2U) foo (0))\n+\n+/* { dg-final { scan-tree-dump-times \"ADD_OVERFLOW\" 16 \"widening_mul\" { target { { i?86-*-* x86_64-*-* } && { ! ia32 } } } } } */\n+/* { dg-final { scan-tree-dump-times \"SUB_OVERFLOW\" 11 \"widening_mul\" { target { { i?86-*-* x86_64-*-* } && { ! ia32 } } } } } */\n+/* { dg-final { scan-tree-dump-times \"ADD_OVERFLOW\" 12 \"widening_mul\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n+/* { dg-final { scan-tree-dump-times \"SUB_OVERFLOW\" 9 \"widening_mul\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */"}, {"sha": "dc05e3b226325d8bea118aabdd607eefb6942fb4", "filename": "gcc/testsuite/gcc.dg/pr67089-7.c", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67089-7.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -0,0 +1,62 @@\n+/* PR target/67089 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul\" } */\n+\n+extern void abort (void);\n+\n+int cnt, d;\n+void foo (int x);\n+\n+#define T(n, type, op, cond) \\\n+__attribute__((noinline, noclone))\t\\\n+type\t\t\t\t\t\\\n+f##n (type x, type y)\t\t\t\\\n+{\t\t\t\t\t\\\n+  type r = op;\t\t\t\t\\\n+  cond;\t\t\t\t\t\\\n+  return r;\t\t\t\t\\\n+}\n+\n+T (1, unsigned int, x - y, if (r >= x) foo (0))\n+T (2, unsigned long, x - y, if (r < x) foo (0))\n+T (3, unsigned short, x - y, if (x <= r) foo (r))\n+T (4, unsigned long long, x - y, if (d || x > r) foo (0))\n+T (5, unsigned int, x - y, if (d || r >= x) foo (0))\n+T (6, unsigned long, x - y, if (d || r < x) foo (0))\n+T (7, unsigned short, x - y, if (d || x <= r) foo (0))\n+T (8, unsigned long long, x - y, if (d || x > r) foo (0))\n+T (9, unsigned int, x - y, if (r > y) foo (0))\n+T (10, unsigned long, x - y, if (r <= y) foo (0))\n+T (11, unsigned short, x - y, if (y < r) foo (r))\n+T (12, unsigned long long, x - y, if (y >= r) foo (0))\n+T (13, unsigned int, x - y, if (r >= y) foo (0))\n+T (14, unsigned long, x - y, if (r < y) foo (0))\n+T (15, unsigned short, x - y, if (y <= r) foo (r))\n+T (16, unsigned long long, x - y, if (d || y > r) foo (0))\n+T (17, unsigned int, x - y, if (d || r > y) foo (0))\n+T (18, unsigned long, x - y, if (d || r <= y) foo (0))\n+T (19, unsigned char, x - y, if (d || y < r) foo (0))\n+T (20, unsigned long long, x - y, if (d || y >= r) foo (0))\n+T (21, unsigned int, x - y, if (d || r >= y) foo (0))\n+T (22, unsigned long, x - y, if (d || r < y) foo (0))\n+T (23, unsigned short, x - y, if (d || y <= r) foo (0))\n+T (24, unsigned long long, x - y, if (d || y > r) foo (0))\n+T (25, unsigned int, x + y, if (r > x) foo (0))\n+T (26, unsigned long, x + y, if (r <= x) foo (0))\n+T (27, unsigned short, x + y, if (x < r) foo (r))\n+T (28, unsigned long long, x + y, if (x >= r) foo (0))\n+T (29, unsigned int, x + y, if (d || r > x) foo (0))\n+T (30, unsigned long, x + y, if (d || r <= x) foo (0))\n+T (31, unsigned char, x + y, if (d || x < r) foo (0))\n+T (32, unsigned long long, x + y, if (d || x >= r) foo (0))\n+T (33, unsigned int, x + y, if (r > y) foo (0))\n+T (34, unsigned long, x + y, if (r <= y) foo (0))\n+T (35, unsigned short, x + y, if (y < r) foo (r))\n+T (36, unsigned long long, x + y, if (y >= r) foo (0))\n+T (37, unsigned int, x + y, if (d || r > y) foo (0))\n+T (38, unsigned long, x + y, if (d || r <= y) foo (0))\n+T (39, unsigned char, x + y, if (d || y < r) foo (0))\n+T (40, unsigned long long, x + y, if (d || y >= r) foo (0))\n+\n+/* { dg-final { scan-tree-dump-not \"ADD_OVERFLOW\" \"widening_mul\" } } */\n+/* { dg-final { scan-tree-dump-not \"SUB_OVERFLOW\" \"widening_mul\" } } */"}, {"sha": "8376eab746d88d276ae1efaf6cfdb8f528fc885d", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 185, "deletions": 1, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6837d899c86d8b5eab15103e9466039304897ae7/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=6837d899c86d8b5eab15103e9466039304897ae7", "patch": "@@ -3491,6 +3491,189 @@ convert_mult_to_fma (gimple *mul_stmt, tree op1, tree op2)\n   return true;\n }\n \n+\n+/* Helper function of match_uaddsub_overflow.  Return 1\n+   if USE_STMT is unsigned overflow check ovf != 0 for\n+   STMT, -1 if USE_STMT is unsigned overflow check ovf == 0\n+   and 0 otherwise.  */\n+\n+static int\n+uaddsub_overflow_check_p (gimple *stmt, gimple *use_stmt)\n+{\n+  enum tree_code ccode = ERROR_MARK;\n+  tree crhs1 = NULL_TREE, crhs2 = NULL_TREE;\n+  if (gimple_code (use_stmt) == GIMPLE_COND)\n+    {\n+      ccode = gimple_cond_code (use_stmt);\n+      crhs1 = gimple_cond_lhs (use_stmt);\n+      crhs2 = gimple_cond_rhs (use_stmt);\n+    }\n+  else if (is_gimple_assign (use_stmt))\n+    {\n+      if (gimple_assign_rhs_class (use_stmt) == GIMPLE_BINARY_RHS)\n+\t{\n+\t  ccode = gimple_assign_rhs_code (use_stmt);\n+\t  crhs1 = gimple_assign_rhs1 (use_stmt);\n+\t  crhs2 = gimple_assign_rhs2 (use_stmt);\n+\t}\n+      else if (gimple_assign_rhs_code (use_stmt) == COND_EXPR)\n+\t{\n+\t  tree cond = gimple_assign_rhs1 (use_stmt);\n+\t  if (COMPARISON_CLASS_P (cond))\n+\t    {\n+\t      ccode = TREE_CODE (cond);\n+\t      crhs1 = TREE_OPERAND (cond, 0);\n+\t      crhs2 = TREE_OPERAND (cond, 1);\n+\t    }\n+\t  else\n+\t    return 0;\n+\t}\n+      else\n+\treturn 0;\n+    }\n+  else\n+    return 0;\n+\n+  if (TREE_CODE_CLASS (ccode) != tcc_comparison)\n+    return 0;\n+\n+  enum tree_code code = gimple_assign_rhs_code (stmt);\n+  tree lhs = gimple_assign_lhs (stmt);\n+  tree rhs1 = gimple_assign_rhs1 (stmt);\n+  tree rhs2 = gimple_assign_rhs2 (stmt);\n+\n+  switch (ccode)\n+    {\n+    case GT_EXPR:\n+    case LE_EXPR:\n+      /* r = a - b; r > a or r <= a\n+\t r = a + b; a > r or a <= r or b > r or b <= r.  */\n+      if ((code == MINUS_EXPR && crhs1 == lhs && crhs2 == rhs1)\n+\t  || (code == PLUS_EXPR && (crhs1 == rhs1 || crhs1 == rhs2)\n+\t      && crhs2 == lhs))\n+\treturn ccode == GT_EXPR ? 1 : -1;\n+      break;\n+    case LT_EXPR:\n+    case GE_EXPR:\n+      /* r = a - b; a < r or a >= r\n+\t r = a + b; r < a or r >= a or r < b or r >= b.  */\n+      if ((code == MINUS_EXPR && crhs1 == rhs1 && crhs2 == lhs)\n+\t  || (code == PLUS_EXPR && crhs1 == lhs\n+\t      && (crhs2 == rhs1 || crhs2 == rhs2)))\n+\treturn ccode == LT_EXPR ? 1 : -1;\n+      break;\n+    default:\n+      break;\n+    }\n+  return 0;\n+}\n+\n+/* Recognize for unsigned x\n+   x = y - z;\n+   if (x > y)\n+   where there are other uses of x and replace it with\n+   _7 = SUB_OVERFLOW (y, z);\n+   x = REALPART_EXPR <_7>;\n+   _8 = IMAGPART_EXPR <_7>;\n+   if (_8)\n+   and similarly for addition.  */\n+\n+static bool\n+match_uaddsub_overflow (gimple_stmt_iterator *gsi, gimple *stmt,\n+\t\t\tenum tree_code code)\n+{\n+  tree lhs = gimple_assign_lhs (stmt);\n+  tree type = TREE_TYPE (lhs);\n+  use_operand_p use_p;\n+  imm_use_iterator iter;\n+  bool use_seen = false;\n+  bool ovf_use_seen = false;\n+  gimple *use_stmt;\n+\n+  gcc_checking_assert (code == PLUS_EXPR || code == MINUS_EXPR);\n+  if (!INTEGRAL_TYPE_P (type)\n+      || !TYPE_UNSIGNED (type)\n+      || has_zero_uses (lhs)\n+      || has_single_use (lhs)\n+      || optab_handler (code == PLUS_EXPR ? uaddv4_optab : usubv4_optab,\n+\t\t\tTYPE_MODE (type)) == CODE_FOR_nothing)\n+    return false;\n+\n+  FOR_EACH_IMM_USE_FAST (use_p, iter, lhs)\n+    {\n+      use_stmt = USE_STMT (use_p);\n+      if (is_gimple_debug (use_stmt))\n+\tcontinue;\n+\n+      if (uaddsub_overflow_check_p (stmt, use_stmt))\n+\tovf_use_seen = true;\n+      else\n+\tuse_seen = true;\n+      if (ovf_use_seen && use_seen)\n+\tbreak;\n+    }\n+\n+  if (!ovf_use_seen || !use_seen)\n+    return false;\n+\n+  tree ctype = build_complex_type (type);\n+  tree rhs1 = gimple_assign_rhs1 (stmt);\n+  tree rhs2 = gimple_assign_rhs2 (stmt);\n+  gcall *g = gimple_build_call_internal (code == PLUS_EXPR\n+\t\t\t\t\t ? IFN_ADD_OVERFLOW : IFN_SUB_OVERFLOW,\n+\t\t\t\t\t 2, rhs1, rhs2);\n+  tree ctmp = make_ssa_name (ctype);\n+  gimple_call_set_lhs (g, ctmp);\n+  gsi_insert_before (gsi, g, GSI_SAME_STMT);\n+  gassign *g2 = gimple_build_assign (lhs, REALPART_EXPR,\n+\t\t\t\t     build1 (REALPART_EXPR, type, ctmp));\n+  gsi_replace (gsi, g2, true);\n+  tree ovf = make_ssa_name (type);\n+  g2 = gimple_build_assign (ovf, IMAGPART_EXPR,\n+\t\t\t    build1 (IMAGPART_EXPR, type, ctmp));\n+  gsi_insert_after (gsi, g2, GSI_NEW_STMT);\n+\n+  FOR_EACH_IMM_USE_STMT (use_stmt, iter, lhs)\n+    {\n+      if (is_gimple_debug (use_stmt))\n+\tcontinue;\n+\n+      int ovf_use = uaddsub_overflow_check_p (stmt, use_stmt);\n+      if (ovf_use == 0)\n+\tcontinue;\n+      if (gimple_code (use_stmt) == GIMPLE_COND)\n+\t{\n+\t  gcond *cond_stmt = as_a <gcond *> (use_stmt);\n+\t  gimple_cond_set_lhs (cond_stmt, ovf);\n+\t  gimple_cond_set_rhs (cond_stmt, build_int_cst (type, 0));\n+\t  gimple_cond_set_code (cond_stmt, ovf_use == 1 ? NE_EXPR : EQ_EXPR);\n+\t}\n+      else\n+\t{\n+\t  gcc_checking_assert (is_gimple_assign (use_stmt));\n+\t  if (gimple_assign_rhs_class (use_stmt) == GIMPLE_BINARY_RHS)\n+\t    {\n+\t      gimple_assign_set_rhs1 (use_stmt, ovf);\n+\t      gimple_assign_set_rhs2 (use_stmt, build_int_cst (type, 0));\n+\t      gimple_assign_set_rhs_code (use_stmt,\n+\t\t\t\t\t  ovf_use == 1 ? NE_EXPR : EQ_EXPR);\n+\t    }\n+\t  else\n+\t    {\n+\t      gcc_checking_assert (gimple_assign_rhs_code (use_stmt)\n+\t\t\t\t   == COND_EXPR);\n+\t      tree cond = build2 (ovf_use == 1 ? NE_EXPR : EQ_EXPR,\n+\t\t\t\t  boolean_type_node, ovf,\n+\t\t\t\t  build_int_cst (type, 0));\n+\t      gimple_assign_set_rhs1 (use_stmt, cond);\n+\t    }\n+\t}\n+      update_stmt (use_stmt);\n+    }\n+  return true;\n+}\n+\n+\n /* Find integer multiplications where the operands are extended from\n    smaller types, and replace the MULT_EXPR with a WIDEN_MULT_EXPR\n    where appropriate.  */\n@@ -3563,7 +3746,8 @@ pass_optimize_widening_mul::execute (function *fun)\n \n \t\tcase PLUS_EXPR:\n \t\tcase MINUS_EXPR:\n-\t\t  convert_plusminus_to_widen (&gsi, stmt, code);\n+\t\t  if (!convert_plusminus_to_widen (&gsi, stmt, code))\n+\t\t    match_uaddsub_overflow (&gsi, stmt, code);\n \t\t  break;\n \n \t\tdefault:;"}]}