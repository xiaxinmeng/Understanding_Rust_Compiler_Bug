{"sha": "ac3554c568c57f468e8f57e86de4ce2c86d55b62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMzNTU0YzU2OGM1N2Y0NjhlOGY1N2U4NmRlNGNlMmM4NmQ1NWI2Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-04T18:13:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-04T18:13:57Z"}, "message": "PR c++/17365, DR 218\n\n\tPR c++/17365, DR 218\n\t* name-lookup.c (add_function): Ignore non-functions.\n\nFrom-SVN: r153905", "tree": {"sha": "4dbfbd02d59c34758fff83b6ac257c304de0899d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dbfbd02d59c34758fff83b6ac257c304de0899d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac3554c568c57f468e8f57e86de4ce2c86d55b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3554c568c57f468e8f57e86de4ce2c86d55b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac3554c568c57f468e8f57e86de4ce2c86d55b62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3554c568c57f468e8f57e86de4ce2c86d55b62/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e9dc421e5619c53ef12192450ef03fd4d7f5d63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9dc421e5619c53ef12192450ef03fd4d7f5d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e9dc421e5619c53ef12192450ef03fd4d7f5d63"}], "stats": {"total": 92, "additions": 56, "deletions": 36}, "files": [{"sha": "1014832241d37b6e9ff8f233abfc923161d2608b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -1,3 +1,8 @@\n+2009-11-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/17365, DR 218\n+\t* name-lookup.c (add_function): Ignore non-functions.\n+\n 2009-11-03  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/36959"}, {"sha": "c3f742ea2e86a2306423f4a23ff89c2c14b97791", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -4565,26 +4565,15 @@ add_function (struct arg_lookup *k, tree fn)\n      total number of functions being compared, which should usually be the\n      case.  */\n \n-  /* We must find only functions, or exactly one non-function.  */\n-  if (!k->functions)\n+  if (!is_overloaded_fn (fn))\n+    /* All names except those of (possibly overloaded) functions and\n+       function templates are ignored.  */;\n+  else if (!k->functions)\n     k->functions = fn;\n   else if (fn == k->functions)\n     ;\n-  else if (is_overloaded_fn (k->functions) && is_overloaded_fn (fn))\n-    k->functions = build_overload (fn, k->functions);\n   else\n-    {\n-      tree f1 = OVL_CURRENT (k->functions);\n-      tree f2 = fn;\n-      if (is_overloaded_fn (f1))\n-\t{\n-\t  fn = f1; f1 = f2; f2 = fn;\n-\t}\n-      error (\"%q+D is not a function,\", f1);\n-      error (\"  conflict with %q+D\", f2);\n-      error (\"  in call to %qD\", k->name);\n-      return true;\n-    }\n+    k->functions = build_overload (fn, k->functions);\n \n   return false;\n }"}, {"sha": "f11bfa2d9e96815d8121e70b69c06fcdb26c836f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -1,3 +1,11 @@\n+2009-11-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/17365, DR 218\n+\t* g++.dg/lookup/koenig6.C: New.\n+\t* g++.dg/lookup/koenig5.C: Adjust.\n+\t* g++.dg/template/crash56.C: Adjust.\n+\t* g++.old-deja/g++.ns/koenig5.C: Adjust.\n+\n 2009-11-04  Harsha Jagasia  <harsha.jagasia@amd.com>\n \t    Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n "}, {"sha": "6ecc25daadb9ac8a60e7581ce1fd8a8b8260b829", "filename": "gcc/testsuite/g++.dg/lookup/koenig5.C", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -8,39 +8,39 @@\n namespace N\n {\n   struct A {};\n-  void One (...);  // { dg-error \"conflict with\" \"\" }\n-  void (*Two) (...);  // { dg-error \"not a function\" \"\" }\n-  namespace Three {} // { dg-error \"lookup finds|not a function\" \"\" }\n+  void One (...);\n+  void (*Two) (...);\n+  namespace Three {}\n }\n \n namespace M\n {\n   struct B {};\n-  struct One {};  // { dg-error \"lookup finds|not a function\" \"\" }\n-  void (*Two) (...);  // { dg-error \"conflict with\" \"\" }\n-  void Three (...);  // { dg-error \"conflict with\" \"\" }\n+  struct One {};\n+  void (*Two) (...);\n+  void Three (...);\n }\n \n namespace O \n {\n   struct C {};\n-  void Two (...); // { dg-error \"conflict with\" \"\" }\n+  void Two (...);\n }\n   \n void g (N::A *a, M::B *b, O::C *c)\n {\n   One (a); // ok\n-  One (b); // { dg-error \"in call to\" \"\" }\n-  One (a, b); // { dg-error \"in call to\" \"\" }\n+  One (a, b); // ok\n+  One (b); // { dg-error \"not declared\" }\n \n-  Two (a); // ok\n-  Two (a, a); // ok\n-  Two (b); // ok\n   Two (c); // ok\n-  Two (a, b); // { dg-error \"in call to\" \"\" }\n-  Two (a, c); // { dg-error \"in call to\" \"\" }\n+  Two (a, c); // ok\n+  Two (a); // { dg-error \"not declared\" }\n+  Two (a, a); // error masked by earlier error\n+  Two (b); // error masked by earlier error\n+  Two (a, b); // error masked by earlier error\n   \n-  Three (a); // { dg-error \"in call to\" \"\" }\n   Three (b); // ok\n-  Three (a, b); // { dg-error \"in call to\" \"\" }\n+  Three (a, b); // ok\n+  Three (a); // { dg-error \"not declared\" }\n }"}, {"sha": "9fdf771e0cf3bf43387fd4a14e85be55de5ada55", "filename": "gcc/testsuite/g++.dg/lookup/koenig6.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig6.C?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/17365\n+// ADL should not find B::N.\n+\n+namespace A\n+{\n+  namespace B\n+  {\n+    template <typename T> struct N {int n_;};\n+  }\n+  template <typename T> int N( T p ) { return p->n_; }\n+  template <typename T> void f( T p ) { N(p); }  // #1\n+}\n+int main()\n+{\n+  A::B::N<int> n;\n+  A::f(&n);\n+  return 0;\n+}"}, {"sha": "03bddf42a572322f732e835768e870257656859d", "filename": "gcc/testsuite/g++.dg/template/crash56.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash56.C?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -7,10 +7,10 @@\n \n namespace N\n {\n-  struct A { A (A*); }; // { dg-error \"lookup finds\" \"\" }\n+  struct A { A (A*); };\n }\n \n template<typename T> void g (N::A *p)\n {\n-  (void) A (p); // { dg-error \"in call\" \"\" }\n+  (void) A (p); // { dg-message \"\" \"\" }\n }"}, {"sha": "33061ad0bd8ae9e2f74ef39df451f5e281bee174", "filename": "gcc/testsuite/g++.old-deja/g++.ns/koenig5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac3554c568c57f468e8f57e86de4ce2c86d55b62/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fkoenig5.C?ref=ac3554c568c57f468e8f57e86de4ce2c86d55b62", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n-// To find function pointers in Koenig lookup is ok as long as we only find one.\n+// Function pointers are ignored in Koenig lookup. (DR 218)\n namespace A{\n   void foo();             \n   struct X{};\n@@ -14,5 +14,5 @@ void g()\n   foo(new X);            // ok -- DR 218 says that we find the global\n \t\t\t // foo variable first, and therefore do not\n \t\t\t // perform argument-dependent lookup.\n-  bar(new X);            // ok\n+  bar(new X);            // { dg-error \"not declared\" }\n }"}]}