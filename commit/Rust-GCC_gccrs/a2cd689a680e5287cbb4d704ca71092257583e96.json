{"sha": "a2cd689a680e5287cbb4d704ca71092257583e96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjZDY4OWE2ODBlNTI4N2NiYjRkNzA0Y2E3MTA5MjI1NzU4M2U5Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-09-18T14:25:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-09-18T14:25:39Z"}, "message": "sol2.h (WIDEST_HARDWARE_FP_SIZE): Move to...\n\n\t* config/sparc/sol2.h (WIDEST_HARDWARE_FP_SIZE): Move to...\n\t* config/sparc/sparc.h (WIDEST_HARDWARE_FP_SIZE): ...here.\n\nFrom-SVN: r140458", "tree": {"sha": "871a87cf568bfda26aff175b37d26e85610cb61e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/871a87cf568bfda26aff175b37d26e85610cb61e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2cd689a680e5287cbb4d704ca71092257583e96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cd689a680e5287cbb4d704ca71092257583e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2cd689a680e5287cbb4d704ca71092257583e96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cd689a680e5287cbb4d704ca71092257583e96/comments", "author": null, "committer": null, "parents": [{"sha": "4b756989b32aaf3fb7a6634de437bbe97d861654", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b756989b32aaf3fb7a6634de437bbe97d861654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b756989b32aaf3fb7a6634de437bbe97d861654"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "1b09bc4bada35c17af119907ad11c6a439d9451f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cd689a680e5287cbb4d704ca71092257583e96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cd689a680e5287cbb4d704ca71092257583e96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2cd689a680e5287cbb4d704ca71092257583e96", "patch": "@@ -1,3 +1,8 @@\n+2008-09-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sol2.h (WIDEST_HARDWARE_FP_SIZE): Move to...\n+\t* config/sparc/sparc.h (WIDEST_HARDWARE_FP_SIZE): ...here.\n+\n 2008-09-18  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-outof-ssa.c (eliminate_useless_phis): fix formatting."}, {"sha": "a31a2e33ad896ebb8e98f2fa23842bba52f5fc5f", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cd689a680e5287cbb4d704ca71092257583e96/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cd689a680e5287cbb4d704ca71092257583e96/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=a2cd689a680e5287cbb4d704ca71092257583e96", "patch": "@@ -138,9 +138,6 @@ along with GCC; see the file COPYING3.  If not see\n    SPARC ABI says that long double is 4 words.  */\n #define LONG_DOUBLE_TYPE_SIZE 128\n \n-/* But indicate that it isn't supported by the hardware.  */\n-#define WIDEST_HARDWARE_FP_SIZE 64\n-\n /* Solaris's _Qp_* library routine implementation clobbers the output\n    memory before the inputs are fully consumed.  */\n "}, {"sha": "191d6e807bed6b4b2c33eff3fff36374ee76ab79", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cd689a680e5287cbb4d704ca71092257583e96/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cd689a680e5287cbb4d704ca71092257583e96/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=a2cd689a680e5287cbb4d704ca71092257583e96", "patch": "@@ -616,10 +616,14 @@ extern struct sparc_cpu_select sparc_select[];\n #define LONG_LONG_TYPE_SIZE\t64\n #define FLOAT_TYPE_SIZE\t\t32\n #define DOUBLE_TYPE_SIZE\t64\n+\n /* LONG_DOUBLE_TYPE_SIZE is defined per OS even though the\n    SPARC ABI says that it is 128-bit wide.  */\n /* #define LONG_DOUBLE_TYPE_SIZE\t128 */\n \n+/* The widest floating-point format really supported by the hardware.  */\n+#define WIDEST_HARDWARE_FP_SIZE 64\n+\n /* Width in bits of a pointer.\n    See also the macro `Pmode' defined below.  */\n #define POINTER_SIZE (TARGET_PTR64 ? 64 : 32)"}]}