{"sha": "8520690170c14805001693fe2fb88bc7b58a8cbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUyMDY5MDE3MGMxNDgwNTAwMTY5M2ZlMmZiODhiYzdiNThhOGNiZg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2005-11-14T19:48:31Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2005-11-14T19:48:31Z"}, "message": "re PR libfortran/21468 (vectorizing libfortran)\n\n2005-11-14  Janne Blomqvist  <jb@gcc.gnu.org>\n\n        PR fortran/21468\n        * Makefile.am: Add -ftree-vectorize for compiling matmul.\n        * m4/matmul.m4: Add const and restrict to type declarations as\n        appropriate.\n        * m4/matmull.m4: Likewise.\n        * Makefile.in: Regenerated.\n        * generated/matmul_*.c: Likewise.\n\nFrom-SVN: r106898", "tree": {"sha": "ea9d35216d30a0f95f4bdaf4358cdd30d1cf0613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea9d35216d30a0f95f4bdaf4358cdd30d1cf0613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8520690170c14805001693fe2fb88bc7b58a8cbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8520690170c14805001693fe2fb88bc7b58a8cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8520690170c14805001693fe2fb88bc7b58a8cbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8520690170c14805001693fe2fb88bc7b58a8cbf/comments", "author": null, "committer": null, "parents": [{"sha": "d0568f737a5f9e620a14a372a713a54ba1328764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0568f737a5f9e620a14a372a713a54ba1328764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0568f737a5f9e620a14a372a713a54ba1328764"}], "stats": {"total": 529, "additions": 283, "deletions": 246}, "files": [{"sha": "29ebfd270ca2692470e019f6c61f68a14c2d2b6c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -1,3 +1,13 @@\n+2005-11-14  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+        PR fortran/21468\n+        * Makefile.am: Add -ftree-vectorize for compiling matmul.\n+        * m4/matmul.m4: Add const and restrict to type declarations as\n+        appropriate.\n+        * m4/matmull.m4: Likewise.\n+        * Makefile.in: Regenerated.\n+        * generated/matmul_*.c: Likewise.\n+\t\n 2005-11-13  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* intrinsics/fget.c: New file."}, {"sha": "1d916da3c70882bb9b4e6a669f99e5bb8ef20218", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -433,7 +433,7 @@ m4_files= m4/iparm.m4 m4/ifunction.m4 m4/iforeach.m4 m4/all.m4 \\\n gfor_built_src= $(i_all_c) $(i_any_c) $(i_count_c) $(i_maxloc0_c) \\\n     $(i_maxloc1_c) $(i_maxval_c) $(i_minloc0_c) $(i_minloc1_c) $(i_minval_c) \\\n     $(i_product_c) $(i_sum_c) $(i_dotprod_c) $(i_dotprodl_c) $(i_dotprodc_c) \\\n-    $(i_matmul_c) $(i_matmull_c) $(i_transpose_c) $(i_shape_c) $(i_eoshift1_c) \\\n+    $(i_matmull_c) $(i_transpose_c) $(i_shape_c) $(i_eoshift1_c) \\\n     $(i_eoshift3_c) $(i_cshift1_c) $(i_reshape_c) $(in_pack_c) $(in_unpack_c) \\\n     $(i_exponent_c) $(i_fraction_c) $(i_nearest_c) $(i_set_exponent_c) \\\n     $(i_pow_c) \\\n@@ -573,11 +573,17 @@ $(gfor_built_specific2_src) \\\n intrinsics/dprod_r8.f90 \\\n intrinsics/f2c_specifics.F90\n \n+EXTRA_LTLIBRARIES = libmatmul.la\n+libmatmul_la_SOURCES = $(i_matmul_c)\n+libmatmul_la_CFLAGS = -ftree-vectorize $(AM_CFLAGS)\n+\n BUILT_SOURCES=$(gfor_built_src) $(gfor_built_specific_src) \\\n-    $(gfor_built_specific2_src)\n+    $(gfor_built_specific2_src) $(libmatmul_la_SOURCES)\n libgfortran_la_SOURCES = $(gfor_src) $(gfor_built_src) $(gfor_io_src) \\\n     $(gfor_helper_src) $(gfor_io_headers) $(gfor_specific_src)\n \n+libgfortran_la_LIBADD =  libmatmul.la\n+\n I_M4_DEPS=m4/iparm.m4\n I_M4_DEPS0=$(I_M4_DEPS) m4/iforeach.m4\n I_M4_DEPS1=$(I_M4_DEPS) m4/ifunction.m4"}, {"sha": "dacffdcc018cff3e7b27a68d8aa62e36bd401ae6", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 85, "deletions": 72, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -37,12 +37,12 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-DIST_COMMON = $(am__configure_deps) $(srcdir)/../config.guess \\\n-\t$(srcdir)/../config.sub $(srcdir)/../install-sh \\\n-\t$(srcdir)/../ltmain.sh $(srcdir)/../missing \\\n-\t$(srcdir)/../mkinstalldirs $(srcdir)/Makefile.am \\\n-\t$(srcdir)/Makefile.in $(srcdir)/config.h.in \\\n-\t$(top_srcdir)/configure ChangeLog\n+DIST_COMMON = $(am__configure_deps) $(srcdir)/../compile \\\n+\t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n+\t$(srcdir)/../install-sh $(srcdir)/../ltmain.sh \\\n+\t$(srcdir)/../missing $(srcdir)/../mkinstalldirs \\\n+\t$(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n+\t$(srcdir)/config.h.in $(top_srcdir)/configure ChangeLog\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/lead-dot.m4 \\\n@@ -65,7 +65,7 @@ am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n-libgfortran_la_LIBADD =\n+libgfortran_la_DEPENDENCIES = libmatmul.la\n am__objects_1 = compile_options.lo environ.lo error.lo fpu.lo main.lo \\\n \tmemory.lo pause.lo stop.lo string.lo select.lo\n am__objects_2 = all_l4.lo all_l8.lo all_l16.lo\n@@ -116,33 +116,30 @@ am__objects_13 = dotprod_i4.lo dotprod_i8.lo dotprod_i16.lo \\\n am__objects_14 = dotprod_l4.lo dotprod_l8.lo dotprod_l16.lo\n am__objects_15 = dotprod_c4.lo dotprod_c8.lo dotprod_c10.lo \\\n \tdotprod_c16.lo\n-am__objects_16 = matmul_i4.lo matmul_i8.lo matmul_i16.lo matmul_r4.lo \\\n-\tmatmul_r8.lo matmul_r10.lo matmul_r16.lo matmul_c4.lo \\\n-\tmatmul_c8.lo matmul_c10.lo matmul_c16.lo\n-am__objects_17 = matmul_l4.lo matmul_l8.lo matmul_l16.lo\n-am__objects_18 = transpose_i4.lo transpose_i8.lo transpose_i16.lo \\\n+am__objects_16 = matmul_l4.lo matmul_l8.lo matmul_l16.lo\n+am__objects_17 = transpose_i4.lo transpose_i8.lo transpose_i16.lo \\\n \ttranspose_c4.lo transpose_c8.lo transpose_c10.lo \\\n \ttranspose_c16.lo\n-am__objects_19 = shape_i4.lo shape_i8.lo shape_i16.lo\n-am__objects_20 = eoshift1_4.lo eoshift1_8.lo eoshift1_16.lo\n-am__objects_21 = eoshift3_4.lo eoshift3_8.lo eoshift3_16.lo\n-am__objects_22 = cshift1_4.lo cshift1_8.lo cshift1_16.lo\n-am__objects_23 = reshape_i4.lo reshape_i8.lo reshape_i16.lo \\\n+am__objects_18 = shape_i4.lo shape_i8.lo shape_i16.lo\n+am__objects_19 = eoshift1_4.lo eoshift1_8.lo eoshift1_16.lo\n+am__objects_20 = eoshift3_4.lo eoshift3_8.lo eoshift3_16.lo\n+am__objects_21 = cshift1_4.lo cshift1_8.lo cshift1_16.lo\n+am__objects_22 = reshape_i4.lo reshape_i8.lo reshape_i16.lo \\\n \treshape_c4.lo reshape_c8.lo reshape_c10.lo reshape_c16.lo\n-am__objects_24 = in_pack_i4.lo in_pack_i8.lo in_pack_i16.lo \\\n+am__objects_23 = in_pack_i4.lo in_pack_i8.lo in_pack_i16.lo \\\n \tin_pack_c4.lo in_pack_c8.lo in_pack_c10.lo in_pack_c16.lo\n-am__objects_25 = in_unpack_i4.lo in_unpack_i8.lo in_unpack_i16.lo \\\n+am__objects_24 = in_unpack_i4.lo in_unpack_i8.lo in_unpack_i16.lo \\\n \tin_unpack_c4.lo in_unpack_c8.lo in_unpack_c10.lo \\\n \tin_unpack_c16.lo\n-am__objects_26 = exponent_r4.lo exponent_r8.lo exponent_r10.lo \\\n+am__objects_25 = exponent_r4.lo exponent_r8.lo exponent_r10.lo \\\n \texponent_r16.lo\n-am__objects_27 = fraction_r4.lo fraction_r8.lo fraction_r10.lo \\\n+am__objects_26 = fraction_r4.lo fraction_r8.lo fraction_r10.lo \\\n \tfraction_r16.lo\n-am__objects_28 = nearest_r4.lo nearest_r8.lo nearest_r10.lo \\\n+am__objects_27 = nearest_r4.lo nearest_r8.lo nearest_r10.lo \\\n \tnearest_r16.lo\n-am__objects_29 = set_exponent_r4.lo set_exponent_r8.lo \\\n+am__objects_28 = set_exponent_r4.lo set_exponent_r8.lo \\\n \tset_exponent_r10.lo set_exponent_r16.lo\n-am__objects_30 = pow_i4_i4.lo pow_i8_i4.lo pow_i16_i4.lo pow_r4_i4.lo \\\n+am__objects_29 = pow_i4_i4.lo pow_i8_i4.lo pow_i16_i4.lo pow_r4_i4.lo \\\n \tpow_r8_i4.lo pow_r10_i4.lo pow_r16_i4.lo pow_c4_i4.lo \\\n \tpow_c8_i4.lo pow_c10_i4.lo pow_c16_i4.lo pow_i4_i8.lo \\\n \tpow_i8_i8.lo pow_i16_i8.lo pow_r4_i8.lo pow_r8_i8.lo \\\n@@ -151,7 +148,7 @@ am__objects_30 = pow_i4_i4.lo pow_i8_i4.lo pow_i16_i4.lo pow_r4_i4.lo \\\n \tpow_i16_i16.lo pow_r4_i16.lo pow_r8_i16.lo pow_r10_i16.lo \\\n \tpow_r16_i16.lo pow_c4_i16.lo pow_c8_i16.lo pow_c10_i16.lo \\\n \tpow_c16_i16.lo\n-am__objects_31 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \\\n+am__objects_30 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \\\n \t$(am__objects_5) $(am__objects_6) $(am__objects_7) \\\n \t$(am__objects_8) $(am__objects_9) $(am__objects_10) \\\n \t$(am__objects_11) $(am__objects_12) $(am__objects_13) \\\n@@ -160,11 +157,11 @@ am__objects_31 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \\\n \t$(am__objects_20) $(am__objects_21) $(am__objects_22) \\\n \t$(am__objects_23) $(am__objects_24) $(am__objects_25) \\\n \t$(am__objects_26) $(am__objects_27) $(am__objects_28) \\\n-\t$(am__objects_29) $(am__objects_30)\n-am__objects_32 = close.lo file_pos.lo format.lo inquire.lo \\\n+\t$(am__objects_29)\n+am__objects_31 = close.lo file_pos.lo format.lo inquire.lo \\\n \tlist_read.lo lock.lo open.lo read.lo size_from_kind.lo \\\n \ttransfer.lo unit.lo unix.lo write.lo\n-am__objects_33 = associated.lo abort.lo args.lo bessel.lo \\\n+am__objects_32 = associated.lo abort.lo args.lo bessel.lo \\\n \tc99_functions.lo chdir.lo cpu_time.lo cshift0.lo ctime.lo \\\n \tdate_and_time.lo env.lo erf.lo eoshift0.lo eoshift2.lo \\\n \tetime.lo exit.lo fget.lo flush.lo fnum.lo ftell.lo gerror.lo \\\n@@ -177,8 +174,8 @@ am__objects_33 = associated.lo abort.lo args.lo bessel.lo \\\n \tsystem_clock.lo time.lo transpose_generic.lo tty.lo umask.lo \\\n \tunlink.lo unpack_generic.lo in_pack_generic.lo \\\n \tin_unpack_generic.lo normalize.lo\n-am__objects_34 =\n-am__objects_35 = _abs_c4.lo _abs_c8.lo _abs_c10.lo _abs_c16.lo \\\n+am__objects_33 =\n+am__objects_34 = _abs_c4.lo _abs_c8.lo _abs_c10.lo _abs_c16.lo \\\n \t_abs_i4.lo _abs_i8.lo _abs_i16.lo _abs_r4.lo _abs_r8.lo \\\n \t_abs_r10.lo _abs_r16.lo _exp_r4.lo _exp_r8.lo _exp_r10.lo \\\n \t_exp_r16.lo _exp_c4.lo _exp_c8.lo _exp_c10.lo _exp_c16.lo \\\n@@ -198,20 +195,29 @@ am__objects_35 = _abs_c4.lo _abs_c8.lo _abs_c10.lo _abs_c16.lo \\\n \t_conjg_c4.lo _conjg_c8.lo _conjg_c10.lo _conjg_c16.lo \\\n \t_aint_r4.lo _aint_r8.lo _aint_r10.lo _aint_r16.lo _anint_r4.lo \\\n \t_anint_r8.lo _anint_r10.lo _anint_r16.lo\n-am__objects_36 = _sign_i4.lo _sign_i8.lo _sign_i16.lo _sign_r4.lo \\\n+am__objects_35 = _sign_i4.lo _sign_i8.lo _sign_i16.lo _sign_r4.lo \\\n \t_sign_r8.lo _sign_r10.lo _sign_r16.lo _dim_i4.lo _dim_i8.lo \\\n \t_dim_i16.lo _dim_r4.lo _dim_r8.lo _dim_r10.lo _dim_r16.lo \\\n \t_atan2_r4.lo _atan2_r8.lo _atan2_r10.lo _atan2_r16.lo \\\n \t_mod_i4.lo _mod_i8.lo _mod_i16.lo _mod_r4.lo _mod_r8.lo\n-am__objects_37 = $(am__objects_35) $(am__objects_36) dprod_r8.lo \\\n+am__objects_36 = $(am__objects_34) $(am__objects_35) dprod_r8.lo \\\n \tf2c_specifics.lo\n-am_libgfortran_la_OBJECTS = $(am__objects_1) $(am__objects_31) \\\n-\t$(am__objects_32) $(am__objects_33) $(am__objects_34) \\\n-\t$(am__objects_37)\n+am_libgfortran_la_OBJECTS = $(am__objects_1) $(am__objects_30) \\\n+\t$(am__objects_31) $(am__objects_32) $(am__objects_33) \\\n+\t$(am__objects_36)\n libgfortran_la_OBJECTS = $(am_libgfortran_la_OBJECTS)\n libgfortranbegin_la_LIBADD =\n am_libgfortranbegin_la_OBJECTS = fmain.lo\n libgfortranbegin_la_OBJECTS = $(am_libgfortranbegin_la_OBJECTS)\n+libmatmul_la_LIBADD =\n+am__objects_37 = libmatmul_la-matmul_i4.lo libmatmul_la-matmul_i8.lo \\\n+\tlibmatmul_la-matmul_i16.lo libmatmul_la-matmul_r4.lo \\\n+\tlibmatmul_la-matmul_r8.lo libmatmul_la-matmul_r10.lo \\\n+\tlibmatmul_la-matmul_r16.lo libmatmul_la-matmul_c4.lo \\\n+\tlibmatmul_la-matmul_c8.lo libmatmul_la-matmul_c10.lo \\\n+\tlibmatmul_la-matmul_c16.lo\n+am_libmatmul_la_OBJECTS = $(am__objects_37)\n+libmatmul_la_OBJECTS = $(am_libmatmul_la_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I.\n depcomp =\n am__depfiles_maybe =\n@@ -233,9 +239,10 @@ LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)\n LTFCCOMPILE = $(LIBTOOL) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)\n-SOURCES = $(libgfortran_la_SOURCES) $(libgfortranbegin_la_SOURCES)\n+SOURCES = $(libgfortran_la_SOURCES) $(libgfortranbegin_la_SOURCES) \\\n+\t$(libmatmul_la_SOURCES)\n DIST_SOURCES = $(libgfortran_la_SOURCES) \\\n-\t$(libgfortranbegin_la_SOURCES)\n+\t$(libgfortranbegin_la_SOURCES) $(libmatmul_la_SOURCES)\n MULTISRCTOP = \n MULTIBUILDTOP = \n MULTIDIRS = \n@@ -774,7 +781,7 @@ m4_files = m4/iparm.m4 m4/ifunction.m4 m4/iforeach.m4 m4/all.m4 \\\n gfor_built_src = $(i_all_c) $(i_any_c) $(i_count_c) $(i_maxloc0_c) \\\n     $(i_maxloc1_c) $(i_maxval_c) $(i_minloc0_c) $(i_minloc1_c) $(i_minval_c) \\\n     $(i_product_c) $(i_sum_c) $(i_dotprod_c) $(i_dotprodl_c) $(i_dotprodc_c) \\\n-    $(i_matmul_c) $(i_matmull_c) $(i_transpose_c) $(i_shape_c) $(i_eoshift1_c) \\\n+    $(i_matmull_c) $(i_transpose_c) $(i_shape_c) $(i_eoshift1_c) \\\n     $(i_eoshift3_c) $(i_cshift1_c) $(i_reshape_c) $(in_pack_c) $(in_unpack_c) \\\n     $(i_exponent_c) $(i_fraction_c) $(i_nearest_c) $(i_set_exponent_c) \\\n     $(i_pow_c) \\\n@@ -915,12 +922,16 @@ $(gfor_built_specific2_src) \\\n intrinsics/dprod_r8.f90 \\\n intrinsics/f2c_specifics.F90\n \n+EXTRA_LTLIBRARIES = libmatmul.la\n+libmatmul_la_SOURCES = $(i_matmul_c)\n+libmatmul_la_CFLAGS = -ftree-vectorize $(AM_CFLAGS)\n BUILT_SOURCES = $(gfor_built_src) $(gfor_built_specific_src) \\\n-    $(gfor_built_specific2_src)\n+    $(gfor_built_specific2_src) $(libmatmul_la_SOURCES)\n \n libgfortran_la_SOURCES = $(gfor_src) $(gfor_built_src) $(gfor_io_src) \\\n     $(gfor_helper_src) $(gfor_io_headers) $(gfor_specific_src)\n \n+libgfortran_la_LIBADD = libmatmul.la\n I_M4_DEPS = m4/iparm.m4\n I_M4_DEPS0 = $(I_M4_DEPS) m4/iforeach.m4\n I_M4_DEPS1 = $(I_M4_DEPS) m4/ifunction.m4\n@@ -1011,6 +1022,8 @@ libgfortran.la: $(libgfortran_la_OBJECTS) $(libgfortran_la_DEPENDENCIES)\n \t$(FCLINK) -rpath $(toolexeclibdir) $(libgfortran_la_LDFLAGS) $(libgfortran_la_OBJECTS) $(libgfortran_la_LIBADD) $(LIBS)\n libgfortranbegin.la: $(libgfortranbegin_la_OBJECTS) $(libgfortranbegin_la_DEPENDENCIES) \n \t$(LINK) -rpath $(toolexeclibdir) $(libgfortranbegin_la_LDFLAGS) $(libgfortranbegin_la_OBJECTS) $(libgfortranbegin_la_LIBADD) $(LIBS)\n+libmatmul.la: $(libmatmul_la_OBJECTS) $(libmatmul_la_DEPENDENCIES) \n+\t$(LINK)  $(libmatmul_la_LDFLAGS) $(libmatmul_la_OBJECTS) $(libmatmul_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n@@ -1870,39 +1883,6 @@ dotprod_c10.lo: generated/dotprod_c10.c\n dotprod_c16.lo: generated/dotprod_c16.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dotprod_c16.lo `test -f 'generated/dotprod_c16.c' || echo '$(srcdir)/'`generated/dotprod_c16.c\n \n-matmul_i4.lo: generated/matmul_i4.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_i4.lo `test -f 'generated/matmul_i4.c' || echo '$(srcdir)/'`generated/matmul_i4.c\n-\n-matmul_i8.lo: generated/matmul_i8.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_i8.lo `test -f 'generated/matmul_i8.c' || echo '$(srcdir)/'`generated/matmul_i8.c\n-\n-matmul_i16.lo: generated/matmul_i16.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_i16.lo `test -f 'generated/matmul_i16.c' || echo '$(srcdir)/'`generated/matmul_i16.c\n-\n-matmul_r4.lo: generated/matmul_r4.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_r4.lo `test -f 'generated/matmul_r4.c' || echo '$(srcdir)/'`generated/matmul_r4.c\n-\n-matmul_r8.lo: generated/matmul_r8.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_r8.lo `test -f 'generated/matmul_r8.c' || echo '$(srcdir)/'`generated/matmul_r8.c\n-\n-matmul_r10.lo: generated/matmul_r10.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_r10.lo `test -f 'generated/matmul_r10.c' || echo '$(srcdir)/'`generated/matmul_r10.c\n-\n-matmul_r16.lo: generated/matmul_r16.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_r16.lo `test -f 'generated/matmul_r16.c' || echo '$(srcdir)/'`generated/matmul_r16.c\n-\n-matmul_c4.lo: generated/matmul_c4.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_c4.lo `test -f 'generated/matmul_c4.c' || echo '$(srcdir)/'`generated/matmul_c4.c\n-\n-matmul_c8.lo: generated/matmul_c8.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_c8.lo `test -f 'generated/matmul_c8.c' || echo '$(srcdir)/'`generated/matmul_c8.c\n-\n-matmul_c10.lo: generated/matmul_c10.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_c10.lo `test -f 'generated/matmul_c10.c' || echo '$(srcdir)/'`generated/matmul_c10.c\n-\n-matmul_c16.lo: generated/matmul_c16.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_c16.lo `test -f 'generated/matmul_c16.c' || echo '$(srcdir)/'`generated/matmul_c16.c\n-\n matmul_l4.lo: generated/matmul_l4.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matmul_l4.lo `test -f 'generated/matmul_l4.c' || echo '$(srcdir)/'`generated/matmul_l4.c\n \n@@ -2389,6 +2369,39 @@ in_unpack_generic.lo: runtime/in_unpack_generic.c\n normalize.lo: runtime/normalize.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o normalize.lo `test -f 'runtime/normalize.c' || echo '$(srcdir)/'`runtime/normalize.c\n \n+libmatmul_la-matmul_i4.lo: generated/matmul_i4.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_i4.lo `test -f 'generated/matmul_i4.c' || echo '$(srcdir)/'`generated/matmul_i4.c\n+\n+libmatmul_la-matmul_i8.lo: generated/matmul_i8.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_i8.lo `test -f 'generated/matmul_i8.c' || echo '$(srcdir)/'`generated/matmul_i8.c\n+\n+libmatmul_la-matmul_i16.lo: generated/matmul_i16.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_i16.lo `test -f 'generated/matmul_i16.c' || echo '$(srcdir)/'`generated/matmul_i16.c\n+\n+libmatmul_la-matmul_r4.lo: generated/matmul_r4.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_r4.lo `test -f 'generated/matmul_r4.c' || echo '$(srcdir)/'`generated/matmul_r4.c\n+\n+libmatmul_la-matmul_r8.lo: generated/matmul_r8.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_r8.lo `test -f 'generated/matmul_r8.c' || echo '$(srcdir)/'`generated/matmul_r8.c\n+\n+libmatmul_la-matmul_r10.lo: generated/matmul_r10.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_r10.lo `test -f 'generated/matmul_r10.c' || echo '$(srcdir)/'`generated/matmul_r10.c\n+\n+libmatmul_la-matmul_r16.lo: generated/matmul_r16.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_r16.lo `test -f 'generated/matmul_r16.c' || echo '$(srcdir)/'`generated/matmul_r16.c\n+\n+libmatmul_la-matmul_c4.lo: generated/matmul_c4.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_c4.lo `test -f 'generated/matmul_c4.c' || echo '$(srcdir)/'`generated/matmul_c4.c\n+\n+libmatmul_la-matmul_c8.lo: generated/matmul_c8.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_c8.lo `test -f 'generated/matmul_c8.c' || echo '$(srcdir)/'`generated/matmul_c8.c\n+\n+libmatmul_la-matmul_c10.lo: generated/matmul_c10.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_c10.lo `test -f 'generated/matmul_c10.c' || echo '$(srcdir)/'`generated/matmul_c10.c\n+\n+libmatmul_la-matmul_c16.lo: generated/matmul_c16.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmatmul_la_CFLAGS) $(CFLAGS) -c -o libmatmul_la-matmul_c16.lo `test -f 'generated/matmul_c16.c' || echo '$(srcdir)/'`generated/matmul_c16.c\n+\n .f90.o:\n \t$(FCCOMPILE) -c -o $@ $<\n "}, {"sha": "44e734f0863592d10461ef8c21820e221f5c6a25", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_c10 (gfc_array_c10 * retarray, gfc_array_c10 * a, gfc_array_c10 * b);\n+extern void matmul_c10 (gfc_array_c10 * const restrict retarray, \n+\tgfc_array_c10 * const restrict a, gfc_array_c10 * const restrict b);\n export_proto(matmul_c10);\n \n void\n-matmul_c10 (gfc_array_c10 * retarray, gfc_array_c10 * a, gfc_array_c10 * b)\n+matmul_c10 (gfc_array_c10 * const restrict retarray, \n+\tgfc_array_c10 * const restrict a, gfc_array_c10 * const restrict b)\n {\n-  GFC_COMPLEX_10 *abase;\n-  GFC_COMPLEX_10 *bbase;\n-  GFC_COMPLEX_10 *dest;\n+  const GFC_COMPLEX_10 * restrict abase;\n+  const GFC_COMPLEX_10 * restrict bbase;\n+  GFC_COMPLEX_10 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_c10 (gfc_array_c10 * retarray, gfc_array_c10 * a, gfc_array_c10 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_c10 (gfc_array_c10 * retarray, gfc_array_c10 * a, gfc_array_c10 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_COMPLEX_10 *bbase_y;\n-      GFC_COMPLEX_10 *dest_y;\n-      GFC_COMPLEX_10 *abase_n;\n+      const GFC_COMPLEX_10 * restrict bbase_y;\n+      GFC_COMPLEX_10 * restrict dest_y;\n+      const GFC_COMPLEX_10 * restrict abase_n;\n       GFC_COMPLEX_10 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "451ea82f6e84263a078db48a4a1061550135d307", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_c16 (gfc_array_c16 * retarray, gfc_array_c16 * a, gfc_array_c16 * b);\n+extern void matmul_c16 (gfc_array_c16 * const restrict retarray, \n+\tgfc_array_c16 * const restrict a, gfc_array_c16 * const restrict b);\n export_proto(matmul_c16);\n \n void\n-matmul_c16 (gfc_array_c16 * retarray, gfc_array_c16 * a, gfc_array_c16 * b)\n+matmul_c16 (gfc_array_c16 * const restrict retarray, \n+\tgfc_array_c16 * const restrict a, gfc_array_c16 * const restrict b)\n {\n-  GFC_COMPLEX_16 *abase;\n-  GFC_COMPLEX_16 *bbase;\n-  GFC_COMPLEX_16 *dest;\n+  const GFC_COMPLEX_16 * restrict abase;\n+  const GFC_COMPLEX_16 * restrict bbase;\n+  GFC_COMPLEX_16 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_c16 (gfc_array_c16 * retarray, gfc_array_c16 * a, gfc_array_c16 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_c16 (gfc_array_c16 * retarray, gfc_array_c16 * a, gfc_array_c16 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_COMPLEX_16 *bbase_y;\n-      GFC_COMPLEX_16 *dest_y;\n-      GFC_COMPLEX_16 *abase_n;\n+      const GFC_COMPLEX_16 * restrict bbase_y;\n+      GFC_COMPLEX_16 * restrict dest_y;\n+      const GFC_COMPLEX_16 * restrict abase_n;\n       GFC_COMPLEX_16 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "5e59f1dafdcc05ae83582b4f9d1236f2cfe71f02", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_c4 (gfc_array_c4 * retarray, gfc_array_c4 * a, gfc_array_c4 * b);\n+extern void matmul_c4 (gfc_array_c4 * const restrict retarray, \n+\tgfc_array_c4 * const restrict a, gfc_array_c4 * const restrict b);\n export_proto(matmul_c4);\n \n void\n-matmul_c4 (gfc_array_c4 * retarray, gfc_array_c4 * a, gfc_array_c4 * b)\n+matmul_c4 (gfc_array_c4 * const restrict retarray, \n+\tgfc_array_c4 * const restrict a, gfc_array_c4 * const restrict b)\n {\n-  GFC_COMPLEX_4 *abase;\n-  GFC_COMPLEX_4 *bbase;\n-  GFC_COMPLEX_4 *dest;\n+  const GFC_COMPLEX_4 * restrict abase;\n+  const GFC_COMPLEX_4 * restrict bbase;\n+  GFC_COMPLEX_4 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_c4 (gfc_array_c4 * retarray, gfc_array_c4 * a, gfc_array_c4 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_c4 (gfc_array_c4 * retarray, gfc_array_c4 * a, gfc_array_c4 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_COMPLEX_4 *bbase_y;\n-      GFC_COMPLEX_4 *dest_y;\n-      GFC_COMPLEX_4 *abase_n;\n+      const GFC_COMPLEX_4 * restrict bbase_y;\n+      GFC_COMPLEX_4 * restrict dest_y;\n+      const GFC_COMPLEX_4 * restrict abase_n;\n       GFC_COMPLEX_4 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "cdf10e204616f3d3eebb49f974449e9004c6cb93", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_c8 (gfc_array_c8 * retarray, gfc_array_c8 * a, gfc_array_c8 * b);\n+extern void matmul_c8 (gfc_array_c8 * const restrict retarray, \n+\tgfc_array_c8 * const restrict a, gfc_array_c8 * const restrict b);\n export_proto(matmul_c8);\n \n void\n-matmul_c8 (gfc_array_c8 * retarray, gfc_array_c8 * a, gfc_array_c8 * b)\n+matmul_c8 (gfc_array_c8 * const restrict retarray, \n+\tgfc_array_c8 * const restrict a, gfc_array_c8 * const restrict b)\n {\n-  GFC_COMPLEX_8 *abase;\n-  GFC_COMPLEX_8 *bbase;\n-  GFC_COMPLEX_8 *dest;\n+  const GFC_COMPLEX_8 * restrict abase;\n+  const GFC_COMPLEX_8 * restrict bbase;\n+  GFC_COMPLEX_8 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_c8 (gfc_array_c8 * retarray, gfc_array_c8 * a, gfc_array_c8 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_c8 (gfc_array_c8 * retarray, gfc_array_c8 * a, gfc_array_c8 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_COMPLEX_8 *bbase_y;\n-      GFC_COMPLEX_8 *dest_y;\n-      GFC_COMPLEX_8 *abase_n;\n+      const GFC_COMPLEX_8 * restrict bbase_y;\n+      GFC_COMPLEX_8 * restrict dest_y;\n+      const GFC_COMPLEX_8 * restrict abase_n;\n       GFC_COMPLEX_8 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "a5a40b487f9aaedbbaa2754c2cdaf1b3d0197cf5", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_i16 (gfc_array_i16 * retarray, gfc_array_i16 * a, gfc_array_i16 * b);\n+extern void matmul_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict a, gfc_array_i16 * const restrict b);\n export_proto(matmul_i16);\n \n void\n-matmul_i16 (gfc_array_i16 * retarray, gfc_array_i16 * a, gfc_array_i16 * b)\n+matmul_i16 (gfc_array_i16 * const restrict retarray, \n+\tgfc_array_i16 * const restrict a, gfc_array_i16 * const restrict b)\n {\n-  GFC_INTEGER_16 *abase;\n-  GFC_INTEGER_16 *bbase;\n-  GFC_INTEGER_16 *dest;\n+  const GFC_INTEGER_16 * restrict abase;\n+  const GFC_INTEGER_16 * restrict bbase;\n+  GFC_INTEGER_16 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_i16 (gfc_array_i16 * retarray, gfc_array_i16 * a, gfc_array_i16 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_i16 (gfc_array_i16 * retarray, gfc_array_i16 * a, gfc_array_i16 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_INTEGER_16 *bbase_y;\n-      GFC_INTEGER_16 *dest_y;\n-      GFC_INTEGER_16 *abase_n;\n+      const GFC_INTEGER_16 * restrict bbase_y;\n+      GFC_INTEGER_16 * restrict dest_y;\n+      const GFC_INTEGER_16 * restrict abase_n;\n       GFC_INTEGER_16 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "dca23987e716037a33316041d6b7ee8b552e4b2c", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_i4 (gfc_array_i4 * retarray, gfc_array_i4 * a, gfc_array_i4 * b);\n+extern void matmul_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict a, gfc_array_i4 * const restrict b);\n export_proto(matmul_i4);\n \n void\n-matmul_i4 (gfc_array_i4 * retarray, gfc_array_i4 * a, gfc_array_i4 * b)\n+matmul_i4 (gfc_array_i4 * const restrict retarray, \n+\tgfc_array_i4 * const restrict a, gfc_array_i4 * const restrict b)\n {\n-  GFC_INTEGER_4 *abase;\n-  GFC_INTEGER_4 *bbase;\n-  GFC_INTEGER_4 *dest;\n+  const GFC_INTEGER_4 * restrict abase;\n+  const GFC_INTEGER_4 * restrict bbase;\n+  GFC_INTEGER_4 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_i4 (gfc_array_i4 * retarray, gfc_array_i4 * a, gfc_array_i4 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_i4 (gfc_array_i4 * retarray, gfc_array_i4 * a, gfc_array_i4 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_INTEGER_4 *bbase_y;\n-      GFC_INTEGER_4 *dest_y;\n-      GFC_INTEGER_4 *abase_n;\n+      const GFC_INTEGER_4 * restrict bbase_y;\n+      GFC_INTEGER_4 * restrict dest_y;\n+      const GFC_INTEGER_4 * restrict abase_n;\n       GFC_INTEGER_4 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "ceadbe3c801045c48609a3cd78ab5db4c4670184", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_i8 (gfc_array_i8 * retarray, gfc_array_i8 * a, gfc_array_i8 * b);\n+extern void matmul_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict a, gfc_array_i8 * const restrict b);\n export_proto(matmul_i8);\n \n void\n-matmul_i8 (gfc_array_i8 * retarray, gfc_array_i8 * a, gfc_array_i8 * b)\n+matmul_i8 (gfc_array_i8 * const restrict retarray, \n+\tgfc_array_i8 * const restrict a, gfc_array_i8 * const restrict b)\n {\n-  GFC_INTEGER_8 *abase;\n-  GFC_INTEGER_8 *bbase;\n-  GFC_INTEGER_8 *dest;\n+  const GFC_INTEGER_8 * restrict abase;\n+  const GFC_INTEGER_8 * restrict bbase;\n+  GFC_INTEGER_8 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_i8 (gfc_array_i8 * retarray, gfc_array_i8 * a, gfc_array_i8 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_i8 (gfc_array_i8 * retarray, gfc_array_i8 * a, gfc_array_i8 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_INTEGER_8 *bbase_y;\n-      GFC_INTEGER_8 *dest_y;\n-      GFC_INTEGER_8 *abase_n;\n+      const GFC_INTEGER_8 * restrict bbase_y;\n+      GFC_INTEGER_8 * restrict dest_y;\n+      const GFC_INTEGER_8 * restrict abase_n;\n       GFC_INTEGER_8 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "caa1b11910e0273ba6b65dbacc8304c349fff9b1", "filename": "libgfortran/generated/matmul_l16.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l16.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -38,15 +38,17 @@ Boston, MA 02110-1301, USA.  */\n /* Dimensions: retarray(x,y) a(x, count) b(count,y).\n    Either a or b can be rank 1.  In this case x or y is 1.  */\n \n-extern void matmul_l16 (gfc_array_l16 *, gfc_array_l4 *, gfc_array_l4 *);\n+extern void matmul_l16 (gfc_array_l16 * const restrict, \n+\tgfc_array_l4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(matmul_l16);\n \n void\n-matmul_l16 (gfc_array_l16 * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n+matmul_l16 (gfc_array_l16 * const restrict retarray, \n+\tgfc_array_l4 * const restrict a, gfc_array_l4 * const restrict b)\n {\n-  GFC_INTEGER_4 *abase;\n-  GFC_INTEGER_4 *bbase;\n-  GFC_LOGICAL_16 *dest;\n+  const GFC_INTEGER_4 * restrict abase;\n+  const GFC_INTEGER_4 * restrict bbase;\n+  GFC_LOGICAL_16 * restrict dest;\n   index_type rxstride;\n   index_type rystride;\n   index_type xcount;\n@@ -56,8 +58,8 @@ matmul_l16 (gfc_array_l16 * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n   index_type x;\n   index_type y;\n \n-  GFC_INTEGER_4 *pa;\n-  GFC_INTEGER_4 *pb;\n+  const GFC_INTEGER_4 * restrict pa;\n+  const GFC_INTEGER_4 * restrict pb;\n   index_type astride;\n   index_type bstride;\n   index_type count;"}, {"sha": "9a89113bbc62b5c5be4d303206176d04c2a25921", "filename": "libgfortran/generated/matmul_l4.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l4.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -38,15 +38,17 @@ Boston, MA 02110-1301, USA.  */\n /* Dimensions: retarray(x,y) a(x, count) b(count,y).\n    Either a or b can be rank 1.  In this case x or y is 1.  */\n \n-extern void matmul_l4 (gfc_array_l4 *, gfc_array_l4 *, gfc_array_l4 *);\n+extern void matmul_l4 (gfc_array_l4 * const restrict, \n+\tgfc_array_l4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(matmul_l4);\n \n void\n-matmul_l4 (gfc_array_l4 * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n+matmul_l4 (gfc_array_l4 * const restrict retarray, \n+\tgfc_array_l4 * const restrict a, gfc_array_l4 * const restrict b)\n {\n-  GFC_INTEGER_4 *abase;\n-  GFC_INTEGER_4 *bbase;\n-  GFC_LOGICAL_4 *dest;\n+  const GFC_INTEGER_4 * restrict abase;\n+  const GFC_INTEGER_4 * restrict bbase;\n+  GFC_LOGICAL_4 * restrict dest;\n   index_type rxstride;\n   index_type rystride;\n   index_type xcount;\n@@ -56,8 +58,8 @@ matmul_l4 (gfc_array_l4 * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n   index_type x;\n   index_type y;\n \n-  GFC_INTEGER_4 *pa;\n-  GFC_INTEGER_4 *pb;\n+  const GFC_INTEGER_4 * restrict pa;\n+  const GFC_INTEGER_4 * restrict pb;\n   index_type astride;\n   index_type bstride;\n   index_type count;"}, {"sha": "bd01f1642d34ba9dc128e1f30d8b3ac0d9bd1e85", "filename": "libgfortran/generated/matmul_l8.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l8.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -38,15 +38,17 @@ Boston, MA 02110-1301, USA.  */\n /* Dimensions: retarray(x,y) a(x, count) b(count,y).\n    Either a or b can be rank 1.  In this case x or y is 1.  */\n \n-extern void matmul_l8 (gfc_array_l8 *, gfc_array_l4 *, gfc_array_l4 *);\n+extern void matmul_l8 (gfc_array_l8 * const restrict, \n+\tgfc_array_l4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(matmul_l8);\n \n void\n-matmul_l8 (gfc_array_l8 * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n+matmul_l8 (gfc_array_l8 * const restrict retarray, \n+\tgfc_array_l4 * const restrict a, gfc_array_l4 * const restrict b)\n {\n-  GFC_INTEGER_4 *abase;\n-  GFC_INTEGER_4 *bbase;\n-  GFC_LOGICAL_8 *dest;\n+  const GFC_INTEGER_4 * restrict abase;\n+  const GFC_INTEGER_4 * restrict bbase;\n+  GFC_LOGICAL_8 * restrict dest;\n   index_type rxstride;\n   index_type rystride;\n   index_type xcount;\n@@ -56,8 +58,8 @@ matmul_l8 (gfc_array_l8 * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n   index_type x;\n   index_type y;\n \n-  GFC_INTEGER_4 *pa;\n-  GFC_INTEGER_4 *pb;\n+  const GFC_INTEGER_4 * restrict pa;\n+  const GFC_INTEGER_4 * restrict pb;\n   index_type astride;\n   index_type bstride;\n   index_type count;"}, {"sha": "b0ebbeda6c4bbf62be765c9c52e6af88e0ea1fa7", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_r10 (gfc_array_r10 * retarray, gfc_array_r10 * a, gfc_array_r10 * b);\n+extern void matmul_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict a, gfc_array_r10 * const restrict b);\n export_proto(matmul_r10);\n \n void\n-matmul_r10 (gfc_array_r10 * retarray, gfc_array_r10 * a, gfc_array_r10 * b)\n+matmul_r10 (gfc_array_r10 * const restrict retarray, \n+\tgfc_array_r10 * const restrict a, gfc_array_r10 * const restrict b)\n {\n-  GFC_REAL_10 *abase;\n-  GFC_REAL_10 *bbase;\n-  GFC_REAL_10 *dest;\n+  const GFC_REAL_10 * restrict abase;\n+  const GFC_REAL_10 * restrict bbase;\n+  GFC_REAL_10 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_r10 (gfc_array_r10 * retarray, gfc_array_r10 * a, gfc_array_r10 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_r10 (gfc_array_r10 * retarray, gfc_array_r10 * a, gfc_array_r10 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_REAL_10 *bbase_y;\n-      GFC_REAL_10 *dest_y;\n-      GFC_REAL_10 *abase_n;\n+      const GFC_REAL_10 * restrict bbase_y;\n+      GFC_REAL_10 * restrict dest_y;\n+      const GFC_REAL_10 * restrict abase_n;\n       GFC_REAL_10 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "313f8d2d6d88e96760fc9295207b2ddb5b6d4266", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_r16 (gfc_array_r16 * retarray, gfc_array_r16 * a, gfc_array_r16 * b);\n+extern void matmul_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict a, gfc_array_r16 * const restrict b);\n export_proto(matmul_r16);\n \n void\n-matmul_r16 (gfc_array_r16 * retarray, gfc_array_r16 * a, gfc_array_r16 * b)\n+matmul_r16 (gfc_array_r16 * const restrict retarray, \n+\tgfc_array_r16 * const restrict a, gfc_array_r16 * const restrict b)\n {\n-  GFC_REAL_16 *abase;\n-  GFC_REAL_16 *bbase;\n-  GFC_REAL_16 *dest;\n+  const GFC_REAL_16 * restrict abase;\n+  const GFC_REAL_16 * restrict bbase;\n+  GFC_REAL_16 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_r16 (gfc_array_r16 * retarray, gfc_array_r16 * a, gfc_array_r16 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_r16 (gfc_array_r16 * retarray, gfc_array_r16 * a, gfc_array_r16 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_REAL_16 *bbase_y;\n-      GFC_REAL_16 *dest_y;\n-      GFC_REAL_16 *abase_n;\n+      const GFC_REAL_16 * restrict bbase_y;\n+      GFC_REAL_16 * restrict dest_y;\n+      const GFC_REAL_16 * restrict abase_n;\n       GFC_REAL_16 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "74a4e1c23b9a1f775cd1114037c597582d128419", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_r4 (gfc_array_r4 * retarray, gfc_array_r4 * a, gfc_array_r4 * b);\n+extern void matmul_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict a, gfc_array_r4 * const restrict b);\n export_proto(matmul_r4);\n \n void\n-matmul_r4 (gfc_array_r4 * retarray, gfc_array_r4 * a, gfc_array_r4 * b)\n+matmul_r4 (gfc_array_r4 * const restrict retarray, \n+\tgfc_array_r4 * const restrict a, gfc_array_r4 * const restrict b)\n {\n-  GFC_REAL_4 *abase;\n-  GFC_REAL_4 *bbase;\n-  GFC_REAL_4 *dest;\n+  const GFC_REAL_4 * restrict abase;\n+  const GFC_REAL_4 * restrict bbase;\n+  GFC_REAL_4 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_r4 (gfc_array_r4 * retarray, gfc_array_r4 * a, gfc_array_r4 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_r4 (gfc_array_r4 * retarray, gfc_array_r4 * a, gfc_array_r4 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_REAL_4 *bbase_y;\n-      GFC_REAL_4 *dest_y;\n-      GFC_REAL_4 *abase_n;\n+      const GFC_REAL_4 * restrict bbase_y;\n+      GFC_REAL_4 * restrict dest_y;\n+      const GFC_REAL_4 * restrict abase_n;\n       GFC_REAL_4 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "72560f111d4345e5f637d41fc121ff4addb2f611", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -48,15 +48,17 @@ Boston, MA 02110-1301, USA.  */\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_r8 (gfc_array_r8 * retarray, gfc_array_r8 * a, gfc_array_r8 * b);\n+extern void matmul_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict a, gfc_array_r8 * const restrict b);\n export_proto(matmul_r8);\n \n void\n-matmul_r8 (gfc_array_r8 * retarray, gfc_array_r8 * a, gfc_array_r8 * b)\n+matmul_r8 (gfc_array_r8 * const restrict retarray, \n+\tgfc_array_r8 * const restrict a, gfc_array_r8 * const restrict b)\n {\n-  GFC_REAL_8 *abase;\n-  GFC_REAL_8 *bbase;\n-  GFC_REAL_8 *dest;\n+  const GFC_REAL_8 * restrict abase;\n+  const GFC_REAL_8 * restrict bbase;\n+  GFC_REAL_8 * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -105,12 +107,10 @@ matmul_r8 (gfc_array_r8 * retarray, gfc_array_r8 * a, gfc_array_r8 * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -175,9 +175,9 @@ matmul_r8 (gfc_array_r8 * retarray, gfc_array_r8 * a, gfc_array_r8 * b)\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      GFC_REAL_8 *bbase_y;\n-      GFC_REAL_8 *dest_y;\n-      GFC_REAL_8 *abase_n;\n+      const GFC_REAL_8 * restrict bbase_y;\n+      GFC_REAL_8 * restrict dest_y;\n+      const GFC_REAL_8 * restrict abase_n;\n       GFC_REAL_8 bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "730e4d78fd37320608feb79c933c3c93936ee62f", "filename": "libgfortran/m4/matmul.m4", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fm4%2Fmatmul.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fm4%2Fmatmul.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul.m4?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -49,15 +49,17 @@ include(iparm.m4)dnl\n          C(I,J) = C(I,J)+A(I,K)*B(K,J)\n */\n \n-extern void matmul_`'rtype_code (rtype * retarray, rtype * a, rtype * b);\n+extern void matmul_`'rtype_code (rtype * const restrict retarray, \n+\trtype * const restrict a, rtype * const restrict b);\n export_proto(matmul_`'rtype_code);\n \n void\n-matmul_`'rtype_code (rtype * retarray, rtype * a, rtype * b)\n+matmul_`'rtype_code (rtype * const restrict retarray, \n+\trtype * const restrict a, rtype * const restrict b)\n {\n-  rtype_name *abase;\n-  rtype_name *bbase;\n-  rtype_name *dest;\n+  const rtype_name * restrict abase;\n+  const rtype_name * restrict bbase;\n+  rtype_name * restrict dest;\n \n   index_type rxstride, rystride, axstride, aystride, bxstride, bystride;\n   index_type x, y, n, count, xcount, ycount;\n@@ -106,12 +108,10 @@ matmul_`'rtype_code (rtype * retarray, rtype * a, rtype * b)\n       retarray->offset = 0;\n     }\n \n-  abase = a->data;\n-  bbase = b->data;\n-  dest = retarray->data;\n-\n   if (retarray->dim[0].stride == 0)\n     retarray->dim[0].stride = 1;\n+\n+  /* This prevents constifying the input arguments.  */\n   if (a->dim[0].stride == 0)\n     a->dim[0].stride = 1;\n   if (b->dim[0].stride == 0)\n@@ -177,9 +177,9 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n \n   if (rxstride == 1 && axstride == 1 && bxstride == 1)\n     {\n-      rtype_name *bbase_y;\n-      rtype_name *dest_y;\n-      rtype_name *abase_n;\n+      const rtype_name * restrict bbase_y;\n+      rtype_name * restrict dest_y;\n+      const rtype_name * restrict abase_n;\n       rtype_name bbase_yn;\n \n       if (rystride == ycount)"}, {"sha": "5acb4cb06cdb1a81aa002cbee78c4f7e1c1f0dff", "filename": "libgfortran/m4/matmull.m4", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fm4%2Fmatmull.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8520690170c14805001693fe2fb88bc7b58a8cbf/libgfortran%2Fm4%2Fmatmull.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmull.m4?ref=8520690170c14805001693fe2fb88bc7b58a8cbf", "patch": "@@ -39,15 +39,17 @@ include(iparm.m4)dnl\n /* Dimensions: retarray(x,y) a(x, count) b(count,y).\n    Either a or b can be rank 1.  In this case x or y is 1.  */\n \n-extern void matmul_`'rtype_code (rtype *, gfc_array_l4 *, gfc_array_l4 *);\n+extern void matmul_`'rtype_code (rtype * const restrict, \n+\tgfc_array_l4 * const restrict, gfc_array_l4 * const restrict);\n export_proto(matmul_`'rtype_code);\n \n void\n-matmul_`'rtype_code (rtype * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n+matmul_`'rtype_code (rtype * const restrict retarray, \n+\tgfc_array_l4 * const restrict a, gfc_array_l4 * const restrict b)\n {\n-  GFC_INTEGER_4 *abase;\n-  GFC_INTEGER_4 *bbase;\n-  rtype_name *dest;\n+  const GFC_INTEGER_4 * restrict abase;\n+  const GFC_INTEGER_4 * restrict bbase;\n+  rtype_name * restrict dest;\n   index_type rxstride;\n   index_type rystride;\n   index_type xcount;\n@@ -57,8 +59,8 @@ matmul_`'rtype_code (rtype * retarray, gfc_array_l4 * a, gfc_array_l4 * b)\n   index_type x;\n   index_type y;\n \n-  GFC_INTEGER_4 *pa;\n-  GFC_INTEGER_4 *pb;\n+  const GFC_INTEGER_4 * restrict pa;\n+  const GFC_INTEGER_4 * restrict pb;\n   index_type astride;\n   index_type bstride;\n   index_type count;"}]}