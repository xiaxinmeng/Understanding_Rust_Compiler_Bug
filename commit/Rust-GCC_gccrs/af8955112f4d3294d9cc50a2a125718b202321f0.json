{"sha": "af8955112f4d3294d9cc50a2a125718b202321f0", "node_id": "C_kwDOANBUbNoAKGFmODk1NTExMmY0ZDMyOTRkOWNjNTBhMmExMjU3MThiMjAyMzIxZjA", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-03-03T14:06:21Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-08-29T09:15:09Z"}, "message": "s390: Add -munroll-only-small-loops.\n\nInspired by Power we also introduce -munroll-only-small-loops.  This\nimplies activating -funroll-loops and -munroll-only-small-loops at -O2 and\nabove.\n\ngcc/ChangeLog:\n\n\t* common/config/s390/s390-common.cc: Enable -funroll-loops and\n\t-munroll-only-small-loops for OPT_LEVELS_2_PLUS_SPEED_ONLY.\n\t* config/s390/s390.cc (s390_loop_unroll_adjust): Do not unroll\n\tloops larger than 12 instructions.\n\t(s390_override_options_after_change): Set unroll options.\n\t(s390_option_override_internal): Likewise.\n\t* config/s390/s390.opt: Document munroll-only-small-loops.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/s390/vector/vec-copysign.c: Do not unroll.\n\t* gcc.target/s390/zvector/autovec-double-quiet-uneq.c: Dito.\n\t* gcc.target/s390/zvector/autovec-double-signaling-ltgt.c: Dito.\n\t* gcc.target/s390/zvector/autovec-float-quiet-uneq.c: Dito.\n\t* gcc.target/s390/zvector/autovec-float-signaling-ltgt.c: Dito.", "tree": {"sha": "af1b4ea676c7a53a69e062c57837de56d153c6da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af1b4ea676c7a53a69e062c57837de56d153c6da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af8955112f4d3294d9cc50a2a125718b202321f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8955112f4d3294d9cc50a2a125718b202321f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af8955112f4d3294d9cc50a2a125718b202321f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8955112f4d3294d9cc50a2a125718b202321f0/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b3cd1755be55fbed5f86fd55bb1a6c3279f1fc4"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "be3e6f201429029721eae75367e5ce80b29c662f", "filename": "gcc/common/config/s390/s390-common.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.cc?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -64,6 +64,11 @@ static const struct default_options s390_option_optimization_table[] =\n     /* Enable -fsched-pressure by default when optimizing.  */\n     { OPT_LEVELS_1_PLUS, OPT_fsched_pressure, NULL, 1 },\n \n+    /* Enable -munroll-only-small-loops with -funroll-loops to unroll small\n+       loops at -O2 and above by default.  */\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_funroll_loops, NULL, 1 },\n+    { OPT_LEVELS_2_PLUS_SPEED_ONLY, OPT_munroll_only_small_loops, NULL, 1 },\n+\n     /* ??? There are apparently still problems with -fcaller-saves.  */\n     { OPT_LEVELS_ALL, OPT_fcaller_saves, NULL, 0 },\n "}, {"sha": "942ed267b8797698c1fe6446d113862b1103a962", "filename": "gcc/config/s390/s390.cc", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Fconfig%2Fs390%2Fs390.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Fconfig%2Fs390%2Fs390.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.cc?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -15420,6 +15420,21 @@ s390_loop_unroll_adjust (unsigned nunroll, struct loop *loop)\n   if (s390_tune < PROCESSOR_2097_Z10)\n     return nunroll;\n \n+  if (unroll_only_small_loops)\n+    {\n+      /* Only unroll loops smaller than or equal to 12 insns.  */\n+      const unsigned int small_threshold = 12;\n+\n+      if (loop->ninsns > small_threshold)\n+\treturn 0;\n+\n+      /* ???: Make this dependent on the type of registers in\n+\t the loop.  Increase the limit for vector registers.  */\n+      const unsigned int max_insns = optimize >= 3 ? 36 : 24;\n+\n+      nunroll = MIN (nunroll, max_insns / loop->ninsns);\n+    }\n+\n   /* Count the number of memory references within the loop body.  */\n   bbs = get_loop_body (loop);\n   subrtx_iterator::array_type array;\n@@ -15494,6 +15509,19 @@ static void\n s390_override_options_after_change (void)\n {\n   s390_default_align (&global_options);\n+\n+  /* Explicit -funroll-loops turns -munroll-only-small-loops off.  */\n+  if ((OPTION_SET_P (flag_unroll_loops) && flag_unroll_loops)\n+       || (OPTION_SET_P (flag_unroll_all_loops)\n+\t   && flag_unroll_all_loops))\n+    {\n+      if (!OPTION_SET_P (unroll_only_small_loops))\n+\tunroll_only_small_loops = 0;\n+      if (!OPTION_SET_P (flag_cunroll_grow_size))\n+\tflag_cunroll_grow_size = 1;\n+    }\n+  else if (!OPTION_SET_P (flag_cunroll_grow_size))\n+    flag_cunroll_grow_size = flag_peel_loops || optimize >= 3;\n }\n \n static void\n@@ -15703,6 +15731,9 @@ s390_option_override_internal (struct gcc_options *opts,\n   /* Set the default alignment.  */\n   s390_default_align (opts);\n \n+  /* Set unroll options.  */\n+  s390_override_options_after_change ();\n+\n   /* Call target specific restore function to do post-init work.  At the moment,\n      this just sets opts->x_s390_cost_pointer.  */\n   s390_function_specific_restore (opts, opts_set, NULL);"}, {"sha": "c375b9c5f72907b6fc1e10b2228f9843a5079222", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -321,3 +321,7 @@ and the default behavior is to emit separate multiplication and addition\n instructions for long doubles in vector registers, because measurements show\n that this improves performance.  This option allows overriding it for testing\n purposes.\n+\n+munroll-only-small-loops\n+Target Undocumented Var(unroll_only_small_loops) Init(0) Save\n+; Use conservative small loop unrolling."}, {"sha": "b723ceb13be9b4872b350cf169a79601294c4f44", "filename": "gcc/testsuite/gcc.target/s390/vector/vec-copysign.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fvector%2Fvec-copysign.c?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { s390*-*-* } } } */\n-/* { dg-options \"-O2 -ftree-vectorize -mzarch\" } */\n+/* { dg-options \"-O2 -ftree-vectorize -mzarch -fno-unroll-loops\" } */\n /* { dg-final { scan-assembler-times \"vgmg\" 1 } } */\n /* { dg-final { scan-assembler-times \"vgmf\" 1 } } */\n /* { dg-final { scan-assembler-times \"vsel\" 2 } } */"}, {"sha": "8948be28ed5d6ba6070ba2bce881730955b18b65", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-quiet-uneq.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-uneq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-uneq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-quiet-uneq.c?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -march=z13 -mzvector -mzarch\" } */\n+/* { dg-options \"-O3 -march=z13 -mzvector -mzarch -fno-unroll-loops\" } */\n \n #include \"autovec.h\"\n "}, {"sha": "9417b0c4838ff83dd21af324d74f2096d17b3d5e", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-double-signaling-ltgt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-double-signaling-ltgt.c?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch -fno-unroll-loops\" } */\n \n #include \"autovec.h\"\n "}, {"sha": "0a2aca0d5dd37e4ac30f824fbf42c9b5f33fe795", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-quiet-uneq.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-uneq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-uneq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-quiet-uneq.c?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch -fno-unroll-loops\" } */\n \n #include \"autovec.h\"\n "}, {"sha": "15e61b70b0bdbd9e625f7d9d40c7dae546ac6e8b", "filename": "gcc/testsuite/gcc.target/s390/zvector/autovec-float-signaling-ltgt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ltgt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8955112f4d3294d9cc50a2a125718b202321f0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ltgt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fzvector%2Fautovec-float-signaling-ltgt.c?ref=af8955112f4d3294d9cc50a2a125718b202321f0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -march=z14 -mzvector -mzarch\" } */\n+/* { dg-options \"-O3 -march=z14 -mzvector -mzarch -fno-unroll-loops\" } */\n \n #include \"autovec.h\"\n "}]}