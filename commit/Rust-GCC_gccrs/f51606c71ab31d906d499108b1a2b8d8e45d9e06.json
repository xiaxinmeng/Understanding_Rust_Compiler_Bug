{"sha": "f51606c71ab31d906d499108b1a2b8d8e45d9e06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUxNjA2YzcxYWIzMWQ5MDZkNDk5MTA4YjFhMmI4ZDhlNDVkOWUwNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-07-11T13:32:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-07-11T13:32:51Z"}, "message": "re PR bootstrap/71816 (bootstrap broken on multiple targets)\n\n2016-07-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/71816\n\t* tree-ssa-pre.c (compute_avail): Adjust alignment of ref rather\n\tthan replacing all of its operands.\n\n\t* gcc.dg/torture/pr71816.c: New testcase.\n\nFrom-SVN: r238208", "tree": {"sha": "807e81c9fa47e49720195efa23b1e80b1ac00e6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/807e81c9fa47e49720195efa23b1e80b1ac00e6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f51606c71ab31d906d499108b1a2b8d8e45d9e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51606c71ab31d906d499108b1a2b8d8e45d9e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51606c71ab31d906d499108b1a2b8d8e45d9e06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51606c71ab31d906d499108b1a2b8d8e45d9e06/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a442a050ad11c772f865980d578709af38d876e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a442a050ad11c772f865980d578709af38d876e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a442a050ad11c772f865980d578709af38d876e8"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "d0dde932049ba2e1eebd9cb087fadf1f1dab60b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f51606c71ab31d906d499108b1a2b8d8e45d9e06", "patch": "@@ -1,3 +1,9 @@\n+2016-07-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71816\n+\t* tree-ssa-pre.c (compute_avail): Adjust alignment of ref rather\n+\tthan replacing all of its operands.\n+\n 2016-07-11  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.md (UNSPEC_DOLOOP): New unspec."}, {"sha": "1d9dc5b9e4447e357fbab39ebc3d9a88857da155", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f51606c71ab31d906d499108b1a2b8d8e45d9e06", "patch": "@@ -1,3 +1,8 @@\n+2016-07-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71816\n+\t* gcc.dg/torture/pr71816.c: New testcase.\n+\n 2016-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/71783"}, {"sha": "bdd5b1b127f9d39eb7806944898e0fe651512455", "filename": "gcc/testsuite/gcc.dg/torture/pr71816.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71816.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71816.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71816.c?ref=f51606c71ab31d906d499108b1a2b8d8e45d9e06", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+void *ext2fs_resize_mem_p;\n+struct ext2_icount_el {\n+    int ino;\n+} * insert_icount_el_icount_1;\n+int insert_icount_el_icount, insert_icount_el_new_size;\n+void *memcpy();\n+void *realloc();\n+int ext2fs_resize_mem(void *p1) {\n+    int size = 0;\n+    memcpy(&ext2fs_resize_mem_p, p1, sizeof(ext2fs_resize_mem_p));\n+    realloc(&ext2fs_resize_mem_p, size);\n+    return 0;\n+}\n+struct ext2_icount_el *insert_icount_el() {\n+    if (insert_icount_el_icount)\n+      insert_icount_el_new_size = insert_icount_el_icount_1[0].ino;\n+    ext2fs_resize_mem(&insert_icount_el_icount_1);\n+    return 0;\n+}"}, {"sha": "9964c559b25d0b29e4f69a2f8d75baba34821966", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f51606c71ab31d906d499108b1a2b8d8e45d9e06/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=f51606c71ab31d906d499108b1a2b8d8e45d9e06", "patch": "@@ -3791,13 +3791,9 @@ compute_avail (void)\n \t\t\t   || ref1->opcode == MEM_REF)\n \t\t\t  && (TYPE_ALIGN (ref1->type)\n \t\t\t      > TYPE_ALIGN (ref2->type)))\n-\t\t\t{\n-\t\t\t  ref->operands.release ();\n-\t\t\t  ref->operands = operands;\n-\t\t\t  ref1 = ref2;\n-\t\t\t}\n-\t\t      else\n-\t\t\toperands.release ();\n+\t\t\tref1->type\n+\t\t\t  = build_aligned_type (ref1->type,\n+\t\t\t\t\t\tTYPE_ALIGN (ref2->type));\n \t\t      /* TBAA behavior is an obvious part so make sure\n \t\t         that the hashtable one covers this as well\n \t\t\t by adjusting the ref alias set and its base.  */\n@@ -3824,6 +3820,7 @@ compute_avail (void)\n \t\t\t    ref1->op2 = fold_convert (ptr_type_node,\n \t\t\t\t\t\t      ref1->op2);\n \t\t\t}\n+\t\t      operands.release ();\n \n \t\t      result = pre_expr_pool.allocate ();\n \t\t      result->kind = REFERENCE;"}]}