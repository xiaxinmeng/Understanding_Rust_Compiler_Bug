{"sha": "ffdb3d3bfc5137dac557e64396856439784567b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkYjNkM2JmYzUxMzdkYWM1NTdlNjQzOTY4NTY0Mzk3ODQ1NjdiOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T13:21:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-07T13:21:42Z"}, "message": "[multiple changes]\n\n2010-10-07  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n\tComponent_Size): It is now illegal to give an incorrect component size\n\tclause in the case of aliased or atomic components.\n\t* sem_prag.adb (Analyze_Pragma, case Pack): It is now illegal to give\n\tan effective pragma Pack in the case of aliased or atomic components.\n\n2010-10-07  Steve Baird  <baird@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Allocator): Do not bypass expansion\n\tin the case of a violation of an active No_Task_Hierarchy restriction.\n\n2010-10-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Validate_Derived_Type_Instance): If a formal derived\n\ttype is non-limited, an actual for it cannot be limited.\n\nFrom-SVN: r165105", "tree": {"sha": "7420cacba4b7749e5a6a784b5434b2b4892952f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7420cacba4b7749e5a6a784b5434b2b4892952f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffdb3d3bfc5137dac557e64396856439784567b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdb3d3bfc5137dac557e64396856439784567b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffdb3d3bfc5137dac557e64396856439784567b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdb3d3bfc5137dac557e64396856439784567b9/comments", "author": null, "committer": null, "parents": [{"sha": "8da337c5025772d12fd6e6c9bfcc8fbd1307461a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da337c5025772d12fd6e6c9bfcc8fbd1307461a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da337c5025772d12fd6e6c9bfcc8fbd1307461a"}], "stats": {"total": 141, "additions": 108, "deletions": 33}, "files": [{"sha": "c1dbf987b7b033d1a5ae87e206d74d564f6ce16f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ffdb3d3bfc5137dac557e64396856439784567b9", "patch": "@@ -1,3 +1,21 @@\n+2010-10-07  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case\n+\tComponent_Size): It is now illegal to give an incorrect component size\n+\tclause in the case of aliased or atomic components.\n+\t* sem_prag.adb (Analyze_Pragma, case Pack): It is now illegal to give\n+\tan effective pragma Pack in the case of aliased or atomic components.\n+\n+2010-10-07  Steve Baird  <baird@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Allocator): Do not bypass expansion\n+\tin the case of a violation of an active No_Task_Hierarchy restriction.\n+\n+2010-10-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Validate_Derived_Type_Instance): If a formal derived\n+\ttype is non-limited, an actual for it cannot be limited.\n+\n 2010-10-07  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.ads (No_Pool_Assigned): Update documentation."}, {"sha": "6b9fa57630bd802852214452b507e18b53f82422", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ffdb3d3bfc5137dac557e64396856439784567b9", "patch": "@@ -3672,15 +3672,6 @@ package body Exp_Ch4 is\n                if Has_Task (T) then\n                   if No (Master_Id (Base_Type (PtrT))) then\n \n-                     --  If we have a non-library level task with restriction\n-                     --  No_Task_Hierarchy set, then no point in expanding.\n-\n-                     if not Is_Library_Level_Entity (T)\n-                       and then Restriction_Active (No_Task_Hierarchy)\n-                     then\n-                        return;\n-                     end if;\n-\n                      --  The designated type was an incomplete type, and the\n                      --  access type did not get expanded. Salvage it now.\n "}, {"sha": "8168024903114a8795fd39efabd764fcbfc136e5", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=ffdb3d3bfc5137dac557e64396856439784567b9", "patch": "@@ -9969,12 +9969,13 @@ package body Sem_Ch12 is\n          --  interface then  the generic formal is not unless declared\n          --  explicitly so. If not declared limited, the actual cannot be\n          --  limited (see AI05-0087).\n-         --  Disable check for now, limited interfaces implemented by\n-         --  protected types are common, Need to update tests ???\n+         --  Even though this AI is a binding interpretation, we enable the\n+         --  check only in Ada2012 mode, because this improper construct\n+         --  shows up in user code and in existing B-tests.\n \n          if Is_Limited_Type (Act_T)\n            and then not Is_Limited_Type (A_Gen_T)\n-           and then False\n+           and then Ada_Version >= Ada_12\n          then\n             Error_Msg_NE\n               (\"actual for non-limited & cannot be a limited type\", Actual,"}, {"sha": "7b9c04eca181ca8d5e23321d303ce75098f6a4be", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 50, "deletions": 8, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ffdb3d3bfc5137dac557e64396856439784567b9", "patch": "@@ -1298,6 +1298,34 @@ package body Sem_Ch13 is\n             Biased   : Boolean;\n             New_Ctyp : Entity_Id;\n             Decl     : Node_Id;\n+            Ignore   : Boolean := False;\n+\n+            procedure Complain_CS (T : String);\n+            --  Outputs error messages for incorrect CS clause for aliased or\n+            --  atomic components (T is \"aliased\" or \"atomic\");\n+\n+            -----------------\n+            -- Complain_CS --\n+            -----------------\n+\n+            procedure Complain_CS (T : String) is\n+            begin\n+               if Known_Static_Esize (Ctyp) then\n+                  Error_Msg_N\n+                    (\"incorrect component size for \" & T & \" components\", N);\n+                  Error_Msg_Uint_1 := Esize (Ctyp);\n+                  Error_Msg_N (\"\\only allowed value is^\", N);\n+\n+               else\n+                  Error_Msg_N\n+                    (\"component size cannot be given for \" & T & \" components\",\n+                     N);\n+               end if;\n+\n+               return;\n+            end Complain_CS;\n+\n+         --  Start of processing for Component_Size_Case\n \n          begin\n             if not Is_Array_Type (U_Ent) then\n@@ -1315,14 +1343,25 @@ package body Sem_Ch13 is\n             elsif Csize /= No_Uint then\n                Check_Size (Expr, Ctyp, Csize, Biased);\n \n-               if Has_Aliased_Components (Btype)\n-                 and then Csize < 32\n-                 and then Csize /= 8\n-                 and then Csize /= 16\n+               --  Case where component size has no effect\n+\n+               if Known_Static_Esize (Ctyp)\n+                 and then Known_Static_RM_Size (Ctyp)\n+                 and then Esize (Ctyp) = RM_Size (Ctyp)\n+                 and then (Esize (Ctyp) = 8  or else\n+                           Esize (Ctyp) = 16 or else\n+                           Esize (Ctyp) = 32 or else\n+                           Esize (Ctyp) = 64)\n                then\n-                  Error_Msg_N\n-                    (\"component size incorrect for aliased components\", N);\n-                  return;\n+                  Ignore := True;\n+\n+               --  Cannot give component size for aliased/atomic types\n+\n+               elsif Has_Aliased_Components (Btype) then\n+                  Complain_CS (\"aliased\");\n+\n+               elsif Has_Atomic_Components (Btype) then\n+                  Complain_CS (\"atomic\");\n                end if;\n \n                --  For the biased case, build a declaration for a subtype\n@@ -1385,7 +1424,10 @@ package body Sem_Ch13 is\n                end if;\n \n                Set_Has_Component_Size_Clause (Btype, True);\n-               Set_Has_Non_Standard_Rep      (Btype, True);\n+\n+               if not Ignore then\n+                  Set_Has_Non_Standard_Rep (Btype, True);\n+               end if;\n             end if;\n          end Component_Size_Case;\n "}, {"sha": "5df154bbf83062e55c1b750a46a5fd7d7d4b2679", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 36, "deletions": 13, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdb3d3bfc5137dac557e64396856439784567b9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ffdb3d3bfc5137dac557e64396856439784567b9", "patch": "@@ -5912,6 +5912,7 @@ package body Sem_Prag is\n             E    : Entity_Id;\n             D    : Node_Id;\n             K    : Node_Kind;\n+            Ctyp : Entity_Id;\n \n          begin\n             Check_Ada_83_Warning;\n@@ -5943,6 +5944,8 @@ package body Sem_Prag is\n                    and then Nkind (Object_Definition (D)) =\n                                        N_Constrained_Array_Definition)\n             then\n+               Ctyp := Component_Type (E);\n+\n                --  The flag is set on the object, or on the base type\n \n                if Nkind (D) /= N_Object_Declaration then\n@@ -5957,9 +5960,13 @@ package body Sem_Prag is\n                   if Is_Packed (E) then\n                      Set_Is_Packed (E, False);\n \n-                     Error_Pragma_Arg\n-                       (\"?Pack canceled, cannot pack atomic components\",\n-                        Arg1);\n+                     if not (Known_Static_Esize (Ctyp)\n+                              and then Known_Static_RM_Size (Ctyp)\n+                              and then Esize (Ctyp) = RM_Size (Ctyp))\n+                     then\n+                        Error_Pragma_Arg\n+                          (\"cannot pack atomic components\", Arg1);\n+                     end if;\n                   end if;\n                end if;\n \n@@ -9869,6 +9876,8 @@ package body Sem_Prag is\n             Assoc   : constant Node_Id := Arg1;\n             Type_Id : Node_Id;\n             Typ     : Entity_Id;\n+            Ctyp    : Entity_Id;\n+            Ignore  : Boolean := False;\n \n          begin\n             Check_No_Identifiers;\n@@ -9899,18 +9908,29 @@ package body Sem_Prag is\n             --  Array type\n \n             elsif Is_Array_Type (Typ) then\n+               Ctyp := Component_Type (Typ);\n \n-               --  Pack not allowed for aliased or atomic components\n+               --  Ignore pack that does nothing\n \n-               if Has_Aliased_Components (Base_Type (Typ)) then\n-                  Error_Pragma\n-                    (\"pragma% ignored, cannot pack aliased components?\");\n+               if Known_Static_Esize (Ctyp)\n+                 and then Known_Static_RM_Size (Ctyp)\n+                 and then Esize (Ctyp) = RM_Size (Ctyp)\n+                 and then (Esize (Ctyp) = 8  or else\n+                           Esize (Ctyp) = 16 or else\n+                           Esize (Ctyp) = 32 or else\n+                           Esize (Ctyp) = 64)\n+               then\n+                  Ignore := True;\n+\n+               --  Pack not allowed for aliased/atomic components\n+\n+               elsif Has_Aliased_Components (Base_Type (Typ)) then\n+                  Error_Pragma (\"cannot pack aliased components\");\n \n                elsif Has_Atomic_Components (Typ)\n                  or else Is_Atomic (Component_Type (Typ))\n                then\n-                  Error_Pragma\n-                    (\"?pragma% ignored, cannot pack atomic components\");\n+                  Error_Pragma (\"cannot pack atomic components\");\n                end if;\n \n                --  If we had an explicit component size given, then we do not\n@@ -9944,12 +9964,15 @@ package body Sem_Prag is\n                      --  For normal non-VM target, do the packing\n \n                      elsif VM_Target = No_VM then\n-                        Set_Is_Packed            (Base_Type (Typ));\n+                        if not Ignore then\n+                           Set_Is_Packed            (Base_Type (Typ));\n+                           Set_Has_Non_Standard_Rep (Base_Type (Typ));\n+                        end if;\n+\n                         Set_Has_Pragma_Pack      (Base_Type (Typ));\n-                        Set_Has_Non_Standard_Rep (Base_Type (Typ));\n \n-                     --  If we ignore the pack, then warn about this, except\n-                     --  that we suppress the warning in GNAT mode.\n+                     --  If we ignore the pack for VM_Targets, then warn about\n+                     --  this, except suppress the warning in GNAT mode.\n \n                      elsif not GNAT_Mode then\n                         Error_Pragma"}]}