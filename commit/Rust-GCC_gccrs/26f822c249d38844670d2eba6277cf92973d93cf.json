{"sha": "26f822c249d38844670d2eba6277cf92973d93cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZmODIyYzI0OWQzODg0NDY3MGQyZWJhNjI3N2NmOTI5NzNkOTNjZg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-04T13:18:33Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-04T13:18:33Z"}, "message": "re PR fortran/84115 (Failure in associate construct with concatenated character target)\n\n2018-02-04  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84115\n\t* trans-decl.c (gfc_get_symbol_decl): Do not finish the decl of\n\t'length' if the symbol charlen backend_decl is an indirect ref.\n\n2018-02-04  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84115\n\t* gfortran.dg/associate_34.f90: New test.\n\t* gfortran.dg/associate_35.f90: New test.\n\nFrom-SVN: r257363", "tree": {"sha": "71ac6d25292623549f95d3b52c1baf354e7030da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71ac6d25292623549f95d3b52c1baf354e7030da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26f822c249d38844670d2eba6277cf92973d93cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26f822c249d38844670d2eba6277cf92973d93cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26f822c249d38844670d2eba6277cf92973d93cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26f822c249d38844670d2eba6277cf92973d93cf/comments", "author": null, "committer": null, "parents": [{"sha": "b27fe7a8155f0c6715601abd75206e03677c92a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b27fe7a8155f0c6715601abd75206e03677c92a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b27fe7a8155f0c6715601abd75206e03677c92a6"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "4095c011ae05f36d28db67df509f8167cfd951f0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=26f822c249d38844670d2eba6277cf92973d93cf", "patch": "@@ -1,3 +1,9 @@\n+2018-02-04  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84115\n+\t* trans-decl.c (gfc_get_symbol_decl): Do not finish the decl of\n+\t'length' if the symbol charlen backend_decl is an indirect ref.\n+\n 2018-02-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84141"}, {"sha": "4fc07b61c68e4a8e5c7358bebe365215731f7c85", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=26f822c249d38844670d2eba6277cf92973d93cf", "patch": "@@ -1774,7 +1774,8 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n   /* Associate names can use the hidden string length variable\n      of their associated target.  */\n   if (sym->ts.type == BT_CHARACTER\n-      && TREE_CODE (length) != INTEGER_CST)\n+      && TREE_CODE (length) != INTEGER_CST\n+      && TREE_CODE (sym->ts.u.cl->backend_decl) != INDIRECT_REF)\n     {\n       gfc_finish_var_decl (length, sym);\n       gcc_assert (!sym->value);"}, {"sha": "3c93cba9db1cfc62bf2bbd1927715f2fbc22d2de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26f822c249d38844670d2eba6277cf92973d93cf", "patch": "@@ -1,3 +1,9 @@\n+2018-02-04  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84115\n+\t* gfortran.dg/associate_34.f90: New test.\n+\t* gfortran.dg/associate_35.f90: New test.\n+\n 2018-02-03  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84141"}, {"sha": "629c0b43611006010a4980ec665eb4e9870b6db5", "filename": "gcc/testsuite/gfortran.dg/associate_34.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_34.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_34.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_34.f90?ref=26f822c249d38844670d2eba6277cf92973d93cf", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR84115.\n+!\n+! Contributed by G Steinmetz  <gscfq@t-online.de>\n+!\n+  character(:), allocatable :: chr\n+  allocate (chr, source = \"abc\")\n+  call s(chr, \"abc\")\n+  chr = \"mary had a little lamb\"\n+  call s(chr, \"mary had a little lamb\")\n+  deallocate (chr)\n+contains\n+  subroutine s(x, carg)\n+    character(:), allocatable :: x\n+    character(*) :: carg\n+    associate (y => x)\n+      if (y .ne. carg) call abort\n+    end associate\n+  end\n+end"}, {"sha": "417ec7c426b37a9adeb114cb4a6b54cc4c1fc13e", "filename": "gcc/testsuite/gfortran.dg/associate_35.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_35.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f822c249d38844670d2eba6277cf92973d93cf/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_35.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_35.f90?ref=26f822c249d38844670d2eba6277cf92973d93cf", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR84115 comment #1 (except for s1(x)!).\n+!\n+! Contributed by G Steinmetz  <gscfq@t-online.de>\n+!\n+  character(:), allocatable :: dum\n+  dum = \"s1\"\n+  call s1 (dum)\n+  dum = \"s2\"\n+  call s2 (dum)\n+  dum = \"s3\"\n+  call s3 (dum)\n+contains\n+  subroutine s1(x)\n+    character(:), allocatable :: x\n+    associate (y => x//x)   ! { dg-error \"type character and non-constant length\" }\n+      print *, y\n+    end associate\n+  end\n+\n+  subroutine s2(x)\n+    character(:), allocatable :: x\n+    associate (y => [x])\n+      print *, y\n+    end associate\n+  end\n+\n+  subroutine s3(x)\n+    character(:), allocatable :: x\n+    associate (y => [x,x])\n+      print *, y\n+    end associate\n+  end\n+end"}]}