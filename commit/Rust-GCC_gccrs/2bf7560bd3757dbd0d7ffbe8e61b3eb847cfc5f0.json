{"sha": "2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJmNzU2MGJkMzc1N2RiZDBkN2ZmYmU4ZTYxYjNlYjg0N2NmYzVmMA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-12-15T22:18:51Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-12-15T22:18:51Z"}, "message": "re PR rtl-optimization/63397 (signed integer overflows in ira.c)\n\n2014-12-15  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/63397\n\t* ira-int.h (ira_overall_cost, ira_reg_cost, ira_mem_cost): Use\n\tint64_t.\n\t(ira_load_cost, ira_store_cost, ira_shuffle_cost): Ditto.\n\t* ira.c (ira_overall_cost, ira_overall_cost_before): Ditto.\n\t(ira_reg_cost, ira_mem_cost): Ditto.\n\t(ira_load_cost, ira_store_cost, ira_shuffle_cost): Ditto.\n\t(calculate_allocation_cost, do_reload): Use the right\n\tformat for int64_t values.\n\nFrom-SVN: r218766", "tree": {"sha": "c7eadd391375310c849f787bc11ce646af84f360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7eadd391375310c849f787bc11ce646af84f360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2bef63e105f0fb8f857ec72ce6f6322aa605fa1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bef63e105f0fb8f857ec72ce6f6322aa605fa1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bef63e105f0fb8f857ec72ce6f6322aa605fa1a"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "292997242564ece2f0bc2de8bc7d0f7b70ba11f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "patch": "@@ -1,3 +1,15 @@\n+2014-12-15  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/63397\n+\t* ira-int.h (ira_overall_cost, ira_reg_cost, ira_mem_cost): Use\n+\tint64_t.\n+\t(ira_load_cost, ira_store_cost, ira_shuffle_cost): Ditto.\n+\t* ira.c (ira_overall_cost, ira_overall_cost_before): Ditto.\n+\t(ira_reg_cost, ira_mem_cost): Ditto.\n+\t(ira_load_cost, ira_store_cost, ira_shuffle_cost): Ditto.\n+\t(calculate_allocation_cost, do_reload): Use the right\n+\tformat for int64_t values.\n+\n 2014-12-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* sreal.h (to_double): New method."}, {"sha": "79b7b997d6d6c89df7c8ce681c127ae072b252c0", "filename": "gcc/ira-int.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/gcc%2Fira-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/gcc%2Fira-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-int.h?ref=2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "patch": "@@ -620,9 +620,9 @@ extern struct ira_spilled_reg_stack_slot *ira_spilled_reg_stack_slots;\n    allocnos assigned to hard-registers, cost of the allocnos assigned\n    to memory, cost of loads, stores and register move insns generated\n    for pseudo-register live range splitting (see ira-emit.c).  */\n-extern int ira_overall_cost;\n-extern int ira_reg_cost, ira_mem_cost;\n-extern int ira_load_cost, ira_store_cost, ira_shuffle_cost;\n+extern int64_t ira_overall_cost;\n+extern int64_t ira_reg_cost, ira_mem_cost;\n+extern int64_t ira_load_cost, ira_store_cost, ira_shuffle_cost;\n extern int ira_move_loops_num, ira_additional_jumps_num;\n \n \f"}, {"sha": "87ea86ddc1e058d1983acddcb30743a2fde21cef", "filename": "gcc/ira.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=2bf7560bd3757dbd0d7ffbe8e61b3eb847cfc5f0", "patch": "@@ -431,9 +431,9 @@ struct ira_spilled_reg_stack_slot *ira_spilled_reg_stack_slots;\n    the allocnos assigned to memory, cost of loads, stores and register\n    move insns generated for pseudo-register live range splitting (see\n    ira-emit.c).  */\n-int ira_overall_cost, overall_cost_before;\n-int ira_reg_cost, ira_mem_cost;\n-int ira_load_cost, ira_store_cost, ira_shuffle_cost;\n+int64_t ira_overall_cost, overall_cost_before;\n+int64_t ira_reg_cost, ira_mem_cost;\n+int64_t ira_load_cost, ira_store_cost, ira_shuffle_cost;\n int ira_move_loops_num, ira_additional_jumps_num;\n \n /* All registers that can be eliminated.  */\n@@ -2489,10 +2489,15 @@ calculate_allocation_cost (void)\n   if (internal_flag_ira_verbose > 0 && ira_dump_file != NULL)\n     {\n       fprintf (ira_dump_file,\n-\t       \"+++Costs: overall %d, reg %d, mem %d, ld %d, st %d, move %d\\n\",\n+\t       \"+++Costs: overall %\"PRId64\n+\t       \", reg %\"PRId64\n+\t       \", mem %\"PRId64\n+\t       \", ld %\"PRId64\n+\t       \", st %\"PRId64\n+\t       \", move %\"PRId64,\n \t       ira_overall_cost, ira_reg_cost, ira_mem_cost,\n \t       ira_load_cost, ira_store_cost, ira_shuffle_cost);\n-      fprintf (ira_dump_file, \"+++       move loops %d, new jumps %d\\n\",\n+      fprintf (ira_dump_file, \"\\n+++       move loops %d, new jumps %d\\n\",\n \t       ira_move_loops_num, ira_additional_jumps_num);\n     }\n \n@@ -5422,7 +5427,8 @@ do_reload (void)\n \n   if (internal_flag_ira_verbose > 0 && ira_dump_file != NULL\n       && overall_cost_before != ira_overall_cost)\n-    fprintf (ira_dump_file, \"+++Overall after reload %d\\n\", ira_overall_cost);\n+    fprintf (ira_dump_file, \"+++Overall after reload %\"PRId64 \"\\n\",\n+\t     ira_overall_cost);\n \n   flag_ira_share_spill_slots = saved_flag_ira_share_spill_slots;\n "}]}