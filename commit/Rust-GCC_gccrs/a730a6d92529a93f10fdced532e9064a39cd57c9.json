{"sha": "a730a6d92529a93f10fdced532e9064a39cd57c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczMGE2ZDkyNTI5YTkzZjEwZmRjZWQ1MzJlOTA2NGEzOWNkNTdjOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-05-11T19:11:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-05-11T19:11:00Z"}, "message": "i386.c (legitimize_pic_address): Use copy_to_suggested_reg instead of gen_movsi.\n\n\t* config/i386/i386.c (legitimize_pic_address): Use\n\tcopy_to_suggested_reg instead of gen_movsi.\n\nFrom-SVN: r236138", "tree": {"sha": "2906d930dbfce8fb245eebd85f170c06d7a6e581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2906d930dbfce8fb245eebd85f170c06d7a6e581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a730a6d92529a93f10fdced532e9064a39cd57c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a730a6d92529a93f10fdced532e9064a39cd57c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a730a6d92529a93f10fdced532e9064a39cd57c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a730a6d92529a93f10fdced532e9064a39cd57c9/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3fd2b0075e6c7b7e9b4ce11d2cd38965a36e448c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd2b0075e6c7b7e9b4ce11d2cd38965a36e448c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd2b0075e6c7b7e9b4ce11d2cd38965a36e448c"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "08e875864e441c257e418e2cecd8197fb696ddce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a730a6d92529a93f10fdced532e9064a39cd57c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a730a6d92529a93f10fdced532e9064a39cd57c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a730a6d92529a93f10fdced532e9064a39cd57c9", "patch": "@@ -1,3 +1,8 @@\n+2016-05-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (legitimize_pic_address): Use\n+\tcopy_to_suggested_reg instead of gen_movsi.\n+\n 2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/predicates.md (quad_memory_operand): Move most of"}, {"sha": "046717bae45df34cc13878230701c19d4b9dfc9e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a730a6d92529a93f10fdced532e9064a39cd57c9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a730a6d92529a93f10fdced532e9064a39cd57c9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a730a6d92529a93f10fdced532e9064a39cd57c9", "patch": "@@ -15474,8 +15474,6 @@ legitimize_pic_address (rtx orig, rtx reg)\n \t{\n \t  new_rtx = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), UNSPEC_PCREL);\n \t  new_rtx = gen_rtx_CONST (Pmode, new_rtx);\n-\n-\t  new_rtx = copy_to_suggested_reg (new_rtx, reg, Pmode);\n \t}\n       else if (TARGET_64BIT && ix86_cmodel != CM_LARGE_PIC)\n \t{\n@@ -15484,14 +15482,6 @@ legitimize_pic_address (rtx orig, rtx reg)\n \t  new_rtx = gen_rtx_CONST (Pmode, new_rtx);\n \t  new_rtx = gen_const_mem (Pmode, new_rtx);\n \t  set_mem_alias_set (new_rtx, ix86_GOT_alias_set ());\n-\n-\t  if (reg == 0)\n-\t    reg = gen_reg_rtx (Pmode);\n-\t  /* Use directly gen_movsi, otherwise the address is loaded\n-\t     into register for CSE.  We don't want to CSE this addresses,\n-\t     instead we CSE addresses from the GOT table, so skip this.  */\n-\t  emit_insn (gen_movsi (reg, new_rtx));\n-\t  new_rtx = reg;\n \t}\n       else\n \t{\n@@ -15504,9 +15494,9 @@ legitimize_pic_address (rtx orig, rtx reg)\n \t  new_rtx = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, new_rtx);\n \t  new_rtx = gen_const_mem (Pmode, new_rtx);\n \t  set_mem_alias_set (new_rtx, ix86_GOT_alias_set ());\n-\n-\t  new_rtx = copy_to_suggested_reg (new_rtx, reg, Pmode);\n \t}\n+\n+      new_rtx = copy_to_suggested_reg (new_rtx, reg, Pmode);\n     }\n   else\n     {"}]}