{"sha": "a5cc92fdfb1bbd2508600e82782fa6c329208064", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVjYzkyZmRmYjFiYmQyNTA4NjAwZTgyNzgyZmE2YzMyOTIwODA2NA==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-19T19:22:27Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-19T19:22:27Z"}, "message": "re PR target/46434 (crx-elf --enable-werror-always build fails)\n\n\tPR target/46434\n\t* config/crx/crx.c (crx_expand_epilogue): Remove unused variable.\nIndex: config/crx/crx.c\n===================================================================\n--- config/crx/crx.c\t(revision 166609)\n+++ config/crx/crx.c\t(working copy)\n@@ -613,6 +613,8 @@ static int crx_addr_reg_p (rtx addr_reg)\n       return FALSE;\n     }\n \n+  gcc_assert (REGNO (reg) != CC_REGNUM);\n+\n   return TRUE;\n }\n \n@@ -1439,17 +1441,12 @@ crx_expand_prologue (void)\n void\n crx_expand_epilogue (void)\n {\n-  rtx return_reg;\n-\n   /* Nonzero if we need to return and pop only RA. This will generate a\n    * different insn. This differentiate is for the peepholes for call as last\n    * statement in function. */\n   int only_popret_RA = (save_regs[RETURN_ADDRESS_REGNUM]\n \t\t\t&& (sum_regs == UNITS_PER_WORD));\n \n-  /* Return register.  */\n-  return_reg = gen_rtx_REG (Pmode, RETURN_ADDRESS_REGNUM);\n-\n   if (frame_pointer_needed)\n     /* Restore the stack pointer with the frame pointers value */\n     emit_move_insn (stack_pointer_rtx, frame_pointer_rtx);\n\nFrom-SVN: r166954", "tree": {"sha": "fd031f5f7aee04c9a122195435bf0cea214d28cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd031f5f7aee04c9a122195435bf0cea214d28cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5cc92fdfb1bbd2508600e82782fa6c329208064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5cc92fdfb1bbd2508600e82782fa6c329208064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5cc92fdfb1bbd2508600e82782fa6c329208064", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5cc92fdfb1bbd2508600e82782fa6c329208064/comments", "author": null, "committer": null, "parents": [{"sha": "0f346928b9890d52e148d431d943d520e19701f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f346928b9890d52e148d431d943d520e19701f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f346928b9890d52e148d431d943d520e19701f2"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "df409049fb5f7a9928a9a84454bc5a5a8cac95bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5cc92fdfb1bbd2508600e82782fa6c329208064/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5cc92fdfb1bbd2508600e82782fa6c329208064/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5cc92fdfb1bbd2508600e82782fa6c329208064", "patch": "@@ -13,6 +13,9 @@\n \t(m68hc11_check_z_replacement) <CLOBBER>: Set this_insn_uses_ix and\n \tthis_insn_uses_iy before use.\n \n+\tPR target/46434\n+\t* config/crx/crx.c (crx_expand_epilogue): Remove unused variable.\n+\n 2010-11-19  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/46547"}, {"sha": "0691de69b2fea279a56670e611b61f1b1eb64c0c", "filename": "gcc/config/crx/crx.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5cc92fdfb1bbd2508600e82782fa6c329208064/gcc%2Fconfig%2Fcrx%2Fcrx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5cc92fdfb1bbd2508600e82782fa6c329208064/gcc%2Fconfig%2Fcrx%2Fcrx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.c?ref=a5cc92fdfb1bbd2508600e82782fa6c329208064", "patch": "@@ -1439,17 +1439,12 @@ crx_expand_prologue (void)\n void\n crx_expand_epilogue (void)\n {\n-  rtx return_reg;\n-\n   /* Nonzero if we need to return and pop only RA. This will generate a\n    * different insn. This differentiate is for the peepholes for call as last\n    * statement in function. */\n   int only_popret_RA = (save_regs[RETURN_ADDRESS_REGNUM]\n \t\t\t&& (sum_regs == UNITS_PER_WORD));\n \n-  /* Return register.  */\n-  return_reg = gen_rtx_REG (Pmode, RETURN_ADDRESS_REGNUM);\n-\n   if (frame_pointer_needed)\n     /* Restore the stack pointer with the frame pointers value */\n     emit_move_insn (stack_pointer_rtx, frame_pointer_rtx);"}]}