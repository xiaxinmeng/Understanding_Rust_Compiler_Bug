{"sha": "2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQzYzM0YWRmMjEwNDdmNjhiYzRjZDZhMjA5OWE0MGQ5NWNjZjJhZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-10T22:52:49Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-10T22:52:49Z"}, "message": "(i_define, u_define, f_define): Add #undef before #define.\n\nFrom-SVN: r2858", "tree": {"sha": "91ab60070ddb938297b8766a65bcec1f09adeaa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91ab60070ddb938297b8766a65bcec1f09adeaa5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae/comments", "author": null, "committer": null, "parents": [{"sha": "a70c61d9c4b7f2f6dce6ab54aa68f12b2e42620d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a70c61d9c4b7f2f6dce6ab54aa68f12b2e42620d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a70c61d9c4b7f2f6dce6ab54aa68f12b2e42620d"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "808bb96bb0705ebc77f2b35b97735181b67280be", "filename": "gcc/enquire.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae/gcc%2Fenquire.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae/gcc%2Fenquire.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fenquire.c?ref=2d3c34adf21047f68bc4cd6a2099a40d95ccf2ae", "patch": "@@ -19,6 +19,7 @@\n    Include sys/types.h before signal.h, Apr 92.\n    Support NO_LONG_DOUBLE_IO in f_define and f_rep; new fn fake_f_rep, Apr 92.\n    Enclose -f output in #ifndef _FLOAT_H___, Richard Stallman, May 92.\n+   Add #undef before every #define, Jim Wilson, Dec 92.\n \n    COMPILING\n    With luck and a following wind, just the following will work:\n@@ -780,6 +781,7 @@ Procedure i_define(desc, extra, sort, name, val, lim, req, mark)\n      char *desc, *extra, *sort, *name; long val, lim, req; char *mark; {\n \t/* Produce a #define for a signed int type */\n \tdescribe(desc, extra);\n+\tprintf(\"#undef %s%s\\n\", sort, name);\n \tif (val >= 0) {\n \t\tprintf(\"#define %s%s %ld%s\\n\", sort, name, val, mark);\n \t} else if (val + lim < 0) {\n@@ -807,6 +809,7 @@ Procedure u_define(desc, extra, sort, name, val, req, mark)\n      char *desc, *extra, *sort, *name; unsigned long val, req; char *mark; {\n \t/* Produce a #define for an unsigned value */\n \tdescribe(desc, extra);\n+\tprintf(\"#undef %s%s\\n\", sort, name);\n \tprintf(\"#define %s%s %lu%s%s\\n\", sort, name, val, U, mark);\n \tif (val != req) {\n \t\tprintf(\"%s*** Verify failed for above #define!\\n\", co);\n@@ -821,6 +824,7 @@ Procedure f_define(desc, extra, sort, name, precision, val, mark)\n      Long_double val; char *mark; {\n \t/* Produce a #define for a float/double/long double */\n \tdescribe(desc, extra);\n+\tprintf (\"#undef %s%s\\n\", sort, name);\n \tif (stdc) {\n #ifdef NO_LONG_DOUBLE_IO\n \t\tstatic int union_defined = 0;"}]}