{"sha": "3adde2a5c66dc7ff1509057a3dbddf112c56268f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkZGUyYTVjNjZkYzdmZjE1MDkwNTdhM2RiZGRmMTEyYzU2MjY4Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-02T22:38:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-02T22:38:10Z"}, "message": "(subst_prev_insn): Remove variable and all uses.\n\nFrom-SVN: r7852", "tree": {"sha": "dd15e88861f16b80f987cba310002f4ba5a8b7da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd15e88861f16b80f987cba310002f4ba5a8b7da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3adde2a5c66dc7ff1509057a3dbddf112c56268f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adde2a5c66dc7ff1509057a3dbddf112c56268f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3adde2a5c66dc7ff1509057a3dbddf112c56268f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adde2a5c66dc7ff1509057a3dbddf112c56268f/comments", "author": null, "committer": null, "parents": [{"sha": "2454c8d44981e0cafc82c6bf631700773e66d3b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2454c8d44981e0cafc82c6bf631700773e66d3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2454c8d44981e0cafc82c6bf631700773e66d3b8"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "83f2cd469c5ae784919e3164f3d09473e04a1582", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3adde2a5c66dc7ff1509057a3dbddf112c56268f/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3adde2a5c66dc7ff1509057a3dbddf112c56268f/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=3adde2a5c66dc7ff1509057a3dbddf112c56268f", "patch": "@@ -170,11 +170,6 @@ static int last_call_cuid;\n \n static rtx subst_insn;\n \n-/* If nonzero, this is the insn that should be presumed to be\n-   immediately in front of `subst_insn'.  */\n-\n-static rtx subst_prev_insn;\n-\n /* This is the lowest CUID that `subst' is currently dealing with.\n    get_last_value will not return a value if the register was set at or\n    after this CUID.  If not for this mechanism, we could get confused if\n@@ -1240,7 +1235,6 @@ try_combine (i3, i2, i1)\n   if (i1 && INSN_CUID (i1) > INSN_CUID (i2))\n     temp = i1, i1 = i2, i2 = temp;\n \n-  subst_prev_insn = 0;\n   added_links_insn = 0;\n \n   /* First check for one important special-case that the code below will\n@@ -1356,9 +1350,8 @@ try_combine (i3, i2, i1)\n \t     never appear in the insn stream so giving it the same INSN_UID\n \t     as I2 will not cause a problem.  */\n \n-\t  subst_prev_insn = i1\n-\t    = gen_rtx (INSN, VOIDmode, INSN_UID (i2), 0, i2,\n-\t\t       XVECEXP (PATTERN (i2), 0, 1), -1, 0, 0);\n+\t  i1 = gen_rtx (INSN, VOIDmode, INSN_UID (i2), 0, i2,\n+\t\t\tXVECEXP (PATTERN (i2), 0, 1), -1, 0, 0);\n \n \t  SUBST (PATTERN (i2), XVECEXP (PATTERN (i2), 0, 0));\n \t  SUBST (XEXP (SET_SRC (PATTERN (i2)), 0),\n@@ -9826,15 +9819,10 @@ get_last_value (x)\n     {\n       rtx insn, set;\n \n-      /* If there is an insn that is supposed to be immediately\n-\t in front of subst_insn, use it.  */\n-      if (subst_prev_insn != 0)\n-\tinsn = subst_prev_insn;\n-      else\n-\tfor (insn = prev_nonnote_insn (subst_insn);\n-\t     insn && INSN_CUID (insn) >= subst_low_cuid;\n-\t     insn = prev_nonnote_insn (insn))\n-\t  ;\n+      for (insn = prev_nonnote_insn (subst_insn);\n+\t   insn && INSN_CUID (insn) >= subst_low_cuid;\n+\t   insn = prev_nonnote_insn (insn))\n+\t;\n \n       if (insn\n \t  && (set = single_set (insn)) != 0"}]}