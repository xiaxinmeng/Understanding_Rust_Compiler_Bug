{"sha": "6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVjYjhiMjFjOGRmZTE5ZmE0M2ZjYTBkNTM0YzgwOTkxZDBjMmNjYw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-10-30T14:33:49Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-10-30T14:33:49Z"}, "message": "tree-ssa-alias.c (ao_ref_init_from_ptr_and_size): Look for a POINTER_PLUS_EXPR in the defining statement.\n\n2013-10-30  Marc Glisse  <marc.glisse@inria.fr>\n\ngcc/\n\t* tree-ssa-alias.c (ao_ref_init_from_ptr_and_size): Look for a\n\tPOINTER_PLUS_EXPR in the defining statement.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/alias-24.c: New file.\n\nFrom-SVN: r204213", "tree": {"sha": "76af85fd27f16e251fcdb5ddc90ae41e5a56d97b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76af85fd27f16e251fcdb5ddc90ae41e5a56d97b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b6d16993b9d6812f6212bce4f35547fd9e40457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6d16993b9d6812f6212bce4f35547fd9e40457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6d16993b9d6812f6212bce4f35547fd9e40457"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "f62fcdd11f6832a724242c2d4ec4f2f5b60b87bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "patch": "@@ -1,3 +1,8 @@\n+2013-10-30  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* tree-ssa-alias.c (ao_ref_init_from_ptr_and_size): Look for a\n+\tPOINTER_PLUS_EXPR in the defining statement.\n+\n 2013-10-30  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* regmove.c: Remove."}, {"sha": "5c5171dd5fcb28960cb9dc07ef34fd1975688ac3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "patch": "@@ -1,3 +1,7 @@\n+2013-10-30  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/alias-24.c: New file.\n+\n 2013-10-30  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* gcc.target/i386/fma_double_3.c: Use pattern for"}, {"sha": "0edd51f85cdc364624b8d788cd46feafecf15e59", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-24.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-24.c?ref=6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+void f (const char *c, int *i)\n+{\n+  *i = 42;\n+  __builtin_memcpy (i + 1, c, sizeof (int));\n+  if (*i != 42) __builtin_abort();\n+}\n+\n+extern void keepit ();\n+void g (const char *c, int *i)\n+{\n+  *i = 33;\n+  __builtin_memcpy (i - 1, c, 3 * sizeof (int));\n+  if (*i != 33) keepit();\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"abort\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"keepit\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+"}, {"sha": "efc08c20991973d7ffe0e49de9435cb398664c33", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=6ecb8b21c8dfe19fa43fca0d534c80991d0c2ccc", "patch": "@@ -566,14 +566,22 @@ ao_ref_alias_set (ao_ref *ref)\n void\n ao_ref_init_from_ptr_and_size (ao_ref *ref, tree ptr, tree size)\n {\n-  HOST_WIDE_INT t1, t2;\n+  HOST_WIDE_INT t1, t2, extra_offset = 0;\n   ref->ref = NULL_TREE;\n   if (TREE_CODE (ptr) == SSA_NAME)\n     {\n       gimple stmt = SSA_NAME_DEF_STMT (ptr);\n       if (gimple_assign_single_p (stmt)\n \t  && gimple_assign_rhs_code (stmt) == ADDR_EXPR)\n \tptr = gimple_assign_rhs1 (stmt);\n+      else if (is_gimple_assign (stmt)\n+\t       && gimple_assign_rhs_code (stmt) == POINTER_PLUS_EXPR\n+\t       && host_integerp (gimple_assign_rhs2 (stmt), 0)\n+\t       && (t1 = int_cst_value (gimple_assign_rhs2 (stmt))) >= 0)\n+\t{\n+\t  ptr = gimple_assign_rhs1 (stmt);\n+\t  extra_offset = BITS_PER_UNIT * t1;\n+\t}\n     }\n \n   if (TREE_CODE (ptr) == ADDR_EXPR)\n@@ -585,10 +593,12 @@ ao_ref_init_from_ptr_and_size (ao_ref *ref, tree ptr, tree size)\n \t\t\t  ptr, null_pointer_node);\n       ref->offset = 0;\n     }\n+  ref->offset += extra_offset;\n   if (size\n       && host_integerp (size, 0)\n-      && TREE_INT_CST_LOW (size) * 8 / 8 == TREE_INT_CST_LOW (size))\n-    ref->max_size = ref->size = TREE_INT_CST_LOW (size) * 8;\n+      && TREE_INT_CST_LOW (size) * BITS_PER_UNIT / BITS_PER_UNIT\n+\t == TREE_INT_CST_LOW (size))\n+    ref->max_size = ref->size = TREE_INT_CST_LOW (size) * BITS_PER_UNIT;\n   else\n     ref->max_size = ref->size = -1;\n   ref->ref_alias_set = 0;"}]}