{"sha": "7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiOWMyNDMwZmZiMTNkZTg0MzNhYTdkNjU0MTkyYjVkMmIxZTdhOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-19T20:04:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-04-19T20:05:32Z"}, "message": "libstdc++: Remove operator!= overloads for unordered containers\n\nSome more C++20 changes from P1614R2, \"The Mothership has Landed\".\n\n\t* include/bits/unordered_map.h (unordered_map, unordered_multimap):\n\tRemove redundant operator!= for C++20.\n\t* include/bits/unordered_set.h (unordered_set, unordered_multiset):\n\tLikewise.\n\t* include/debug/unordered_map (unordered_map, unordered_multimap):\n\tLikewise.\n\t* include/debug/unordered_set (unordered_set, unordered_multiset):\n\tLikewise.", "tree": {"sha": "500ebcdeffe50881b667cd80178e1384c16550ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/500ebcdeffe50881b667cd80178e1384c16550ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2c0fa35d0dc8912b0c1a658234221de61e60840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c0fa35d0dc8912b0c1a658234221de61e60840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c0fa35d0dc8912b0c1a658234221de61e60840"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "f7e0022e38f8145c2f236c324f8deb8f4c5f67cc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "patch": "@@ -1,5 +1,14 @@\n 2020-04-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/unordered_map.h (unordered_map, unordered_multimap):\n+\tRemove redundant operator!= for C++20.\n+\t* include/bits/unordered_set.h (unordered_set, unordered_multiset):\n+\tLikewise.\n+\t* include/debug/unordered_map (unordered_map, unordered_multimap):\n+\tLikewise.\n+\t* include/debug/unordered_set (unordered_set, unordered_multiset):\n+\tLikewise.\n+\n \tPR other/94629\n \t* include/debug/formatter.h (_Error_formatter::_Parameter): Fix\n \tredundant assignment in constructor."}, {"sha": "ab1b1d5244235631a09a8203fcf1cd096dc8abe6", "filename": "libstdc++-v3/include/bits/unordered_map.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h?ref=7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "patch": "@@ -2092,23 +2092,27 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t       const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_h._M_equal(__y._M_h); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>\n     inline bool\n     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n+#endif\n \n   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>\n     inline bool\n     operator==(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_h._M_equal(__y._M_h); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>\n     inline bool\n     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n+#endif\n \n _GLIBCXX_END_NAMESPACE_CONTAINER\n "}, {"sha": "c9c9e9f38b771bdf7fa1aa840d74c601547f39a5", "filename": "libstdc++-v3/include/bits/unordered_set.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h?ref=7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "patch": "@@ -1704,23 +1704,27 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t       const unordered_set<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_h._M_equal(__y._M_h); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<class _Value, class _Hash, class _Pred, class _Alloc>\n     inline bool\n     operator!=(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_set<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n+#endif\n \n   template<class _Value, class _Hash, class _Pred, class _Alloc>\n     inline bool\n     operator==(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_h._M_equal(__y._M_h); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<class _Value, class _Hash, class _Pred, class _Alloc>\n     inline bool\n     operator!=(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n+#endif\n \n _GLIBCXX_END_NAMESPACE_CONTAINER\n "}, {"sha": "17fbba3aadee674beceb1a8be6f6916f9d564c83", "filename": "libstdc++-v3/include/debug/unordered_map", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_map?ref=7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "patch": "@@ -741,13 +741,14 @@ namespace __debug\n \t       const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_base() == __y._M_base(); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<typename _Key, typename _Tp, typename _Hash,\n \t   typename _Pred, typename _Alloc>\n     inline bool\n     operator!=(const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n-\n+#endif\n \n   /// Class std::unordered_multimap with safety/checking/debug instrumentation.\n   template<typename _Key, typename _Tp,\n@@ -1347,12 +1348,14 @@ namespace __debug\n \t       const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_base() == __y._M_base(); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<typename _Key, typename _Tp, typename _Hash,\n \t   typename _Pred, typename _Alloc>\n     inline bool\n     operator!=(const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n+#endif\n \n } // namespace __debug\n } // namespace std"}, {"sha": "4d30852186c1286d13846bdd09db33846c2dc17f", "filename": "libstdc++-v3/include/debug/unordered_set", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Funordered_set?ref=7ab9c2430ffb13de8433aa7d654192b5d2b1e7a9", "patch": "@@ -612,12 +612,13 @@ namespace __debug\n \t       const unordered_set<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_base() == __y._M_base(); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<typename _Value, typename _Hash, typename _Pred, typename _Alloc>\n     inline bool\n     operator!=(const unordered_set<_Value, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_set<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n-\n+#endif\n \n   /// Class std::unordered_multiset with safety/checking/debug instrumentation.\n   template<typename _Value,\n@@ -1176,11 +1177,13 @@ namespace __debug\n \t       const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return __x._M_base() == __y._M_base(); }\n \n+#if __cpp_impl_three_way_comparison < 201907L\n   template<typename _Value, typename _Hash, typename _Pred, typename _Alloc>\n     inline bool\n     operator!=(const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __x,\n \t       const unordered_multiset<_Value, _Hash, _Pred, _Alloc>& __y)\n     { return !(__x == __y); }\n+#endif\n \n } // namespace __debug\n } // namespace std"}]}