{"sha": "7954ad60dfe13b287645778983cb5ede2da8592b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1NGFkNjBkZmUxM2IyODc2NDU3Nzg5ODNjYjVlZGUyZGE4NTkyYg==", "commit": {"author": {"name": "Sergey Rybin", "email": "rybin@adacore.com", "date": "2007-09-26T10:47:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-26T10:47:11Z"}, "message": "vms_data.ads: Revise gnatmetric qualifiers.\n\n2007-09-26  Sergey Rybin  <rybin@adacore.com>\n\n\t* vms_data.ads: Revise gnatmetric qualifiers.\n\tAdd qualified for the new gnatbind option '-y'\n\n\t* gnat_ugn.texi: Revise the gnatmetric section.\n\tAdd entry for new gnatbind option '-y'.\n\n\t* gnat_rm.texi: Minor spelling correction.\n\tDocument restriction on overlaying controlled types\n\nFrom-SVN: r128808", "tree": {"sha": "6518844a090a70760697f23c60fcf95546fa48e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6518844a090a70760697f23c60fcf95546fa48e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7954ad60dfe13b287645778983cb5ede2da8592b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7954ad60dfe13b287645778983cb5ede2da8592b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7954ad60dfe13b287645778983cb5ede2da8592b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7954ad60dfe13b287645778983cb5ede2da8592b/comments", "author": null, "committer": null, "parents": [{"sha": "d031ecc4a5d4eaf746283e1755eb29abd9caa963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d031ecc4a5d4eaf746283e1755eb29abd9caa963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d031ecc4a5d4eaf746283e1755eb29abd9caa963"}], "stats": {"total": 582, "additions": 438, "deletions": 144}, "files": [{"sha": "203b771d9a44f42c086f2b89fab6c49005ca2f17", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7954ad60dfe13b287645778983cb5ede2da8592b/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7954ad60dfe13b287645778983cb5ede2da8592b/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=7954ad60dfe13b287645778983cb5ede2da8592b", "patch": "@@ -4957,7 +4957,7 @@ a generic unit that can be instantiated with either enumeration types\n or integer types.  Note that if @code{Enum_Rep} is used on a modular\n type whose upper bound exceeds the upper bound of the largest signed\n integer type, and the argument is a variable, so that the universal\n-integer calculation is done at run-time, then the call to @code{Enum_Rep}\n+integer calculation is done at run time, then the call to @code{Enum_Rep}\n may raise @code{Constraint_Error}.\n \n @node Epsilon\n@@ -10551,6 +10551,11 @@ check is suppressed if range checks are suppressed, or if the special GNAT\n check Alignment_Check is suppressed, or if\n @code{pragma Restrictions (No_Elaboration_Code)} is in effect.\n \n+Finally, GNAT does not permit overlaying of objects of controlled types or\n+composite types containing a controlled component. In most cases, the compiler\n+can detect an attempt at such overlays and will generate a warning at compile\n+time and a Program_Error exception at run time.\n+\n @findex Export\n An address clause cannot be given for an exported object.  More\n understandably the real restriction is that objects with an address\n@@ -13868,7 +13873,7 @@ with @code{GLADE}.\n @cindex Run-time restrictions access\n \n @noindent\n-This package provides facilities for accessing at run-time\n+This package provides facilities for accessing at run time\n the status of restrictions specified at compile time for\n the partition. Information is available both with regard\n to actual restrictions specified, and with regard to"}, {"sha": "0979412feb16a2ced63cd469c60cbf4c215eb91b", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 202, "deletions": 79, "changes": 281, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7954ad60dfe13b287645778983cb5ede2da8592b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7954ad60dfe13b287645778983cb5ede2da8592b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=7954ad60dfe13b287645778983cb5ede2da8592b", "patch": "@@ -7659,6 +7659,10 @@ Default mode, in which sources are checked for consistency only if\n they are available.\n @end ifset\n \n+@item ^-y^/ENABLE_LEAP_SECONDS^\n+@cindex @option{^-y^/ENABLE_LEAP_SECONDS^} (@code{gnatbind})\n+Enable leap seconds support in @code{Ada.Calendar} and its children.\n+\n @item ^-z^/ZERO_MAIN^\n @cindex @option{^-z^/ZERO_MAIN^} (@code{gnatbind})\n No main subprogram.\n@@ -16293,9 +16297,7 @@ The following subsections describe the various switches accepted by\n @menu\n * Output Files Control::\n * Disable Metrics For Local Units::\n-* Line Metrics Control::\n-* Syntax Metrics Control::\n-* Complexity Metrics Control::\n+* Specifying a set of metrics to compute::\n * Other gnatmetric Switches::\n * Generate project-wide metrics::\n @end menu\n@@ -16311,9 +16313,11 @@ output is generated.\n \n When generating the output in textual form, @command{gnatmetric} creates\n for each Ada source file a corresponding text file\n-containing the computed metrics. By default, this file\n-is placed in the same directory as where the source file is located, and\n-its name is obtained\n+containing the computed metrics, except for the case when the set of metrics\n+specified by gnatmetric parameters consists only of metrics that are computed\n+for the whole set of analyzed sources, but not for each Ada source.\n+By default, this file is placed in the same directory as where the source\n+file is located, and its name is obtained\n by appending the ^@file{.metrix}^@file{$METRIX}^ suffix to the name of the\n input file.\n \n@@ -16413,8 +16417,26 @@ Do not compute detailed metrics for eligible local program units\n \n @end table\n \n+@node Specifying a set of metrics to compute\n+@subsection Specifying a set of metrics to compute\n+\n+@noindent\n+By default all the metrics are computed and reported. The switches\n+described in this subsection allow you to control, on an individual\n+basis, whether metrics are computed and\n+reported. If at least one positive metric\n+switch is specified (that is, a switch that defines that a given\n+metric or set of metrics is to be computed), then only\n+explicitly specified metrics are reported.\n+\n+@menu\n+* Line Metrics Control::\n+* Syntax Metrics Control::\n+* Complexity Metrics Control::\n+@end menu\n+\n @node Line Metrics Control\n-@subsection Line Metrics Control\n+@subsubsection Line Metrics Control\n @cindex Line metrics control in @command{gnatmetric}\n \n @noindent\n@@ -16436,54 +16458,93 @@ the number of comment lines\n the number of code lines containing end-of-line comments;\n \n @item\n-the ratio between the number of lines that contain comments and the number of all\n-the non-blank lines expressed in percentages (the comment percentage);\n+the comment percentage: the ratio between the number of lines that contain\n+comments and the number of all non-blank lines, expressed as a percentage;\n \n @item\n the number of empty lines and lines containing only space characters and/or\n format effectors (blank lines)\n \n+@item\n+the average number of code lines in subprogram bodies, task bodies, entry\n+bodies and statement sequences in package bodies (this metric is only computed\n+across the whole set of the analyzed units)\n+\n @end itemize\n \n-If @command{gnatmetric} is invoked on more than one source file, it sums the\n-values of the line metrics for all the files being processed and then\n-generates the cumulative results.\n+@noindent\n+@command{gnatmetric} sums the values of the line metrics for all the\n+files being processed and then generates the cumulative results. The tool\n+also computes for all the files being processed the average number of code\n+lines in bodies.\n \n-By default, all the line metrics are computed and reported. You can use the\n-following switches to select the specific line metrics to be computed and\n-reported (if any of these parameters is set, only explicitly specified line\n-metrics are computed).\n+You can use the following switches to select the specific line metrics\n+to be computed and reported.\n \n @table @option\n-@cindex @option{^-la^/LINES_ALL^} (@command{gnatmetric})\n-@item ^-la^/LINES_ALL^\n-The number of all lines\n+@cindex @option{^--lines@var{x}^/LINE_COUNT_METRICS^} (@command{gnatmetric})\n \n-@cindex @option{^-lcode^/CODE_LINES^} (@command{gnatmetric})\n-@item ^-lcode^/CODE_LINES^\n-The number of code lines\n+@ifclear vms\n+@cindex @option{--no-lines@var{x}}\n+@end ifclear\n+\n+@item ^--lines-all^/LINE_COUNT_METRICS=ALL_ON^\n+Report all the line metrics\n+\n+@item ^--no-lines-all^/LINE_COUNT_METRICS=ALL_OFF^\n+Do not report any of line metrics\n+\n+@item ^--lines^/LINE_COUNT_METRICS=ALL_LINES_ON^\n+Report the number of all lines\n+\n+@item ^--no-lines^/LINE_COUNT_METRICS=ALL_LINES_OFF^\n+Do not report the number of all lines\n+\n+@item ^--lines-code^/LINE_COUNT_METRICS=CODE_LINES_ON^\n+Report the number of code lines\n+\n+@item ^--no-lines-code^/LINE_COUNT_METRICS=CODE_LINES_OFF^\n+Do not report the number of code lines\n \n-@cindex @option{^-lcomm^/COMMENT_LINES^} (@command{gnatmetric})\n-@item ^-lcomm^/COMENT_LINES^\n-The number of comment lines\n+@item ^--lines-comment^/LINE_COUNT_METRICS=COMMENT_LINES_ON^\n+Report the number of comment lines\n \n-@cindex @option{^-leol^/MIXED_CODE_COMMENTS^} (@command{gnatmetric})\n-@item ^-leol^/MIXED_CODE_COMMENTS^\n-The number of code lines containing\n+@item ^--no-lines-comment^/LINE_COUNT_METRICS=COMMENT_LINES_OFF^\n+Do not report the number of comment lines\n+\n+@item ^--lines-eol-comment^/LINE_COUNT_METRICS=CODE_COMMENT_LINES_ON^\n+Report the number of code lines containing\n+end-of-line comments\n+\n+@item ^--no-lines-eol-comment^/LINE_COUNT_METRICS=CODE_COMMENT_LINES_OFF^\n+Do not report the number of code lines containing\n end-of-line comments\n \n-@cindex @option{^-ratio^/COMMENT_PERCENTAGE^} (@command{gnatmetric})\n-@item ^-ratio^/COMMENT_PERCENTAGE^\n-The comment percentage in the program text\n+@item ^--lines-ratio^/LINE_COUNT_METRICS=COMMENT_PERCENTAGE_ON^\n+Report the comment percentage in the program text\n+\n+@item ^--no-lines-ratio^/LINE_COUNT_METRICS=COMMENT_PERCENTAGE_OFF^\n+Do not report the comment percentage in the program text\n \n-@cindex @option{^-lb^/BLANK_LINES^} (@command{gnatmetric})\n-@item ^-lb^/BLANK_LINES^\n-The number of blank lines\n+@item ^--lines-blank^/LINE_COUNT_METRICS=BLANK_LINES_ON^\n+Report the number of blank lines\n+\n+@item ^--no-lines-blank^/LINE_COUNT_METRICS=BLANK_LINES_OFF^\n+Do not report the number of blank lines\n+\n+@item ^--lines-average^/LINE_COUNT_METRICS=AVERAGE_BODY_LINES_ON^\n+Report the average number of code lines in subprogram bodies, task bodies,\n+entry bodies and statement sequences in package bodies. The metric is computed\n+and reported for the whole set of processed Ada sources only.\n+\n+@item ^--no-lines-average^/LINE_COUNT_METRICS=AVERAGE_BODY_LINES_OFF^\n+Do not report the average number of code lines in subprogram bodies,\n+task bodies, entry bodies and statement sequences in package bodies.\n \n @end table\n \n @node Syntax Metrics Control\n-@subsection Syntax Metrics Control\n+@subsubsection Syntax Metrics Control\n @cindex Syntax metrics control in @command{gnatmetric}\n \n @noindent\n@@ -16515,7 +16576,7 @@ the following metrics:\n @item Public subprograms\n This metric is computed for package specifications. It is the\n number of subprograms and generic subprograms declared in the visible\n-part (including in nested packages, protected objects, and\n+part (including the visible part of nested packages, protected objects, and\n protected types).\n \n @item All subprograms\n@@ -16531,8 +16592,8 @@ subprograms are counted in the same way as ``usual'' subprogram bodies.\n This metric is computed for package specifications and\n generic package declarations. It is the total number of types\n that can be referenced from outside this compilation unit, plus the\n-number of types from all the visible parts of all the visible generic packages.\n-Generic formal types are not counted.  Only types, not subtypes,\n+number of types from all the visible parts of all the visible generic\n+packages. Generic formal types are not counted.  Only types, not subtypes,\n are included.\n \n @noindent\n@@ -16571,52 +16632,80 @@ private etc.); the total number of types is computed and reported.\n \n @noindent\n By default, all the syntax metrics are computed and reported. You can use the\n-following switches to select specific syntax metrics;\n-if any of these is set, only the explicitly specified metrics are computed.\n+following switches to select specific syntax metrics.\n \n @table @option\n-@cindex @option{^-ed^/DECLARATION_TOTAL^} (@command{gnatmetric})\n-@item ^-ed^/DECLARATION_TOTAL^\n-The total number of declarations\n \n-@cindex @option{^-es^/STATEMENT_TOTAL^} (@command{gnatmetric})\n-@item ^-es^/STATEMENT_TOTAL^\n-The total number of statements\n+@cindex @option{^--syntax@var{x}^/SYNTAX_METRICS^} (@command{gnatmetric})\n \n-@cindex @option{^-eps^/^} (@command{gnatmetric})\n-@item ^-eps^/INT_SUBPROGRAMS^\n-The number of public subprograms in a compilation unit\n+@ifclear vms\n+@cindex @option{--no-syntax@var{x}}\n+@end ifclear\n+\n+@item ^--syntax-all^/SYNTAX_METRICS=ALL_ON^\n+Report all the syntax metrics\n+\n+@item ^--no-syntax-all^/ALL_OFF^\n+Do not report any of syntax metrics\n+\n+@item ^--declarations^/SYNTAX_METRICS=DECLARATIONS_ON^\n+Report the total number of declarations\n+\n+@item ^--no-declarations^/SYNTAX_METRICS=DECLARATIONS_OFF^\n+Do not report the total number of declarations\n+\n+@item ^--statements^/SYNTAX_METRICS=STATEMENTS_ON^\n+Report the total number of statements\n+\n+@item ^--no-statements^/SYNTAX_METRICS=STATEMENTS_OFF^\n+Do not report the total number of statements\n+\n+@item ^--public-subprograms^/SYNTAX_METRICS=PUBLIC_SUBPROGRAMS_ON^\n+Report the number of public subprograms in a compilation unit\n \n-@cindex @option{^-eas^/SUBPROGRAMS_ALL^} (@command{gnatmetric})\n-@item ^-eas^/SUBPROGRAMS_ALL^\n-The number of all the subprograms in a compilation unit\n+@item ^--no-public-subprograms^/SYNTAX_METRICS=PUBLIC_SUBPROGRAMS_OFF^\n+Do not report the number of public subprograms in a compilation unit\n \n-@cindex @option{^-ept^/INT_TYPES^} (@command{gnatmetric})\n-@item ^-ept^/INT_TYPES^\n-The number of public types in a compilation unit\n+@item ^--all-subprograms^/SYNTAX_METRICS=ALL_SUBPROGRAMS_ON^\n+Report the number of all the subprograms in a compilation unit\n \n-@cindex @option{^-eat^/TYPES_ALL^} (@command{gnatmetric})\n-@item ^-eat^/TYPES_ALL^\n-The number of all the types in a compilation unit\n+@item ^--no-all-subprograms^/SYNTAX_METRICS=ALL_SUBPROGRAMS_OFF^\n+Do not report the number of all the subprograms in a compilation unit\n \n-@cindex @option{^-enu^/PROGRAM_NESTING_MAX^} (@command{gnatmetric})\n-@item ^-enu^/PROGRAM_NESTING_MAX^\n-The maximal program unit nesting level\n+@item ^--public-types^/SYNTAX_METRICS=PUBLIC_TYPES_ON^\n+Report the number of public types in a compilation unit\n \n-@cindex @option{^-ec^/CONSTRUCT_NESTING_MAX^} (@command{gnatmetric})\n-@item ^-ec^/CONSTRUCT_NESTING_MAX^\n-The maximal construct nesting level\n+@item ^--no-public-types^/SYNTAX_METRICS=PUBLIC_TYPES_OFF^\n+Do not report the number of public types in a compilation unit\n+\n+@item ^--all-types^/SYNTAX_METRICS=ALL_TYPES_ON^\n+Report the number of all the types in a compilation unit\n+\n+@item ^--no-all-types^/SYNTAX_METRICS=ALL_TYPES_OFF^\n+Do not report the number of all the types in a compilation unit\n+\n+@item ^--unit-nesting^/SYNTAX_METRICS=UNIT_NESTING_ON^\n+Report the maximal program unit nesting level\n+\n+@item ^--no-unit-nesting^/SYNTAX_METRICS=UNIT_NESTING_OFF^\n+Do not report the maximal program unit nesting level\n+\n+@item ^--construct-nesting^/SYNTAX_METRICS=CONSTRUCT_NESTING_ON^\n+Report the maximal construct nesting level\n+\n+@item ^--no-construct-nesting^/SYNTAX_METRICS=CONSTRUCT_NESTING_OFF^\n+Do not report the maximal construct nesting level\n \n @end table\n \n @node Complexity Metrics Control\n-@subsection Complexity Metrics Control\n+@subsubsection Complexity Metrics Control\n @cindex Complexity metrics control in @command{gnatmetric}\n \n @noindent\n For a program unit that is an executable body (a subprogram body (including\n generic bodies), task body, entry body or a package body containing\n-its own statement sequence ) @command{gnatmetric} computes the following\n+its own statement sequence) @command{gnatmetric} computes the following\n complexity metrics:\n \n @itemize @bullet\n@@ -16657,22 +16746,52 @@ When computing cyclomatic and essential complexity, @command{gnatmetric} skips\n the code in the exception handlers and in all the nested program units.\n \n By default, all the complexity metrics are computed and reported.\n-For more finely-grained control you can use\n+For more fine-grained control you can use\n the following switches:\n \n @table @option\n-@cindex @option{^-n@var{x}^/SUPPRESS^} (@command{gnatmetric})\n+@cindex @option{^-complexity@var{x}^/COMPLEXITY_METRICS^} (@command{gnatmetric})\n \n-@item ^-nocc^/SUPPRESS=CYCLOMATIC_COMPLEXITY^\n-Do not compute the McCabe Cyclomatic Complexity\n+@ifclear vms\n+@cindex @option{--no-complexity@var{x}}\n+@end ifclear\n+\n+@item ^--complexity-all^/COMPLEXITY_METRICS=ALL_ON^\n+Report all the complexity metrics\n+\n+@item ^--no-complexity-all^/COMPLEXITY_METRICS=ALL_OFF^\n+Do not report any of complexity metrics\n+\n+@item ^--complexity-cyclomatic^/COMPLEXITY_METRICS=CYCLOMATIC_ON^\n+Report the McCabe Cyclomatic Complexity\n \n-@item ^-noec^/SUPPRESS=ESSENTIAL_COMPLEXITY^\n-Do not compute the Essential Complexity\n+@item ^--no-complexity-cyclomatic^/COMPLEXITY_METRICS=CYCLOMATIC_OFF^\n+Do not report the McCabe Cyclomatic Complexity\n \n-@item ^-nonl^/SUPPRESS=MAXIMAL_LOOP_NESTING^\n-Do not compute maximal loop nesting level\n+@item ^--complexity-essential^/COMPLEXITY_METRICS=ESSENTIAL_ON^\n+Report the Essential Complexity\n \n-@item ^-ne^/SUPPRESS=EXITS_AS_GOTOS^\n+@item ^--no-complexity-essential^/COMPLEXITY_METRICS=ESSENTIAL_OFF^\n+Do not report the Essential Complexity\n+\n+@item ^--loop-nesting^/COMPLEXITY_METRICS=LOOP_NESTING_ON^\n+Report maximal loop nesting level\n+\n+@item ^--no-loop-nesting^/COMPLEXITY_METRICS=LOOP_NESTING_OFF^\n+Do not report maximal loop nesting level\n+\n+@item ^--complexity-average^/COMPLEXITY_METRICS=AVERAGE_COMPLEXITY_ON^\n+Report the average McCabe Cyclomatic Complexity for all the subprogram bodies,\n+task bodies, entry bodies and statement sequences in package bodies.\n+The metric is computed and reported for whole set of processed Ada sources\n+only.\n+\n+@item ^--no-complexity-average^/COMPLEXITY_METRICS=AVERAGE_COMPLEXITY_OFF^\n+Do not report the average McCabe Cyclomatic Complexity for all the subprogram\n+bodies, task bodies, entry bodies and statement sequences in package bodies\n+\n+@cindex @option{^-ne^/NO_EXITS_AS_GOTOS^} (@command{gnatmetric})\n+@item ^-ne^/NO_EXITS_AS_GOTOS^\n Do not consider @code{exit} statements as @code{goto}s when\n computing Essential Complexity\n \n@@ -16688,7 +16807,7 @@ Additional @command{gnatmetric} switches are as follows:\n @item ^-files @var{filename}^/FILES=@var{filename}^\n @cindex @option{^-files^/FILES^} (@code{gnatmetric})\n Take the argument source files from the specified file. This file should be an\n-ordinary textual file containing file names separated by spaces or\n+ordinary text file containing file names separated by spaces or\n line breaks. You can use this switch more then once in the same call to\n @command{gnatmetric}. You also can combine this switch with\n an explicit list of files.\n@@ -16713,18 +16832,22 @@ Quiet mode.\n @node Generate project-wide metrics\n @subsection Generate project-wide metrics\n \n-In order to compute metrics on all units of a given project, one can use\n+In order to compute metrics on all units of a given project, you can use\n the @command{gnat} driver along with the @option{-P} option:\n @smallexample\n    gnat metric -Pproj\n @end smallexample\n-If the project @code{proj} depends upon other projects, one can compute\n+\n+@noindent\n+If the project @code{proj} depends upon other projects, you can compute\n the metrics on the project closure using the @option{-U} option:\n @smallexample\n    gnat metric -Pproj -U\n @end smallexample\n+\n+@noindent\n Finally, if not all the units are relevant to a particular main\n-program in the project closure, one can generate metrics for the set\n+program in the project closure, you can generate metrics for the set\n of units needed to create a given main program (unit closure) using\n the @option{-U} option followed by the name of the main unit:\n @smallexample"}, {"sha": "a78a3dbf6034fe20706f8b36c34f39d46a91b4b1", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 229, "deletions": 63, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7954ad60dfe13b287645778983cb5ede2da8592b/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7954ad60dfe13b287645778983cb5ede2da8592b/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=7954ad60dfe13b287645778983cb5ede2da8592b", "patch": "@@ -305,6 +305,13 @@ package VMS_Data is\n    --      LOW          Initialize with the lowest valid value of the subtype.\n    --      HIGH         Initialize with the highest valid value of the subtype.\n \n+   S_Bind_Leap    : aliased constant S := \"/ENABLE_LEAP_SECONDS \"          &\n+                                            \"-y\";\n+   --      /ENABLE_LEAP_SECONDS\n+   --      /NOENABLE_LEAP_SECONDS (D)\n+   --\n+   --   Enable leap seconds support in Ada.Calendar and its children.\n+\n    S_Bind_Library : aliased constant S := \"/LIBRARY_SEARCH=*\"              &\n                                             \"-aO*\";\n    --        /LIBRARY_SEARCH=(direc[,...])\n@@ -638,6 +645,7 @@ package VMS_Data is\n                       S_Bind_Force   'Access,\n                       S_Bind_Help    'Access,\n                       S_Bind_Init    'Access,\n+                      S_Bind_Leap    'Access,\n                       S_Bind_Library 'Access,\n                       S_Bind_Linker  'Access,\n                       S_Bind_Main    'Access,\n@@ -4486,25 +4494,81 @@ package VMS_Data is\n                                               \"-enu \"                       &\n                                              \"CONSTRUCT_NESTING_MAX \"       &\n                                               \"-ec\";\n-   --       /ELEMENT_METRICS=(option, option ...)\n-   --\n-   --   Specifies the element metrics to be computed (if not set, all the\n-   --   element metrics are set on, otherwise only specified metrics are\n-   --   computed and reported)\n+   --  NODOC  (see /SYNTAX_METRICS)\n+\n+   S_Metric_Syntax : aliased constant S := \"/SYNTAX_METRICS=\"             &\n+                                             \"ALL_ON \"                    &\n+                                             \"--syntax-all \"              &\n+                                             \"ALL_OFF \"                   &\n+                                             \"--no-syntax-all \"           &\n+                                             \"DECLARATIONS_ON \"           &\n+                                             \"--declarations \"            &\n+                                             \"DECLARATIONS_OFF \"          &\n+                                             \"--no-declarations \"         &\n+                                             \"STATEMENTS_ON \"             &\n+                                             \"--statements \"              &\n+                                             \"STATEMENTS_OFF \"            &\n+                                             \"--no-statements \"           &\n+                                             \"PUBLIC_SUBPROGRAMS_ON \"     &\n+                                             \"--public-subprograms \"      &\n+                                             \"PUBLIC_SUBPROGRAMS_OFF \"    &\n+                                             \"--no-public-subprograms \"   &\n+                                             \"ALL_SUBPROGRAMS_ON \"        &\n+                                             \"--all-subprograms \"         &\n+                                             \"ALL_SUBPROGRAMS_OFF \"       &\n+                                             \"--no-all-subprograms \"      &\n+                                             \"PUBLIC_TYPES_ON \"           &\n+                                             \"--public-types \"            &\n+                                             \"PUBLIC_TYPES_OFF \"          &\n+                                             \"--no-public-types \"         &\n+                                             \"ALL_TYPES_ON \"              &\n+                                             \"--all-types \"               &\n+                                             \"ALL_TYPES_OFF \"             &\n+                                             \"--no-all-types \"            &\n+                                             \"UNIT_NESTING_ON \"           &\n+                                             \"--unit-nesting \"            &\n+                                             \"UNIT_NESTING_OFF \"          &\n+                                             \"--no-unit-nesting \"         &\n+                                             \"CONSTRUCT_NESTING_ON \"      &\n+                                             \"--construct-nesting \"       &\n+                                             \"CONSTRUCT_NESTING_OFF \"     &\n+                                             \"--no-construct-nesting\";\n+   --       /SYNTAX_METRICS(option, option ...)\n+   --\n+   --   Specifies the syntax element metrics to be computed (if at least one\n+   --   positive syntax element metric, line metric or complexity metric is\n+   --   specified then only explicitly specified specified syntax element\n+   --   metrics are computed and reported)\n    --\n    --   option may be one of the following:\n    --\n-   --     ALL (D)               All the element metrics are computed\n-   --     DECLARATION_TOTAL     Compute the total number of declarations\n-   --     STATEMENT_TOTAL       Compute the total number of statements\n-   --     LOOP_NESTING_MAX      Compute the maximal loop nesting level\n-   --     INT_SUBPROGRAMS       Compute the number of interface subprograms\n-   --     SUBPROGRAMS_ALL       Compute the number of all the subprograms\n-   --     INT_TYPES             Compute the number of interface types\n-   --     TYPES_ALL             Compute the number of all the types\n-   --     PROGRAM_NESTING_MAX   Compute the maximal program unit nesting level\n-   --\n-   --   All combinations of element metrics options are allowed.\n+   --     ALL_ON (D)               All the syntax element metrics are computed\n+   --     ALL_OFF                  None of syntax element metrics is computed\n+   --     DECLARATIONS_ON          Compute the total number of declarations\n+   --     DECLARATIONS_OFF         Do not compute the total number of\n+   --                              declarations\n+   --     STATEMENTS_ON            Compute the total number of statements\n+   --     STATEMENTS_OFF           Do not compute the total number of\n+   --                              statements\n+   --     PUBLIC_SUBPROGRAMS_ON    Compute the number of public subprograms\n+   --     PUBLIC_SUBPROGRAMS_OFF   Do not compute the number of public\n+   --                              subprograms\n+   --     ALL_SUBPROGRAMS_ON       Compute the number of all the subprograms\n+   --     ALL_SUBPROGRAMS_OFF      Do not compute the number of all the\n+   --                              subprograms\n+   --     PUBLIC_TYPES_ON          Compute the number of public types\n+   --     PUBLIC_TYPES_OFF         Do not compute the number of public types\n+   --     ALL_TYPES_ON             Compute the number of all the types\n+   --     ALL_TYPES_OFF            Do not compute the number of all the types\n+   --     UNIT_NESTING_ON          Compute the maximal program unit nesting\n+   --                              level\n+   --     UNIT_NESTING_OFF         Do not compute the maximal program unit\n+   --                              nesting level\n+   --     CONSTRUCT_NESTING_ON     Compute the maximal construct nesting level\n+   --     CONSTRUCT_NESTING_OFF    Do not compute the maximal construct nesting\n+   --                              level\n+   --\n+   --   All combinations of syntax element metrics options are allowed.\n \n    S_Metric_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'    &\n                                              \"-X\" & '\"';\n@@ -4565,27 +4629,139 @@ package VMS_Data is\n                                                 \"COMMENT_PERCENTAGE \"       &\n                                                  \"-lratio \"                 &\n                                                 \"BLANK_LINES \"              &\n-                                                 \"-lb \";\n-   --      /LINE_METRICS=(option, option ...)\n-\n-   --   Specifies the line metrics to be computed (if not set, all the line\n-   --   metrics are set on, otherwise only specified metrics are computed and\n+                                                 \"-lb \"                     &\n+                                                \"AVERAGE_LINES_IN_BODIES \"  &\n+                                                 \"-lav \";\n+   --  NODOC  (see /LINE_COUNT_METRICS)\n+\n+   S_Metric_Lines : aliased constant S := \"/LINE_COUNT_METRICS=\"            &\n+                                           \"ALL_ON \"                        &\n+                                           \"--lines-all \"                   &\n+                                           \"ALL_OFF \"                       &\n+                                           \"--no-lines-all \"                &\n+                                           \"ALL_LINES_ON \"                  &\n+                                           \"--lines \"                       &\n+                                           \"ALL_LINES_OFF \"                 &\n+                                           \"--no-lines \"                    &\n+                                           \"CODE_LINES_ON \"                 &\n+                                           \"--lines-code \"                  &\n+                                           \"CODE_LINES_OFF \"                &\n+                                           \"--no-lines-code \"               &\n+                                           \"COMMENT_LINES_ON \"              &\n+                                           \"--lines-comment \"               &\n+                                           \"COMMENT_LINES_OFF \"             &\n+                                           \"--no-lines-comment \"            &\n+                                           \"CODE_COMMENT_LINES_ON \"         &\n+                                           \"--lines-eol-comment \"           &\n+                                           \"CODE_COMMENT_LINES_OFF \"        &\n+                                           \"--no-lines-eol-comment \"        &\n+                                           \"COMMENT_PERCENTAGE_ON \"         &\n+                                           \"--lines-ratio \"                 &\n+                                           \"COMMENT_PERCENTAGE_OFF \"        &\n+                                           \"--no-lines-ratio \"              &\n+                                           \"BLANK_LINES_ON \"                &\n+                                           \"--lines-blank \"                 &\n+                                           \"BLANK_LINES_OFF \"               &\n+                                           \"--no-lines-blank \"              &\n+                                           \"AVERAGE_BODY_LINES_ON \"         &\n+                                           \"--lines-average \"               &\n+                                           \"AVERAGE_BODY_LINES_OFF \"        &\n+                                           \"--no-lines-average\";\n+   --      /LINE_COUNT_METRICS=(option, option ...)\n+\n+   --   Specifies the line metrics to be computed (if at least one positive\n+   --   syntax element metric, line metric or complexity metric is specified\n+   --   then only explicitly specified specified line metrics are computed and\n    --   reported)\n    --\n    --   option may be one of the following:\n    --\n-   --     ALL (D)              All the line metrics are computed\n-   --     LINES_ALL            All lines are computed\n-   --     CODE_LINES           Lines with Ada code are computed\n-   --     COMENT_LINES         All comment lines are computed\n-   --     MIXED_CODE_COMMENTS  All lines containing both code and comment are\n-   --                          computed\n-   --     COMMENT_PERCENTAGE   Ratio between comment lines and all the lines\n-   --                          containing comments and program code\n-   --     BLANK_LINES          Blank lines are computed\n+   --     ALL_ON (D)               All the line metrics are computed\n+   --     ALL_OFF                  None of line metrics is computed\n+   --     ALL_LINES_ON             All lines are computed\n+   --     ALL_LINES_OFF            All lines are not computed\n+   --     CODE_LINES_ON            Lines with Ada code are computed\n+   --     CODE_LINES_OFF           Lines with Ada code are not computed\n+   --     COMMENT_LINES_ON         Comment lines are computed\n+   --     COMMENT_LINES_OFF        Comment lines are not computed\n+   --     COMMENT_PERCENTAGE_ON    Ratio between comment lines and all the\n+   --                              lines containing comments and program code\n+   --                              is computed\n+   --     COMMENT_PERCENTAGE_OFF    Ratio between comment lines and all the\n+   --                              lines containing comments and program code\n+   --                              is not computed\n+   --     BLANK_LINES_ON           Blank lines are computed\n+   --     BLANK_LINES_OFF          Blank lines are not computed\n+   --     AVERAGE_BODY_LINES_ON    Average number of code lines in subprogram,\n+   --                              task and entry bodies and statement\n+   --                              sequences of package bodies is computed\n+   --     AVERAGE_BODY_LINES_OFF   Average number of code lines in subprogram,\n+   --                              task and entry bodies and statement\n+   --                              sequences of package bodies is not computed\n+   --\n+   --   All combinations of line metrics options are allowed.\n+\n+   S_Metric_Complexity : aliased constant S := \"/COMPLEXITY_METRICS=\"       &\n+                                               \"ALL_ON \"                    &\n+                                               \"--complexity-all \"          &\n+                                              \"ALL_OFF \"                    &\n+                                              \"--no-complexity-all \"        &\n+                                              \"CYCLOMATIC_ON \"              &\n+                                              \"--complexity-cyclomatic \"    &\n+                                              \"CYCLOMATIC_OFF \"             &\n+                                              \"--no-complexity-cyclomatic \" &\n+                                              \"ESSENTIAL_ON \"               &\n+                                              \"--complexity-essential \"     &\n+                                              \"ESSENTIAL_OFF \"              &\n+                                              \"--no-complexity-essential \"  &\n+                                              \"LOOP_NESTING_ON \"            &\n+                                              \"--loop-nesting \"             &\n+                                              \"LOOP_NESTING_OFF \"           &\n+                                              \"--no-loop-nesting \"          &\n+                                              \"AVERAGE_COMPLEXITY_ON \"      &\n+                                              \"--complexity-average \"       &\n+                                              \"AVERAGE_COMPLEXITY_OFF \"     &\n+                                              \"--no-complexity-average\";\n+   --      /COMPLEXITY_METRICS=(option, option ...)\n+\n+   --   Specifies the complexity metrics to be computed (if at least one\n+   --   positive syntax element metric, line metric or complexity metric is\n+   --   specified then only explicitly specified specified line metrics are\n+   --   computed and reported)\n+   --\n+   --   option may be one of the following:\n+   --\n+   --     ALL_ON (D)               All the complexity metrics are computed\n+   --     ALL_OFF                  None of complexity metrics is computed\n+   --     CYCLOMATIC_ON            Compute the McCabe Cyclomatic Complexity\n+   --     CYCLOMATIC_OFF           Do not compute the McCabe Cyclomatic\n+   --                              Complexity\n+   --     ESSENTIAL_ON             Compute the Essential Complexity\n+   --     ESSENTIAL_OFF            Do not ompute the Essential Complexity\n+   --     LOOP_NESTIMG_ON          Compute the maximal loop nesting\n+   --     LOOP_NESTIMG_OFF         Do not compute the maximal loop nesting\n+   --     AVERAGE_COMPLEXITY_ON    Compute the average complexity for\n+   --                              executable bodies\n+   --     AVERAGE_COMPLEXITY_OFF   Do not compute the average complexity for\n+   --                              executable bodies\n    --\n    --   All combinations of line metrics options are allowed.\n \n+   S_Metric_No_Local : aliased constant S := \"/NO_LOCAL_DETAILS \"          &\n+                                             \"-nolocal\";\n+   --        /LOCAL_DETAILS (D)\n+   --        /NO_LOCAL_DETAILS\n+   --\n+   --   Do not compute the detailed metrics for local program units.\n+\n+   S_Metric_No_Exits_As_Gotos : aliased constant S := \"/NO_EXITS_AS_GOTOS \" &\n+                                                      \"-ne\";\n+   --        /EXITS_AS_GOTOS (D)\n+   --        /NO_EXITS_AS_GOTOS\n+   --\n+   --   Do not count EXIT statements as GOTOs when computing the Essential\n+   --   Complexity.\n+\n    S_Metric_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"       &\n                                              \"DEFAULT \"                     &\n                                                 \"-vP0 \"                     &\n@@ -4643,22 +4819,7 @@ package VMS_Data is\n                                                 \"-ne \"                      &\n                                                \"LOCAL_DETAILS \"             &\n                                                 \"-nolocal \";\n-   --      /SUPPRESS=(option, option ...)\n-   --\n-   --   Specifies the metric that should not be computed\n-   --\n-   --   option may be one of the following:\n-   --\n-   --     NOTHING (D)             Do not suppress computation of any metric\n-   --     CYCLOMATIC_COMPLEXITY   Do not compute the Cyclomatic Complexity\n-   --     ESSENTIAL_COMPLEXITY    Do not compute the Essential Complexity\n-   --     MAXIMAL_LOOP_NESTING    Do not compute the maximal loop nesting\n-   --     EXITS_AS_GOTOS          Do not count EXIT statements as GOTOs when\n-   --                             computing the  Essential Complexity\n-   --     LOCAL_DETAILS           Do not compute the detailed metrics for local\n-   --                             program units\n-   --\n-   --   All combinations of options are allowed.\n+   --  NODOC  (see /COMPLEXITY_METRICS /NO_LOCAL_DETAILS /NO_EXITS_AS_GOTOS)\n \n    S_Metric_Verbose  : aliased constant S := \"/VERBOSE \"                    &\n                                              \"-v\";\n@@ -4674,23 +4835,28 @@ package VMS_Data is\n    --   Place the XML output into the specified file\n \n    Metric_Switches : aliased constant Switches :=\n-                       (S_Metric_Add      'Access,\n-                        S_Metric_All_Prjs 'Access,\n-                        S_Metric_Debug    'Access,\n-                        S_Metric_Direct   'Access,\n-                        S_Metric_Element  'Access,\n-                        S_Metric_Ext      'Access,\n-                        S_Metric_Files    'Access,\n-                        S_Metric_Format   'Access,\n-                        S_Metric_Globout  'Access,\n-                        S_Metric_Line     'Access,\n-                        S_Metric_Mess     'Access,\n-                        S_Metric_Project  'Access,\n-                        S_Metric_Quiet    'Access,\n-                        S_Metric_Suffix   'Access,\n-                        S_Metric_Suppress 'Access,\n-                        S_Metric_Verbose  'Access,\n-                        S_Metric_XMLout   'Access);\n+                       (S_Metric_Add              'Access,\n+                        S_Metric_All_Prjs         'Access,\n+                        S_Metric_Complexity       'Access,\n+                        S_Metric_Debug            'Access,\n+                        S_Metric_Direct           'Access,\n+                        S_Metric_Element          'Access,\n+                        S_Metric_Ext              'Access,\n+                        S_Metric_Files            'Access,\n+                        S_Metric_Format           'Access,\n+                        S_Metric_Globout          'Access,\n+                        S_Metric_Line             'Access,\n+                        S_Metric_Lines            'Access,\n+                        S_Metric_Mess             'Access,\n+                        S_Metric_No_Exits_As_Gotos'Access,\n+                        S_Metric_No_Local         'Access,\n+                        S_Metric_Project          'Access,\n+                        S_Metric_Quiet            'Access,\n+                        S_Metric_Suffix           'Access,\n+                        S_Metric_Syntax           'Access,\n+                        S_Metric_Suppress         'Access,\n+                        S_Metric_Verbose          'Access,\n+                        S_Metric_XMLout           'Access);\n \n    ----------------------------\n    -- Switches for GNAT NAME --"}]}