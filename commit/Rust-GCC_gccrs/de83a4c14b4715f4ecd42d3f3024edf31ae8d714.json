{"sha": "de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU4M2E0YzE0YjQ3MTVmNGVjZDQyZDNmMzAyNGVkZjMxYWU4ZDcxNA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-08-21T07:53:35Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-08-21T07:53:35Z"}, "message": "d/dmd: Merge upstream dmd 375ed10aa\n\nDon't crash when compiling for 16-bit platforms.\n\nReviewed-on: https://github.com/dlang/dmd/pull/10306\n\ngcc/d/ChangeLog:\n\n\t* d-target.cc: Include diagnostic.h.\n\t(Target::_init): Set Tsize_t and Tptrdiff_t as D ushort and short if\n\tthe target pointer size is 2.  Add sorry if the pointer size is not\n\teither 2, 4, or 8.\n\nFrom-SVN: r274768", "tree": {"sha": "6be69fff09b0519948419c775912b8fa80eeea24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be69fff09b0519948419c775912b8fa80eeea24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "edf095929fdec6a0c183ab5fd119f26dfd406b13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf095929fdec6a0c183ab5fd119f26dfd406b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf095929fdec6a0c183ab5fd119f26dfd406b13"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "011b0d44fa037dc0bf938b07d0bf46d67fc2729a", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "patch": "@@ -1,3 +1,10 @@\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc: Include diagnostic.h.\n+\t(Target::_init): Set Tsize_t and Tptrdiff_t as D ushort and short if\n+\tthe target pointer size is 2.  Add sorry if the pointer size is not\n+\teither 2, 4, or 8.\n+\n 2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/90446"}, {"sha": "dfaf9bf3792c80322f4a2f048a019af8970c5e65", "filename": "gcc/d/d-target.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fd-target.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fd-target.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-target.cc?ref=de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"memmodel.h\"\n #include \"fold-const.h\"\n+#include \"diagnostic.h\"\n #include \"stor-layout.h\"\n #include \"tm.h\"\n #include \"tm_p.h\"\n@@ -145,17 +146,24 @@ Target::_init (void)\n   Target::maxStaticDataSize = tree_to_shwi (TYPE_MAX_VALUE (integer_type_node));\n \n   /* Define what type to use for size_t, ptrdiff_t.  */\n-  if (POINTER_SIZE == 64)\n+  if (Target::ptrsize == 8)\n     {\n       global.params.isLP64 = true;\n       Tsize_t = Tuns64;\n       Tptrdiff_t = Tint64;\n     }\n-  else\n+  else if (Target::ptrsize == 4)\n     {\n       Tsize_t = Tuns32;\n       Tptrdiff_t = Tint32;\n     }\n+  else if (Target::ptrsize == 2)\n+    {\n+      Tsize_t = Tuns16;\n+      Tptrdiff_t = Tint16;\n+    }\n+  else\n+    sorry (\"D does not support pointers on this target.\");\n \n   Type::tsize_t = Type::basic[Tsize_t];\n   Type::tptrdiff_t = Type::basic[Tptrdiff_t];"}, {"sha": "cb7b6bfac7ff7ff1ccb57a05cb6cf4f5ae3b6e35", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "patch": "@@ -1,4 +1,4 @@\n-792f0fdf249b21531dc91690024827f4f9ecbb97\n+375ed10aa7eb28755f92775ca5c5399550cd100b\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "5f1bfa8f5a9863f34e1ee5775fd0123da08d3a3e", "filename": "gcc/d/dmd/expression.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fdmd%2Fexpression.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fdmd%2Fexpression.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.c?ref=de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "patch": "@@ -2920,10 +2920,12 @@ void IntegerExp::normalize()\n         case Tint64:        value = (d_int64) value;        break;\n         case Tuns64:        value = (d_uns64) value;        break;\n         case Tpointer:\n-            if (Target::ptrsize == 4)\n-                value = (d_uns32) value;\n-            else if (Target::ptrsize == 8)\n+            if (Target::ptrsize == 8)\n                 value = (d_uns64) value;\n+            else if (Target::ptrsize == 4)\n+                value = (d_uns32) value;\n+            else if (Target::ptrsize == 2)\n+                value = (d_uns16) value;\n             else\n                 assert(0);\n             break;"}, {"sha": "395aa3212b5e47f4a902ec9a46334837fa56f921", "filename": "gcc/d/dmd/hdrgen.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fdmd%2Fhdrgen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de83a4c14b4715f4ecd42d3f3024edf31ae8d714/gcc%2Fd%2Fdmd%2Fhdrgen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.c?ref=de83a4c14b4715f4ecd42d3f3024edf31ae8d714", "patch": "@@ -2152,10 +2152,12 @@ class PrettyPrintVisitor : public Visitor\n             if ((sinteger_t)uval >= 0)\n             {\n                 dinteger_t sizemax;\n-                if (Target::ptrsize == 4)\n-                    sizemax = 0xFFFFFFFFUL;\n-                else if (Target::ptrsize == 8)\n+                if (Target::ptrsize == 8)\n                     sizemax = 0xFFFFFFFFFFFFFFFFULL;\n+                else if (Target::ptrsize == 4)\n+                    sizemax = 0xFFFFFFFFUL;\n+                else if (Target::ptrsize == 2)\n+                    sizemax = 0xFFFFUL;\n                 else\n                     assert(0);\n                 if (uval <= sizemax && uval <= 0x7FFFFFFFFFFFFFFFULL)\n@@ -2296,12 +2298,10 @@ class PrettyPrintVisitor : public Visitor\n                     buf->writestring(\"cast(\");\n                     buf->writestring(t->toChars());\n                     buf->writeByte(')');\n-                    if (Target::ptrsize == 4)\n-                        goto L3;\n-                    else if (Target::ptrsize == 8)\n+                    if (Target::ptrsize == 8)\n                         goto L4;\n                     else\n-                        assert(0);\n+                        goto L3;\n \n                 default:\n                     /* This can happen if errors, such as"}]}