{"sha": "c8869272f7f2129233c5f670a0064314dd312e64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4NjkyNzJmN2YyMTI5MjMzYzVmNjcwYTAwNjQzMTRkZDMxMmU2NA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-03-09T03:17:16Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-03-09T03:17:16Z"}, "message": "re PR libfortran/38199 (missed optimization: I/O performance)\n\n2014-03-08  Jerry DeLisle  <jvdelisle@gcc.gnu>\n\n\tPR libfortran/38199\n\t* io/list_read.c (next_char): Delete unuseful error checks.\n\t(eat_spaces): For character array reading, skip ahead over\n\tspaces rather than call next_char multiple times.\n\nFrom-SVN: r208438", "tree": {"sha": "e9297a315533e1957c8203a26d07d4ed169276a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9297a315533e1957c8203a26d07d4ed169276a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8869272f7f2129233c5f670a0064314dd312e64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8869272f7f2129233c5f670a0064314dd312e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8869272f7f2129233c5f670a0064314dd312e64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8869272f7f2129233c5f670a0064314dd312e64/comments", "author": null, "committer": null, "parents": [{"sha": "a5165cff4d16be9a1e1e6d9815a31b3ffa6ab096", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5165cff4d16be9a1e1e6d9815a31b3ffa6ab096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5165cff4d16be9a1e1e6d9815a31b3ffa6ab096"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "1a3539ddb7101d1c304aa073e4affdb246700956", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8869272f7f2129233c5f670a0064314dd312e64/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8869272f7f2129233c5f670a0064314dd312e64/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=c8869272f7f2129233c5f670a0064314dd312e64", "patch": "@@ -1,3 +1,10 @@\n+2014-03-08  Jerry DeLisle  <jvdelisle@gcc.gnu>\n+\n+\tPR libfortran/38199\n+\t* io/list_read.c (next_char): Delete unuseful error checks.\n+\t(eat_spaces): For character array reading, skip ahead over\n+\tspaces rather than call next_char multiple times.\n+\n 2014-03-08  Tobias Burnus  <burnus@net-b.de>\n \n \t* libgfortran.h (unlikely, likely): Add usage comment."}, {"sha": "4a26db96a96f0da832dc18eda4d899b1d5c95a47", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 46, "deletions": 4, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8869272f7f2129233c5f670a0064314dd312e64/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8869272f7f2129233c5f670a0064314dd312e64/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=c8869272f7f2129233c5f670a0064314dd312e64", "patch": "@@ -160,7 +160,7 @@ next_char (st_parameter_dt *dtp)\n \n       dtp->u.p.line_buffer_pos = 0;\n       dtp->u.p.line_buffer_enabled = 0;\n-    }    \n+    }\n \n   /* Handle the end-of-record and end-of-file conditions for\n      internal array unit.  */\n@@ -208,16 +208,16 @@ next_char (st_parameter_dt *dtp)\n          c = cc;\n        }\n \n-      if (length < 0)\n+      if (unlikely (length < 0))\n \t{\n \t  generate_error (&dtp->common, LIBERROR_OS, NULL);\n \t  return '\\0';\n \t}\n-  \n+\n       if (is_array_io (dtp))\n \t{\n \t  /* Check whether we hit EOF.  */ \n-\t  if (length == 0)\n+\t  if (unlikely (length == 0))\n \t    {\n \t      generate_error (&dtp->common, LIBERROR_INTERNAL_UNIT, NULL);\n \t      return '\\0';\n@@ -264,6 +264,48 @@ eat_spaces (st_parameter_dt *dtp)\n {\n   int c;\n \n+  /* If internal character array IO, peak ahead and seek past spaces.\n+     This is an optimazation to eliminate numerous calls to\n+     next character unique to character arrays with large character\n+     lengths (PR38199). */\n+  if (is_array_io (dtp))\n+    {\n+      gfc_offset offset = stell (dtp->u.p.current_unit->s);\n+      gfc_offset limit = dtp->u.p.current_unit->bytes_left;\n+\n+      if (dtp->common.unit) /* kind=4 */\n+\t{\n+\t  gfc_char4_t cc;\n+\t  limit *= (sizeof (gfc_char4_t));\n+\t  do\n+\t    {\n+\t      cc = dtp->internal_unit[offset];\n+\t      offset += (sizeof (gfc_char4_t));\n+\t      dtp->u.p.current_unit->bytes_left--;\n+\t    }\n+\t  while (offset < limit && (cc == (gfc_char4_t)' '\n+\t\t  || cc == (gfc_char4_t)'\\t'));\n+\t  /* Back up, seek ahead, and fall through to complete the\n+\t     process so that END conditions are handled correctly.  */\n+\t  dtp->u.p.current_unit->bytes_left++;\n+\t  sseek (dtp->u.p.current_unit->s,\n+\t\t  offset-(sizeof (gfc_char4_t)), SEEK_SET);\n+\t}\n+      else\n+\t{\n+\t  do\n+\t    {\n+\t      c = dtp->internal_unit[offset++];\n+\t      dtp->u.p.current_unit->bytes_left--;\n+\t    }\n+\t  while (offset < limit && (c == ' ' || c == '\\t'));\n+\t  /* Back up, seek ahead, and fall through to complete the\n+\t     process so that END conditions are handled correctly.  */\n+\t  dtp->u.p.current_unit->bytes_left++;\n+\t  sseek (dtp->u.p.current_unit->s, offset-1, SEEK_SET);\n+\t}\n+    }\n+  /* Now skip spaces, EOF and EOL are handled in next_char.  */\n   do\n     c = next_char (dtp);\n   while (c != EOF && (c == ' ' || c == '\\t'));"}]}