{"sha": "75a829785fbfeedcb435e7aa3b43d96ad44926b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhODI5Nzg1ZmJmZWVkY2I0MzVlN2FhM2I0M2Q5NmFkNDQ5MjZiMA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-06-16T18:45:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-06-16T18:45:50Z"}, "message": "re PR c++/27884 (bogus error: invalid use of 'register' in linkage specification)\n\n\tPR c++/27884\n\t* decl.c (have_extern_spec): Remove.\n\t(start_decl): Do not check have_extern_spec.\n\t(start_function): Likewise.\n\t* cp-tree.h (have_extern_spec): Remove.\n\t* parser.c (cp_parser_linkage_specification): Don't set\n\thave_extern_spec.\n\t(cp_parser_init_declarator): Likewise.\n\t(cp_parser_parameter_declaration): Do not treat parameters as\n\twithin the scope of an unbraced linkage specification.\n\tPR c++/27884\n\t* g++.dg/parse/linkage2.C: New test\n\nFrom-SVN: r114727", "tree": {"sha": "a5987a2bada0d0170ebd18a2d701ef8877ae09f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5987a2bada0d0170ebd18a2d701ef8877ae09f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75a829785fbfeedcb435e7aa3b43d96ad44926b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a829785fbfeedcb435e7aa3b43d96ad44926b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a829785fbfeedcb435e7aa3b43d96ad44926b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a829785fbfeedcb435e7aa3b43d96ad44926b0/comments", "author": null, "committer": null, "parents": [{"sha": "04879af33dfc9bee6ef86b01f83e8554f23690a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04879af33dfc9bee6ef86b01f83e8554f23690a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04879af33dfc9bee6ef86b01f83e8554f23690a0"}], "stats": {"total": 58, "additions": 32, "deletions": 26}, "files": [{"sha": "28e17099b2ff812b297bac88f92cf0dba9483178", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=75a829785fbfeedcb435e7aa3b43d96ad44926b0", "patch": "@@ -1,3 +1,16 @@\n+2006-06-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27884\n+\t* decl.c (have_extern_spec): Remove.\n+\t(start_decl): Do not check have_extern_spec.\n+\t(start_function): Likewise.\n+\t* cp-tree.h (have_extern_spec): Remove.\n+\t* parser.c (cp_parser_linkage_specification): Don't set\n+\thave_extern_spec.\n+\t(cp_parser_init_declarator): Likewise.\n+\t(cp_parser_parameter_declaration): Do not treat parameters as\n+\twithin the scope of an unbraced linkage specification.\n+\n 2006-06-15  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27689"}, {"sha": "4e4d8ec7f6241d2c5a046e3908b7301f373f8db5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=75a829785fbfeedcb435e7aa3b43d96ad44926b0", "patch": "@@ -3943,8 +3943,6 @@ extern void initialize_artificial_var\t\t(tree, tree);\n extern tree check_var_type\t\t\t(tree, tree);\n extern tree reshape_init (tree, tree);\n \n-extern bool have_extern_spec;\n-\n /* in decl2.c */\n extern bool check_java_method\t\t\t(tree);\n extern tree build_memfn_type\t\t\t(tree, tree, cp_cv_quals);"}, {"sha": "7db989d82a55bd165213a670165c4aef907161d5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=75a829785fbfeedcb435e7aa3b43d96ad44926b0", "patch": "@@ -240,10 +240,6 @@ enum deprecated_states {\n \n static enum deprecated_states deprecated_state = DEPRECATED_NORMAL;\n \n-/* True if a declaration with an `extern' linkage specifier is being\n-   processed.  */\n-bool have_extern_spec;\n-\n \f\n /* A TREE_LIST of VAR_DECLs.  The TREE_PURPOSE is a RECORD_TYPE or\n    UNION_TYPE; the TREE_VALUE is a VAR_DECL with that type.  At the\n@@ -3814,13 +3810,6 @@ start_decl (const cp_declarator *declarator,\n \n   *pushed_scope_p = NULL_TREE;\n \n-  /* This should only be done once on the top most decl.  */\n-  if (have_extern_spec)\n-    {\n-      declspecs->storage_class = sc_extern;\n-      have_extern_spec = false;\n-    }\n-\n   /* An object declared as __attribute__((deprecated)) suppresses\n      warnings of uses of other deprecated items.  */\n   if (lookup_attribute (\"deprecated\", attributes))\n@@ -10632,13 +10621,6 @@ start_function (cp_decl_specifier_seq *declspecs,\n {\n   tree decl1;\n \n-  if (have_extern_spec)\n-    {\n-      declspecs->storage_class = sc_extern;\n-      /* This should only be done once on the outermost decl.  */\n-      have_extern_spec = false;\n-    }\n-\n   decl1 = grokdeclarator (declarator, declspecs, FUNCDEF, 1, &attrs);\n   /* If the declarator is not suitable for a function definition,\n      cause a syntax error.  */"}, {"sha": "964ab0ee738a1688f4a1222888f12f1cbd85b188", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=75a829785fbfeedcb435e7aa3b43d96ad44926b0", "patch": "@@ -7732,9 +7732,7 @@ cp_parser_linkage_specification (cp_parser* parser)\n       saved_in_unbraced_linkage_specification_p\n \t= parser->in_unbraced_linkage_specification_p;\n       parser->in_unbraced_linkage_specification_p = true;\n-      have_extern_spec = true;\n       cp_parser_declaration (parser);\n-      have_extern_spec = false;\n       parser->in_unbraced_linkage_specification_p\n \t= saved_in_unbraced_linkage_specification_p;\n     }\n@@ -11063,10 +11061,7 @@ cp_parser_init_declarator (cp_parser* parser,\n   if (!member_p)\n     {\n       if (parser->in_unbraced_linkage_specification_p)\n-\t{\n-\t  decl_specifiers->storage_class = sc_extern;\n-\t  have_extern_spec = false;\n-\t}\n+\tdecl_specifiers->storage_class = sc_extern;\n       decl = start_decl (declarator, decl_specifiers,\n \t\t\t is_initialized, attributes, prefix_attributes,\n \t\t\t &pushed_scope);\n@@ -12119,9 +12114,16 @@ cp_parser_parameter_declaration_list (cp_parser* parser, bool *is_error)\n {\n   cp_parameter_declarator *parameters = NULL;\n   cp_parameter_declarator **tail = &parameters;\n+  bool saved_in_unbraced_linkage_specification_p;\n \n   /* Assume all will go well.  */\n   *is_error = false;\n+  /* The special considerations that apply to a function within an\n+     unbraced linkage specifications do not apply to the parameters\n+     to the function.  */\n+  saved_in_unbraced_linkage_specification_p \n+    = parser->in_unbraced_linkage_specification_p;\n+  parser->in_unbraced_linkage_specification_p = false;\n \n   /* Look for more parameters.  */\n   while (true)\n@@ -12200,6 +12202,9 @@ cp_parser_parameter_declaration_list (cp_parser* parser, bool *is_error)\n \t}\n     }\n \n+  parser->in_unbraced_linkage_specification_p\n+    = saved_in_unbraced_linkage_specification_p;\n+\n   return parameters;\n }\n "}, {"sha": "a1eba47192b1e80b9b3531fc29dae860c33c0a05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75a829785fbfeedcb435e7aa3b43d96ad44926b0", "patch": "@@ -1,3 +1,8 @@\n+2006-06-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/27884\n+\t* g++.dg/parse/linkage2.C: New test\n+\n 2006-06-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/27116"}, {"sha": "aa204df2a1003d1895a0be7f088b41ec6eec9a4c", "filename": "gcc/testsuite/g++.dg/parse/linkage2.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flinkage2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a829785fbfeedcb435e7aa3b43d96ad44926b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flinkage2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Flinkage2.C?ref=75a829785fbfeedcb435e7aa3b43d96ad44926b0", "patch": "@@ -0,0 +1,3 @@\n+// PR c++/27884\n+\n+extern \"C\" void foo(register int *my_perl);"}]}