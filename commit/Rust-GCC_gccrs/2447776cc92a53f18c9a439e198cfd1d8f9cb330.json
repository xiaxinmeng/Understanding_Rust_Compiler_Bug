{"sha": "2447776cc92a53f18c9a439e198cfd1d8f9cb330", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ0Nzc3NmNjOTJhNTNmMThjOWE0MzllMTk4Y2ZkMWQ4ZjljYjMzMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-16T11:47:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-16T11:47:26Z"}, "message": "stor-layout.c (finish_bitfield_representative): Fall back to the conservative maximum size if...\n\n2012-03-16  Richard Guenther  <rguenther@suse.de>\n\n\t* stor-layout.c (finish_bitfield_representative): Fall back\n\tto the conservative maximum size if we cannot compute the\n\tsize of the tail padding.\n\n\t* gnat.dg/specs/pack7.ads: New testcase.\n\nFrom-SVN: r185464", "tree": {"sha": "12f156b2aa3208d9537ce80c5796aaa8041091a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f156b2aa3208d9537ce80c5796aaa8041091a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2447776cc92a53f18c9a439e198cfd1d8f9cb330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2447776cc92a53f18c9a439e198cfd1d8f9cb330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2447776cc92a53f18c9a439e198cfd1d8f9cb330", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2447776cc92a53f18c9a439e198cfd1d8f9cb330/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86286a8a969979fabab15c052ad8540e44a61720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86286a8a969979fabab15c052ad8540e44a61720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86286a8a969979fabab15c052ad8540e44a61720"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "c8272188caa1e19f6fda2bb06fb574569cf4f983", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2447776cc92a53f18c9a439e198cfd1d8f9cb330", "patch": "@@ -1,3 +1,9 @@\n+2012-03-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* stor-layout.c (finish_bitfield_representative): Fall back\n+\tto the conservative maximum size if we cannot compute the\n+\tsize of the tail padding.\n+\n 2012-03-16  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/vms/vms.h (TARGET_OS_CPP_BUILTINS): Define"}, {"sha": "98b78865d4d4246d1ce202fd0d209c2639e561aa", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=2447776cc92a53f18c9a439e198cfd1d8f9cb330", "patch": "@@ -1765,6 +1765,9 @@ finish_bitfield_representative (tree repr, tree field)\n \t     - tree_low_cst (DECL_FIELD_BIT_OFFSET (repr), 1)\n \t     + tree_low_cst (DECL_SIZE (field), 1));\n \n+  /* Round up bitsize to multiples of BITS_PER_UNIT.  */\n+  bitsize = (bitsize + BITS_PER_UNIT - 1) & ~(BITS_PER_UNIT - 1);\n+\n   /* Now nothing tells us how to pad out bitsize ...  */\n   nextf = DECL_CHAIN (field);\n   while (nextf && TREE_CODE (nextf) != FIELD_DECL)\n@@ -1787,12 +1790,16 @@ finish_bitfield_representative (tree repr, tree field)\n     {\n       /* ???  If you consider that tail-padding of this struct might be\n          re-used when deriving from it we cannot really do the following\n-\t and thus need to set maxsize to bitsize?  */\n+\t and thus need to set maxsize to bitsize?  Also we cannot\n+\t generally rely on maxsize to fold to an integer constant, so\n+\t use bitsize as fallback for this case.  */\n       tree maxsize = size_diffop (TYPE_SIZE_UNIT (DECL_CONTEXT (field)),\n \t\t\t\t  DECL_FIELD_OFFSET (repr));\n-      gcc_assert (host_integerp (maxsize, 1));\n-      maxbitsize = (tree_low_cst (maxsize, 1) * BITS_PER_UNIT\n-\t\t    - tree_low_cst (DECL_FIELD_BIT_OFFSET (repr), 1));\n+      if (host_integerp (maxsize, 1))\n+\tmaxbitsize = (tree_low_cst (maxsize, 1) * BITS_PER_UNIT\n+\t\t      - tree_low_cst (DECL_FIELD_BIT_OFFSET (repr), 1));\n+      else\n+\tmaxbitsize = bitsize;\n     }\n \n   /* Only if we don't artificially break up the representative in\n@@ -1801,9 +1808,6 @@ finish_bitfield_representative (tree repr, tree field)\n      at byte offset.  */\n   gcc_assert (maxbitsize % BITS_PER_UNIT == 0);\n \n-  /* Round up bitsize to multiples of BITS_PER_UNIT.  */\n-  bitsize = (bitsize + BITS_PER_UNIT - 1) & ~(BITS_PER_UNIT - 1);\n-\n   /* Find the smallest nice mode to use.  */\n   for (mode = GET_CLASS_NARROWEST_MODE (MODE_INT); mode != VOIDmode;\n        mode = GET_MODE_WIDER_MODE (mode))"}, {"sha": "eddbface0f9845dffe864294b58ed67a20558ebd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2447776cc92a53f18c9a439e198cfd1d8f9cb330", "patch": "@@ -1,3 +1,7 @@\n+2012-03-16  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gnat.dg/specs/pack7.ads: New testcase.\n+\n 2012-03-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/52568"}, {"sha": "8a1250a60b96eee74fee1579db759b8b7de865ac", "filename": "gcc/testsuite/gnat.dg/specs/pack7.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2447776cc92a53f18c9a439e198cfd1d8f9cb330/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpack7.ads?ref=2447776cc92a53f18c9a439e198cfd1d8f9cb330", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+\n+package Pack7 is\n+\n+   type R (D : Natural) is record\n+      S : String (1 .. D);\n+      N : Natural;\n+      B : Boolean;\n+   end record;\n+   for R'Alignment use 4;\n+   pragma Pack (R);\n+\n+end Pack7;"}]}