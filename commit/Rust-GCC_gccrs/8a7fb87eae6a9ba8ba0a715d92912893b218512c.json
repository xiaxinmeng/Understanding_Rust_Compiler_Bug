{"sha": "8a7fb87eae6a9ba8ba0a715d92912893b218512c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE3ZmI4N2VhZTZhOWJhOGJhMGE3MTVkOTI5MTI4OTNiMjE4NTEyYw==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-10-15T20:40:31Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-10-15T20:40:31Z"}, "message": "re PR libstdc++/63500 (bug in debug version of std::make_move_iterator?)\n\n2014-10-15  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/63500\n\t* include/debug/functions.h (__foreign_iterator_aux2): Do not check for\n\tforeign iterators if input iterators returns rvalue reference.\n\t* testsuite/23_containers/vector/63500.cc: New.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r216286", "tree": {"sha": "33b5bedc66d40f1b09f6963f7781b01e820cda16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33b5bedc66d40f1b09f6963f7781b01e820cda16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a7fb87eae6a9ba8ba0a715d92912893b218512c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7fb87eae6a9ba8ba0a715d92912893b218512c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a7fb87eae6a9ba8ba0a715d92912893b218512c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7fb87eae6a9ba8ba0a715d92912893b218512c/comments", "author": null, "committer": null, "parents": [{"sha": "e39423c06daa6d37098d1000174587b10ce695a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e39423c06daa6d37098d1000174587b10ce695a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e39423c06daa6d37098d1000174587b10ce695a3"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "89b86eb1b208a720e71e740ac0459c46e72be90c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7fb87eae6a9ba8ba0a715d92912893b218512c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7fb87eae6a9ba8ba0a715d92912893b218512c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8a7fb87eae6a9ba8ba0a715d92912893b218512c", "patch": "@@ -1,3 +1,11 @@\n+2014-10-15  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/63500\n+\t* include/debug/functions.h (__foreign_iterator_aux2): Do not check for\n+\tforeign iterators if input iterators returns rvalue reference.\n+\t* testsuite/23_containers/vector/63500.cc: New.\n+\n 2014-10-15  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/21_strings/basic_string/capacity/char/shrink_to_fit.cc:"}, {"sha": "0e7f1b7855cb71cdbabd263ce3ee549388bb372a", "filename": "libstdc++-v3/include/debug/functions.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7fb87eae6a9ba8ba0a715d92912893b218512c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7fb87eae6a9ba8ba0a715d92912893b218512c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Ffunctions.h?ref=8a7fb87eae6a9ba8ba0a715d92912893b218512c", "patch": "@@ -34,7 +34,7 @@\n \t\t\t\t\t  // _Iter_base\n #include <bits/cpp_type_traits.h>\t  // for __is_integer\n #include <bits/move.h>                    // for __addressof and addressof\n-# include <bits/stl_function.h>\t\t  // for less\n+#include <bits/stl_function.h>\t\t  // for less\n #if __cplusplus >= 201103L\n # include <type_traits>\t\t\t  // for is_lvalue_reference and __and_\n #endif\n@@ -252,8 +252,16 @@ namespace __gnu_debug\n \t\t\t    const _InputIterator& __other,\n \t\t\t    const _InputIterator& __other_end)\n     {\n-      return __foreign_iterator_aux3(__it, __other, __other_end,\n-\t\t\t\t     _Is_contiguous_sequence<_Sequence>());\n+#if __cplusplus < 201103L\n+      typedef _Is_contiguous_sequence<_Sequence> __tag;\n+#else\n+      using __lvalref = std::is_lvalue_reference<\n+\ttypename std::iterator_traits<_InputIterator>::reference>;\n+      using __contiguous = _Is_contiguous_sequence<_Sequence>;\n+      using __tag = typename std::conditional<__lvalref::value, __contiguous,\n+\t\t\t\t\t      std::__false_type>::type;\n+#endif\n+      return __foreign_iterator_aux3(__it, __other, __other_end, __tag());\n     }\n \n   /* Handle the case where we aren't really inserting a range after all */"}, {"sha": "99fc9f4007fd42bb0fbf3df6f02eb3775b59cf5b", "filename": "libstdc++-v3/testsuite/23_containers/vector/63500.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7fb87eae6a9ba8ba0a715d92912893b218512c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F63500.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7fb87eae6a9ba8ba0a715d92912893b218512c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F63500.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F63500.cc?ref=8a7fb87eae6a9ba8ba0a715d92912893b218512c", "patch": "@@ -0,0 +1,39 @@\n+// -*- C++ -*-\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <memory>\n+#include <iterator>\n+#include <debug/vector>\n+\n+class Foo\n+{};\n+\n+void\n+test01()\n+{\n+  __gnu_debug::vector<std::unique_ptr<Foo>> v;\n+  __gnu_debug::vector<std::unique_ptr<Foo>> w;\n+\n+  v.insert(end(v),\n+\t   make_move_iterator(begin(w)),\n+\t   make_move_iterator(end(w)));\n+}"}]}