{"sha": "824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0ZTU3Y2JmNDExNWRiNWRmZTkwZWQ0OWZmOTgyOGNiY2MxNGIwMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-05-29T17:30:36Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-05-29T17:30:36Z"}, "message": "re PR c++/89875 (invalid typeof reference to a member of an incomplete struct accepted at function scope)\n\n/cp\n2019-05-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/89875\n\t* parser.c (cp_parser_sizeof_operand): When the type-id production\n\tdid not work out commit to the tentative parse.\n\n/testsuite\n2019-05-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/89875\n\t* g++.dg/cpp0x/decltype-pr66548.C: Remove xfail.\n\t* g++.dg/template/sizeof-template-argument.C: Adjust expected error.\n\nFrom-SVN: r271746", "tree": {"sha": "812a9aa98261dbc3fcc564aae8e28a74a2afaf48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/812a9aa98261dbc3fcc564aae8e28a74a2afaf48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/comments", "author": null, "committer": null, "parents": [{"sha": "65539b1ef311a804e2cc651a58591f79aa6f6638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65539b1ef311a804e2cc651a58591f79aa6f6638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65539b1ef311a804e2cc651a58591f79aa6f6638"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "ee7eab080cbc87d2211c58bd3716a29750c5660f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "patch": "@@ -1,3 +1,9 @@\n+2019-05-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/89875\n+\t* parser.c (cp_parser_sizeof_operand): When the type-id production\n+\tdid not work out commit to the tentative parse.\n+\n 2019-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tP1091R3 - Extending structured bindings to be more like var decls"}, {"sha": "1de35da83ec18122266234ae36123b183bba9242", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "patch": "@@ -28942,6 +28942,8 @@ cp_parser_sizeof_operand (cp_parser* parser, enum rid keyword)\n     {\n       tree type = NULL_TREE;\n \n+      tentative_firewall firewall (parser);\n+\n       /* We can't be sure yet whether we're looking at a type-id or an\n \t expression.  */\n       cp_parser_parse_tentatively (parser);\n@@ -28969,11 +28971,15 @@ cp_parser_sizeof_operand (cp_parser* parser, enum rid keyword)\n       /* If all went well, then we're done.  */\n       if (cp_parser_parse_definitely (parser))\n \texpr = type;\n-    }\n+      else\n+\t{\n+\t  /* Commit to the tentative_firewall so we get syntax errors.  */\n+\t  cp_parser_commit_to_tentative_parse (parser);\n \n-  /* If the type-id production did not work out, then we must be\n-     looking at the unary-expression production.  */\n-  if (!expr)\n+\t  expr = cp_parser_unary_expression (parser);\n+\t}\n+    }\n+  else\n     expr = cp_parser_unary_expression (parser);\n \n   /* Go back to evaluating expressions.  */"}, {"sha": "19971c9a1ba308bd47d1e7557dd100f17be2f73a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "patch": "@@ -1,7 +1,13 @@\n+2019-05-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/89875\n+\t* g++.dg/cpp0x/decltype-pr66548.C: Remove xfail.\n+\t* g++.dg/template/sizeof-template-argument.C: Adjust expected error.\n+\n 2019-05-29  Alejandro Martinez  <alejandro.martinezvicente@arm.com>\n \n-\t* gcc.target/aarch64/sve2/aarch64-sve2.exp: New file, regression driver\n-\tfor AArch64 SVE2.\n+\t* gcc.target/aarch64/sve2/aarch64-sve2.exp: New file, regression\n+\tdriver for AArch64 SVE2.\n \t* gcc.target/aarch64/sve2/average_1.c: New test.\n \t* lib/target-supports.exp (check_effective_target_aarch64_sve2): New\n \thelper."}, {"sha": "3757b671fdd55f052a614d7e9e28497fee3ed5ba", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-pr66548.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-pr66548.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-pr66548.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-pr66548.C?ref=824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "patch": "@@ -11,7 +11,7 @@ struct Meow {};\n \n void f ()\n {\n-  decltype (Meow.purr ()) d;   // { dg-error \"expected primary-expression\" \"pr89875\" { xfail c++98_only } }\n+  decltype (Meow.purr ()) d;   // { dg-error \"expected primary-expression\" }\n   (void)&d;\n }\n "}, {"sha": "2bfff6d9a18a4495a8cffb33da8398dc2d428fd4", "filename": "gcc/testsuite/g++.dg/template/sizeof-template-argument.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof-template-argument.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/824e57cbf4115db5dfe90ed49ff9828cbcc14b02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof-template-argument.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof-template-argument.C?ref=824e57cbf4115db5dfe90ed49ff9828cbcc14b02", "patch": "@@ -3,9 +3,9 @@\n \n template<int> struct A {};\n \n-template<typename> struct B : A <sizeof(=)> {}; /* { dg-error \"template argument\" } */\n+template<typename> struct B : A <sizeof(=)> {}; /* { dg-error \"expected primary-expression\" } */\n \n-template<typename> struct C : A <sizeof(=)> {}; /* { dg-error \"template argument\" } */\n+template<typename> struct C : A <sizeof(=)> {}; /* { dg-error \"expected primary-expression\" } */\n \n int a;\n "}]}