{"sha": "1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFjMjJlNzYyZTJhNWYyYzZkNDhhZmJlMTYzOTNkMjA0ZDljYWY0Nw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-12-02T01:28:26Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-12-02T01:28:26Z"}, "message": "re PR go/65717 (64-bit runtime FAILs with 32-bit compiler)\n\n\tPR go/65717\n    compiler: Fix array reflection when len doesn't fit in unsigned long.\n    \n    This comes up when using a 32-bit host and a 64-bit target.\n    \n    Fixes https://gcc.gnu.org/PR65717.\n    \n    Reviewed-on: https://go-review.googlesource.com/17330\n\nFrom-SVN: r231142", "tree": {"sha": "2d6eaf29c9cfc6c82d9577f10c8009d3959b537f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d6eaf29c9cfc6c82d9577f10c8009d3959b537f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac22e762e2a5f2c6d48afbe16393d204d9caf47/comments", "author": null, "committer": null, "parents": [{"sha": "867038d7d37e44283414d32c5c4707530342e434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867038d7d37e44283414d32c5c4707530342e434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867038d7d37e44283414d32c5c4707530342e434"}], "stats": {"total": 48, "additions": 23, "deletions": 25}, "files": [{"sha": "b4c90ef8892fae5b0931099b37967b5707c18ef1", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ac22e762e2a5f2c6d48afbe16393d204d9caf47/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ac22e762e2a5f2c6d48afbe16393d204d9caf47/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "patch": "@@ -1,4 +1,4 @@\n-81eb6a3f425b2158c67ee32c0cc973a72ce9d6be\n+c375f3bf470f94220149b486c947bb3eb57cde7d\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "802a17dc0e381aa41ad562058f35d5db3793c27d", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 22, "deletions": 24, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ac22e762e2a5f2c6d48afbe16393d204d9caf47/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ac22e762e2a5f2c6d48afbe16393d204d9caf47/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=1ac22e762e2a5f2c6d48afbe16393d204d9caf47", "patch": "@@ -6398,22 +6398,21 @@ Array_type::do_reflection(Gogo* gogo, std::string* ret) const\n   if (this->length_ != NULL)\n     {\n       Numeric_constant nc;\n-      unsigned long val;\n-      if (!this->length_->numeric_constant_value(&nc)\n-\t  || nc.to_unsigned_long(&val) != Numeric_constant::NC_UL_VALID)\n+      if (!this->length_->numeric_constant_value(&nc))\n \t{\n-\t  if (!this->issued_length_error_)\n-\t    {\n-\t      error_at(this->length_->location(), \"invalid array length\");\n-\t      this->issued_length_error_ = true;\n-\t    }\n+\t  go_assert(saw_errors());\n+\t  return;\n \t}\n-      else\n+      mpz_t val;\n+      if (!nc.to_int(&val))\n \t{\n-\t  char buf[50];\n-\t  snprintf(buf, sizeof buf, \"%lu\", val);\n-\t  ret->append(buf);\n+\t  go_assert(saw_errors());\n+\t  return;\n \t}\n+      char* s = mpz_get_str(NULL, 10, val);\n+      ret->append(s);\n+      free(s);\n+      mpz_clear(val);\n     }\n   ret->push_back(']');\n \n@@ -6544,22 +6543,21 @@ Array_type::do_mangled_name(Gogo* gogo, std::string* ret) const\n   if (this->length_ != NULL)\n     {\n       Numeric_constant nc;\n-      unsigned long val;\n-      if (!this->length_->numeric_constant_value(&nc)\n-\t  || nc.to_unsigned_long(&val) != Numeric_constant::NC_UL_VALID)\n+      if (!this->length_->numeric_constant_value(&nc))\n \t{\n-\t  if (!this->issued_length_error_)\n-\t    {\n-\t      error_at(this->length_->location(), \"invalid array length\");\n-\t      this->issued_length_error_ = true;\n-\t    }\n+\t  go_assert(saw_errors());\n+\t  return;\n \t}\n-      else\n+      mpz_t val;\n+      if (!nc.to_int(&val))\n \t{\n-\t  char buf[50];\n-\t  snprintf(buf, sizeof buf, \"%lu\", val);\n-\t  ret->append(buf);\n+\t  go_assert(saw_errors());\n+\t  return;\n \t}\n+      char *s = mpz_get_str(NULL, 10, val);\n+      ret->append(s);\n+      free(s);\n+      mpz_clear(val);\n     }\n   ret->push_back('e');\n }"}]}