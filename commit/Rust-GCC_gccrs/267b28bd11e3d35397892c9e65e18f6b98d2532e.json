{"sha": "267b28bd11e3d35397892c9e65e18f6b98d2532e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY3YjI4YmQxMWUzZDM1Mzk3ODkyYzllNjVlMThmNmI5OGQyNTMyZQ==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2003-04-10T19:39:07Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2003-04-10T19:39:07Z"}, "message": "expr.c (expand_assignment): Extend offset_rtx with convert_to_mode not with convert_memory_address.\n\n\t* expr.c (expand_assignment): Extend offset_rtx with convert_to_mode\n\tnot with convert_memory_address.\n\t(store_constructor): Ditto, and same for copy_size_rtx.\n\t(expand_expr): Ditto.\n\nFrom-SVN: r65433", "tree": {"sha": "25354532e47b60654715c8a2a525143c55d42df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25354532e47b60654715c8a2a525143c55d42df0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/267b28bd11e3d35397892c9e65e18f6b98d2532e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267b28bd11e3d35397892c9e65e18f6b98d2532e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/267b28bd11e3d35397892c9e65e18f6b98d2532e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267b28bd11e3d35397892c9e65e18f6b98d2532e/comments", "author": null, "committer": null, "parents": [{"sha": "1e099144a514d5b6211f5537471b6390f7771627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e099144a514d5b6211f5537471b6390f7771627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e099144a514d5b6211f5537471b6390f7771627"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "dd2d12a43dad9027326cb9d12ee102ada1b0c37e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267b28bd11e3d35397892c9e65e18f6b98d2532e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267b28bd11e3d35397892c9e65e18f6b98d2532e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=267b28bd11e3d35397892c9e65e18f6b98d2532e", "patch": "@@ -1,3 +1,10 @@\n+2003-04-10  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* expr.c (expand_assignment): Extend offset_rtx with convert_to_mode\n+\tnot with convert_memory_address.\n+\t(store_constructor): Ditto, and same for copy_size_rtx.\n+\t(expand_expr): Ditto.\n+\n 2003-04-10  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/i386/i386.c (ix86_ms_bitfield_layout_p): Fix formatting."}, {"sha": "a2b547e47a5e7fcd3cf915dad6d57e125813223a", "filename": "gcc/expr.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/267b28bd11e3d35397892c9e65e18f6b98d2532e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/267b28bd11e3d35397892c9e65e18f6b98d2532e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=267b28bd11e3d35397892c9e65e18f6b98d2532e", "patch": "@@ -4122,7 +4122,7 @@ expand_assignment (to, from, want_value, suggest_reg)\n \n #ifdef POINTERS_EXTEND_UNSIGNED\n \t  if (GET_MODE (offset_rtx) != Pmode)\n-\t    offset_rtx = convert_memory_address (Pmode, offset_rtx);\n+\t    offset_rtx = convert_to_mode (Pmode, offset_rtx, 0);\n #else\n \t  if (GET_MODE (offset_rtx) != ptr_mode)\n \t    offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n@@ -4630,7 +4630,8 @@ store_expr (exp, target, want_value)\n \t      rtx label = 0;\n \n \t      /* Copy that much.  */\n-\t      copy_size_rtx = convert_to_mode (ptr_mode, copy_size_rtx, 0);\n+\t      copy_size_rtx = convert_to_mode (ptr_mode, copy_size_rtx,\n+\t\t\t\t\t       TREE_UNSIGNED (sizetype));\n \t      emit_block_move (target, temp, copy_size_rtx,\n \t\t\t       (want_value & 2\n \t\t\t\t? BLOCK_OP_CALL_PARM : BLOCK_OP_NORMAL));\n@@ -4651,8 +4652,8 @@ store_expr (exp, target, want_value)\n \n #ifdef POINTERS_EXTEND_UNSIGNED\n \t\t  if (GET_MODE (copy_size_rtx) != Pmode)\n-\t\t    copy_size_rtx = convert_memory_address (Pmode,\n-\t\t\t\t\t\t\t    copy_size_rtx);\n+\t\t    copy_size_rtx = convert_to_mode (Pmode, copy_size_rtx,\n+\t\t\t\t\t\t     TREE_UNSIGNED (sizetype));\n #endif\n \n \t\t  target = offset_address (target, copy_size_rtx,\n@@ -4957,7 +4958,7 @@ store_constructor (exp, target, cleared, size)\n \n #ifdef POINTERS_EXTEND_UNSIGNED\n \t      if (GET_MODE (offset_rtx) != Pmode)\n-\t\toffset_rtx = convert_memory_address (Pmode, offset_rtx);\n+\t\toffset_rtx = convert_to_mode (Pmode, offset_rtx, 0);\n #else\n \t      if (GET_MODE (offset_rtx) != ptr_mode)\n \t\toffset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n@@ -7448,7 +7449,7 @@ expand_expr (exp, target, tmode, modifier)\n \n #ifdef POINTERS_EXTEND_UNSIGNED\n \t    if (GET_MODE (offset_rtx) != Pmode)\n-\t      offset_rtx = convert_memory_address (Pmode, offset_rtx);\n+\t      offset_rtx = convert_to_mode (Pmode, offset_rtx, 0);\n #else\n \t    if (GET_MODE (offset_rtx) != ptr_mode)\n \t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);"}]}