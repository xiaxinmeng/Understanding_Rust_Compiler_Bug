{"sha": "1347292b885d50b86ca6eb5abe9583eac53911e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM0NzI5MmI4ODVkNTBiODZjYTZlYjVhYmU5NTgzZWFjNTM5MTFlNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-09-28T23:00:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-09-28T23:00:13Z"}, "message": "(force_to_mode, LSHIFTRT case): Avoid shifts larger\nthan HOST_BITS_PER_WIDE_INT.\n\nFrom-SVN: r5516", "tree": {"sha": "1e0def9ccb38fef84e7248e32b64d18df6be6d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0def9ccb38fef84e7248e32b64d18df6be6d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1347292b885d50b86ca6eb5abe9583eac53911e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1347292b885d50b86ca6eb5abe9583eac53911e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1347292b885d50b86ca6eb5abe9583eac53911e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1347292b885d50b86ca6eb5abe9583eac53911e5/comments", "author": null, "committer": null, "parents": [{"sha": "b5e962556704ca9d18aeaea01ee4cb41bebfb318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e962556704ca9d18aeaea01ee4cb41bebfb318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e962556704ca9d18aeaea01ee4cb41bebfb318"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "45d572a7addcfd35f5e3b5e3d926a26716a892e2", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1347292b885d50b86ca6eb5abe9583eac53911e5/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1347292b885d50b86ca6eb5abe9583eac53911e5/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=1347292b885d50b86ca6eb5abe9583eac53911e5", "patch": "@@ -5771,10 +5771,12 @@ force_to_mode (x, mode, mask, reg)\n       break;\n \n     case LSHIFTRT:\n-      /* Here we can only do something if the shift count is a constant and\n-\t we can do arithmetic in OP_MODE.  */\n+      /* Here we can only do something if the shift count is a constant,\n+\t this shift constant is valid for the host, and we can do arithmetic\n+\t in OP_MODE.  */\n \n       if (GET_CODE (XEXP (x, 1)) == CONST_INT\n+\t  && INTVAL (XEXP (x, 1)) < HOST_BITS_PER_WIDE_INT\n \t  && GET_MODE_BITSIZE (op_mode) <= HOST_BITS_PER_WIDE_INT)\n \t{\n \t  rtx inner = XEXP (x, 0);"}]}