{"sha": "da6c9e40179629b60f3559b42eca8fa95f8a2a3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2YzllNDAxNzk2MjliNjBmMzU1OWI0MmVjYThmYTk1ZjhhMmEzYQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-09-04T17:57:52Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-09-04T17:57:52Z"}, "message": "[multiple changes]\n\n2007-09-04  Andrew Haley  <aph@redhat.com>\n\n\tPR java/27908\n\t* testsuite/libjava.lang/PR27908.java\n\t({run1,run2,run3}.isRunning): New Method.\n\t(main): Fix race condition.\n\n2007-08-29  Andrew Haley  <aph@redhat.com>\n\n\t* gnu/classpath/natVMStackWalker.cc (VMStackWalker::getCallingClass):\n\tMake sure we're not sibcalled.\n\t(GET_CALLING_CLASS): Define for ARM EABI.\n\n2007-08-22  Andrew Haley  <aph@redhat.com>\n\n\t* configure.host (BACKTRACESPEC): Add arm*-linux*.\n\n2007-08-22  Andrew Haley  <aph@redhat.com>\n\n\t* configure.ac (LIBSTDCXXSPEC): New.\n\t* configure.host: Add arm*-linux* to pthread test.\n\t* configure.ac (LIBGCJTESTSPEC): Add path to libstdc++ for ARM\n\tEABI.\n\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Use\n\t-fexceptions for ARM EABI.\n\t* testsuite/lib/libjava.exp (libjava_arguments): Add libgcj-test.spec.\n\t(libjava_invoke): Log the invocation.\n\n2007-08-15  Andrew Haley  <aph@redhat.com>\n\n\t* configure.ac (extra_ldflags): Define.\n\t* Makefile.am: Use extra_ldflags for all executables.\n\n2007-08-14  Andrew Haley  <aph@redhat.com>\n\n\t* sysdep/arm/backtrace.h: Remove stubs for _Unwind_GetIPInfo,\n\t_Unwind_GetRegionStart, and _Unwind_Backtrace.\n\n2007-07-27  Andrew Haley  <aph@redhat.com>\n\n\t* gnu/classpath/natVMStackWalker.cc (GET_CALLING_CLASS): Stub for\n\tARM EABI.\n\t* exception.cc (get_exception_header_from_ue): New.\n\t(get_ttype_entry): ARM EABI version.\n\t(PERSONALITY_FUNCTION): Add ARM EABI code.\n\t* sysdep/arm/backtrace.h: New file.\n\t* stacktrace.cc (_URC_NORMAL_STOP): New.\n\t* configure.ac (extra_ldflags_libjava): Add libsupc++.la for ARM\n\tEABI.\n\t* configure.host (BACKTRACESPEC): Add arm/backtrace.h.\n\nFrom-SVN: r128097", "tree": {"sha": "eab325f404f770db7712409ac043570f351b2ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eab325f404f770db7712409ac043570f351b2ba8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da6c9e40179629b60f3559b42eca8fa95f8a2a3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6c9e40179629b60f3559b42eca8fa95f8a2a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6c9e40179629b60f3559b42eca8fa95f8a2a3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6c9e40179629b60f3559b42eca8fa95f8a2a3a/comments", "author": null, "committer": null, "parents": [{"sha": "6ba73441117b4f2eda9e84eeadd4df97ab3a8f08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba73441117b4f2eda9e84eeadd4df97ab3a8f08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba73441117b4f2eda9e84eeadd4df97ab3a8f08"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "3d6f0f51d28e765c509921d4c738907906f444f8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6c9e40179629b60f3559b42eca8fa95f8a2a3a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6c9e40179629b60f3559b42eca8fa95f8a2a3a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=da6c9e40179629b60f3559b42eca8fa95f8a2a3a", "patch": "@@ -1,3 +1,54 @@\n+2007-09-04  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/27908\n+\t* testsuite/libjava.lang/PR27908.java\n+\t({run1,run2,run3}.isRunning): New Method.\n+\t(main): Fix race condition.\n+\n+2007-08-29  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc (VMStackWalker::getCallingClass):\n+\tMake sure we're not sibcalled.\n+\t(GET_CALLING_CLASS): Define for ARM EABI.\n+\n+2007-08-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.host (BACKTRACESPEC): Add arm*-linux*.\n+\n+2007-08-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.ac (LIBSTDCXXSPEC): New.\n+\t* configure.host: Add arm*-linux* to pthread test.\n+\t* configure.ac (LIBGCJTESTSPEC): Add path to libstdc++ for ARM\n+\tEABI.\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Use\n+\t-fexceptions for ARM EABI.\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Add libgcj-test.spec.\n+\t(libjava_invoke): Log the invocation.\n+\n+2007-08-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.ac (extra_ldflags): Define.\n+\t* Makefile.am: Use extra_ldflags for all executables.\n+\n+2007-08-14  Andrew Haley  <aph@redhat.com>\n+\n+\t* sysdep/arm/backtrace.h: Remove stubs for _Unwind_GetIPInfo,\n+\t_Unwind_GetRegionStart, and _Unwind_Backtrace.\n+\n+2007-07-27  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc (GET_CALLING_CLASS): Stub for\n+\tARM EABI.\n+\t* exception.cc (get_exception_header_from_ue): New.\n+\t(get_ttype_entry): ARM EABI version.\n+\t(PERSONALITY_FUNCTION): Add ARM EABI code.\n+\t* sysdep/arm/backtrace.h: New file.\n+\t* stacktrace.cc (_URC_NORMAL_STOP): New.\n+\t* configure.ac (extra_ldflags_libjava): Add libsupc++.la for ARM\n+\tEABI.\n+\t* configure.host (BACKTRACESPEC): Add arm/backtrace.h.\n+\n 2007-08-31  Matthias Klose  <doko@ubuntu.com>\n \n \t* classpath/lib/java/util/EnumSet*.class: Regenerate"}]}