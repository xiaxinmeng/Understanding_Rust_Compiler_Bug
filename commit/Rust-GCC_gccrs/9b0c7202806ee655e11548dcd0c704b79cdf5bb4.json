{"sha": "9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwYzcyMDI4MDZlZTY1NWUxMTU0OGRjZDBjNzA0Yjc5Y2RmNWJiNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-09-29T09:04:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-09-29T09:04:03Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r179338", "tree": {"sha": "5a79c6240d87327c85351d493105e62c76e3fc2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a79c6240d87327c85351d493105e62c76e3fc2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0c7202806ee655e11548dcd0c704b79cdf5bb4/comments", "author": null, "committer": null, "parents": [{"sha": "580bd5005b4ef75670c5c64fe1026982114d08f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580bd5005b4ef75670c5c64fe1026982114d08f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580bd5005b4ef75670c5c64fe1026982114d08f0"}], "stats": {"total": 42, "additions": 19, "deletions": 23}, "files": [{"sha": "972e1f9e337ff3308e5826e34229a0a54f3a9b4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0c7202806ee655e11548dcd0c704b79cdf5bb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0c7202806ee655e11548dcd0c704b79cdf5bb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "patch": "@@ -72,8 +72,7 @@\n \t* configure: Regenerated.\n \t* config/i386/winnt.c (i386_pe_asm_named_section): Emit\n \tnew section flag \"e\" for excluded sections, if supported.\n-\tOtherwise we mark section withc SECTION_EXCLUDE flag\n-\tas never-load.\n+\tOtherwise we mark section withc SECTION_EXCLUDE flag as never-load.\n \n 2011-09-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -88,8 +87,7 @@\n 2011-09-27  Sriraman Tallam  <tmsriram@google.com>\n \n \t* output.h (SECTION_EXCLUDE): New macro.\n-\t* varasm.c (default_elf_asm_named_section): Check for\n-\tSECTION_EXCLUDE.\n+\t* varasm.c (default_elf_asm_named_section): Check for SECTION_EXCLUDE.\n \n 2011-09-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n@@ -114,8 +112,7 @@\n 2011-09-27  Jeff Law  <law@redhat.com>\n \n \t* ifcvt.c (cheap_bb_rtx_cost_p): Add SCALE argument.  Scale\n-\tnon-jumping insns by REG_BR_PROB_BASE and the maximum cost\n-\tby SCALE.\n+\tnon-jumping insns by REG_BR_PROB_BASE and the maximum cost by SCALE.\n \t(find_if_case_1): Use the probability of the THEN clause when\n \tdetermining if speculation is profitable.\n \t(find_if_case_2): Similarly for the ELSE clause.\n@@ -176,8 +173,8 @@\n \t* tree-ssa-pre.c (execute_pre): Use tail_merge_optimize.\n \t* Makefile.in (OBJS-common): Add tree-ssa-tail-merge.o.\n \t(tree-ssa-tail-merge.o): New rule.\n-\t* opts.c (default_options_table): Set OPT_ftree_tail_merge by default at\n-\tOPT_LEVELS_2_PLUS.\n+\t* opts.c (default_options_table): Set OPT_ftree_tail_merge by\n+\tdefault at OPT_LEVELS_2_PLUS.\n \t* tree-ssa-sccvn.c (vn_valueize): Move to ...\n \t* tree-ssa-sccvn.h (vn_valueize): Here.\n \t* timevar.def (TV_TREE_TAIL_MERGE): New timevar.\n@@ -194,8 +191,9 @@\n \n 2011-09-27  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa-inline-analysis.c (eliminated_by_inlining_prob): Handle parameters\n-\tpassed by reference; handle loads from non-SSA scalars and update comments.\n+\t* ipa-inline-analysis.c (eliminated_by_inlining_prob): Handle\n+\tparameters passed by reference; handle loads from non-SSA scalars\n+\tand update comments.\n \n 2011-09-27  Bernd Schmidt  <bernds@codesourcery.com>\n \n@@ -271,8 +269,8 @@\n \t* rtl.h (const_tiny_rtx): Change into array of 4 x MAX_MACHINE_MODE\n \tfrom 3 x MAX_MACHINE_MODE.\n \t(CONSTM1_RTX): Define.\n-\t* emit-rtl.c (const_tiny_rtx): Change into array of 4 x MAX_MACHINE_MODE\n-        from 3 x MAX_MACHINE_MODE.\n+\t* emit-rtl.c (const_tiny_rtx): Change into array of\n+\t4 x MAX_MACHINE_MODE from 3 x MAX_MACHINE_MODE.\n \t(gen_rtx_CONST_VECTOR): Use CONSTM1_RTX if all inner constants are\n \tCONSTM1_RTX.\n \t(init_emit_once): Initialize CONSTM1_RTX for MODE_INT and\n@@ -466,8 +464,7 @@\n \t(REG_CLASS_CONTENTS): Add GSR to ALL_REGS.\n \t(REG_ALLOC_ORDER, REG_LEAF_ALLOC_ORDER): Add GSR to the end.\n \t(REGISTER_NAMES): Add \"%gsr\".\n-\t* config/sparc/sparc.md (UNSPEC_ALIGNADDR, UNSPEC_ALIGNADDRL):\n-\tDelete.\n+\t* config/sparc/sparc.md (UNSPEC_ALIGNADDR, UNSPEC_ALIGNADDRL): Delete.\n \t(UNSPEC_WRGSR): New unspec.\n \t(GSR_REG): New constant.\n \t(type): Add new insn type 'gsr'.\n@@ -509,8 +506,8 @@\n \t(evaluate_conditions_for_edge): Handle change probabilities.\n \t(inline_edge_duplication_hook): Copy param summaries.\n \t(inline_edge_removal_hook): Free param summaries.\n-\t(dump_inline_edge_summary): Fix dumping of indirect edges and callee sizes;\n-\tdump param summaries.\n+\t(dump_inline_edge_summary): Fix dumping of indirect edges and callee\n+\tsizes; dump param summaries.\n \t(will_be_nonconstant_predicate): Use CHANGED predicate.\n \t(record_modified_bb_info): New structure.\n \t(record_modified): New function.\n@@ -523,8 +520,8 @@\n \t(remap_edge_change_prob): New function.\n \t(remap_edge_summaries): Rename from ...; use remap_edge_change_prob.\n \t(remap_edge_predicates): ... this one.\n-\t(inline_merge_summary): Remap edge summaries; handle predicate probabilities;\n-\tremove param summaries after we are done.\n+\t(inline_merge_summary): Remap edge summaries; handle predicate\n+\tprobabilities; remove param summaries after we are done.\n \t(do_estimate_edge_time): Update.\n \t(do_estimate_edge_growth): Update.\n \t(read_inline_edge_summary): Read param info.\n@@ -538,7 +535,7 @@\n \t* config/i386/sse.md (i128): New mode_attr.\n \t(vec_extract_hi_<mode>, vec_extract_hi_<mode>,\n \tavx_vbroadcastf128_<mode>, *avx_vperm2f128<mode>_full,\n-\t*avx_vperm2f128<mode>_nozero, vec_set_lo_<mode>, \n+\t*avx_vperm2f128<mode>_nozero, vec_set_lo_<mode>,\n \tvec_set_hi_<mode>, *vec_concat<mode>_avx): Use <i128> in the\n \tpatterns, use \"<sseinsnmode>\" for \"mode\" attribute.\n \t(vec_extract_hi_v16hi, vec_extract_hi_v32qi, vec_set_lo_v16hi,\n@@ -621,8 +618,7 @@\n \n 2011-09-23  Bin Cheng  <bin.cheng@arm.com>\n \n-\t* config/arm/bpabi.h (BE8_LINK_SPEC): Add cortex-m arch \n-\tand processors.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Add cortex-m arch and processors.\n \n 2011-09-22  Maxim Kuvyrkov  <maxim@codesourcery.com>\n "}, {"sha": "6f201c437b9384cd6bc2be5bb72ed5ce59a81a09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0c7202806ee655e11548dcd0c704b79cdf5bb4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0c7202806ee655e11548dcd0c704b79cdf5bb4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9b0c7202806ee655e11548dcd0c704b79cdf5bb4", "patch": "@@ -57,8 +57,8 @@\n 2011-09-27  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/49463\n-\t* gcc.c-torture/execute/builtins/strstr-asm-lib.c\n-\t(my_strstr): Mark used.\n+\t* gcc.c-torture/execute/builtins/strstr-asm-lib.c (my_strstr):\n+\tMark used.\n \n 2011-09-27  Jakub Jelinek  <jakub@redhat.com>\n "}]}