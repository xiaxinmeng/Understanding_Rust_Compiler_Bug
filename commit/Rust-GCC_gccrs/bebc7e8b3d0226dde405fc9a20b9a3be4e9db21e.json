{"sha": "bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViYzdlOGIzZDAyMjZkZGU0MDVmYzlhMjBiOWEzYmU0ZTlkYjIxZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-02-01T00:11:30Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-02-01T00:11:30Z"}, "message": "c-lex.c (yyparse): Call debug_hooks->start_source_file for the primary source file...\n\n\t* c-lex.c (yyparse): Call debug_hooks->start_source_file for\n\tthe primary source file; this has not been done yet.\n\t* c-decl.c (c_expand_body): Reset input_filename from\n\tDECL_SOURCE_FILE (fndecl) before calling init_function_start.\n\nFrom-SVN: r49383", "tree": {"sha": "ae6f03a99fdebb015b8962a2d67f6c38968abef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae6f03a99fdebb015b8962a2d67f6c38968abef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/comments", "author": null, "committer": null, "parents": [{"sha": "81622d2908a52a157f5dc4b4fc455283c92ac58c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81622d2908a52a157f5dc4b4fc455283c92ac58c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81622d2908a52a157f5dc4b4fc455283c92ac58c"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "bd2aa0d022bed7a45bb148f4788e88ba25904b54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "patch": "@@ -1,3 +1,10 @@\n+2002-01-31  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* c-lex.c (yyparse): Call debug_hooks->start_source_file for\n+\tthe primary source file; this has not been done yet.\n+\t* c-decl.c (c_expand_body): Reset input_filename from\n+\tDECL_SOURCE_FILE (fndecl) before calling init_function_start.\n+\n 2002-01-31  Kazu Hirata  <kazu@hxi.com>\n \n \t* rtlanal.c (subreg_regno_offset): Do not use\n@@ -76,13 +83,13 @@\n \n 2002-01-29  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * rs6000.md (\"*call_value_local32\"): Remove constraints.\n-        (\"*call_value_local64\"): Same.\n-        (\"*call_value_indirect_nonlocal_aix32\"): Same.\n-        (\"*call_value_nonlocal_aix32\"): Same.\n-        (\"*call_value_indirect_nonlocal_aix64\"): Same.\n-        (\"*call_value_nonlocal_aix64\"): Same.\n-        (\"*call_value_nonlocal_sysv\"): Same.\n+\t* rs6000.md (\"*call_value_local32\"): Remove constraints.\n+\t(\"*call_value_local64\"): Same.\n+\t(\"*call_value_indirect_nonlocal_aix32\"): Same.\n+\t(\"*call_value_nonlocal_aix32\"): Same.\n+\t(\"*call_value_indirect_nonlocal_aix64\"): Same.\n+\t(\"*call_value_nonlocal_aix64\"): Same.\n+\t(\"*call_value_nonlocal_sysv\"): Same.\n \n 2002-01-29  Richard Henderson  <rth@redhat.com>\n \n@@ -114,18 +121,18 @@\n \n 2002-01-29  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * tree.c (build_nonstandard_integer_type): Correct prototype.\n+\t* tree.c (build_nonstandard_integer_type): Correct prototype.\n \n 2002-01-29  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* config/s390/s390.md (movstrsico, movstrdix_64, \n+\t* config/s390/s390.md (movstrsico, movstrdix_64,\n \tmovstrsix_31): Remove, replace by ...\n-\t(movstrdi_short, movstrsi_short, movstrdi_long, \n+\t(movstrdi_short, movstrsi_short, movstrdi_long,\n \tmovstrsi_long): ... these.  New.\n \t(movstrdi, movstrsi): Adapt.\n \n \t(rotldi3, rotlsi3, ashldi3, *ashldi3_31, *ashldi3_64,\n-\tashlsi3, lshrdi3, *lshrdi3_31, *lshrdi3_64, lshrsi3): \n+\tashlsi3, lshrdi3, *lshrdi3_31, *lshrdi3_64, lshrsi3):\n \tRemove unnecessary CC clobber.\n \t(*ashrdi3_cc_31, *ashrdi3_cconly_31, *ashrdi3_cc_64,\n \t*ashrdi3_cconly_64, *ashrsi3_cc, *ashrsi3_cconly): New.\n@@ -157,7 +164,7 @@\n \tgrokdeclarator.\n \t(build_bitfield_integer_type): New function.\n \t(finish_struct): Move bitfield validation to grokdeclarator\n-\tand build_bitfield_integer_type. \n+\tand build_bitfield_integer_type.\n \t* tree.c (build_nonstandard_integer_type): New function.\n \t* tree.h (build_nonstandard_integer_type): New prototype.\n objc:\n@@ -542,7 +549,7 @@ Fri Jan 25 20:43:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-01-14  Hartmut Penner  <hpenner@de.ibm.com>\n \n-\t* emit_rtl.c (gen_lowpart_common): Conversion from const_int \n+\t* emit_rtl.c (gen_lowpart_common): Conversion from const_int\n \tto const_double needs to be done right for big-endian systems.\n \n 2002-01-24  Jason Merrill  <jason@redhat.com>"}, {"sha": "4153f50e8086a6c2e60929a1504284c5c8e5d8aa", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "patch": "@@ -7014,6 +7014,7 @@ c_expand_body (fndecl, nested_p, can_defer_p)\n \n   /* Initialize the RTL code for the function.  */\n   current_function_decl = fndecl;\n+  input_filename = DECL_SOURCE_FILE (fndecl);\n   init_function_start (fndecl, input_filename, DECL_SOURCE_LINE (fndecl));\n \n   /* This function is being processed in whole-function mode.  */"}, {"sha": "a0d2bbdf2fd476eba6505a176261ade19c68207f", "filename": "gcc/c-lex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=bebc7e8b3d0226dde405fc9a20b9a3be4e9db21e", "patch": "@@ -150,11 +150,14 @@ init_c_lex (filename)\n }\n \n /* A thin wrapper around the real parser that initializes the \n-   integrated preprocessor after debug output has been initialized.  */\n+   integrated preprocessor after debug output has been initialized.\n+   Also, make sure the start_source_file debug hook gets called for\n+   the primary source file.  */\n \n int\n yyparse()\n {\n+  (*debug_hooks->start_source_file) (lineno, input_filename);\n   cpp_finish_options (parse_in);\n \n   return yyparse_1();"}]}