{"sha": "f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkNDhlYTliMTJiOGUwN2FhMjI2YTc4Y2Y1ZGViZDliYjU0M2FhYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-10-14T09:56:48Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-10-14T09:56:48Z"}, "message": "* gperf-2.7-19981006.pat: Remove.\n\nFrom-SVN: r36867", "tree": {"sha": "52e1febd103f65fd131ce3c2d91974ba57ecddc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52e1febd103f65fd131ce3c2d91974ba57ecddc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8beb821907d460bb2720aa911b0a1bacc514c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8beb821907d460bb2720aa911b0a1bacc514c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8beb821907d460bb2720aa911b0a1bacc514c11"}], "stats": {"total": 152, "additions": 4, "deletions": 148}, "files": [{"sha": "e22a25b922e08255976495edb8c60e130ec1947d", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=f4d48ea9b12b8e07aa226a78cf5debd9bb543aaa", "patch": "@@ -1,3 +1,7 @@\n+2000-10-14  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gperf-2.7-19981006.pat: Remove.\n+\n 2000-10-08  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* test_installed: Change EGCS references to refer to GCC."}, {"sha": "c20168ac535492e7d442e4d002a43f5d5abf1936", "filename": "contrib/gperf-2.7-19981006.pat", "status": "removed", "additions": 0, "deletions": 148, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8beb821907d460bb2720aa911b0a1bacc514c11/contrib%2Fgperf-2.7-19981006.pat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8beb821907d460bb2720aa911b0a1bacc514c11/contrib%2Fgperf-2.7-19981006.pat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgperf-2.7-19981006.pat?ref=e8beb821907d460bb2720aa911b0a1bacc514c11", "patch": "@@ -1,148 +0,0 @@\n-Tue Oct  6 16:18:10 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n-\n-\t* key-list.cc (output_keyword_blank_entries): Output\n- \tget_fill_default() in the blank entries of keywords as a trailing\n-\tlist of initializers.\n-\n-\t* options.cc: Add support for fill_default.\n-\n-\t* options.h: Likewise.\n-\t\n-\t* options.icc: Likewise.\n-\n-\t* version.cc: Update to indicate forked version.\n-\n-\n-diff -rup orig/gperf-2.7/src/key-list.cc gperf-2.7/src/key-list.cc\n---- orig/gperf-2.7/src/key-list.cc\tWed Apr 15 18:02:51 1998\n-+++ gperf-2.7/src/key-list.cc\tTue Oct  6 15:38:54 1998\n-@@ -1069,7 +1069,7 @@ output_keyword_blank_entries (int count,\n-             printf (\", \");\n-         }\n-       if (option[TYPE])\n--        printf (\"{\\\"\\\"}\");\n-+        printf (\"{\\\"\\\"%s}\", option.get_fill_default());\n-       else\n-         printf (\"\\\"\\\"\");\n-       column++;\n-diff -rup orig/gperf-2.7/src/options.cc gperf-2.7/src/options.cc\n---- orig/gperf-2.7/src/options.cc\tSat May  2 06:35:16 1998\n-+++ gperf-2.7/src/options.cc\tTue Oct  6 15:20:03 1998\n-@@ -40,6 +40,9 @@ static const int DEFAULT_JUMP_VALUE = 5;\n- /* Default name for generated lookup function. */\n- static const char *const DEFAULT_NAME = \"in_word_set\";\n- \n-+/* Default filler for keyword table. */\n-+static const char *const DEFAULT_FILL = \"\";\n-+\n- /* Default name for the key component. */\n- static const char *const DEFAULT_KEY = \"name\";\n- \n-@@ -66,6 +69,7 @@ int Options::argument_count;\n- int Options::iterations;\n- char **Options::argument_vector;\n- const char *Options::function_name;\n-+const char *Options::fill_default;\n- const char *Options::key_name;\n- const char *Options::class_name;\n- const char *Options::hash_name;\n-@@ -265,6 +269,7 @@ Options::Options (void)\n-   jump                = DEFAULT_JUMP_VALUE;\n-   option_word         = DEFAULTCHARS | C;\n-   function_name       = DEFAULT_NAME;\n-+  fill_default        = DEFAULT_FILL;\n-   key_name            = DEFAULT_KEY;\n-   hash_name           = DEFAULT_HASH_NAME;\n-   wordlist_name       = DEFAULT_WORDLIST_NAME;\n-@@ -306,6 +311,7 @@ Options::~Options (void)\n-                \"\\nSEVENBIT is....: %s\"\n-                \"\\niterations = %d\"\n-                \"\\nlookup function name = %s\"\n-+               \"\\nfill default = %s\"\n-                \"\\nhash function name = %s\"\n-                \"\\nword list name = %s\"\n-                \"\\nkey name = %s\"\n-@@ -336,7 +342,7 @@ Options::~Options (void)\n-                option_word & INCLUDE ? \"enabled\" : \"disabled\",\n-                option_word & SEVENBIT ? \"enabled\" : \"disabled\",\n-                iterations,\n--               function_name, hash_name, wordlist_name, key_name,\n-+               function_name, fill_default, hash_name, wordlist_name, key_name,\n-                jump, size - 1, initial_asso_value, delimiters, total_switches);\n-       if (option_word & ALLCHARS)\n-         fprintf (stderr, \"all characters are used in the hash function\\n\");\n-@@ -379,6 +385,7 @@ static const struct option long_options[\n-   { \"compare-strlen\", no_argument, 0, 'l' },\n-   { \"duplicates\", no_argument, 0, 'D' },\n-   { \"fast\", required_argument, 0, 'f' },\n-+  { \"fill-default\", required_argument, 0, 'F' },\n-   { \"initial-asso\", required_argument, 0, 'i' },\n-   { \"jump\", required_argument, 0, 'j' },\n-   { \"no-strlen\", no_argument, 0, 'n' },\n-@@ -403,7 +410,7 @@ Options::operator() (int argc, char *arg\n- \n-   while ((option_char =\n-             getopt_long (argument_count, argument_vector,\n--                         \"adcCDe:Ef:gGhH:i:Ij:k:K:lL:nN:oprs:S:tTvW:Z:7\",\n-+                         \"adcCDe:Ef:F:gGhH:i:Ij:k:K:lL:nN:oprs:S:tTvW:Z:7\",\n-                          long_options, (int *)0))\n-          != -1)\n-     {\n-@@ -575,6 +582,11 @@ Options::operator() (int argc, char *arg\n-         case 'N':               /* Make generated lookup function name be optarg */\n-           {\n-             function_name = /*getopt*/optarg;\n-+            break;\n-+          }\n-+        case 'F':               /* Make fill_default be optarg */\n-+          {\n-+            fill_default = /*getopt*/optarg;\n-             break;\n-           }\n-         case 'o':               /* Order input by frequency of key set occurrence. */\n-diff -rup orig/gperf-2.7/src/options.h gperf-2.7/src/options.h\n---- orig/gperf-2.7/src/options.h\tTue Apr 14 06:55:28 1998\n-+++ gperf-2.7/src/options.h\tTue Oct  6 15:12:46 1998\n-@@ -97,6 +97,7 @@ public:\n-   static int          initial_value (void);\n-   static int          get_total_switches (void);\n-   static const char  *get_function_name (void);\n-+  static const char  *get_fill_default (void);\n-   static const char  *get_key_name (void);\n-   static const char  *get_class_name (void);\n-   static const char  *get_hash_name (void);\n-@@ -115,6 +116,7 @@ private:\n-   static int          iterations;                         /* Amount to iterate when a collision occurs. */\n-   static char       **argument_vector;                    /* Stores a pointer to command-line vector. */\n-   static const char  *function_name;                      /* Names used for generated lookup function. */\n-+  static const char  *fill_default;                       /* Expression used to assign default values in keyword table. */\n-   static const char  *key_name;                           /* Name used for keyword key. */\n-   static const char  *class_name;                         /* Name used for generated C++ class. */\n-   static const char  *hash_name;                          /* Name used for generated hash function. */\n-diff -rup orig/gperf-2.7/src/options.icc gperf-2.7/src/options.icc\n---- orig/gperf-2.7/src/options.icc\tSat Mar 21 07:51:17 1998\n-+++ gperf-2.7/src/options.icc\tTue Oct  6 15:27:36 1998\n-@@ -110,6 +110,14 @@ Options::get_function_name (void)\n-   return function_name;\n- }\n- \n-+/* Returns the fill default. */\n-+INLINE const char *\n-+Options::get_fill_default (void)\n-+{\n-+  T (Trace t (\"Options::get_fill_default\");)\n-+  return fill_default;\n-+}\n-+\n- /* Returns the keyword key name. */\n- INLINE const char *\n- Options::get_key_name (void)\n-diff -rup orig/gperf-2.7/src/version.cc gperf-2.7/src/version.cc\n---- orig/gperf-2.7/src/version.cc\tSat May  2 06:29:43 1998\n-+++ gperf-2.7/src/version.cc\tTue Oct  6 16:04:56 1998\n-@@ -19,4 +19,4 @@ You should have received a copy of the G\n- along with GNU GPERF; see the file COPYING.  If not, write to the Free\n- Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111, USA.  */\n- \n--const char *version_string = \"2.7\";\n-+const char *version_string = \"2.7.1 (19981006 egcs)\";"}]}