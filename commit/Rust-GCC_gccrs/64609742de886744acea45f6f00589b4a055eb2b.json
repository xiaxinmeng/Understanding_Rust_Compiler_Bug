{"sha": "64609742de886744acea45f6f00589b4a055eb2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ2MDk3NDJkZTg4Njc0NGFjZWE0NWY2ZjAwNTg5YjRhMDU1ZWIyYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-06T00:17:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-06T00:17:12Z"}, "message": "(get_secondary_mem): Call SECONDARY_MEMORY_NEEDED_MODE if it is\ndefined.\n\nFrom-SVN: r6697", "tree": {"sha": "923e2f92d56be7a9c72c90eb68cc7cf6ba69e7ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/923e2f92d56be7a9c72c90eb68cc7cf6ba69e7ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64609742de886744acea45f6f00589b4a055eb2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64609742de886744acea45f6f00589b4a055eb2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64609742de886744acea45f6f00589b4a055eb2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64609742de886744acea45f6f00589b4a055eb2b/comments", "author": null, "committer": null, "parents": [{"sha": "269673180b079297b9ff6bdc3307347897de737f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269673180b079297b9ff6bdc3307347897de737f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/269673180b079297b9ff6bdc3307347897de737f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "690a7ec52220fd7595e394d9c1220bd2811df495", "filename": "gcc/reload.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64609742de886744acea45f6f00589b4a055eb2b/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64609742de886744acea45f6f00589b4a055eb2b/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=64609742de886744acea45f6f00589b4a055eb2b", "patch": "@@ -602,14 +602,17 @@ get_secondary_mem (x, mode, opnum, type)\n   rtx loc;\n   int mem_valid;\n \n-  /* If MODE is narrower than a word, widen it.  This is required because\n-     most machines that require these memory locations do not support\n-     short load and stores from all registers (e.g., FP registers).  We could\n-     possibly conditionalize this, but we lose nothing by doing the wider\n-     mode.  */\n+  /* By default, if MODE is narrower than a word, widen it to a word.\n+     This is required because most machines that require these memory\n+     locations do not support short load and stores from all registers\n+     (e.g., FP registers).  */\n \n+#ifdef SECONDARY_MEMORY_NEEDED_MODE\n+  mode = SECONDARY_MEMORY_NEEDED_MODE (mode);\n+#else\n   if (GET_MODE_BITSIZE (mode) < BITS_PER_WORD)\n     mode = mode_for_size (BITS_PER_WORD, GET_MODE_CLASS (mode), 0);\n+#endif\n \n   /* If we already have made a MEM for this operand in MODE, return it.  */\n   if (secondary_memlocs_elim[(int) mode][opnum] != 0)"}]}