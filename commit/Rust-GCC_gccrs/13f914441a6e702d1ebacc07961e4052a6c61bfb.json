{"sha": "13f914441a6e702d1ebacc07961e4052a6c61bfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNmOTE0NDQxYTZlNzAyZDFlYmFjYzA3OTYxZTQwNTJhNmM2MWJmYg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-07-23T18:20:21Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-07-23T18:20:21Z"}, "message": "ops.c: Remove checks using pointers to long.\n\n2004-07-23  Janis Johnson  <janis187@us.ibm.com>\n\n\t* gcc.dg/vmx/ops.c: Remove checks using pointers to long.\n\t* gcc.dg/vmx/ops-long-1.c: New test.\n\t* gcc.dg/vmx/ops-long-2.c: New test.\n\nFrom-SVN: r85085", "tree": {"sha": "d13e81dc280b0ef12115d6726aee3395a51b429a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d13e81dc280b0ef12115d6726aee3395a51b429a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13f914441a6e702d1ebacc07961e4052a6c61bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f914441a6e702d1ebacc07961e4052a6c61bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13f914441a6e702d1ebacc07961e4052a6c61bfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f914441a6e702d1ebacc07961e4052a6c61bfb/comments", "author": null, "committer": null, "parents": [{"sha": "694e657a06f56c6fb172e3a35a7edfcd88338a4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694e657a06f56c6fb172e3a35a7edfcd88338a4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694e657a06f56c6fb172e3a35a7edfcd88338a4d"}], "stats": {"total": 182, "additions": 120, "deletions": 62}, "files": [{"sha": "d1f3a8fd562f3c94faf241b619c0237650980ec6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13f914441a6e702d1ebacc07961e4052a6c61bfb", "patch": "@@ -1,3 +1,9 @@\n+2004-07-23  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/vmx/ops.c: Remove checks using pointers to long.\n+\t* gcc.dg/vmx/ops-long-1.c: New test.\n+\t* gcc.dg/vmx/ops-long-2.c: New test.\n+\n 2004-07-23  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/lookup/conv-[1234].C: New."}, {"sha": "5471706790ab25af8bfa4451e32aa27bac7620be", "filename": "gcc/testsuite/gcc.dg/vmx/ops-long-1.c", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops-long-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops-long-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops-long-1.c?ref=13f914441a6e702d1ebacc07961e4052a6c61bfb", "patch": "@@ -0,0 +1,80 @@\n+/* { dg-do compile } */\n+\n+/* Checks from the original ops.c that pass pointers to long or\n+   unsigned long for operations that support that in released versions\n+   of <altivec.h>.  */\n+\n+#include <altivec.h>\n+#include <stdlib.h>\n+extern int *var_int;\n+extern long * *var_long_ptr;\n+extern unsigned long * *var_unsigned_long_ptr;\n+extern vector signed int * *var_vec_s32_ptr;\n+extern vector signed int *var_vec_s32;\n+extern vector unsigned char * *var_vec_u8_ptr;\n+extern vector unsigned char *var_vec_u8;\n+extern vector unsigned int * *var_vec_u32_ptr;\n+extern vector unsigned int *var_vec_u32;\n+\n+void f13() {\n+  *var_vec_s32++ = vec_ld(var_int[0], var_long_ptr[1]);\n+  *var_vec_s32++ = vec_lde(var_int[0], var_long_ptr[1]);\n+  *var_vec_s32++ = vec_ldl(var_int[0], var_long_ptr[1]);\n+  *var_vec_s32++ = vec_lvewx(var_int[0], var_long_ptr[1]);\n+  *var_vec_s32++ = vec_lvx(var_int[0], var_long_ptr[1]);\n+  *var_vec_s32++ = vec_lvxl(var_int[0], var_long_ptr[1]);\n+}\n+void f22() {\n+  *var_vec_u32++ = vec_ld(var_int[0], var_unsigned_long_ptr[1]);\n+  *var_vec_u32++ = vec_lde(var_int[0], var_unsigned_long_ptr[1]);\n+  *var_vec_u32++ = vec_ldl(var_int[0], var_unsigned_long_ptr[1]);\n+  *var_vec_u32++ = vec_lvewx(var_int[0], var_unsigned_long_ptr[1]);\n+  *var_vec_u32++ = vec_lvx(var_int[0], var_unsigned_long_ptr[1]);\n+  *var_vec_u32++ = vec_lvxl(var_int[0], var_unsigned_long_ptr[1]);\n+}\n+void f25() {\n+  *var_vec_u8++ = vec_lvsl(var_int[0], var_long_ptr[1]);\n+  *var_vec_u8++ = vec_lvsl(var_int[0], var_unsigned_long_ptr[1]);\n+  *var_vec_u8++ = vec_lvsr(var_int[0], var_long_ptr[1]);\n+  *var_vec_u8++ = vec_lvsr(var_int[0], var_unsigned_long_ptr[1]);\n+}\n+void f33() {\n+  vec_dst(var_long_ptr[0], var_int[1], 0);\n+  vec_dst(var_long_ptr[0], var_int[1], 1);\n+  vec_dst(var_long_ptr[0], var_int[1], 2);\n+  vec_dst(var_long_ptr[0], var_int[1], 3);\n+  vec_dst(var_unsigned_long_ptr[0], var_int[1], 0);\n+  vec_dst(var_unsigned_long_ptr[0], var_int[1], 1);\n+  vec_dst(var_unsigned_long_ptr[0], var_int[1], 2);\n+  vec_dst(var_unsigned_long_ptr[0], var_int[1], 3);\n+}\n+void f34() {\n+  vec_dstst(var_long_ptr[0], var_int[1], 0);\n+  vec_dstst(var_long_ptr[0], var_int[1], 1);\n+  vec_dstst(var_long_ptr[0], var_int[1], 2);\n+  vec_dstst(var_long_ptr[0], var_int[1], 3);\n+  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 0);\n+  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 1);\n+  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 2);\n+  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 3);\n+}\n+void f35() {\n+  vec_dststt(var_long_ptr[0], var_int[1], 0);\n+  vec_dststt(var_long_ptr[0], var_int[1], 1);\n+  vec_dststt(var_long_ptr[0], var_int[1], 2);\n+  vec_dststt(var_long_ptr[0], var_int[1], 3);\n+  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 0);\n+  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 1);\n+  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 2);\n+  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 3);\n+  vec_dstt(var_long_ptr[0], var_int[1], 0);\n+  vec_dstt(var_long_ptr[0], var_int[1], 1);\n+  vec_dstt(var_long_ptr[0], var_int[1], 2);\n+  vec_dstt(var_long_ptr[0], var_int[1], 3);\n+}\n+void f36() {\n+  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 0);\n+  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 1);\n+  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 2);\n+  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 3);\n+}"}, {"sha": "1e628f19265999a6f10853004d3f3f7cbad36339", "filename": "gcc/testsuite/gcc.dg/vmx/ops-long-2.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops-long-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops-long-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops-long-2.c?ref=13f914441a6e702d1ebacc07961e4052a6c61bfb", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+\n+/* Checks from the original ops.c that pass pointers to long or\n+   unsigned long to operations that do not support that in released\n+   versions of altivec.h.  */\n+\n+#include <altivec.h>\n+#include <stdlib.h>\n+extern int *var_int;\n+extern long * *var_long_ptr;\n+extern unsigned long * *var_unsigned_long_ptr;\n+extern vector signed int * *var_vec_s32_ptr;\n+extern vector signed int *var_vec_s32;\n+extern vector unsigned char * *var_vec_u8_ptr;\n+extern vector unsigned char *var_vec_u8;\n+extern vector unsigned int * *var_vec_u32_ptr;\n+extern vector unsigned int *var_vec_u32;\n+\n+void f36() {\n+  vec_st(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n+  vec_st(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n+}\n+void f37() {\n+  vec_ste(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n+  vec_ste(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n+  vec_stl(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n+  vec_stl(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n+  vec_stvewx(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n+  vec_stvewx(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n+  vec_stvx(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n+  vec_stvx(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n+  vec_stvxl(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n+  vec_stvxl(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n+}"}, {"sha": "b39ad1d6569c84c7e8f1d49c27043db5a758091f", "filename": "gcc/testsuite/gcc.dg/vmx/ops.c", "status": "modified", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f914441a6e702d1ebacc07961e4052a6c61bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fops.c?ref=13f914441a6e702d1ebacc07961e4052a6c61bfb", "patch": "@@ -17,12 +17,10 @@ extern int *var_cc26t;\n extern int *var_cc26td;\n extern int *var_cc26tr;\n extern int *var_int;\n-extern long * *var_long_ptr;\n extern short * *var_short_ptr;\n extern signed char * *var_signed_char_ptr;\n extern unsigned char * *var_unsigned_char_ptr;\n extern unsigned int * *var_unsigned_int_ptr;\n-extern unsigned long * *var_unsigned_long_ptr;\n extern unsigned short * *var_unsigned_short_ptr;\n extern vector bool char * *var_vec_b8_ptr;\n extern vector bool char *var_vec_b8;\n@@ -1449,20 +1447,14 @@ void f13() {\n   *var_vec_s32++ = vec_cts(var_vec_f32[0], 30);\n   *var_vec_s32++ = vec_cts(var_vec_f32[0], 31);\n   *var_vec_s32++ = vec_ld(var_int[0], var_int_ptr[1]);\n-  *var_vec_s32++ = vec_ld(var_int[0], var_long_ptr[1]);\n   *var_vec_s32++ = vec_ld(var_int[0], var_vec_s32_ptr[1]);\n   *var_vec_s32++ = vec_lde(var_int[0], var_int_ptr[1]);\n-  *var_vec_s32++ = vec_lde(var_int[0], var_long_ptr[1]);\n   *var_vec_s32++ = vec_ldl(var_int[0], var_int_ptr[1]);\n-  *var_vec_s32++ = vec_ldl(var_int[0], var_long_ptr[1]);\n   *var_vec_s32++ = vec_ldl(var_int[0], var_vec_s32_ptr[1]);\n   *var_vec_s32++ = vec_lvewx(var_int[0], var_int_ptr[1]);\n-  *var_vec_s32++ = vec_lvewx(var_int[0], var_long_ptr[1]);\n   *var_vec_s32++ = vec_lvx(var_int[0], var_int_ptr[1]);\n-  *var_vec_s32++ = vec_lvx(var_int[0], var_long_ptr[1]);\n   *var_vec_s32++ = vec_lvx(var_int[0], var_vec_s32_ptr[1]);\n   *var_vec_s32++ = vec_lvxl(var_int[0], var_int_ptr[1]);\n-  *var_vec_s32++ = vec_lvxl(var_int[0], var_long_ptr[1]);\n   *var_vec_s32++ = vec_lvxl(var_int[0], var_vec_s32_ptr[1]);\n   *var_vec_s32++ = vec_max(var_vec_b32[0], var_vec_s32[1]);\n   *var_vec_s32++ = vec_max(var_vec_s32[0], var_vec_b32[1]);\n@@ -2362,20 +2354,14 @@ void f22() {\n   *var_vec_u32++ = vec_ctu(var_vec_f32[0], 30);\n   *var_vec_u32++ = vec_ctu(var_vec_f32[0], 31);\n   *var_vec_u32++ = vec_ld(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u32++ = vec_ld(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u32++ = vec_ld(var_int[0], var_vec_u32_ptr[1]);\n   *var_vec_u32++ = vec_lde(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u32++ = vec_lde(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u32++ = vec_ldl(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u32++ = vec_ldl(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u32++ = vec_ldl(var_int[0], var_vec_u32_ptr[1]);\n   *var_vec_u32++ = vec_lvewx(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u32++ = vec_lvewx(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u32++ = vec_lvx(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u32++ = vec_lvx(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u32++ = vec_lvx(var_int[0], var_vec_u32_ptr[1]);\n   *var_vec_u32++ = vec_lvxl(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u32++ = vec_lvxl(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u32++ = vec_lvxl(var_int[0], var_vec_u32_ptr[1]);\n   *var_vec_u32++ = vec_max(var_vec_b32[0], var_vec_u32[1]);\n   *var_vec_u32++ = vec_max(var_vec_u32[0], var_vec_b32[1]);\n@@ -2672,21 +2658,17 @@ void f25() {\n   *var_vec_u8++ = vec_lvebx(var_int[0], var_unsigned_char_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_float_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_int_ptr[1]);\n-  *var_vec_u8++ = vec_lvsl(var_int[0], var_long_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_short_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_signed_char_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_unsigned_char_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u8++ = vec_lvsl(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u8++ = vec_lvsl(var_int[0], var_unsigned_short_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_float_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_int_ptr[1]);\n-  *var_vec_u8++ = vec_lvsr(var_int[0], var_long_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_short_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_signed_char_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_unsigned_char_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_unsigned_int_ptr[1]);\n-  *var_vec_u8++ = vec_lvsr(var_int[0], var_unsigned_long_ptr[1]);\n   *var_vec_u8++ = vec_lvsr(var_int[0], var_unsigned_short_ptr[1]);\n   *var_vec_u8++ = vec_lvx(var_int[0], var_unsigned_char_ptr[1]);\n   *var_vec_u8++ = vec_lvx(var_int[0], var_vec_u8_ptr[1]);\n@@ -3462,10 +3444,6 @@ void f33() {\n   vec_dst(var_int_ptr[0], var_int[1], 1);\n   vec_dst(var_int_ptr[0], var_int[1], 2);\n   vec_dst(var_int_ptr[0], var_int[1], 3);\n-  vec_dst(var_long_ptr[0], var_int[1], 0);\n-  vec_dst(var_long_ptr[0], var_int[1], 1);\n-  vec_dst(var_long_ptr[0], var_int[1], 2);\n-  vec_dst(var_long_ptr[0], var_int[1], 3);\n   vec_dst(var_short_ptr[0], var_int[1], 0);\n   vec_dst(var_short_ptr[0], var_int[1], 1);\n   vec_dst(var_short_ptr[0], var_int[1], 2);\n@@ -3482,10 +3460,6 @@ void f33() {\n   vec_dst(var_unsigned_int_ptr[0], var_int[1], 1);\n   vec_dst(var_unsigned_int_ptr[0], var_int[1], 2);\n   vec_dst(var_unsigned_int_ptr[0], var_int[1], 3);\n-  vec_dst(var_unsigned_long_ptr[0], var_int[1], 0);\n-  vec_dst(var_unsigned_long_ptr[0], var_int[1], 1);\n-  vec_dst(var_unsigned_long_ptr[0], var_int[1], 2);\n-  vec_dst(var_unsigned_long_ptr[0], var_int[1], 3);\n   vec_dst(var_unsigned_short_ptr[0], var_int[1], 0);\n   vec_dst(var_unsigned_short_ptr[0], var_int[1], 1);\n   vec_dst(var_unsigned_short_ptr[0], var_int[1], 2);\n@@ -3544,10 +3518,6 @@ void f34() {\n   vec_dstst(var_int_ptr[0], var_int[1], 1);\n   vec_dstst(var_int_ptr[0], var_int[1], 2);\n   vec_dstst(var_int_ptr[0], var_int[1], 3);\n-  vec_dstst(var_long_ptr[0], var_int[1], 0);\n-  vec_dstst(var_long_ptr[0], var_int[1], 1);\n-  vec_dstst(var_long_ptr[0], var_int[1], 2);\n-  vec_dstst(var_long_ptr[0], var_int[1], 3);\n   vec_dstst(var_short_ptr[0], var_int[1], 0);\n   vec_dstst(var_short_ptr[0], var_int[1], 1);\n   vec_dstst(var_short_ptr[0], var_int[1], 2);\n@@ -3564,10 +3534,6 @@ void f34() {\n   vec_dstst(var_unsigned_int_ptr[0], var_int[1], 1);\n   vec_dstst(var_unsigned_int_ptr[0], var_int[1], 2);\n   vec_dstst(var_unsigned_int_ptr[0], var_int[1], 3);\n-  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 0);\n-  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 1);\n-  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 2);\n-  vec_dstst(var_unsigned_long_ptr[0], var_int[1], 3);\n   vec_dstst(var_unsigned_short_ptr[0], var_int[1], 0);\n   vec_dstst(var_unsigned_short_ptr[0], var_int[1], 1);\n   vec_dstst(var_unsigned_short_ptr[0], var_int[1], 2);\n@@ -3626,10 +3592,6 @@ void f35() {\n   vec_dststt(var_int_ptr[0], var_int[1], 1);\n   vec_dststt(var_int_ptr[0], var_int[1], 2);\n   vec_dststt(var_int_ptr[0], var_int[1], 3);\n-  vec_dststt(var_long_ptr[0], var_int[1], 0);\n-  vec_dststt(var_long_ptr[0], var_int[1], 1);\n-  vec_dststt(var_long_ptr[0], var_int[1], 2);\n-  vec_dststt(var_long_ptr[0], var_int[1], 3);\n   vec_dststt(var_short_ptr[0], var_int[1], 0);\n   vec_dststt(var_short_ptr[0], var_int[1], 1);\n   vec_dststt(var_short_ptr[0], var_int[1], 2);\n@@ -3646,10 +3608,6 @@ void f35() {\n   vec_dststt(var_unsigned_int_ptr[0], var_int[1], 1);\n   vec_dststt(var_unsigned_int_ptr[0], var_int[1], 2);\n   vec_dststt(var_unsigned_int_ptr[0], var_int[1], 3);\n-  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 0);\n-  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 1);\n-  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 2);\n-  vec_dststt(var_unsigned_long_ptr[0], var_int[1], 3);\n   vec_dststt(var_unsigned_short_ptr[0], var_int[1], 0);\n   vec_dststt(var_unsigned_short_ptr[0], var_int[1], 1);\n   vec_dststt(var_unsigned_short_ptr[0], var_int[1], 2);\n@@ -3706,10 +3664,6 @@ void f35() {\n   vec_dstt(var_int_ptr[0], var_int[1], 1);\n   vec_dstt(var_int_ptr[0], var_int[1], 2);\n   vec_dstt(var_int_ptr[0], var_int[1], 3);\n-  vec_dstt(var_long_ptr[0], var_int[1], 0);\n-  vec_dstt(var_long_ptr[0], var_int[1], 1);\n-  vec_dstt(var_long_ptr[0], var_int[1], 2);\n-  vec_dstt(var_long_ptr[0], var_int[1], 3);\n }\n void f36() {\n   vec_dstt(var_short_ptr[0], var_int[1], 0);\n@@ -3728,10 +3682,6 @@ void f36() {\n   vec_dstt(var_unsigned_int_ptr[0], var_int[1], 1);\n   vec_dstt(var_unsigned_int_ptr[0], var_int[1], 2);\n   vec_dstt(var_unsigned_int_ptr[0], var_int[1], 3);\n-  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 0);\n-  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 1);\n-  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 2);\n-  vec_dstt(var_unsigned_long_ptr[0], var_int[1], 3);\n   vec_dstt(var_unsigned_short_ptr[0], var_int[1], 0);\n   vec_dstt(var_unsigned_short_ptr[0], var_int[1], 1);\n   vec_dstt(var_unsigned_short_ptr[0], var_int[1], 2);\n@@ -3799,14 +3749,12 @@ void f36() {\n   vec_st(var_vec_s16[0], var_int[1], var_short_ptr[2]);\n   vec_st(var_vec_s16[0], var_int[1], var_vec_s16_ptr[2]);\n   vec_st(var_vec_s32[0], var_int[1], var_int_ptr[2]);\n-  vec_st(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n   vec_st(var_vec_s32[0], var_int[1], var_vec_s32_ptr[2]);\n   vec_st(var_vec_s8[0], var_int[1], var_signed_char_ptr[2]);\n   vec_st(var_vec_s8[0], var_int[1], var_vec_s8_ptr[2]);\n   vec_st(var_vec_u16[0], var_int[1], var_unsigned_short_ptr[2]);\n   vec_st(var_vec_u16[0], var_int[1], var_vec_u16_ptr[2]);\n   vec_st(var_vec_u32[0], var_int[1], var_unsigned_int_ptr[2]);\n-  vec_st(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n   vec_st(var_vec_u32[0], var_int[1], var_vec_u32_ptr[2]);\n   vec_st(var_vec_u8[0], var_int[1], var_unsigned_char_ptr[2]);\n   vec_st(var_vec_u8[0], var_int[1], var_vec_u8_ptr[2]);\n@@ -3815,11 +3763,9 @@ void f36() {\n }\n void f37() {\n   vec_ste(var_vec_s32[0], var_int[1], var_int_ptr[2]);\n-  vec_ste(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n   vec_ste(var_vec_s8[0], var_int[1], var_signed_char_ptr[2]);\n   vec_ste(var_vec_u16[0], var_int[1], var_unsigned_short_ptr[2]);\n   vec_ste(var_vec_u32[0], var_int[1], var_unsigned_int_ptr[2]);\n-  vec_ste(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n   vec_ste(var_vec_u8[0], var_int[1], var_unsigned_char_ptr[2]);\n   vec_stl(var_vec_b16[0], var_int[1], var_vec_b16_ptr[2]);\n   vec_stl(var_vec_b32[0], var_int[1], var_vec_b32_ptr[2]);\n@@ -3830,14 +3776,12 @@ void f37() {\n   vec_stl(var_vec_s16[0], var_int[1], var_short_ptr[2]);\n   vec_stl(var_vec_s16[0], var_int[1], var_vec_s16_ptr[2]);\n   vec_stl(var_vec_s32[0], var_int[1], var_int_ptr[2]);\n-  vec_stl(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n   vec_stl(var_vec_s32[0], var_int[1], var_vec_s32_ptr[2]);\n   vec_stl(var_vec_s8[0], var_int[1], var_signed_char_ptr[2]);\n   vec_stl(var_vec_s8[0], var_int[1], var_vec_s8_ptr[2]);\n   vec_stl(var_vec_u16[0], var_int[1], var_unsigned_short_ptr[2]);\n   vec_stl(var_vec_u16[0], var_int[1], var_vec_u16_ptr[2]);\n   vec_stl(var_vec_u32[0], var_int[1], var_unsigned_int_ptr[2]);\n-  vec_stl(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n   vec_stl(var_vec_u32[0], var_int[1], var_vec_u32_ptr[2]);\n   vec_stl(var_vec_u8[0], var_int[1], var_unsigned_char_ptr[2]);\n   vec_stl(var_vec_u8[0], var_int[1], var_vec_u8_ptr[2]);\n@@ -3847,9 +3791,7 @@ void f37() {\n   vec_stvehx(var_vec_u16[0], var_int[1], var_unsigned_short_ptr[2]);\n   vec_stvewx(var_vec_f32[0], var_int[1], var_float_ptr[2]);\n   vec_stvewx(var_vec_s32[0], var_int[1], var_int_ptr[2]);\n-  vec_stvewx(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n   vec_stvewx(var_vec_u32[0], var_int[1], var_unsigned_int_ptr[2]);\n-  vec_stvewx(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n   vec_stvx(var_vec_b16[0], var_int[1], var_vec_b16_ptr[2]);\n   vec_stvx(var_vec_b32[0], var_int[1], var_vec_b32_ptr[2]);\n   vec_stvx(var_vec_b8[0], var_int[1], var_vec_b8_ptr[2]);\n@@ -3859,14 +3801,12 @@ void f37() {\n   vec_stvx(var_vec_s16[0], var_int[1], var_short_ptr[2]);\n   vec_stvx(var_vec_s16[0], var_int[1], var_vec_s16_ptr[2]);\n   vec_stvx(var_vec_s32[0], var_int[1], var_int_ptr[2]);\n-  vec_stvx(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n   vec_stvx(var_vec_s32[0], var_int[1], var_vec_s32_ptr[2]);\n   vec_stvx(var_vec_s8[0], var_int[1], var_signed_char_ptr[2]);\n   vec_stvx(var_vec_s8[0], var_int[1], var_vec_s8_ptr[2]);\n   vec_stvx(var_vec_u16[0], var_int[1], var_unsigned_short_ptr[2]);\n   vec_stvx(var_vec_u16[0], var_int[1], var_vec_u16_ptr[2]);\n   vec_stvx(var_vec_u32[0], var_int[1], var_unsigned_int_ptr[2]);\n-  vec_stvx(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n   vec_stvx(var_vec_u32[0], var_int[1], var_vec_u32_ptr[2]);\n   vec_stvx(var_vec_u8[0], var_int[1], var_unsigned_char_ptr[2]);\n   vec_stvx(var_vec_u8[0], var_int[1], var_vec_u8_ptr[2]);\n@@ -3879,14 +3819,12 @@ void f37() {\n   vec_stvxl(var_vec_s16[0], var_int[1], var_short_ptr[2]);\n   vec_stvxl(var_vec_s16[0], var_int[1], var_vec_s16_ptr[2]);\n   vec_stvxl(var_vec_s32[0], var_int[1], var_int_ptr[2]);\n-  vec_stvxl(var_vec_s32[0], var_int[1], var_long_ptr[2]);\n   vec_stvxl(var_vec_s32[0], var_int[1], var_vec_s32_ptr[2]);\n   vec_stvxl(var_vec_s8[0], var_int[1], var_signed_char_ptr[2]);\n   vec_stvxl(var_vec_s8[0], var_int[1], var_vec_s8_ptr[2]);\n   vec_stvxl(var_vec_u16[0], var_int[1], var_unsigned_short_ptr[2]);\n   vec_stvxl(var_vec_u16[0], var_int[1], var_vec_u16_ptr[2]);\n   vec_stvxl(var_vec_u32[0], var_int[1], var_unsigned_int_ptr[2]);\n-  vec_stvxl(var_vec_u32[0], var_int[1], var_unsigned_long_ptr[2]);\n   vec_stvxl(var_vec_u32[0], var_int[1], var_vec_u32_ptr[2]);\n   vec_stvxl(var_vec_u8[0], var_int[1], var_unsigned_char_ptr[2]);\n   vec_stvxl(var_vec_u8[0], var_int[1], var_vec_u8_ptr[2]);"}]}