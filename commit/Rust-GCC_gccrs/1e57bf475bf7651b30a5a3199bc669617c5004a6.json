{"sha": "1e57bf475bf7651b30a5a3199bc669617c5004a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1N2JmNDc1YmY3NjUxYjMwYTVhMzE5OWJjNjY5NjE3YzUwMDRhNg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-03-30T01:25:37Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-03-30T01:25:37Z"}, "message": "re PR c/35235 (struct/union rvalue qualifiers must not propagate to members)\n\n\tPR c/35235\n\t* c-typeck.c (build_component_ref): Do not copy qualifiers from\n\tnon-lvalue to component.\n\ntestsuite:\n\t* gcc.dg/c99-array-lval-8.c: New test.\n\nFrom-SVN: r145271", "tree": {"sha": "a3701e6d5c0e690302dbeb1ef83b5841596f4999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3701e6d5c0e690302dbeb1ef83b5841596f4999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e57bf475bf7651b30a5a3199bc669617c5004a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e57bf475bf7651b30a5a3199bc669617c5004a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e57bf475bf7651b30a5a3199bc669617c5004a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e57bf475bf7651b30a5a3199bc669617c5004a6/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25d4deb101277208e94bac3af595d004801027de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d4deb101277208e94bac3af595d004801027de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d4deb101277208e94bac3af595d004801027de"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "49bbb0f9d777ffdca9126adbca390036948c4574", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e57bf475bf7651b30a5a3199bc669617c5004a6", "patch": "@@ -1,3 +1,9 @@\n+2009-03-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/35235\n+\t* c-typeck.c (build_component_ref): Do not copy qualifiers from\n+\tnon-lvalue to component.\n+\n 2009-03-29  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR preprocessor/34695"}, {"sha": "2559b1d92a8cc38a98623593703eb5c6665185fc", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=1e57bf475bf7651b30a5a3199bc669617c5004a6", "patch": "@@ -1904,6 +1904,7 @@ build_component_ref (tree datum, tree component)\n   enum tree_code code = TREE_CODE (type);\n   tree field = NULL;\n   tree ref;\n+  bool datum_lvalue = lvalue_p (datum);\n \n   if (!objc_is_public (datum, component))\n     return error_mark_node;\n@@ -1936,19 +1937,30 @@ build_component_ref (tree datum, tree component)\n \t  tree subdatum = TREE_VALUE (field);\n \t  int quals;\n \t  tree subtype;\n+\t  bool use_datum_quals;\n \n \t  if (TREE_TYPE (subdatum) == error_mark_node)\n \t    return error_mark_node;\n \n+\t  /* If this is an rvalue, it does not have qualifiers in C\n+\t     standard terms and we must avoid propagating such\n+\t     qualifiers down to a non-lvalue array that is then\n+\t     converted to a pointer.  */\n+\t  use_datum_quals = (datum_lvalue\n+\t\t\t     || TREE_CODE (TREE_TYPE (subdatum)) != ARRAY_TYPE);\n+\n \t  quals = TYPE_QUALS (strip_array_types (TREE_TYPE (subdatum)));\n-\t  quals |= TYPE_QUALS (TREE_TYPE (datum));\n+\t  if (use_datum_quals)\n+\t    quals |= TYPE_QUALS (TREE_TYPE (datum));\n \t  subtype = c_build_qualified_type (TREE_TYPE (subdatum), quals);\n \n \t  ref = build3 (COMPONENT_REF, subtype, datum, subdatum,\n \t\t\tNULL_TREE);\n-\t  if (TREE_READONLY (datum) || TREE_READONLY (subdatum))\n+\t  if (TREE_READONLY (subdatum)\n+\t      || (use_datum_quals && TREE_READONLY (datum)))\n \t    TREE_READONLY (ref) = 1;\n-\t  if (TREE_THIS_VOLATILE (datum) || TREE_THIS_VOLATILE (subdatum))\n+\t  if (TREE_THIS_VOLATILE (subdatum)\n+\t      || (use_datum_quals && TREE_THIS_VOLATILE (datum)))\n \t    TREE_THIS_VOLATILE (ref) = 1;\n \n \t  if (TREE_DEPRECATED (subdatum))"}, {"sha": "23701aae2234fa23c8bdd1d90b59c198d97d963c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e57bf475bf7651b30a5a3199bc669617c5004a6", "patch": "@@ -1,3 +1,8 @@\n+2009-03-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/35235\n+\t* gcc.dg/c99-array-lval-8.c: New test.\n+\n 2009-03-29  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR preprocessor/34695"}, {"sha": "b5048b66a77bf7a85fdbb98f75f928da5ca8f56e", "filename": "gcc/testsuite/gcc.dg/c99-array-lval-8.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-lval-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e57bf475bf7651b30a5a3199bc669617c5004a6/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-lval-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-array-lval-8.c?ref=1e57bf475bf7651b30a5a3199bc669617c5004a6", "patch": "@@ -0,0 +1,30 @@\n+/* Test for non-lvalue arrays: test that qualifiers on non-lvalues\n+   containing arrays do not remain when those arrays decay to\n+   pointers.  PR 35235.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+int a;\n+\n+void\n+f (void)\n+{\n+  const struct {\n+    int a[1];\n+  } s;\n+  int *p1 = s.a; /* { dg-error \"qualifiers\" } */\n+  int *p2 = (a ? s : s).a;\n+  /* In this case, the qualifier is properly on the array element type\n+     not on the rvalue structure and so is not discarded.  */\n+  struct {\n+    const int a[1];\n+  } t;\n+  int *p3 = t.a; /* { dg-error \"qualifiers\" } */\n+  int *p4 = (a ? t : t).a; /* { dg-error \"qualifiers\" } */\n+  /* The issue could also lead to code being wrongly accepted.  */\n+  const struct {\n+    int a[1][1];\n+  } u;\n+  const int (*p5)[1] = u.a;\n+  const int (*p6)[1] = (a ? u : u).a; /* { dg-error \"pointer\" } */\n+}"}]}