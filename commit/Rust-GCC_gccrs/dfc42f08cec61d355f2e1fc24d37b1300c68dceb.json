{"sha": "dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZjNDJmMDhjZWM2MWQzNTVmMmUxZmMyNGQzN2IxMzAwYzY4ZGNlYg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-01-18T15:04:50Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-01-18T15:04:50Z"}, "message": "altivec.h (vec_bperm): Change #define.\n\n[gcc]\n\n2016-01-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/altivec.h (vec_bperm): Change #define.\n\t* config/rs6000/altivec.md (UNSPEC_VBPERMD): New enum constant.\n\t(altivec_vbpermq2): New define_insn.\n\t(altivec_vbpermd): Likewise.\n\t* config/rs6000/rs6000-builtin.def (VBPERMQ2): New monomorphic\n\tfunction interface.\n\t(VBPERMD): Likewise.\n\t(VBPERM): New polymorphic function interface.\n\t* config/rs6000/r6000-c.c (altivec_overloaded_builtins_table):\n\tAdd entries for P9V_BUILTIN_VEC_VBPERM.\n\t* doc/extend.texi: Add interfaces for vec_bperm.\n\n[gcc/testsuite]\n\n2016-01-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/p8vector-builtin-8.c: Add new form for\n\tvec_bperm.\n\t* gcc.target/powerpc/p9-vbpermd.c: New file.\n\nFrom-SVN: r244578", "tree": {"sha": "7beadc6702b0430cca8d29c83dee51f8d2972a75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7beadc6702b0430cca8d29c83dee51f8d2972a75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3981e7ecd207d68bdb246587c7ca1c71a083e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3981e7ecd207d68bdb246587c7ca1c71a083e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3981e7ecd207d68bdb246587c7ca1c71a083e85"}], "stats": {"total": 84, "additions": 80, "deletions": 4}, "files": [{"sha": "3ec183a266ab2ea163033e469f031034c680d276", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -1,3 +1,17 @@\n+2016-01-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.h (vec_bperm): Change #define.\n+\t* config/rs6000/altivec.md (UNSPEC_VBPERMD): New enum constant.\n+\t(altivec_vbpermq2): New define_insn.\n+\t(altivec_vbpermd): Likewise.\n+\t* config/rs6000/rs6000-builtin.def (VBPERMQ2): New monomorphic\n+\tfunction interface.\n+\t(VBPERMD): Likewise.\n+\t(VBPERM): New polymorphic function interface.\n+\t* config/rs6000/r6000-c.c (altivec_overloaded_builtins_table):\n+\tAdd entries for P9V_BUILTIN_VEC_VBPERM.\n+\t* doc/extend.texi: Add interfaces for vec_bperm.\n+\n 2017-01-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390-c.c (s390_expand_overloaded_builtin): Downcase"}, {"sha": "d2961d09d3fc02a3fc1b895fe08a350d8f9a1896", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -351,7 +351,7 @@\n #define vec_vaddudm __builtin_vec_vaddudm\n #define vec_vadduqm __builtin_vec_vadduqm\n #define vec_vbpermq __builtin_vec_vbpermq\n-#define vec_bperm __builtin_vec_vbpermq\n+#define vec_bperm __builtin_vec_vbperm_api\n #define vec_vclz __builtin_vec_vclz\n #define vec_cntlz __builtin_vec_vclz\n #define vec_vclzb __builtin_vec_vclzb"}, {"sha": "d3a9279dacf1bcbc3d8b18eb0a875c91d85f4999", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -150,6 +150,7 @@\n    UNSPEC_VSUBEUQM\n    UNSPEC_VSUBECUQ\n    UNSPEC_VBPERMQ\n+   UNSPEC_VBPERMD\n    UNSPEC_BCDADD\n    UNSPEC_BCDSUB\n    UNSPEC_BCD_OVERFLOW\n@@ -3679,8 +3680,26 @@\n \t\t     UNSPEC_VBPERMQ))]\n   \"TARGET_P8_VECTOR\"\n   \"vbpermq %0,%1,%2\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n+\n+; One of the vector API interfaces requires returning vector unsigned char.\n+(define_insn \"altivec_vbpermq2\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n+\t\t       (match_operand:V16QI 2 \"register_operand\" \"v\")]\n+\t\t      UNSPEC_VBPERMQ))]\n+  \"TARGET_P8_VECTOR\"\n+  \"vbpermq %0,%1,%2\"\n+  [(set_attr \"type\" \"vecsimple\")])\n+\n+(define_insn \"altivec_vbpermd\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:V16QI 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_VBPERMD))]\n+  \"TARGET_P9_VECTOR\"\n+  \"vbpermd %0,%1,%2\"\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; Decimal Integer operations\n (define_int_iterator UNSPEC_BCD_ADD_SUB [UNSPEC_BCDADD UNSPEC_BCDSUB])"}, {"sha": "3bbaabb267a586718907b72e103fba8eb0bdde64", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -1811,6 +1811,7 @@ BU_P8V_AV_2 (VMAXUD,\t\t\"vmaxud\",\tCONST,\tumaxv2di3)\n BU_P8V_AV_2 (VMRGEW,\t\t\"vmrgew\",\tCONST,\tp8_vmrgew)\n BU_P8V_AV_2 (VMRGOW,\t\t\"vmrgow\",\tCONST,\tp8_vmrgow)\n BU_P8V_AV_2 (VBPERMQ,\t\t\"vbpermq\",\tCONST,\taltivec_vbpermq)\n+BU_P8V_AV_2 (VBPERMQ2,\t\t\"vbpermq2\",\tCONST,\taltivec_vbpermq2)\n BU_P8V_AV_2 (VPKUDUM,\t\t\"vpkudum\",\tCONST,\taltivec_vpkudum)\n BU_P8V_AV_2 (VPKSDSS,\t\t\"vpksdss\",\tCONST,\taltivec_vpksdss)\n BU_P8V_AV_2 (VPKUDUS,\t\t\"vpkudus\",\tCONST,\taltivec_vpkudus)\n@@ -1929,13 +1930,15 @@ BU_P9V_AV_2 (VADUH,\t\t\"vaduh\",\t\tCONST,  vaduv8hi3)\n BU_P9V_AV_2 (VADUW,\t\t\"vaduw\",\t\tCONST,  vaduv4si3)\n BU_P9V_AV_2 (VRLWNM,\t\t\"vrlwnm\",\t\tCONST,\taltivec_vrlwnm)\n BU_P9V_AV_2 (VRLDNM,\t\t\"vrldnm\",\t\tCONST,\taltivec_vrldnm)\n+BU_P9V_AV_2 (VBPERMD,\t\t\"vbpermd\",\t\tCONST,  altivec_vbpermd)\n \n /* ISA 3.0 vector overloaded 2 argument functions. */\n BU_P9V_OVERLOAD_2 (VADU,\t\"vadu\")\n BU_P9V_OVERLOAD_2 (VADUB,\t\"vadub\")\n BU_P9V_OVERLOAD_2 (VADUH,\t\"vaduh\")\n BU_P9V_OVERLOAD_2 (VADUW,\t\"vaduw\")\n BU_P9V_OVERLOAD_2 (RLNM,\t\"rlnm\")\n+BU_P9V_OVERLOAD_2 (VBPERM,\t\"vbperm_api\")\n \n /* ISA 3.0 3-argument vector functions.  */\n BU_P9V_AV_3 (VRLWMI,\t\t\"vrlwmi\",\t\tCONST,\taltivec_vrlwmi)"}, {"sha": "19db6c81bab714aae24aaeaed2c4b9895004cabb", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -4204,6 +4204,16 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V1TI, RS6000_BTI_unsigned_V1TI,\n     RS6000_BTI_unsigned_V1TI, 0 },\n \n+  { P9V_BUILTIN_VEC_VBPERM, P9V_BUILTIN_VBPERMD,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI,\n+    RS6000_BTI_unsigned_V16QI, 0 },\n+  { P9V_BUILTIN_VEC_VBPERM, P8V_BUILTIN_VBPERMQ,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V1TI,\n+    RS6000_BTI_unsigned_V16QI, 0 },\n+  { P9V_BUILTIN_VEC_VBPERM, P8V_BUILTIN_VBPERMQ2,\n+    RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI,\n+    RS6000_BTI_unsigned_V16QI, 0 },\n+\n   { P8V_BUILTIN_VEC_VBPERMQ, P8V_BUILTIN_VBPERMQ,\n     RS6000_BTI_V2DI, RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0 },\n   { P8V_BUILTIN_VEC_VBPERMQ, P8V_BUILTIN_VBPERMQ,"}, {"sha": "e2fc35a44d853d3c36dd4a7a72c1da54c6995705", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -17836,6 +17836,10 @@ vector unsigned long long vec_vaddudm (vector unsigned long long,\n vector long long vec_vbpermq (vector signed char, vector signed char);\n vector long long vec_vbpermq (vector unsigned char, vector unsigned char);\n \n+vector unsigned char vec_bperm (vector unsigned char, vector unsigned char);\n+vector unsigned long long vec_bperm (vector unsigned __int128,\n+                                     vector unsigned char);\n+\n vector long long vec_cntlz (vector long long);\n vector unsigned long long vec_cntlz (vector unsigned long long);\n vector int vec_cntlz (vector int);\n@@ -18004,6 +18008,9 @@ If the ISA 3.0 instruction set additions (@option{-mcpu=power9})\n are available:\n \n @smallexample\n+vector unsigned long long vec_bperm (vector unsigned long long,\n+                                     vector unsigned char);\n+\n vector bool char vec_cmpne (vector bool char, vector bool char);\n vector bool short vec_cmpne (vector bool short, vector bool short);\n vector bool int vec_cmpne (vector bool int, vector bool int);"}, {"sha": "08743e9467f99deb115c1a7f6f267ec21c724ba6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -1,3 +1,9 @@\n+2016-01-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/p8vector-builtin-8.c: Add new form for\n+\tvec_bperm.\n+\t* gcc.target/powerpc/p9-vbpermd.c: New file.\n+\n 2017-01-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.target/s390/htm-builtins-compile-2.c (must_not_compile1):"}, {"sha": "33347740d0cae095a2cde7b40ad503f326dc741c", "filename": "gcc/testsuite/gcc.target/powerpc/p8vector-builtin-8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-builtin-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-builtin-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-builtin-8.c?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -38,6 +38,7 @@ void foo (vector unsigned char *vucr,\n   *vuxr++ = vec_adde (vuxa, vuxb, vuxc);\n   *vsxr++ = vec_addec (vsxa, vsxb, vsxc);\n   *vuxr++ = vec_addec (vuxa, vuxb, vuxc);\n+  *vucr++ = vec_bperm (vuca, vucb);\n   *vulr++ = vec_bperm (vuxa, vucb);\n   *vbcr++ = vec_eqv (vbca, vbcb);\n   *vbir++ = vec_eqv (vbia, vbib);\n@@ -64,7 +65,7 @@ void foo (vector unsigned char *vucr,\n /* { dg-final { scan-assembler-times \"vaddcuq\" 2 } } */\n /* { dg-final { scan-assembler-times \"vaddeuqm\" 2 } } */\n /* { dg-final { scan-assembler-times \"vaddecuq\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vbpermq\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vbpermq\" 2 } } */\n /* { dg-final { scan-assembler-times \"xxleqv\" 4 } } */\n /* { dg-final { scan-assembler-times \"vgbbd\" 1 } } */\n /* { dg-final { scan-assembler-times \"xxlnand\" 4 } } */"}, {"sha": "fefefdd7a26e06bf3b9fa606cf4de38d989ab5a6", "filename": "gcc/testsuite/gcc.target/powerpc/p9-vbpermd.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vbpermd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc42f08cec61d355f2e1fc24d37b1300c68dceb/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vbpermd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp9-vbpermd.c?ref=dfc42f08cec61d355f2e1fc24d37b1300c68dceb", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target { powerpc64*-*-* } } } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power9\" } } */\n+/* { dg-require-effective-target powerpc_p9vector_ok } */\n+/* { dg-options \"-mcpu=power9 -O2\" } */\n+\n+/* Verify P9 vector bit-permute doubleword instruction.  */\n+\n+#include <altivec.h>\n+\n+vector unsigned long long\n+test_vbpermd (vector unsigned long long a, vector unsigned char b)\n+{\n+  return vec_bperm (a, b);\n+}\n+\n+/* { dg-final { scan-assembler \"vbpermd\" } } */"}]}