{"sha": "0df864ed1d24bbb0cf7504814e2f48e496ea5669", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRmODY0ZWQxZDI0YmJiMGNmNzUwNDgxNGUyZjQ4ZTQ5NmVhNTY2OQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-05-14T19:15:55Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-05-15T19:04:44Z"}, "message": "rs6000: Add -mrop-protect and -mprivileged flags\n\n2021-05-14  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal):\n\tDisable shrink wrap when inserting ROP-protect instructions.\n\t* config/rs6000/rs6000.opt (mrop-protect): New option.\n\t(mprivileged): Likewise.\n\t* doc/invoke.texi: Document mrop-protect and mprivileged.", "tree": {"sha": "d5365a837de269765543ca4ec09fbd7f81e30be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5365a837de269765543ca4ec09fbd7f81e30be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0df864ed1d24bbb0cf7504814e2f48e496ea5669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df864ed1d24bbb0cf7504814e2f48e496ea5669", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df864ed1d24bbb0cf7504814e2f48e496ea5669", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df864ed1d24bbb0cf7504814e2f48e496ea5669/comments", "author": null, "committer": null, "parents": [{"sha": "57d2342fbb55f73ef29ca186744663b320352c92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d2342fbb55f73ef29ca186744663b320352c92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d2342fbb55f73ef29ca186744663b320352c92"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "53a9f5411c794964095246fdf0588b396b78bd7d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df864ed1d24bbb0cf7504814e2f48e496ea5669/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df864ed1d24bbb0cf7504814e2f48e496ea5669/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=0df864ed1d24bbb0cf7504814e2f48e496ea5669", "patch": "@@ -4040,6 +4040,10 @@ rs6000_option_override_internal (bool global_init_p)\n       && ((rs6000_isa_flags_explicit & OPTION_MASK_QUAD_MEMORY_ATOMIC) == 0))\n     rs6000_isa_flags |= OPTION_MASK_QUAD_MEMORY_ATOMIC;\n \n+  /* If we are inserting ROP-protect instructions, disable shrink wrap.  */\n+  if (rs6000_rop_protect)\n+    flag_shrink_wrap = 0;\n+\n   /* If we can shrink-wrap the TOC register save separately, then use\n      -msave-toc-indirect unless explicitly disabled.  */\n   if ((rs6000_isa_flags_explicit & OPTION_MASK_SAVE_TOC_INDIRECT) == 0"}, {"sha": "2685fa715176ed6782f3ea2b17e95b29c0dfcdc6", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df864ed1d24bbb0cf7504814e2f48e496ea5669/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df864ed1d24bbb0cf7504814e2f48e496ea5669/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=0df864ed1d24bbb0cf7504814e2f48e496ea5669", "patch": "@@ -619,3 +619,11 @@ Generate (do not generate) MMA instructions.\n \n mrelative-jumptables\n Target Undocumented Var(rs6000_relative_jumptables) Init(1) Save\n+\n+mrop-protect\n+Target Var(rs6000_rop_protect) Init(0)\n+Enable instructions that guard against return-oriented programming attacks.\n+\n+mprivileged\n+Target Var(rs6000_privileged) Init(0)\n+Generate code that will run in privileged state."}, {"sha": "9cb84210cd09b8c3db89b14b6329dc0a2f1d819c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df864ed1d24bbb0cf7504814e2f48e496ea5669/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df864ed1d24bbb0cf7504814e2f48e496ea5669/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0df864ed1d24bbb0cf7504814e2f48e496ea5669", "patch": "@@ -1240,7 +1240,8 @@ See RS/6000 and PowerPC Options.\n -mgnu-attribute  -mno-gnu-attribute @gol\n -mstack-protector-guard=@var{guard} -mstack-protector-guard-reg=@var{reg} @gol\n -mstack-protector-guard-offset=@var{offset} -mprefixed -mno-prefixed @gol\n--mpcrel -mno-pcrel -mmma -mno-mmma}\n+-mpcrel -mno-pcrel -mmma -mno-mmma -mrop-protect -mno-rop-protect @gol\n+-mprivileged -mno-privileged}\n \n @emph{RX Options}\n @gccoptlist{-m64bit-doubles  -m32bit-doubles  -fpu  -nofpu@gol\n@@ -27029,7 +27030,8 @@ following options:\n -mmulhw  -mdlmzb  -mmfpgpr  -mvsx @gol\n -mcrypto  -mhtm  -mpower8-fusion  -mpower8-vector @gol\n -mquad-memory  -mquad-memory-atomic  -mfloat128 @gol\n--mfloat128-hardware -mprefixed -mpcrel -mmma}\n+-mfloat128-hardware -mprefixed -mpcrel -mmma @gol\n+-mrop-protect}\n \n The particular options set for any particular CPU varies between\n compiler versions, depending on what setting seems to produce optimal\n@@ -28034,6 +28036,20 @@ store instructions when the option @option{-mcpu=future} is used.\n Generate (do not generate) the MMA instructions when the option\n @option{-mcpu=future} is used.\n \n+@item -mrop-protect\n+@itemx -mno-rop-protect\n+@opindex mrop-protect\n+@opindex mno-rop-protect\n+Generate (do not generate) ROP protection instructions when the target\n+processor supports them.  Currently this option disables the shrink-wrap\n+optimization (@option{-fshrink-wrap}).\n+\n+@item -mprivileged\n+@itemx -mno-privileged\n+@opindex mprivileged\n+@opindex mno-privileged\n+Generate (do not generate) code that will run in privileged state.\n+\n @item -mblock-ops-unaligned-vsx\n @itemx -mno-block-ops-unaligned-vsx\n @opindex block-ops-unaligned-vsx"}]}