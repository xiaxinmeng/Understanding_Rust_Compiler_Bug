{"sha": "76d6782207c44f95f77a185228ca7a1e15a9f615", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZkNjc4MjIwN2M0NGY5NWY3N2ExODUyMjhjYTdhMWUxNWE5ZjYxNQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-22T19:39:37Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-22T20:50:23Z"}, "message": "Use precision and sign to compare types for ranges\n\nUpdated to only use range_compatible_p in range assert sanity checks,\nnot for actual type cmpatibility.\n\n\t* gimple-range-gori.cc (is_gimple_logical_p): Use types_compatible_p\n\tfor logical compatibility.\n\t(logical_stmt_cache::cacheable_p): Ditto.", "tree": {"sha": "40da07c835d0bbedae936ffbfb46aa2c887975c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40da07c835d0bbedae936ffbfb46aa2c887975c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76d6782207c44f95f77a185228ca7a1e15a9f615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d6782207c44f95f77a185228ca7a1e15a9f615", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76d6782207c44f95f77a185228ca7a1e15a9f615", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76d6782207c44f95f77a185228ca7a1e15a9f615/comments", "author": null, "committer": null, "parents": [{"sha": "f5d9bc8ae81abe46640477bc9e655aa093947f5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d9bc8ae81abe46640477bc9e655aa093947f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d9bc8ae81abe46640477bc9e655aa093947f5f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5d50b111d2ae582f21f366f1bf4dbbee56fd7484", "filename": "gcc/gimple-range-gori.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76d6782207c44f95f77a185228ca7a1e15a9f615/gcc%2Fgimple-range-gori.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76d6782207c44f95f77a185228ca7a1e15a9f615/gcc%2Fgimple-range-gori.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-gori.cc?ref=76d6782207c44f95f77a185228ca7a1e15a9f615", "patch": "@@ -552,7 +552,7 @@ is_gimple_logical_p (const gimple *gs)\n \tcase BIT_AND_EXPR:\n \tcase BIT_IOR_EXPR:\n \t  // Bitwise operations on single bits are logical too.\n-\t  if (range_compatible_p (TREE_TYPE (gimple_assign_rhs1 (gs)),\n+\t  if (types_compatible_p (TREE_TYPE (gimple_assign_rhs1 (gs)),\n \t\t\t\t  boolean_type_node))\n \t    return true;\n \t  break;\n@@ -1165,7 +1165,7 @@ bool\n logical_stmt_cache::cacheable_p (gimple *stmt, const irange *lhs_range) const\n {\n   if (gimple_code (stmt) == GIMPLE_ASSIGN\n-      && range_compatible_p (TREE_TYPE (gimple_assign_lhs (stmt)),\n+      && types_compatible_p (TREE_TYPE (gimple_assign_lhs (stmt)),\n \t\t\t     boolean_type_node)\n       && TREE_CODE (gimple_assign_rhs1 (stmt)) == SSA_NAME)\n     {"}]}