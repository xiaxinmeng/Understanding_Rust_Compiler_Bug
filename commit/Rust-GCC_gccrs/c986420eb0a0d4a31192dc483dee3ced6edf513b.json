{"sha": "c986420eb0a0d4a31192dc483dee3ced6edf513b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4NjQyMGViMGEwZDRhMzExOTJkYzQ4M2RlZTNjZWQ2ZWRmNTEzYg==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2008-05-26T15:15:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-26T15:15:05Z"}, "message": "2008-05-26  Doug Rupp  <rupp@adacore.com>\n\n\t* s-vaflop.adb:\n\t(Return_D, Return_F, Return_G): New functions.\n\n\t* s-vaflop.ads:\n\t(Return_D, Return_F, Return_G): New functions.\n\n\t* exp_vfpt.adb:\n\t(Expand_Vax_Foreign_Return): New procedure\n\n\t* exp_vfpt.ads:\n\t(Expand_Vax_Foreign_Return): New procedure\n\n\t* rtsfind.ads:\n\t(RE_Return_D, RE_Return_F, RE_Return_G): New RE_Ids\n\t(RE_Return_D, RE_Return_F, RE_Return_G): New RE_Unit_Table elements\n\n\t* exp_ch6.adb:\n\tImport Exp_Vfpt\n\t(Expand_N_Function_Call): Call Expand_Vax_Foreign_Return.\n\n\t* s-vaflop-vms-alpha.adb:\n\t(Return_D, Return_F, Return_G): New functions.\n\nFrom-SVN: r135937", "tree": {"sha": "5e0a6811cf8fd2ec5c50fc4076e9568d472fb65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e0a6811cf8fd2ec5c50fc4076e9568d472fb65b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c986420eb0a0d4a31192dc483dee3ced6edf513b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c986420eb0a0d4a31192dc483dee3ced6edf513b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c986420eb0a0d4a31192dc483dee3ced6edf513b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c986420eb0a0d4a31192dc483dee3ced6edf513b/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66996b300c2b5e0f50e1eeec02cb1c898de4f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a66996b300c2b5e0f50e1eeec02cb1c898de4f19"}], "stats": {"total": 237, "additions": 189, "deletions": 48}, "files": [{"sha": "804fcd6ba361afd5c41371fbcf11d0bd085fb019", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -41,6 +41,7 @@ with Exp_Intr; use Exp_Intr;\n with Exp_Pakd; use Exp_Pakd;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n+with Exp_VFpt; use Exp_VFpt;\n with Fname;    use Fname;\n with Freeze;   use Freeze;\n with Inline;   use Inline;\n@@ -3963,6 +3964,19 @@ package body Exp_Ch6 is\n    procedure Expand_N_Function_Call (N : Node_Id) is\n    begin\n       Expand_Call (N);\n+\n+      --  Handle VAX Float return values from foreign compiled\n+      --  functions.\n+      if Vax_Float (Etype (N))\n+        and then Nkind (N) = N_Function_Call\n+        and then not (Nkind (Parent (N)) = N_Type_Conversion\n+                      and then not Comes_From_Source (Parent (N)))\n+        and then Present (Name (N))\n+        and then Present (Entity (Name (N)))\n+        and then Has_Foreign_Convention (Entity (Name (N)))\n+      then\n+         Expand_Vax_Foreign_Return (N);\n+      end if;\n    end Expand_N_Function_Call;\n \n    ---------------------------------------"}, {"sha": "612842952f5dbf10c93802debfe24d5c4878f8a0", "filename": "gcc/ada/exp_vfpt.adb", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fexp_vfpt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fexp_vfpt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_vfpt.adb?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -443,6 +443,41 @@ package body Exp_VFpt is\n       Analyze_And_Resolve (N, T_Typ, Suppress => All_Checks);\n    end Expand_Vax_Conversion;\n \n+   -------------------------------\n+   -- Expand_Vax_Foreign_Return --\n+   -------------------------------\n+\n+   procedure Expand_Vax_Foreign_Return (N : Node_Id) is\n+      Loc  : constant Source_Ptr := Sloc (N);\n+      Typ  : constant Entity_Id  := Base_Type (Etype (N));\n+      Func : RE_Id;\n+      Args : List_Id;\n+      Atyp : Entity_Id;\n+      Rtyp : constant Entity_Id  := Etype (N);\n+   begin\n+      if Digits_Value (Typ) = VAXFF_Digits then\n+         Func := RE_Return_F;\n+         Atyp := RTE (RE_F);\n+      elsif Digits_Value (Typ) = VAXDF_Digits then\n+         Func := RE_Return_D;\n+         Atyp := RTE (RE_D);\n+      else pragma Assert (Digits_Value (Typ) = VAXGF_Digits);\n+         Func := RE_Return_G;\n+         Atyp := RTE (RE_G);\n+      end if;\n+\n+      Args := New_List (Convert_To (Atyp, N));\n+\n+      Rewrite (N,\n+        Convert_To (Rtyp,\n+          Make_Function_Call (Loc,\n+            Name => New_Occurrence_Of (RTE (Func), Loc),\n+            Parameter_Associations => Args)));\n+\n+      Analyze_And_Resolve (N, Typ, Suppress => All_Checks);\n+\n+   end Expand_Vax_Foreign_Return;\n+\n    -----------------------------\n    -- Expand_Vax_Real_Literal --\n    -----------------------------"}, {"sha": "8bf02e79fd8e552ae2193cb0bfbdf588e080c159", "filename": "gcc/ada/exp_vfpt.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fexp_vfpt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fexp_vfpt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_vfpt.ads?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,6 +45,10 @@ package Exp_VFpt is\n    --  The node N is a type conversion node where either the source or the\n    --  target type, or both, are Vax floating-point type.\n \n+   procedure Expand_Vax_Foreign_Return (N : Node_Id);\n+   --  The node N is a call to a foreign function that returns a Vax\n+   --  float value in a floating point register.\n+\n    procedure Expand_Vax_Real_Literal (N : Node_Id);\n    --  The node N is a real literal node where the type is a Vax floating-point\n    --  type. This procedure rewrites the node to eliminate the occurrence of"}, {"sha": "76110c036efdc4baf581110f1eb7b7c4fc38800d", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -1452,6 +1452,9 @@ package Rtsfind is\n      RE_Mul_G,                           -- System.Vax_Float_Operations\n      RE_Neg_F,                           -- System.Vax_Float_Operations\n      RE_Neg_G,                           -- System.Vax_Float_Operations\n+     RE_Return_D,                        -- System.Vax_Float_Operations\n+     RE_Return_F,                        -- System.Vax_Float_Operations\n+     RE_Return_G,                        -- System.Vax_Float_Operations\n      RE_Sub_F,                           -- System.Vax_Float_Operations\n      RE_Sub_G,                           -- System.Vax_Float_Operations\n \n@@ -2584,6 +2587,9 @@ package Rtsfind is\n      RE_Mul_G                            => System_Vax_Float_Operations,\n      RE_Neg_F                            => System_Vax_Float_Operations,\n      RE_Neg_G                            => System_Vax_Float_Operations,\n+     RE_Return_D                         => System_Vax_Float_Operations,\n+     RE_Return_F                         => System_Vax_Float_Operations,\n+     RE_Return_G                         => System_Vax_Float_Operations,\n      RE_Sub_F                            => System_Vax_Float_Operations,\n      RE_Sub_G                            => System_Vax_Float_Operations,\n "}, {"sha": "24c4b53829fb8e8fb3641a94860153404a6427aa", "filename": "gcc/ada/s-vaflop-vms-alpha.adb", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fs-vaflop-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop-vms-alpha.adb?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2008, Free Software Foundation, Inc.         --\n --                       (Version for Alpha OpenVMS)                        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n@@ -648,6 +648,49 @@ package body System.Vax_Float_Operations is\n       Put_Line (G'Image (Arg));\n    end pg;\n \n+   --------------\n+   -- Return_D --\n+   --------------\n+\n+   function Return_D (X : D) return D is\n+      R : D;\n+   begin\n+      --  The return value is already in $f0 so we need to trick the compiler\n+      --  into thinking that we're moving X to $f0.\n+      Asm (\"cvtdg $f0,$f0\", Inputs => D'Asm_Input (\"g\", X), Clobber => \"$f0\",\n+        Volatile => True);\n+      Asm (\"stg $f0,%0\", D'Asm_Output (\"=m\", R), Volatile => True);\n+      return R;\n+   end Return_D;\n+\n+   --------------\n+   -- Return_F --\n+   --------------\n+\n+   function Return_F (X : F) return F is\n+      R : F;\n+   begin\n+      --  The return value is already in $f0 so we need to trick the compiler\n+      --  into thinking that we're moving X to $f0.\n+      Asm (\"stf $f0,%0\", F'Asm_Output (\"=m\", R), F'Asm_Input (\"g\", X),\n+        Clobber => \"$f0\", Volatile => True);\n+      return R;\n+   end Return_F;\n+\n+   --------------\n+   -- Return_G --\n+   --------------\n+\n+   function Return_G (X : G) return G is\n+      R : G;\n+   begin\n+      --  The return value is already in $f0 so we need to trick the compiler\n+      --  into thinking that we're moving X to $f0.\n+      Asm (\"stg $f0,%0\", G'Asm_Output (\"=m\", R), G'Asm_Input (\"g\", X),\n+        Clobber => \"$f0\", Volatile => True);\n+      return R;\n+   end Return_G;\n+\n    -----------\n    -- Sub_F --\n    -----------"}, {"sha": "79e295f94c14451e01168bd6d7f47d428830542f", "filename": "gcc/ada/s-vaflop.adb", "status": "modified", "additions": 34, "deletions": 7, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fs-vaflop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fs-vaflop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop.adb?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -37,7 +37,7 @@\n --  case where the -gnatdm switch is used to force testing of VMS features\n --  on non-VMS systems.\n \n-with System.IO; use System.IO;\n+with System.IO;\n \n package body System.Vax_Float_Operations is\n    pragma Warnings (Off);\n@@ -94,7 +94,7 @@ package body System.Vax_Float_Operations is\n \n    procedure Debug_Output_D (Arg : D) is\n    begin\n-      Put (D'Image (Arg));\n+      System.IO.Put (D'Image (Arg));\n    end Debug_Output_D;\n \n    --------------------\n@@ -103,7 +103,7 @@ package body System.Vax_Float_Operations is\n \n    procedure Debug_Output_F (Arg : F) is\n    begin\n-      Put (F'Image (Arg));\n+      System.IO.Put (F'Image (Arg));\n    end Debug_Output_F;\n \n    --------------------\n@@ -112,7 +112,7 @@ package body System.Vax_Float_Operations is\n \n    procedure Debug_Output_G (Arg : G) is\n    begin\n-      Put (G'Image (Arg));\n+      System.IO.Put (G'Image (Arg));\n    end Debug_Output_G;\n \n    --------------------\n@@ -352,7 +352,7 @@ package body System.Vax_Float_Operations is\n \n    procedure pd (Arg : D) is\n    begin\n-      Put_Line (D'Image (Arg));\n+      System.IO.Put_Line (D'Image (Arg));\n    end pd;\n \n    --------\n@@ -361,7 +361,7 @@ package body System.Vax_Float_Operations is\n \n    procedure pf (Arg : F) is\n    begin\n-      Put_Line (F'Image (Arg));\n+      System.IO.Put_Line (F'Image (Arg));\n    end pf;\n \n    --------\n@@ -370,7 +370,7 @@ package body System.Vax_Float_Operations is\n \n    procedure pg (Arg : G) is\n    begin\n-      Put_Line (G'Image (Arg));\n+      System.IO.Put_Line (G'Image (Arg));\n    end pg;\n \n    ------------\n@@ -400,6 +400,33 @@ package body System.Vax_Float_Operations is\n       return F (X);\n    end S_To_F;\n \n+   --------------\n+   -- Return_D --\n+   --------------\n+\n+   function Return_D (X : D) return D is\n+   begin\n+      return X;\n+   end Return_D;\n+\n+   --------------\n+   -- Return_F --\n+   --------------\n+\n+   function Return_F (X : F) return F is\n+   begin\n+      return X;\n+   end Return_F;\n+\n+   --------------\n+   -- Return_G --\n+   --------------\n+\n+   function Return_G (X : G) return G is\n+   begin\n+      return X;\n+   end Return_G;\n+\n    -----------\n    -- Sub_F --\n    -----------"}, {"sha": "d32fe9cb479298deac6e18316f0d4b7761bcf0fb", "filename": "gcc/ada/s-vaflop.ads", "status": "modified", "additions": 50, "deletions": 38, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fs-vaflop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c986420eb0a0d4a31192dc483dee3ced6edf513b/gcc%2Fada%2Fs-vaflop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vaflop.ads?ref=c986420eb0a0d4a31192dc483dee3ced6edf513b", "patch": "@@ -143,6 +143,15 @@ package System.Vax_Float_Operations is\n    function Ne_G (X, Y : G) return Boolean;\n    --  Compares for X /= Y\n \n+   ----------------------\n+   -- Return Functions --\n+   ----------------------\n+\n+   function Return_D (X : D) return D;\n+   function Return_F (X : F) return F;\n+   function Return_G (X : G) return G;\n+   --  Adjust the return register of an imported function\n+\n    ----------------------------------\n    -- Routines for Valid Attribute --\n    ----------------------------------\n@@ -190,43 +199,46 @@ package System.Vax_Float_Operations is\n    --  types, and are retained for backwards compatibility.\n \n private\n-   pragma Inline (D_To_G);\n-   pragma Inline (F_To_G);\n-   pragma Inline (F_To_Q);\n-   pragma Inline (F_To_S);\n-   pragma Inline (G_To_D);\n-   pragma Inline (G_To_F);\n-   pragma Inline (G_To_Q);\n-   pragma Inline (G_To_T);\n-   pragma Inline (Q_To_F);\n-   pragma Inline (Q_To_G);\n-   pragma Inline (S_To_F);\n-   pragma Inline (T_To_G);\n-\n-   pragma Inline (Abs_F);\n-   pragma Inline (Abs_G);\n-   pragma Inline (Add_F);\n-   pragma Inline (Add_G);\n-   pragma Inline (Div_G);\n-   pragma Inline (Div_F);\n-   pragma Inline (Mul_F);\n-   pragma Inline (Mul_G);\n-   pragma Inline (Neg_G);\n-   pragma Inline (Neg_F);\n-   pragma Inline (Sub_F);\n-   pragma Inline (Sub_G);\n-\n-   pragma Inline (Eq_F);\n-   pragma Inline (Eq_G);\n-   pragma Inline (Le_F);\n-   pragma Inline (Le_G);\n-   pragma Inline (Lt_F);\n-   pragma Inline (Lt_G);\n-   pragma Inline (Ne_F);\n-   pragma Inline (Ne_G);\n-\n-   pragma Inline (Valid_D);\n-   pragma Inline (Valid_F);\n-   pragma Inline (Valid_G);\n+   pragma Inline_Always (D_To_G);\n+   pragma Inline_Always (F_To_G);\n+   pragma Inline_Always (F_To_Q);\n+   pragma Inline_Always (F_To_S);\n+   pragma Inline_Always (G_To_D);\n+   pragma Inline_Always (G_To_F);\n+   pragma Inline_Always (G_To_Q);\n+   pragma Inline_Always (G_To_T);\n+   pragma Inline_Always (Q_To_F);\n+   pragma Inline_Always (Q_To_G);\n+   pragma Inline_Always (S_To_F);\n+   pragma Inline_Always (T_To_G);\n+\n+   pragma Inline_Always (Abs_F);\n+   pragma Inline_Always (Abs_G);\n+   pragma Inline_Always (Add_F);\n+   pragma Inline_Always (Add_G);\n+   pragma Inline_Always (Div_G);\n+   pragma Inline_Always (Div_F);\n+   pragma Inline_Always (Mul_F);\n+   pragma Inline_Always (Mul_G);\n+   pragma Inline_Always (Neg_G);\n+   pragma Inline_Always (Neg_F);\n+   pragma Inline_Always (Return_D);\n+   pragma Inline_Always (Return_F);\n+   pragma Inline_Always (Return_G);\n+   pragma Inline_Always (Sub_F);\n+   pragma Inline_Always (Sub_G);\n+\n+   pragma Inline_Always (Eq_F);\n+   pragma Inline_Always (Eq_G);\n+   pragma Inline_Always (Le_F);\n+   pragma Inline_Always (Le_G);\n+   pragma Inline_Always (Lt_F);\n+   pragma Inline_Always (Lt_G);\n+   pragma Inline_Always (Ne_F);\n+   pragma Inline_Always (Ne_G);\n+\n+   pragma Inline_Always (Valid_D);\n+   pragma Inline_Always (Valid_F);\n+   pragma Inline_Always (Valid_G);\n \n end System.Vax_Float_Operations;"}]}