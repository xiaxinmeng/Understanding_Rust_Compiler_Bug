{"sha": "c889b2e8acc706b2c9fe6559c0094ce7785c3583", "node_id": "C_kwDOANBUbNoAKGM4ODliMmU4YWNjNzA2YjJjOWZlNjU1OWMwMDk0Y2U3Nzg1YzM1ODM", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-08-15T23:58:36Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-06T07:14:22Z"}, "message": "[Ada] Slice length computation bug in Generic_Bounded_Length generics\n\nIn some cases involving null slices, the Slice subprograms (both the\n  function and the procedure) in each of the three Generic_Bounded_Length\n  generic packages (for String, Wide_String, and Wide_Wide_String)\n  could raise Constraint_Error in cases where this is incorrect.\n\ngcc/ada/\n\n\t* libgnat/a-strsup.adb, libgnat/a-stwisu.adb, libgnat/a-stzsup.adb\n\t(Super_Slice function and procedure): fix slice length computation.", "tree": {"sha": "e2d75076bd066e5e6ca6244b16f62207ce5e4257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2d75076bd066e5e6ca6244b16f62207ce5e4257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c889b2e8acc706b2c9fe6559c0094ce7785c3583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c889b2e8acc706b2c9fe6559c0094ce7785c3583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c889b2e8acc706b2c9fe6559c0094ce7785c3583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c889b2e8acc706b2c9fe6559c0094ce7785c3583/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2aef4695708f807f44ff531f0c489907f92e05ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aef4695708f807f44ff531f0c489907f92e05ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aef4695708f807f44ff531f0c489907f92e05ad"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "831a18e1e19a4e1602108d325e3afbc82f713a59", "filename": "gcc/ada/libgnat/a-strsup.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c889b2e8acc706b2c9fe6559c0094ce7785c3583/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c889b2e8acc706b2c9fe6559c0094ce7785c3583/gcc%2Fada%2Flibgnat%2Fa-strsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsup.adb?ref=c889b2e8acc706b2c9fe6559c0094ce7785c3583", "patch": "@@ -1651,10 +1651,9 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n             raise Index_Error;\n          end if;\n \n-         if High >= Low then\n-            Result.Data (1 .. High - Low + 1) := Source.Data (Low .. High);\n-            Result.Current_Length := High - Low + 1;\n-         end if;\n+         Result.Current_Length := (if Low > High then 0 else High - Low + 1);\n+         Result.Data (1 .. Result.Current_Length) :=\n+           Source.Data (Low .. High);\n       end return;\n    end Super_Slice;\n \n@@ -1671,12 +1670,8 @@ package body Ada.Strings.Superbounded with SPARK_Mode is\n          raise Index_Error;\n       end if;\n \n-      if High >= Low then\n-         Target.Data (1 .. High - Low + 1) := Source.Data (Low .. High);\n-         Target.Current_Length := High - Low + 1;\n-      else\n-         Target.Current_Length := 0;\n-      end if;\n+      Target.Current_Length := (if Low > High then 0 else High - Low + 1);\n+      Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n    end Super_Slice;\n \n    ----------------"}, {"sha": "d325676edf9333e278eb6f4312d9968c293decaf", "filename": "gcc/ada/libgnat/a-stwisu.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c889b2e8acc706b2c9fe6559c0094ce7785c3583/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c889b2e8acc706b2c9fe6559c0094ce7785c3583/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stwisu.adb?ref=c889b2e8acc706b2c9fe6559c0094ce7785c3583", "patch": "@@ -1497,7 +1497,7 @@ package body Ada.Strings.Wide_Superbounded is\n             raise Index_Error;\n          end if;\n \n-         Result.Current_Length := High - Low + 1;\n+         Result.Current_Length := (if Low > High then 0 else High - Low + 1);\n          Result.Data (1 .. Result.Current_Length) := Source.Data (Low .. High);\n       end return;\n    end Super_Slice;\n@@ -1513,10 +1513,10 @@ package body Ada.Strings.Wide_Superbounded is\n         or else High > Source.Current_Length\n       then\n          raise Index_Error;\n-      else\n-         Target.Current_Length := High - Low + 1;\n-         Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n       end if;\n+\n+      Target.Current_Length := (if Low > High then 0 else High - Low + 1);\n+      Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n    end Super_Slice;\n \n    ----------------"}, {"sha": "6153bbe392f8d69a56a25ebcc41796979baf2de7", "filename": "gcc/ada/libgnat/a-stzsup.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c889b2e8acc706b2c9fe6559c0094ce7785c3583/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c889b2e8acc706b2c9fe6559c0094ce7785c3583/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stzsup.adb?ref=c889b2e8acc706b2c9fe6559c0094ce7785c3583", "patch": "@@ -1498,11 +1498,11 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n            or else High > Source.Current_Length\n          then\n             raise Index_Error;\n-         else\n-            Result.Current_Length := High - Low + 1;\n-            Result.Data (1 .. Result.Current_Length) :=\n-              Source.Data (Low .. High);\n          end if;\n+\n+         Result.Current_Length := (if Low > High then 0 else High - Low + 1);\n+         Result.Data (1 .. Result.Current_Length) :=\n+           Source.Data (Low .. High);\n       end return;\n    end Super_Slice;\n \n@@ -1517,10 +1517,10 @@ package body Ada.Strings.Wide_Wide_Superbounded is\n         or else High > Source.Current_Length\n       then\n          raise Index_Error;\n-      else\n-         Target.Current_Length := High - Low + 1;\n-         Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n       end if;\n+\n+      Target.Current_Length := (if Low > High then 0 else High - Low + 1);\n+      Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n    end Super_Slice;\n \n    ----------------"}]}