{"sha": "c2433d7d163406078b767dcc45c9426a089ce91a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI0MzNkN2QxNjM0MDYwNzhiNzY3ZGNjNDVjOTQyNmEwODljZTkxYQ==", "commit": {"author": {"name": "Frank Ch. Eigler", "email": "fche@redhat.com", "date": "2004-09-09T16:33:25Z"}, "committer": {"name": "Frank Ch. Eigler", "email": "fche@gcc.gnu.org", "date": "2004-09-09T16:33:25Z"}, "message": "builtins.c (build_va_arg_indirect_ref): New function.\n\n2004-09-09  Frank Ch. Eigler  <fche@redhat.com>\n\n\t* builtins.c (build_va_arg_indirect_ref): New function.\n\t(std_gimplify_va_arg_expr): Call it instead of mudflap check and\n\tbuild_fold_indirect_ref.\n\t* config/i386/i386.c (ix86_gimplify_va_arg): Ditto.\n\t* config/ia64/ia64.c (ia64_gimplify_va_arg): Ditto.\n\t* tree.h: Declare new function.\n\nFrom-SVN: r87242", "tree": {"sha": "1f587adaca0009118f95e3b19e9d8d3153144e06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f587adaca0009118f95e3b19e9d8d3153144e06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2433d7d163406078b767dcc45c9426a089ce91a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2433d7d163406078b767dcc45c9426a089ce91a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2433d7d163406078b767dcc45c9426a089ce91a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2433d7d163406078b767dcc45c9426a089ce91a/comments", "author": {"login": "fche", "id": 588885, "node_id": "MDQ6VXNlcjU4ODg4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fche", "html_url": "https://github.com/fche", "followers_url": "https://api.github.com/users/fche/followers", "following_url": "https://api.github.com/users/fche/following{/other_user}", "gists_url": "https://api.github.com/users/fche/gists{/gist_id}", "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fche/subscriptions", "organizations_url": "https://api.github.com/users/fche/orgs", "repos_url": "https://api.github.com/users/fche/repos", "events_url": "https://api.github.com/users/fche/events{/privacy}", "received_events_url": "https://api.github.com/users/fche/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a2caa7a8018a5f0c3b1df9710ec2baad90c24db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2caa7a8018a5f0c3b1df9710ec2baad90c24db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2caa7a8018a5f0c3b1df9710ec2baad90c24db"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "76581c8f8bef15590e2cc23d88a2ed30a9f2ed45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2433d7d163406078b767dcc45c9426a089ce91a", "patch": "@@ -1,3 +1,12 @@\n+2004-09-09  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\t* builtins.c (build_va_arg_indirect_ref): New function.\n+\t(std_gimplify_va_arg_expr): Call it instead of mudflap check and\n+\tbuild_fold_indirect_ref.\n+\t* config/i386/i386.c (ix86_gimplify_va_arg): Ditto.\n+\t* config/ia64/ia64.c (ia64_gimplify_va_arg): Ditto.\n+\t* tree.h: Declare new function.\n+\n 2004-09-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cgraphunit.c (cgraph_mark_functions_to_output): Renable node"}, {"sha": "34dceb9ef65cd0812c3628056cadcfa9f9d39488", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=c2433d7d163406078b767dcc45c9426a089ce91a", "patch": "@@ -4358,13 +4358,18 @@ std_gimplify_va_arg_expr (tree valist, tree type, tree *pre_p, tree *post_p)\n   addr = fold_convert (build_pointer_type (type), addr);\n \n   if (indirect)\n-    {\n-      addr = build_fold_indirect_ref (addr);\n-      if (flag_mudflap) /* Don't instrument va_arg INDIRECT_REF.  */\n-        mf_mark (addr);\n-    }\n+    addr = build_va_arg_indirect_ref (addr);\n+\n+  return build_va_arg_indirect_ref (addr);\n+}\n \n+/* Build an indirect-ref expression over the given TREE, which represents a\n+   piece of a va_arg() expansion.  */\n+tree\n+build_va_arg_indirect_ref (tree addr)\n+{\n   addr = build_fold_indirect_ref (addr);\n+\n   if (flag_mudflap) /* Don't instrument va_arg INDIRECT_REF.  */\n     mf_mark (addr);\n "}, {"sha": "25fa8d821ae85b43793185dd63e8cc82e79bd60e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c2433d7d163406078b767dcc45c9426a089ce91a", "patch": "@@ -3291,7 +3291,7 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n   f_ovf = TREE_CHAIN (f_fpr);\n   f_sav = TREE_CHAIN (f_ovf);\n \n-  valist = build_fold_indirect_ref (valist);\n+  valist = build_va_arg_indirect_ref (valist);\n   gpr = build (COMPONENT_REF, TREE_TYPE (f_gpr), valist, f_gpr, NULL_TREE);\n   fpr = build (COMPONENT_REF, TREE_TYPE (f_fpr), valist, f_fpr, NULL_TREE);\n   ovf = build (COMPONENT_REF, TREE_TYPE (f_ovf), valist, f_ovf, NULL_TREE);\n@@ -3440,12 +3440,12 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n \t      src_addr = fold_convert (addr_type, src_addr);\n \t      src_addr = fold (build2 (PLUS_EXPR, addr_type, src_addr,\n \t\t\t\t       size_int (src_offset)));\n-\t      src = build_fold_indirect_ref (src_addr);\n+\t      src = build_va_arg_indirect_ref (src_addr);\n \n \t      dest_addr = fold_convert (addr_type, addr);\n \t      dest_addr = fold (build2 (PLUS_EXPR, addr_type, dest_addr,\n \t\t\t\t\tsize_int (INTVAL (XEXP (slot, 1)))));\n-\t      dest = build_fold_indirect_ref (dest_addr);\n+\t      dest = build_va_arg_indirect_ref (dest_addr);\n \n \t      t = build2 (MODIFY_EXPR, void_type_node, dest, src);\n \t      gimplify_and_add (t, pre_p);\n@@ -3507,8 +3507,8 @@ ix86_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n   addr = fold_convert (ptrtype, addr);\n \n   if (indirect_p)\n-    addr = build_fold_indirect_ref (addr);\n-  return build_fold_indirect_ref (addr);\n+    addr = build_va_arg_indirect_ref (addr);\n+  return build_va_arg_indirect_ref (addr);\n }\n \f\n /* Return nonzero if OPNUM's MEM should be matched"}, {"sha": "df4487ab513368f85e6ea9c16cb3664be0e62492", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=c2433d7d163406078b767dcc45c9426a089ce91a", "patch": "@@ -3379,7 +3379,7 @@ ia64_gimplify_va_arg (tree valist, tree type, tree *pre_p, tree *post_p)\n     {\n       tree ptrtype = build_pointer_type (type);\n       tree addr = std_gimplify_va_arg_expr (valist, ptrtype, pre_p, post_p);\n-      return build_fold_indirect_ref (addr);\n+      return build_va_arg_indirect_ref (addr);\n     }\n \n   /* Aggregate arguments with alignment larger than 8 bytes start at"}, {"sha": "432a170b6deee2fefa70e840828357c5e20d2f12", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2433d7d163406078b767dcc45c9426a089ce91a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=c2433d7d163406078b767dcc45c9426a089ce91a", "patch": "@@ -3462,6 +3462,7 @@ extern tree strip_float_extensions (tree);\n extern tree simplify_builtin (tree, int);\n extern tree c_strlen (tree, int);\n extern tree std_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n+extern tree build_va_arg_indirect_ref (tree);\n \n /* In convert.c */\n extern tree strip_float_extensions (tree);"}]}