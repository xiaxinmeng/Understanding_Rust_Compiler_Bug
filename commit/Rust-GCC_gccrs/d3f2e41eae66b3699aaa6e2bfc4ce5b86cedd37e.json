{"sha": "d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNmMmU0MWVhZTY2YjM2OTlhYWE2ZTJiZmM0Y2U1Yjg2Y2VkZDM3ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-11T19:11:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-11T19:11:47Z"}, "message": "ipa.c (symbol_table::remove_unreachable_nodes): Avoid releasing bodies of thunks; comment on why.\n\n\t* ipa.c (symbol_table::remove_unreachable_nodes): Avoid releasing\n\tbodies of thunks; comment on why.\n\t* symtab.c (symtab_node::get_partitioning_class): Aliases of extern\n\tsymbols are extern.\n\nFrom-SVN: r220630", "tree": {"sha": "8ab6d8436aa96eaf64d3698bb24df0eaba1b0f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ab6d8436aa96eaf64d3698bb24df0eaba1b0f19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/comments", "author": null, "committer": null, "parents": [{"sha": "0a7d7e09c8e8aa2c79479e48bd4fee31dd0fe532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a7d7e09c8e8aa2c79479e48bd4fee31dd0fe532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a7d7e09c8e8aa2c79479e48bd4fee31dd0fe532"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "d8952092c436ac21a4a45fe2c3219b2fb9165c68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "patch": "@@ -1,3 +1,10 @@\n+2015-02-11  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa.c (symbol_table::remove_unreachable_nodes): Avoid releasing\n+\tbodies of thunks; comment on why.\n+\t* symtab.c (symtab_node::get_partitioning_class): Aliases of extern\n+\tsymbols are extern.\n+\n 2015-02-11  Richard Henderson  <rth@redhat.com>\n \n \tPR sanitize/65000"}, {"sha": "58ba3097377f714705802040c7fa09485bd73e61", "filename": "gcc/ipa.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "patch": "@@ -537,7 +537,13 @@ symbol_table::remove_unreachable_nodes (FILE *file)\n       /* If node is unreachable, remove its body.  */\n       else if (!reachable.contains (node))\n         {\n-\t  if (!body_needed_for_clonning.contains (node->decl))\n+\t  /* We keep definitions of thunks and aliases in the boundary so\n+\t     we can walk to the ultimate alias targets and function symbols\n+\t     reliably.  */\n+\t  if (node->alias || node->thunk.thunk_p)\n+\t    ;\n+\t  else if (!body_needed_for_clonning.contains (node->decl)\n+\t      && !node->alias && !node->thunk.thunk_p)\n \t    node->release_body ();\n \t  else if (!node->clone_of)\n \t    gcc_assert (in_lto_p || DECL_RESULT (node->decl));"}, {"sha": "3cdf62aeeded1dcf194363e85e77c0aca722b235", "filename": "gcc/symtab.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=d3f2e41eae66b3699aaa6e2bfc4ce5b86cedd37e", "patch": "@@ -1779,6 +1779,8 @@ symtab_node::get_partitioning_class (void)\n \n   if (varpool_node *vnode = dyn_cast <varpool_node *> (this))\n     {\n+      if (alias && definition && !ultimate_alias_target ()->definition)\n+\treturn SYMBOL_EXTERNAL;\n       /* Constant pool references use local symbol names that can not\n          be promoted global.  We should never put into a constant pool\n          objects that can not be duplicated across partitions.  */\n@@ -1790,7 +1792,7 @@ symtab_node::get_partitioning_class (void)\n      Handle them as external; compute_ltrans_boundary take care to make\n      proper things to happen (i.e. to make them appear in the boundary but\n      with body streamed, so clone can me materialized).  */\n-  else if (!dyn_cast <cgraph_node *> (this)->definition)\n+  else if (!dyn_cast <cgraph_node *> (this)->function_symbol ()->definition)\n     return SYMBOL_EXTERNAL;\n \n   /* Linker discardable symbols are duplicated to every use unless they are"}]}