{"sha": "4029a5e06387a5d222a4a7ff870404678b0054c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyOWE1ZTA2Mzg3YTVkMjIyYTRhN2ZmODcwNDA0Njc4YjAwNTRjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-08-13T17:06:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-08-13T17:06:13Z"}, "message": "re PR middle-end/57661 (ICE: SIGSEGV in verify_ssa)\n\n\tPR tree-optimization/57661\n\t* tree-inline.h (struct copy_body_data): Add blocks_to_copy field.\n\t* tree-inline.c (tree_function_versioning): Initialize it.\n\t(remap_gimple_stmt): Return GIMPLE_NOP for MEM_REF lhs clobber stmts\n\tif id->blocks_to_copy and MEM_REF's SSA_NAME is defined in a block\n\tthat is not being copied.\n\n\t* g++.dg/opt/pr57661.C: New test.\n\nFrom-SVN: r201698", "tree": {"sha": "d5c18123e7a057448dfc5369c00a76ff6e121643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5c18123e7a057448dfc5369c00a76ff6e121643"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4029a5e06387a5d222a4a7ff870404678b0054c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4029a5e06387a5d222a4a7ff870404678b0054c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4029a5e06387a5d222a4a7ff870404678b0054c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4029a5e06387a5d222a4a7ff870404678b0054c0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99c2bd544a3f84ae1716a0d8d973c98fc0534f86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c2bd544a3f84ae1716a0d8d973c98fc0534f86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c2bd544a3f84ae1716a0d8d973c98fc0534f86"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "f22f848d0bb94309a75d666f3d328f2447836dd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4029a5e06387a5d222a4a7ff870404678b0054c0", "patch": "@@ -1,5 +1,12 @@\n 2013-08-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/57661\n+\t* tree-inline.h (struct copy_body_data): Add blocks_to_copy field.\n+\t* tree-inline.c (tree_function_versioning): Initialize it.\n+\t(remap_gimple_stmt): Return GIMPLE_NOP for MEM_REF lhs clobber stmts\n+\tif id->blocks_to_copy and MEM_REF's SSA_NAME is defined in a block\n+\tthat is not being copied.\n+\n \tPR sanitizer/56417\n \t* asan.c (instrument_strlen_call): Fix typo in comment.\n \tUse char * type even for the lhs of POINTER_PLUS_EXPR."}, {"sha": "f962249b233eefe2ff98d31373ec880975a2fd7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4029a5e06387a5d222a4a7ff870404678b0054c0", "patch": "@@ -1,5 +1,8 @@\n 2013-08-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/57661\n+\t* g++.dg/opt/pr57661.C: New test.\n+\n \tPR sanitizer/56417\n \t* gcc.dg/asan/pr56417.c: New test.\n "}, {"sha": "8be9f09b633d0a336d590f154405a688fc89645e", "filename": "gcc/testsuite/g++.dg/opt/pr57661.C", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr57661.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr57661.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr57661.C?ref=4029a5e06387a5d222a4a7ff870404678b0054c0", "patch": "@@ -0,0 +1,76 @@\n+// PR tree-optimization/57661\n+// { dg-do compile }\n+// { dg-options \"-O2 -fno-tree-forwprop -std=gnu++11\" }\n+\n+template <typename>\n+struct A\n+{\n+  ~A () {}\n+};\n+template <typename _Tp>\n+using B = A <_Tp>;\n+template <typename _Tp>\n+class C : B <_Tp> {};\n+namespace N { enum D { d }; }\n+template <class>\n+struct E\n+{\n+  ~E ();\n+};\n+template <class, class V>\n+struct F : V {};\n+template <class U, class V>\n+struct G : F <U, V>\n+{\n+  N::D g1;\n+  void g2 ();\n+  void g3 ();\n+  void g4 () { g3 (); }\n+  static void g5 (G *__t) { __t->g4 (); }\n+};\n+template <class U, class V>\n+struct H : G <U, V>\n+{\n+  E <U> *h1;\n+  bool h2;\n+  ~H () throw ()\n+  {\n+    this->g2 ();\n+    if (h2)\n+      delete h1;\n+  }\n+};\n+template <class U, class V>\n+struct I : H <U, V>, E <U>\n+{\n+  G <U, V> *i;\n+  ~I () throw ()\n+  {\n+    i->g4 ();\n+  }\n+};\n+struct J\n+{\n+  typedef C <char> j1;\n+  typedef G <char, C <char>> j2;\n+  J ();\n+  j2 *j3;\n+};\n+struct K : J\n+{\n+  typedef G <char, C <char>> j2;\n+  K () { j2::g5 (this->j3); }\n+};\n+template <class U, class V>\n+void G <U, V>::g3 ()\n+{\n+  switch (g1)\n+    {\n+    case N::d:\n+      {\n+\tI <U, V> *q = (I <U, V> *) this;\n+\tq->I <U, V>::~I ();\n+      }\n+    }\n+}\n+K r;"}, {"sha": "55e527014f1148de4842e4391a2a27f477e65a1f", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=4029a5e06387a5d222a4a7ff870404678b0054c0", "patch": "@@ -1387,6 +1387,23 @@ remap_gimple_stmt (gimple stmt, copy_body_data *id)\n \t    }\n \t}\n \n+      /* For *ptr_N ={v} {CLOBBER}, if ptr_N is SSA_NAME defined\n+\t in a block that we aren't copying during tree_function_versioning,\n+\t just drop the clobber stmt.  */\n+      if (id->blocks_to_copy && gimple_clobber_p (stmt))\n+\t{\n+\t  tree lhs = gimple_assign_lhs (stmt);\n+\t  if (TREE_CODE (lhs) == MEM_REF\n+\t      && TREE_CODE (TREE_OPERAND (lhs, 0)) == SSA_NAME)\n+\t    {\n+\t      gimple def_stmt = SSA_NAME_DEF_STMT (TREE_OPERAND (lhs, 0));\n+\t      if (gimple_bb (def_stmt)\n+\t\t  && !bitmap_bit_p (id->blocks_to_copy,\n+\t\t\t\t    gimple_bb (def_stmt)->index))\n+\t\treturn gimple_build_nop ();\n+\t    }\n+\t}\n+\n       if (gimple_debug_bind_p (stmt))\n \t{\n \t  copy = gimple_build_debug_bind (gimple_debug_bind_get_var (stmt),\n@@ -5161,6 +5178,7 @@ tree_function_versioning (tree old_decl, tree new_decl,\n   id.src_node = old_version_node;\n   id.dst_node = new_version_node;\n   id.src_cfun = DECL_STRUCT_FUNCTION (old_decl);\n+  id.blocks_to_copy = blocks_to_copy;\n   if (id.src_node->ipa_transforms_to_apply.exists ())\n     {\n       vec<ipa_opt_pass> old_transforms_to_apply"}, {"sha": "620ec9777685474a88433325aed61f93add8ae6c", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4029a5e06387a5d222a4a7ff870404678b0054c0/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=4029a5e06387a5d222a4a7ff870404678b0054c0", "patch": "@@ -115,6 +115,10 @@ typedef struct copy_body_data\n   /* Entry basic block to currently copied body.  */\n   basic_block entry_bb;\n \n+  /* For partial function versioning, bitmap of bbs to be copied,\n+     otherwise NULL.  */\n+  bitmap blocks_to_copy;\n+\n   /* Debug statements that need processing.  */\n   vec<gimple> debug_stmts;\n "}]}