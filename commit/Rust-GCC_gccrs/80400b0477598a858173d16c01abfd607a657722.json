{"sha": "80400b0477598a858173d16c01abfd607a657722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0MDBiMDQ3NzU5OGE4NTgxNzNkMTZjMDFhYmZkNjA3YTY1NzcyMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-09-28T18:44:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-09-28T18:44:40Z"}, "message": "LWG 2135: terminate() in condition_variable::wait()\n\n\t* include/std/condition_variable (condition_variable::wait): Add\n\tnoexcept.\n\t* src/c++11/condition_variable.cc (condition_variable::wait): Call\n\tstd::terminate on error (DR 2135).\n\nFrom-SVN: r228217", "tree": {"sha": "4f9f3894991a0125d737d2fc928d471ccfd55731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f9f3894991a0125d737d2fc928d471ccfd55731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80400b0477598a858173d16c01abfd607a657722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80400b0477598a858173d16c01abfd607a657722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80400b0477598a858173d16c01abfd607a657722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80400b0477598a858173d16c01abfd607a657722/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7009b073c56b40b280408c0ab69957651372c42e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7009b073c56b40b280408c0ab69957651372c42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7009b073c56b40b280408c0ab69957651372c42e"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "6b2738f3aed92bf32374a3ff3c0bd67e9c90e2cd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80400b0477598a858173d16c01abfd607a657722/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80400b0477598a858173d16c01abfd607a657722/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=80400b0477598a858173d16c01abfd607a657722", "patch": "@@ -1,3 +1,10 @@\n+2015-09-28  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/condition_variable (condition_variable::wait): Add\n+\tnoexcept.\n+\t* src/c++11/condition_variable.cc (condition_variable::wait): Call\n+\tstd::terminate on error (DR 2135).\n+\n 2015-09-25  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tAvoid creating dangling references in case of nested tuples"}, {"sha": "f5f773492adeba179f422f09c00c1a9ed34688e9", "filename": "libstdc++-v3/include/std/condition_variable", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80400b0477598a858173d16c01abfd607a657722/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80400b0477598a858173d16c01abfd607a657722/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable?ref=80400b0477598a858173d16c01abfd607a657722", "patch": "@@ -89,7 +89,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     notify_all() noexcept;\n \n     void\n-    wait(unique_lock<mutex>& __lock);\n+    wait(unique_lock<mutex>& __lock) noexcept;\n \n     template<typename _Predicate>\n       void"}, {"sha": "fd850cb52119289c635eaa1eed51e304a964d4d9", "filename": "libstdc++-v3/src/c++11/condition_variable.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80400b0477598a858173d16c01abfd607a657722/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80400b0477598a858173d16c01abfd607a657722/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fcondition_variable.cc?ref=80400b0477598a858173d16c01abfd607a657722", "patch": "@@ -48,12 +48,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   }\n \n   void\n-  condition_variable::wait(unique_lock<mutex>& __lock)\n+  condition_variable::wait(unique_lock<mutex>& __lock) noexcept\n   {\n     int __e = __gthread_cond_wait(&_M_cond, __lock.mutex()->native_handle());\n \n     if (__e)\n-      __throw_system_error(__e);\n+      std::terminate();\n   }\n \n   void"}]}