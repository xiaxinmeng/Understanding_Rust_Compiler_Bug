{"sha": "15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjZTljYTIyYmMyYTFjOTk4NmZlZTA3ZmUzYjQxOTgwYjJmOTY2NQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-07-06T13:57:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-07-06T13:57:33Z"}, "message": "[multiple changes]\n\n2004-07-06  Vincent Celier  <celier@gnat.com>\n\n\t* vms_conv.ads: Minor reformatting.\n\tAlphabetical order for enumerated values of type Command_Type, to have\n\tthe command in alphabetical order for the usage.\n\n\t* vms_conv.adb (Process_Argument): Set Keep_Temporary_Files to True for\n\tthe special qualifier /KEEP_TEMPORARY_FILES (minimum 6 characters).\n\n\t* gnat_ugn.texi: Document new switch -dn for the GNAT driver.\n\n\t* makegpr.adb (Global_Archive_Exists): New global Boolean variable\n\t(Add_Archive_Path): Only add the global archive if there is one.\n\t(Build_Global_Archive): Set Global_Archive_Exists depending if there is\n\tor not any object file to put in the global archive, and don't build\n\ta global archive if there is none.\n\t(X_Switches): New table\n\t(Compile_Link_With_Gnatmake): Pass to gnatmake the -X switches stored\n\tin the X_Switches table, if any.\n\t(Initialize): Make sure the X_Switches table is empty\n\t(Scan_Arg): Record -X switches in table X_Switches\n\n\t* opt.ads (Keep_Temporary_Files): New Boolean flag, defaulted to False.\n\n\t* make.adb: Minor comment fix\n\n\t* gnatname.adb (Gnatname): When not on VMS, and gnatname has been\n\tinvoked with directory information, add the directory in front of the\n\tpath.\n\n\t* gnatchop.adb (Gnatchop): When not on VMS, and gnatchop has been\n\tinvoked with directory information, add the directory in front of the\n\tpath.\n\n\t* gnatcmd.adb (Delete_Temp_Config_Files): Only delete temporary files\n\twhen Keep_Temporary_Files is False.\n\t(GNATCmd): When not on VMS, and the GNAT driver has been invoked with\n\tdirectory information, add the directory in front of the path.\n\tWhen not on VMS, handle new switch -dn before the command to set\n\tKeep_Temporary_Files to True.\n\t(Non_VMS_Usage): Use lower case for the non VMS usage: this is valid\n\teverywhere.\n\n\t* gnatlink.adb (Gnatlink): When not on VMS, and gnatlink has been\n\tinvoked with directory information, add the directory in front of the\n\tpath.\n\n2004-07-06  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* snames.ads, snames.adb (Name_Stub): New name for the distributed\n\tsystems annex.\n\n\t* rtsfind.ads: New RTE TC_Object, for DSA/PolyORB.\n\tNew RTEs RAS_Proxy_Type and RAS_Proxy_Type_Access, for DSA.\n\n\t* g-socket.adb (To_Timeval): Fix incorrect conversion of\n\tSelector_Duration to Timeval for the case of 0.0.\n\n\t* exp_util.ads (Evolve_Or_Else): Fix overenthusiastic copy/paste of\n\tdocumentation from Evolve_And_Then.\n\n2004-07-06  Jose Ruiz  <ruiz@act-europe.fr>\n\n\t* s-taprop-tru64.adb, s-taprop-os2.adb,\n\ts-taprop-mingw.adb, s-taprop-posix.adb: Update comment.\n\n2004-07-06  Robert Dewar  <dewar@gnat.com>\n\n\t* s-osinte-hpux.ads, s-osinte-freebsd.ads,\n\ts-osinte-lynxos.ads, s-taprop-lynxos.adb, s-osinte-tru64.ads,\n\ts-osinte-aix.ads, s-osinte-irix.ads, s-taprop-irix.adb,\n\ts-interr-sigaction.adb, s-taprop-irix-athread.adb,\n\ts-osinte-hpux-dce.adb, s-taprop-hpux-dce.adb,\n\ts-taprop-linux.adb, s-taprop-dummy.adb, s-taprop-solaris.adb,\n\ts-interr-vms.adb, s-osinte-vms.ads, s-taprop-vms.adb,\n\ts-osinte-vxworks.ads, s-osprim-vxworks.adb, a-numaux-x86.adb,\n\ta-except.adb, a-exexpr.adb, a-intsig.adb, a-tags.adb,\n\ta-tags.ads, bindgen.ads, checks.adb, checks.adb,\n\tcsets.ads, einfo.ads, einfo.ads, elists.adb, exp_ch4.adb,\n\texp_ch7.adb, exp_dist.adb, exp_util.adb, freeze.adb,\n\tg-dynhta.adb, gnatmem.adb, g-regexp.adb, inline.adb,\n\ti-os2thr.ads, osint.adb, prj.adb, scng.adb, sem_cat.adb,\n\tsem_ch10.adb, sem_ch12.adb, sem_ch4.adb, sem_ch7.adb,\n\tsem_ch8.adb, sem_disp.adb, sem_prag.adb, sem_res.adb,\n\tsem_type.adb, sem_type.ads, sem_warn.adb, s-ficobl.ads,\n\ts-finimp.adb, s-htable.adb, sinfo.ads, sinput-l.ads,\n\ts-interr.adb, s-interr.ads, sprint.adb, s-tarest.adb,\n\ts-tasini.ads, s-taskin.ads, s-taskin.ads, uname.adb,\n\tvms_data.ads: Minor reformatting,\n\tFix bad box comment format.\n\n\t* gnat_rm.texi: Fix minor grammatical error\n\n\t* sem_attr.adb, exp_attr.adb: New attribute Has_Access_Values\n\n\t* sem_util.ads, sem_util.adb (Requires_Transient_Scope): Allow many\n\tmore cases of discriminated records to be recognized as not needing a\n\tsecondary stack.\n\t(Has_Access_Values): New function.\n\n\t* snames.h, snames.adb, snames.ads: New attribute Has_Access_Values\n\n\t* cstand.adb, layout.ads, layout.adb, sem_ch13.ads: Change name\n\tSet_Prim_Alignment to Set_Elem_Alignment (more accurate correspondence\n\twith LRM terminology).\n\tChange terminology in comments primitive type => elementary type.\n\n2004-07-06  Ed Schonberg  <schonberg@gnat.com>\n\n\tPR ada/15602\n\t* sem_ch7.adb (Unit_Requires_Body): For a generic package, the formal\n\tparameters do not impose any requirements on the presence of a body.\n\n2004-07-06  Ed Schonberg  <schonberg@gnat.com>\n\n\tPR ada/15593\n\t* sem_ch12.adb (Analyze_Package_Instantiation): If the generic is not a\n\tcompilation unit and is in an open scope at the point of instantiation,\n\tassume that a body may be present later.\n\n2004-07-06  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case 'Size):\n\tImprove error message when specified size is not supported.\n\n\t* sem_ch6.adb (Maybe_Primitive_Operation): A library-level subprogram\n\tis never a primitive operation.\n\nFrom-SVN: r84152", "tree": {"sha": "242c4d5505932ff31c97e368e02a5597dee1c5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/242c4d5505932ff31c97e368e02a5597dee1c5a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/comments", "author": null, "committer": null, "parents": [{"sha": "ef5732117a3c18e1ba3dc3670e6933f3c795dfcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5732117a3c18e1ba3dc3670e6933f3c795dfcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5732117a3c18e1ba3dc3670e6933f3c795dfcf"}], "stats": {"total": 3688, "additions": 2061, "deletions": 1627}, "files": [{"sha": "c2be151e536842fe669b793f8dc0cb11ae296ab2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1,3 +1,131 @@\n+2004-07-06  Vincent Celier  <celier@gnat.com>\n+\n+\t* vms_conv.ads: Minor reformatting.\n+\tAlphabetical order for enumerated values of type Command_Type, to have\n+\tthe command in alphabetical order for the usage.\n+\n+\t* vms_conv.adb (Process_Argument): Set Keep_Temporary_Files to True for\n+\tthe special qualifier /KEEP_TEMPORARY_FILES (minimum 6 characters).\n+\n+\t* gnat_ugn.texi: Document new switch -dn for the GNAT driver.\n+\n+\t* makegpr.adb (Global_Archive_Exists): New global Boolean variable\n+\t(Add_Archive_Path): Only add the global archive if there is one.\n+\t(Build_Global_Archive): Set Global_Archive_Exists depending if there is\n+\tor not any object file to put in the global archive, and don't build\n+\ta global archive if there is none.\n+\t(X_Switches): New table\n+\t(Compile_Link_With_Gnatmake): Pass to gnatmake the -X switches stored\n+\tin the X_Switches table, if any.\n+\t(Initialize): Make sure the X_Switches table is empty\n+\t(Scan_Arg): Record -X switches in table X_Switches\n+\n+\t* opt.ads (Keep_Temporary_Files): New Boolean flag, defaulted to False.\n+\n+\t* make.adb: Minor comment fix\n+\n+\t* gnatname.adb (Gnatname): When not on VMS, and gnatname has been\n+\tinvoked with directory information, add the directory in front of the\n+\tpath.\n+\n+\t* gnatchop.adb (Gnatchop): When not on VMS, and gnatchop has been\n+\tinvoked with directory information, add the directory in front of the\n+\tpath.\n+\n+\t* gnatcmd.adb (Delete_Temp_Config_Files): Only delete temporary files\n+\twhen Keep_Temporary_Files is False.\n+\t(GNATCmd): When not on VMS, and the GNAT driver has been invoked with\n+\tdirectory information, add the directory in front of the path.\n+\tWhen not on VMS, handle new switch -dn before the command to set\n+\tKeep_Temporary_Files to True.\n+\t(Non_VMS_Usage): Use lower case for the non VMS usage: this is valid\n+\teverywhere.\n+\n+\t* gnatlink.adb (Gnatlink): When not on VMS, and gnatlink has been\n+\tinvoked with directory information, add the directory in front of the\n+\tpath.\n+\n+2004-07-06  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* snames.ads, snames.adb (Name_Stub): New name for the distributed\n+\tsystems annex.\n+\n+\t* rtsfind.ads: New RTE TC_Object, for DSA/PolyORB.\n+\tNew RTEs RAS_Proxy_Type and RAS_Proxy_Type_Access, for DSA.\n+\n+\t* g-socket.adb (To_Timeval): Fix incorrect conversion of\n+\tSelector_Duration to Timeval for the case of 0.0.\n+\n+\t* exp_util.ads (Evolve_Or_Else): Fix overenthusiastic copy/paste of\n+\tdocumentation from Evolve_And_Then.\n+\n+2004-07-06  Jose Ruiz  <ruiz@act-europe.fr>\n+\n+\t* s-taprop-tru64.adb, s-taprop-os2.adb,\n+\ts-taprop-mingw.adb, s-taprop-posix.adb: Update comment.\n+\n+2004-07-06  Robert Dewar  <dewar@gnat.com>\n+\n+\t* s-osinte-hpux.ads, s-osinte-freebsd.ads,\n+\ts-osinte-lynxos.ads, s-taprop-lynxos.adb, s-osinte-tru64.ads,\n+\ts-osinte-aix.ads, s-osinte-irix.ads, s-taprop-irix.adb,\n+\ts-interr-sigaction.adb, s-taprop-irix-athread.adb,\n+\ts-osinte-hpux-dce.adb, s-taprop-hpux-dce.adb,\n+\ts-taprop-linux.adb, s-taprop-dummy.adb, s-taprop-solaris.adb,\n+\ts-interr-vms.adb, s-osinte-vms.ads, s-taprop-vms.adb,\n+\ts-osinte-vxworks.ads, s-osprim-vxworks.adb, a-numaux-x86.adb,\n+\ta-except.adb, a-exexpr.adb, a-intsig.adb, a-tags.adb,\n+\ta-tags.ads, bindgen.ads, checks.adb, checks.adb,\n+\tcsets.ads, einfo.ads, einfo.ads, elists.adb, exp_ch4.adb,\n+\texp_ch7.adb, exp_dist.adb, exp_util.adb, freeze.adb,\n+\tg-dynhta.adb, gnatmem.adb, g-regexp.adb, inline.adb,\n+\ti-os2thr.ads, osint.adb, prj.adb, scng.adb, sem_cat.adb,\n+\tsem_ch10.adb, sem_ch12.adb, sem_ch4.adb, sem_ch7.adb,\n+\tsem_ch8.adb, sem_disp.adb, sem_prag.adb, sem_res.adb,\n+\tsem_type.adb, sem_type.ads, sem_warn.adb, s-ficobl.ads,\n+\ts-finimp.adb, s-htable.adb, sinfo.ads, sinput-l.ads,\n+\ts-interr.adb, s-interr.ads, sprint.adb, s-tarest.adb,\n+\ts-tasini.ads, s-taskin.ads, s-taskin.ads, uname.adb,\n+\tvms_data.ads: Minor reformatting,\n+\tFix bad box comment format.\n+\n+\t* gnat_rm.texi: Fix minor grammatical error\n+\n+\t* sem_attr.adb, exp_attr.adb: New attribute Has_Access_Values\n+\n+\t* sem_util.ads, sem_util.adb (Requires_Transient_Scope): Allow many\n+\tmore cases of discriminated records to be recognized as not needing a\n+\tsecondary stack.\n+\t(Has_Access_Values): New function.\n+\n+\t* snames.h, snames.adb, snames.ads: New attribute Has_Access_Values\n+\n+\t* cstand.adb, layout.ads, layout.adb, sem_ch13.ads: Change name\n+\tSet_Prim_Alignment to Set_Elem_Alignment (more accurate correspondence\n+\twith LRM terminology).\n+\tChange terminology in comments primitive type => elementary type.\n+\n+2004-07-06  Ed Schonberg  <schonberg@gnat.com>\n+\n+\tPR ada/15602\n+\t* sem_ch7.adb (Unit_Requires_Body): For a generic package, the formal\n+\tparameters do not impose any requirements on the presence of a body.\n+\n+2004-07-06  Ed Schonberg  <schonberg@gnat.com>\n+\n+\tPR ada/15593\n+\t* sem_ch12.adb (Analyze_Package_Instantiation): If the generic is not a\n+\tcompilation unit and is in an open scope at the point of instantiation,\n+\tassume that a body may be present later.\n+\n+2004-07-06  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case 'Size):\n+\tImprove error message when specified size is not supported.\n+\n+\t* sem_ch6.adb (Maybe_Primitive_Operation): A library-level subprogram\n+\tis never a primitive operation.\n+\n 2004-07-05  Andreas Schwab  <schwab@suse.de>\n \n \t* ada-tree.h (TYPE_LEFT_JUSTIFIED_MODULAR_P): Use"}, {"sha": "6a0885f1cd4451211370a4c36c05f615ee3f91c8", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -122,9 +122,9 @@ package body Ada.Exceptions is\n \n    package Exception_Data is\n \n-      ----------------------------------\n-      --  Exception messages routines --\n-      ----------------------------------\n+      ---------------------------------\n+      -- Exception messages routines --\n+      ---------------------------------\n \n       procedure Set_Exception_C_Msg\n         (Id   : Exception_Id;"}, {"sha": "675af7c749eeb28d0000e3c3d4e359a79bfb0739", "filename": "gcc/ada/a-exexpr.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -122,9 +122,9 @@ package body Exception_Propagation is\n    --  maximally aligned (see unwind.h). See additional comments on the\n    --  alignment below.\n \n-   ---------------------------------------------------------------\n-   --  GNAT specific entities to deal with the GCC eh circuitry --\n-   ---------------------------------------------------------------\n+   --------------------------------------------------------------\n+   -- GNAT Specific Entities To Deal With The GCC EH Circuitry --\n+   --------------------------------------------------------------\n \n    --  A GNAT exception object to be dealt with by the personality routine\n    --  called by the GCC unwinding runtime."}, {"sha": "781290e18e7a7a198074992cbe08f38a0df64d33", "filename": "gcc/ada/a-intsig.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-intsig.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-intsig.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intsig.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---           Copyright (C) 2000-2003 Free Software Foundation, Inc.         --\n+--           Copyright (C) 2000-2004 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,9 +34,9 @@\n with System.Interrupt_Management.Operations;\n package body Ada.Interrupts.Signal is\n \n-   -------------------------\n-   --  Generate_Interrupt --\n-   -------------------------\n+   ------------------------\n+   -- Generate_Interrupt --\n+   ------------------------\n \n    procedure Generate_Interrupt (Interrupt : Interrupt_ID) is\n    begin"}, {"sha": "47231a89444f1c7b8cb91e25303785667e46cab0", "filename": "gcc/ada/a-numaux-x86.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-numaux-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-numaux-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-x86.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -62,9 +62,9 @@ package body Ada.Numerics.Aux is\n    pragma Inline (Is_Nan);\n    pragma Inline (Reduce);\n \n-   ---------------------------------\n-   --  Basic Elementary Functions --\n-   ---------------------------------\n+   --------------------------------\n+   -- Basic Elementary Functions --\n+   --------------------------------\n \n    --  This section implements a few elementary functions that are used to\n    --  build the more complex ones. This ordering enables better inlining."}, {"sha": "dddf1bb883558128c4a8ba2bd1461ea6cd9c1849", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -221,9 +221,9 @@ package body Ada.Tags is\n \n    end HTable_Subprograms;\n \n-   --------------------\n-   --  CW_Membership --\n-   --------------------\n+   -------------------\n+   -- CW_Membership --\n+   -------------------\n \n    --  Canonical implementation of Classwide Membership corresponding to:\n "}, {"sha": "d6875705b9e7b7e8a25d12e6ffd3994095f65efe", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -55,9 +55,9 @@ package Ada.Tags is\n \n private\n \n-   ----------------------------------------------------------------\n-   --  Abstract procedural interface for the GNAT dispatch table --\n-   ----------------------------------------------------------------\n+   ---------------------------------------------------------------\n+   -- Abstract Procedural Interface For The GNAT Dispatch Table --\n+   ---------------------------------------------------------------\n \n    --  GNAT's Dispatch Table format is customizable in order to match the\n    --  format used in another langauge. GNAT supports programs that use"}, {"sha": "60d53db76d9a85e162c0a177a61f7785bb390b7f", "filename": "gcc/ada/bindgen.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fbindgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fbindgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,10 +35,6 @@\n \n package Bindgen is\n \n-   ------------------\n-   --  Subprograms --\n-   ------------------\n-\n    procedure Gen_Output_File (Filename : String);\n    --  Filename is the full path name of the binder output file\n "}, {"sha": "82e286fbc6cc6390ccd50b3af1ff5ce952dbceba", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -909,7 +909,7 @@ package body Checks is\n          if Static and then Siz >= Check_Siz then\n             Insert_Action (N,\n               Make_Raise_Storage_Error (Loc,\n-                 Reason => SE_Object_Too_Large));\n+                Reason => SE_Object_Too_Large));\n             Error_Msg_N (\"?Storage_Error will be raised at run-time\", N);\n             Uintp.Release (Umark);\n             return;\n@@ -4070,9 +4070,9 @@ package body Checks is\n           Reason => CE_Discriminant_Check_Failed));\n    end Generate_Discriminant_Check;\n \n-   ----------------------------\n-   --  Generate_Index_Checks --\n-   ----------------------------\n+   ---------------------------\n+   -- Generate_Index_Checks --\n+   ---------------------------\n \n    procedure Generate_Index_Checks (N : Node_Id) is\n       Loc : constant Source_Ptr := Sloc (N);"}, {"sha": "06dd0130a4af6da63fa85ca52ed0797f2cfc0dc4", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,9 +51,9 @@ pragma Elaborate_Body (Csets);\n    --  do NOT pack this table, since we don't want the extra overhead of\n    --  accessing a packed bit string.\n \n-   -----------------------------------------------\n-   --  Character Tables For Current Compilation --\n-   -----------------------------------------------\n+   ----------------------------------------------\n+   -- Character Tables For Current Compilation --\n+   ----------------------------------------------\n \n    procedure Initialize;\n    --  Routine to initialize following character tables, whose content depends"}, {"sha": "191e223d38d974ce544023255dc2a4ac34d5bc69", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -145,7 +145,7 @@ package body CStand is\n       Set_Ekind                      (E, E_Floating_Point_Type);\n       Set_Etype                      (E, E);\n       Init_Size                      (E, Siz);\n-      Set_Prim_Alignment             (E);\n+      Set_Elem_Alignment             (E);\n       Init_Digits_Value              (E, Digs);\n       Set_Float_Bounds               (E);\n       Set_Is_Frozen                  (E);\n@@ -171,7 +171,7 @@ package body CStand is\n       Set_Ekind                      (E, E_Signed_Integer_Type);\n       Set_Etype                      (E, E);\n       Init_Size                      (E, Siz);\n-      Set_Prim_Alignment             (E);\n+      Set_Elem_Alignment             (E);\n       Set_Integer_Bounds             (E, E, Lbound, Ubound);\n       Set_Is_Frozen                  (E);\n       Set_Is_Public                  (E);\n@@ -358,7 +358,7 @@ package body CStand is\n       Set_Etype          (Standard_Boolean, Standard_Boolean);\n       Init_Esize         (Standard_Boolean, Standard_Character_Size);\n       Init_RM_Size       (Standard_Boolean, 1);\n-      Set_Prim_Alignment (Standard_Boolean);\n+      Set_Elem_Alignment (Standard_Boolean);\n \n       Set_Is_Unsigned_Type           (Standard_Boolean);\n       Set_Size_Known_At_Compile_Time (Standard_Boolean);\n@@ -480,7 +480,7 @@ package body CStand is\n       Set_Etype          (Standard_Character, Standard_Character);\n       Init_Esize         (Standard_Character, Standard_Character_Size);\n       Init_RM_Size       (Standard_Character, 8);\n-      Set_Prim_Alignment (Standard_Character);\n+      Set_Elem_Alignment (Standard_Character);\n \n       Set_Is_Unsigned_Type           (Standard_Character);\n       Set_Is_Character_Type          (Standard_Character);\n@@ -526,7 +526,7 @@ package body CStand is\n       Set_Etype      (Standard_Wide_Character, Standard_Wide_Character);\n       Init_Size      (Standard_Wide_Character, Standard_Wide_Character_Size);\n \n-      Set_Prim_Alignment             (Standard_Wide_Character);\n+      Set_Elem_Alignment             (Standard_Wide_Character);\n       Set_Is_Unsigned_Type           (Standard_Wide_Character);\n       Set_Is_Character_Type          (Standard_Wide_Character);\n       Set_Is_Known_Valid             (Standard_Wide_Character);\n@@ -636,7 +636,7 @@ package body CStand is\n       Set_Etype          (Standard_Natural, Base_Type (Standard_Integer));\n       Init_Esize         (Standard_Natural, Standard_Integer_Size);\n       Init_RM_Size       (Standard_Natural, Standard_Integer_Size - 1);\n-      Set_Prim_Alignment (Standard_Natural);\n+      Set_Elem_Alignment (Standard_Natural);\n       Set_Size_Known_At_Compile_Time\n                          (Standard_Natural);\n       Set_Integer_Bounds (Standard_Natural,\n@@ -659,7 +659,7 @@ package body CStand is\n       Set_Etype          (Standard_Positive, Base_Type (Standard_Integer));\n       Init_Esize         (Standard_Positive, Standard_Integer_Size);\n       Init_RM_Size       (Standard_Positive, Standard_Integer_Size - 1);\n-      Set_Prim_Alignment (Standard_Positive);\n+      Set_Elem_Alignment (Standard_Positive);\n \n       Set_Size_Known_At_Compile_Time (Standard_Positive);\n \n@@ -777,7 +777,7 @@ package body CStand is\n       Set_Scope          (Standard_A_Char, Standard_Standard);\n       Set_Etype          (Standard_A_Char, Standard_A_String);\n       Init_Size          (Standard_A_Char, System_Address_Size);\n-      Set_Prim_Alignment (Standard_A_Char);\n+      Set_Elem_Alignment (Standard_A_Char);\n \n       Set_Directly_Designated_Type (Standard_A_Char, Standard_Character);\n       Make_Name     (Standard_A_Char, \"access_character\");\n@@ -811,7 +811,7 @@ package body CStand is\n       Set_Scope             (Any_Access, Standard_Standard);\n       Set_Etype             (Any_Access, Any_Access);\n       Init_Size             (Any_Access, System_Address_Size);\n-      Set_Prim_Alignment    (Any_Access);\n+      Set_Elem_Alignment    (Any_Access);\n       Make_Name             (Any_Access, \"an access type\");\n \n       Any_Character := New_Standard_Entity;\n@@ -822,7 +822,7 @@ package body CStand is\n       Set_Is_Character_Type (Any_Character);\n       Init_Esize            (Any_Character, Standard_Character_Size);\n       Init_RM_Size          (Any_Character, 8);\n-      Set_Prim_Alignment    (Any_Character);\n+      Set_Elem_Alignment    (Any_Character);\n       Set_Scalar_Range      (Any_Character, Scalar_Range (Standard_Character));\n       Make_Name             (Any_Character, \"a character type\");\n \n@@ -840,7 +840,7 @@ package body CStand is\n       Set_Etype             (Any_Boolean, Standard_Boolean);\n       Init_Esize            (Any_Boolean, Standard_Character_Size);\n       Init_RM_Size          (Any_Boolean, 1);\n-      Set_Prim_Alignment    (Any_Boolean);\n+      Set_Elem_Alignment    (Any_Boolean);\n       Set_Is_Unsigned_Type  (Any_Boolean);\n       Set_Scalar_Range      (Any_Boolean, Scalar_Range (Standard_Boolean));\n       Make_Name             (Any_Boolean, \"a boolean type\");\n@@ -859,23 +859,23 @@ package body CStand is\n       Set_Scope             (Any_Discrete, Standard_Standard);\n       Set_Etype             (Any_Discrete, Any_Discrete);\n       Init_Size             (Any_Discrete, Standard_Integer_Size);\n-      Set_Prim_Alignment    (Any_Discrete);\n+      Set_Elem_Alignment    (Any_Discrete);\n       Make_Name             (Any_Discrete, \"a discrete type\");\n \n       Any_Fixed := New_Standard_Entity;\n       Set_Ekind             (Any_Fixed, E_Ordinary_Fixed_Point_Type);\n       Set_Scope             (Any_Fixed, Standard_Standard);\n       Set_Etype             (Any_Fixed, Any_Fixed);\n       Init_Size             (Any_Fixed, Standard_Integer_Size);\n-      Set_Prim_Alignment    (Any_Fixed);\n+      Set_Elem_Alignment    (Any_Fixed);\n       Make_Name             (Any_Fixed, \"a fixed-point type\");\n \n       Any_Integer := New_Standard_Entity;\n       Set_Ekind             (Any_Integer, E_Signed_Integer_Type);\n       Set_Scope             (Any_Integer, Standard_Standard);\n       Set_Etype             (Any_Integer, Standard_Long_Long_Integer);\n       Init_Size             (Any_Integer, Standard_Long_Long_Integer_Size);\n-      Set_Prim_Alignment    (Any_Integer);\n+      Set_Elem_Alignment    (Any_Integer);\n \n       Set_Integer_Bounds\n         (Any_Integer,\n@@ -889,7 +889,7 @@ package body CStand is\n       Set_Scope             (Any_Modular, Standard_Standard);\n       Set_Etype             (Any_Modular, Standard_Long_Long_Integer);\n       Init_Size             (Any_Modular, Standard_Long_Long_Integer_Size);\n-      Set_Prim_Alignment    (Any_Modular);\n+      Set_Elem_Alignment    (Any_Modular);\n       Set_Is_Unsigned_Type  (Any_Modular);\n       Make_Name             (Any_Modular, \"a modular type\");\n \n@@ -898,23 +898,23 @@ package body CStand is\n       Set_Scope             (Any_Numeric, Standard_Standard);\n       Set_Etype             (Any_Numeric, Standard_Long_Long_Integer);\n       Init_Size             (Any_Numeric, Standard_Long_Long_Integer_Size);\n-      Set_Prim_Alignment    (Any_Numeric);\n+      Set_Elem_Alignment    (Any_Numeric);\n       Make_Name             (Any_Numeric, \"a numeric type\");\n \n       Any_Real := New_Standard_Entity;\n       Set_Ekind             (Any_Real, E_Floating_Point_Type);\n       Set_Scope             (Any_Real, Standard_Standard);\n       Set_Etype             (Any_Real, Standard_Long_Long_Float);\n       Init_Size             (Any_Real, Standard_Long_Long_Float_Size);\n-      Set_Prim_Alignment    (Any_Real);\n+      Set_Elem_Alignment    (Any_Real);\n       Make_Name             (Any_Real, \"a real type\");\n \n       Any_Scalar := New_Standard_Entity;\n       Set_Ekind             (Any_Scalar, E_Signed_Integer_Type);\n       Set_Scope             (Any_Scalar, Standard_Standard);\n       Set_Etype             (Any_Scalar, Any_Scalar);\n       Init_Size             (Any_Scalar, Standard_Integer_Size);\n-      Set_Prim_Alignment    (Any_Scalar);\n+      Set_Elem_Alignment    (Any_Scalar);\n       Make_Name             (Any_Scalar, \"a scalar type\");\n \n       Any_String := New_Standard_Entity;\n@@ -974,7 +974,7 @@ package body CStand is\n       Set_Scope             (Standard_Unsigned, Standard_Standard);\n       Set_Etype             (Standard_Unsigned, Standard_Unsigned);\n       Init_Size             (Standard_Unsigned, Standard_Integer_Size);\n-      Set_Prim_Alignment    (Standard_Unsigned);\n+      Set_Elem_Alignment    (Standard_Unsigned);\n       Set_Modulus           (Standard_Unsigned,\n                               Uint_2 ** Standard_Integer_Size);\n       Set_Is_Unsigned_Type  (Standard_Unsigned);\n@@ -1023,7 +1023,7 @@ package body CStand is\n       Set_Etype            (Universal_Fixed, Universal_Fixed);\n       Set_Scope            (Universal_Fixed, Standard_Standard);\n       Init_Size            (Universal_Fixed, Standard_Long_Long_Integer_Size);\n-      Set_Prim_Alignment   (Universal_Fixed);\n+      Set_Elem_Alignment   (Universal_Fixed);\n       Set_Size_Known_At_Compile_Time\n                            (Universal_Fixed);\n \n@@ -1073,7 +1073,7 @@ package body CStand is\n             Init_Size (Standard_Duration, 64);\n          end if;\n \n-         Set_Prim_Alignment (Standard_Duration);\n+         Set_Elem_Alignment (Standard_Duration);\n          Set_Delta_Value    (Standard_Duration, Delta_Val);\n          Set_Small_Value    (Standard_Duration, Delta_Val);\n          Set_Scalar_Range   (Standard_Duration,"}, {"sha": "289bdabb89fcb01269873330875cd636fd091dca", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -2922,7 +2922,7 @@ package Einfo is\n --       is needed, since returns an invalid value in this case!\n \n --    Sec_Stack_Needed_For_Return (Flag167)\n---       Present in scope entities (blocks,functions, procedures, tasks,\n+--       Present in scope entities (blocks, functions, procedures, tasks,\n --       entries). Set to True when secondary stack is used to hold\n --       the returned value of a function and thus should not be\n --       released on scope exit.\n@@ -4967,9 +4967,9 @@ package Einfo is\n    subtype L is Elist_Id;\n    subtype S is List_Id;\n \n-   ---------------------------------\n-   --  Attribute Access Functions --\n-   ---------------------------------\n+   --------------------------------\n+   -- Attribute Access Functions --\n+   --------------------------------\n \n    --  All attributes are manipulated through a procedural interface. This\n    --  section contains the functions used to obtain attribute values which"}, {"sha": "9051b43b727e32371263da9821446d0d7654892b", "filename": "gcc/ada/elists.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Felists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Felists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,9 +79,9 @@ package body Elists is\n    --  is the last item in the list. The Node field points to the node which\n    --  is referenced by the corresponding list entry.\n \n-   --------------------------\n-   --  Element List Tables --\n-   --------------------------\n+   -------------------------\n+   -- Element List Tables --\n+   -------------------------\n \n    type Elist_Header is record\n       First : Elmt_Id;"}, {"sha": "defbdd05526119709ac34c1ddae6daedb78e7fc7", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -4035,6 +4035,7 @@ package body Exp_Attr is\n            Attribute_Digits                       |\n            Attribute_Emax                         |\n            Attribute_Epsilon                      |\n+           Attribute_Has_Access_Values            |\n            Attribute_Has_Discriminants            |\n            Attribute_Large                        |\n            Attribute_Machine_Emax                 |"}, {"sha": "a9d26bda9865a1a6a6260f08b8490a611514ed99", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -66,9 +66,9 @@ with Validsw;  use Validsw;\n \n package body Exp_Ch4 is\n \n-   ------------------------\n-   --  Local Subprograms --\n-   ------------------------\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n \n    procedure Binary_Op_Validity_Checks (N : Node_Id);\n    pragma Inline (Binary_Op_Validity_Checks);"}, {"sha": "a6567aa4cdae4c3d5c0733b9cf82f21c67a66c67", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 38, "deletions": 61, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -130,8 +130,7 @@ package body Exp_Ch7 is\n       Is_Master                  : Boolean;\n       Is_Protected_Subprogram    : Boolean;\n       Is_Task_Allocation_Block   : Boolean;\n-      Is_Asynchronous_Call_Block : Boolean)\n-      return      Node_Id;\n+      Is_Asynchronous_Call_Block : Boolean) return Node_Id;\n    --  Expand a the clean-up procedure for controlled and/or transient\n    --  block, and/or task master or task body, or blocks used to\n    --  implement task allocation or asynchronous entry calls, or\n@@ -153,8 +152,7 @@ package body Exp_Ch7 is\n \n    function Make_Transient_Block\n      (Loc    : Source_Ptr;\n-      Action : Node_Id)\n-      return   Node_Id;\n+      Action : Node_Id) return Node_Id;\n    --  Create a transient block whose name is Scope, which is also a\n    --  controlled block if Flist is not empty and whose only code is\n    --  Action (either a single statement or single declaration).\n@@ -184,26 +182,23 @@ package body Exp_Ch7 is\n    function Make_Deep_Proc\n      (Prim  : Final_Primitives;\n       Typ   : Entity_Id;\n-      Stmts : List_Id)\n-      return  Node_Id;\n+      Stmts : List_Id) return Node_Id;\n    --  This function generates the tree for Deep_Initialize, Deep_Adjust\n    --  or Deep_Finalize procedures according to the first parameter,\n    --  these procedures operate on the type Typ. The Stmts parameter\n    --  gives the body of the procedure.\n \n    function Make_Deep_Array_Body\n      (Prim : Final_Primitives;\n-      Typ  : Entity_Id)\n-      return List_Id;\n+      Typ  : Entity_Id) return List_Id;\n    --  This function generates the list of statements for implementing\n    --  Deep_Initialize, Deep_Adjust or Deep_Finalize procedures\n    --  according to the first parameter, these procedures operate on the\n    --  array type Typ.\n \n    function Make_Deep_Record_Body\n      (Prim : Final_Primitives;\n-      Typ  : Entity_Id)\n-      return List_Id;\n+      Typ  : Entity_Id) return List_Id;\n    --  This function generates the list of statements for implementing\n    --  Deep_Initialize, Deep_Adjust or Deep_Finalize procedures\n    --  according to the first parameter, these procedures operate on the\n@@ -230,8 +225,7 @@ package body Exp_Ch7 is\n    function Convert_View\n      (Proc : Entity_Id;\n       Arg  : Node_Id;\n-      Ind  : Pos := 1)\n-      return Node_Id;\n+      Ind  : Pos := 1) return Node_Id;\n    --  Proc is one of the Initialize/Adjust/Finalize operations, and\n    --  Arg is the argument being passed to it. Ind indicates which\n    --  formal of procedure Proc we are trying to match. This function\n@@ -503,8 +497,7 @@ package body Exp_Ch7 is\n    function Cleanup_Array\n      (N    : Node_Id;\n       Obj  : Node_Id;\n-      Typ  : Entity_Id)\n-      return List_Id\n+      Typ  : Entity_Id) return List_Id\n    is\n       Loc        : constant Source_Ptr := Sloc (N);\n       Index_List : constant List_Id := New_List;\n@@ -601,8 +594,7 @@ package body Exp_Ch7 is\n    function Cleanup_Record\n      (N    : Node_Id;\n       Obj  : Node_Id;\n-      Typ  : Entity_Id)\n-      return List_Id\n+      Typ  : Entity_Id) return List_Id\n    is\n       Loc   : constant Source_Ptr := Sloc (N);\n       Tsk   : Node_Id;\n@@ -671,14 +663,13 @@ package body Exp_Ch7 is\n       return Stmts;\n    end Cleanup_Record;\n \n-   -------------------------------\n-   --  Cleanup_Protected_Object --\n-   -------------------------------\n+   ------------------------------\n+   -- Cleanup_Protected_Object --\n+   ------------------------------\n \n    function Cleanup_Protected_Object\n-     (N    : Node_Id;\n-      Ref  : Node_Id)\n-      return Node_Id\n+     (N   : Node_Id;\n+      Ref : Node_Id) return Node_Id\n    is\n       Loc : constant Source_Ptr := Sloc (N);\n \n@@ -747,9 +738,8 @@ package body Exp_Ch7 is\n    ------------------\n \n    function Cleanup_Task\n-     (N    : Node_Id;\n-      Ref  : Node_Id)\n-      return Node_Id\n+     (N   : Node_Id;\n+      Ref : Node_Id) return Node_Id\n    is\n       Loc  : constant Source_Ptr := Sloc (N);\n    begin\n@@ -852,12 +842,12 @@ package body Exp_Ch7 is\n       --  If type is not frozen yet, check explicitly among its components,\n       --  because flag is not necessarily set.\n \n-      ------------------------------------\n-      --  Has_Some_Controlled_Component --\n-      ------------------------------------\n+      -----------------------------------\n+      -- Has_Some_Controlled_Component --\n+      -----------------------------------\n \n-      function Has_Some_Controlled_Component (Rec : Entity_Id)\n-        return Boolean\n+      function Has_Some_Controlled_Component\n+        (Rec : Entity_Id) return Boolean\n       is\n          Comp : Entity_Id;\n \n@@ -966,8 +956,7 @@ package body Exp_Ch7 is\n    function Convert_View\n      (Proc : Entity_Id;\n       Arg  : Node_Id;\n-      Ind  : Pos := 1)\n-      return Node_Id\n+      Ind  : Pos := 1) return Node_Id\n    is\n       Fent : Entity_Id := First_Entity (Proc);\n       Ftyp : Entity_Id;\n@@ -1424,9 +1413,8 @@ package body Exp_Ch7 is\n       Len_Ref      : Node_Id := Empty;\n \n       function Last_Array_Component\n-        (Ref :  Node_Id;\n-         Typ :  Entity_Id)\n-         return Node_Id;\n+        (Ref : Node_Id;\n+         Typ : Entity_Id) return Node_Id;\n       --  Creates a reference to the last component of the array object\n       --  designated by Ref whose type is Typ.\n \n@@ -1435,9 +1423,8 @@ package body Exp_Ch7 is\n       --------------------------\n \n       function Last_Array_Component\n-        (Ref :  Node_Id;\n-         Typ :  Entity_Id)\n-         return Node_Id\n+        (Ref : Node_Id;\n+         Typ : Entity_Id) return Node_Id\n       is\n          Index_List : constant List_Id := New_List;\n \n@@ -1685,9 +1672,8 @@ package body Exp_Ch7 is\n    ---------------------\n \n    function Find_Final_List\n-     (E    : Entity_Id;\n-      Ref  : Node_Id := Empty)\n-      return Node_Id\n+     (E   : Entity_Id;\n+      Ref : Node_Id := Empty) return Node_Id\n    is\n       Loc : constant Source_Ptr := Sloc (Ref);\n       S   : Entity_Id;\n@@ -2020,8 +2006,7 @@ package body Exp_Ch7 is\n      (Ref          : Node_Id;\n       Typ          : Entity_Id;\n       Flist_Ref    : Node_Id;\n-      With_Attach  : Node_Id)\n-      return         List_Id\n+      With_Attach  : Node_Id) return List_Id\n    is\n       Loc    : constant Source_Ptr := Sloc (Ref);\n       Res    : constant List_Id    := New_List;\n@@ -2131,10 +2116,9 @@ package body Exp_Ch7 is\n    --    System.FI.Attach_To_Final_List (Flist, Ref, Nb_Link)\n \n    function Make_Attach_Call\n-     (Obj_Ref      : Node_Id;\n-      Flist_Ref    : Node_Id;\n-      With_Attach  : Node_Id)\n-      return Node_Id\n+     (Obj_Ref     : Node_Id;\n+      Flist_Ref   : Node_Id;\n+      With_Attach : Node_Id) return Node_Id\n    is\n       Loc : constant Source_Ptr := Sloc (Obj_Ref);\n \n@@ -2170,8 +2154,7 @@ package body Exp_Ch7 is\n       Is_Master                  : Boolean;\n       Is_Protected_Subprogram    : Boolean;\n       Is_Task_Allocation_Block   : Boolean;\n-      Is_Asynchronous_Call_Block : Boolean)\n-      return      Node_Id\n+      Is_Asynchronous_Call_Block : Boolean) return Node_Id\n    is\n       Loc  : constant Source_Ptr := Sloc (Clean);\n       Stmt : constant List_Id    := New_List;\n@@ -2477,8 +2460,7 @@ package body Exp_Ch7 is\n \n    function Make_Deep_Array_Body\n      (Prim : Final_Primitives;\n-      Typ  : Entity_Id)\n-      return List_Id\n+      Typ  : Entity_Id) return List_Id\n    is\n       Loc : constant Source_Ptr := Sloc (Typ);\n \n@@ -2588,8 +2570,7 @@ package body Exp_Ch7 is\n    function Make_Deep_Proc\n      (Prim  : Final_Primitives;\n       Typ   : Entity_Id;\n-      Stmts : List_Id)\n-      return Entity_Id\n+      Stmts : List_Id) return Entity_Id\n    is\n       Loc       : constant Source_Ptr := Sloc (Typ);\n       Formals   : List_Id;\n@@ -2664,8 +2645,7 @@ package body Exp_Ch7 is\n \n    function Make_Deep_Record_Body\n      (Prim : Final_Primitives;\n-      Typ  : Entity_Id)\n-      return List_Id\n+      Typ  : Entity_Id) return List_Id\n    is\n       Loc            : constant Source_Ptr := Sloc (Typ);\n       Controller_Typ : Entity_Id;\n@@ -2767,8 +2747,7 @@ package body Exp_Ch7 is\n    function Make_Final_Call\n      (Ref         : Node_Id;\n       Typ         : Entity_Id;\n-      With_Detach : Node_Id)\n-      return        List_Id\n+      With_Detach : Node_Id) return List_Id\n    is\n       Loc   : constant Source_Ptr := Sloc (Ref);\n       Res   : constant List_Id    := New_List;\n@@ -2893,8 +2872,7 @@ package body Exp_Ch7 is\n      (Ref          : Node_Id;\n       Typ          : Entity_Id;\n       Flist_Ref    : Node_Id;\n-      With_Attach  : Node_Id)\n-      return         List_Id\n+      With_Attach  : Node_Id) return List_Id\n    is\n       Loc     : constant Source_Ptr := Sloc (Ref);\n       Is_Conc : Boolean;\n@@ -3012,8 +2990,7 @@ package body Exp_Ch7 is\n \n    function Make_Transient_Block\n      (Loc    : Source_Ptr;\n-      Action : Node_Id)\n-      return   Node_Id\n+      Action : Node_Id) return Node_Id\n    is\n       Flist  : constant Entity_Id := Finalization_Chain_Entity (Current_Scope);\n       Decls  : constant List_Id   := New_List;"}, {"sha": "e3c176ad1780fcd2700e3d4bf98875b165fdafe4", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -538,14 +538,14 @@ package body Exp_Dist is\n       end if;\n    end Add_RACW_Features;\n \n-   -------------------------------------------------\n-   --  Add_RACW_Primitive_Declarations_And_Bodies --\n-   -------------------------------------------------\n+   ------------------------------------------------\n+   -- Add_RACW_Primitive_Declarations_And_Bodies --\n+   ------------------------------------------------\n \n    procedure Add_RACW_Primitive_Declarations_And_Bodies\n-     (Designated_Type : in Entity_Id;\n-      Insertion_Node  : in Node_Id;\n-      Decls           : in List_Id)\n+     (Designated_Type : Entity_Id;\n+      Insertion_Node  : Node_Id;\n+      Decls           : List_Id)\n    is\n       --  Set sloc of generated declaration to be that of the\n       --  insertion node, so the declarations are recognized as"}, {"sha": "9d1c78bbe1ec3937540c8475444f170bb1bcc352", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -327,9 +327,9 @@ package body Exp_Util is\n       end if;\n    end Build_Runtime_Call;\n \n-   -----------------------------\n-   --  Build_Task_Array_Image --\n-   -----------------------------\n+   ----------------------------\n+   -- Build_Task_Array_Image --\n+   ----------------------------\n \n    --  This function generates the body for a function that constructs the\n    --  image string for a task that is an array component. The function is"}, {"sha": "02c6011113dd8384c8d57488657d4b4f53be5c34", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -320,7 +320,7 @@ package Exp_Util is\n    --  Empty, then simply returns Cond1 (this allows the use of Empty to\n    --  initialize a series of checks evolved by this routine, with a final\n    --  result of Empty indicating that no checks were required). The Sloc\n-   --  field of the constructed N_And_Then node is copied from Cond1.\n+   --  field of the constructed N_Or_Else node is copied from Cond1.\n \n    procedure Expand_Subtype_From_Expr\n      (N             : Node_Id;"}, {"sha": "2438d3fbc538c001cbc27fe6cbd4b7b592f5602f", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -4398,9 +4398,9 @@ package body Freeze is\n       end if;\n    end Freeze_Subprogram;\n \n-   -----------------------\n-   --  Is_Fully_Defined --\n-   -----------------------\n+   ----------------------\n+   -- Is_Fully_Defined --\n+   ----------------------\n \n    function Is_Fully_Defined (T : Entity_Id) return Boolean is\n    begin"}, {"sha": "5e95a9a56aa510b6360e755720d79427671303b8", "filename": "gcc/ada/g-dynhta.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fg-dynhta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fg-dynhta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dynhta.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2002-2003 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 2002-2004 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,9 +34,9 @@\n with Ada.Unchecked_Deallocation;\n package body GNAT.Dynamic_HTables is\n \n-   --------------------\n-   --  Static_HTable --\n-   --------------------\n+   -------------------\n+   -- Static_HTable --\n+   -------------------\n \n    package body Static_HTable is\n \n@@ -207,9 +207,9 @@ package body GNAT.Dynamic_HTables is\n       end Set;\n    end Static_HTable;\n \n-   --------------------\n-   --  Simple_HTable --\n-   --------------------\n+   -------------------\n+   -- Simple_HTable --\n+   -------------------\n \n    package body Simple_HTable is\n "}, {"sha": "0fed7690c5f37d9fe916447572bb2c4ef9739870", "filename": "gcc/ada/g-regexp.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fg-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fg-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regexp.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1999-2002 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1999-2004 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -191,9 +191,9 @@ package body GNAT.Regexp is\n          procedure Add_In_Map (C : Character);\n          --  Add a character in the mapping, if it is not already defined\n \n-         -----------------\n-         --  Add_In_Map --\n-         -----------------\n+         ----------------\n+         -- Add_In_Map --\n+         ----------------\n \n          procedure Add_In_Map (C : Character) is\n          begin\n@@ -419,7 +419,7 @@ package body GNAT.Regexp is\n          --  end-state) :\n          --\n          --  regexp   state_num | a b * empty_string\n-         --  -------  ---------------------------------------\n+         --  -------  ------------------------------\n          --    a          1 (s) | 2 - - -\n          --               2 (e) | - - - -\n          --"}, {"sha": "75a1c300fef3cd07eec2beaefbc28829a94ff696", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -2130,8 +2130,18 @@ package body GNAT.Sockets is\n       MS : Timeval_Unit;\n \n    begin\n-      S  := Timeval_Unit (Val - 0.5);\n-      MS := Timeval_Unit (1_000_000 * (Val - Selector_Duration (S)));\n+      --  If zero, set result as zero (otherwise it gets rounded down to -1)\n+\n+      if Val = 0.0 then\n+         S  := 0;\n+         MS := 0;\n+\n+      --  Normal case where we do round down\n+      else\n+         S  := Timeval_Unit (Val - 0.5);\n+         MS := Timeval_Unit (1_000_000 * (Val - Selector_Duration (S)));\n+      end if;\n+\n       return (S, MS);\n    end To_Timeval;\n "}, {"sha": "b47abe1e75e94938c44dce341a96366d0a2a6109", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -8390,7 +8390,7 @@ Similarly, the size of type @code{Rec} is 40 bits\n (@code{Rec'Size} = @code{Rec'Value_Size} = 40), but\n the alignment is 4, so objects of this type will have\n their size increased to 64 bits so that it is a multiple\n-of the alignment (in bits).  The reason for this decision, which is\n+of the alignment (in bits).  This decision is\n in accordance with the specific Implementation Advice in RM 13.3(43):\n \n @quotation"}, {"sha": "8c358847036d1f137f153fa608f354cc160f833f", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -13234,8 +13234,21 @@ XREF to invoke @command{^gnatxref^gnatxref^}\n @end itemize\n \n @noindent\n-Note that the compiler is invoked using the command\n-@command{^gnatmake -f -u -c^gnatmake -f -u -c^}.\n+(note that the compiler is invoked using the command\n+@command{^gnatmake -f -u -c^gnatmake -f -u -c^}).\n+\n+@noindent\n+On non VMS platforms, between @command{gnat} and the command, two\n+special switches may be used:\n+\n+@itemize @bullet\n+@item\n+@command{-v} to display the invocation of the tool.\n+@item\n+@command{-dn} to prevent the @command{gnat} driver from removing\n+the temporary files it has created. These temporary files are\n+configuration files and temporary file list files.\n+@end itemize\n \n @noindent\n The command may be followed by switches and arguments for the invoked"}, {"sha": "29bb2e9225f2a77c418caed95a1c5af641654ba6", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1672,6 +1672,38 @@ procedure Gnatchop is\n --  Start of processing for gnatchop\n \n begin\n+   --  Add the directory where gnatchop is invoked in front of the\n+   --  path, if gnatchop is invoked with directory information.\n+   --  Only do this if the platform is not VMS, where the notion of path\n+   --  does not really exist.\n+\n+   if not Hostparm.OpenVMS then\n+      declare\n+         Command : constant String := Command_Name;\n+\n+      begin\n+         for Index in reverse Command'Range loop\n+            if Command (Index) = Directory_Separator then\n+               declare\n+                  Absolute_Dir : constant String :=\n+                                   Normalize_Pathname\n+                                     (Command (Command'First .. Index));\n+\n+                  PATH         : constant String :=\n+                                   Absolute_Dir &\n+                  Path_Separator &\n+                  Getenv (\"PATH\").all;\n+\n+               begin\n+                  Setenv (\"PATH\", PATH);\n+               end;\n+\n+               exit;\n+            end if;\n+         end loop;\n+      end;\n+   end if;\n+\n    --  Process command line options and initialize global variables\n \n    if not Scan_Arguments then"}, {"sha": "fe29ca4e578141de270726ebed49cd71045af824", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 76, "deletions": 28, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -30,7 +30,7 @@ with Csets;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl;\n with Namet;    use Namet;\n-with Opt;\n+with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;\n with Prj;      use Prj;\n@@ -470,29 +470,32 @@ procedure GNATCmd is\n       Success : Boolean;\n \n    begin\n-      if Project /= No_Project then\n-         for Prj in 1 .. Projects.Last loop\n-            if Projects.Table (Prj).Config_File_Temp then\n-               if Opt.Verbose_Mode then\n-                  Output.Write_Str (\"Deleting temp configuration file \"\"\");\n-                  Output.Write_Str (Get_Name_String\n-                                      (Projects.Table (Prj).Config_File_Name));\n-                  Output.Write_Line (\"\"\"\");\n-               end if;\n+      if not Keep_Temporary_Files then\n+         if Project /= No_Project then\n+            for Prj in 1 .. Projects.Last loop\n+               if Projects.Table (Prj).Config_File_Temp then\n+                  if Verbose_Mode then\n+                     Output.Write_Str (\"Deleting temp configuration file \"\"\");\n+                     Output.Write_Str\n+                       (Get_Name_String\n+                          (Projects.Table (Prj).Config_File_Name));\n+                     Output.Write_Line (\"\"\"\");\n+                  end if;\n \n-               Delete_File\n-                 (Name    => Get_Name_String\n-                  (Projects.Table (Prj).Config_File_Name),\n-                  Success => Success);\n-            end if;\n-         end loop;\n-      end if;\n+                  Delete_File\n+                    (Name    => Get_Name_String\n+                       (Projects.Table (Prj).Config_File_Name),\n+                     Success => Success);\n+               end if;\n+            end loop;\n+         end if;\n \n-      --  If a temporary text file that contains a list of files for a tool\n-      --  has been created, delete this temporary file.\n+         --  If a temporary text file that contains a list of files for a tool\n+         --  has been created, delete this temporary file.\n \n-      if Temp_File_Name /= null then\n-         Delete_File (Temp_File_Name.all, Success);\n+         if Temp_File_Name /= null then\n+            Delete_File (Temp_File_Name.all, Success);\n+         end if;\n       end if;\n    end Delete_Temp_Config_Files;\n \n@@ -919,7 +922,7 @@ procedure GNATCmd is\n \n       for C in Command_List'Range loop\n          if not Command_List (C).VMS_Only then\n-            Put (\"GNAT \" & Command_List (C).Cname.all);\n+            Put (\"gnat \" & To_Lower (Command_List (C).Cname.all));\n             Set_Col (25);\n             Put (Command_List (C).Unixcmd.all);\n \n@@ -939,7 +942,7 @@ procedure GNATCmd is\n       end loop;\n \n       New_Line;\n-      Put_Line (\"Commands FIND, LIST, PRETTY, STUB, NETRIC and XREF accept \" &\n+      Put_Line (\"Commands find, list, metric, pretty, stub and xref accept \" &\n                 \"project file switches -vPx, -Pprj and -Xnam=val\");\n       New_Line;\n    end Non_VMS_Usage;\n@@ -966,6 +969,38 @@ begin\n \n    VMS_Conv.Initialize;\n \n+   --  Add the directory where the GNAT driver is invoked in front of the\n+   --  path, if the GNAT driver is invoked with directory information.\n+   --  Only do this if the platform is not VMS, where the notion of path\n+   --  does not really exist.\n+\n+   if not OpenVMS then\n+      declare\n+         Command : constant String := Command_Name;\n+\n+      begin\n+         for Index in reverse Command'Range loop\n+            if Command (Index) = Directory_Separator then\n+               declare\n+                  Absolute_Dir : constant String :=\n+                                   Normalize_Pathname\n+                                     (Command (Command'First .. Index));\n+\n+                  PATH         : constant String :=\n+                                   Absolute_Dir &\n+                  Path_Separator &\n+                  Getenv (\"PATH\").all;\n+\n+               begin\n+                  Setenv (\"PATH\", PATH);\n+               end;\n+\n+               exit;\n+            end if;\n+         end loop;\n+      end;\n+   end if;\n+\n    --  If on VMS, or if VMS emulation is on, convert VMS style /qualifiers,\n    --  filenames and pathnames to Unix style.\n \n@@ -982,10 +1017,23 @@ begin\n          return;\n       else\n          begin\n-            if Argument_Count > 1 and then Argument (1) = \"-v\" then\n-               Opt.Verbose_Mode := True;\n-               Command_Arg := 2;\n-            end if;\n+            loop\n+               if Argument_Count > Command_Arg\n+                 and then Argument (Command_Arg) = \"-v\"\n+               then\n+                  Verbose_Mode := True;\n+                  Command_Arg := Command_Arg + 1;\n+\n+               elsif Argument_Count > Command_Arg\n+                 and then Argument (Command_Arg) = \"-dn\"\n+               then\n+                  Keep_Temporary_Files := True;\n+                  Command_Arg := Command_Arg + 1;\n+\n+               else\n+                  exit;\n+               end if;\n+            end loop;\n \n             The_Command := Real_Command_Type'Value (Argument (Command_Arg));\n \n@@ -1623,7 +1671,7 @@ begin\n             raise Normal_Exit;\n          end if;\n \n-         if Opt.Verbose_Mode then\n+         if Verbose_Mode then\n             Output.Write_Str (Exec_Path.all);\n \n             for Arg in The_Args'Range loop"}, {"sha": "fc1996f41ab1710ef05f626111a0ab1ef886ee87", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1297,6 +1297,38 @@ procedure Gnatlink is\n --  Start of processing for Gnatlink\n \n begin\n+   --  Add the directory where gnatlink is invoked in front of the\n+   --  path, if gnatlink is invoked with directory information.\n+   --  Only do this if the platform is not VMS, where the notion of path\n+   --  does not really exist.\n+\n+   if not Hostparm.OpenVMS then\n+      declare\n+         Command : constant String := Command_Name;\n+\n+      begin\n+         for Index in reverse Command'Range loop\n+            if Command (Index) = Directory_Separator then\n+               declare\n+                  Absolute_Dir : constant String :=\n+                                   Normalize_Pathname\n+                                     (Command (Command'First .. Index));\n+\n+                  PATH         : constant String :=\n+                                   Absolute_Dir &\n+                  Path_Separator &\n+                  Getenv (\"PATH\").all;\n+\n+               begin\n+                  Setenv (\"PATH\", PATH);\n+               end;\n+\n+               exit;\n+            end if;\n+         end loop;\n+      end;\n+   end if;\n+\n    Process_Args;\n \n    if Argument_Count = 0"}, {"sha": "1b69183ec1863102309ddbcb8438fae116276c59", "filename": "gcc/ada/gnatmem.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatmem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatmem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmem.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -147,9 +147,9 @@ procedure Gnatmem is\n    Tmp_Alloc   : Allocation;\n    Quiet_Mode  : Boolean := False;\n \n-   -------------------------------\n-   --  Allocation roots sorting --\n-   -------------------------------\n+   ------------------------------\n+   -- Allocation Roots Sorting --\n+   ------------------------------\n \n    Sort_Order : String (1 .. 3) := \"nwh\";\n    --  This is the default order in which sorting criteria will be applied"}, {"sha": "b38fac06f615871e632e5e7a53eff5472106ff6c", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -25,12 +25,14 @@\n ------------------------------------------------------------------------------\n \n with Gnatvsn;\n+with Hostparm;\n with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Makr;\n with Table;\n \n+with Ada.Command_Line;  use Ada.Command_Line;\n with Ada.Text_IO;       use Ada.Text_IO;\n with GNAT.Command_Line; use GNAT.Command_Line;\n with GNAT.OS_Lib;       use GNAT.OS_Lib;\n@@ -296,6 +298,38 @@ procedure Gnatname is\n --  Start of processing for Gnatname\n \n begin\n+   --  Add the directory where gnatname is invoked in front of the\n+   --  path, if gnatname is invoked with directory information.\n+   --  Only do this if the platform is not VMS, where the notion of path\n+   --  does not really exist.\n+\n+   if not Hostparm.OpenVMS then\n+      declare\n+         Command : constant String := Command_Name;\n+\n+      begin\n+         for Index in reverse Command'Range loop\n+            if Command (Index) = Directory_Separator then\n+               declare\n+                  Absolute_Dir : constant String :=\n+                                   Normalize_Pathname\n+                                     (Command (Command'First .. Index));\n+\n+                  PATH         : constant String :=\n+                                   Absolute_Dir &\n+                  Path_Separator &\n+                  Getenv (\"PATH\").all;\n+\n+               begin\n+                  Setenv (\"PATH\", PATH);\n+               end;\n+\n+               exit;\n+            end if;\n+         end loop;\n+      end;\n+   end if;\n+\n    --  Initialize tables\n \n    Excluded_Patterns.Set_Last (0);"}, {"sha": "0c3f3aa55030ac184e6e642651b300774f72cf4b", "filename": "gcc/ada/i-os2thr.ads", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fi-os2thr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fi-os2thr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2thr.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,8 +63,7 @@ pragma Preelaborate (Threads);\n       pfn     : PFNTHREAD;\n       param   : PVOID;\n       flag    : ULONG;\n-      cbStack : ULONG)\n-      return    APIRET;\n+      cbStack : ULONG) return APIRET;\n    pragma Import (C, DosCreateThread, \"DosCreateThread\");\n \n    Block_Child     : constant := 1;\n@@ -152,8 +151,7 @@ pragma Preelaborate (Threads);\n \n    function DosGetInfoBlocks\n      (Pptib : access PTIB;\n-      Pppib : access PPIB)\n-      return  APIRET;\n+      Pppib : access PPIB) return APIRET;\n    pragma Import (C, DosGetInfoBlocks, \"DosGetInfoBlocks\");\n \n    --  Thread local memory\n@@ -164,23 +162,21 @@ pragma Preelaborate (Threads);\n    function DosAllocThreadLocalMemory\n      (cb : ULONG;               -- Number of 4-byte DWORDs to allocate\n       p  : access PVOID)        -- Address of the memory block\n-   return\n-      APIRET;                   -- Return Code (rc)\n+      return APIRET;                   -- Return Code (rc)\n    pragma Import\n      (Convention => C,\n       Entity     => DosAllocThreadLocalMemory,\n       Link_Name  => \"_DosAllocThreadLocalMemory\");\n \n-   -----------------\n-   --  Priorities --\n-   -----------------\n+   ----------------\n+   -- Priorities --\n+   ----------------\n \n    function DosSetPriority\n      (Scope   : ULONG;\n       Class   : ULONG;\n       Delta_P : IC.long;\n-      PorTid  : TID)\n-      return    APIRET;\n+      PorTid  : TID) return APIRET;\n    pragma Import (C, DosSetPriority, \"DosSetPriority\");\n \n    PRTYS_PROCESS     : constant := 0;"}, {"sha": "ab12d842548e86b82f3025d35c4344eb1f16700e", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -701,9 +701,9 @@ package body Inline is\n       end if;\n    end Analyze_Inlined_Bodies;\n \n-   --------------------------------\n-   --  Check_Body_For_Inlining --\n-   --------------------------------\n+   -----------------------------\n+   -- Check_Body_For_Inlining --\n+   -----------------------------\n \n    procedure Check_Body_For_Inlining (N : Node_Id; P : Entity_Id) is\n       Bname : Unit_Name_Type;"}, {"sha": "212dd3cd751f828ac595c480c81624b397172946", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -2347,7 +2347,7 @@ package body Layout is\n             end;\n          end if;\n \n-         Set_Prim_Alignment (E);\n+         Set_Elem_Alignment (E);\n \n       --  Scalar types: set size and alignment\n \n@@ -2412,9 +2412,9 @@ package body Layout is\n             end if;\n          end if;\n \n-         Set_Prim_Alignment (E);\n+         Set_Elem_Alignment (E);\n \n-      --  Non-primitive types\n+      --  Non-elementary (composite) types\n \n       else\n          --  If RM_Size is known, set Esize if not known\n@@ -2864,10 +2864,10 @@ package body Layout is\n    end Set_Discrete_RM_Size;\n \n    ------------------------\n-   -- Set_Prim_Alignment --\n+   -- Set_Elem_Alignment --\n    ------------------------\n \n-   procedure Set_Prim_Alignment (E : Entity_Id) is\n+   procedure Set_Elem_Alignment (E : Entity_Id) is\n    begin\n       --  Do not set alignment for packed array types, unless we are doing\n       --  front end layout, because otherwise this is always handled in the\n@@ -2930,7 +2930,7 @@ package body Layout is\n             Init_Alignment (E, A);\n          end if;\n       end;\n-   end Set_Prim_Alignment;\n+   end Set_Elem_Alignment;\n \n    ----------------------\n    -- SO_Ref_From_Expr --"}, {"sha": "312547390ffa9f34d74219647a96a2792bec000e", "filename": "gcc/ada/layout.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Flayout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Flayout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,10 +68,10 @@ package Layout is\n    --  types, the RM_Size is simply set to zero. This routine also sets\n    --  the Is_Constrained flag in Def_Id.\n \n-   procedure Set_Prim_Alignment (E : Entity_Id);\n-   --  The front end always sets alignments for primitive types by calling this\n-   --  procedure. Note that we have to do this for discrete types (since the\n-   --  Alignment attribute is static), so we might as well do it for all\n-   --  scalar types, since the processing is the same.\n+   procedure Set_Elem_Alignment (E : Entity_Id);\n+   --  The front end always sets alignments for elementary types by calling\n+   --  this procedure. Note that we have to do this for discrete types (since\n+   --  the Alignment attribute is static), so we might as well do it for all\n+   --  elementary types, since the processing is the same.\n \n end Layout;"}, {"sha": "a931f14234b211c3a87e721d45f1b176f1a88c3d", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -5626,7 +5626,7 @@ package body Make is\n \n       Mains.Delete;\n \n-      --  Add the directory where gnatmake is invoked in the front of the\n+      --  Add the directory where gnatmake is invoked in front of the\n       --  path, if gnatmake is invoked with directory information.\n       --  Only do this if the platform is not VMS, where the notion of path\n       --  does not really exist."}, {"sha": "61f96f251ff6cc9048fd0919b1f8201aa2a2737d", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 98, "deletions": 62, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -212,6 +212,15 @@ package body Makegpr is\n       Hash       => Hash,\n       Equal      => \"=\");\n \n+   package X_Switches is new Table.Table\n+     (Table_Component_Type => String_Access,\n+      Table_Index_Type     => Integer,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 2,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Makegpr.X_Switches\");\n+   --  Table to store the -X switches to be passed to gnatmake\n+\n    Initial_Argument_Count : constant Positive := 20;\n    type Boolean_Array is array (Positive range <>) of Boolean;\n    type Booleans is access Boolean_Array;\n@@ -305,6 +314,10 @@ package body Makegpr is\n    Need_To_Relink : Boolean := False;\n    --  True when an executable of a language other than Ada need to be linked\n \n+   Global_Archive_Exists : Boolean := False;\n+   --  True if there is a non empty global archive, to prevent creation\n+   --  of such archives.\n+\n    Path_Option : String_Access;\n    --  The path option switch, when supported\n \n@@ -567,9 +580,9 @@ package body Makegpr is\n                end if;\n \n             --  For a non-library project, the only archive needed\n-            --  is the one for the main project.\n+            --  is the one for the main project, if there is one.\n \n-            elsif Project = Main_Project then\n+            elsif Project = Main_Project and then Global_Archive_Exists then\n                Add_Argument\n                  (Get_Name_String (Data.Object_Directory) &\n                   Directory_Separator &\n@@ -1157,11 +1170,6 @@ package body Makegpr is\n       --  Archive needs to be rebuilt\n \n       else\n-         --  If the archive is built, then linking will need to occur\n-         --  unconditionally.\n-\n-         Need_To_Relink := True;\n-\n          --  If archive already exists, first delete it\n \n          --  Comment needed on why we discard result???\n@@ -1208,86 +1216,100 @@ package body Makegpr is\n             end if;\n          end loop;\n \n-         --  Spawn the archive builder (ar)\n+         --  No need to create a global archive, if there is no object\n+         --  file to put into.\n \n-         Saved_Last_Argument := Last_Argument;\n+         Global_Archive_Exists := Last_Argument > First_Object;\n \n-         Last_Argument := First_Object + Max_In_Archives;\n+         if Global_Archive_Exists then\n+            --  If the archive is built, then linking will need to occur\n+            --  unconditionally.\n \n-         loop\n-            if Last_Argument > Saved_Last_Argument then\n-               Last_Argument := Saved_Last_Argument;\n-            end if;\n+            Need_To_Relink := True;\n \n-            Display_Command (Archive_Builder, Archive_Builder_Path);\n+            --  Spawn the archive builder (ar)\n \n-            Spawn\n-              (Archive_Builder_Path.all,\n-               Arguments (1 .. Last_Argument),\n-               Success);\n+            Saved_Last_Argument := Last_Argument;\n \n-            exit when not Success;\n+            Last_Argument := First_Object + Max_In_Archives;\n \n-            exit when Last_Argument = Saved_Last_Argument;\n+            loop\n+               if Last_Argument > Saved_Last_Argument then\n+                  Last_Argument := Saved_Last_Argument;\n+               end if;\n \n-            Arguments (1) := r;\n-            Arguments (3 .. Saved_Last_Argument - Last_Argument + 2) :=\n-              Arguments (Last_Argument + 1 .. Saved_Last_Argument);\n-            Saved_Last_Argument := Saved_Last_Argument - Last_Argument + 2;\n-         end loop;\n+               Display_Command (Archive_Builder, Archive_Builder_Path);\n \n-         --  If the archive was built, run the archive indexer (ranlib)\n-         --  if there is one.\n+               Spawn\n+                 (Archive_Builder_Path.all,\n+                  Arguments (1 .. Last_Argument),\n+                  Success);\n \n-         if Success then\n+               exit when not Success;\n \n-            --  If the archive was built, run the archive indexer (ranlib),\n+               exit when Last_Argument = Saved_Last_Argument;\n+\n+               Arguments (1) := r;\n+               Arguments (3 .. Saved_Last_Argument - Last_Argument + 2) :=\n+                 Arguments (Last_Argument + 1 .. Saved_Last_Argument);\n+               Saved_Last_Argument := Saved_Last_Argument - Last_Argument + 2;\n+            end loop;\n+\n+            --  If the archive was built, run the archive indexer (ranlib)\n             --  if there is one.\n \n-            if Archive_Indexer_Path /= null then\n-               Last_Argument := 0;\n-               Add_Argument (Archive_Name, True);\n+            if Success then\n \n-               Display_Command (Archive_Indexer, Archive_Indexer_Path);\n+               --  If the archive was built, run the archive indexer (ranlib),\n+               --  if there is one.\n \n-               Spawn (Archive_Indexer_Path.all, Arguments (1 .. 1), Success);\n+               if Archive_Indexer_Path /= null then\n+                  Last_Argument := 0;\n+                  Add_Argument (Archive_Name, True);\n \n-               if not Success then\n+                  Display_Command (Archive_Indexer, Archive_Indexer_Path);\n \n-                  --  Running ranlib failed, delete the dependency file,\n-                  --  if it exists.\n+                  Spawn\n+                    (Archive_Indexer_Path.all, Arguments (1 .. 1), Success);\n \n-                  if Is_Regular_File (Archive_Dep_Name) then\n-                     Delete_File (Archive_Dep_Name, Success);\n-                  end if;\n+                  if not Success then\n+\n+                     --  Running ranlib failed, delete the dependency file,\n+                     --  if it exists.\n+\n+                     if Is_Regular_File (Archive_Dep_Name) then\n+                        Delete_File (Archive_Dep_Name, Success);\n+                     end if;\n \n-                  --  And report the error\n+                     --  And report the error\n \n-                  Report_Error\n-                    (\"running\" & Archive_Indexer & \" for project \"\"\",\n-                     Get_Name_String (Data.Name),\n-                     \"\"\" failed\");\n-                  return;\n+                     Report_Error\n+                       (\"running\" & Archive_Indexer & \" for project \"\"\",\n+                        Get_Name_String (Data.Name),\n+                        \"\"\" failed\");\n+                     return;\n+                  end if;\n                end if;\n-            end if;\n \n-            --  The archive was correctly built, create its dependency file\n+               --  The archive was correctly built, create its dependency file\n \n-            Create_Global_Archive_Dependency_File (Archive_Dep_Name);\n+               Create_Global_Archive_Dependency_File (Archive_Dep_Name);\n \n-         --  Building the archive failed, delete dependency file if one exists\n+            --  Building the archive failed, delete dependency file if one\n+            --  exists.\n \n-         else\n-            if Is_Regular_File (Archive_Dep_Name) then\n-               Delete_File (Archive_Dep_Name, Success);\n-            end if;\n+            else\n+               if Is_Regular_File (Archive_Dep_Name) then\n+                  Delete_File (Archive_Dep_Name, Success);\n+               end if;\n \n-            --  And report the error\n+               --  And report the error\n \n-            Report_Error\n-              (\"building archive for project \"\"\",\n-               Get_Name_String (Data.Name),\n-               \"\"\" failed\");\n+               Report_Error\n+                 (\"building archive for project \"\"\",\n+                  Get_Name_String (Data.Name),\n+                  \"\"\" failed\");\n+            end if;\n          end if;\n       end if;\n    end Build_Global_Archive;\n@@ -2316,6 +2338,12 @@ package body Makegpr is\n       Add_Argument (Dash_P, True);\n       Add_Argument (Get_Name_String (Data.Path_Name), True);\n \n+      --  Add the -X switches, if any\n+\n+      for Index in 1 .. X_Switches.Last loop\n+         Add_Argument (X_Switches.Table (Index), True);\n+      end loop;\n+\n       --  If Mains_Specified is True, find the mains in package Mains\n \n       if Mains_Specified then\n@@ -3008,6 +3036,10 @@ package body Makegpr is\n       Add_Str_To_Name_Buffer (\"compiler_command\");\n       Name_Compiler_Command := Name_Find;\n \n+      --  Make sure the -X switch table is empty\n+\n+      X_Switches.Set_Last (0);\n+\n       --  Get the command line arguments\n \n       Scan_Args : for Next_Arg in 1 .. Argument_Count loop\n@@ -3807,7 +3839,7 @@ package body Makegpr is\n          Osint.Fail\n            (\"switch -o not allowed within a -largs. Use -o directly.\");\n \n-      --  If current processor is not gprmake dirrectly, store the option in\n+      --  If current processor is not gprmake directly, store the option in\n       --  the appropriate table.\n \n       elsif Current_Processor /= None then\n@@ -3877,7 +3909,11 @@ package body Makegpr is\n          then\n             --  Is_External_Assignment has side effects when it returns True\n \n-            null;\n+            --  Record the -X switch, so that they can be passed to gnatmake,\n+            --  if gnatmake is called.\n+\n+            X_Switches.Increment_Last;\n+            X_Switches.Table (X_Switches.Last) := new String'(Arg);\n \n          else\n             Osint.Fail (\"illegal option \"\"\", Arg, \"\"\"\");"}, {"sha": "f7ca5e2d849b8b58c4add1d2342bc688d34a8634", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -560,6 +560,11 @@ package Opt is\n    --  When True signals gnatmake to ignore compilation errors and keep\n    --  processing sources until there is no more work.\n \n+   Keep_Temporary_Files : Boolean := False;\n+   --  GNATCMD\n+   --  When True the temporary files created by the GNAT driver are not\n+   --  deleted. Set by switch -dn or qualifier /KEEP_TEMPORARY_FILES.\n+\n    Link_Only : Boolean := False;\n    --  GNATMAKE\n    --  Set to True to skip compile and bind steps"}, {"sha": "48da30759de8be4c6f75cc12c91ba9f1548e23ce", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1176,9 +1176,9 @@ package body Osint is\n       return Src_Search_Directories.Table (Primary_Directory);\n    end Get_Primary_Src_Search_Directory;\n \n-   -------------------------\n-   --  Get_RTS_Search_Dir --\n-   -------------------------\n+   ------------------------\n+   -- Get_RTS_Search_Dir --\n+   ------------------------\n \n    function Get_RTS_Search_Dir\n      (Search_Dir : String;"}, {"sha": "6fbec9fb2c4e72c3393884b9a5252bafea1c46ec", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -376,9 +376,9 @@ package body Prj is\n       end if;\n    end Register_Default_Naming_Scheme;\n \n-   ------------\n-   --  Reset --\n-   ------------\n+   -----------\n+   -- Reset --\n+   -----------\n \n    procedure Reset is\n    begin"}, {"sha": "7af5adcb1a76d17e6f3b1e4ffef610ceba049130", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1012,6 +1012,8 @@ package Rtsfind is\n      RE_Get_Unique_Remote_Pointer,       -- System.Partition_Interface\n      RE_RACW_Stub_Type,                  -- System.Partition_Interface\n      RE_RACW_Stub_Type_Access,           -- System.Partition_Interface\n+     RE_RAS_Proxy_Type,                  -- System.Partition_Interface\n+     RE_RAS_Proxy_Type_Access,           -- System.Partition_Interface\n      RE_Raise_Program_Error_Unknown_Tag, -- System.Partition_Interface\n      RE_Register_Passive_Package,        -- System.Partition_Interface\n      RE_Register_Receiving_Stub,         -- System.Partition_Interface\n@@ -1158,6 +1160,7 @@ package Rtsfind is\n      RE_TC_String,                       -- System.PolyORB_Interface,\n      RE_TC_Struct,                       -- System.PolyORB_Interface,\n      RE_TC_Union,                        -- System.PolyORB_Interface,\n+     RE_TC_Object,                       -- System.PolyORB_Interface,\n \n      RE_IS_Is1,                          -- System.Scalar_Values\n      RE_IS_Is2,                          -- System.Scalar_Values\n@@ -2089,6 +2092,8 @@ package Rtsfind is\n      RE_Get_Unique_Remote_Pointer        => System_Partition_Interface,\n      RE_RACW_Stub_Type                   => System_Partition_Interface,\n      RE_RACW_Stub_Type_Access            => System_Partition_Interface,\n+     RE_RAS_Proxy_Type                   => System_Partition_Interface,\n+     RE_RAS_Proxy_Type_Access            => System_Partition_Interface,\n      RE_Raise_Program_Error_Unknown_Tag  => System_Partition_Interface,\n      RE_Register_Passive_Package         => System_Partition_Interface,\n      RE_Register_Receiving_Stub          => System_Partition_Interface,\n@@ -2223,6 +2228,7 @@ package Rtsfind is\n      RE_TC_String                        => System_PolyORB_Interface,\n      RE_TC_Struct                        => System_PolyORB_Interface,\n      RE_TC_Union                         => System_PolyORB_Interface,\n+     RE_TC_Object                        => System_PolyORB_Interface,\n \n      RE_Global_Pool_Object               => System_Pool_Global,\n "}, {"sha": "fd8f2baf0e0ebbfc27cd79958e26eb3263395e15", "filename": "gcc/ada/s-ficobl.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-ficobl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-ficobl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ficobl.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2000 Free Software Foundation, Inc.        --\n+--            Copyright (C) 1992-2004 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,9 +42,9 @@ with Interfaces.C_Streams;\n \n package System.File_Control_Block is\n \n-   -----------------------------\n-   --  Ada File Control Block --\n-   -----------------------------\n+   ----------------------------\n+   -- Ada File Control Block --\n+   ----------------------------\n \n    --  The Ada file control block is an abstract extension of the root\n    --  stream type. This allows a file to be treated directly as a stream"}, {"sha": "dfeda6398af56245b1ef0d7fd6f54baab7a1d1be", "filename": "gcc/ada/s-finimp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-finimp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-finimp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finimp.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -91,9 +91,9 @@ package body System.Finalization_Implementation is\n    --  Given the address (obj) of a tagged object, return a\n    --  pointer to the record controller of this object.\n \n-   -------------\n-   --  Adjust --\n-   -------------\n+   ------------\n+   -- Adjust --\n+   ------------\n \n    procedure Adjust (Object : in out Record_Controller) is\n "}, {"sha": "bf76624e0376cd4c0efd3098385cb77a8896f4bf", "filename": "gcc/ada/s-htable.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -35,9 +35,9 @@ with Ada.Unchecked_Deallocation;\n \n package body System.HTable is\n \n-   --------------------\n-   --  Static_HTable --\n-   --------------------\n+   -------------------\n+   -- Static_HTable --\n+   -------------------\n \n    package body Static_HTable is\n "}, {"sha": "4a7610c8018bcccf0660e0438bff81e97c16c4cc", "filename": "gcc/ada/s-interr-sigaction.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr-sigaction.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr-sigaction.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-sigaction.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -255,9 +255,9 @@ package body System.Interrupts is\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n \n-   ----------------\n-   --  Finalize  --\n-   ----------------\n+   --------------\n+   -- Finalize --\n+   --------------\n \n    procedure Finalize (Object : in out Static_Interrupt_Protection) is\n    begin"}, {"sha": "3d4b7fc2e9dffd5c04ec98aa6962cb81a19c4c57", "filename": "gcc/ada/s-interr-vms.adb", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-vms.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -192,9 +192,9 @@ package body System.Interrupts is\n \n    type Server_Task_Access is access Server_Task;\n \n-   --------------------------------\n-   --  Local Types and Variables --\n-   --------------------------------\n+   -------------------------------\n+   -- Local Types and Variables --\n+   -------------------------------\n \n    type Entry_Assoc is record\n       T : Task_Id;\n@@ -406,8 +406,9 @@ package body System.Interrupts is\n    -- Current_Handler --\n    ---------------------\n \n-   function Current_Handler (Interrupt : Interrupt_ID)\n-     return Parameterless_Handler is\n+   function Current_Handler\n+     (Interrupt : Interrupt_ID) return Parameterless_Handler\n+   is\n    begin\n       if Is_Reserved (Interrupt) then\n          Raise_Exception (Program_Error'Identity, \"Interrupt\" &\n@@ -626,9 +627,9 @@ package body System.Interrupts is\n \n    task body Interrupt_Manager is\n \n-      ---------------------\n-      --  Local Routines --\n-      ---------------------\n+      --------------------\n+      -- Local Routines --\n+      --------------------\n \n       procedure Unprotected_Exchange_Handler\n         (Old_Handler : out Parameterless_Handler;\n@@ -1079,23 +1080,23 @@ package body System.Interrupts is\n    -------------------------------------\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Dynamic_Interrupt_Protection)\n-      return   Boolean\n+     (Object : access Dynamic_Interrupt_Protection) return Boolean\n    is\n       pragma Warnings (Off, Object);\n \n    begin\n       return True;\n    end Has_Interrupt_Or_Attach_Handler;\n \n-   ----------------\n-   --  Finalize  --\n-   ----------------\n+   --------------\n+   -- Finalize --\n+   --------------\n \n    procedure Finalize (Object : in out Static_Interrupt_Protection) is\n    begin\n       --  ??? loop to be executed only when we're not doing library level\n       --  finalization, since in this case all interrupt tasks are gone.\n+\n       if not Interrupt_Manager'Terminated then\n          for N in reverse Object.Previous_Handlers'Range loop\n             Interrupt_Manager.Attach_Handler\n@@ -1115,8 +1116,7 @@ package body System.Interrupts is\n    -------------------------------------\n \n    function Has_Interrupt_Or_Attach_Handler\n-     (Object : access Static_Interrupt_Protection)\n-      return   Boolean\n+     (Object : access Static_Interrupt_Protection) return Boolean\n    is\n       pragma Warnings (Off, Object);\n    begin"}, {"sha": "6844e883a529eace6dd8f54f51425f14d96eabd8", "filename": "gcc/ada/s-interr.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -707,18 +707,18 @@ package body System.Interrupts is\n \n    task body Interrupt_Manager is\n \n-      ----------------------\n-      --  Local Variables --\n-      ----------------------\n+      ---------------------\n+      -- Local Variables --\n+      ---------------------\n \n       Intwait_Mask  : aliased IMNG.Interrupt_Mask;\n       Ret_Interrupt : Interrupt_ID;\n       Old_Mask      : aliased IMNG.Interrupt_Mask;\n       Old_Handler   : Parameterless_Handler;\n \n-      ---------------------\n-      --  Local Routines --\n-      ---------------------\n+      --------------------\n+      -- Local Routines --\n+      --------------------\n \n       procedure Bind_Handler (Interrupt : Interrupt_ID);\n       --  This procedure does not do anything if the Interrupt is blocked."}, {"sha": "2377249203a886ca1ec68eb39870a76aee8082ce", "filename": "gcc/ada/s-interr.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -122,25 +122,25 @@ package System.Interrupts is\n      (Interrupt : Interrupt_ID)\n      return       System.Address;\n \n-   ---------------------------------\n-   --  Interrupt entries services --\n-   ---------------------------------\n+   --------------------------------\n+   -- Interrupt Entries Services --\n+   --------------------------------\n \n    --  Routines needed for Interrupt Entries\n-   --  Attempt to bind an Entry to an Interrupt to which a Handler is\n-   --  already attached will raise a Program_Error.\n \n    procedure Bind_Interrupt_To_Entry\n      (T       : System.Tasking.Task_Id;\n       E       : System.Tasking.Task_Entry_Index;\n       Int_Ref : System.Address);\n+   --  Bind the given interrupt to the given entry. If the interrupt is\n+   --  already bound to another entry, Program_Error will be raised.\n \n    procedure Detach_Interrupt_Entries (T : System.Tasking.Task_Id);\n    --  This procedure detaches all the Interrupt Entries bound to a task.\n \n-   -------------------------------\n-   --  POSIX.5 signals services --\n-   -------------------------------\n+   ------------------------------\n+   -- POSIX.5 Signals Services --\n+   ------------------------------\n \n    --  Routines needed for POSIX dot5 POSIX_Signals\n \n@@ -177,7 +177,7 @@ package System.Interrupts is\n    --  This will make all the tasks in RTS blocked for the Interrupt.\n \n    ----------------------\n-   -- Protection types --\n+   -- Protection Types --\n    ----------------------\n \n    --  Routines and types needed to implement Interrupt_Handler and"}, {"sha": "c6e8213c7ca95a5cf1d694f585e70f263cf07096", "filename": "gcc/ada/s-osinte-aix.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-aix.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -391,9 +391,9 @@ package System.OS_Interface is\n    Relative_Timed_Wait : constant Boolean := False;\n    --  pthread_cond_timedwait requires an absolute delay time\n \n-   ----------------------------\n-   --  POSIX.1c  Section 13  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 13 --\n+   --------------------------\n \n    PTHREAD_PRIO_NONE    : constant := 0;\n    PTHREAD_PRIO_PROTECT : constant := 0;\n@@ -445,9 +445,9 @@ package System.OS_Interface is\n    function sched_yield return int;\n    --  AiX have a nonstandard sched_yield.\n \n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n+   --------------------------\n+   -- P1003.1c  Section 16 --\n+   --------------------------\n \n    function pthread_attr_init (attributes : access pthread_attr_t) return int;\n    pragma Import (C, pthread_attr_init, \"pthread_attr_init\");"}, {"sha": "000eb1c9ae5e6c1a1b9cb41aede76c200cb428b8", "filename": "gcc/ada/s-osinte-freebsd.ads", "status": "modified", "additions": 31, "deletions": 28, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-freebsd.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -328,18 +328,20 @@ package System.OS_Interface is\n      (addr : Address; len : size_t; prot : int) return int;\n    pragma Import (C, mprotect);\n \n-   -----------------------------------------\n-   --  Nonstandard Thread Initialization  --\n-   -----------------------------------------\n-   --  FSU_THREADS requires pthread_init, which is nonstandard\n-   --  and this should be invoked during the elaboration of s-taprop.adb\n-   --\n-   --  FreeBSD does not require this so we provide an empty Ada body.\n+   ---------------------------------------\n+   -- Nonstandard Thread Initialization --\n+   ---------------------------------------\n+\n+   --  FSU_THREADS requires pthread_init, which is nonstandard and\n+   --  this should be invoked during the elaboration of s-taprop.adb\n+\n+   --  FreeBSD does not require this so we provide an empty Ada body\n+\n    procedure pthread_init;\n \n-   ---------------------------\n-   --  POSIX.1c  Section 3  --\n-   ---------------------------\n+   -------------------------\n+   -- POSIX.1c  Section 3 --\n+   -------------------------\n \n    function sigwait\n      (set : access sigset_t;\n@@ -348,7 +350,7 @@ package System.OS_Interface is\n \n    function pthread_kill\n      (thread : pthread_t;\n-      sig    : Signal) return   int;\n+      sig    : Signal) return int;\n    pragma Import (C, pthread_kill, \"pthread_kill\");\n \n    type sigset_t_ptr is access all sigset_t;\n@@ -359,9 +361,9 @@ package System.OS_Interface is\n       oset : sigset_t_ptr) return int;\n    pragma Import (C, pthread_sigmask, \"pthread_sigmask\");\n \n-   ----------------------------\n-   --  POSIX.1c  Section 11  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 11 --\n+   --------------------------\n \n    function pthread_mutexattr_init\n      (attr : access pthread_mutexattr_t) return int;\n@@ -418,9 +420,9 @@ package System.OS_Interface is\n    Relative_Timed_Wait : constant Boolean := False;\n    --  pthread_cond_timedwait requires an absolute delay time\n \n-   ----------------------------\n-   --  POSIX.1c  Section 13  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 13 --\n+   --------------------------\n \n    PTHREAD_PRIO_NONE    : constant := 0;\n    PTHREAD_PRIO_PROTECT : constant := 2;\n@@ -516,9 +518,9 @@ package System.OS_Interface is\n    function sched_yield return int;\n    pragma Import (C, sched_yield, \"pthread_yield\");\n \n-   -----------------------------\n-   --  P1003.1c - Section 16  --\n-   -----------------------------\n+   --------------------------\n+   -- P1003.1c  Section 16 --\n+   --------------------------\n \n    function pthread_attr_init (attributes : access pthread_attr_t) return int;\n    pragma Import (C, pthread_attr_init, \"pthread_attr_init\");\n@@ -567,9 +569,9 @@ package System.OS_Interface is\n    function pthread_self return pthread_t;\n    pragma Import (C, pthread_self, \"pthread_self\");\n \n-   ----------------------------\n-   --  POSIX.1c  Section 17  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 17 --\n+   --------------------------\n \n    function pthread_setspecific\n      (key   : pthread_key_t;\n@@ -587,9 +589,9 @@ package System.OS_Interface is\n       destructor : destructor_pointer) return int;\n    pragma Import (C, pthread_key_create, \"pthread_key_create\");\n \n-   --------------------------------------\n-   --  Non-portable pthread functions  --\n-   --------------------------------------\n+   ------------------------------------\n+   -- Non-portable Pthread Functions --\n+   ------------------------------------\n \n    function pthread_set_name_np\n      (thread : pthread_t;\n@@ -605,11 +607,12 @@ private\n    --  #define sa_handler __sigaction_u._handler\n    --  #define sa_sigaction __sigaction_u._sigaction\n \n-   --  Should we add a signal_context type here ?\n-   --  How could it be done independent of the CPU architecture ?\n+   --  Should we add a signal_context type here ???\n+   --  How could it be done independent of the CPU architecture ???\n    --  sigcontext type is opaque, so it is architecturally neutral.\n    --  It is always passed as an access type, so define it as an empty record\n    --  since the contents are not used anywhere.\n+\n    type struct_sigcontext is null record;\n    pragma Convention (C, struct_sigcontext);\n "}, {"sha": "ab0b0775e88e8a7082c421e7ebc70473f1d06dc0", "filename": "gcc/ada/s-osinte-hpux-dce.adb", "status": "modified", "additions": 46, "deletions": 80, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux-dce.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2003, Ada Core Technologies               --\n+--             Copyright (C) 1995-2004, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -104,14 +104,13 @@ package body System.OS_Interface is\n            tv_usec => time_t (Long_Long_Integer (F * 10#1#E6)));\n    end To_Timeval;\n \n-   ---------------------------\n-   --  POSIX.1c  Section 3  --\n-   ---------------------------\n+   -------------------------\n+   -- POSIX.1c  Section 3 --\n+   -------------------------\n \n    function sigwait\n      (set : access sigset_t;\n-      sig : access Signal)\n-     return int\n+      sig : access Signal) return int\n    is\n       Result : int;\n \n@@ -135,21 +134,18 @@ package body System.OS_Interface is\n       return 0;\n    end pthread_kill;\n \n-   ----------------------------\n-   --  POSIX.1c  Section 11  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 11 --\n+   --------------------------\n \n-   --  For all the following functions, DCE Threads has a non standard\n-   --  behavior: it sets errno but the standard Posix requires it to be\n-   --  returned.\n+   --  For all following functions, DCE Threads has a non standard behavior.\n+   --  It sets errno but the standard Posix requires it to be returned.\n \n    function pthread_mutexattr_init\n-     (attr : access pthread_mutexattr_t)\n-     return int\n+     (attr : access pthread_mutexattr_t) return int\n    is\n       function pthread_mutexattr_create\n-        (attr : access pthread_mutexattr_t)\n-        return int;\n+        (attr : access pthread_mutexattr_t) return int;\n       pragma Import (C, pthread_mutexattr_create, \"pthread_mutexattr_create\");\n \n    begin\n@@ -161,12 +157,10 @@ package body System.OS_Interface is\n    end pthread_mutexattr_init;\n \n    function pthread_mutexattr_destroy\n-     (attr : access pthread_mutexattr_t)\n-     return int\n+     (attr : access pthread_mutexattr_t) return int\n    is\n       function pthread_mutexattr_delete\n-        (attr : access pthread_mutexattr_t)\n-        return int;\n+        (attr : access pthread_mutexattr_t) return int;\n       pragma Import (C, pthread_mutexattr_delete, \"pthread_mutexattr_delete\");\n \n    begin\n@@ -179,13 +173,11 @@ package body System.OS_Interface is\n \n    function pthread_mutex_init\n      (mutex : access pthread_mutex_t;\n-      attr  : access pthread_mutexattr_t)\n-     return int\n+      attr  : access pthread_mutexattr_t) return int\n    is\n       function pthread_mutex_init_base\n         (mutex : access pthread_mutex_t;\n-         attr  : pthread_mutexattr_t)\n-        return int;\n+         attr  : pthread_mutexattr_t) return int;\n       pragma Import (C, pthread_mutex_init_base, \"pthread_mutex_init\");\n \n    begin\n@@ -197,12 +189,10 @@ package body System.OS_Interface is\n    end pthread_mutex_init;\n \n    function pthread_mutex_destroy\n-     (mutex : access pthread_mutex_t)\n-     return int\n+     (mutex : access pthread_mutex_t) return int\n    is\n       function pthread_mutex_destroy_base\n-        (mutex : access pthread_mutex_t)\n-        return int;\n+        (mutex : access pthread_mutex_t) return int;\n       pragma Import (C, pthread_mutex_destroy_base, \"pthread_mutex_destroy\");\n \n    begin\n@@ -214,12 +204,10 @@ package body System.OS_Interface is\n    end pthread_mutex_destroy;\n \n    function pthread_mutex_lock\n-     (mutex : access pthread_mutex_t)\n-     return int\n+     (mutex : access pthread_mutex_t) return int\n    is\n       function pthread_mutex_lock_base\n-        (mutex : access pthread_mutex_t)\n-        return int;\n+        (mutex : access pthread_mutex_t) return int;\n       pragma Import (C, pthread_mutex_lock_base, \"pthread_mutex_lock\");\n \n    begin\n@@ -231,12 +219,10 @@ package body System.OS_Interface is\n    end pthread_mutex_lock;\n \n    function pthread_mutex_unlock\n-     (mutex : access pthread_mutex_t)\n-     return int\n+     (mutex : access pthread_mutex_t) return int\n    is\n       function pthread_mutex_unlock_base\n-        (mutex : access pthread_mutex_t)\n-        return int;\n+        (mutex : access pthread_mutex_t) return int;\n       pragma Import (C, pthread_mutex_unlock_base, \"pthread_mutex_unlock\");\n \n    begin\n@@ -248,12 +234,10 @@ package body System.OS_Interface is\n    end pthread_mutex_unlock;\n \n    function pthread_condattr_init\n-     (attr : access pthread_condattr_t)\n-     return int\n+     (attr : access pthread_condattr_t) return int\n    is\n       function pthread_condattr_create\n-        (attr : access pthread_condattr_t)\n-        return int;\n+        (attr : access pthread_condattr_t) return int;\n       pragma Import (C, pthread_condattr_create, \"pthread_condattr_create\");\n \n    begin\n@@ -265,12 +249,10 @@ package body System.OS_Interface is\n    end pthread_condattr_init;\n \n    function pthread_condattr_destroy\n-     (attr : access pthread_condattr_t)\n-     return int\n+     (attr : access pthread_condattr_t) return int\n    is\n       function pthread_condattr_delete\n-        (attr : access pthread_condattr_t)\n-        return int;\n+        (attr : access pthread_condattr_t) return int;\n       pragma Import (C, pthread_condattr_delete, \"pthread_condattr_delete\");\n \n    begin\n@@ -283,13 +265,11 @@ package body System.OS_Interface is\n \n    function pthread_cond_init\n      (cond : access pthread_cond_t;\n-      attr : access pthread_condattr_t)\n-     return int\n+      attr : access pthread_condattr_t) return int\n    is\n       function pthread_cond_init_base\n         (cond : access pthread_cond_t;\n-         attr : pthread_condattr_t)\n-        return int;\n+         attr : pthread_condattr_t) return int;\n       pragma Import (C, pthread_cond_init_base, \"pthread_cond_init\");\n \n    begin\n@@ -301,12 +281,10 @@ package body System.OS_Interface is\n    end pthread_cond_init;\n \n    function pthread_cond_destroy\n-     (cond : access pthread_cond_t)\n-     return int\n+     (cond : access pthread_cond_t) return int\n    is\n       function pthread_cond_destroy_base\n-        (cond : access pthread_cond_t)\n-        return int;\n+        (cond : access pthread_cond_t) return int;\n       pragma Import (C, pthread_cond_destroy_base, \"pthread_cond_destroy\");\n \n    begin\n@@ -318,12 +296,10 @@ package body System.OS_Interface is\n    end pthread_cond_destroy;\n \n    function pthread_cond_signal\n-     (cond : access pthread_cond_t)\n-     return int\n+     (cond : access pthread_cond_t) return int\n    is\n       function pthread_cond_signal_base\n-        (cond : access pthread_cond_t)\n-        return int;\n+        (cond : access pthread_cond_t) return int;\n       pragma Import (C, pthread_cond_signal_base, \"pthread_cond_signal\");\n \n    begin\n@@ -336,13 +312,11 @@ package body System.OS_Interface is\n \n    function pthread_cond_wait\n      (cond  : access pthread_cond_t;\n-      mutex : access pthread_mutex_t)\n-     return int\n+      mutex : access pthread_mutex_t) return int\n    is\n       function pthread_cond_wait_base\n         (cond  : access pthread_cond_t;\n-         mutex : access pthread_mutex_t)\n-        return int;\n+         mutex : access pthread_mutex_t) return int;\n       pragma Import (C, pthread_cond_wait_base, \"pthread_cond_wait\");\n \n    begin\n@@ -356,14 +330,12 @@ package body System.OS_Interface is\n    function pthread_cond_timedwait\n      (cond    : access pthread_cond_t;\n       mutex   : access pthread_mutex_t;\n-      abstime : access timespec)\n-     return int\n+      abstime : access timespec) return int\n    is\n       function pthread_cond_timedwait_base\n         (cond    : access pthread_cond_t;\n          mutex   : access pthread_mutex_t;\n-         abstime : access timespec)\n-        return int;\n+         abstime : access timespec) return int;\n       pragma Import (C, pthread_cond_timedwait_base, \"pthread_cond_timedwait\");\n \n    begin\n@@ -390,8 +362,7 @@ package body System.OS_Interface is\n       function pthread_setscheduler\n         (thread   : pthread_t;\n          policy   : int;\n-         priority : int)\n-         return int;\n+         priority : int) return int;\n       pragma Import (C, pthread_setscheduler, \"pthread_setscheduler\");\n \n    begin\n@@ -414,11 +385,11 @@ package body System.OS_Interface is\n    --  P1003.1c - Section 16  --\n    -----------------------------\n \n-   function pthread_attr_init (attributes : access pthread_attr_t) return int\n+   function pthread_attr_init\n+     (attributes : access pthread_attr_t) return int\n    is\n       function pthread_attr_create\n-        (attributes : access pthread_attr_t)\n-        return int;\n+        (attributes : access pthread_attr_t) return int;\n       pragma Import (C, pthread_attr_create, \"pthread_attr_create\");\n \n    begin\n@@ -433,8 +404,7 @@ package body System.OS_Interface is\n      (attributes : access pthread_attr_t) return int\n    is\n       function pthread_attr_delete\n-        (attributes : access pthread_attr_t)\n-        return int;\n+        (attributes : access pthread_attr_t) return int;\n       pragma Import (C, pthread_attr_delete, \"pthread_attr_delete\");\n \n    begin\n@@ -451,8 +421,7 @@ package body System.OS_Interface is\n    is\n       function pthread_attr_setstacksize_base\n         (attr      : access pthread_attr_t;\n-         stacksize : size_t)\n-        return int;\n+         stacksize : size_t) return int;\n       pragma Import (C, pthread_attr_setstacksize_base,\n                      \"pthread_attr_setstacksize\");\n \n@@ -474,8 +443,7 @@ package body System.OS_Interface is\n         (thread        : access pthread_t;\n          attributes    : pthread_attr_t;\n          start_routine : Thread_Body;\n-         arg           : System.Address)\n-        return int;\n+         arg           : System.Address) return int;\n       pragma Import (C, pthread_create_base, \"pthread_create\");\n \n    begin\n@@ -488,9 +456,9 @@ package body System.OS_Interface is\n       end if;\n    end pthread_create;\n \n-   ----------------------------\n-   --  POSIX.1c  Section 17  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 17 --\n+   --------------------------\n \n    function pthread_setspecific\n      (key   : pthread_key_t;\n@@ -543,7 +511,6 @@ package body System.OS_Interface is\n \n    function Get_Stack_Base (thread : pthread_t) return Address is\n       pragma Warnings (Off, thread);\n-\n    begin\n       return Null_Address;\n    end Get_Stack_Base;\n@@ -556,7 +523,6 @@ package body System.OS_Interface is\n    function intr_attach (sig : int; handler : isr_address) return long is\n       function c_signal (sig : int; handler : isr_address) return long;\n       pragma Import (C, c_signal, \"signal\");\n-\n    begin\n       return c_signal (sig, handler);\n    end intr_attach;"}, {"sha": "1aea8734223c2b734e55fd8fe8c4fb80c40c5488", "filename": "gcc/ada/s-osinte-hpux.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-hpux.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -387,9 +387,9 @@ package System.OS_Interface is\n    Relative_Timed_Wait : constant Boolean := False;\n    --  pthread_cond_timedwait requires an absolute delay time\n \n-   ----------------------------\n-   --  POSIX.1c  Section 13  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 13 --\n+   --------------------------\n \n    PTHREAD_PRIO_NONE    : constant := 16#100#;\n    PTHREAD_PRIO_PROTECT : constant := 16#200#;\n@@ -436,9 +436,9 @@ package System.OS_Interface is\n    function sched_yield return int;\n    pragma Import (C, sched_yield, \"sched_yield\");\n \n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n+   --------------------------\n+   -- P1003.1c  Section 16 --\n+   --------------------------\n \n    function pthread_attr_init\n      (attributes : access pthread_attr_t) return int;"}, {"sha": "56c852614e8cf4ac46748984d7eb5eb0262b16ec", "filename": "gcc/ada/s-osinte-irix.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-irix.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -452,11 +452,12 @@ package System.OS_Interface is\n       destructor : destructor_pointer) return int;\n    pragma Import (C, pthread_key_create, \"pthread_key_create\");\n \n-   ---------------------------------------------------------------\n-   --  Non portable SGI 6.5 additions to the pthread interface  --\n-   --  must be executed from within the context of a system     --\n-   --  scope task                                               --\n-   ---------------------------------------------------------------\n+   -------------------\n+   -- SGI Additions --\n+   -------------------\n+\n+   --  Non portable SGI 6.5 additions to the pthread interface must be\n+   --  executed from within the context of a system scope task.\n \n    function pthread_setrunon_np (cpu : int) return int;\n    pragma Import (C, pthread_setrunon_np, \"pthread_setrunon_np\");"}, {"sha": "7b9d640efb2434a119ac5e57d1cebe389ee0b9c2", "filename": "gcc/ada/s-osinte-lynxos.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-lynxos.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -310,16 +310,16 @@ package System.OS_Interface is\n    function mprotect (addr : Address; len : size_t; prot : int) return int;\n    pragma Import (C, mprotect);\n \n-   -----------------------------------------\n-   --  Nonstandard Thread Initialization  --\n-   -----------------------------------------\n+   ---------------------------------------\n+   -- Nonstandard Thread Initialization --\n+   ---------------------------------------\n \n    procedure pthread_init;\n    --  This is a dummy procedure to share some GNULLI files\n \n-   ---------------------------\n-   --  POSIX.1c  Section 3  --\n-   ---------------------------\n+   -------------------------\n+   -- POSIX.1c  Section 3 --\n+   -------------------------\n \n    function sigwait\n      (set : access sigset_t;\n@@ -447,9 +447,9 @@ package System.OS_Interface is\n    function sched_yield return int;\n    pragma Import (C, sched_yield, \"sched_yield\");\n \n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n+   --------------------------\n+   -- P1003.1c  Section 16 --\n+   --------------------------\n \n    function pthread_attr_init (attributes : access pthread_attr_t) return int;\n    pragma Import (C, pthread_attr_init, \"pthread_attr_init\");"}, {"sha": "8723f2db8578e7172ff93fd162e23a9e62d911c9", "filename": "gcc/ada/s-osinte-tru64.ads", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -285,9 +285,9 @@ package System.OS_Interface is\n    pragma Inline (pthread_init);\n    --  This is a dummy procedure to share some GNULLI files\n \n-   ---------------------------\n-   --  POSIX.1c  Section 3  --\n-   ---------------------------\n+   -------------------------\n+   -- POSIX.1c  Section 3 --\n+   -------------------------\n \n    function sigwait\n      (set : access sigset_t;\n@@ -307,9 +307,9 @@ package System.OS_Interface is\n       oset : sigset_t_ptr) return int;\n    pragma Import (C, pthread_sigmask);\n \n-   ----------------------------\n-   --  POSIX.1c  Section 11  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 11 --\n+   --------------------------\n \n    function pthread_mutexattr_init (attr : access pthread_mutexattr_t)\n      return int;\n@@ -363,9 +363,9 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"__pthread_cond_timedwait\");\n \n-   ----------------------------\n-   --  POSIX.1c  Section 13  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 13 --\n+   --------------------------\n \n    function pthread_mutexattr_setprotocol\n      (attr     : access pthread_mutexattr_t;\n@@ -410,9 +410,9 @@ package System.OS_Interface is\n    function sched_yield return int;\n    pragma Import (C, sched_yield);\n \n-   ---------------------------\n-   -- P1003.1c - Section 16 --\n-   ---------------------------\n+   --------------------------\n+   -- P1003.1c  Section 16 --\n+   --------------------------\n \n    function pthread_attr_init (attributes : access pthread_attr_t)\n      return int;"}, {"sha": "d96a5ed4a54fd4e3a18ba1ff61b658e386709541", "filename": "gcc/ada/s-osinte-vms.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vms.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -407,19 +407,19 @@ package System.OS_Interface is\n      (newtype : int; oldtype : access int) return int;\n    pragma Import (C, pthread_setcanceltype, \"PTHREAD_SETCANCELTYPE\");\n \n-   ---------------------------\n-   --  POSIX.1c  Section 3  --\n-   ---------------------------\n+   -------------------------\n+   -- POSIX.1c  Section 3 --\n+   -------------------------\n \n    function pthread_lock_global_np return int;\n    pragma Import (C, pthread_lock_global_np, \"PTHREAD_LOCK_GLOBAL_NP\");\n \n    function pthread_unlock_global_np return int;\n    pragma Import (C, pthread_unlock_global_np, \"PTHREAD_UNLOCK_GLOBAL_NP\");\n \n-   ----------------------------\n-   --  POSIX.1c  Section 11  --\n-   ----------------------------\n+   --------------------------\n+   -- POSIX.1c  Section 11 --\n+   --------------------------\n \n    function pthread_mutexattr_init\n      (attr : access pthread_mutexattr_t) return int;\n@@ -522,9 +522,9 @@ package System.OS_Interface is\n \n    function sched_yield return int;\n \n-   -----------------------------\n-   --  P1003.1c - Section 16  --\n-   -----------------------------\n+   --------------------------\n+   -- P1003.1c  Section 16 --\n+   --------------------------\n \n    function pthread_attr_init (attributes : access pthread_attr_t) return int;\n    pragma Import (C, pthread_attr_init, \"PTHREAD_ATTR_INIT\");"}, {"sha": "09ace65013a4e1b13f36153a51e4b958279bf400", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -197,13 +197,13 @@ package System.OS_Interface is\n    function tickGet return ULONG;\n    pragma Import (C, tickGet, \"tickGet\");\n \n-   -----------------------------------------------------\n-   --  Convenience routine to convert between VxWorks --\n-   --  priority and Ada priority.                     --\n-   -----------------------------------------------------\n+   ----------------------\n+   -- Utility Routines --\n+   ----------------------\n \n    function To_VxWorks_Priority (Priority : in int) return int;\n    pragma Inline (To_VxWorks_Priority);\n+   --  Convenience routine to convert between VxWorks priority and Ada priority\n \n    --------------------------\n    -- VxWorks specific API --"}, {"sha": "9ee6648c6c988ed886f89585f452df2196bea148", "filename": "gcc/ada/s-osprim-vxworks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osprim-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-osprim-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-vxworks.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1998-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1998-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,9 +47,9 @@ package body System.OS_Primitives is\n    use System.OS_Interface;\n    use type Interfaces.C.int;\n \n-   --------------------------\n-   --  Internal functions  --\n-   --------------------------\n+   ------------------------\n+   -- Internal functions --\n+   ------------------------\n \n    function To_Clock_Ticks (D : Duration) return int;\n    --  Convert a duration value (in seconds) into clock ticks."}, {"sha": "c6d4ba07c7c2cb5845bf20c71d9b6049bd5a1844", "filename": "gcc/ada/s-taprop-dummy.adb", "status": "modified", "additions": 226, "deletions": 223, "changes": 449, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-dummy.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -55,49 +55,79 @@ package body System.Task_Primitives.Operations is\n    pragma Warnings (Off);\n    --  Turn off warnings since so many unreferenced parameters\n \n-   -----------------\n-   -- Stack_Guard --\n-   -----------------\n+   No_Tasking : Boolean;\n+   --  Comment required here ???\n \n-   procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n+   ----------------\n+   -- Abort_Task --\n+   ----------------\n+\n+   procedure Abort_Task (T : Task_Id) is\n    begin\n       null;\n-   end Stack_Guard;\n+   end Abort_Task;\n+\n+   ----------------\n+   -- Check_Exit --\n+   ----------------\n+\n+   --  Dummy version\n+\n+   function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n+   begin\n+      return True;\n+   end Check_Exit;\n \n    --------------------\n-   -- Get_Thread_Id  --\n+   -- Check_No_Locks --\n    --------------------\n \n-   function Get_Thread_Id (T : ST.Task_Id) return OSI.Thread_Id is\n+   function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n    begin\n-      return OSI.Thread_Id (T.Common.LL.Thread);\n-   end Get_Thread_Id;\n+      return True;\n+   end Check_No_Locks;\n \n-   ----------\n-   -- Self --\n-   ----------\n+   ----------------------\n+   -- Environment_Task --\n+   ----------------------\n \n-   function Self return Task_Id is\n+   function Environment_Task return Task_Id is\n    begin\n-      return Null_Task;\n-   end Self;\n+      return null;\n+   end Environment_Task;\n \n-   ---------------------\n-   -- Initialize_Lock --\n-   ---------------------\n+   -----------------\n+   -- Create_Task --\n+   -----------------\n \n-   procedure Initialize_Lock\n-     (Prio : System.Any_Priority;\n-      L    : access Lock)\n+   procedure Create_Task\n+     (T          : Task_Id;\n+      Wrapper    : System.Address;\n+      Stack_Size : System.Parameters.Size_Type;\n+      Priority   : System.Any_Priority;\n+      Succeeded  : out Boolean)\n    is\n+   begin\n+      Succeeded := False;\n+   end Create_Task;\n+\n+   ----------------\n+   -- Enter_Task --\n+   ----------------\n+\n+   procedure Enter_Task (Self_ID : Task_Id) is\n    begin\n       null;\n-   end Initialize_Lock;\n+   end Enter_Task;\n \n-   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n+   ---------------\n+   -- Exit_Task --\n+   ---------------\n+\n+   procedure Exit_Task is\n    begin\n       null;\n-   end Initialize_Lock;\n+   end Exit_Task;\n \n    -------------------\n    -- Finalize_Lock --\n@@ -113,92 +143,85 @@ package body System.Task_Primitives.Operations is\n       null;\n    end Finalize_Lock;\n \n-   ----------------\n-   -- Write_Lock --\n-   ----------------\n-\n-   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n-   begin\n-      Ceiling_Violation := False;\n-   end Write_Lock;\n+   ------------------\n+   -- Finalize_TCB --\n+   ------------------\n \n-   procedure Write_Lock\n-     (L           : access RTS_Lock;\n-      Global_Lock : Boolean := False)\n-   is\n+   procedure Finalize_TCB (T : Task_Id) is\n    begin\n       null;\n-   end Write_Lock;\n+   end Finalize_TCB;\n \n-   procedure Write_Lock (T : Task_Id) is\n+   ------------------\n+   -- Get_Priority --\n+   ------------------\n+\n+   function Get_Priority (T : Task_Id) return System.Any_Priority is\n    begin\n-      null;\n-   end Write_Lock;\n+      return 0;\n+   end Get_Priority;\n \n-   ---------------\n-   -- Read_Lock --\n-   ---------------\n+   --------------------\n+   -- Get_Thread_Id  --\n+   --------------------\n \n-   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n+   function Get_Thread_Id (T : ST.Task_Id) return OSI.Thread_Id is\n    begin\n-      Ceiling_Violation := False;\n-   end Read_Lock;\n+      return OSI.Thread_Id (T.Common.LL.Thread);\n+   end Get_Thread_Id;\n \n-   ------------\n-   -- Unlock --\n-   ------------\n+   ----------------\n+   -- Initialize --\n+   ----------------\n \n-   procedure Unlock (L : access Lock) is\n+   procedure Initialize (Environment_Task : Task_Id) is\n    begin\n       null;\n-   end Unlock;\n+   end Initialize;\n \n-   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   ---------------------\n+   -- Initialize_Lock --\n+   ---------------------\n+\n+   procedure Initialize_Lock\n+     (Prio : System.Any_Priority;\n+      L    : access Lock)\n+   is\n    begin\n       null;\n-   end Unlock;\n+   end Initialize_Lock;\n \n-   procedure Unlock (T : Task_Id) is\n+   procedure Initialize_Lock (L : access RTS_Lock; Level : Lock_Level) is\n    begin\n       null;\n-   end Unlock;\n+   end Initialize_Lock;\n \n-   -----------\n-   -- Sleep --\n-   -----------\n+   --------------------\n+   -- Initialize_TCB --\n+   --------------------\n \n-   procedure Sleep (Self_ID : Task_Id; Reason  : System.Tasking.Task_States) is\n+   procedure Initialize_TCB (Self_ID : Task_Id; Succeeded : out Boolean) is\n    begin\n-      null;\n-   end Sleep;\n+      Succeeded := False;\n+   end Initialize_TCB;\n \n-   -----------------\n-   -- Timed_Sleep --\n-   -----------------\n+   -------------------\n+   -- Is_Valid_Task --\n+   -------------------\n \n-   procedure Timed_Sleep\n-     (Self_ID  : Task_Id;\n-      Time     : Duration;\n-      Mode     : ST.Delay_Modes;\n-      Reason   : System.Tasking.Task_States;\n-      Timedout : out Boolean;\n-      Yielded  : out Boolean) is\n+   function Is_Valid_Task return Boolean is\n    begin\n-      Timedout := False;\n-      Yielded := False;\n-   end Timed_Sleep;\n+      return False;\n+   end Is_Valid_Task;\n \n-   -----------------\n-   -- Timed_Delay --\n-   -----------------\n+   --------------\n+   -- Lock_RTS --\n+   --------------\n \n-   procedure Timed_Delay\n-     (Self_ID : Task_Id;\n-      Time    : Duration;\n-      Mode    : ST.Delay_Modes) is\n+   procedure Lock_RTS is\n    begin\n       null;\n-   end Timed_Delay;\n+   end Lock_RTS;\n \n    ---------------------\n    -- Monotonic_Clock --\n@@ -209,54 +232,6 @@ package body System.Task_Primitives.Operations is\n       return 0.0;\n    end Monotonic_Clock;\n \n-   -------------------\n-   -- RT_Resolution --\n-   -------------------\n-\n-   function RT_Resolution return Duration is\n-   begin\n-      return 10#1.0#E-6;\n-   end RT_Resolution;\n-\n-   ------------\n-   -- Wakeup --\n-   ------------\n-\n-   procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n-   begin\n-      null;\n-   end Wakeup;\n-\n-   ------------------\n-   -- Set_Priority --\n-   ------------------\n-\n-   procedure Set_Priority\n-     (T                   : Task_Id;\n-      Prio                : System.Any_Priority;\n-      Loss_Of_Inheritance : Boolean := False) is\n-   begin\n-      null;\n-   end Set_Priority;\n-\n-   ------------------\n-   -- Get_Priority --\n-   ------------------\n-\n-   function Get_Priority (T : Task_Id) return System.Any_Priority is\n-   begin\n-      return 0;\n-   end Get_Priority;\n-\n-   ----------------\n-   -- Enter_Task --\n-   ----------------\n-\n-   procedure Enter_Task (Self_ID : Task_Id) is\n-   begin\n-      null;\n-   end Enter_Task;\n-\n    --------------\n    -- New_ATCB --\n    --------------\n@@ -266,14 +241,14 @@ package body System.Task_Primitives.Operations is\n       return new Ada_Task_Control_Block (Entry_Num);\n    end New_ATCB;\n \n-   -------------------\n-   -- Is_Valid_Task --\n-   -------------------\n+   ---------------\n+   -- Read_Lock --\n+   ---------------\n \n-   function Is_Valid_Task return Boolean is\n+   procedure Read_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n    begin\n-      return False;\n-   end Is_Valid_Task;\n+      Ceiling_Violation := False;\n+   end Read_Lock;\n \n    -----------------------------\n    -- Register_Foreign_Thread --\n@@ -284,103 +259,127 @@ package body System.Task_Primitives.Operations is\n       return null;\n    end Register_Foreign_Thread;\n \n-   ----------------------\n-   --  Initialize_TCB  --\n-   ----------------------\n+   -----------------\n+   -- Resume_Task --\n+   -----------------\n \n-   procedure Initialize_TCB (Self_ID : Task_Id; Succeeded : out Boolean) is\n+   function Resume_Task\n+     (T           : ST.Task_Id;\n+      Thread_Self : OSI.Thread_Id) return Boolean\n+   is\n    begin\n-      Succeeded := False;\n-   end Initialize_TCB;\n+      return False;\n+   end Resume_Task;\n \n-   -----------------\n-   -- Create_Task --\n-   -----------------\n+   -------------------\n+   -- RT_Resolution --\n+   -------------------\n \n-   procedure Create_Task\n-     (T          : Task_Id;\n-      Wrapper    : System.Address;\n-      Stack_Size : System.Parameters.Size_Type;\n-      Priority   : System.Any_Priority;\n-      Succeeded  : out Boolean) is\n+   function RT_Resolution return Duration is\n    begin\n-      Succeeded := False;\n-   end Create_Task;\n+      return 10#1.0#E-6;\n+   end RT_Resolution;\n+\n+   ----------\n+   -- Self --\n+   ----------\n+\n+   function Self return Task_Id is\n+   begin\n+      return Null_Task;\n+   end Self;\n \n    ------------------\n-   -- Finalize_TCB --\n+   -- Set_Priority --\n    ------------------\n \n-   procedure Finalize_TCB (T : Task_Id) is\n+   procedure Set_Priority\n+     (T                   : Task_Id;\n+      Prio                : System.Any_Priority;\n+      Loss_Of_Inheritance : Boolean := False)\n+   is\n    begin\n       null;\n-   end Finalize_TCB;\n+   end Set_Priority;\n \n-   ---------------\n-   -- Exit_Task --\n-   ---------------\n+   -----------\n+   -- Sleep --\n+   -----------\n \n-   procedure Exit_Task is\n+   procedure Sleep (Self_ID : Task_Id; Reason  : System.Tasking.Task_States) is\n    begin\n       null;\n-   end Exit_Task;\n+   end Sleep;\n \n-   ----------------\n-   -- Abort_Task --\n-   ----------------\n+   -----------------\n+   -- Stack_Guard --\n+   -----------------\n \n-   procedure Abort_Task (T : Task_Id) is\n+   procedure Stack_Guard (T : ST.Task_Id; On : Boolean) is\n    begin\n       null;\n-   end Abort_Task;\n+   end Stack_Guard;\n \n-   -----------\n-   -- Yield --\n-   -----------\n+   ------------------\n+   -- Suspend_Task --\n+   ------------------\n \n-   procedure Yield (Do_Yield : Boolean := True) is\n+   function Suspend_Task\n+     (T           : ST.Task_Id;\n+      Thread_Self : OSI.Thread_Id) return Boolean\n+   is\n    begin\n-      null;\n-   end Yield;\n-\n-   ----------------\n-   -- Check_Exit --\n-   ----------------\n+      return False;\n+   end Suspend_Task;\n \n-   --  Dummy versions.  The only currently working versions is for solaris\n-   --  (native).\n+   -----------------\n+   -- Timed_Delay --\n+   -----------------\n \n-   function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n+   procedure Timed_Delay\n+     (Self_ID : Task_Id;\n+      Time    : Duration;\n+      Mode    : ST.Delay_Modes)\n+   is\n    begin\n-      return True;\n-   end Check_Exit;\n+      null;\n+   end Timed_Delay;\n \n-   --------------------\n-   -- Check_No_Locks --\n-   --------------------\n+   -----------------\n+   -- Timed_Sleep --\n+   -----------------\n \n-   function Check_No_Locks (Self_ID : ST.Task_Id) return Boolean is\n+   procedure Timed_Sleep\n+     (Self_ID  : Task_Id;\n+      Time     : Duration;\n+      Mode     : ST.Delay_Modes;\n+      Reason   : System.Tasking.Task_States;\n+      Timedout : out Boolean;\n+      Yielded  : out Boolean)\n+   is\n    begin\n-      return True;\n-   end Check_No_Locks;\n+      Timedout := False;\n+      Yielded := False;\n+   end Timed_Sleep;\n \n-   ----------------------\n-   -- Environment_Task --\n-   ----------------------\n+   ------------\n+   -- Unlock --\n+   ------------\n \n-   function Environment_Task return Task_Id is\n+   procedure Unlock (L : access Lock) is\n    begin\n-      return null;\n-   end Environment_Task;\n+      null;\n+   end Unlock;\n \n-   --------------\n-   -- Lock_RTS --\n-   --------------\n+   procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n+   begin\n+      null;\n+   end Unlock;\n \n-   procedure Lock_RTS is\n+   procedure Unlock (T : Task_Id) is\n    begin\n       null;\n-   end Lock_RTS;\n+   end Unlock;\n \n    ----------------\n    -- Unlock_RTS --\n@@ -390,41 +389,45 @@ package body System.Task_Primitives.Operations is\n    begin\n       null;\n    end Unlock_RTS;\n+   ------------\n+   -- Wakeup --\n+   ------------\n \n-   ------------------\n-   -- Suspend_Task --\n-   ------------------\n-\n-   function Suspend_Task\n-     (T           : ST.Task_Id;\n-      Thread_Self : OSI.Thread_Id) return Boolean\n-   is\n+   procedure Wakeup (T : Task_Id; Reason : System.Tasking.Task_States) is\n    begin\n-      return False;\n-   end Suspend_Task;\n+      null;\n+   end Wakeup;\n \n-   -----------------\n-   -- Resume_Task --\n-   -----------------\n+   ----------------\n+   -- Write_Lock --\n+   ----------------\n \n-   function Resume_Task\n-     (T           : ST.Task_Id;\n-      Thread_Self : OSI.Thread_Id) return Boolean\n-   is\n+   procedure Write_Lock (L : access Lock; Ceiling_Violation : out Boolean) is\n    begin\n-      return False;\n-   end Resume_Task;\n+      Ceiling_Violation := False;\n+   end Write_Lock;\n \n-   ----------------\n-   -- Initialize --\n-   ----------------\n+   procedure Write_Lock\n+     (L           : access RTS_Lock;\n+      Global_Lock : Boolean := False)\n+   is\n+   begin\n+      null;\n+   end Write_Lock;\n \n-   procedure Initialize (Environment_Task : Task_Id) is\n+   procedure Write_Lock (T : Task_Id) is\n    begin\n       null;\n-   end Initialize;\n+   end Write_Lock;\n \n-   No_Tasking : Boolean;\n+   -----------\n+   -- Yield --\n+   -----------\n+\n+   procedure Yield (Do_Yield : Boolean := True) is\n+   begin\n+      null;\n+   end Yield;\n \n begin\n    --  Can't raise an exception because target independent packages try to"}, {"sha": "c5a13d03951a90d93e4a95db40869ba314000139", "filename": "gcc/ada/s-taprop-hpux-dce.adb", "status": "modified", "additions": 20, "deletions": 29, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-hpux-dce.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-hpux-dce.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -73,7 +73,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes\n@@ -93,9 +93,9 @@ package body System.Task_Primitives.Operations is\n    package PIO renames System.Task_Primitives.Interrupt_Operations;\n    package SSL renames System.Soft_Links;\n \n-   ------------------\n-   --  Local Data  --\n-   ------------------\n+   ----------------\n+   -- Local Data --\n+   ----------------\n \n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n@@ -109,7 +109,7 @@ package body System.Task_Primitives.Operations is\n    --  Key used to find the Ada Task_Id associated with a thread\n \n    Environment_Task_Id : Task_Id;\n-   --  A variable to hold Task_Id for the environment task.\n+   --  A variable to hold Task_Id for the environment task\n \n    Unblocked_Signal_Mask : aliased sigset_t;\n    --  The set of signals that should unblocked in all tasks\n@@ -125,10 +125,10 @@ package body System.Task_Primitives.Operations is\n    --  stage considered dead, and no further work is planned on it.\n \n    FIFO_Within_Priorities : constant Boolean := Dispatching_Policy = 'F';\n-   --  Indicates whether FIFO_Within_Priorities is set.\n+   --  Indicates whether FIFO_Within_Priorities is set\n \n    Foreign_Task_Elaborated : aliased Boolean := True;\n-   --  Used to identified fake tasks (i.e., non-Ada Threads).\n+   --  Used to identified fake tasks (i.e., non-Ada Threads)\n \n    --------------------\n    -- Local Packages --\n@@ -138,31 +138,31 @@ package body System.Task_Primitives.Operations is\n \n       procedure Initialize (Environment_Task : Task_Id);\n       pragma Inline (Initialize);\n-      --  Initialize various data needed by this package.\n+      --  Initialize various data needed by this package\n \n       function Is_Valid_Task return Boolean;\n       pragma Inline (Is_Valid_Task);\n       --  Does the executing thread have a TCB?\n \n       procedure Set (Self_Id : Task_Id);\n       pragma Inline (Set);\n-      --  Set the self id for the current task.\n+      --  Set the self id for the current task\n \n       function Self return Task_Id;\n       pragma Inline (Self);\n-      --  Return a pointer to the Ada Task Control Block of the calling task.\n+      --  Return a pointer to the Ada Task Control Block of the calling task\n \n    end Specific;\n \n    package body Specific is separate;\n-   --  The body of this package is target specific.\n+   --  The body of this package is target specific\n \n    ---------------------------------\n    -- Support for foreign threads --\n    ---------------------------------\n \n    function Register_Foreign_Thread (Thread : Thread_Id) return Task_Id;\n-   --  Allocate and Initialize a new ATCB for the current Thread.\n+   --  Allocate and Initialize a new ATCB for the current Thread\n \n    function Register_Foreign_Thread\n      (Thread : Thread_Id) return Task_Id is separate;\n@@ -339,7 +339,6 @@ package body System.Task_Primitives.Operations is\n      (L : access RTS_Lock; Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -349,7 +348,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (T : Task_Id) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_lock (T.Common.LL.L'Access);\n@@ -372,7 +370,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_unlock (L.L'Access);\n       pragma Assert (Result = 0);\n@@ -389,7 +386,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_Id) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -417,7 +413,8 @@ package body System.Task_Primitives.Operations is\n            (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n       end if;\n \n-      --  EINTR is not considered a failure.\n+      --  EINTR is not considered a failure\n+\n       pragma Assert (Result = 0 or else Result = EINTR);\n    end Sleep;\n \n@@ -498,9 +495,8 @@ package body System.Task_Primitives.Operations is\n       Result     : Interfaces.C.int;\n \n    begin\n-      --  Only the little window between deferring abort and\n-      --  locking Self_ID is the reason we need to\n-      --  check for pending abort and priority change below! :(\n+      --  The little window between deferring abort and locking Self_ID is the\n+      --  only reason to check for pending abort and priority change below!\n \n       SSL.Abort_Defer.all;\n \n@@ -564,7 +560,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TS     : aliased timespec;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := Clock_Gettime (CLOCK_REALTIME, TS'Unchecked_Access);\n       pragma Assert (Result = 0);\n@@ -918,8 +913,7 @@ package body System.Task_Primitives.Operations is\n    -- Check_Exit --\n    ----------------\n \n-   --  Dummy versions.  The only currently working versions is for solaris\n-   --  (native).\n+   --  Dummy version\n \n    function Check_Exit (Self_ID : ST.Task_Id) return Boolean is\n       pragma Unreferenced (Self_ID);\n@@ -974,7 +968,6 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Suspend_Task;\n@@ -989,7 +982,6 @@ package body System.Task_Primitives.Operations is\n    is\n       pragma Unreferenced (T);\n       pragma Unreferenced (Thread_Self);\n-\n    begin\n       return False;\n    end Resume_Task;\n@@ -1007,9 +999,8 @@ package body System.Task_Primitives.Operations is\n       function State\n         (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n       pragma Import (C, State, \"__gnat_get_interrupt_state\");\n-      --  Get interrupt state.  Defined in a-init.c\n-      --  The input argument is the interrupt number,\n-      --  and the result is one of the following:\n+      --  Get interrupt state. Defined in a-init.c. The input argument is\n+      --  the interrupt number, and the result is one of the following:\n \n       Default : constant Character := 's';\n       --    'n'   this interrupt not set by any Interrupt_State pragma\n@@ -1021,7 +1012,7 @@ package body System.Task_Primitives.Operations is\n    begin\n       Environment_Task_Id := Environment_Task;\n \n-      --  Initialize the lock used to synchronize chain of all ATCBs.\n+      --  Initialize the lock used to synchronize chain of all ATCBs\n \n       Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n "}, {"sha": "78580ac55587ad719811790419d2b65452b828ba", "filename": "gcc/ada/s-taprop-irix-athread.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-irix-athread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-irix-athread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix-athread.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -74,7 +74,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes\n@@ -129,9 +129,9 @@ package body System.Task_Primitives.Operations is\n    function To_Task_Id is new Unchecked_Conversion (System.Address, Task_Id);\n    function To_Address is new Unchecked_Conversion (Task_Id, System.Address);\n \n-   -------------------\n-   --  Stack_Guard  --\n-   -------------------\n+   -----------------\n+   -- Stack_Guard --\n+   -----------------\n \n    --  The underlying thread system sets a guard page at the\n    --  bottom of a thread stack, so nothing is needed.\n@@ -566,7 +566,6 @@ package body System.Task_Primitives.Operations is\n       T.Common.Current_Priority := Prio;\n       Result := pthread_setprio (T.Common.LL.Thread, Interfaces.C.int (Prio));\n       pragma Assert (Result /= FUNC_ERR);\n-\n    end Set_Priority;\n \n    ------------------\n@@ -634,9 +633,9 @@ package body System.Task_Primitives.Operations is\n       return null;\n    end Register_Foreign_Thread;\n \n-   ----------------------\n-   --  Initialize_TCB  --\n-   ----------------------\n+   --------------------\n+   -- Initialize_TCB --\n+   --------------------\n \n    procedure Initialize_TCB (Self_ID : Task_Id; Succeeded : out Boolean) is\n       Result    : Interfaces.C.int;\n@@ -942,7 +941,7 @@ package body System.Task_Primitives.Operations is\n       pragma Assert (Result /= FUNC_ERR);\n \n       if Result = FUNC_ERR then\n-         raise Storage_Error;               --  Insufficient resources.\n+         raise Storage_Error;               --  Insufficient resources\n       end if;\n    end Initialize_Athread_Library;\n "}, {"sha": "21b330182d598108559e90534aaed7faae9cd139", "filename": "gcc/ada/s-taprop-irix.adb", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-irix.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -75,7 +75,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.Program_Info;\n --  used for Default_Task_Stack\n@@ -104,9 +104,9 @@ package body System.Task_Primitives.Operations is\n \n    package SSL renames System.Soft_Links;\n \n-   ------------------\n-   --  Local Data  --\n-   ------------------\n+   ----------------\n+   -- Local Data --\n+   ----------------\n \n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n@@ -120,7 +120,7 @@ package body System.Task_Primitives.Operations is\n    --  Key used to find the Ada Task_Id associated with a thread\n \n    Environment_Task_Id : Task_Id;\n-   --  A variable to hold Task_Id for the environment task.\n+   --  A variable to hold Task_Id for the environment task\n \n    Locking_Policy : Character;\n    pragma Import (C, Locking_Policy, \"__gl_locking_policy\");\n@@ -130,7 +130,7 @@ package body System.Task_Primitives.Operations is\n    Unblocked_Signal_Mask : aliased sigset_t;\n \n    Foreign_Task_Elaborated : aliased Boolean := True;\n-   --  Used to identified fake tasks (i.e., non-Ada Threads).\n+   --  Used to identified fake tasks (i.e., non-Ada Threads)\n \n    --------------------\n    -- Local Packages --\n@@ -140,31 +140,31 @@ package body System.Task_Primitives.Operations is\n \n       procedure Initialize (Environment_Task : Task_Id);\n       pragma Inline (Initialize);\n-      --  Initialize various data needed by this package.\n+      --  Initialize various data needed by this package\n \n       function Is_Valid_Task return Boolean;\n       pragma Inline (Is_Valid_Task);\n       --  Does executing thread have a TCB?\n \n       procedure Set (Self_Id : Task_Id);\n       pragma Inline (Set);\n-      --  Set the self id for the current task.\n+      --  Set the self id for the current task\n \n       function Self return Task_Id;\n       pragma Inline (Self);\n-      --  Return a pointer to the Ada Task Control Block of the calling task.\n+      --  Return a pointer to the Ada Task Control Block of the calling task\n \n    end Specific;\n \n    package body Specific is separate;\n-   --  The body of this package is target specific.\n+   --  The body of this package is target specific\n \n    ---------------------------------\n    -- Support for foreign threads --\n    ---------------------------------\n \n    function Register_Foreign_Thread (Thread : Thread_Id) return Task_Id;\n-   --  Allocate and Initialize a new ATCB for the current Thread.\n+   --  Allocate and Initialize a new ATCB for the current Thread\n \n    function Register_Foreign_Thread\n      (Thread : Thread_Id) return Task_Id is separate;\n@@ -176,7 +176,7 @@ package body System.Task_Primitives.Operations is\n    function To_Address is new Unchecked_Conversion (Task_Id, System.Address);\n \n    procedure Abort_Handler (Sig : Signal);\n-   --  Signal handler used to implement asynchronous abort.\n+   --  Signal handler used to implement asynchronous abort\n \n    -------------------\n    -- Abort_Handler --\n@@ -440,7 +440,7 @@ package body System.Task_Primitives.Operations is\n            (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n       end if;\n \n-      --  EINTR is not considered a failure.\n+      --  EINTR is not considered a failure\n \n       pragma Assert (Result = 0 or else Result = EINTR);\n    end Sleep;\n@@ -506,9 +506,8 @@ package body System.Task_Primitives.Operations is\n    -- Timed_Delay --\n    -----------------\n \n-   --  This is for use in implementing delay statements, so\n-   --  we assume the caller is abort-deferred but is holding\n-   --  no locks.\n+   --  This is for use in implementing delay statements, so we assume\n+   --  the caller is abort-deferred but is holding no locks.\n \n    procedure Timed_Delay\n      (Self_ID : Task_Id;\n@@ -521,9 +520,9 @@ package body System.Task_Primitives.Operations is\n       Result     : Interfaces.C.int;\n \n    begin\n-      --  Only the little window between deferring abort and\n-      --  locking Self_ID is the reason we need to\n-      --  check for pending abort and priority change below! :(\n+      --  The little window between deferring abort and locking Self_ID is\n+      --  the only reason we need to check for pending abort and priority\n+      --  change below!\n \n       SSL.Abort_Defer.all;\n \n@@ -598,10 +597,11 @@ package body System.Task_Primitives.Operations is\n       --  resolution of reading the clock. Even though this last value is\n       --  only guaranteed to be 100 Hz, at least the Origin 200 appears to\n       --  have a microsecond resolution or better.\n+\n       --  ??? We should figure out a method to return the right value on\n       --  all SGI hardware.\n \n-      return 0.000_001; --  Assume microsecond resolution of clock\n+      return 0.000_001;\n    end RT_Resolution;\n \n    ------------\n@@ -1121,8 +1121,9 @@ begin\n       end loop;\n \n       --  Pick the highest resolution Clock for Clock_Realtime\n+\n       --  ??? This code currently doesn't work (see c94007[ab] for example)\n-      --\n+\n       --  if syssgi (SGI_CYCLECNTR_SIZE) = 64 then\n       --     Real_Time_Clock_Id := CLOCK_SGI_CYCLE;\n       --  else"}, {"sha": "e2aab2e2c0ea141002fd004a30a36162b2288f62", "filename": "gcc/ada/s-taprop-linux.adb", "status": "modified", "additions": 16, "deletions": 23, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-linux.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -75,7 +75,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes\n@@ -97,9 +97,9 @@ package body System.Task_Primitives.Operations is\n \n    package SSL renames System.Soft_Links;\n \n-   ------------------\n-   --  Local Data  --\n-   ------------------\n+   ----------------\n+   -- Local Data --\n+   ----------------\n \n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n@@ -113,18 +113,18 @@ package body System.Task_Primitives.Operations is\n    --  Key used to find the Ada Task_Id associated with a thread\n \n    Environment_Task_Id : Task_Id;\n-   --  A variable to hold Task_Id for the environment task.\n+   --  A variable to hold Task_Id for the environment task\n \n    Unblocked_Signal_Mask : aliased sigset_t;\n    --  The set of signals that should unblocked in all tasks\n \n-   --  The followings are internal configuration constants needed.\n+   --  The followings are internal configuration constants needed\n+\n    Priority_Ceiling_Emulation : constant Boolean := True;\n \n    Next_Serial_Number : Task_Serial_Number := 100;\n    --  We start at 100, to reserve some special values for\n    --  using in error checking.\n-   --  The following are internal configuration constants needed.\n \n    Time_Slice_Val : Integer;\n    pragma Import (C, Time_Slice_Val, \"__gl_time_slice_val\");\n@@ -133,7 +133,7 @@ package body System.Task_Primitives.Operations is\n    pragma Import (C, Dispatching_Policy, \"__gl_task_dispatching_policy\");\n \n    FIFO_Within_Priorities : constant Boolean := Dispatching_Policy = 'F';\n-   --  Indicates whether FIFO_Within_Priorities is set.\n+   --  Indicates whether FIFO_Within_Priorities is set\n \n    --  The following are effectively constants, but they need to\n    --  be initialized by calling a pthread_ function.\n@@ -142,7 +142,7 @@ package body System.Task_Primitives.Operations is\n    Cond_Attr    : aliased pthread_condattr_t;\n \n    Foreign_Task_Elaborated : aliased Boolean := True;\n-   --  Used to identified fake tasks (i.e., non-Ada Threads).\n+   --  Used to identified fake tasks (i.e., non-Ada Threads)\n \n    --------------------\n    -- Local Packages --\n@@ -152,15 +152,15 @@ package body System.Task_Primitives.Operations is\n \n       procedure Initialize (Environment_Task : Task_Id);\n       pragma Inline (Initialize);\n-      --  Initialize various data needed by this package.\n+      --  Initialize various data needed by this package\n \n       function Is_Valid_Task return Boolean;\n       pragma Inline (Is_Valid_Task);\n       --  Does executing thread have a TCB?\n \n       procedure Set (Self_Id : Task_Id);\n       pragma Inline (Set);\n-      --  Set the self id for the current task.\n+      --  Set the self id for the current task\n \n       function Self return Task_Id;\n       pragma Inline (Self);\n@@ -169,14 +169,14 @@ package body System.Task_Primitives.Operations is\n    end Specific;\n \n    package body Specific is separate;\n-   --  The body of this package is target specific.\n+   --  The body of this package is target specific\n \n    ---------------------------------\n    -- Support for foreign threads --\n    ---------------------------------\n \n    function Register_Foreign_Thread (Thread : Thread_Id) return Task_Id;\n-   --  Allocate and Initialize a new ATCB for the current Thread.\n+   --  Allocate and Initialize a new ATCB for the current Thread\n \n    function Register_Foreign_Thread\n      (Thread : Thread_Id) return Task_Id is separate;\n@@ -323,15 +323,13 @@ package body System.Task_Primitives.Operations is\n \n    procedure Finalize_Lock (L : access Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L.L'Access);\n       pragma Assert (Result = 0);\n    end Finalize_Lock;\n \n    procedure Finalize_Lock (L : access RTS_Lock) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_mutex_destroy (L);\n       pragma Assert (Result = 0);\n@@ -381,7 +379,6 @@ package body System.Task_Primitives.Operations is\n       Global_Lock : Boolean := False)\n    is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_lock (L);\n@@ -391,7 +388,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Write_Lock (T : Task_Id) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_lock (T.Common.LL.L'Access);\n@@ -437,7 +433,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (L : access RTS_Lock; Global_Lock : Boolean := False) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock or else Global_Lock then\n          Result := pthread_mutex_unlock (L);\n@@ -447,7 +442,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Unlock (T : Task_Id) is\n       Result : Interfaces.C.int;\n-\n    begin\n       if not Single_Lock then\n          Result := pthread_mutex_unlock (T.Common.LL.L'Access);\n@@ -478,7 +472,8 @@ package body System.Task_Primitives.Operations is\n            (Self_ID.Common.LL.CV'Access, Self_ID.Common.LL.L'Access);\n       end if;\n \n-      --  EINTR is not considered a failure.\n+      --  EINTR is not considered a failure\n+\n       pragma Assert (Result = 0 or else Result = EINTR);\n    end Sleep;\n \n@@ -631,7 +626,6 @@ package body System.Task_Primitives.Operations is\n    function Monotonic_Clock return Duration is\n       TV     : aliased struct_timeval;\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := gettimeofday (TV'Access, System.Null_Address);\n       pragma Assert (Result = 0);\n@@ -785,7 +779,7 @@ package body System.Task_Primitives.Operations is\n       Result : Interfaces.C.int;\n \n    begin\n-      --  Give the task a unique serial number.\n+      --  Give the task a unique serial number\n \n       Self_ID.Serial_Number := Next_Serial_Number;\n       Next_Serial_Number := Next_Serial_Number + 1;\n@@ -932,7 +926,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Task (T : Task_Id) is\n       Result : Interfaces.C.int;\n-\n    begin\n       Result := pthread_kill (T.Common.LL.Thread,\n         Signal (System.Interrupt_Management.Abort_Task_Interrupt));"}, {"sha": "ec50bae835b04f4307cd52823af920dab7669bb2", "filename": "gcc/ada/s-taprop-lynxos.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-lynxos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-lynxos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-lynxos.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -74,7 +74,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes\n@@ -821,17 +821,17 @@ package body System.Task_Primitives.Operations is\n       end if;\n    end Register_Foreign_Thread;\n \n-   ----------------------\n-   --  Initialize_TCB  --\n-   ----------------------\n+   --------------------\n+   -- Initialize_TCB --\n+   --------------------\n \n    procedure Initialize_TCB (Self_ID : Task_Id; Succeeded : out Boolean) is\n       Mutex_Attr : aliased pthread_mutexattr_t;\n       Result     : Interfaces.C.int;\n       Cond_Attr  : aliased pthread_condattr_t;\n \n    begin\n-      --  Give the task a unique serial number.\n+      --  Give the task a unique serial number\n \n       Self_ID.Serial_Number := Next_Serial_Number;\n       Next_Serial_Number := Next_Serial_Number + 1;\n@@ -1016,8 +1016,10 @@ package body System.Task_Primitives.Operations is\n    procedure Abort_Task (T : Task_Id) is\n       Result : Interfaces.C.int;\n    begin\n-      Result := pthread_kill (T.Common.LL.Thread,\n-        Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n+      Result :=\n+        pthread_kill\n+          (T.Common.LL.Thread,\n+           Signal (System.Interrupt_Management.Abort_Task_Interrupt));\n       pragma Assert (Result = 0);\n    end Abort_Task;\n "}, {"sha": "5656661f8ca099d3c9c6570ae27ee9afd6cfa272", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -67,7 +67,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes"}, {"sha": "c53a05e122cc36fa2f3e888813ccba4086e4a407", "filename": "gcc/ada/s-taprop-os2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-os2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-os2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-os2.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -68,7 +68,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes"}, {"sha": "4d8057dc3d21dbc48aa8a57ec42dbcf14bc64e98", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -79,7 +79,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes"}, {"sha": "69db09f7e47a00117044e25a4da85897c7fdb0a0", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -81,7 +81,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes\n@@ -311,9 +311,9 @@ package body System.Task_Primitives.Operations is\n       end if;\n    end Abort_Handler;\n \n-   -------------------\n-   --  Stack_Guard  --\n-   -------------------\n+   -----------------\n+   -- Stack_Guard --\n+   -----------------\n \n    --  The underlying thread system sets a guard page at the\n    --  bottom of a thread stack, so nothing is needed.\n@@ -325,9 +325,9 @@ package body System.Task_Primitives.Operations is\n       null;\n    end Stack_Guard;\n \n-   --------------------\n-   -- Get_Thread_Id  --\n-   --------------------\n+   -------------------\n+   -- Get_Thread_Id --\n+   -------------------\n \n    function Get_Thread_Id (T : ST.Task_Id) return OSI.Thread_Id is\n    begin\n@@ -506,7 +506,7 @@ package body System.Task_Primitives.Operations is\n    end Initialize_Lock;\n \n    procedure Initialize_Lock\n-     (L : access RTS_Lock;\n+     (L     : access RTS_Lock;\n       Level : Lock_Level)\n    is\n       Result : Interfaces.C.int;"}, {"sha": "d569831f87ee46a60ec942afd285849a775be269", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -77,7 +77,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes"}, {"sha": "41612d49e306118ea283e4d9e686a04a2740240a", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -61,7 +61,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Primitives;\n --  used for Delay_Modes\n@@ -81,9 +81,9 @@ package body System.Task_Primitives.Operations is\n \n    package SSL renames System.Soft_Links;\n \n-   ------------------\n-   --  Local Data  --\n-   ------------------\n+   ----------------\n+   -- Local Data --\n+   ----------------\n \n    --  The followings are logically constants, but need to be initialized\n    --  at run time.\n@@ -706,9 +706,9 @@ package body System.Task_Primitives.Operations is\n       end if;\n    end Register_Foreign_Thread;\n \n-   ----------------------\n-   --  Initialize_TCB  --\n-   ----------------------\n+   --------------------\n+   -- Initialize_TCB --\n+   --------------------\n \n    procedure Initialize_TCB (Self_ID : Task_Id; Succeeded : out Boolean) is\n       Mutex_Attr : aliased pthread_mutexattr_t;"}, {"sha": "a3340a6f615913d20d3df2e3ded3eec29fd71bb2", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -55,7 +55,7 @@ with System.Soft_Links;\n --  Note that we do not use System.Tasking.Initialization directly since\n --  this is a higher level package that we shouldn't depend on. For example\n --  when using the restricted run time, it is replaced by\n---  System.Tasking.Restricted.Initialization\n+--  System.Tasking.Restricted.Stages.\n \n with System.OS_Interface;\n --  used for various type, constant, and operations"}, {"sha": "3d4a0fdb892f77593dc175973990b58d1e875002", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -120,9 +120,9 @@ package body System.Tasking.Restricted.Stages is\n \n    procedure Timed_Delay_T (Time : Duration; Mode : Integer);\n \n-   ------------------------\n-   --  Local Subprograms --\n-   ------------------------\n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n \n    procedure Task_Wrapper (Self_ID : Task_Id);\n    --  This is the procedure that is called by the GNULL from the"}, {"sha": "ca58df61e59ee9ed61cafd357664c42677950082", "filename": "gcc/ada/s-tasini.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-tasini.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-tasini.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -106,15 +106,15 @@ package System.Tasking.Initialization is\n    --  For the sake of efficiency, the version with Self_ID as parameter\n    --  should used wherever possible. These are all nestable.\n \n-   --  Non-nestable inline versions  --\n+   --  Non-nestable inline versions\n \n    procedure Defer_Abort (Self_ID : Task_Id);\n    pragma Inline (Defer_Abort);\n \n    procedure Undefer_Abort (Self_ID : Task_Id);\n    pragma Inline (Undefer_Abort);\n \n-   --  Nestable inline versions  --\n+   --  Nestable inline versions\n \n    procedure Defer_Abort_Nestable (Self_ID : Task_Id);\n    pragma Inline (Defer_Abort_Nestable);\n@@ -135,9 +135,9 @@ package System.Tasking.Initialization is\n    --  Returns Boolean'Pos (True) iff abort signal should raise\n    --  Standard.Abort_Signal. Only used by IRIX currently.\n \n-   ---------------------------\n-   --  Change Base Priority --\n-   ---------------------------\n+   --------------------------\n+   -- Change Base Priority --\n+   --------------------------\n \n    procedure Change_Base_Priority (T : Task_Id);\n    --  Change the base priority of T."}, {"sha": "8e5616bf85f604cfe525792bdb2558bc16229fbd", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 27, "deletions": 28, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -55,53 +55,53 @@ with Unchecked_Conversion;\n \n package System.Tasking is\n \n-   --  -------------------\n-   --  -- Locking Rules --\n-   --  -------------------\n-   --\n+   -------------------\n+   -- Locking Rules --\n+   -------------------\n+\n    --  The following rules must be followed at all times, to prevent\n    --  deadlock and generally ensure correct operation of locking.\n-   --\n+\n    --  . Never lock a lock unless abort is deferred.\n-   --\n+\n    --  . Never undefer abort while holding a lock.\n-   --\n+\n    --  . Overlapping critical sections must be properly nested,\n    --    and locks must be released in LIFO order.\n    --    e.g., the following is not allowed:\n-   --\n+\n    --         Lock (X);\n    --         ...\n    --         Lock (Y);\n    --         ...\n    --         Unlock (X);\n    --         ...\n    --         Unlock (Y);\n-   --\n+\n    --  Locks with lower (smaller) level number cannot be locked\n    --  while holding a lock with a higher level number. (The level\n    --  number is the number at the left.)\n-   --\n+\n    --  1. System.Tasking.PO_Simple.Protection.L (any PO lock)\n    --  2. System.Tasking.Initialization.Global_Task_Lock (in body)\n    --  3. System.Task_Primitives.Operations.Single_RTS_Lock\n    --  4. System.Tasking.Ada_Task_Control_Block.LL.L (any TCB lock)\n-   --\n+\n    --  Clearly, there can be no circular chain of hold-and-wait\n    --  relationships involving locks in different ordering levels.\n-   --\n+\n    --  We used to have Global_Task_Lock before Protection.L but this was\n    --  clearly wrong since there can be calls to \"new\" inside protected\n    --  operations. The new ordering prevents these failures.\n-   --\n+\n    --  Sometimes we need to hold two ATCB locks at the same time. To allow\n    --  us to order the locking, each ATCB is given a unique serial\n    --  number. If one needs to hold locks on several ATCBs at once,\n    --  the locks with lower serial numbers must be locked first.\n-   --\n+\n    --  We don't always need to check the serial numbers, since\n    --  the serial numbers are assigned sequentially, and so:\n-   --\n+\n    --  . The parent of a task always has a lower serial number.\n    --  . The activator of a task always has a lower serial number.\n    --  . The environment task has a lower serial number than any other task.\n@@ -360,25 +360,24 @@ package System.Tasking is\n    --  Some protection is described in terms of tasks related to the\n    --  ATCB being protected. These are:\n \n-   --    Self: The task which is controlled by this ATCB.\n-   --    Acceptor: A task accepting a call from Self.\n-   --    Caller: A task calling an entry of Self.\n-   --    Parent: The task executing the master on which Self depends.\n-   --    Dependent: A task dependent on Self.\n-   --    Activator: The task that created Self and initiated its activation.\n-   --    Created: A task created and activated by Self.\n+   --    Self:      The task which is controlled by this ATCB\n+   --    Acceptor:  A task accepting a call from Self\n+   --    Caller:    A task calling an entry of Self\n+   --    Parent:    The task executing the master on which Self depends\n+   --    Dependent: A task dependent on Self\n+   --    Activator: The task that created Self and initiated its activation\n+   --    Created:   A task created and activated by Self\n \n    --  Note: The order of the fields is important to implement efficiently\n    --  tasking support under gdb.\n    --  Currently gdb relies on the order of the State, Parent, Base_Priority,\n    --  Task_Image, Task_Image_Len, Call and LL fields.\n \n-   ----------------------------------------------------------------------\n-   --  Common ATCB section                                             --\n-   --                                                                  --\n-   --  This section is used by all GNARL implementations (regular and  --\n-   --  restricted)                                                     --\n-   ----------------------------------------------------------------------\n+   -------------------------\n+   -- Common ATCB section --\n+   -------------------------\n+\n+   --  Section used by all GNARL implementations (regular and restricted)\n \n    type Common_ATCB is record\n       State : Task_States;"}, {"sha": "9f363593eeafa3aa6f30b2ab3658dd47a24e8e6b", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -443,9 +443,9 @@ package body Scng is\n             Error_Msg_S (\"digit expected\");\n          end Error_Digit_Expected;\n \n-         -------------------\n-         --  Scan_Integer --\n-         -------------------\n+         ------------------\n+         -- Scan_Integer --\n+         ------------------\n \n          procedure Scan_Integer is\n             C : Character;"}, {"sha": "c1b018dc753cf95cef2e35ca63f226543ead8d63", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -250,7 +250,8 @@ package body Sem_Attr is\n       --  two attribute expressions are present\n \n       procedure Legal_Formal_Attribute;\n-      --  Common processing for attributes Definite, and Has_Discriminants\n+      --  Common processing for attributes Definite, Has_Access_Values,\n+      --  and Has_Discriminants\n \n       procedure Check_Integer_Type;\n       --  Verify that prefix of attribute N is an integer type\n@@ -2602,6 +2603,15 @@ package body Sem_Attr is\n          Set_Etype (N, P_Base_Type);\n          Resolve (E1, P_Base_Type);\n \n+      -----------------------\n+      -- Has_Access_Values --\n+      -----------------------\n+\n+      when Attribute_Has_Access_Values =>\n+         Check_Type;\n+         Check_E0;\n+         Set_Etype (N, Standard_Boolean);\n+\n       -----------------------\n       -- Has_Discriminants --\n       -----------------------\n@@ -4434,6 +4444,8 @@ package body Sem_Attr is\n \n       elsif (Id = Attribute_Definite\n                or else\n+             Id = Attribute_Has_Access_Values\n+               or else\n              Id = Attribute_Has_Discriminants\n                or else\n              Id = Attribute_Type_Class\n@@ -4541,11 +4553,14 @@ package body Sem_Attr is\n       --  In addition Component_Size is possibly foldable, even though it\n       --  can never be static.\n \n-      --  Definite, Has_Discriminants, Type_Class and Unconstrained_Array are\n-      --  again exceptions, because they apply as well to unconstrained types.\n+      --  Definite, Has_Access_Values, Has_Discriminants, Type_Class, and\n+      --  Unconstrained_Array are again exceptions, because they apply as\n+      --  well to unconstrained types.\n \n       elsif Id = Attribute_Definite\n               or else\n+            Id = Attribute_Has_Access_Values\n+              or else\n             Id = Attribute_Has_Discriminants\n               or else\n             Id = Attribute_Type_Class\n@@ -4947,6 +4962,15 @@ package body Sem_Attr is\n          Fold_Ureal (N,\n            Eval_Fat.Fraction (P_Root_Type, Expr_Value_R (E1)), Static);\n \n+      -----------------------\n+      -- Has_Access_Values --\n+      -----------------------\n+\n+      when Attribute_Has_Access_Values =>\n+         Rewrite (N, New_Occurrence_Of\n+           (Boolean_Literals (Has_Access_Values (P_Root_Type)), Loc));\n+         Analyze_And_Resolve (N, Standard_Boolean);\n+\n       -----------------------\n       -- Has_Discriminants --\n       -----------------------"}, {"sha": "ea2f4ecccb1f9961fa700c7a4f94241dc66e0745", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1088,9 +1088,9 @@ package body Sem_Cat is\n \n    end Validate_Object_Declaration;\n \n-   --------------------------------\n-   --  Validate_RCI_Declarations --\n-   --------------------------------\n+   -------------------------------\n+   -- Validate_RCI_Declarations --\n+   -------------------------------\n \n    procedure Validate_RCI_Declarations (P : Entity_Id) is\n       E : Entity_Id;"}, {"sha": "444c0836975630aa73358566f8eadb9a1468d150", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1311,9 +1311,9 @@ package body Sem_Ch10 is\n       --  Remove current scope from scope stack, and preserve the list\n       --  of use clauses in it, to be reinstalled after context is analyzed.\n \n-      ------------------------------\n-      --  Analyze_Subunit_Context --\n-      ------------------------------\n+      -----------------------------\n+      -- Analyze_Subunit_Context --\n+      -----------------------------\n \n       procedure Analyze_Subunit_Context is\n          Item      :  Node_Id;\n@@ -2868,9 +2868,9 @@ package body Sem_Ch10 is\n       --  context_clause as a nonlimited with_clause that mentions\n       --  the same library.\n \n-      --------------------\n-      --  Check_Parent  --\n-      --------------------\n+      ------------------\n+      -- Check_Parent --\n+      ------------------\n \n       procedure Check_Parent (P : Node_Id; W : Node_Id) is\n          Item   : Node_Id;"}, {"sha": "4e05bd4fb87c55b0031702292964487ecb5349bf", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -2549,6 +2549,12 @@ package body Sem_Ch12 is\n                   if Unit_Requires_Body (Scop) then\n                      Enclosing_Body_Present := True;\n                      exit;\n+\n+                  elsif In_Open_Scopes (Scop)\n+                    and then In_Package_Body (Scop)\n+                  then\n+                     Enclosing_Body_Present := True;\n+                     exit;\n                   end if;\n \n                   exit when Is_Compilation_Unit (Scop);\n@@ -2847,9 +2853,9 @@ package body Sem_Ch12 is\n          end if;\n    end Analyze_Package_Instantiation;\n \n-   ---------------------------\n-   --  Inline_Instance_Body --\n-   ---------------------------\n+   --------------------------\n+   -- Inline_Instance_Body --\n+   --------------------------\n \n    procedure Inline_Instance_Body\n      (N        : Node_Id;\n@@ -4583,9 +4589,9 @@ package body Sem_Ch12 is\n       --  (for ASIS use) even though as the name of an enclosing generic\n       --   it would otherwise not be preserved in the generic tree.\n \n-      -----------------------\n-      --  Copy_Descendants --\n-      -----------------------\n+      ----------------------\n+      -- Copy_Descendants --\n+      ----------------------\n \n       procedure Copy_Descendants is\n "}, {"sha": "9b8518d966a0581b80fc24b0d60f5be2c60c06e2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1110,8 +1110,10 @@ package body Sem_Ch13 is\n                            and then\n                         Size /= System_Storage_Unit * 8\n                      then\n+                        Error_Msg_Uint_1 := UI_From_Int (System_Storage_Unit);\n                         Error_Msg_N\n-                          (\"size for primitive object must be power of 2\", N);\n+                          (\"size for primitive object must be a power of 2\"\n+                            & \" and at least ^\", N);\n                      end if;\n                   end if;\n "}, {"sha": "bfcade0e7837e65422f5a2387ac549e1f5d4bc37", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -47,7 +47,7 @@ package Sem_Ch13 is\n    function Minimum_Size\n      (T      : Entity_Id;\n       Biased : Boolean := False) return Nat;\n-   --  Given a primitive type, determines the minimum number of bits required\n+   --  Given an elementary type, determines the minimum number of bits required\n    --  to represent all values of the type. This function may not be called\n    --  with any other types. If the flag Biased is set True, then the minimum\n    --  size calculation that biased representation is used in the case of a"}, {"sha": "4e5b6cab027394e1fe307f909dc5e9b616ee0c6c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1847,9 +1847,9 @@ package body Sem_Ch4 is\n       Operator_Check (N);\n    end Analyze_Negation;\n \n-   -------------------\n-   --  Analyze_Null --\n-   -------------------\n+   ------------------\n+   -- Analyze_Null --\n+   ------------------\n \n    procedure Analyze_Null (N : Node_Id) is\n    begin\n@@ -2134,9 +2134,9 @@ package body Sem_Ch4 is\n       end if;\n    end Analyze_One_Call;\n \n-   ----------------------------\n-   --  Analyze_Operator_Call --\n-   ----------------------------\n+   ---------------------------\n+   -- Analyze_Operator_Call --\n+   ---------------------------\n \n    procedure Analyze_Operator_Call (N : Node_Id; Op_Id : Entity_Id) is\n       Op_Name : constant Name_Id := Chars (Op_Id);"}, {"sha": "3e4c4b332ea1e1c2cd0b2d21ddb322d9b5f8fabb", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -4480,6 +4480,12 @@ package body Sem_Ch6 is\n          if not Comes_From_Source (S) then\n             null;\n \n+         --  If the subprogram is at library level, it is not a\n+         --  primitive operation.\n+\n+         elsif Current_Scope = Standard_Standard then\n+            null;\n+\n          elsif (Ekind (Current_Scope) = E_Package\n                  and then not In_Package_Body (Current_Scope))\n            or else Overriding"}, {"sha": "01c28d3315a8c60e11d1f69b3203ec17eb7588c8", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -799,9 +799,9 @@ package body Sem_Ch7 is\n          end if;\n       end Is_Public_Child;\n \n-      --------------------------------------------\n-      --  Inspect_Deferred_Constant_Completion  --\n-      --------------------------------------------\n+      ------------------------------------------\n+      -- Inspect_Deferred_Constant_Completion --\n+      ------------------------------------------\n \n       procedure Inspect_Deferred_Constant_Completion is\n          Decl   : Node_Id;\n@@ -1935,7 +1935,7 @@ package body Sem_Ch7 is\n          end;\n       end if;\n \n-      --  Otherwise search entity chain for entity requiring completion.\n+      --  Otherwise search entity chain for entity requiring completion\n \n       E := First_Entity (P);\n       while Present (E) loop\n@@ -1947,6 +1947,14 @@ package body Sem_Ch7 is\n          if Is_Child_Unit (E) then\n             null;\n \n+         --  Ignore formal packages and their renamings\n+\n+         elsif Ekind (E) = E_Package\n+           and then Nkind (Original_Node (Unit_Declaration_Node (E))) =\n+                                                N_Formal_Package_Declaration\n+         then\n+            null;\n+\n          --  Otherwise test to see if entity requires a completion\n \n          elsif (Is_Overloadable (E)"}, {"sha": "55806aa7bb0934c15746e784089b85d7d459497c", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -549,18 +549,18 @@ package body Sem_Ch8 is\n       end if;\n    end Analyze_Expanded_Name;\n \n-   ----------------------------------------\n-   --  Analyze_Generic_Function_Renaming --\n-   ----------------------------------------\n+   ---------------------------------------\n+   -- Analyze_Generic_Function_Renaming --\n+   ---------------------------------------\n \n    procedure Analyze_Generic_Function_Renaming  (N : Node_Id) is\n    begin\n       Analyze_Generic_Renaming (N, E_Generic_Function);\n    end Analyze_Generic_Function_Renaming;\n \n-   ---------------------------------------\n-   --  Analyze_Generic_Package_Renaming --\n-   ---------------------------------------\n+   --------------------------------------\n+   -- Analyze_Generic_Package_Renaming --\n+   --------------------------------------\n \n    procedure Analyze_Generic_Package_Renaming   (N : Node_Id) is\n    begin\n@@ -572,9 +572,9 @@ package body Sem_Ch8 is\n       Analyze_Generic_Renaming (N, E_Generic_Package);\n    end Analyze_Generic_Package_Renaming;\n \n-   -----------------------------------------\n-   --  Analyze_Generic_Procedure_Renaming --\n-   -----------------------------------------\n+   ----------------------------------------\n+   -- Analyze_Generic_Procedure_Renaming --\n+   ----------------------------------------\n \n    procedure Analyze_Generic_Procedure_Renaming (N : Node_Id) is\n    begin\n@@ -1941,9 +1941,9 @@ package body Sem_Ch8 is\n       Scope_Stack.Table (Scope_Stack.Last).First_Use_Clause := N;\n    end Chain_Use_Clause;\n \n-   ----------------------------\n-   --  Check_Frozen_Renaming --\n-   ----------------------------\n+   ---------------------------\n+   -- Check_Frozen_Renaming --\n+   ---------------------------\n \n    procedure Check_Frozen_Renaming (N : Node_Id; Subp : Entity_Id) is\n       B_Node : Node_Id;"}, {"sha": "183118f3225e03ccce01b86754e1a42ff561ea69", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -66,21 +66,19 @@ package body Sem_Disp is\n \n    function Check_Controlling_Type\n      (T    : Entity_Id;\n-      Subp : Entity_Id)\n-      return Entity_Id;\n+      Subp : Entity_Id) return Entity_Id;\n       --  T is the type of a formal parameter of subp. Returns the tagged\n       --  if the parameter can be a controlling argument, empty otherwise\n \n-   --------------------------------\n-   --  Add_Dispatching_Operation --\n-   --------------------------------\n+   -------------------------------\n+   -- Add_Dispatching_Operation --\n+   -------------------------------\n \n    procedure Add_Dispatching_Operation\n      (Tagged_Type : Entity_Id;\n       New_Op      : Entity_Id)\n    is\n       List : constant Elist_Id := Primitive_Operations (Tagged_Type);\n-\n    begin\n       Append_Elmt (New_Op, List);\n    end Add_Dispatching_Operation;\n@@ -200,8 +198,7 @@ package body Sem_Disp is\n \n    function Check_Controlling_Type\n      (T    : Entity_Id;\n-      Subp : Entity_Id)\n-      return Entity_Id\n+      Subp : Entity_Id) return Entity_Id\n    is\n       Tagged_Type : Entity_Id := Empty;\n "}, {"sha": "0434d67ae7486226ffeb599f9f33003cc366b63b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -5658,9 +5658,9 @@ package body Sem_Prag is\n                Source_Location);\n          end Eliminate;\n \n-         --------------------------\n-         --  Explicit_Overriding --\n-         --------------------------\n+         -------------------------\n+         -- Explicit_Overriding --\n+         -------------------------\n \n          when Pragma_Explicit_Overriding =>\n             Check_Valid_Configuration_Pragma;"}, {"sha": "23903e42ecb5fadf151b6b711d8bc06fb065044f", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -4974,9 +4974,9 @@ package body Sem_Res is\n       Eval_Integer_Literal (N);\n    end Resolve_Integer_Literal;\n \n-   ---------------------------------\n-   --  Resolve_Intrinsic_Operator --\n-   ---------------------------------\n+   --------------------------------\n+   -- Resolve_Intrinsic_Operator --\n+   --------------------------------\n \n    procedure Resolve_Intrinsic_Operator  (N : Node_Id; Typ : Entity_Id) is\n       Btyp : constant Entity_Id := Base_Type (Underlying_Type (Typ));"}, {"sha": "8f2ccad23506ba0f93b24deefe7cc2b56817fa79", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -59,14 +59,14 @@ package body Sem_Type is\n    --  of clash lists are stored in array Headers.\n \n    --              Headers        Interp_Map          All_Interp\n-   --\n-   --                 _            -------             ----------\n+\n+   --                 _            +-----+             +--------+\n    --                |_|           |_____|         --->|interp1 |\n    --                |_|---------->|node |         |   |interp2 |\n    --                |_|           |index|---------|   |nointerp|\n    --                |_|           |next |             |        |\n    --                              |-----|             |        |\n-   --                              -------             ----------\n+   --                              +-----+             +--------+\n \n    --  This scheme does not currently reclaim interpretations. In principle,\n    --  after a unit is compiled, all overloadings have been resolved, and the\n@@ -1559,9 +1559,9 @@ package body Sem_Type is\n       raise Program_Error;\n    end Get_First_Interp;\n \n-   ----------------------\n-   --  Get_Next_Interp --\n-   ----------------------\n+   ---------------------\n+   -- Get_Next_Interp --\n+   ---------------------\n \n    procedure Get_Next_Interp (I : in out Interp_Index; It : out Interp) is\n    begin\n@@ -2365,9 +2365,9 @@ package body Sem_Type is\n       end if;\n    end Write_Overloads;\n \n-   -----------------------\n-   --  Write_Interp_Ref --\n-   -----------------------\n+   ----------------------\n+   -- Write_Interp_Ref --\n+   ----------------------\n \n    procedure Write_Interp_Ref (Map_Ptr : Int) is\n    begin"}, {"sha": "d4d3c472c86d0a2646927a8836da5a223e2beffa", "filename": "gcc/ada/sem_type.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -72,9 +72,9 @@ package Sem_Type is\n \n    subtype Interp_Index is Int;\n \n-   ----------------------\n-   --  Error Reporting --\n-   ----------------------\n+   ---------------------\n+   -- Error Reporting --\n+   ---------------------\n \n    --  A common error is the use of an operator in infix notation on arguments\n    --  of a type that is not directly visible. Rather than diagnosing a type"}, {"sha": "1f23ef3063fe2fc91ba2cbdfd1ab2eca3517aaf6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 116, "deletions": 23, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -2656,12 +2656,17 @@ package body Sem_Util is\n       if Nkind (Decl) = N_Subprogram_Body then\n          return Decl;\n \n+      --  The below comment is bad, because it is possible for\n+      --  Nkind (Decl) to be an N_Subprogram_Body_Stub ???\n+\n       else           --  Nkind (Decl) = N_Subprogram_Declaration\n \n          if Present (Corresponding_Body (Decl)) then\n             return Unit_Declaration_Node (Corresponding_Body (Decl));\n \n-         else        --  imported subprogram.\n+         --  Imported subprogram case\n+\n+         else\n             return Empty;\n          end if;\n       end if;\n@@ -2676,6 +2681,55 @@ package body Sem_Util is\n       return Task_Body_Procedure (Declaration_Node (Root_Type (E)));\n    end Get_Task_Body_Procedure;\n \n+   -----------------------\n+   -- Has_Access_Values --\n+   -----------------------\n+\n+   function Has_Access_Values (T : Entity_Id) return Boolean is\n+      Typ : constant Entity_Id := Underlying_Type (T);\n+\n+   begin\n+      --  Case of a private type which is not completed yet. This can only\n+      --  happen in the case of a generic format type appearing directly, or\n+      --  as a component of the type to which this function is being applied\n+      --  at the top level. Return False in this case, since we certainly do\n+      --  not know that the type contains access types.\n+\n+      if No (Typ) then\n+         return False;\n+\n+      elsif Is_Access_Type (Typ) then\n+         return True;\n+\n+      elsif Is_Array_Type (Typ) then\n+         return Has_Access_Values (Component_Type (Typ));\n+\n+      elsif Is_Record_Type (Typ) then\n+         declare\n+            Comp : Entity_Id;\n+\n+         begin\n+            Comp := First_Entity (Typ);\n+            while Present (Comp) loop\n+               if (Ekind (Comp) = E_Component\n+                     or else\n+                   Ekind (Comp) = E_Discriminant)\n+                 and then Has_Access_Values (Etype (Comp))\n+               then\n+                  return True;\n+               end if;\n+\n+               Next_Entity (Comp);\n+            end loop;\n+         end;\n+\n+         return False;\n+\n+      else\n+         return False;\n+      end if;\n+   end Has_Access_Values;\n+\n    ----------------------\n    -- Has_Declarations --\n    ----------------------\n@@ -4654,9 +4708,9 @@ package body Sem_Util is\n       procedure Kill_Current_Values_For_Entity_Chain (E : Entity_Id);\n       --  Clear current value for entity E and all entities chained to E\n \n-      -------------------------------------------\n-      --  Kill_Current_Values_For_Entity_Chain --\n-      -------------------------------------------\n+      ------------------------------------------\n+      -- Kill_Current_Values_For_Entity_Chain --\n+      ------------------------------------------\n \n       procedure Kill_Current_Values_For_Entity_Chain (E : Entity_Id) is\n          Ent : Entity_Id;\n@@ -4992,7 +5046,6 @@ package body Sem_Util is\n       end if;\n \n       Formal := First_Formal (S);\n-\n       while Present (Formal) loop\n \n          --  Match the formals in order. If the corresponding actual\n@@ -5094,7 +5147,6 @@ package body Sem_Util is\n             Actual := First (Actuals);\n \n             while Present (Actual) loop\n-\n                if Nkind (Actual) = N_Parameter_Association\n                  and then Actual /= Last\n                  and then No (Next_Named_Actual (Actual))\n@@ -5669,11 +5721,13 @@ package body Sem_Util is\n \n    --  A transient scope is required when variable-sized temporaries are\n    --  allocated in the primary or secondary stack, or when finalization\n-   --  actions must be generated before the next instruction\n+   --  actions must be generated before the next instruction.\n \n    function Requires_Transient_Scope (Id : Entity_Id) return Boolean is\n       Typ : constant Entity_Id := Underlying_Type (Id);\n \n+   --  Start of processing for Requires_Transient_Scope\n+\n    begin\n       --  This is a private type which is not completed yet. This can only\n       --  happen in a default expression (of a formal parameter or of a\n@@ -5682,23 +5736,22 @@ package body Sem_Util is\n       if No (Typ) then\n          return False;\n \n+      --  Do not expand transient scope for non-existent procedure return\n+\n       elsif Typ = Standard_Void_Type then\n          return False;\n \n-      --  The back-end has trouble allocating variable-size temporaries so\n-      --  we generate them in the front-end and need a transient scope to\n-      --  reclaim them properly\n+      --  Elementary types do not require a transient scope\n \n-      elsif not Size_Known_At_Compile_Time (Typ) then\n-         return True;\n+      elsif Is_Elementary_Type (Typ) then\n+         return False;\n \n-      --  Unconstrained discriminated records always require a variable\n-      --  length temporary, since the length may depend on the variant.\n+      --  Generally, indefinite subtypes require a transient scope, since the\n+      --  back end cannot generate temporaries, since this is not a valid type\n+      --  for declaring an object. It might be possible to relax this in the\n+      --  future, e.g. by declaring the maximum possible space for the type.\n \n-      elsif Is_Record_Type (Typ)\n-        and then Has_Discriminants (Typ)\n-        and then not Is_Constrained (Typ)\n-      then\n+      elsif Is_Indefinite_Subtype (Typ) then\n          return True;\n \n       --  Functions returning tagged types may dispatch on result so their\n@@ -5710,13 +5763,53 @@ package body Sem_Util is\n       then\n          return True;\n \n-      --  Unconstrained array types are returned on the secondary stack\n+      --  Record type. OK if none of the component types requires a transient\n+      --  scope. Note that we already know that this is a definite type (i.e.\n+      --  has discriminant defaults if it is a discriminated record).\n+\n+      elsif Is_Record_Type (Typ) then\n+         declare\n+            Comp : Entity_Id;\n+         begin\n+            Comp := First_Entity (Typ);\n+            while Present (Comp) loop\n+               if Requires_Transient_Scope (Etype (Comp)) then\n+                  return True;\n+               else\n+                  Next_Entity (Comp);\n+               end if;\n+            end loop;\n+         end;\n+\n+         return False;\n+\n+      --  String literal types never require transient scope\n+\n+      elsif Ekind (Typ) = E_String_Literal_Subtype then\n+         return False;\n+\n+      --  Array type. Note that we already know that this is a constrained\n+      --  array, since unconstrained arrays will fail the indefinite test.\n \n       elsif Is_Array_Type (Typ) then\n-         return not Is_Constrained (Typ);\n-      end if;\n \n-      return False;\n+         --  If component type requires a transient scope, the array does too\n+\n+         if Requires_Transient_Scope (Component_Type (Typ)) then\n+            return True;\n+\n+         --  Otherwise, we only need a transient scope if the size is not\n+         --  known at compile time.\n+\n+         else\n+            return not Size_Known_At_Compile_Time (Typ);\n+         end if;\n+\n+      --  All other cases do not require a transient scope\n+\n+      else\n+         return False;\n+      end if;\n    end Requires_Transient_Scope;\n \n    --------------------------\n@@ -6573,7 +6666,7 @@ package body Sem_Util is\n                  (\"found function name, possibly missing Access attribute!\",\n                    Expr);\n \n-         --  catch common error: a prefix or infix operator which is not\n+         --  Catch common error: a prefix or infix operator which is not\n          --  directly visible because the type isn't.\n \n          elsif Nkind (Expr) in N_Op"}, {"sha": "93e416535a4160f61dbb30f6b03414b85bb53aca", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -357,6 +357,10 @@ package Sem_Util is\n    --  Task_Body_Procedure field from the corresponding task type\n    --  declaration.\n \n+   function Has_Access_Values (T : Entity_Id) return Boolean;\n+   --  Returns true if type or subtype T is an access type, or has a\n+   --  component (at any recursive level) that is an access type.\n+\n    function Has_Declarations (N : Node_Id) return Boolean;\n    --  Determines if the node can have declarations\n "}, {"sha": "ba4c957327e6a22bb8dd1618814e99ee8add4e10", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -171,9 +171,9 @@ package body Sem_Warn is\n       --  from another unit. This is true for entities in packages that are\n       --  at the library level.\n \n-      -----------------------\n-      --  Missing_Subunits --\n-      -----------------------\n+      ----------------------\n+      -- Missing_Subunits --\n+      ----------------------\n \n       function Missing_Subunits return Boolean is\n          D : Node_Id;"}, {"sha": "938e825515fdc7a4e1a8fb7063100cf2def8b396", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -3065,9 +3065,9 @@ package Sinfo is\n       --  node (which appears as a singleton list). Box_Present gives support\n       --  to Ada 2005 (AI-287).\n \n-      ------------------------------------\n-      --  4.3.1  Commponent Choice List --\n-      ------------------------------------\n+      -----------------------------------\n+      -- 4.3.1  Commponent Choice List --\n+      -----------------------------------\n \n       --  COMPONENT_CHOICE_LIST ::=\n       --    component_SELECTOR_NAME {| component_SELECTOR_NAME}"}, {"sha": "1b4e12860a5e8f260f4406400170d4a722c166c8", "filename": "gcc/ada/sinput-l.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsinput-l.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsinput-l.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -34,9 +34,9 @@ with Types; use Types;\n \n package Sinput.L is\n \n-   -------------------------------------------\n-   --  Subprograms for Loading Source Files --\n-   -------------------------------------------\n+   ------------------------------------------\n+   -- Subprograms for Loading Source Files --\n+   ------------------------------------------\n \n    function Load_Source_File (N : File_Name_Type) return Source_File_Index;\n    --  Given a source file name, returns the index of the corresponding entry"}, {"sha": "5fbfdcaf3c704396b7b3ba5936327a1eef17744a", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -145,6 +145,7 @@ package body Snames is\n      \"target#\" &\n      \"req#\" &\n      \"obj_typecode#\" &\n+     \"stub#\" &\n      \"Oabs#\" &\n      \"Oand#\" &\n      \"Omod#\" &\n@@ -425,6 +426,7 @@ package body Snames is\n      \"first_bit#\" &\n      \"fixed_value#\" &\n      \"fore#\" &\n+     \"has_access_values#\" &\n      \"has_discriminants#\" &\n      \"identity#\" &\n      \"img#\" &"}, {"sha": "545a3d0f39be496fa1018ce81faad807ff22d806", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 559, "deletions": 556, "changes": 1115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -264,32 +264,33 @@ package Snames is\n    Name_Target                         : constant Name_Id := N + 085;\n    Name_Req                            : constant Name_Id := N + 086;\n    Name_Obj_TypeCode                   : constant Name_Id := N + 087;\n+   Name_Stub                           : constant Name_Id := N + 088;\n \n    --  Operator Symbol entries. The actual names have an upper case O at\n    --  the start in place of the Op_ prefix (e.g. the actual name that\n    --  corresponds to Name_Op_Abs is \"Oabs\".\n \n-   First_Operator_Name                 : constant Name_Id := N + 088;\n-   Name_Op_Abs                         : constant Name_Id := N + 088; -- \"abs\"\n-   Name_Op_And                         : constant Name_Id := N + 089; -- \"and\"\n-   Name_Op_Mod                         : constant Name_Id := N + 090; -- \"mod\"\n-   Name_Op_Not                         : constant Name_Id := N + 091; -- \"not\"\n-   Name_Op_Or                          : constant Name_Id := N + 092; -- \"or\"\n-   Name_Op_Rem                         : constant Name_Id := N + 093; -- \"rem\"\n-   Name_Op_Xor                         : constant Name_Id := N + 094; -- \"xor\"\n-   Name_Op_Eq                          : constant Name_Id := N + 095; -- \"=\"\n-   Name_Op_Ne                          : constant Name_Id := N + 096; -- \"/=\"\n-   Name_Op_Lt                          : constant Name_Id := N + 097; -- \"<\"\n-   Name_Op_Le                          : constant Name_Id := N + 098; -- \"<=\"\n-   Name_Op_Gt                          : constant Name_Id := N + 099; -- \">\"\n-   Name_Op_Ge                          : constant Name_Id := N + 100; -- \">=\"\n-   Name_Op_Add                         : constant Name_Id := N + 101; -- \"+\"\n-   Name_Op_Subtract                    : constant Name_Id := N + 102; -- \"-\"\n-   Name_Op_Concat                      : constant Name_Id := N + 103; -- \"&\"\n-   Name_Op_Multiply                    : constant Name_Id := N + 104; -- \"*\"\n-   Name_Op_Divide                      : constant Name_Id := N + 105; -- \"/\"\n-   Name_Op_Expon                       : constant Name_Id := N + 106; -- \"**\"\n-   Last_Operator_Name                  : constant Name_Id := N + 106;\n+   First_Operator_Name                 : constant Name_Id := N + 089;\n+   Name_Op_Abs                         : constant Name_Id := N + 089; -- \"abs\"\n+   Name_Op_And                         : constant Name_Id := N + 090; -- \"and\"\n+   Name_Op_Mod                         : constant Name_Id := N + 091; -- \"mod\"\n+   Name_Op_Not                         : constant Name_Id := N + 092; -- \"not\"\n+   Name_Op_Or                          : constant Name_Id := N + 093; -- \"or\"\n+   Name_Op_Rem                         : constant Name_Id := N + 094; -- \"rem\"\n+   Name_Op_Xor                         : constant Name_Id := N + 095; -- \"xor\"\n+   Name_Op_Eq                          : constant Name_Id := N + 096; -- \"=\"\n+   Name_Op_Ne                          : constant Name_Id := N + 097; -- \"/=\"\n+   Name_Op_Lt                          : constant Name_Id := N + 098; -- \"<\"\n+   Name_Op_Le                          : constant Name_Id := N + 099; -- \"<=\"\n+   Name_Op_Gt                          : constant Name_Id := N + 100; -- \">\"\n+   Name_Op_Ge                          : constant Name_Id := N + 101; -- \">=\"\n+   Name_Op_Add                         : constant Name_Id := N + 102; -- \"+\"\n+   Name_Op_Subtract                    : constant Name_Id := N + 103; -- \"-\"\n+   Name_Op_Concat                      : constant Name_Id := N + 104; -- \"&\"\n+   Name_Op_Multiply                    : constant Name_Id := N + 105; -- \"*\"\n+   Name_Op_Divide                      : constant Name_Id := N + 106; -- \"/\"\n+   Name_Op_Expon                       : constant Name_Id := N + 107; -- \"**\"\n+   Last_Operator_Name                  : constant Name_Id := N + 107;\n \n    --  Names for all pragmas recognized by GNAT. The entries with the comment\n    --  \"Ada 83\" are pragmas that are defined in Ada 83, but not in Ada 95.\n@@ -312,143 +313,143 @@ package Snames is\n    --  only in GNAT for the AAMP. They are ignored in other versions with\n    --  appropriate warnings.\n \n-   First_Pragma_Name                   : constant Name_Id := N + 107;\n+   First_Pragma_Name                   : constant Name_Id := N + 108;\n \n    --  Configuration pragmas are grouped at start\n \n-   Name_Ada_83                         : constant Name_Id := N + 107; -- GNAT\n-   Name_Ada_95                         : constant Name_Id := N + 108; -- GNAT\n-   Name_Ada_05                         : constant Name_Id := N + 109; -- GNAT\n-   Name_C_Pass_By_Copy                 : constant Name_Id := N + 110; -- GNAT\n-   Name_Compile_Time_Warning           : constant Name_Id := N + 111; -- GNAT\n-   Name_Component_Alignment            : constant Name_Id := N + 112; -- GNAT\n-   Name_Convention_Identifier          : constant Name_Id := N + 113; -- GNAT\n-   Name_Detect_Blocking                : constant Name_Id := N + 114; -- Ada05\n-   Name_Discard_Names                  : constant Name_Id := N + 115;\n-   Name_Elaboration_Checks             : constant Name_Id := N + 116; -- GNAT\n-   Name_Eliminate                      : constant Name_Id := N + 117; -- GNAT\n-   Name_Explicit_Overriding            : constant Name_Id := N + 118;\n-   Name_Extend_System                  : constant Name_Id := N + 119; -- GNAT\n-   Name_Extensions_Allowed             : constant Name_Id := N + 120; -- GNAT\n-   Name_External_Name_Casing           : constant Name_Id := N + 121; -- GNAT\n-   Name_Float_Representation           : constant Name_Id := N + 122; -- GNAT\n-   Name_Initialize_Scalars             : constant Name_Id := N + 123; -- GNAT\n-   Name_Interrupt_State                : constant Name_Id := N + 124; -- GNAT\n-   Name_License                        : constant Name_Id := N + 125; -- GNAT\n-   Name_Locking_Policy                 : constant Name_Id := N + 126;\n-   Name_Long_Float                     : constant Name_Id := N + 127; -- VMS\n-   Name_No_Run_Time                    : constant Name_Id := N + 128; -- GNAT\n-   Name_No_Strict_Aliasing             : constant Name_Id := N + 129; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 130;\n-   Name_Polling                        : constant Name_Id := N + 131; -- GNAT\n-   Name_Persistent_Data                : constant Name_Id := N + 132; -- GNAT\n-   Name_Persistent_Object              : constant Name_Id := N + 133; -- GNAT\n-   Name_Profile                        : constant Name_Id := N + 134; -- Ada05\n-   Name_Profile_Warnings               : constant Name_Id := N + 135; -- GNAT\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 136; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 137;\n-   Name_Ravenscar                      : constant Name_Id := N + 138;\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 139;\n-   Name_Restrictions                   : constant Name_Id := N + 140;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 141; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 142;\n-   Name_Source_File_Name               : constant Name_Id := N + 143; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 144; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 145; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 146;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 147; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 148;\n-   Name_Universal_Data                 : constant Name_Id := N + 149; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 150; -- GNAT\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 151; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 152; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 153; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 153;\n+   Name_Ada_83                         : constant Name_Id := N + 108; -- GNAT\n+   Name_Ada_95                         : constant Name_Id := N + 109; -- GNAT\n+   Name_Ada_05                         : constant Name_Id := N + 110; -- GNAT\n+   Name_C_Pass_By_Copy                 : constant Name_Id := N + 111; -- GNAT\n+   Name_Compile_Time_Warning           : constant Name_Id := N + 112; -- GNAT\n+   Name_Component_Alignment            : constant Name_Id := N + 113; -- GNAT\n+   Name_Convention_Identifier          : constant Name_Id := N + 114; -- GNAT\n+   Name_Detect_Blocking                : constant Name_Id := N + 115; -- Ada05\n+   Name_Discard_Names                  : constant Name_Id := N + 116;\n+   Name_Elaboration_Checks             : constant Name_Id := N + 117; -- GNAT\n+   Name_Eliminate                      : constant Name_Id := N + 118; -- GNAT\n+   Name_Explicit_Overriding            : constant Name_Id := N + 119;\n+   Name_Extend_System                  : constant Name_Id := N + 120; -- GNAT\n+   Name_Extensions_Allowed             : constant Name_Id := N + 121; -- GNAT\n+   Name_External_Name_Casing           : constant Name_Id := N + 122; -- GNAT\n+   Name_Float_Representation           : constant Name_Id := N + 123; -- GNAT\n+   Name_Initialize_Scalars             : constant Name_Id := N + 124; -- GNAT\n+   Name_Interrupt_State                : constant Name_Id := N + 125; -- GNAT\n+   Name_License                        : constant Name_Id := N + 126; -- GNAT\n+   Name_Locking_Policy                 : constant Name_Id := N + 127;\n+   Name_Long_Float                     : constant Name_Id := N + 128; -- VMS\n+   Name_No_Run_Time                    : constant Name_Id := N + 129; -- GNAT\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 130; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 131;\n+   Name_Polling                        : constant Name_Id := N + 132; -- GNAT\n+   Name_Persistent_Data                : constant Name_Id := N + 133; -- GNAT\n+   Name_Persistent_Object              : constant Name_Id := N + 134; -- GNAT\n+   Name_Profile                        : constant Name_Id := N + 135; -- Ada05\n+   Name_Profile_Warnings               : constant Name_Id := N + 136; -- GNAT\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 137; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 138;\n+   Name_Ravenscar                      : constant Name_Id := N + 139;\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 140;\n+   Name_Restrictions                   : constant Name_Id := N + 141;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 142; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 143;\n+   Name_Source_File_Name               : constant Name_Id := N + 144; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 145; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 146; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 147;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 148; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 149;\n+   Name_Universal_Data                 : constant Name_Id := N + 150; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 151; -- GNAT\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 152; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 153; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 154; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 154;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 154; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 155;\n-   Name_Annotate                       : constant Name_Id := N + 156; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 155; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 156;\n+   Name_Annotate                       : constant Name_Id := N + 157; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n    --  definition of the type Attribute_Id, and the functions Get_Pragma_Id\n    --  and Check_Pragma_Id correctly recognize and process Name_AST_Entry.\n    --  AST_Entry is a VMS specific pragma.\n \n-   Name_Assert                         : constant Name_Id := N + 157; -- GNAT\n-   Name_Asynchronous                   : constant Name_Id := N + 158;\n-   Name_Atomic                         : constant Name_Id := N + 159;\n-   Name_Atomic_Components              : constant Name_Id := N + 160;\n-   Name_Attach_Handler                 : constant Name_Id := N + 161;\n-   Name_Comment                        : constant Name_Id := N + 162; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 163; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 164; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 165;\n-   Name_Convention                     : constant Name_Id := N + 166;\n-   Name_CPP_Class                      : constant Name_Id := N + 167; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 168; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 169; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 170; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 171; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 172; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 173;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 174;\n-   Name_Export                         : constant Name_Id := N + 175;\n-   Name_Export_Exception               : constant Name_Id := N + 176; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 177; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 178; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 179; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 180; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 181; -- GNAT\n-   Name_External                       : constant Name_Id := N + 182; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 183; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 184; -- VMS\n-   Name_Import                         : constant Name_Id := N + 185;\n-   Name_Import_Exception               : constant Name_Id := N + 186; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 187; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 188; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 189; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 190; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 191;\n-   Name_Inline_Always                  : constant Name_Id := N + 192; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 193; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 194;\n-   Name_Interface                      : constant Name_Id := N + 195; -- Ada 83\n-   Name_Interface_Name                 : constant Name_Id := N + 196; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 197;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 198;\n-   Name_Java_Constructor               : constant Name_Id := N + 199; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 200; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 201; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 202; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 203; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 204;\n-   Name_Linker_Section                 : constant Name_Id := N + 205; -- GNAT\n-   Name_List                           : constant Name_Id := N + 206;\n-   Name_Machine_Attribute              : constant Name_Id := N + 207; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 208; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 209; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 210; -- Ada 83\n-   Name_No_Return                      : constant Name_Id := N + 211; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 212; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 213;\n-   Name_Optional_Overriding            : constant Name_Id := N + 214;\n-   Name_Overriding                     : constant Name_Id := N + 215;\n-   Name_Pack                           : constant Name_Id := N + 216;\n-   Name_Page                           : constant Name_Id := N + 217;\n-   Name_Passive                        : constant Name_Id := N + 218; -- GNAT\n-   Name_Preelaborate                   : constant Name_Id := N + 219;\n-   Name_Priority                       : constant Name_Id := N + 220;\n-   Name_Psect_Object                   : constant Name_Id := N + 221; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 222;\n-   Name_Pure_Function                  : constant Name_Id := N + 223; -- GNAT\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 224;\n-   Name_Remote_Types                   : constant Name_Id := N + 225;\n-   Name_Share_Generic                  : constant Name_Id := N + 226; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 227; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 228;\n+   Name_Assert                         : constant Name_Id := N + 158; -- GNAT\n+   Name_Asynchronous                   : constant Name_Id := N + 159;\n+   Name_Atomic                         : constant Name_Id := N + 160;\n+   Name_Atomic_Components              : constant Name_Id := N + 161;\n+   Name_Attach_Handler                 : constant Name_Id := N + 162;\n+   Name_Comment                        : constant Name_Id := N + 163; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 164; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 165; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 166;\n+   Name_Convention                     : constant Name_Id := N + 167;\n+   Name_CPP_Class                      : constant Name_Id := N + 168; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 169; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 170; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 171; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 172; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 173; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 174;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 175;\n+   Name_Export                         : constant Name_Id := N + 176;\n+   Name_Export_Exception               : constant Name_Id := N + 177; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 178; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 179; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 180; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 181; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 182; -- GNAT\n+   Name_External                       : constant Name_Id := N + 183; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 184; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 185; -- VMS\n+   Name_Import                         : constant Name_Id := N + 186;\n+   Name_Import_Exception               : constant Name_Id := N + 187; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 188; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 189; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 190; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 191; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 192;\n+   Name_Inline_Always                  : constant Name_Id := N + 193; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 194; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 195;\n+   Name_Interface                      : constant Name_Id := N + 196; -- Ada 83\n+   Name_Interface_Name                 : constant Name_Id := N + 197; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 198;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 199;\n+   Name_Java_Constructor               : constant Name_Id := N + 200; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 201; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 202; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 203; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 204; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 205;\n+   Name_Linker_Section                 : constant Name_Id := N + 206; -- GNAT\n+   Name_List                           : constant Name_Id := N + 207;\n+   Name_Machine_Attribute              : constant Name_Id := N + 208; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 209; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 210; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 211; -- Ada 83\n+   Name_No_Return                      : constant Name_Id := N + 212; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 213; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 214;\n+   Name_Optional_Overriding            : constant Name_Id := N + 215;\n+   Name_Overriding                     : constant Name_Id := N + 216;\n+   Name_Pack                           : constant Name_Id := N + 217;\n+   Name_Page                           : constant Name_Id := N + 218;\n+   Name_Passive                        : constant Name_Id := N + 219; -- GNAT\n+   Name_Preelaborate                   : constant Name_Id := N + 220;\n+   Name_Priority                       : constant Name_Id := N + 221;\n+   Name_Psect_Object                   : constant Name_Id := N + 222; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 223;\n+   Name_Pure_Function                  : constant Name_Id := N + 224; -- GNAT\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 225;\n+   Name_Remote_Types                   : constant Name_Id := N + 226;\n+   Name_Share_Generic                  : constant Name_Id := N + 227; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 228; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 229;\n \n    --  Note: Storage_Size is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n@@ -458,27 +459,27 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because of a clash\n    --  with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 229; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 230; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 231; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 232; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 233; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 234; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 235; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 236; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 237; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 238; -- VMS\n-   Name_Thread_Body                    : constant Name_Id := N + 239; -- GNAT\n-   Name_Time_Slice                     : constant Name_Id := N + 240; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 241; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 242; -- GNAT\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 243; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 244; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 245; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 246;\n-   Name_Volatile_Components            : constant Name_Id := N + 247;\n-   Name_Weak_External                  : constant Name_Id := N + 248; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 248;\n+   Name_Source_Reference               : constant Name_Id := N + 230; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 231; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 232; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 233; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 234; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 235; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 236; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 237; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 238; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 239; -- VMS\n+   Name_Thread_Body                    : constant Name_Id := N + 240; -- GNAT\n+   Name_Time_Slice                     : constant Name_Id := N + 241; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 242; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 243; -- GNAT\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 244; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 245; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 246; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 247;\n+   Name_Volatile_Components            : constant Name_Id := N + 248;\n+   Name_Weak_External                  : constant Name_Id := N + 249; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 249;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -489,105 +490,105 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 249;\n-   Name_Ada                            : constant Name_Id := N + 249;\n-   Name_Assembler                      : constant Name_Id := N + 250;\n-   Name_COBOL                          : constant Name_Id := N + 251;\n-   Name_CPP                            : constant Name_Id := N + 252;\n-   Name_Fortran                        : constant Name_Id := N + 253;\n-   Name_Intrinsic                      : constant Name_Id := N + 254;\n-   Name_Java                           : constant Name_Id := N + 255;\n-   Name_Stdcall                        : constant Name_Id := N + 256;\n-   Name_Stubbed                        : constant Name_Id := N + 257;\n-   Last_Convention_Name                : constant Name_Id := N + 257;\n+   First_Convention_Name               : constant Name_Id := N + 250;\n+   Name_Ada                            : constant Name_Id := N + 250;\n+   Name_Assembler                      : constant Name_Id := N + 251;\n+   Name_COBOL                          : constant Name_Id := N + 252;\n+   Name_CPP                            : constant Name_Id := N + 253;\n+   Name_Fortran                        : constant Name_Id := N + 254;\n+   Name_Intrinsic                      : constant Name_Id := N + 255;\n+   Name_Java                           : constant Name_Id := N + 256;\n+   Name_Stdcall                        : constant Name_Id := N + 257;\n+   Name_Stubbed                        : constant Name_Id := N + 258;\n+   Last_Convention_Name                : constant Name_Id := N + 258;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 258;\n-   Name_Assembly                       : constant Name_Id := N + 259;\n+   Name_Asm                            : constant Name_Id := N + 259;\n+   Name_Assembly                       : constant Name_Id := N + 260;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 260;\n+   Name_Default                        : constant Name_Id := N + 261;\n    --  Name_Exernal (previously defined as pragma)\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 261;\n-   Name_Win32                          : constant Name_Id := N + 262;\n+   Name_DLL                            : constant Name_Id := N + 262;\n+   Name_Win32                          : constant Name_Id := N + 263;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 263;\n-   Name_Body_File_Name                 : constant Name_Id := N + 264;\n-   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 265;\n-   Name_Casing                         : constant Name_Id := N + 266;\n-   Name_Code                           : constant Name_Id := N + 267;\n-   Name_Component                      : constant Name_Id := N + 268;\n-   Name_Component_Size_4               : constant Name_Id := N + 269;\n-   Name_Copy                           : constant Name_Id := N + 270;\n-   Name_D_Float                        : constant Name_Id := N + 271;\n-   Name_Descriptor                     : constant Name_Id := N + 272;\n-   Name_Dot_Replacement                : constant Name_Id := N + 273;\n-   Name_Dynamic                        : constant Name_Id := N + 274;\n-   Name_Entity                         : constant Name_Id := N + 275;\n-   Name_External_Name                  : constant Name_Id := N + 276;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 277;\n-   Name_Form                           : constant Name_Id := N + 278;\n-   Name_G_Float                        : constant Name_Id := N + 279;\n-   Name_Gcc                            : constant Name_Id := N + 280;\n-   Name_Gnat                           : constant Name_Id := N + 281;\n-   Name_GPL                            : constant Name_Id := N + 282;\n-   Name_IEEE_Float                     : constant Name_Id := N + 283;\n-   Name_Internal                       : constant Name_Id := N + 284;\n-   Name_Link_Name                      : constant Name_Id := N + 285;\n-   Name_Lowercase                      : constant Name_Id := N + 286;\n-   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 287;\n-   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 288;\n-   Name_Max_Size                       : constant Name_Id := N + 289;\n-   Name_Mechanism                      : constant Name_Id := N + 290;\n-   Name_Mixedcase                      : constant Name_Id := N + 291;\n-   Name_Modified_GPL                   : constant Name_Id := N + 292;\n-   Name_Name                           : constant Name_Id := N + 293;\n-   Name_NCA                            : constant Name_Id := N + 294;\n-   Name_No                             : constant Name_Id := N + 295;\n-   Name_On                             : constant Name_Id := N + 296;\n-   Name_Parameter_Types                : constant Name_Id := N + 297;\n-   Name_Reference                      : constant Name_Id := N + 298;\n-   Name_No_Dynamic_Attachment          : constant Name_Id := N + 299;\n-   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 300;\n-   Name_No_Requeue                     : constant Name_Id := N + 301;\n-   Name_No_Requeue_Statements          : constant Name_Id := N + 302;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 303;\n-   Name_No_Task_Attributes_Package     : constant Name_Id := N + 304;\n-   Name_Restricted                     : constant Name_Id := N + 305;\n-   Name_Result_Mechanism               : constant Name_Id := N + 306;\n-   Name_Result_Type                    : constant Name_Id := N + 307;\n-   Name_Runtime                        : constant Name_Id := N + 308;\n-   Name_SB                             : constant Name_Id := N + 309;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 310;\n-   Name_Section                        : constant Name_Id := N + 311;\n-   Name_Semaphore                      : constant Name_Id := N + 312;\n-   Name_Simple_Barriers                : constant Name_Id := N + 313;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 314;\n-   Name_Static                         : constant Name_Id := N + 315;\n-   Name_Stack_Size                     : constant Name_Id := N + 316;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 317;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 318;\n-   Name_Task_Type                      : constant Name_Id := N + 319;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 320;\n-   Name_Top_Guard                      : constant Name_Id := N + 321;\n-   Name_UBA                            : constant Name_Id := N + 322;\n-   Name_UBS                            : constant Name_Id := N + 323;\n-   Name_UBSB                           : constant Name_Id := N + 324;\n-   Name_Unit_Name                      : constant Name_Id := N + 325;\n-   Name_Unknown                        : constant Name_Id := N + 326;\n-   Name_Unrestricted                   : constant Name_Id := N + 327;\n-   Name_Uppercase                      : constant Name_Id := N + 328;\n-   Name_User                           : constant Name_Id := N + 329;\n-   Name_VAX_Float                      : constant Name_Id := N + 330;\n-   Name_VMS                            : constant Name_Id := N + 331;\n-   Name_Working_Storage                : constant Name_Id := N + 332;\n+   Name_As_Is                          : constant Name_Id := N + 264;\n+   Name_Body_File_Name                 : constant Name_Id := N + 265;\n+   Name_Boolean_Entry_Barriers         : constant Name_Id := N + 266;\n+   Name_Casing                         : constant Name_Id := N + 267;\n+   Name_Code                           : constant Name_Id := N + 268;\n+   Name_Component                      : constant Name_Id := N + 269;\n+   Name_Component_Size_4               : constant Name_Id := N + 270;\n+   Name_Copy                           : constant Name_Id := N + 271;\n+   Name_D_Float                        : constant Name_Id := N + 272;\n+   Name_Descriptor                     : constant Name_Id := N + 273;\n+   Name_Dot_Replacement                : constant Name_Id := N + 274;\n+   Name_Dynamic                        : constant Name_Id := N + 275;\n+   Name_Entity                         : constant Name_Id := N + 276;\n+   Name_External_Name                  : constant Name_Id := N + 277;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 278;\n+   Name_Form                           : constant Name_Id := N + 279;\n+   Name_G_Float                        : constant Name_Id := N + 280;\n+   Name_Gcc                            : constant Name_Id := N + 281;\n+   Name_Gnat                           : constant Name_Id := N + 282;\n+   Name_GPL                            : constant Name_Id := N + 283;\n+   Name_IEEE_Float                     : constant Name_Id := N + 284;\n+   Name_Internal                       : constant Name_Id := N + 285;\n+   Name_Link_Name                      : constant Name_Id := N + 286;\n+   Name_Lowercase                      : constant Name_Id := N + 287;\n+   Name_Max_Entry_Queue_Depth          : constant Name_Id := N + 288;\n+   Name_Max_Entry_Queue_Length         : constant Name_Id := N + 289;\n+   Name_Max_Size                       : constant Name_Id := N + 290;\n+   Name_Mechanism                      : constant Name_Id := N + 291;\n+   Name_Mixedcase                      : constant Name_Id := N + 292;\n+   Name_Modified_GPL                   : constant Name_Id := N + 293;\n+   Name_Name                           : constant Name_Id := N + 294;\n+   Name_NCA                            : constant Name_Id := N + 295;\n+   Name_No                             : constant Name_Id := N + 296;\n+   Name_On                             : constant Name_Id := N + 297;\n+   Name_Parameter_Types                : constant Name_Id := N + 298;\n+   Name_Reference                      : constant Name_Id := N + 299;\n+   Name_No_Dynamic_Attachment          : constant Name_Id := N + 300;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 301;\n+   Name_No_Requeue                     : constant Name_Id := N + 302;\n+   Name_No_Requeue_Statements          : constant Name_Id := N + 303;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 304;\n+   Name_No_Task_Attributes_Package     : constant Name_Id := N + 305;\n+   Name_Restricted                     : constant Name_Id := N + 306;\n+   Name_Result_Mechanism               : constant Name_Id := N + 307;\n+   Name_Result_Type                    : constant Name_Id := N + 308;\n+   Name_Runtime                        : constant Name_Id := N + 309;\n+   Name_SB                             : constant Name_Id := N + 310;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 311;\n+   Name_Section                        : constant Name_Id := N + 312;\n+   Name_Semaphore                      : constant Name_Id := N + 313;\n+   Name_Simple_Barriers                : constant Name_Id := N + 314;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 315;\n+   Name_Static                         : constant Name_Id := N + 316;\n+   Name_Stack_Size                     : constant Name_Id := N + 317;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 318;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 319;\n+   Name_Task_Type                      : constant Name_Id := N + 320;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 321;\n+   Name_Top_Guard                      : constant Name_Id := N + 322;\n+   Name_UBA                            : constant Name_Id := N + 323;\n+   Name_UBS                            : constant Name_Id := N + 324;\n+   Name_UBSB                           : constant Name_Id := N + 325;\n+   Name_Unit_Name                      : constant Name_Id := N + 326;\n+   Name_Unknown                        : constant Name_Id := N + 327;\n+   Name_Unrestricted                   : constant Name_Id := N + 328;\n+   Name_Uppercase                      : constant Name_Id := N + 329;\n+   Name_User                           : constant Name_Id := N + 330;\n+   Name_VAX_Float                      : constant Name_Id := N + 331;\n+   Name_VMS                            : constant Name_Id := N + 332;\n+   Name_Working_Storage                : constant Name_Id := N + 333;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -601,375 +602,376 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 333;\n-   Name_Abort_Signal                   : constant Name_Id := N + 333;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 334;\n-   Name_Address                        : constant Name_Id := N + 335;\n-   Name_Address_Size                   : constant Name_Id := N + 336;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 337;\n-   Name_Alignment                      : constant Name_Id := N + 338;\n-   Name_Asm_Input                      : constant Name_Id := N + 339;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 340;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 341;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 342;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 343;\n-   Name_Bit_Position                   : constant Name_Id := N + 344;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 345;\n-   Name_Callable                       : constant Name_Id := N + 346;\n-   Name_Caller                         : constant Name_Id := N + 347;\n-   Name_Code_Address                   : constant Name_Id := N + 348;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 349;\n-   Name_Compose                        : constant Name_Id := N + 350;\n-   Name_Constrained                    : constant Name_Id := N + 351;\n-   Name_Count                          : constant Name_Id := N + 352;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 353; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 354;\n-   Name_Delta                          : constant Name_Id := N + 355;\n-   Name_Denorm                         : constant Name_Id := N + 356;\n-   Name_Digits                         : constant Name_Id := N + 357;\n-   Name_Elaborated                     : constant Name_Id := N + 358; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 359; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 360; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 361; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 362;\n-   Name_External_Tag                   : constant Name_Id := N + 363;\n-   Name_First                          : constant Name_Id := N + 364;\n-   Name_First_Bit                      : constant Name_Id := N + 365;\n-   Name_Fixed_Value                    : constant Name_Id := N + 366; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 367;\n-   Name_Has_Discriminants              : constant Name_Id := N + 368; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 369;\n-   Name_Img                            : constant Name_Id := N + 370; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 371; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 372; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 373;\n-   Name_Last_Bit                       : constant Name_Id := N + 374;\n-   Name_Leading_Part                   : constant Name_Id := N + 375;\n-   Name_Length                         : constant Name_Id := N + 376;\n-   Name_Machine_Emax                   : constant Name_Id := N + 377;\n-   Name_Machine_Emin                   : constant Name_Id := N + 378;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 379;\n-   Name_Machine_Overflows              : constant Name_Id := N + 380;\n-   Name_Machine_Radix                  : constant Name_Id := N + 381;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 382;\n-   Name_Machine_Size                   : constant Name_Id := N + 383; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 384; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 385;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 386; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 387; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 388;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 389;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 390;\n-   Name_Model_Small                    : constant Name_Id := N + 391;\n-   Name_Modulus                        : constant Name_Id := N + 392;\n-   Name_Null_Parameter                 : constant Name_Id := N + 393; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 394; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 395;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 396; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 397;\n-   Name_Pos                            : constant Name_Id := N + 398;\n-   Name_Position                       : constant Name_Id := N + 399;\n-   Name_Range                          : constant Name_Id := N + 400;\n-   Name_Range_Length                   : constant Name_Id := N + 401; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 402;\n-   Name_Safe_Emax                      : constant Name_Id := N + 403; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 404;\n-   Name_Safe_Large                     : constant Name_Id := N + 405; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 406;\n-   Name_Safe_Small                     : constant Name_Id := N + 407; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 408;\n-   Name_Scaling                        : constant Name_Id := N + 409;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 410;\n-   Name_Size                           : constant Name_Id := N + 411;\n-   Name_Small                          : constant Name_Id := N + 412;\n-   Name_Storage_Size                   : constant Name_Id := N + 413;\n-   Name_Storage_Unit                   : constant Name_Id := N + 414; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 415;\n-   Name_Target_Name                    : constant Name_Id := N + 416; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 417;\n-   Name_To_Address                     : constant Name_Id := N + 418; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 419; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 420; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 421;\n-   Name_Unchecked_Access               : constant Name_Id := N + 422;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 423;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 424; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 425; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 426; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 427;\n-   Name_Valid                          : constant Name_Id := N + 428;\n-   Name_Value_Size                     : constant Name_Id := N + 429; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 430;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 431; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 432;\n-   Name_Width                          : constant Name_Id := N + 433;\n-   Name_Word_Size                      : constant Name_Id := N + 434; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 334;\n+   Name_Abort_Signal                   : constant Name_Id := N + 334;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 335;\n+   Name_Address                        : constant Name_Id := N + 336;\n+   Name_Address_Size                   : constant Name_Id := N + 337;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 338;\n+   Name_Alignment                      : constant Name_Id := N + 339;\n+   Name_Asm_Input                      : constant Name_Id := N + 340;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 341;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 342;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 343;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 344;\n+   Name_Bit_Position                   : constant Name_Id := N + 345;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 346;\n+   Name_Callable                       : constant Name_Id := N + 347;\n+   Name_Caller                         : constant Name_Id := N + 348;\n+   Name_Code_Address                   : constant Name_Id := N + 349;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 350;\n+   Name_Compose                        : constant Name_Id := N + 351;\n+   Name_Constrained                    : constant Name_Id := N + 352;\n+   Name_Count                          : constant Name_Id := N + 353;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 354; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 355;\n+   Name_Delta                          : constant Name_Id := N + 356;\n+   Name_Denorm                         : constant Name_Id := N + 357;\n+   Name_Digits                         : constant Name_Id := N + 358;\n+   Name_Elaborated                     : constant Name_Id := N + 359; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 360; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 361; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 362; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 363;\n+   Name_External_Tag                   : constant Name_Id := N + 364;\n+   Name_First                          : constant Name_Id := N + 365;\n+   Name_First_Bit                      : constant Name_Id := N + 366;\n+   Name_Fixed_Value                    : constant Name_Id := N + 367; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 368;\n+   Name_Has_Access_Values              : constant Name_Id := N + 369; -- GNAT\n+   Name_Has_Discriminants              : constant Name_Id := N + 370; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 371;\n+   Name_Img                            : constant Name_Id := N + 372; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 373; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 374; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 375;\n+   Name_Last_Bit                       : constant Name_Id := N + 376;\n+   Name_Leading_Part                   : constant Name_Id := N + 377;\n+   Name_Length                         : constant Name_Id := N + 378;\n+   Name_Machine_Emax                   : constant Name_Id := N + 379;\n+   Name_Machine_Emin                   : constant Name_Id := N + 380;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 381;\n+   Name_Machine_Overflows              : constant Name_Id := N + 382;\n+   Name_Machine_Radix                  : constant Name_Id := N + 383;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 384;\n+   Name_Machine_Size                   : constant Name_Id := N + 385; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 386; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 387;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 388; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 389; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 390;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 391;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 392;\n+   Name_Model_Small                    : constant Name_Id := N + 393;\n+   Name_Modulus                        : constant Name_Id := N + 394;\n+   Name_Null_Parameter                 : constant Name_Id := N + 395; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 396; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 397;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 398; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 399;\n+   Name_Pos                            : constant Name_Id := N + 400;\n+   Name_Position                       : constant Name_Id := N + 401;\n+   Name_Range                          : constant Name_Id := N + 402;\n+   Name_Range_Length                   : constant Name_Id := N + 403; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 404;\n+   Name_Safe_Emax                      : constant Name_Id := N + 405; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 406;\n+   Name_Safe_Large                     : constant Name_Id := N + 407; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 408;\n+   Name_Safe_Small                     : constant Name_Id := N + 409; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 410;\n+   Name_Scaling                        : constant Name_Id := N + 411;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 412;\n+   Name_Size                           : constant Name_Id := N + 413;\n+   Name_Small                          : constant Name_Id := N + 414;\n+   Name_Storage_Size                   : constant Name_Id := N + 415;\n+   Name_Storage_Unit                   : constant Name_Id := N + 416; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 417;\n+   Name_Target_Name                    : constant Name_Id := N + 418; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 419;\n+   Name_To_Address                     : constant Name_Id := N + 420; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 421; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 422; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 423;\n+   Name_Unchecked_Access               : constant Name_Id := N + 424;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 425;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 426; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 427; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 428; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 429;\n+   Name_Valid                          : constant Name_Id := N + 430;\n+   Name_Value_Size                     : constant Name_Id := N + 431; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 432;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 433; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 434;\n+   Name_Width                          : constant Name_Id := N + 435;\n+   Name_Word_Size                      : constant Name_Id := N + 436; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 435;\n-   Name_Adjacent                       : constant Name_Id := N + 435;\n-   Name_Ceiling                        : constant Name_Id := N + 436;\n-   Name_Copy_Sign                      : constant Name_Id := N + 437;\n-   Name_Floor                          : constant Name_Id := N + 438;\n-   Name_Fraction                       : constant Name_Id := N + 439;\n-   Name_Image                          : constant Name_Id := N + 440;\n-   Name_Input                          : constant Name_Id := N + 441;\n-   Name_Machine                        : constant Name_Id := N + 442;\n-   Name_Max                            : constant Name_Id := N + 443;\n-   Name_Min                            : constant Name_Id := N + 444;\n-   Name_Model                          : constant Name_Id := N + 445;\n-   Name_Pred                           : constant Name_Id := N + 446;\n-   Name_Remainder                      : constant Name_Id := N + 447;\n-   Name_Rounding                       : constant Name_Id := N + 448;\n-   Name_Succ                           : constant Name_Id := N + 449;\n-   Name_Truncation                     : constant Name_Id := N + 450;\n-   Name_Value                          : constant Name_Id := N + 451;\n-   Name_Wide_Image                     : constant Name_Id := N + 452;\n-   Name_Wide_Value                     : constant Name_Id := N + 453;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 453;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 437;\n+   Name_Adjacent                       : constant Name_Id := N + 437;\n+   Name_Ceiling                        : constant Name_Id := N + 438;\n+   Name_Copy_Sign                      : constant Name_Id := N + 439;\n+   Name_Floor                          : constant Name_Id := N + 440;\n+   Name_Fraction                       : constant Name_Id := N + 441;\n+   Name_Image                          : constant Name_Id := N + 442;\n+   Name_Input                          : constant Name_Id := N + 443;\n+   Name_Machine                        : constant Name_Id := N + 444;\n+   Name_Max                            : constant Name_Id := N + 445;\n+   Name_Min                            : constant Name_Id := N + 446;\n+   Name_Model                          : constant Name_Id := N + 447;\n+   Name_Pred                           : constant Name_Id := N + 448;\n+   Name_Remainder                      : constant Name_Id := N + 449;\n+   Name_Rounding                       : constant Name_Id := N + 450;\n+   Name_Succ                           : constant Name_Id := N + 451;\n+   Name_Truncation                     : constant Name_Id := N + 452;\n+   Name_Value                          : constant Name_Id := N + 453;\n+   Name_Wide_Image                     : constant Name_Id := N + 454;\n+   Name_Wide_Value                     : constant Name_Id := N + 455;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 455;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 454;\n-   Name_Output                         : constant Name_Id := N + 454;\n-   Name_Read                           : constant Name_Id := N + 455;\n-   Name_Write                          : constant Name_Id := N + 456;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 456;\n+   First_Procedure_Attribute           : constant Name_Id := N + 456;\n+   Name_Output                         : constant Name_Id := N + 456;\n+   Name_Read                           : constant Name_Id := N + 457;\n+   Name_Write                          : constant Name_Id := N + 458;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 458;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 457;\n-   Name_Elab_Body                      : constant Name_Id := N + 457; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 458; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 459;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 459;\n+   Name_Elab_Body                      : constant Name_Id := N + 459; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 460; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 461;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 460;\n-   Name_Base                           : constant Name_Id := N + 460;\n-   Name_Class                          : constant Name_Id := N + 461;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 461;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 461;\n-   Last_Attribute_Name                 : constant Name_Id := N + 461;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 462;\n+   Name_Base                           : constant Name_Id := N + 462;\n+   Name_Class                          : constant Name_Id := N + 463;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 463;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 463;\n+   Last_Attribute_Name                 : constant Name_Id := N + 463;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 462;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 462;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 463;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 463;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 464;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 464;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 465;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 465;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 464;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 464;\n-   Name_Priority_Queuing               : constant Name_Id := N + 465;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 465;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 466;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 466;\n+   Name_Priority_Queuing               : constant Name_Id := N + 467;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 467;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 466;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 466;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 466;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 468;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 468;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 468;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 467;\n-   Name_Access_Check                   : constant Name_Id := N + 467;\n-   Name_Accessibility_Check            : constant Name_Id := N + 468;\n-   Name_Discriminant_Check             : constant Name_Id := N + 469;\n-   Name_Division_Check                 : constant Name_Id := N + 470;\n-   Name_Elaboration_Check              : constant Name_Id := N + 471;\n-   Name_Index_Check                    : constant Name_Id := N + 472;\n-   Name_Length_Check                   : constant Name_Id := N + 473;\n-   Name_Overflow_Check                 : constant Name_Id := N + 474;\n-   Name_Range_Check                    : constant Name_Id := N + 475;\n-   Name_Storage_Check                  : constant Name_Id := N + 476;\n-   Name_Tag_Check                      : constant Name_Id := N + 477;\n-   Name_All_Checks                     : constant Name_Id := N + 478;\n-   Last_Check_Name                     : constant Name_Id := N + 478;\n+   First_Check_Name                    : constant Name_Id := N + 469;\n+   Name_Access_Check                   : constant Name_Id := N + 469;\n+   Name_Accessibility_Check            : constant Name_Id := N + 470;\n+   Name_Discriminant_Check             : constant Name_Id := N + 471;\n+   Name_Division_Check                 : constant Name_Id := N + 472;\n+   Name_Elaboration_Check              : constant Name_Id := N + 473;\n+   Name_Index_Check                    : constant Name_Id := N + 474;\n+   Name_Length_Check                   : constant Name_Id := N + 475;\n+   Name_Overflow_Check                 : constant Name_Id := N + 476;\n+   Name_Range_Check                    : constant Name_Id := N + 477;\n+   Name_Storage_Check                  : constant Name_Id := N + 478;\n+   Name_Tag_Check                      : constant Name_Id := N + 479;\n+   Name_All_Checks                     : constant Name_Id := N + 480;\n+   Last_Check_Name                     : constant Name_Id := N + 480;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 479;\n-   Name_Abs                            : constant Name_Id := N + 480;\n-   Name_Accept                         : constant Name_Id := N + 481;\n-   Name_And                            : constant Name_Id := N + 482;\n-   Name_All                            : constant Name_Id := N + 483;\n-   Name_Array                          : constant Name_Id := N + 484;\n-   Name_At                             : constant Name_Id := N + 485;\n-   Name_Begin                          : constant Name_Id := N + 486;\n-   Name_Body                           : constant Name_Id := N + 487;\n-   Name_Case                           : constant Name_Id := N + 488;\n-   Name_Constant                       : constant Name_Id := N + 489;\n-   Name_Declare                        : constant Name_Id := N + 490;\n-   Name_Delay                          : constant Name_Id := N + 491;\n-   Name_Do                             : constant Name_Id := N + 492;\n-   Name_Else                           : constant Name_Id := N + 493;\n-   Name_Elsif                          : constant Name_Id := N + 494;\n-   Name_End                            : constant Name_Id := N + 495;\n-   Name_Entry                          : constant Name_Id := N + 496;\n-   Name_Exception                      : constant Name_Id := N + 497;\n-   Name_Exit                           : constant Name_Id := N + 498;\n-   Name_For                            : constant Name_Id := N + 499;\n-   Name_Function                       : constant Name_Id := N + 500;\n-   Name_Generic                        : constant Name_Id := N + 501;\n-   Name_Goto                           : constant Name_Id := N + 502;\n-   Name_If                             : constant Name_Id := N + 503;\n-   Name_In                             : constant Name_Id := N + 504;\n-   Name_Is                             : constant Name_Id := N + 505;\n-   Name_Limited                        : constant Name_Id := N + 506;\n-   Name_Loop                           : constant Name_Id := N + 507;\n-   Name_Mod                            : constant Name_Id := N + 508;\n-   Name_New                            : constant Name_Id := N + 509;\n-   Name_Not                            : constant Name_Id := N + 510;\n-   Name_Null                           : constant Name_Id := N + 511;\n-   Name_Of                             : constant Name_Id := N + 512;\n-   Name_Or                             : constant Name_Id := N + 513;\n-   Name_Others                         : constant Name_Id := N + 514;\n-   Name_Out                            : constant Name_Id := N + 515;\n-   Name_Package                        : constant Name_Id := N + 516;\n-   Name_Pragma                         : constant Name_Id := N + 517;\n-   Name_Private                        : constant Name_Id := N + 518;\n-   Name_Procedure                      : constant Name_Id := N + 519;\n-   Name_Raise                          : constant Name_Id := N + 520;\n-   Name_Record                         : constant Name_Id := N + 521;\n-   Name_Rem                            : constant Name_Id := N + 522;\n-   Name_Renames                        : constant Name_Id := N + 523;\n-   Name_Return                         : constant Name_Id := N + 524;\n-   Name_Reverse                        : constant Name_Id := N + 525;\n-   Name_Select                         : constant Name_Id := N + 526;\n-   Name_Separate                       : constant Name_Id := N + 527;\n-   Name_Subtype                        : constant Name_Id := N + 528;\n-   Name_Task                           : constant Name_Id := N + 529;\n-   Name_Terminate                      : constant Name_Id := N + 530;\n-   Name_Then                           : constant Name_Id := N + 531;\n-   Name_Type                           : constant Name_Id := N + 532;\n-   Name_Use                            : constant Name_Id := N + 533;\n-   Name_When                           : constant Name_Id := N + 534;\n-   Name_While                          : constant Name_Id := N + 535;\n-   Name_With                           : constant Name_Id := N + 536;\n-   Name_Xor                            : constant Name_Id := N + 537;\n+   Name_Abort                          : constant Name_Id := N + 481;\n+   Name_Abs                            : constant Name_Id := N + 482;\n+   Name_Accept                         : constant Name_Id := N + 483;\n+   Name_And                            : constant Name_Id := N + 484;\n+   Name_All                            : constant Name_Id := N + 485;\n+   Name_Array                          : constant Name_Id := N + 486;\n+   Name_At                             : constant Name_Id := N + 487;\n+   Name_Begin                          : constant Name_Id := N + 488;\n+   Name_Body                           : constant Name_Id := N + 489;\n+   Name_Case                           : constant Name_Id := N + 490;\n+   Name_Constant                       : constant Name_Id := N + 491;\n+   Name_Declare                        : constant Name_Id := N + 492;\n+   Name_Delay                          : constant Name_Id := N + 493;\n+   Name_Do                             : constant Name_Id := N + 494;\n+   Name_Else                           : constant Name_Id := N + 495;\n+   Name_Elsif                          : constant Name_Id := N + 496;\n+   Name_End                            : constant Name_Id := N + 497;\n+   Name_Entry                          : constant Name_Id := N + 498;\n+   Name_Exception                      : constant Name_Id := N + 499;\n+   Name_Exit                           : constant Name_Id := N + 500;\n+   Name_For                            : constant Name_Id := N + 501;\n+   Name_Function                       : constant Name_Id := N + 502;\n+   Name_Generic                        : constant Name_Id := N + 503;\n+   Name_Goto                           : constant Name_Id := N + 504;\n+   Name_If                             : constant Name_Id := N + 505;\n+   Name_In                             : constant Name_Id := N + 506;\n+   Name_Is                             : constant Name_Id := N + 507;\n+   Name_Limited                        : constant Name_Id := N + 508;\n+   Name_Loop                           : constant Name_Id := N + 509;\n+   Name_Mod                            : constant Name_Id := N + 510;\n+   Name_New                            : constant Name_Id := N + 511;\n+   Name_Not                            : constant Name_Id := N + 512;\n+   Name_Null                           : constant Name_Id := N + 513;\n+   Name_Of                             : constant Name_Id := N + 514;\n+   Name_Or                             : constant Name_Id := N + 515;\n+   Name_Others                         : constant Name_Id := N + 516;\n+   Name_Out                            : constant Name_Id := N + 517;\n+   Name_Package                        : constant Name_Id := N + 518;\n+   Name_Pragma                         : constant Name_Id := N + 519;\n+   Name_Private                        : constant Name_Id := N + 520;\n+   Name_Procedure                      : constant Name_Id := N + 521;\n+   Name_Raise                          : constant Name_Id := N + 522;\n+   Name_Record                         : constant Name_Id := N + 523;\n+   Name_Rem                            : constant Name_Id := N + 524;\n+   Name_Renames                        : constant Name_Id := N + 525;\n+   Name_Return                         : constant Name_Id := N + 526;\n+   Name_Reverse                        : constant Name_Id := N + 527;\n+   Name_Select                         : constant Name_Id := N + 528;\n+   Name_Separate                       : constant Name_Id := N + 529;\n+   Name_Subtype                        : constant Name_Id := N + 530;\n+   Name_Task                           : constant Name_Id := N + 531;\n+   Name_Terminate                      : constant Name_Id := N + 532;\n+   Name_Then                           : constant Name_Id := N + 533;\n+   Name_Type                           : constant Name_Id := N + 534;\n+   Name_Use                            : constant Name_Id := N + 535;\n+   Name_When                           : constant Name_Id := N + 536;\n+   Name_While                          : constant Name_Id := N + 537;\n+   Name_With                           : constant Name_Id := N + 538;\n+   Name_Xor                            : constant Name_Id := N + 539;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 538;\n-   Name_Divide                         : constant Name_Id := N + 538;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 539;\n-   Name_Exception_Information          : constant Name_Id := N + 540;\n-   Name_Exception_Message              : constant Name_Id := N + 541;\n-   Name_Exception_Name                 : constant Name_Id := N + 542;\n-   Name_File                           : constant Name_Id := N + 543;\n-   Name_Import_Address                 : constant Name_Id := N + 544;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 545;\n-   Name_Import_Value                   : constant Name_Id := N + 546;\n-   Name_Is_Negative                    : constant Name_Id := N + 547;\n-   Name_Line                           : constant Name_Id := N + 548;\n-   Name_Rotate_Left                    : constant Name_Id := N + 549;\n-   Name_Rotate_Right                   : constant Name_Id := N + 550;\n-   Name_Shift_Left                     : constant Name_Id := N + 551;\n-   Name_Shift_Right                    : constant Name_Id := N + 552;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 553;\n-   Name_Source_Location                : constant Name_Id := N + 554;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 555;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 556;\n-   Name_To_Pointer                     : constant Name_Id := N + 557;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 557;\n+   First_Intrinsic_Name                : constant Name_Id := N + 540;\n+   Name_Divide                         : constant Name_Id := N + 540;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 541;\n+   Name_Exception_Information          : constant Name_Id := N + 542;\n+   Name_Exception_Message              : constant Name_Id := N + 543;\n+   Name_Exception_Name                 : constant Name_Id := N + 544;\n+   Name_File                           : constant Name_Id := N + 545;\n+   Name_Import_Address                 : constant Name_Id := N + 546;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 547;\n+   Name_Import_Value                   : constant Name_Id := N + 548;\n+   Name_Is_Negative                    : constant Name_Id := N + 549;\n+   Name_Line                           : constant Name_Id := N + 550;\n+   Name_Rotate_Left                    : constant Name_Id := N + 551;\n+   Name_Rotate_Right                   : constant Name_Id := N + 552;\n+   Name_Shift_Left                     : constant Name_Id := N + 553;\n+   Name_Shift_Right                    : constant Name_Id := N + 554;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 555;\n+   Name_Source_Location                : constant Name_Id := N + 556;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 557;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 558;\n+   Name_To_Pointer                     : constant Name_Id := N + 559;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 559;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 558;\n-   Name_Abstract                       : constant Name_Id := N + 558;\n-   Name_Aliased                        : constant Name_Id := N + 559;\n-   Name_Protected                      : constant Name_Id := N + 560;\n-   Name_Until                          : constant Name_Id := N + 561;\n-   Name_Requeue                        : constant Name_Id := N + 562;\n-   Name_Tagged                         : constant Name_Id := N + 563;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 563;\n+   First_95_Reserved_Word              : constant Name_Id := N + 560;\n+   Name_Abstract                       : constant Name_Id := N + 560;\n+   Name_Aliased                        : constant Name_Id := N + 561;\n+   Name_Protected                      : constant Name_Id := N + 562;\n+   Name_Until                          : constant Name_Id := N + 563;\n+   Name_Requeue                        : constant Name_Id := N + 564;\n+   Name_Tagged                         : constant Name_Id := N + 565;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 565;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 564;\n+   Name_Raise_Exception                : constant Name_Id := N + 566;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 565;\n-   Name_Body_Suffix                    : constant Name_Id := N + 566;\n-   Name_Builder                        : constant Name_Id := N + 567;\n-   Name_Compiler                       : constant Name_Id := N + 568;\n-   Name_Cross_Reference                : constant Name_Id := N + 569;\n-   Name_Default_Switches               : constant Name_Id := N + 570;\n-   Name_Exec_Dir                       : constant Name_Id := N + 571;\n-   Name_Executable                     : constant Name_Id := N + 572;\n-   Name_Executable_Suffix              : constant Name_Id := N + 573;\n-   Name_Extends                        : constant Name_Id := N + 574;\n-   Name_Finder                         : constant Name_Id := N + 575;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 576;\n-   Name_Gnatls                         : constant Name_Id := N + 577;\n-   Name_Gnatstub                       : constant Name_Id := N + 578;\n-   Name_Implementation                 : constant Name_Id := N + 579;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 580;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 581;\n-   Name_Languages                      : constant Name_Id := N + 582;\n-   Name_Library_Dir                    : constant Name_Id := N + 583;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 584;\n-   Name_Library_GCC                    : constant Name_Id := N + 585;\n-   Name_Library_Interface              : constant Name_Id := N + 586;\n-   Name_Library_Kind                   : constant Name_Id := N + 587;\n-   Name_Library_Name                   : constant Name_Id := N + 588;\n-   Name_Library_Options                : constant Name_Id := N + 589;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 590;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 591;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 592;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 593;\n-   Name_Library_Version                : constant Name_Id := N + 594;\n-   Name_Linker                         : constant Name_Id := N + 595;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 596;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 597;\n-   Name_Metrics                        : constant Name_Id := N + 598;\n-   Name_Naming                         : constant Name_Id := N + 599;\n-   Name_Object_Dir                     : constant Name_Id := N + 600;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 601;\n-   Name_Project                        : constant Name_Id := N + 602;\n-   Name_Separate_Suffix                : constant Name_Id := N + 603;\n-   Name_Source_Dirs                    : constant Name_Id := N + 604;\n-   Name_Source_Files                   : constant Name_Id := N + 605;\n-   Name_Source_List_File               : constant Name_Id := N + 606;\n-   Name_Spec                           : constant Name_Id := N + 607;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 608;\n-   Name_Specification                  : constant Name_Id := N + 609;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 610;\n-   Name_Specification_Suffix           : constant Name_Id := N + 611;\n-   Name_Switches                       : constant Name_Id := N + 612;\n+   Name_Binder                         : constant Name_Id := N + 567;\n+   Name_Body_Suffix                    : constant Name_Id := N + 568;\n+   Name_Builder                        : constant Name_Id := N + 569;\n+   Name_Compiler                       : constant Name_Id := N + 570;\n+   Name_Cross_Reference                : constant Name_Id := N + 571;\n+   Name_Default_Switches               : constant Name_Id := N + 572;\n+   Name_Exec_Dir                       : constant Name_Id := N + 573;\n+   Name_Executable                     : constant Name_Id := N + 574;\n+   Name_Executable_Suffix              : constant Name_Id := N + 575;\n+   Name_Extends                        : constant Name_Id := N + 576;\n+   Name_Finder                         : constant Name_Id := N + 577;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 578;\n+   Name_Gnatls                         : constant Name_Id := N + 579;\n+   Name_Gnatstub                       : constant Name_Id := N + 580;\n+   Name_Implementation                 : constant Name_Id := N + 581;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 582;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 583;\n+   Name_Languages                      : constant Name_Id := N + 584;\n+   Name_Library_Dir                    : constant Name_Id := N + 585;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 586;\n+   Name_Library_GCC                    : constant Name_Id := N + 587;\n+   Name_Library_Interface              : constant Name_Id := N + 588;\n+   Name_Library_Kind                   : constant Name_Id := N + 589;\n+   Name_Library_Name                   : constant Name_Id := N + 590;\n+   Name_Library_Options                : constant Name_Id := N + 591;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 592;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 593;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 594;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 595;\n+   Name_Library_Version                : constant Name_Id := N + 596;\n+   Name_Linker                         : constant Name_Id := N + 597;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 598;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 599;\n+   Name_Metrics                        : constant Name_Id := N + 600;\n+   Name_Naming                         : constant Name_Id := N + 601;\n+   Name_Object_Dir                     : constant Name_Id := N + 602;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 603;\n+   Name_Project                        : constant Name_Id := N + 604;\n+   Name_Separate_Suffix                : constant Name_Id := N + 605;\n+   Name_Source_Dirs                    : constant Name_Id := N + 606;\n+   Name_Source_Files                   : constant Name_Id := N + 607;\n+   Name_Source_List_File               : constant Name_Id := N + 608;\n+   Name_Spec                           : constant Name_Id := N + 609;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 610;\n+   Name_Specification                  : constant Name_Id := N + 611;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 612;\n+   Name_Specification_Suffix           : constant Name_Id := N + 613;\n+   Name_Switches                       : constant Name_Id := N + 614;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 613;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 615;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 613;\n+   Last_Predefined_Name                : constant Name_Id := N + 615;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;\n@@ -1014,6 +1016,7 @@ package Snames is\n       Attribute_First_Bit,\n       Attribute_Fixed_Value,\n       Attribute_Fore,\n+      Attribute_Has_Access_Values,\n       Attribute_Has_Discriminants,\n       Attribute_Identity,\n       Attribute_Img,"}, {"sha": "08a9b887f1784f3188864af867f8dc5612b0126f", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 95, "deletions": 94, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -80,104 +80,105 @@ extern unsigned char Get_Attribute_Id (int);\n #define  Attr_First_Bit                     32\n #define  Attr_Fixed_Value                   33\n #define  Attr_Fore                          34\n-#define  Attr_Has_Discriminants             35\n-#define  Attr_Identity                      36\n-#define  Attr_Img                           37\n-#define  Attr_Integer_Value                 38\n-#define  Attr_Large                         39\n-#define  Attr_Last                          40\n-#define  Attr_Last_Bit                      41\n-#define  Attr_Leading_Part                  42\n-#define  Attr_Length                        43\n-#define  Attr_Machine_Emax                  44\n-#define  Attr_Machine_Emin                  45\n-#define  Attr_Machine_Mantissa              46\n-#define  Attr_Machine_Overflows             47\n-#define  Attr_Machine_Radix                 48\n-#define  Attr_Machine_Rounds                49\n-#define  Attr_Machine_Size                  50\n-#define  Attr_Mantissa                      51\n-#define  Attr_Max_Size_In_Storage_Elements  52\n-#define  Attr_Maximum_Alignment             53\n-#define  Attr_Mechanism_Code                54\n-#define  Attr_Model_Emin                    55\n-#define  Attr_Model_Epsilon                 56\n-#define  Attr_Model_Mantissa                57\n-#define  Attr_Model_Small                   58\n-#define  Attr_Modulus                       59\n-#define  Attr_Null_Parameter                60\n-#define  Attr_Object_Size                   61\n-#define  Attr_Partition_ID                  62\n-#define  Attr_Passed_By_Reference           63\n-#define  Attr_Pool_Address                  64\n-#define  Attr_Pos                           65\n-#define  Attr_Position                      66\n-#define  Attr_Range                         67\n-#define  Attr_Range_Length                  68\n-#define  Attr_Round                         69\n-#define  Attr_Safe_Emax                     70\n-#define  Attr_Safe_First                    71\n-#define  Attr_Safe_Large                    72\n-#define  Attr_Safe_Last                     73\n-#define  Attr_Safe_Small                    74\n-#define  Attr_Scale                         75\n-#define  Attr_Scaling                       76\n-#define  Attr_Signed_Zeros                  77\n-#define  Attr_Size                          78\n-#define  Attr_Small                         79\n-#define  Attr_Storage_Size                  80\n-#define  Attr_Storage_Unit                  81\n-#define  Attr_Tag                           82\n-#define  Attr_Target_Name                   83\n-#define  Attr_Terminated                    84\n-#define  Attr_To_Address                    85\n-#define  Attr_Type_Class                    86\n-#define  Attr_UET_Address                   87\n-#define  Attr_Unbiased_Rounding             88\n-#define  Attr_Unchecked_Access              89\n-#define  Attr_Unconstrained_Array           90\n-#define  Attr_Universal_Literal_String      91\n-#define  Attr_Unrestricted_Access           92\n-#define  Attr_VADS_Size                     93\n-#define  Attr_Val                           94\n-#define  Attr_Valid                         95\n-#define  Attr_Value_Size                    96\n-#define  Attr_Version                       97\n-#define  Attr_Wide_Character_Size           98\n-#define  Attr_Wide_Width                    99\n-#define  Attr_Width                        100\n+#define  Attr_Has_Access_Values             35\n+#define  Attr_Has_Discriminants             36\n+#define  Attr_Identity                      37\n+#define  Attr_Img                           38\n+#define  Attr_Integer_Value                 39\n+#define  Attr_Large                         40\n+#define  Attr_Last                          41\n+#define  Attr_Last_Bit                      42\n+#define  Attr_Leading_Part                  43\n+#define  Attr_Length                        44\n+#define  Attr_Machine_Emax                  45\n+#define  Attr_Machine_Emin                  46\n+#define  Attr_Machine_Mantissa              47\n+#define  Attr_Machine_Overflows             48\n+#define  Attr_Machine_Radix                 49\n+#define  Attr_Machine_Rounds                50\n+#define  Attr_Machine_Size                  51\n+#define  Attr_Mantissa                      52\n+#define  Attr_Max_Size_In_Storage_Elements  53\n+#define  Attr_Maximum_Alignment             54\n+#define  Attr_Mechanism_Code                55\n+#define  Attr_Model_Emin                    56\n+#define  Attr_Model_Epsilon                 57\n+#define  Attr_Model_Mantissa                58\n+#define  Attr_Model_Small                   59\n+#define  Attr_Modulus                       60\n+#define  Attr_Null_Parameter                61\n+#define  Attr_Object_Size                   62\n+#define  Attr_Partition_ID                  63\n+#define  Attr_Passed_By_Reference           64\n+#define  Attr_Pool_Address                  65\n+#define  Attr_Pos                           66\n+#define  Attr_Position                      67\n+#define  Attr_Range                         68\n+#define  Attr_Range_Length                  69\n+#define  Attr_Round                         70\n+#define  Attr_Safe_Emax                     71\n+#define  Attr_Safe_First                    72\n+#define  Attr_Safe_Large                    73\n+#define  Attr_Safe_Last                     74\n+#define  Attr_Safe_Small                    75\n+#define  Attr_Scale                         76\n+#define  Attr_Scaling                       77\n+#define  Attr_Signed_Zeros                  78\n+#define  Attr_Size                          79\n+#define  Attr_Small                         80\n+#define  Attr_Storage_Size                  81\n+#define  Attr_Storage_Unit                  82\n+#define  Attr_Tag                           83\n+#define  Attr_Target_Name                   84\n+#define  Attr_Terminated                    85\n+#define  Attr_To_Address                    86\n+#define  Attr_Type_Class                    87\n+#define  Attr_UET_Address                   88\n+#define  Attr_Unbiased_Rounding             89\n+#define  Attr_Unchecked_Access              90\n+#define  Attr_Unconstrained_Array           91\n+#define  Attr_Universal_Literal_String      92\n+#define  Attr_Unrestricted_Access           93\n+#define  Attr_VADS_Size                     94\n+#define  Attr_Val                           95\n+#define  Attr_Valid                         96\n+#define  Attr_Value_Size                    97\n+#define  Attr_Version                       98\n+#define  Attr_Wide_Character_Size           99\n+#define  Attr_Wide_Width                   100\n+#define  Attr_Width                        101\n+#define  Attr_Word_Size                    102\n \n-#define  Attr_Word_Size                    101\n-#define  Attr_Adjacent                     102\n-#define  Attr_Ceiling                      103\n-#define  Attr_Copy_Sign                    104\n-#define  Attr_Floor                        105\n-#define  Attr_Fraction                     106\n-#define  Attr_Image                        107\n-#define  Attr_Input                        108\n-#define  Attr_Machine                      109\n-#define  Attr_Max                          110\n-#define  Attr_Min                          111\n-#define  Attr_Model                        112\n-#define  Attr_Pred                         113\n-#define  Attr_Remainder                    114\n-#define  Attr_Rounding                     115\n-#define  Attr_Succ                         116\n-#define  Attr_Truncation                   117\n-#define  Attr_Value                        118\n-#define  Attr_Wide_Image                   119\n-#define  Attr_Wide_Value                   120\n+#define  Attr_Adjacent                     103\n+#define  Attr_Ceiling                      104\n+#define  Attr_Copy_Sign                    105\n+#define  Attr_Floor                        106\n+#define  Attr_Fraction                     107\n+#define  Attr_Image                        108\n+#define  Attr_Input                        109\n+#define  Attr_Machine                      110\n+#define  Attr_Max                          111\n+#define  Attr_Min                          112\n+#define  Attr_Model                        113\n+#define  Attr_Pred                         114\n+#define  Attr_Remainder                    115\n+#define  Attr_Rounding                     116\n+#define  Attr_Succ                         117\n+#define  Attr_Truncation                   118\n+#define  Attr_Value                        119\n+#define  Attr_Wide_Image                   120\n+#define  Attr_Wide_Value                   121\n \n-#define  Attr_Output                       121\n-#define  Attr_Read                         122\n-#define  Attr_Write                        123\n+#define  Attr_Output                       122\n+#define  Attr_Read                         123\n+#define  Attr_Write                        124\n \n-#define  Attr_Elab_Body                    124\n-#define  Attr_Elab_Spec                    125\n-#define  Attr_Storage_Pool                 126\n+#define  Attr_Elab_Body                    125\n+#define  Attr_Elab_Spec                    126\n+#define  Attr_Storage_Pool                 127\n \n-#define  Attr_Base                         127\n-#define  Attr_Class                        128\n+#define  Attr_Base                         128\n+#define  Attr_Class                        129\n \n /* Define the function to check if a Name_Id value is a valid pragma */\n "}, {"sha": "0d814441c49dad4a8db1256dee9642149c209aca", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -2817,13 +2817,13 @@ package body Sprint is\n       Write_Str (\"\"\"]\");\n    end Write_Condition_And_Reason;\n \n-   ------------------------\n-   --  Write_Discr_Specs --\n-   ------------------------\n+   -----------------------\n+   -- Write_Discr_Specs --\n+   -----------------------\n \n    procedure Write_Discr_Specs (N : Node_Id) is\n-      Specs  : List_Id;\n-      Spec   : Node_Id;\n+      Specs : List_Id;\n+      Spec  : Node_Id;\n \n    begin\n       Specs := Discriminant_Specifications (N);"}, {"sha": "7353c9fcff4db12503aa1604d130bd7d0c913864", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -352,9 +352,9 @@ package body Uname is\n          return N;\n       end Get_Parent;\n \n-   --------------------------------------------\n-   --  Start of Processing for Get_Unit_Name --\n-   --------------------------------------------\n+   -------------------------------------------\n+   -- Start of Processing for Get_Unit_Name --\n+   -------------------------------------------\n \n    begin\n       Node := N;"}, {"sha": "2ccafffb8327e2d11af8571217f25c3d4ab3e249", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -26,6 +26,7 @@\n \n with Gnatvsn;\n with Hostparm;\n+with Opt;\n with Osint; use Osint;\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n@@ -34,6 +35,15 @@ with Ada.Text_IO;             use Ada.Text_IO;\n \n package body VMS_Conv is\n \n+   Keep_Temps_Option : constant Item_Ptr :=\n+                         new Item'\n+                           (Id          => Id_Option,\n+                            Name        =>\n+                              new String'(\"/KEEP_TEMPORARY_FILES\"),\n+                            Next        => null,\n+                            Command     => Undefined,\n+                            Unix_String => null);\n+\n    Param_Count : Natural := 0;\n    --  Number of parameter arguments so far\n \n@@ -1288,13 +1298,21 @@ package body VMS_Conv is\n                   raise Normal_Exit;\n                end if;\n \n-               --  Special handling for internal debugging switch /?\n+            --  Special handling for internal debugging switch /?\n \n             elsif Arg.all = \"/?\" then\n                Display_Command := True;\n                Output_File_Expected := False;\n \n-               --  Copy -switch unchanged\n+            --  Special handling of internal option /KEEP_TEMPORARY_FILES\n+\n+            elsif Arg'Length >= 7\n+              and then Matching_Name\n+                         (Arg.all, Keep_Temps_Option, True) /= null\n+            then\n+               Opt.Keep_Temporary_Files := True;\n+\n+            --  Copy -switch unchanged\n \n             elsif Arg (Arg'First) = '-' then\n                Place (' ');"}, {"sha": "3bd22fab4a571f7afacc5c83b33664bb2e4e2128", "filename": "gcc/ada/vms_conv.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fvms_conv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fvms_conv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -97,7 +97,7 @@ package VMS_Conv is\n \n    type Command_Type is\n      (Bind, Chop, Clean, Compile, Elim, Find, Krunch, Library, Link, List,\n-      Make, Name, Preprocess, Pretty, Shared, Stub, Metric, Xref, Undefined);\n+      Make, Metric, Name, Preprocess, Pretty, Shared, Stub, Xref, Undefined);\n \n    type Alternate_Command is (Comp, Ls, Kr, Pp, Prep);\n    --  Alternate command libel for non VMS system"}, {"sha": "de1512ca76d6068165debbab9b5dc5756fd52a7a", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ce9ca22bc2a1c9986fee07fe3b41980b2f9665/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=15ce9ca22bc2a1c9986fee07fe3b41980b2f9665", "patch": "@@ -1893,11 +1893,9 @@ package VMS_Data is\n    --                               construction of box comments, as shown in\n    --                               the following example:\n    --\n-   --\n-   --                           ---------------------------\n-   --                           -- This is a box comment --\n-   --                           -- with two text lines.  --\n-   --                           ---------------------------\n+   --                               ---------------------------\n+   --                               -- This is a box comment --\n+   --                               ---------------------------\n    --\n    --      END                  Check end/exit labels.\n    --                           Optional labels on end statements ending"}]}