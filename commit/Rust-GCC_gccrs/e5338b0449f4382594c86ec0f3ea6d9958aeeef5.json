{"sha": "e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUzMzhiMDQ0OWY0MzgyNTk0Yzg2ZWMwZjNlYTZkOTk1OGFlZWVmNQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:49:18Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:49:18Z"}, "message": "re PR d/90761 (ICE in visit, at d/dmd/dcast.c:883)\n\n\tPR d/90761\nd/dmd: Merge upstream dmd d912f4e49\n\nFixes segmentation fault in implicitConvTo::ImplicitConvTo::visit.\n\nReviewed-on: https://github.com/dlang/dmd/pull/10005\n\nFrom-SVN: r272346", "tree": {"sha": "62bbe6883a0c080b16d928e0125af0935eba8d7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62bbe6883a0c080b16d928e0125af0935eba8d7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/comments", "author": null, "committer": null, "parents": [{"sha": "88ad43b1f91f7cd2ba9c342c6c1a6da82e6088bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88ad43b1f91f7cd2ba9c342c6c1a6da82e6088bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88ad43b1f91f7cd2ba9c342c6c1a6da82e6088bf"}], "stats": {"total": 139, "additions": 138, "deletions": 1}, "files": [{"sha": "865462d64fbcf66a9e62f6847479f7a8d73cb52c", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "patch": "@@ -1,4 +1,4 @@\n-3be8a80bb0c4e01c436be970ac3555ceabb3caf8\n+d912f4e495412b67f0a2e3b07f645909cfee0212\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "2957c09ca62bfde639b165c69e99464aea3532c1", "filename": "gcc/d/dmd/expressionsem.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.c?ref=e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "patch": "@@ -75,6 +75,7 @@ Expression *semantic(Expression *e, Scope *sc);\n Expression *semanticY(DotIdExp *exp, Scope *sc, int flag);\n Expression *semanticY(DotTemplateInstanceExp *exp, Scope *sc, int flag);\n StringExp *semanticString(Scope *sc, Expression *exp, const char *s);\n+Initializer *semantic(Initializer *init, Scope *sc, Type *t, NeedInterpret needInterpret);\n \n /****************************************\n  * Preprocess arguments to function.\n@@ -1226,6 +1227,23 @@ class ExpressionSemanticVisitor : public Visitor\n                     exp->error(\"no constructor for %s\", cd->toChars());\n                     return setError();\n                 }\n+\n+                // https://issues.dlang.org/show_bug.cgi?id=19941\n+                // Run semantic on all field initializers to resolve any forward\n+                // references. This is the same as done for structs in sd->fill().\n+                for (ClassDeclaration *c = cd; c; c = c->baseClass)\n+                {\n+                    for (size_t i = 0; i < c->fields.dim; i++)\n+                    {\n+                        VarDeclaration *v = c->fields[i];\n+                        if (v->inuse || v->_scope == NULL || v->_init == NULL ||\n+                            v->_init->isVoidInitializer())\n+                            continue;\n+                        v->inuse++;\n+                        v->_init = semantic(v->_init, v->_scope, v->type, INITinterpret);\n+                        v->inuse--;\n+                    }\n+                }\n             }\n         }\n         else if (tb->ty == Tstruct)"}, {"sha": "add1d417b6f686bc67b3ba5857cb7d420e693362", "filename": "gcc/testsuite/gdc.test/compilable/test19941.d", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest19941.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest19941.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest19941.d?ref=e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "patch": "@@ -0,0 +1,57 @@\n+// https://issues.dlang.org/show_bug.cgi?id=19941\n+\n+/******************************************/\n+\n+immutable i4 = 42;\n+const v4 = new C4;\n+class C4 { int f4 = i4; }\n+\n+const v5 = new C5;\n+immutable i5 = 42;\n+class C5 { int f5 = i5; }\n+\n+const v6 = new C6;\n+class C6 { int f6 = i6; }\n+immutable i6 = 42;\n+\n+/******************************************/\n+\n+immutable i10 = 42;\n+__gshared v10 = new C10;\n+class C10 { int f10 = i10; }\n+\n+__gshared v11 = new C11;\n+immutable i11 = 42;\n+class C11 { int f11 = i11; }\n+\n+__gshared v12 = new C12;\n+class C12 { int f12 = i12; }\n+immutable i12 = 42;\n+\n+/******************************************/\n+\n+immutable i13 = 42;\n+immutable v13 = new C13;\n+class C13 { int f13 = i13; }\n+\n+immutable v14 = new C14;\n+immutable i14 = 42;\n+class C14 { int f14 = i14; }\n+\n+immutable v15 = new C15;\n+class C15 { int f15 = i15; }\n+immutable i15 = 42;\n+\n+/******************************************/\n+\n+immutable i16 = 42;\n+shared v16 = new C16;\n+class C16 { int f16 = i16; }\n+\n+shared v17 = new C17;\n+immutable i17 = 42;\n+class C17 { int f17 = i17; }\n+\n+shared v18 = new C18;\n+class C18 { int f18 = i18; }\n+immutable i18 = 42;"}, {"sha": "61e174b27fe3ae47b9ca8d22a47cf005b7092edc", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19941.d", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19941.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5338b0449f4382594c86ec0f3ea6d9958aeeef5/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19941.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19941.d?ref=e5338b0449f4382594c86ec0f3ea6d9958aeeef5", "patch": "@@ -0,0 +1,62 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(8): Error: undefined identifier `dne`\n+---\n+*/\n+auto a = new Auto;\n+class Auto { int field = &dne; }\n+\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(17): Error: undefined identifier `dne`\n+---\n+*/\n+const c = new Const;\n+class Const { int field = &dne; }\n+\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(26): Error: undefined identifier `dne`\n+---\n+*/\n+enum e = new Enum;\n+class Enum { int field = &dne; }\n+\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(35): Error: undefined identifier `dne`\n+---\n+*/\n+__gshared g = new Gshared;\n+class Gshared { int field = &dne; }\n+\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(44): Error: undefined identifier `dne`\n+---\n+*/\n+immutable i = new Immutable;\n+class Immutable { int field = &dne; }\n+\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(53): Error: undefined identifier `dne`\n+---\n+*/\n+shared s = new Shared;\n+class Shared { int field = &dne; }\n+\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail19941.d(62): Error: undefined identifier `dne`\n+---\n+*/\n+static t = new Static;\n+class Static { int field = &dne; }"}]}