{"sha": "00f24ef79439d8a539dfa67694a7f3c3b9f009fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBmMjRlZjc5NDM5ZDhhNTM5ZGZhNjc2OTRhN2YzYzNiOWYwMDlmYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-12-18T19:40:20Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-12-18T19:40:20Z"}, "message": "Makefile.in (stor-layout.o): Depend upon gt-stor-layout.h.\n\n\n\t* Makefile.in (stor-layout.o): Depend upon gt-stor-layout.h.\n\t(tree-ssa-propagate.o): Depend upon gt-tree-ssa-propagate.h.\n\t(tree-ssa-operands.o): Depend upon gt-tree-ssa-operands.h.\n\t(tree-mudflap.o): Depend upon gt-tree-mudflap.h.\n\t(expr.o): Depend upon gt-expr.h.\n\t(regclass.o): Depend upon gt-regclass.h.\n\t(bitmap.o): Depend upon gt-bitmap.h.\n\t(lists.o): Depend upon gt-lists.h.\n\n\t(cfgexpand.o): Don't depend upon gt-tree-cfg.h.\n\n\t(GTFILES): Remove fold-const.c.\n\t(gt-stmt.h, gt-fold-const.h, gt-input.h, gt-tree-ssa-ccp.h):\n\tRemove rules.\n\nFrom-SVN: r92360", "tree": {"sha": "7315f6c4b1945737ec7c43e11ced95636b04d6ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7315f6c4b1945737ec7c43e11ced95636b04d6ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00f24ef79439d8a539dfa67694a7f3c3b9f009fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f24ef79439d8a539dfa67694a7f3c3b9f009fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00f24ef79439d8a539dfa67694a7f3c3b9f009fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f24ef79439d8a539dfa67694a7f3c3b9f009fc/comments", "author": null, "committer": null, "parents": [{"sha": "3e527d38c33ababd3345a46d5cdd9ffc8ac6f6d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e527d38c33ababd3345a46d5cdd9ffc8ac6f6d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e527d38c33ababd3345a46d5cdd9ffc8ac6f6d3"}], "stats": {"total": 65, "additions": 43, "deletions": 22}, "files": [{"sha": "8a02b77d716e0d2d08fd90909f793086be0e8b4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f24ef79439d8a539dfa67694a7f3c3b9f009fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f24ef79439d8a539dfa67694a7f3c3b9f009fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00f24ef79439d8a539dfa67694a7f3c3b9f009fc", "patch": "@@ -1,3 +1,20 @@\n+2004-12-18  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* Makefile.in (stor-layout.o): Depend upon gt-stor-layout.h.\n+\t(tree-ssa-propagate.o): Depend upon gt-tree-ssa-propagate.h.\n+\t(tree-ssa-operands.o): Depend upon gt-tree-ssa-operands.h.\n+\t(tree-mudflap.o): Depend upon gt-tree-mudflap.h.\n+\t(expr.o): Depend upon gt-expr.h.\n+\t(regclass.o): Depend upon gt-regclass.h.\n+\t(bitmap.o): Depend upon gt-bitmap.h.\n+\t(lists.o): Depend upon gt-lists.h.\n+\n+\t(cfgexpand.o): Don't depend upon gt-tree-cfg.h.\n+\n+\t(GTFILES): Remove fold-const.c.\n+\t(gt-stmt.h, gt-fold-const.h, gt-input.h, gt-tree-ssa-ccp.h):\n+\tRemove rules.\n+\n 2004-12-18  Richard Henderson  <rth@redhat.com>\n \n \t* stor-layout.c (layout_decl): Unshare size expressions copied"}, {"sha": "801e231642b5978a9ff8ee7c860f7b8c5b49c77e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00f24ef79439d8a539dfa67694a7f3c3b9f009fc/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00f24ef79439d8a539dfa67694a7f3c3b9f009fc/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=00f24ef79439d8a539dfa67694a7f3c3b9f009fc", "patch": "@@ -1599,8 +1599,7 @@ print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H\n    $(GGC_H) langhooks.h real.h\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) function.h $(EXPR_H) $(RTL_H) toplev.h \\\n-   $(GGC_H) $(TM_P_H) $(TARGET_H) \\\n-   langhooks.h $(REGS_H)\n+   $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h\n tree-ssa.o : tree-ssa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) output.h diagnostic.h \\\n    errors.h toplev.h function.h $(TIMEVAR_H) \\\n@@ -1637,7 +1636,7 @@ tree-ssa-propagate.o : tree-ssa-propagate.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(SYSTEM_H) $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h \\\n    diagnostic.h errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) tree-pass.h langhooks.h \\\n-   tree-ssa-propagate.h vec.h\n+   tree-ssa-propagate.h vec.h gt-tree-ssa-propagate.h\n tree-ssa-dom.o : tree-ssa-dom.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) $(GGC_H) output.h diagnostic.h \\\n    errors.h function.h $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) \\\n@@ -1692,8 +1691,9 @@ tree-dfa.o : tree-dfa.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    convert.h $(TM_H) coretypes.h langhooks.h \\\n    $(TREE_DUMP_H) tree-pass.h params.h $(CGRAPH_H)\n tree-ssa-operands.o : tree-ssa-operands.c $(TREE_FLOW_H) $(CONFIG_H) \\\n-   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(GGC_H) $(CGRAPH_H) diagnostic.h errors.h \\\n-   tree-inline.h $(FLAGS_H) function.h $(TM_H) $(TIMEVAR_H) tree-pass.h\n+   $(SYSTEM_H) $(TREE_H) $(TM_P_H) $(GGC_H) $(CGRAPH_H) diagnostic.h \\\n+   errors.h tree-inline.h $(FLAGS_H) function.h $(TM_H) $(TIMEVAR_H) \\\n+   tree-pass.h gt-tree-ssa-operands.h\n tree-eh.o : tree-eh.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_H) $(FLAGS_H) function.h except.h langhooks.h \\\n    $(GGC_H) tree-pass.h gt-tree-eh.h\n@@ -1779,7 +1779,7 @@ tree-gimple.o : tree-gimple.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(EXPR_H) \\\n tree-mudflap.o : $(CONFIG_H) errors.h $(SYSTEM_H) $(TREE_H) tree-inline.h \\\n    $(C_TREE_H) $(C_COMMON_H) $(TREE_GIMPLE_H) diagnostic.h $(HASHTAB_H) \\\n    output.h varray.h langhooks.h tree-mudflap.h $(TM_H) coretypes.h \\\n-   $(TREE_DUMP_H) tree-pass.h $(CGRAPH_H)\n+   $(TREE_DUMP_H) tree-pass.h $(CGRAPH_H) $(GGC_H) gt-tree-mudflap.h\n tree-nomudflap.o : $(CONFIG_H) errors.h $(SYSTEM_H) $(TREE_H) tree-inline.h \\\n    $(C_TREE_H) $(C_COMMON_H) $(TREE_GIMPLE_H) diagnostic.h $(HASHTAB_H) \\\n    output.h varray.h langhooks.h tree-mudflap.h $(TM_H) coretypes.h\n@@ -1856,11 +1856,12 @@ except.o : except.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    langhooks.h insn-config.h hard-reg-set.h $(BASIC_BLOCK_H) output.h \\\n    dwarf2asm.h dwarf2out.h toplev.h $(HASHTAB_H) intl.h $(GGC_H) \\\n    gt-except.h $(CGRAPH_H)\n-expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) $(FLAGS_H) \\\n-   function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) libfuncs.h $(INSN_ATTR_H) insn-config.h \\\n-   $(RECOG_H) output.h typeclass.h hard-reg-set.h toplev.h hard-reg-set.h \\\n-   except.h reload.h $(GGC_H) langhooks.h intl.h $(TM_P_H) real.h $(TARGET_H) \\\n-   tree-iterator.h\n+expr.o : expr.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+   $(TREE_H) $(FLAGS_H) function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n+   libfuncs.h $(INSN_ATTR_H) insn-config.h $(RECOG_H) output.h \\\n+   typeclass.h hard-reg-set.h toplev.h hard-reg-set.h except.h reload.h \\\n+   $(GGC_H) langhooks.h intl.h $(TM_P_H) real.h $(TARGET_H) \\\n+   tree-iterator.h gt-expr.h\n dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) \\\n    $(FLAGS_H) function.h $(EXPR_H) $(OPTABS_H) $(INSN_ATTR_H) insn-config.h \\\n    langhooks.h $(GGC_H) gt-dojump.h\n@@ -2006,7 +2007,7 @@ cfghooks.o: cfghooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TR\n cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(RTL_H) $(TREE_H) $(TM_P_H) $(EXPR_H) function.h $(TIMEVAR_H) $(TM_H) \\\n    coretypes.h $(TREE_DUMP_H) except.h langhooks.h cfgloop.h tree-pass.h \\\n-   $(RTL_H) $(DIAGNOSTIC_H) toplev.h gt-tree-cfg.h\n+   $(RTL_H) $(DIAGNOSTIC_H) toplev.h\n cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n    function.h except.h $(GGC_H) $(TM_P_H) insn-config.h $(EXPR_H)\n@@ -2048,13 +2049,14 @@ combine.o : combine.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    rtlhooks-def.h $(BASIC_BLOCK_H) $(RECOG_H) real.h hard-reg-set.h \\\n    toplev.h $(TM_P_H) $(TREE_H) $(TARGET_H) output.h\n regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) insn-config.h $(RECOG_H) reload.h \\\n-   real.h toplev.h function.h output.h $(GGC_H) $(TM_P_H) $(EXPR_H) $(TIMEVAR_H)\n+   hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) insn-config.h \\\n+   $(RECOG_H) reload.h real.h toplev.h function.h output.h $(GGC_H) \\\n+   $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-regclass.h\n local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h function.h $(INSN_ATTR_H) toplev.h  except.h $(TM_P_H)\n-bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n-   $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H)\n+bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) \\\n+   $(FLAGS_H) $(BASIC_BLOCK_H) $(REGS_H) $(GGC_H) gt-bitmap.h\n global.o : global.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(FLAGS_H) \\\n    reload.h function.h $(RECOG_H) $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h\\\n    insn-config.h output.h toplev.h $(TM_P_H)\n@@ -2148,7 +2150,8 @@ predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE\n    $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n    $(RECOG_H) function.h except.h $(EXPR_H) $(TM_P_H) $(PREDICT_H) sreal.h \\\n    $(PARAMS_H) $(TARGET_H) $(CFGLOOP_H) $(COVERAGE_H) tree-scalar-evolution.h\n-lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h $(RTL_H) $(GGC_H)\n+lists.o: lists.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) toplev.h \\\n+   $(RTL_H) $(GGC_H) gt-lists.h\n bb-reorder.o : bb-reorder.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(BASIC_BLOCK_H) $(FLAGS_H) $(TIMEVAR_H) output.h $(CFGLAYOUT_H) $(FIBHEAP_H) \\\n    $(TARGET_H) function.h $(TM_P_H) $(OBSTACK_H) $(EXPR_H) $(REGS_H)\n@@ -2423,7 +2426,7 @@ GTFILES = $(srcdir)/input.h $(srcdir)/coretypes.h \\\n   $(srcdir)/dbxout.c $(srcdir)/dwarf2out.c $(srcdir)/dwarf2asm.c \\\n   $(srcdir)/dojump.c \\\n   $(srcdir)/emit-rtl.c $(srcdir)/except.c $(srcdir)/explow.c $(srcdir)/expr.c \\\n-  $(srcdir)/fold-const.c $(srcdir)/function.c \\\n+  $(srcdir)/function.c \\\n   $(srcdir)/gcse.c $(srcdir)/integrate.c $(srcdir)/lists.c $(srcdir)/optabs.c \\\n   $(srcdir)/profile.c $(srcdir)/ra-build.c $(srcdir)/regclass.c \\\n   $(srcdir)/reg-stack.c $(srcdir)/cfglayout.c \\\n@@ -2447,17 +2450,18 @@ GTFILES_LANG_DIR_NAMES = @subdirs@\n GTFILES_SRCDIR = @srcdir@\n \n gt-cgraph.h gt-coverage.h gtype-desc.h gtype-desc.c gt-except.h \\\n-gt-function.h gt-integrate.h gt-stmt.h gt-tree.h gt-varasm.h \\\n+gt-function.h gt-integrate.h gt-tree.h gt-varasm.h \\\n gt-emit-rtl.h gt-explow.h gt-stor-layout.h gt-regclass.h \\\n-gt-lists.h gt-alias.h gt-cselib.h gt-fold-const.h gt-gcse.h \\\n+gt-lists.h gt-alias.h gt-cselib.h gt-gcse.h \\\n gt-expr.h gt-sdbout.h gt-optabs.h gt-bitmap.h gt-dojump.h \\\n gt-dwarf2out.h gt-ra-build.h gt-reg-stack.h gt-dwarf2asm.h \\\n gt-dbxout.h gt-c-common.h gt-c-decl.h gt-c-parse.h \\\n-gt-c-pragma.h gtype-c.h gt-input.h gt-cfglayout.h \\\n+gt-c-pragma.h gtype-c.h gt-cfglayout.h \\\n gt-tree-mudflap.h gt-tree-complex.h \\\n-gt-tree-ssa-ccp.h gt-tree-eh.h \\\n+gt-tree-eh.h \\\n gt-tree-ssanames.h gt-tree-iterator.h gt-gimplify.h \\\n gt-tree-phinodes.h gt-tree-cfg.h gt-tree-nested.h \\\n+gt-tree-ssa-operands.h gt-tree-ssa-propagate.h \\\n gt-stringpool.h : s-gtype ; @true\n \n gtyp-gen.h: s-gtyp-gen ; @true"}]}