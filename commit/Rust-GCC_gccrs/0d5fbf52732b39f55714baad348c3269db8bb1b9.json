{"sha": "0d5fbf52732b39f55714baad348c3269db8bb1b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1ZmJmNTI3MzJiMzlmNTU3MTRiYWFkMzQ4YzMyNjlkYjhiYjFiOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-24T14:49:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-24T14:49:08Z"}, "message": "[multiple changes]\n\n2013-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_type.adb, exp_attr.adb, exp_ch4.adb: Minor reformatting.\n\n2013-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document 'Update attribute.\n\t* sem_attr.adb (Analyze_Attribute, case Update): Remove call\n\tto S14_Attribute (S14_Attribute): removed.\n\n2013-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* interfac.ads: Add size clauses for IEEE_Float_32/64\n\n2013-04-24  Claire Dross  <dross@adacore.com>\n\n\t* gnat1drv.adb (Adjust_Global_Switches): Remove\n\tspecial assignment of Use_Expression_With_Actions for SPARK_Mode.\n\n2013-04-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* checks.adb (Apply_Predicate_Check): Check for the presence\n\tof the dynamic predicate aspect when trying to determine if the\n\tpredicate of a type is non-static.\n\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Check\n\tfor the presence of the dynamic predicate aspect when trying to\n\tdetermine if the predicate of a type is non- static.\n\t* sem_ch13.adb (Add_Call): Capture the nature of the\n\tinherited ancestor predicate.\n\t(Build_Predicate_Functions): Update comments. Rewrite the checks on\n\tstatic predicate application. Complain about the form of a non-static\n\texpression only when the type is static.\n\n2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb: Add guard to tree traversal.\n\n2013-04-24  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb (Clean): Remove local variable Root_Environment,\n\tuse Makeutl.Root_Environment instead.\n\t* gnatcmd.adb: Remove local variable Root_Environment, use\n\tMakeutl.Root_Environment instead.\n\t* make.adb (Gnatmake): Remove local variable Root_Environment,\n\tuse Makeutl.Root_Environment instead.\n\t* prj-makr.adb: Remove local variable Root_Environment, use\n\tMakeutl.Root_Environment instead.\n\nFrom-SVN: r198243", "tree": {"sha": "2e0534b116d60294d01b70485a5da625a229e180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e0534b116d60294d01b70485a5da625a229e180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d5fbf52732b39f55714baad348c3269db8bb1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5fbf52732b39f55714baad348c3269db8bb1b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d5fbf52732b39f55714baad348c3269db8bb1b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5fbf52732b39f55714baad348c3269db8bb1b9/comments", "author": null, "committer": null, "parents": [{"sha": "3d67b2397ae7eb4d2c384a093cbcac138cf068c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d67b2397ae7eb4d2c384a093cbcac138cf068c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d67b2397ae7eb4d2c384a093cbcac138cf068c7"}], "stats": {"total": 269, "additions": 187, "deletions": 82}, "files": [{"sha": "3e5597a4b6ea9f056c4cdd4212d122e879e4fce3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -1,3 +1,51 @@\n+2013-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_type.adb, exp_attr.adb, exp_ch4.adb: Minor reformatting.\n+\n+2013-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document 'Update attribute.\n+\t* sem_attr.adb (Analyze_Attribute, case Update): Remove call\n+\tto S14_Attribute (S14_Attribute): removed.\n+\n+2013-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* interfac.ads: Add size clauses for IEEE_Float_32/64\n+\n+2013-04-24  Claire Dross  <dross@adacore.com>\n+\n+\t* gnat1drv.adb (Adjust_Global_Switches): Remove\n+\tspecial assignment of Use_Expression_With_Actions for SPARK_Mode.\n+\n+2013-04-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb (Apply_Predicate_Check): Check for the presence\n+\tof the dynamic predicate aspect when trying to determine if the\n+\tpredicate of a type is non-static.\n+\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Check\n+\tfor the presence of the dynamic predicate aspect when trying to\n+\tdetermine if the predicate of a type is non- static.\n+\t* sem_ch13.adb (Add_Call): Capture the nature of the\n+\tinherited ancestor predicate.\n+\t(Build_Predicate_Functions): Update comments. Rewrite the checks on\n+\tstatic predicate application. Complain about the form of a non-static\n+\texpression only when the type is static.\n+\n+2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb: Add guard to tree traversal.\n+\n+2013-04-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Clean): Remove local variable Root_Environment,\n+\tuse Makeutl.Root_Environment instead.\n+\t* gnatcmd.adb: Remove local variable Root_Environment, use\n+\tMakeutl.Root_Environment instead.\n+\t* make.adb (Gnatmake): Remove local variable Root_Environment,\n+\tuse Makeutl.Root_Environment instead.\n+\t* prj-makr.adb: Remove local variable Root_Environment, use\n+\tMakeutl.Root_Environment instead.\n+\n 2013-04-24  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_attr.adb (Expand_Loop_Entry_Attribute): Clarify the"}, {"sha": "3cb1f95da8bc195a19c22b545c8dd923580f33df", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -2499,26 +2499,30 @@ package body Checks is\n               Make_Raise_Storage_Error (Sloc (N),\n                 Reason => SE_Infinite_Recursion));\n \n-         --  Here for normal case of predicate active.\n+         --  Here for normal case of predicate active\n \n          else\n             --  If the predicate is a static predicate and the operand is\n             --  static, the predicate must be evaluated statically. If the\n             --  evaluation fails this is a static constraint error. This check\n             --  is disabled in -gnatc mode, because the compiler is incapable\n-            --  of evaluating static expressions in that case.\n-\n-            if Is_OK_Static_Expression (N) then\n-               if Present (Static_Predicate (Typ)) then\n-                  if Operating_Mode < Generate_Code\n-                    or else Eval_Static_Predicate_Check (N, Typ)\n-                  then\n-                     return;\n-                  else\n-                     Error_Msg_NE\n-                       (\"static expression fails static predicate check on&\",\n-                        N, Typ);\n-                  end if;\n+            --  of evaluating static expressions in that case. Note that when\n+            --  inherited predicates are involved, a type may have both static\n+            --  and dynamic forms. Check the presence of a dynamic predicate\n+            --  aspect.\n+\n+            if Is_OK_Static_Expression (N)\n+              and then Present (Static_Predicate (Typ))\n+              and then not Has_Dynamic_Predicate_Aspect (Typ)\n+            then\n+               if Operating_Mode < Generate_Code\n+                 or else Eval_Static_Predicate_Check (N, Typ)\n+               then\n+                  return;\n+               else\n+                  Error_Msg_NE\n+                    (\"static expression fails static predicate check on&\",\n+                     N, Typ);\n                end if;\n             end if;\n "}, {"sha": "cbaaa61c7d02c91822202b72390c79f5e12bc934", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -98,8 +98,6 @@ package body Clean is\n \n    Project_Node_Tree : Project_Node_Tree_Ref;\n \n-   Root_Environment : Prj.Tree.Environment;\n-\n    Main_Project : Prj.Project_Id := Prj.No_Project;\n \n    All_Projects : Boolean := False;"}, {"sha": "93f9b819de70978a4952c123c5c490bbb6a8c270", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -785,8 +785,7 @@ package body Exp_Attr is\n \n          --  When the related loop name appears as the argument of attribute\n          --  Loop_Entry, the corresponding label construct is the generated\n-         --  block statement. This happens because the expander reuses the\n-         --  label.\n+         --  block statement. This is because the expander reuses the label.\n \n          if Nkind (Loop_Stmt) = N_Block_Statement then\n             Decls := Declarations (Loop_Stmt);\n@@ -797,8 +796,8 @@ package body Exp_Attr is\n          else\n             pragma Assert\n               (Nkind (Parent (Loop_Stmt)) = N_Handled_Sequence_Of_Statements\n-                 and then Nkind (Parent (Parent (Loop_Stmt))) =\n-                            N_Block_Statement);\n+                and then Nkind (Parent (Parent (Loop_Stmt))) =\n+                                                      N_Block_Statement);\n \n             Decls := Declarations (Parent (Parent (Loop_Stmt)));\n          end if;"}, {"sha": "12e78055f0e2c50c341558693bd2eabc3051f6c0", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -4581,12 +4581,12 @@ package body Exp_Ch4 is\n                            Expand_N_Full_Type_Declaration\n                              (Parent (Base_Type (PtrT)));\n \n-                        else\n-                           --  If the type of the allocator is an itype,\n-                           --  the master must exist in the context. This\n-                           --  is the case when the allocator initializes\n-                           --  an access component in an init-proc.\n+                        --  The only other possibility is an itype. For this\n+                        --  case, the master must exist in the context. This is\n+                        --  the case when the allocator initializes an access\n+                        --  component in an init-proc.\n \n+                        else\n                            pragma Assert (Is_Itype (PtrT));\n                            Build_Master_Renaming (PtrT, N);\n                         end if;"}, {"sha": "2128680494acec319097a45e0433ad35dd4b4b4c", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -387,18 +387,6 @@ procedure Gnat1drv is\n \n          Debug_Flag_HH := True;\n \n-         --  Disable Expressions_With_Actions nodes\n-\n-         --  The gnat2why backend does not deal with Expressions_With_Actions\n-         --  in all places (in particular assertions). It is difficult to\n-         --  determine in the frontend which cases are allowed, so we disable\n-         --  Expressions_With_Actions entirely. Even in the cases where\n-         --  gnat2why deals with Expressions_With_Actions, it is easier to\n-         --  deal with the original constructs (quantified, conditional and\n-         --  case expressions) instead of the rewritten ones.\n-\n-         Use_Expression_With_Actions := False;\n-\n          --  Enable assertions, since they give valuable extra information for\n          --  formal verification.\n "}, {"sha": "1c7133c6bae103eef9b66c267ee1440431913703", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -305,6 +305,7 @@ Implementation Defined Attributes\n * Unconstrained_Array::\n * Universal_Literal_String::\n * Unrestricted_Access::\n+* Update::\n * Valid_Scalars::\n * VADS_Size::\n * Value_Size::\n@@ -6710,6 +6711,7 @@ consideration, you should minimize the use of these attributes.\n * Unconstrained_Array::\n * Universal_Literal_String::\n * Unrestricted_Access::\n+* Update::\n * Valid_Scalars::\n * VADS_Size::\n * Value_Size::\n@@ -7713,6 +7715,78 @@ scope. For instance, a function cannot use @code{Unrestricted_Access}\n to create a unconstrained pointer and then return that value to the\n caller.\n \n+@node Update\n+@unnumberedsec Update\n+@findex Update\n+@noindent\n+The @code{Update} attribute creates a copy of an array or record value\n+with one or more modified components. The syntax is:\n+\n+@smallexample @c ada\n+PREFIX'Update (AGGREGATE);\n+@end smallexample\n+\n+@noindent\n+where @code{PREFIX} is the name of an array or record object, and\n+@code{AGGREGATE} is a named aggregate that does not contain an @code{others}\n+choice. The effect is to yield a copy of the array or record value which\n+is unchanged apart from the components mentioned in the aggregate, which\n+are changed to the indicated value. The original value of the array or\n+record value is not affected. For example:\n+\n+@smallexample @c ada\n+type Arr is Array (1 .. 5) of Integer;\n+...\n+Avar1 : Arr := (1,2,3,4,5);\n+Avar2 : Arr := Avar1'Update ((2 => 10, 3 .. 4 => 20));\n+@end smallexample\n+\n+@noindent\n+yields a value for @code{Avar2} of 1,10,20,20,5 with @code{Avar1}\n+begin unmodified. Similarly:\n+\n+@smallexample @c ada\n+type Rec is A, B, C : Integer;\n+...\n+Rvar1 : Rec := (A => 1, B => 2, C => 3);\n+Rvar2 : Rec := Rvar1'Update ((B => 20));\n+@end smallexample\n+\n+@noindent\n+yields a value for @code{Rvar2} of (A => 1, B => 20, C => 3),\n+with @code{Rvar1} being unmodifed.\n+Note that the value of the attribute reference is computed\n+completely before it is used. This means that if you write:\n+\n+@smallexample @c ada\n+Avar1 := Avar1'Update ((1 => 10, 2 => Function_Call));\n+@end smallexample\n+\n+@noindent\n+then the value of @code{Avar1} is not modified if @code{Function_Call}\n+raises an exception, unlike the effect of a series of direct assignments\n+to elements of @code{Avar1}. In general this requires that\n+two extra complete copies of the object are required, which should be\n+kept in mind when considering efficiency.\n+\n+The @code{Update} attribute cannot be applied to prefixes of a limited\n+type, and cannot reference discriminants in the case of a record type.\n+\n+In the record case, no component can be mentioned more than once. In\n+the array case, two overlapping ranges can appear in the aggregate,\n+in which case the modifications are processed left to right.\n+\n+Multi-dimensional arrays can be modified, as shown by this example:\n+\n+@smallexample @c ada\n+A : array (1 .. 10, 1 .. 10) of Integer;\n+..\n+A := A'Update (1 => (2 => 20), 3 => (4 => 30));\n+@end smallexample\n+\n+@noindent\n+which changes element (1,2) to 20 and (3,4) to 30.\n+\n @node Valid_Scalars\n @unnumberedsec Valid_Scalars\n @findex Valid_Scalars"}, {"sha": "be1567089af179616e2709aecc02dd0d344d4b81", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -59,7 +59,6 @@ with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n procedure GNATCmd is\n    Project_Node_Tree : Project_Node_Tree_Ref;\n-   Root_Environment  : Prj.Tree.Environment;\n    Project_File      : String_Access;\n    Project           : Prj.Project_Id;\n    Current_Verbosity : Prj.Verbosity := Prj.Default;"}, {"sha": "57033a94ecafa14f887623e35353eaf1b0655aa8", "filename": "gcc/ada/interfac.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Finterfac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Finterfac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac.ads?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -159,9 +159,11 @@ package Interfaces is\n \n    type IEEE_Float_32 is digits 6;\n    pragma Float_Representation (IEEE_Float, IEEE_Float_32);\n+   for IEEE_Float_32'Size use 32;\n \n    type IEEE_Float_64 is digits 15;\n    pragma Float_Representation (IEEE_Float, IEEE_Float_64);\n+   for IEEE_Float_64'Size use 64;\n \n    --  If there is an IEEE extended float available on the machine, we assume\n    --  that it is available as Long_Long_Float."}, {"sha": "d9973b52a0ba4fee08071e980e7e9ccbd56e6d74", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -5475,7 +5475,6 @@ package body Make is\n       --  is invoked with the -F switch to force checking of elaboration flags.\n \n       Project_Node_Tree : Project_Node_Tree_Ref;\n-      Root_Environment  : Prj.Tree.Environment;\n \n       Stop_Compile : Boolean;\n "}, {"sha": "7de436943f593bc0b5d1e86ee060b8f059b6e094", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -25,6 +25,7 @@\n \n with Csets;\n with Hostparm;\n+with Makeutl;  use Makeutl;\n with Opt;\n with Output;\n with Osint;    use Osint;\n@@ -64,8 +65,6 @@ package body Prj.Makr is\n    Tree : constant Project_Node_Tree_Ref := new Project_Node_Tree_Data;\n    --  The project tree where the project file is parsed\n \n-   Root_Environment : Prj.Tree.Environment;\n-\n    Args : Argument_List_Access;\n    --  The list of arguments for calls to the compiler to get the unit names\n    --  and kinds (spec or body) in the Ada sources."}, {"sha": "5ee023bbacfd9e847a7eb1a0f3550ad536782eae", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -376,12 +376,6 @@ package body Sem_Attr is\n       pragma No_Return (Error_Attr);\n       --  Like Error_Attr, but error is posted at the start of the prefix\n \n-      procedure S14_Attribute;\n-      --  Called for all attributes defined for formal verification to check\n-      --  that the S14_Extensions flag is set.\n-      --  Bad name ???\n-      --  No such thing as S14_Extensions flag ???\n-\n       procedure Standard_Attribute (Val : Int);\n       --  Used to process attributes whose prefix is package Standard which\n       --  yield values of type Universal_Integer. The attribute reference\n@@ -1973,18 +1967,6 @@ package body Sem_Attr is\n          Set_Etype (N, Standard_Boolean);\n       end Legal_Formal_Attribute;\n \n-      -------------------\n-      -- S14_Attribute --\n-      -------------------\n-\n-      procedure S14_Attribute is\n-      begin\n-         if not Formal_Extensions then\n-            Error_Attr\n-              (\"attribute % requires the use of debug switch -gnatd.V\", N);\n-         end if;\n-      end S14_Attribute;\n-\n       ------------------------\n       -- Standard_Attribute --\n       ------------------------\n@@ -5667,7 +5649,6 @@ package body Sem_Attr is\n       --  Start of processing for Update\n \n       begin\n-         S14_Attribute;\n          Check_E1;\n \n          if not Is_Object_Reference (P) then"}, {"sha": "709947b7cf31b939d5b0b7e3dcc234a2ceb46050", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -5767,7 +5767,7 @@ package body Sem_Ch13 is\n \n       Dynamic_Predicate_Present : Boolean := False;\n       --  Set True if a dynamic predicate is present, results in the entire\n-      --  predicate being considered dynamic even if it looks static\n+      --  predicate being considered dynamic even if it looks static.\n \n       Static_Predicate_Present : Node_Id := Empty;\n       --  Set to N_Pragma node for a static predicate if one is encountered\n@@ -5783,6 +5783,12 @@ package body Sem_Ch13 is\n          if Present (T) and then Present (Predicate_Function (T)) then\n             Set_Has_Predicates (Typ);\n \n+            --  Capture the nature of the inherited ancestor predicate\n+\n+            if Has_Dynamic_Predicate_Aspect (T) then\n+               Dynamic_Predicate_Present := True;\n+            end if;\n+\n             --  Build the call to the predicate function of T\n \n             Exp :=\n@@ -5866,6 +5872,8 @@ package body Sem_Ch13 is\n             if Nkind (Ritem) = N_Pragma\n               and then Pragma_Name (Ritem) = Name_Predicate\n             then\n+               --  Capture the nature of the predicate\n+\n                if Present (Corresponding_Aspect (Ritem)) then\n                   case Chars (Identifier (Corresponding_Aspect (Ritem))) is\n                      when Name_Dynamic_Predicate =>\n@@ -6199,25 +6207,28 @@ package body Sem_Ch13 is\n             end;\n          end if;\n \n-         --  Deal with static predicate case\n+         if Is_Scalar_Type (Typ) then\n \n-         --  ??? We don't currently deal with real types\n-         --  ??? Why requiring that Typ is static?\n+            --  Attempt to build a static predicate for a discrete or a real\n+            --  subtype. This action may fail because the actual expression may\n+            --  not be static.\n \n-         if Ekind (Typ) in Discrete_Kind\n-           and then Is_Static_Subtype (Typ)\n-           and then not Dynamic_Predicate_Present\n-         then\n-            --  Only build the predicate for subtypes\n-\n-            if Ekind_In (Typ, E_Enumeration_Subtype,\n+            if Ekind_In (Typ, E_Decimal_Fixed_Point_Subtype,\n+                              E_Enumeration_Subtype,\n+                              E_Floating_Point_Subtype,\n                               E_Modular_Integer_Subtype,\n+                              E_Ordinary_Fixed_Point_Subtype,\n                               E_Signed_Integer_Subtype)\n             then\n                Build_Static_Predicate (Typ, Expr, Object_Name);\n \n+               --  The predicate is categorized as static but its expression is\n+               --  dynamic. Note that the predicate may become non-static when\n+               --  inherited dynamic predicates are involved.\n+\n                if Present (Static_Predicate_Present)\n-                 and No (Static_Predicate (Typ))\n+                 and then No (Static_Predicate (Typ))\n+                 and then not Dynamic_Predicate_Present\n                then\n                   Error_Msg_F\n                     (\"expression does not have required form for \""}, {"sha": "b2ed158467835b7ac03b6257b9c3adb98b706b28", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -2298,11 +2298,15 @@ package body Sem_Ch5 is\n             Set_Etype  (DS, Entity (DS));\n          end if;\n \n-         --  Attempt to iterate through non-static predicate\n+         --  Attempt to iterate through non-static predicate. Note that a type\n+         --  with inherited predicates may have both static and dynamic forms.\n+         --  In this case it is not sufficent to check the static predicate\n+         --  function only, look for a dynamic predicate aspect as well.\n \n          if Is_Discrete_Type (Entity (DS))\n            and then Present (Predicate_Function (Entity (DS)))\n-           and then No (Static_Predicate (Entity (DS)))\n+           and then (No (Static_Predicate (Entity (DS)))\n+                      or else Has_Dynamic_Predicate_Aspect (Entity (DS)))\n          then\n             Bad_Predicated_Subtype_Use\n               (\"cannot use subtype& with non-static predicate for loop \" &"}, {"sha": "a3567042ca29e6cee81ff9aa23e300f37069eeba", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -1868,6 +1868,7 @@ package body Sem_Prag is\n \n             begin\n                if Is_Entity_Name (N)\n+                 and then Present (Entity (N))\n                  and then Is_Formal (Entity (N))\n                  and then Nkind (Parent (N)) /= N_Type_Conversion\n                then"}, {"sha": "78e49224e590432d6ec9333aafcf665ddb077175", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d5fbf52732b39f55714baad348c3269db8bb1b9/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=0d5fbf52732b39f55714baad348c3269db8bb1b9", "patch": "@@ -2028,7 +2028,7 @@ package body Sem_Type is\n       elsif (Nkind (N) = N_Function_Call\n               and then Nkind (Name (N)) = N_Expanded_Name\n               and then (Chars (Predef_Subp) /= Name_Op_Expon\n-                          or else Hides_Op (User_Subp, Predef_Subp))\n+                         or else Hides_Op (User_Subp, Predef_Subp))\n               and then Scope (User_Subp) = Entity (Prefix (Name (N))))\n         or else Hides_Op (User_Subp, Predef_Subp)\n       then\n@@ -2060,12 +2060,10 @@ package body Sem_Type is\n               and then Nam_In (Chars (Nam1), Name_Op_Multiply, Name_Op_Divide)\n               and then\n                 (Ada_Version = Ada_83\n-                  or else\n-                   (Ada_Version >= Ada_2012\n-                     and then\n-                       In_Same_Declaration_List\n-                         (First_Subtype (Typ),\n-                            Unit_Declaration_Node (User_Subp))))\n+                  or else (Ada_Version >= Ada_2012\n+                            and then In_Same_Declaration_List\n+                                       (First_Subtype (Typ),\n+                                          Unit_Declaration_Node (User_Subp))))\n             then\n                if It2.Nam = Predef_Subp then\n                   return It1;"}]}