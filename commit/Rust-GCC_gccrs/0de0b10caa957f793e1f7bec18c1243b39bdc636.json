{"sha": "0de0b10caa957f793e1f7bec18c1243b39bdc636", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRlMGIxMGNhYTk1N2Y3OTNlMWY3YmVjMThjMTI0M2IzOWJkYzYzNg==", "commit": {"author": {"name": "R\u00fcdiger Sonderfeld", "email": "ruediger@c-plusplus.de", "date": "2014-12-22T13:45:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-12-22T13:45:52Z"}, "message": "re PR libstdc++/54354 (TODO extended iomanip manipulators std::get_time and std::put_time (C++11, section 27.7.5))\n\n2014-12-22  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n\n\tPR libstdc++/54354\n\t* include/std/iomanip (_Get_time): New struct.\n\t(get_time): New manipulator.\n\t(operator<<): New overloaded function.\n\t* testsuite/27_io/manipulators/extended/get_time/char/1.cc: New.\n\t* testsuite/27_io/manipulators/extended/get_time/char/2.cc: New.\n\t* testsuite/27_io/manipulators/extended/get_time/wchar_t/1.cc: New.\n\t* testsuite/27_io/manipulators/extended/get_time/wchar_t/2.cc: New.\n\nFrom-SVN: r219013", "tree": {"sha": "7a6716329356443d10cc212d4a89e1549fde8dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a6716329356443d10cc212d4a89e1549fde8dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0de0b10caa957f793e1f7bec18c1243b39bdc636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de0b10caa957f793e1f7bec18c1243b39bdc636", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0de0b10caa957f793e1f7bec18c1243b39bdc636", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0de0b10caa957f793e1f7bec18c1243b39bdc636/comments", "author": {"login": "ruediger", "id": 1803, "node_id": "MDQ6VXNlcjE4MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruediger", "html_url": "https://github.com/ruediger", "followers_url": "https://api.github.com/users/ruediger/followers", "following_url": "https://api.github.com/users/ruediger/following{/other_user}", "gists_url": "https://api.github.com/users/ruediger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruediger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruediger/subscriptions", "organizations_url": "https://api.github.com/users/ruediger/orgs", "repos_url": "https://api.github.com/users/ruediger/repos", "events_url": "https://api.github.com/users/ruediger/events{/privacy}", "received_events_url": "https://api.github.com/users/ruediger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e869c0900c5307fbaf3b9625c171eff397346bb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e869c0900c5307fbaf3b9625c171eff397346bb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e869c0900c5307fbaf3b9625c171eff397346bb2"}], "stats": {"total": 262, "additions": 262, "deletions": 0}, "files": [{"sha": "6deaf4c6bc65822bdc428c7c2f8060c795005bd9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0de0b10caa957f793e1f7bec18c1243b39bdc636", "patch": "@@ -1,3 +1,14 @@\n+2014-12-22  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+\tPR libstdc++/54354\n+\t* include/std/iomanip (_Get_time): New struct.\n+\t(get_time): New manipulator.\n+\t(operator<<): New overloaded function.\n+\t* testsuite/27_io/manipulators/extended/get_time/char/1.cc: New.\n+\t* testsuite/27_io/manipulators/extended/get_time/char/2.cc: New.\n+\t* testsuite/27_io/manipulators/extended/get_time/wchar_t/1.cc: New.\n+\t* testsuite/27_io/manipulators/extended/get_time/wchar_t/2.cc: New.\n+\n 2014-12-22  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n \t    Jonathan Wakely  <jwakely@redhat.com>\n "}, {"sha": "080dae34777794dbdd16ee2f861c5c4d92a913cf", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=0de0b10caa957f793e1f7bec18c1243b39bdc636", "patch": "@@ -392,6 +392,60 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __os;\n     }\n \n+  template<typename _CharT>\n+    struct _Get_time\n+    {\n+      std::tm*\t    _M_tmb;\n+      const _CharT* _M_fmt;\n+    };\n+\n+  /**\n+   *  @brief  Extended manipulator for extracting time.\n+   *\n+   *  This manipulator uses time_get::get to extract time.\n+   *  [ext.manip]\n+   *\n+   *  @param __tmb  struct to extract the time data to.\n+   *  @param __fmt  format string.\n+   */\n+  template<typename _CharT>\n+    inline _Get_time<_CharT>\n+    get_time(std::tm* __tmb, const _CharT* __fmt)\n+    { return { __tmb, __fmt }; }\n+\n+  template<typename _CharT, typename _Traits>\n+    basic_istream<_CharT, _Traits>&\n+    operator>>(basic_istream<_CharT, _Traits>& __is, _Get_time<_CharT> __f)\n+    {\n+      typename basic_istream<_CharT, _Traits>::sentry __cerb(__is, false);\n+      if (__cerb)\n+        {\n+          ios_base::iostate __err = ios_base::goodbit;\n+          __try\n+            {\n+              typedef istreambuf_iterator<_CharT, _Traits>   _Iter;\n+              typedef time_get<_CharT, _Iter>                _TimeGet;\n+\n+              const _CharT* const __fmt_end = __f._M_fmt +\n+                _Traits::length(__f._M_fmt);\n+\n+              const _TimeGet& __mg = use_facet<_TimeGet>(__is.getloc());\n+              __mg.get(_Iter(__is.rdbuf()), _Iter(), __is,\n+                       __err, __f._M_tmb, __f._M_fmt, __fmt_end);\n+            }\n+          __catch(__cxxabiv1::__forced_unwind&)\n+            {\n+              __is._M_setstate(ios_base::badbit);\n+              __throw_exception_again;\n+            }\n+          __catch(...)\n+            { __is._M_setstate(ios_base::badbit); }\n+          if (__err)\n+            __is.setstate(__err);\n+        }\n+      return __is;\n+    }\n+\n #if __cplusplus > 201103L\n \n #define __cpp_lib_quoted_string_io 201304"}, {"sha": "07f0111d75cc8423f910304a5ec6d8c9c8372e8d", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/get_time/char/1.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fchar%2F1.cc?ref=0de0b10caa957f793e1f7bec18c1243b39bdc636", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  istringstream iss;\n+  iss.imbue(loc_c);\n+  iss.str(\"12:01:30  1971\");\n+  tm time1;\n+  iss >> get_time(&time1, \"%H:%M:%S %Y\");\n+  VERIFY( static_cast<bool>(iss) );\n+  VERIFY(time1.tm_hour == 12);\n+  VERIFY(time1.tm_min == 1);\n+  VERIFY(time1.tm_sec == 30);\n+  VERIFY(time1.tm_year == 71);\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "fcba0c753e324be54c7854a67cecbed8e9744c6e", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/get_time/char/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fchar%2F2.cc?ref=0de0b10caa957f793e1f7bec18c1243b39bdc636", "patch": "@@ -0,0 +1,49 @@\n+// { dg-require-namedlocale \"de_DE.utf8\" }\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  locale loc_de = locale(\"de_DE.utf8\");\n+  VERIFY( loc_de != loc_c );\n+  istringstream iss;\n+  iss.imbue(loc_de);\n+  iss.str(\"Di 1971\");\n+  tm time1;\n+  iss >> get_time(&time1, \"%a %Y\");\n+  VERIFY(time1.tm_wday == 2);\n+  VERIFY(time1.tm_year == 71);\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "ed0325add6eddabce8660a0259c9a2c71231109c", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/get_time/wchar_t/1.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fwchar_t%2F1.cc?ref=0de0b10caa957f793e1f7bec18c1243b39bdc636", "patch": "@@ -0,0 +1,49 @@\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  wistringstream iss;\n+  iss.imbue(loc_c);\n+  iss.str(L\"12:01:30  1971\");\n+  tm time1;\n+  iss >> get_time(&time1, L\"%H:%M:%S %Y\");\n+  VERIFY( static_cast<bool>(iss) );\n+  VERIFY(time1.tm_hour = 12);\n+  VERIFY(time1.tm_min = 1);\n+  VERIFY(time1.tm_sec == 30);\n+  VERIFY(time1.tm_year == 71);\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "4d28498c30f8558534f96ec61a95a930c90533a5", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/get_time/wchar_t/2.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0de0b10caa957f793e1f7bec18c1243b39bdc636/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fget_time%2Fwchar_t%2F2.cc?ref=0de0b10caa957f793e1f7bec18c1243b39bdc636", "patch": "@@ -0,0 +1,50 @@\n+// { dg-require-namedlocale \"de_DE.utf8\" }\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <iostream>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  locale loc_de = locale(\"de_DE.utf8\");\n+  VERIFY( loc_de != loc_c );\n+  wistringstream iss;\n+  iss.imbue(loc_de);\n+  iss.str(L\"Montag 1971\");\n+  tm time1;\n+  iss >> get_time(&time1, L\"%A %Y\");\n+  VERIFY(time1.tm_wday == 1);\n+  VERIFY(time1.tm_year == 71);\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}