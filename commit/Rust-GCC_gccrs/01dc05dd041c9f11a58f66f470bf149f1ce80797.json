{"sha": "01dc05dd041c9f11a58f66f470bf149f1ce80797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFkYzA1ZGQwNDFjOWYxMWE1OGY2NmY0NzBiZjE0OWYxY2U4MDc5Nw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-03-17T04:43:19Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-03-17T04:43:19Z"}, "message": "c4x.h (PARALLEL_INSN_FLAG): Add.\n\n\t* config/c4x/c4x.h (PARALLEL_INSN_FLAG): Add.\n\t(PARALLEL_PACK_FLAG): Delete.\n\t(TARGET_SWITCHES): Update.\n\t(TARGET_PARALLEL): Use PARALLEL_INSN_FLAG.\n\nFrom-SVN: r32601", "tree": {"sha": "47be24a5c6e1cbc2e9503e330c2d68ff98a1a0c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47be24a5c6e1cbc2e9503e330c2d68ff98a1a0c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01dc05dd041c9f11a58f66f470bf149f1ce80797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01dc05dd041c9f11a58f66f470bf149f1ce80797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01dc05dd041c9f11a58f66f470bf149f1ce80797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01dc05dd041c9f11a58f66f470bf149f1ce80797/comments", "author": null, "committer": null, "parents": [{"sha": "1bed2b5e10da9dac57b3f40699d8154870673514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bed2b5e10da9dac57b3f40699d8154870673514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bed2b5e10da9dac57b3f40699d8154870673514"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "3d0f9a0f04a3219bac1cb9ce2fed0f6de84d7ea7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dc05dd041c9f11a58f66f470bf149f1ce80797/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dc05dd041c9f11a58f66f470bf149f1ce80797/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01dc05dd041c9f11a58f66f470bf149f1ce80797", "patch": "@@ -1,3 +1,10 @@\n+2000-03-17  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.h (PARALLEL_INSN_FLAG): Add.\n+\t(PARALLEL_PACK_FLAG): Delete.\n+\t(TARGET_SWITCHES): Update.\n+\t(TARGET_PARALLEL): Use PARALLEL_INSN_FLAG.\n+\n Thu Mar 16 18:52:32 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* fold-const.c (fold): Fix a few cases when the returned result"}, {"sha": "136673ae692134547eeb7505d641f65c759dcf0a", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01dc05dd041c9f11a58f66f470bf149f1ce80797/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01dc05dd041c9f11a58f66f470bf149f1ce80797/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=01dc05dd041c9f11a58f66f470bf149f1ce80797", "patch": "@@ -110,7 +110,7 @@\n #define LOOP_UNSIGNED_FLAG  0x0004000 /* Allow unsigned loop counters.  */\n #define FORCE_FLAG          0x0008000 /* Force op0 and op1 to be same.  */\n #define PRESERVE_FLOAT_FLAG 0x0010000 /* Save all 40 bits for floats.  */\n-#define PARALLEL_PACK_FLAG  0x0020000 /* Allow parallel insn packing.  */\n+#define PARALLEL_INSN_FLAG  0x0020000 /* Allow parallel insns.  */\n #define PARALLEL_MPY_FLAG   0x0040000 /* Allow MPY||ADD, MPY||SUB insns.  */\n #define ALIASES_FLAG\t    0x0080000 /* Assume mem refs possibly aliased.  */\n \n@@ -207,13 +207,13 @@\n     \"Preserve all 40 bits of FP reg across call\" }, \\\n   { \"no-preserve-float\", -PRESERVE_FLOAT_FLAG, \\\n     \"Only preserve 32 bits of FP reg across call\" }, \\\n-  { \"parallel-insns\", PARALLEL_PACK_FLAG, \\\n+  { \"parallel-insns\", PARALLEL_INSN_FLAG, \\\n     \"Enable parallel instructions\" }, \\\n-  { \"no-parallel-mpy\", -PARALLEL_MPY_FLAG, \\\n+  { \"no-parallel-insns\", -PARALLEL_INSN_FLAG, \\\n     \"Disable parallel instructions\" }, \\\n   { \"parallel-mpy\", PARALLEL_MPY_FLAG, \\\n     \"Enable MPY||ADD and MPY||SUB instructions\" }, \\\n-  { \"no-parallel-insns\", -PARALLEL_PACK_FLAG, \\\n+  { \"no-parallel-mpy\", -PARALLEL_MPY_FLAG, \\\n     \"Disable MPY||ADD and MPY||SUB instructions\" }, \\\n   { \"aliases\", ALIASES_FLAG, \\\n     \"Assume that pointers may be aliased\" }, \\\n@@ -224,7 +224,7 @@\n /* Default target switches.  */\n \n /* Play safe, not the fastest code.  */\n-#define TARGET_DEFAULT\t\tALIASES_FLAG | PARALLEL_PACK_FLAG \\\n+#define TARGET_DEFAULT\t\tALIASES_FLAG | PARALLEL_INSN_FLAG \\\n \t\t\t\t| PARALLEL_MPY_FLAG | RPTB_FLAG\n \n /* Caveats:\n@@ -236,7 +236,6 @@\n extern int target_flags;\n \n #define TARGET_INLINE\t\t(! optimize_size) /* Inline MPYI.  */\n-#define TARGET_PARALLEL\t        1 /* Enable parallel insns in MD.  */\n #define TARGET_SMALL_REG_CLASS\t0\n \n #define TARGET_SMALL\t\t(target_flags & SMALL_MEMORY_FLAG)\n@@ -256,10 +255,9 @@ extern int target_flags;\n #define TARGET_LOOP_UNSIGNED\t(target_flags & LOOP_UNSIGNED_FLAG)\n #define TARGET_FORCE\t\t(target_flags & FORCE_FLAG)\n #define\tTARGET_PRESERVE_FLOAT\t(target_flags & PRESERVE_FLOAT_FLAG)\n-#define TARGET_PARALLEL_PACK\t(TARGET_RPTB \\\n-\t\t\t\t && (target_flags & PARALLEL_PACK_FLAG) \\\n+#define TARGET_PARALLEL\t\t((target_flags & PARALLEL_INSN_FLAG) \\\n \t\t\t\t && optimize >= 2)\n-#define TARGET_PARALLEL_MPY\t(TARGET_PARALLEL_PACK \\\n+#define TARGET_PARALLEL_MPY\t(TARGET_PARALLEL \\\n \t\t\t\t && (target_flags & PARALLEL_MPY_FLAG))\n #define\tTARGET_ALIASES\t\t(target_flags & ALIASES_FLAG)\n \n@@ -2424,10 +2422,14 @@ do { fprintf (asm_out_file, \"\\t.sdef\\t\");\t\\\n \t   \"\\t.sdef\\t.bf%s\\t.val\\t.%s\\t.scl\\t101%s\\t.line\\t%d%s\\t.endef\\n\", \\\n \t   SDB_DELIM, SDB_DELIM, SDB_DELIM, (LINE), SDB_DELIM)\n \n+/* Note we output relative line numbers for .ef which gas converts\n+   to absolute line numbers.  The TI compiler outputs absolute line numbers\n+   in the .sym directive which gas does not support.  */\n #define PUT_SDB_FUNCTION_END(LINE)\t\t\\\n   fprintf (asm_out_file,\t\t\t\\\n \t   \"\\t.sdef\\t.ef%s\\t.val\\t.%s\\t.scl\\t101%s\\t.line\\t%d%s\\t.endef\\n\", \\\n-\t   SDB_DELIM, SDB_DELIM, SDB_DELIM, (LINE), SDB_DELIM)\n+\t   SDB_DELIM, SDB_DELIM, SDB_DELIM, \\\n+           (LINE), SDB_DELIM)\n \n #define PUT_SDB_EPILOGUE_END(NAME)\t\t\t\\\n do { fprintf (asm_out_file, \"\\t.sdef\\t\");\t\t\\"}]}