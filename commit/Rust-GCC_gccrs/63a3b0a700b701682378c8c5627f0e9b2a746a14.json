{"sha": "63a3b0a700b701682378c8c5627f0e9b2a746a14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNhM2IwYTcwMGI3MDE2ODIzNzhjOGM1NjI3ZjBlOWIyYTc0NmExNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2003-02-10T11:46:40Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2003-02-10T11:46:40Z"}, "message": "oops - omiited from previous delta:\n\n    * Contributed support for the Cirrus EP9312 \"Maverick\"\n    floating point co-processor.  Written by Aldy Hernandez\n    <aldyh@redhat.com>.\n    (config/arm/arm.c): Add Cirrus support.\n    (config/arm/arm.h): Likewise.\n    (config/arm/aout.h): Likewise.\n    (config/arm/arm.md): Likewise.\n    (config/arm/arm-protos.h): Likewise.\n    (config.gcc): Likewise.\n    (doc/invoke.texi): Describe new -mcpu value and new\n    -mcirrus-fix-invalid-insns switch,\n    (cirrus.md): New file.\n\nFrom-SVN: r62626", "tree": {"sha": "3ece6836c501037de0d98c0aa66aa2d45a6c1de6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ece6836c501037de0d98c0aa66aa2d45a6c1de6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63a3b0a700b701682378c8c5627f0e9b2a746a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a3b0a700b701682378c8c5627f0e9b2a746a14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a3b0a700b701682378c8c5627f0e9b2a746a14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a3b0a700b701682378c8c5627f0e9b2a746a14/comments", "author": null, "committer": null, "parents": [{"sha": "9b6b54e2fe12171e8d7178c2fd8f6bd0d5493718", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b6b54e2fe12171e8d7178c2fd8f6bd0d5493718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b6b54e2fe12171e8d7178c2fd8f6bd0d5493718"}], "stats": {"total": 667, "additions": 667, "deletions": 0}, "files": [{"sha": "8d35b9da1a9681ca1c98da82049ccd536f903c97", "filename": "gcc/config/arm/cirrus.md", "status": "added", "additions": 667, "deletions": 0, "changes": 667, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a3b0a700b701682378c8c5627f0e9b2a746a14/gcc%2Fconfig%2Farm%2Fcirrus.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a3b0a700b701682378c8c5627f0e9b2a746a14/gcc%2Fconfig%2Farm%2Fcirrus.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcirrus.md?ref=63a3b0a700b701682378c8c5627f0e9b2a746a14", "patch": "@@ -0,0 +1,667 @@\n+;; Cirrus EP9312 \"Maverick\" ARM floating point co-processor description.\n+;; Copyright (C) 2003 Free Software Foundation, Inc.\n+;; Contributed by Red Hat.\n+;; Written by Aldy Hernandez (aldyh@redhat.com)\n+\n+;; This file is part of GNU CC.\n+\n+;; GNU CC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 2, or (at your option)\n+;; any later version.\n+\n+;; GNU CC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GNU CC; see the file COPYING.  If not, write to\n+;; the Free Software Foundation, 59 Temple Place - Suite 330,\n+;; Boston, MA 02111-1307, USA.\n+\n+\n+(define_attr \"cirrus_fpu\" \"fpa,fpe2,fpe3,yes\" (const (symbol_ref \"arm_fpu_attr\")))\n+\n+; Classification of each insn\n+; farith\tFloating point arithmetic (4 cycle)\n+; dmult\t\tDouble multiplies (7 cycle)\n+(define_attr \"cirrus_type\" \"normal,farith,dmult\" (const_string \"normal\"))\n+\n+; Cirrus types for invalid insn combinations\n+; no\t\tNot a cirrus insn\n+; yes\t\tCirrus insn\n+; double\tcfldrd, cfldr64, cfstrd, cfstr64\n+; compare\tcfcmps, cfcmpd, cfcmp32, cfcmp64\n+; move\t\tcfmvdlr, cfmvdhr, cfmvsr, cfmv64lr, cfmv64hr\n+(define_attr \"cirrus\" \"no,yes,double,compare,move\" (const_string \"no\"))\n+\f\n+(define_function_unit \"cirrus_fpa\" 1 0\n+  (and (eq_attr \"cirrus_fpu\" \"yes\")\n+       (eq_attr \"cirrus_type\" \"farith\")) 4 1)\n+\n+(define_function_unit \"cirrus_fpa\" 1 0\n+  (and (eq_attr \"cirrus_fpu\" \"yes\")\n+       (eq_attr \"cirrus_type\" \"dmult\")) 7 4)\n+\n+(define_function_unit \"cirrus_fpa\" 1 0\n+  (and (eq_attr \"cirrus_fpu\" \"yes\")\n+       (eq_attr \"cirrus_type\" \"normal\")) 1 1)\n+\f\n+(define_insn \"cirrus_adddi3\"\n+  [(set (match_operand:DI          0 \"cirrus_fp_register\" \"=v\")\n+\t(plus:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t (match_operand:DI 2 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfadd64%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_addsi3\"\n+  [(set (match_operand:SI          0 \"cirrus_fp_register\" \"=v\")\n+\t(plus:SI (match_operand:SI 1 \"cirrus_fp_register\" \"v\")\n+\t\t (match_operand:SI 2 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfadd32%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+;; define_insn replaced by define_expand and define_insn\n+(define_expand \"addsf3\"\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n+\t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:SF 2 \"fpu_add_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], SFmode))\n+    operands[2] = force_reg (SFmode, operands[2]);\n+\")\n+\n+(define_insn \"*cirrus_addsf3\"\n+  [(set (match_operand:SF          0 \"cirrus_fp_register\" \"=v\")\n+\t(plus:SF (match_operand:SF 1 \"cirrus_fp_register\" \"v\")\n+\t\t (match_operand:SF 2 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfadds%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+;; define_insn replaced by define_expand and define_insn\n+(define_expand \"adddf3\"\n+  [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n+\t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:DF 2 \"fpu_add_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], DFmode))\n+    operands[2] = force_reg (DFmode, operands[2]);\n+\")\n+\n+(define_insn \"*cirrus_adddf3\"\n+  [(set (match_operand:DF          0 \"cirrus_fp_register\" \"=v\")\n+\t(plus:DF (match_operand:DF 1 \"cirrus_fp_register\" \"v\")\n+\t\t (match_operand:DF 2 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfaddd%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"cirrus_subdi3\"\n+  [(set (match_operand:DI           0 \"cirrus_fp_register\" \"=v\")\n+\t(minus:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t  (match_operand:DI 2 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfsub64%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_subsi3_insn\"\n+  [(set (match_operand:SI           0 \"cirrus_fp_register\" \"=v\")\n+\t(minus:SI (match_operand:SI 1 \"cirrus_fp_register\" \"v\")\n+\t\t  (match_operand:SI 2 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfsub32%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"subsf3\"\n+  [(set (match_operand:SF           0 \"s_register_operand\" \"\")\n+\t(minus:SF (match_operand:SF 1 \"fpu_rhs_operand\" \"\")\n+\t\t  (match_operand:SF 2 \"fpu_rhs_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      if (!cirrus_fp_register (operands[1], SFmode))\n+        operands[1] = force_reg (SFmode, operands[1]);\n+      if (!cirrus_fp_register (operands[2], SFmode))\n+        operands[2] = force_reg (SFmode, operands[2]);\n+    }\n+\")\n+\n+(define_insn \"*cirrus_subsf3\"\n+  [(set (match_operand:SF           0 \"cirrus_fp_register\" \"=v\")\n+\t(minus:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")\n+\t\t  (match_operand:SF 2 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfsubs%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"subdf3\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n+\t(minus:DF (match_operand:DF 1 \"fpu_rhs_operand\"     \"\")\n+\t\t  (match_operand:DF 2 \"fpu_rhs_operand\"    \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+       if (!cirrus_fp_register (operands[1], DFmode))\n+         operands[1] = force_reg (DFmode, operands[1]);\n+       if (!cirrus_fp_register (operands[2], DFmode))\n+         operands[2] = force_reg (DFmode, operands[2]);\n+    }\n+\")\n+\n+(define_insn \"*cirrus_subdf3\"\n+  [(set (match_operand:DF           0 \"cirrus_fp_register\" \"=v\")\n+\t(minus:DF (match_operand:DF 1 \"cirrus_fp_register\" \"v\")\n+\t\t  (match_operand:DF 2 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfsubd%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_mulsi3\"\n+  [(set (match_operand:SI          0 \"cirrus_fp_register\" \"=v\")\n+\t(mult:SI (match_operand:SI 2 \"cirrus_fp_register\"  \"v\")\n+\t\t (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfmul32%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"muldi3\"\n+  [(set (match_operand:DI          0 \"cirrus_fp_register\" \"=v\")\n+\t(mult:DI (match_operand:DI 2 \"cirrus_fp_register\"  \"v\")\n+\t\t (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfmul64%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"dmult\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_mulsi3addsi\"\n+  [(set (match_operand:SI            0 \"cirrus_fp_register\" \"=v\")\n+\t(plus:SI\n+\t  (mult:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t   (match_operand:SI 2 \"cirrus_fp_register\"  \"v\"))\n+\t  (match_operand:SI          3 \"cirrus_fp_register\"  \"0\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfmac32%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+;; Cirrus SI multiply-subtract\n+(define_insn \"*cirrus_mulsi3subsi\"\n+  [(set (match_operand:SI            0 \"cirrus_fp_register\" \"=v\")\n+\t(minus:SI\n+\t  (match_operand:SI          1 \"cirrus_fp_register\"  \"0\")\n+\t  (mult:SI (match_operand:SI 2 \"cirrus_fp_register\"  \"v\")\n+\t\t   (match_operand:SI 3 \"cirrus_fp_register\"  \"v\"))))]\n+  \"0 && TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfmsc32%?\\\\t%V0, %V2, %V3\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"mulsf3\"\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n+\t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:SF 2 \"fpu_rhs_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], SFmode))\n+    operands[2] = force_reg (SFmode, operands[2]);\n+\")\n+\n+(define_insn \"*cirrus_mulsf3\"\n+  [(set (match_operand:SF          0 \"cirrus_fp_register\" \"=v\")\n+\t(mult:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")\n+\t\t (match_operand:SF 2 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfmuls%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"farith\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"muldf3\"\n+  [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n+\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], DFmode))\n+    operands[2] = force_reg (DFmode, operands[2]);\n+\")\n+\n+(define_insn \"*cirrus_muldf3\"\n+  [(set (match_operand:DF          0 \"cirrus_fp_register\" \"=v\")\n+\t(mult:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")\n+\t\t (match_operand:DF 2 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfmuld%?\\\\t%V0, %V1, %V2\"\n+  [(set_attr \"cirrus_type\" \"dmult\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"cirrus_ashl_const\"\n+  [(set (match_operand:SI            0 \"cirrus_fp_register\" \"=v\")\n+\t(ashift:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t   (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfsh32%?\\\\t%V0, %V1, #%s2\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"cirrus_ashiftrt_const\"\n+  [(set (match_operand:SI\t       0 \"cirrus_fp_register\" \"=v\")\n+\t(ashiftrt:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t     (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfsh32%?\\\\t%V0, %V1, #-%s2\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"cirrus_ashlsi3\"\n+  [(set (match_operand:SI            0 \"cirrus_fp_register\" \"=v\")\n+\t(ashift:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t   (match_operand:SI 2 \"register_operand\"    \"r\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfrshl32%?\\\\t%V1, %V0, %s2\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"ashldi3_cirrus\"\n+  [(set (match_operand:DI            0 \"cirrus_fp_register\" \"=v\")\n+\t(ashift:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t   (match_operand:SI 2 \"register_operand\"    \"r\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfrshl64%?\\\\t%V1, %V0, %s2\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"cirrus_ashldi_const\"\n+  [(set (match_operand:DI            0 \"cirrus_fp_register\" \"=v\")\n+\t(ashift:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t   (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfsh64%?\\\\t%V0, %V1, #%s2\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"cirrus_ashiftrtdi_const\"\n+  [(set (match_operand:DI            0 \"cirrus_fp_register\" \"=v\")\n+\t(ashiftrt:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")\n+\t\t     (match_operand:SI 2 \"cirrus_shift_const\"  \"\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfsh64%?\\\\t%V0, %V1, #-%s2\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_absdi2\"\n+  [(set (match_operand:DI         0 \"cirrus_fp_register\" \"=v\")\n+\t(abs:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfabs64%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+;; This doesn't really clobber ``cc''.  Fixme: aldyh.  \n+(define_insn \"*cirrus_negdi2\"\n+  [(set (match_operand:DI         0 \"cirrus_fp_register\" \"=v\")\n+\t(neg:DI (match_operand:DI 1 \"cirrus_fp_register\"  \"v\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfneg64%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_negsi2\"\n+  [(set (match_operand:SI         0 \"cirrus_fp_register\" \"=v\")\n+\t(neg:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfneg32%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"negsf2\"\n+  [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n+\t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\"\n+)\n+\n+(define_insn \"*cirrus_negsf2\"\n+  [(set (match_operand:SF         0 \"cirrus_fp_register\" \"=v\")\n+\t(neg:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfnegs%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"negdf2\"\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n+\t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\")\n+\n+(define_insn \"*cirrus_negdf2\"\n+  [(set (match_operand:DF         0 \"cirrus_fp_register\" \"=v\")\n+\t(neg:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfnegd%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"abssi2\"\n+  [(parallel\n+    [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n+\t  (abs:SI (match_operand:SI 1 \"s_register_operand\" \"\")))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"TARGET_ARM\"\n+  \"\")\n+\n+;; This doesn't really clobber the condition codes either.  \n+(define_insn \"*cirrus_abssi2\"\n+  [(set (match_operand:SI         0 \"cirrus_fp_register\" \"=v\")\n+        (abs:SI (match_operand:SI 1 \"cirrus_fp_register\"  \"v\")))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\"\n+  \"cfabs32%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"abssf2\"\n+  [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n+\t(abs:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\")\n+\n+(define_insn \"*cirrus_abssf2\"\n+  [(set (match_operand:SF         0 \"cirrus_fp_register\" \"=v\")\n+        (abs:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfabss%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"absdf2\"\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n+\t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\")\n+\n+(define_insn \"*cirrus_absdf2\"\n+  [(set (match_operand:DF         0 \"cirrus_fp_register\" \"=v\")\n+        (abs:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfabsd%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"floatsisf2\"\n+  [(set (match_operand:SF           0 \"s_register_operand\" \"\")\n+\t(float:SF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      emit_insn (gen_cirrus_floatsisf2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n+;; Convert Cirrus-SI to Cirrus-SF\n+(define_insn \"cirrus_floatsisf2\"\n+  [(set (match_operand:SF           0 \"cirrus_fp_register\" \"=v\")\n+ \t(float:SF (match_operand:SI 1 \"s_register_operand\"  \"r\")))\n+   (clobber (match_scratch:DF 2 \"=v\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfmv64lr%?\\\\t%Z2, %1\\;cfcvt32s%?\\\\t%V0, %Y2\"\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"cirrus\" \"move\")]\n+)\n+\n+(define_expand \"floatsidf2\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n+\t(float:DF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      emit_insn (gen_cirrus_floatsidf2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n+(define_insn \"cirrus_floatsidf2\"\n+  [(set (match_operand:DF           0 \"cirrus_fp_register\" \"=v\")\n+\t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))\n+   (clobber (match_scratch:DF 2 \"=v\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfmv64lr%?\\\\t%Z2, %1\\;cfcvt32d%?\\\\t%V0, %Y2\"\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"cirrus\" \"move\")]\n+)\n+\n+(define_insn \"floatdisf2\"\n+  [(set (match_operand:SF           0 \"cirrus_fp_register\" \"=v\")\n+\t(float:SF (match_operand:DI 1 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfcvt64s%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")])\n+\n+(define_insn \"floatdidf2\"\n+  [(set (match_operand:DF 0 \"cirrus_fp_register\" \"=v\")\n+\t(float:DF (match_operand:DI 1 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfcvt64d%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")])\n+\n+(define_expand \"fix_truncsfsi2\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n+\t(fix:SI (match_operand:SF 1 \"s_register_operand\"  \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      if (!cirrus_fp_register (operands[0], SImode))\n+        operands[0] = force_reg (SImode, operands[0]);\n+      if (!cirrus_fp_register (operands[1], SFmode))\n+        operands[1] = force_reg (SFmode, operands[0]);\n+      emit_insn (gen_cirrus_truncsfsi2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n+(define_insn \"cirrus_truncsfsi2\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n+\t(fix:SI (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))\n+   (clobber (match_scratch:DF     2                      \"=v\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cftruncs32%?\\\\t%Y2, %V1\\;cfmvr64l%?\\\\t%0, %Z2\"\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_expand \"fix_truncdfsi2\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n+\t(fix:SI (match_operand:DF 1 \"s_register_operand\"  \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      if (!cirrus_fp_register (operands[1], DFmode))\n+        operands[1] = force_reg (DFmode, operands[0]);\n+      emit_insn (gen_cirrus_truncdfsi2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n+(define_insn \"cirrus_truncdfsi2\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n+\t(fix:SI (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))\n+   (clobber (match_scratch:DF     2                      \"=v\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cftruncd32%?\\\\t%Y2, %V1\\;cfmvr64l%?\\\\t%0, %Z2\"\n+  [(set_attr \"length\" \"8\")]\n+)\n+\n+(define_expand \"truncdfsf2\"\n+  [(set (match_operand:SF  0 \"s_register_operand\" \"\")\n+\t(float_truncate:SF\n+ \t (match_operand:DF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\"\n+)\n+\n+(define_insn \"*cirrus_truncdfsf2\"\n+  [(set (match_operand:SF  0 \"cirrus_fp_register\" \"=v\")\n+        (float_truncate:SF\n+         (match_operand:DF 1 \"cirrus_fp_register\" \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfcvtds%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_extendsfdf2\"\n+  [(set (match_operand:DF                  0 \"cirrus_fp_register\" \"=v\")\n+        (float_extend:DF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"cfcvtsd%?\\\\t%V0, %V1\"\n+  [(set_attr \"cirrus\" \"yes\")]\n+)\n+\n+(define_insn \"*cirrus_arm_movdi\"\n+  [(set (match_operand:DI 0 \"nonimmediate_di_operand\" \"=r,r,o<>,v,r,v,m,v\")\n+\t(match_operand:DI 1 \"di_operand\"              \"rIK,mi,r,r,v,m,v,v\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS\"\n+  \"*\n+  {\n+  switch (which_alternative)\n+    {\n+    case 0:\n+    case 1:\n+    case 2:\n+      return (output_move_double (operands));\n+\n+    case 3: return \\\"cfmv64lr%?\\\\t%V0, %Q1\\;cfmv64hr%?\\\\t%V0, %R1\\\";\n+    case 4: return \\\"cfmvr64l%?\\\\t%Q0, %V1\\;cfmvr64h%?\\\\t%R0, %V1\\\";\n+\n+    case 5: return \\\"cfldr64%?\\\\t%V0, %1\\\";\n+    case 6: return \\\"cfstr64%?\\\\t%V1, %0\\\";\n+\n+    /* Shifting by 0 will just copy %1 into %0.  */\n+    case 7: return \\\"cfsh64%?\\\\t%V0, %V1, #0\\\";\n+\n+    default: abort ();\n+    }\n+  }\"\n+  [(set_attr \"length\" \"8,8,8,8,8,4,4,4\")\n+   (set_attr \"type\" \"*,load,store2,*,*,load,store2,*\")\n+   (set_attr \"pool_range\" \"*,1020,*,*,*,*,*,*\")\n+   (set_attr \"neg_pool_range\" \"*,1012,*,*,*,*,*,*\")\n+   (set_attr \"cirrus\" \"no,no,no,move,yes,double,double,yes\")]\n+)\n+\n+;; Cirrus SI values have been outlawed.  Look in arm.h for the comment\n+;; on HARD_REGNO_MODE_OK.\n+\n+(define_insn \"*cirrus_arm_movsi_insn\"\n+  [(set (match_operand:SI 0 \"general_operand\" \"=r,r,r,m,*v,r,*v,T,*v\")\n+        (match_operand:SI 1 \"general_operand\" \"rI,K,mi,r,r,*v,T,*v,*v\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS && 0\n+   && (register_operand (operands[0], SImode)\n+       || register_operand (operands[1], SImode))\"\n+  \"@\n+   mov%?\\\\t%0, %1\n+   mvn%?\\\\t%0, #%B1\n+   ldr%?\\\\t%0, %1\n+   str%?\\\\t%1, %0\n+   cfmv64lr%?\\\\t%Z0, %1\n+   cfmvr64l%?\\\\t%0, %Z1\n+   cfldr32%?\\\\t%V0, %1\n+   cfstr32%?\\\\t%V1, %0\n+   cfsh32%?\\\\t%V0, %V1, #0\"\n+  [(set_attr \"type\" \"*,*,load,store1,*,*,load,store1,*\")\n+   (set_attr \"pool_range\" \"*,*,4096,*,*,*,1024,*,*\")\n+   (set_attr \"neg_pool_range\" \"*,*,4084,*,*,*,1012,*,*\")\n+   (set_attr \"cirrus\" \"no,no,no,no,move,yes,yes,yes,yes\")]\n+)\n+\n+(define_insn \"*cirrus_movsf_hard_insn\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=v,v,v,r,m,r,r,m\")\n+        (match_operand:SF 1 \"general_operand\"       \"v,m,r,v,v,r,mE,r\"))]\n+  \"TARGET_ARM && TARGET_CIRRUS\n+   && (GET_CODE (operands[0]) != MEM\n+       || register_operand (operands[1], SFmode))\"\n+  \"@\n+   cfcpys%?\\\\t%V0, %V1\n+   cfldrs%?\\\\t%V0, %1\n+   cfmvsr%?\\\\t%V0, %1\n+   cfmvrs%?\\\\t%0, %V1\n+   cfstrs%?\\\\t%V1, %0\n+   mov%?\\\\t%0, %1\n+   ldr%?\\\\t%0, %1\\\\t%@ float\n+   str%?\\\\t%1, %0\\\\t%@ float\"\n+  [(set_attr \"length\" \"*,*,*,*,*,4,4,4\")\n+   (set_attr \"type\" \"*,load,*,*,store1,*,load,store1\")\n+   (set_attr \"pool_range\" \"*,*,*,*,*,*,4096,*\")\n+   (set_attr \"neg_pool_range\" \"*,*,*,*,*,*,4084,*\")\n+   (set_attr \"cirrus\" \"yes,yes,move,yes,yes,no,no,no\")]\n+)\n+\n+(define_insn \"*cirrus_movdf_hard_insn\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,Q,r,m,r,v,v,v,r,m\")\n+\t(match_operand:DF 1 \"general_operand\"       \"Q,r,r,r,mF,v,m,r,v,v\"))]\n+  \"TARGET_ARM\n+   && TARGET_CIRRUS\n+   && (GET_CODE (operands[0]) != MEM\n+       || register_operand (operands[1], DFmode))\"\n+  \"*\n+  {\n+  switch (which_alternative)\n+    {\n+    case 0: return \\\"ldm%?ia\\\\t%m1, %M0\\\\t%@ double\\\";\n+    case 1: return \\\"stm%?ia\\\\t%m0, %M1\\\\t%@ double\\\";\n+    case 2: case 3: case 4: return output_move_double (operands);\n+    case 5: return \\\"cfcpyd%?\\\\t%V0, %V1\\\";\n+    case 6: return \\\"cfldrd%?\\\\t%V0, %1\\\";\n+    case 7: return \\\"cfmvdlr\\\\t%V0, %Q1\\;cfmvdhr%?\\\\t%V0, %R1\\\";\n+    case 8: return \\\"cfmvrdl%?\\\\t%Q0, %V1\\;cfmvrdh%?\\\\t%R0, %V1\\\";\n+    case 9: return \\\"cfstrd%?\\\\t%V1, %0\\\";\n+    default: abort ();\n+    }\n+  }\"\n+  [(set_attr \"type\" \"load,store2,*,store2,load,*,load,*,*,store2\")\n+   (set_attr \"length\" \"4,4,8,8,8,4,4,8,8,4\")\n+   (set_attr \"pool_range\" \"*,*,*,*,252,*,*,*,*,*\")\n+   (set_attr \"neg_pool_range\" \"*,*,*,*,244,*,*,*,*,*\")\n+   (set_attr \"cirrus\" \"no,no,no,no,no,yes,double,move,yes,double\")]\n+)\n+"}]}