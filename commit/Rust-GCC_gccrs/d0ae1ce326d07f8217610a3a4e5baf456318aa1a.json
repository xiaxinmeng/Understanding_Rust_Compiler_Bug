{"sha": "d0ae1ce326d07f8217610a3a4e5baf456318aa1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhZTFjZTMyNmQwN2Y4MjE3NjEwYTNhNGU1YmFmNDU2MzE4YWExYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@tofu.to.cygnus.com", "date": "1999-05-07T16:20:37Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "1999-05-07T16:20:37Z"}, "message": "sparc.h (GO_IF_LEGITIMATE_ADDRESS): Prohibit REG+REG addressing for TFmode when there are no instructions which...\n\nFri May  7 19:10:15 1999  Vladimir Makarov  <vmakarov@tofu.to.cygnus.com>\n\t* sparc.h (GO_IF_LEGITIMATE_ADDRESS): Prohibit REG+REG addressing\n \tfor TFmode when there are no instructions which accept REG+REG\n \tinstructions.\n\nFrom-SVN: r26825", "tree": {"sha": "f86d6d17b5bbd435115ad4bd1659c890d2bc1450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f86d6d17b5bbd435115ad4bd1659c890d2bc1450"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0ae1ce326d07f8217610a3a4e5baf456318aa1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ae1ce326d07f8217610a3a4e5baf456318aa1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ae1ce326d07f8217610a3a4e5baf456318aa1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ae1ce326d07f8217610a3a4e5baf456318aa1a/comments", "author": null, "committer": null, "parents": [{"sha": "52ecdfda6590bc24e48db6bbe0cf210d39c26572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ecdfda6590bc24e48db6bbe0cf210d39c26572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ecdfda6590bc24e48db6bbe0cf210d39c26572"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "e2644207aecba27d3db626ada8cb78af30c971ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae1ce326d07f8217610a3a4e5baf456318aa1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae1ce326d07f8217610a3a4e5baf456318aa1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0ae1ce326d07f8217610a3a4e5baf456318aa1a", "patch": "@@ -1,3 +1,9 @@\n+Fri May  7 19:10:15 1999  Vladimir Makarov  <vmakarov@tofu.to.cygnus.com>\n+\n+\t* sparc.h (GO_IF_LEGITIMATE_ADDRESS): Prohibit REG+REG addressing\n+ \tfor TFmode when there are no instructions which accept REG+REG\n+ \tinstructions.\n+\n Fri May  7 12:38:54 1999  Jim Wilson  <wilson@cygnus.com>\n \n \t* mips/elf64.h (MAKE_DECL_ONE_ONLY, UNIQUE_SECTION_P): Define."}, {"sha": "b10d096355cb4e8ac2b07919850bc7dcacde75a0", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae1ce326d07f8217610a3a4e5baf456318aa1a/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae1ce326d07f8217610a3a4e5baf456318aa1a/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=d0ae1ce326d07f8217610a3a4e5baf456318aa1a", "patch": "@@ -2489,12 +2489,29 @@ extern struct rtx_def *sparc_builtin_saveregs ();\n       else if (RTX_OK_FOR_BASE_P (op0))\t\t\t\\\n \t{\t\t\t\t\t\t\\\n \t  if (RTX_OK_FOR_INDEX_P (op1)\t\t\t\\\n+ \t      /* We prohibit REG + REG for TFmode when\t\\\n+\t\t there are no instructions which accept\t\\\n+\t\t REG+REG instructions.  We do this\t\\\n+\t\t because REG+REG is not an offsetable\t\\\n+\t\t address.  If we get the situation\t\\\n+\t\t in reload where source and destination\t\\\n+\t\t of a movtf pattern are both MEMs with\t\\\n+\t\t REG+REG address, then only one of them\t\\\n+\t\t gets converted to an offsetable\t\\\n+\t\t address. */\t\t\t\t\\\n+ \t      && (MODE != TFmode\t\t\t\\\n+\t\t  || (TARGET_FPU && TARGET_ARCH64\t\\\n+\t\t      && TARGET_V9 && TARGET_HARD_QUAD))\\\n \t      || RTX_OK_FOR_OFFSET_P (op1))\t\t\\\n \t    goto ADDR;\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\\n       else if (RTX_OK_FOR_BASE_P (op1))\t\t\t\\\n \t{\t\t\t\t\t\t\\\n \t  if (RTX_OK_FOR_INDEX_P (op0)\t\t\t\\\n+ \t      /* See the previous comment. */\t\t\\\n+ \t      && (MODE != TFmode\t\t\t\\\n+\t\t  || (TARGET_FPU && TARGET_ARCH64\t\\\n+\t\t      && TARGET_V9 && TARGET_HARD_QUAD))\\\n \t      || RTX_OK_FOR_OFFSET_P (op0))\t\t\\\n \t    goto ADDR;\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\"}]}