{"sha": "56c3e620aa79524033973d09f44cf587c2038198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZjM2U2MjBhYTc5NTI0MDMzOTczZDA5ZjQ0Y2Y1ODdjMjAzODE5OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-09-26T09:17:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:17:36Z"}, "message": "[Ada] Inlining of renamed subprogram instances in package body\n\nThis fixes a small discrepancy in the handling of renamed subprograms\ndeclared in a package body, between those originally a regular\nsubprogram and those an instance of a generic subprogram, the latter\nbeing slightly hindered.\n\nThe difference comes from the setting of the Is_Public flag, which was\nmore conservative in the latter case because instantiations of generic\nsubprograms are done in compiler-generated local packages.\n\nIt is eliminated by allowing Has_Referencer to recurse into nested\npackages, but only if they are themselves not instances of generic\npackages.\n\nThe compiler must now fully inline Doit_I into Doit at -O2 in:\n\npackage P is\n\n  generic procedure Doit_G;\n\n  procedure Doit;\nend P;\n\npackage body P is\n\n  N : Natural := 0;\n\n  procedure Doit_G is\n  begin\n    N := 1;\n  end Doit_G;\n\n  procedure Doit_I is new Doit_G;\n\n  procedure Doit renames Doit_I;\n\nend P;\n\n2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch7.adb (Has_Referencer): Remove Top_Level parameter and\n\tadd In_Nested_Instance and\n\tHas_Outer_Referencer_Of_Non_Subprograms parameters.  Rename\n\tHas_Non_Subprograms_Referencer variable into\n\tHas_Referencer_Of_Non_Subprograms and initialize it with the new\n\tthird parameter.  Adjust recursive calls and to the renaming.\n\tReplace test on Top_Level with test on In_Nested_Instance to\n\tdecide whether to clear the Is_Public flag on entities.\n\t(Hide_Public_Entities): Adjust call to Has_Referencer.\n\nFrom-SVN: r264615", "tree": {"sha": "06ad6a863eb3475eb4ecf7f60ebe80b5ad62cdf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06ad6a863eb3475eb4ecf7f60ebe80b5ad62cdf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56c3e620aa79524033973d09f44cf587c2038198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c3e620aa79524033973d09f44cf587c2038198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56c3e620aa79524033973d09f44cf587c2038198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c3e620aa79524033973d09f44cf587c2038198/comments", "author": null, "committer": null, "parents": [{"sha": "d58008d23d073916471ca95587b5fcd090675243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58008d23d073916471ca95587b5fcd090675243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58008d23d073916471ca95587b5fcd090675243"}], "stats": {"total": 77, "additions": 56, "deletions": 21}, "files": [{"sha": "05530af8aa7b137ec6cc89a4702e8600f4c210bc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c3e620aa79524033973d09f44cf587c2038198/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c3e620aa79524033973d09f44cf587c2038198/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=56c3e620aa79524033973d09f44cf587c2038198", "patch": "@@ -1,3 +1,15 @@\n+2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch7.adb (Has_Referencer): Remove Top_Level parameter and\n+\tadd In_Nested_Instance and\n+\tHas_Outer_Referencer_Of_Non_Subprograms parameters.  Rename\n+\tHas_Non_Subprograms_Referencer variable into\n+\tHas_Referencer_Of_Non_Subprograms and initialize it with the new\n+\tthird parameter.  Adjust recursive calls and to the renaming.\n+\tReplace test on Top_Level with test on In_Nested_Instance to\n+\tdecide whether to clear the Is_Public flag on entities.\n+\t(Hide_Public_Entities): Adjust call to Has_Referencer.\n+\n 2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_disp.adb (Expand_Interface_Conversion): Use Present test."}, {"sha": "8aebb0f1b68c929b9786b105c488a0431e8c3f35", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 44, "deletions": 21, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c3e620aa79524033973d09f44cf587c2038198/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c3e620aa79524033973d09f44cf587c2038198/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=56c3e620aa79524033973d09f44cf587c2038198", "patch": "@@ -259,11 +259,12 @@ package body Sem_Ch7 is\n \n       procedure Hide_Public_Entities (Decls : List_Id) is\n          function Has_Referencer\n-           (Decls     : List_Id;\n-            Top_Level : Boolean := False) return Boolean;\n+           (Decls                                   : List_Id;\n+            In_Nested_Instance                      : Boolean;\n+            Has_Outer_Referencer_Of_Non_Subprograms : Boolean) return Boolean;\n          --  A \"referencer\" is a construct which may reference a previous\n          --  declaration. Examine all declarations in list Decls in reverse\n-         --  and determine whether once such referencer exists. All entities\n+         --  and determine whether one such referencer exists. All entities\n          --  in the range Last (Decls) .. Referencer are hidden from external\n          --  visibility.\n \n@@ -286,14 +287,16 @@ package body Sem_Ch7 is\n          --------------------\n \n          function Has_Referencer\n-           (Decls     : List_Id;\n-            Top_Level : Boolean := False) return Boolean\n+           (Decls                                   : List_Id;\n+            In_Nested_Instance                      : Boolean;\n+            Has_Outer_Referencer_Of_Non_Subprograms : Boolean) return Boolean\n          is\n             Decl    : Node_Id;\n             Decl_Id : Entity_Id;\n             Spec    : Node_Id;\n \n-            Has_Non_Subprograms_Referencer : Boolean := False;\n+            Has_Referencer_Of_Non_Subprograms : Boolean :=\n+                                       Has_Outer_Referencer_Of_Non_Subprograms;\n             --  Set if an inlined subprogram body was detected as a referencer.\n             --  In this case, we do not return True immediately but keep hiding\n             --  subprograms from external visibility.\n@@ -319,13 +322,23 @@ package body Sem_Ch7 is\n \n                elsif Nkind (Decl) = N_Package_Declaration then\n                   Spec := Specification (Decl);\n+                  Decl_Id := Defining_Entity (Spec);\n \n                   --  Inspect the declarations of a non-generic package to try\n                   --  and hide more entities from external visibility.\n \n-                  if not Is_Generic_Unit (Defining_Entity (Spec)) then\n-                     if Has_Referencer (Private_Declarations (Spec))\n-                       or else Has_Referencer (Visible_Declarations (Spec))\n+                  if not Is_Generic_Unit (Decl_Id) then\n+                     if Has_Referencer (Private_Declarations (Spec),\n+                                        In_Nested_Instance\n+                                          or else\n+                                        Is_Generic_Instance (Decl_Id),\n+                                        Has_Referencer_Of_Non_Subprograms)\n+                       or else\n+                        Has_Referencer (Visible_Declarations (Spec),\n+                                        In_Nested_Instance\n+                                          or else\n+                                        Is_Generic_Instance (Decl_Id),\n+                                        Has_Referencer_Of_Non_Subprograms)\n                      then\n                         return True;\n                      end if;\n@@ -354,7 +367,12 @@ package body Sem_Ch7 is\n                   --  Inspect the declarations of a non-generic package body to\n                   --  try and hide more entities from external visibility.\n \n-                  elsif Has_Referencer (Declarations (Decl)) then\n+                  elsif Has_Referencer (Declarations (Decl),\n+                                        In_Nested_Instance\n+                                          or else\n+                                        Is_Generic_Instance (Decl_Id),\n+                                        Has_Referencer_Of_Non_Subprograms)\n+                  then\n                      return True;\n                   end if;\n \n@@ -382,7 +400,7 @@ package body Sem_Ch7 is\n                      if Is_Inlined (Decl_Id)\n                        or else Has_Pragma_Inline (Decl_Id)\n                      then\n-                        Has_Non_Subprograms_Referencer := True;\n+                        Has_Referencer_Of_Non_Subprograms := True;\n \n                         --  Inspect the statements of the subprogram body\n                         --  to determine whether the body references other\n@@ -401,7 +419,7 @@ package body Sem_Ch7 is\n                      if Is_Inlined (Decl_Id)\n                        or else Has_Pragma_Inline (Decl_Id)\n                      then\n-                        Has_Non_Subprograms_Referencer := True;\n+                        Has_Referencer_Of_Non_Subprograms := True;\n \n                         --  Inspect the statements of the subprogram body\n                         --  to determine whether the body references other\n@@ -425,15 +443,20 @@ package body Sem_Ch7 is\n                   begin\n                      --  Inspect the actions to find references to subprograms\n \n-                     Discard := Has_Referencer (Actions (Decl));\n+                     Discard :=\n+                       Has_Referencer (Actions (Decl),\n+                                       In_Nested_Instance,\n+                                       Has_Referencer_Of_Non_Subprograms);\n                   end;\n \n                --  Exceptions, objects and renamings do not need to be public\n                --  if they are not followed by a construct which can reference\n-               --  and export them. The Is_Public flag is reset on top level\n-               --  entities only as anything nested is local to its context.\n-               --  Likewise for subprograms, but we work harder for them.\n-\n+               --  and export them. Likewise for subprograms but we work harder\n+               --  for them to see whether they are referenced on an individual\n+               --  basis by looking into the table of referenced subprograms.\n+               --  But we cannot say anything for entities declared in nested\n+               --  instances because instantiations are not done yet so the\n+               --  bodies are not visible and could contain references to them.\n                elsif Nkind_In (Decl, N_Exception_Declaration,\n                                      N_Object_Declaration,\n                                      N_Object_Renaming_Declaration,\n@@ -442,12 +465,12 @@ package body Sem_Ch7 is\n                then\n                   Decl_Id := Defining_Entity (Decl);\n \n-                  if Top_Level\n+                  if not In_Nested_Instance\n                     and then not Is_Imported (Decl_Id)\n                     and then not Is_Exported (Decl_Id)\n                     and then No (Interface_Name (Decl_Id))\n                     and then\n-                      (not Has_Non_Subprograms_Referencer\n+                      (not Has_Referencer_Of_Non_Subprograms\n                         or else (Nkind (Decl) = N_Subprogram_Declaration\n                                   and then not Subprogram_Table.Get (Decl_Id)))\n                   then\n@@ -475,7 +498,7 @@ package body Sem_Ch7 is\n                Prev (Decl);\n             end loop;\n \n-            return Has_Non_Subprograms_Referencer;\n+            return Has_Referencer_Of_Non_Subprograms;\n          end Has_Referencer;\n \n          -------------------------\n@@ -609,7 +632,7 @@ package body Sem_Ch7 is\n \n          Traversed_Table.Reset;\n          Subprogram_Table.Reset;\n-         Discard := Has_Referencer (Decls, Top_Level => True);\n+         Discard := Has_Referencer (Decls, False, False);\n       end Hide_Public_Entities;\n \n       ----------------------------------"}]}