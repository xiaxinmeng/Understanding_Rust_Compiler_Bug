{"sha": "b8794099b71a90b1a2d336b30fac802aba82345b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg3OTQwOTliNzFhOTBiMWEyZDMzNmIzMGZhYzgwMmFiYTgyMzQ1Yg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-06-21T19:21:48Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-06-21T19:21:48Z"}, "message": "sh.c (machine_dependent_reorg): When fixing up fp pcloads...\n\n\t* sh.c (machine_dependent_reorg): When fixing up fp pcloads,\n\tremove the clobber of r0 and change the REG_UNUSED note to\n\tREG_INC.\n\nFrom-SVN: r27676", "tree": {"sha": "01b4ae6690b1b9fe4b24402590de60c3eb4d4371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01b4ae6690b1b9fe4b24402590de60c3eb4d4371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8794099b71a90b1a2d336b30fac802aba82345b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8794099b71a90b1a2d336b30fac802aba82345b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8794099b71a90b1a2d336b30fac802aba82345b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8794099b71a90b1a2d336b30fac802aba82345b/comments", "author": null, "committer": null, "parents": [{"sha": "8fc4af0f11b77630079ff1e33a527d933aca1ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fc4af0f11b77630079ff1e33a527d933aca1ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fc4af0f11b77630079ff1e33a527d933aca1ee0"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "f176d7a50dcb7fe6fad1cf220348526a0960f16e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8794099b71a90b1a2d336b30fac802aba82345b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8794099b71a90b1a2d336b30fac802aba82345b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8794099b71a90b1a2d336b30fac802aba82345b", "patch": "@@ -1,3 +1,9 @@\n+Tue Jun 22 03:17:53 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.c (machine_dependent_reorg): When fixing up fp pcloads,\n+\tremove the clobber of r0 and change the REG_UNUSED note to\n+\tREG_INC.\n+\n 1999-06-21  Jakub Jelinek  <jj@ultra.linux.cz>\n \n \t* real.c (ereal_from_double): Fix for 64-bit big endian hosts."}, {"sha": "7ebaa4dabfc1f5cfe658732a8c820b929167346f", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8794099b71a90b1a2d336b30fac802aba82345b/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8794099b71a90b1a2d336b30fac802aba82345b/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=b8794099b71a90b1a2d336b30fac802aba82345b", "patch": "@@ -3098,14 +3098,34 @@ machine_dependent_reorg (first)\n \t\t\t   && REGNO (dst) <= LAST_XD_REG)\n \t\t\t  || REGNO (dst) == FPUL_REG))\n \t\t    {\n+\t\t      /* This must be an insn that clobbers r0.  */\n+\t\t      rtx clobber = XVECEXP (PATTERN (scan), 0,\n+\t\t\t\t\t     XVECLEN (PATTERN (scan), 0) - 1);\n+\n+\t\t      if (GET_CODE (clobber) != CLOBBER\n+\t\t\t  || ! rtx_equal_p (XEXP (clobber, 0), r0_rtx))\n+\t\t\tabort ();\n+\n \t\t      if (last_float\n \t\t\t  && reg_set_between_p (r0_rtx, last_float_move, scan))\n \t\t\tlast_float = 0;\n \t\t      lab = add_constant (src, mode, last_float);\n \t\t      if (lab)\n \t\t\temit_insn_before (gen_mova (lab), scan);\n \t\t      else\n-\t\t\t*last_float_addr = r0_inc_rtx;\n+\t\t\t{\n+\t\t\t  /* There will be a REG_UNUSED note for r0 on\n+\t\t\t     LAST_FLOAT_MOVE; we have to change it to REG_INC,\n+\t\t\t     lest reorg:mark_target_live_regs will not\n+\t\t\t     consider r0 to be used, and we end up with delay\n+\t\t\t     slot insn in front of SCAN that clobber r0.  */\n+\t\t\t  rtx note\n+\t\t\t    = find_regno_note (last_float_move, REG_UNUSED, 0);\n+\n+\t\t\t  PUT_MODE (note, REG_INC);\n+\n+\t\t\t  *last_float_addr = r0_inc_rtx;\n+\t\t\t}\n \t\t      last_float_move = scan;\n \t\t      last_float = src;\n \t\t      newsrc = gen_rtx (MEM, mode,\n@@ -3114,6 +3134,9 @@ machine_dependent_reorg (first)\n \t\t\t\t\t ? r0_inc_rtx\n \t\t\t\t\t : r0_rtx));\n \t\t      last_float_addr = &XEXP (newsrc, 0);\n+\n+\t\t      /* Remove the clobber of r0.  */\n+\t\t      XEXP (clobber, 0) = gen_rtx_SCRATCH (Pmode);\n \t\t    }\n \t\t  else\n \t\t    {"}]}