{"sha": "10f144412d05e3f1effffb6ddeb79c64f2f84705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBmMTQ0NDEyZDA1ZTNmMWVmZmZmYjZkZGViNzljNjRmMmY4NDcwNQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-01-13T02:10:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-01-13T02:10:52Z"}, "message": "(complemented_arith_operand): New function.\n\n(print_operand): Handle `e' for CONST_INT.\n\nFrom-SVN: r13486", "tree": {"sha": "129755f37aa2f2e6cf6fdb4a9798fb91f901ce74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/129755f37aa2f2e6cf6fdb4a9798fb91f901ce74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10f144412d05e3f1effffb6ddeb79c64f2f84705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f144412d05e3f1effffb6ddeb79c64f2f84705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10f144412d05e3f1effffb6ddeb79c64f2f84705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10f144412d05e3f1effffb6ddeb79c64f2f84705/comments", "author": null, "committer": null, "parents": [{"sha": "77a8368ea3251a9f331100de6c077f0c783c473d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a8368ea3251a9f331100de6c077f0c783c473d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a8368ea3251a9f331100de6c077f0c783c473d"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "ffc254aeda4b9494cd35409fa3eb68561a398b19", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10f144412d05e3f1effffb6ddeb79c64f2f84705/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10f144412d05e3f1effffb6ddeb79c64f2f84705/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=10f144412d05e3f1effffb6ddeb79c64f2f84705", "patch": "@@ -385,6 +385,21 @@ uns_arith_operand (op, mode)\n   return register_operand (op, mode);\n }\n \n+/* Return truth value of whether OP can be used as an operands\n+   where a register or complemented 16 bit unsigned integer is needed.  */\n+\n+int\n+complemented_arith_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  if (GET_CODE (op) == CONST_INT\n+      && (~ (unsigned HOST_WIDE_INT) INTVAL (op) < 0x10000))\n+    return TRUE;\n+\n+  return register_operand (op, mode);\n+}\n+\n /* Return truth value of whether OP can be used as an operands\n    where a 16 bit integer is needed  */\n \n@@ -4130,6 +4145,9 @@ print_operand (file, op, letter)\n   else if ((letter == 'd') && (GET_CODE(op) == CONST_INT))\n     fprintf (file, \"%d\", (INTVAL(op)));\n \n+  else if ((letter == 'e') && (GET_CODE(op) == CONST_INT))\n+    fprintf (file, \"%d\", ~(INTVAL(op)));\n+\n   else if (letter == 'z'\n \t   && (GET_CODE (op) == CONST_INT)\n \t   && INTVAL (op) == 0)"}]}