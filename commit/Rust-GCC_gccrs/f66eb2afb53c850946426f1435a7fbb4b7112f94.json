{"sha": "f66eb2afb53c850946426f1435a7fbb4b7112f94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2ZWIyYWZiNTNjODUwOTQ2NDI2ZjE0MzVhN2ZiYjRiNzExMmY5NA==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-06-08T03:22:15Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-06-08T03:22:15Z"}, "message": "i386.md (movqi_1): Fix case where source is memory and destination EDI.\n\n2005-06-07  Dale Johannesen  <dalej@apple.com>\n\n        * config/i386/i386.md (movqi_1):  Fix case where source\n        is memory and destination EDI.\n\nFrom-SVN: r100740", "tree": {"sha": "28829ef66f42e0de1eb1780da17bf856f933d872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28829ef66f42e0de1eb1780da17bf856f933d872"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f66eb2afb53c850946426f1435a7fbb4b7112f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66eb2afb53c850946426f1435a7fbb4b7112f94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f66eb2afb53c850946426f1435a7fbb4b7112f94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66eb2afb53c850946426f1435a7fbb4b7112f94/comments", "author": null, "committer": null, "parents": [{"sha": "e79df5ce293e04612c25f970882a2096b6df19a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e79df5ce293e04612c25f970882a2096b6df19a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e79df5ce293e04612c25f970882a2096b6df19a4"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "1c446b209b4375e838ccbf64f9c3cf4866810162", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66eb2afb53c850946426f1435a7fbb4b7112f94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66eb2afb53c850946426f1435a7fbb4b7112f94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f66eb2afb53c850946426f1435a7fbb4b7112f94", "patch": "@@ -1,3 +1,8 @@\n+2005-06-07  Dale Johannesen  <dalej@apple.com>\n+\n+\t* config/i386/i386.md (movqi_1):  Fix case where source\n+\tis memory and destination EDI.\n+\n 2005-06-08  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/c4x/c4x.h (PREDICATE_CODES): Remove mem_operand."}, {"sha": "000a18e80929edf1afdb38e0f0054a0daeccf97a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66eb2afb53c850946426f1435a7fbb4b7112f94/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66eb2afb53c850946426f1435a7fbb4b7112f94/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f66eb2afb53c850946426f1435a7fbb4b7112f94", "patch": "@@ -1455,7 +1455,7 @@\n ;; partial register stall can be caused there.  Then we use movzx.\n (define_insn \"*movqi_1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=q,q ,q ,r,r ,?r,m\")\n-\t(match_operand:QI 1 \"general_operand\"      \" q,qn,qm,q,rn,qm,qn\"))]\n+\t(match_operand:QI 1 \"general_operand\"      \" q,qn,qm,q,rn,m ,qn\"))]\n   \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n {\n   switch (get_attr_type (insn))\n@@ -1471,15 +1471,17 @@\n     }\n }\n   [(set (attr \"type\")\n-     (cond [(ne (symbol_ref \"optimize_size\") (const_int 0))\n+     (cond [(eq_attr \"alternative\" \"5\")\n+\t      (const_string \"imovx\")\n+\t    (ne (symbol_ref \"optimize_size\") (const_int 0))\n \t      (const_string \"imov\")\n \t    (and (eq_attr \"alternative\" \"3\")\n \t\t (ior (eq (symbol_ref \"TARGET_PARTIAL_REG_STALL\")\n \t\t\t  (const_int 0))\n \t\t      (eq (symbol_ref \"TARGET_QIMODE_MATH\")\n \t\t\t  (const_int 0))))\n \t      (const_string \"imov\")\n-\t    (eq_attr \"alternative\" \"3,5\")\n+\t    (eq_attr \"alternative\" \"3\")\n \t      (const_string \"imovx\")\n \t    (and (ne (symbol_ref \"TARGET_MOVX\")\n \t\t     (const_int 0))"}]}