{"sha": "937522b52630d9f3a35e827d711a01daa53f7873", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3NTIyYjUyNjMwZDlmM2EzNWU4MjdkNzExYTAxZGFhNTNmNzg3Mw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-17T04:21:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-17T04:21:19Z"}, "message": "entered into RCS\n\nFrom-SVN: r1604", "tree": {"sha": "fa5b5c71041f82b763cea6748ad54dbe6370a603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa5b5c71041f82b763cea6748ad54dbe6370a603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/937522b52630d9f3a35e827d711a01daa53f7873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937522b52630d9f3a35e827d711a01daa53f7873", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937522b52630d9f3a35e827d711a01daa53f7873", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937522b52630d9f3a35e827d711a01daa53f7873/comments", "author": null, "committer": null, "parents": [{"sha": "036461899dfd65e2ba0e1c23c1620379b43f26e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/036461899dfd65e2ba0e1c23c1620379b43f26e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/036461899dfd65e2ba0e1c23c1620379b43f26e3"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "077fe866750f10da861c3f20333c933bfe1530ec", "filename": "gcc/toplev.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937522b52630d9f3a35e827d711a01daa53f7873/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937522b52630d9f3a35e827d711a01daa53f7873/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=937522b52630d9f3a35e827d711a01daa53f7873", "patch": "@@ -2039,6 +2039,17 @@ rest_of_compilation (decl)\n \t       && ! flag_keep_inline_functions)\n \t      || DECL_EXTERNAL (decl)))\n \t{\n+#ifdef DWARF_DEBUGGING_INFO\n+\t  /* Generate the DWARF info for the \"abstract\" instance\n+\t     of a function which we may later generate inlined and/or\n+\t     out-of-line instances of.  */\n+\t  if (write_symbols == DWARF_DEBUG)\n+\t    {\n+\t      set_decl_abstract_flags (decl, 1);\n+\t      TIMEVAR (symout_time, dwarfout_file_scope_decl (decl, 0));\n+\t      set_decl_abstract_flags (decl, 0);\n+\t    }\n+#endif\n \t  TIMEVAR (integration_time, save_for_inline_nocopy (decl));\n \t  goto exit_rest_of_compilation;\n \t}\n@@ -2047,6 +2058,18 @@ rest_of_compilation (decl)\n \t so that its compilation will not affect what others get.  */\n       if (DECL_INLINE (decl))\n \t{\n+#ifdef DWARF_DEBUGGING_INFO\n+\t  /* Generate the DWARF info for the \"abstract\" instance of\n+\t     a function which we will generate an out-of-line instance\n+\t     of almost immediately (and which we may also later generate\n+\t     various inlined instances of).  */\n+\t  if (write_symbols == DWARF_DEBUG)\n+\t    {\n+\t      set_decl_abstract_flags (decl, 1);\n+\t      TIMEVAR (symout_time, dwarfout_file_scope_decl (decl, 0));\n+\t      set_decl_abstract_flags (decl, 0);\n+\t    }\n+#endif\n \t  saved_block_tree = DECL_INITIAL (decl);\n \t  saved_arguments = DECL_ARGUMENTS (decl);\n \t  TIMEVAR (integration_time, save_for_inline_copying (decl));"}]}