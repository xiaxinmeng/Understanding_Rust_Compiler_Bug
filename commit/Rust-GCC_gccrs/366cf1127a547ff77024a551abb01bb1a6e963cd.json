{"sha": "366cf1127a547ff77024a551abb01bb1a6e963cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2Y2YxMTI3YTU0N2ZmNzcwMjRhNTUxYWJiMDFiYjFhNmU5NjNjZA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-10T19:18:13Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-17T14:13:55Z"}, "message": "openacc: Strided array sections and components of derived-type arrays\n\nThis patch disallows selecting components of array sections in update\ndirectives for OpenACC, as specified in OpenACC 3.0, \"2.14.4. Update\nDirective\":\n\n  In Fortran, members of variables of derived type may appear, including\n  a subarray of a member. Members of subarrays of derived type may\n  not appear.\n\nThe diagnostic for attempting to use the same construct on other\ndirectives has also been improved.\n\ngcc/fortran/\n\t* openmp.c (resolve_omp_clauses): Disallow selecting components\n\tof arrays of derived type.\n\ngcc/testsuite/\n\t* gfortran.dg/goacc/array-with-dt-2.f90: Remove expected errors.\n\t* gfortran.dg/goacc/array-with-dt-6.f90: New test.\n\t* gfortran.dg/goacc/mapping-tests-2.f90: Update expected error.\n\t* gfortran.dg/goacc/ref_inquiry.f90: Update expected errors.\n\t* gfortran.dg/gomp/ref_inquiry.f90: Likewise.\n\nlibgomp/\n\t* testsuite/libgomp.oacc-fortran/array-stride-dt-1.f90: Remove\n\texpected errors.", "tree": {"sha": "9d80ccbf6dbb87d6a9b843f9401c5ac593b96216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d80ccbf6dbb87d6a9b843f9401c5ac593b96216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/366cf1127a547ff77024a551abb01bb1a6e963cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366cf1127a547ff77024a551abb01bb1a6e963cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366cf1127a547ff77024a551abb01bb1a6e963cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366cf1127a547ff77024a551abb01bb1a6e963cd/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d28f3da11d8c0aed9b746689d723022a9b5ec04c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28f3da11d8c0aed9b746689d723022a9b5ec04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28f3da11d8c0aed9b746689d723022a9b5ec04c"}], "stats": {"total": 100, "additions": 54, "deletions": 46}, "files": [{"sha": "bf0179007be69a88e45bea0d85122600c5cea170", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 38, "deletions": 26, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -5174,71 +5174,83 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t\t\t\t \"are allowed on ORDERED directive at %L\",\n \t\t\t\t &n->where);\n \t\t  }\n-\t\tgfc_ref *array_ref = NULL;\n+\t\tgfc_ref *lastref = NULL, *lastslice = NULL;\n \t\tbool resolved = false;\n \t\tif (n->expr)\n \t\t  {\n-\t\t    array_ref = n->expr->ref;\n+\t\t    lastref = n->expr->ref;\n \t\t    resolved = gfc_resolve_expr (n->expr);\n \n \t\t    /* Look through component refs to find last array\n \t\t       reference.  */\n \t\t    if (resolved)\n \t\t      {\n+\t\t\tfor (gfc_ref *ref = n->expr->ref; ref; ref = ref->next)\n+\t\t\t  if (ref->type == REF_COMPONENT\n+\t\t\t      || ref->type == REF_SUBSTRING\n+\t\t\t      || ref->type == REF_INQUIRY)\n+\t\t\t    lastref = ref;\n+\t\t\t  else if (ref->type == REF_ARRAY)\n+\t\t\t    {\n+\t\t\t      for (int i = 0; i < ref->u.ar.dimen; i++)\n+\t\t\t\tif (ref->u.ar.dimen_type[i] == DIMEN_RANGE)\n+\t\t\t\t  lastslice = ref;\n+\n+\t\t\t      lastref = ref;\n+\t\t\t    }\n+\n \t\t\t/* The \"!$acc cache\" directive allows rectangular\n \t\t\t   subarrays to be specified, with some restrictions\n \t\t\t   on the form of bounds (not implemented).\n \t\t\t   Only raise an error here if we're really sure the\n \t\t\t   array isn't contiguous.  An expression such as\n \t\t\t   arr(-n:n,-n:n) could be contiguous even if it looks\n \t\t\t   like it may not be.  */\n-\t\t\tif (list != OMP_LIST_CACHE\n+\t\t\tif (code->op != EXEC_OACC_UPDATE\n+\t\t\t    && list != OMP_LIST_CACHE\n \t\t\t    && list != OMP_LIST_DEPEND\n \t\t\t    && !gfc_is_simply_contiguous (n->expr, false, true)\n-\t\t\t    && gfc_is_not_contiguous (n->expr))\n+\t\t\t    && gfc_is_not_contiguous (n->expr)\n+\t\t\t    && !(lastslice\n+\t\t\t\t && (lastslice->next\n+\t\t\t\t     || lastslice->type != REF_ARRAY)))\n \t\t\t  gfc_error (\"Array is not contiguous at %L\",\n \t\t\t\t     &n->where);\n-\n-\t\t\twhile (array_ref\n-\t\t\t       && (array_ref->type == REF_COMPONENT\n-\t\t\t\t   || (array_ref->type == REF_ARRAY\n-\t\t\t\t       && array_ref->next\n-\t\t\t\t       && (array_ref->next->type\n-\t\t\t\t\t   == REF_COMPONENT))))\n-\t\t\t  array_ref = array_ref->next;\n \t\t      }\n \t\t  }\n-\t\tif (array_ref\n+\t\tif (lastref\n \t\t    || (n->expr\n \t\t\t&& (!resolved || n->expr->expr_type != EXPR_VARIABLE)))\n \t\t  {\n-\t\t    if (array_ref\n-\t\t\t&& (array_ref->type == REF_SUBSTRING\n-\t\t\t    || (array_ref->next\n-\t\t\t\t&& array_ref->next->type == REF_SUBSTRING)))\n+\t\t    if (!lastslice\n+\t\t\t&& lastref\n+\t\t\t&& lastref->type == REF_SUBSTRING)\n \t\t      gfc_error (\"Unexpected substring reference in %s clause \"\n \t\t\t\t \"at %L\", name, &n->where);\n-\t\t    else if (array_ref && array_ref->type == REF_INQUIRY)\n+\t\t    else if (!lastslice\n+\t\t\t     && lastref\n+\t\t\t     && lastref->type == REF_INQUIRY)\n \t\t      {\n-\t\t\tgcc_assert (array_ref->u.i == INQUIRY_RE\n-\t\t\t\t    || array_ref->u.i == INQUIRY_IM);\n+\t\t\tgcc_assert (lastref->u.i == INQUIRY_RE\n+\t\t\t\t    || lastref->u.i == INQUIRY_IM);\n \t\t\tgfc_error (\"Unexpected complex-parts designator \"\n \t\t\t\t   \"reference in %s clause at %L\",\n \t\t\t\t   name, &n->where);\n \t\t      }\n \t\t    else if (!resolved\n-\t\t\t|| n->expr->expr_type != EXPR_VARIABLE\n-\t\t\t|| array_ref->next\n-\t\t\t|| array_ref->type != REF_ARRAY)\n+\t\t\t     || n->expr->expr_type != EXPR_VARIABLE\n+\t\t\t     || (lastslice\n+\t\t\t\t && (lastslice->next\n+\t\t\t\t     || lastslice->type != REF_ARRAY)))\n \t\t      gfc_error (\"%qs in %s clause at %L is not a proper \"\n \t\t\t\t \"array section\", n->sym->name, name,\n \t\t\t\t &n->where);\n-\t\t    else\n+\t\t    else if (lastslice)\n \t\t      {\n \t\t\tint i;\n-\t\t\tgfc_array_ref *ar = &array_ref->u.ar;\n+\t\t\tgfc_array_ref *ar = &lastslice->u.ar;\n \t\t\tfor (i = 0; i < ar->dimen; i++)\n-\t\t\t  if (ar->stride[i])\n+\t\t\t  if (ar->stride[i] && code->op != EXEC_OACC_UPDATE)\n \t\t\t    {\n \t\t\t      gfc_error (\"Stride should not be specified for \"\n \t\t\t\t\t \"array section in %s clause at %L\","}, {"sha": "807580d75a9c86aa0922a1917d66043b23b4a10e", "filename": "gcc/testsuite/gfortran.dg/goacc/array-with-dt-2.f90", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-2.f90?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -4,8 +4,7 @@\n \n type(t), allocatable :: b(:)\n \n-! TODO: Remove expected errors when this is supported.\n-!$acc update host(b(::2))  ! { dg-error \"Stride should not be specified for array section in MAP clause\" }\n-!$acc update host(b(1)%A(::3,::4))  ! { dg-error \"Stride should not be specified for array section in MAP clause\" }\n+!$acc update host(b(::2))\n+!$acc update host(b(1)%A(::3,::4))\n end\n "}, {"sha": "adac8e3945eb3cd707a47150739b68005f4ce830", "filename": "gcc/testsuite/gfortran.dg/goacc/array-with-dt-6.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Farray-with-dt-6.f90?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -0,0 +1,10 @@\n+type t\n+  integer :: i, j\n+end type t\n+type t2\n+  type(t) :: b(4)\n+end type\n+type(t2) :: var(10)\n+!$acc update host(var(3)%b(:)%j)  ! { dg-error \"not a proper array section\" }\n+!$acc update host(var(3)%b%j)  ! { dg-error \"not a proper array section\" }\n+end"}, {"sha": "6b414fb85249059c1e905ce76e7698ca62805687", "filename": "gcc/testsuite/gfortran.dg/goacc/mapping-tests-2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-2.f90?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -24,9 +24,9 @@ subroutine foo\n   ! Bad - we cannot do a strided access of 'x'\n   ! No C/C++ equivalent\n !$acc enter data copyin(y(:)%i)\n-! { dg-error \"Array is not contiguous\" \"\" { target \"*-*-*\" } 26 }\n+! { dg-error \"not a proper array section\" \"\" { target \"*-*-*\" } 26 }\n \n   ! Bad - again, a strided access\n !$acc enter data copyin(z(1)%cc(:)%i)\n-! { dg-error \"Array is not contiguous\" \"\" { target \"*-*-*\" } 30 }\n+! { dg-error \"not a proper array section\" \"\" { target \"*-*-*\" } 30 }\n end"}, {"sha": "7f3cc4ae27498425b991833deea9aea3cc41ce80", "filename": "gcc/testsuite/gfortran.dg/goacc/ref_inquiry.f90", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fref_inquiry.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fref_inquiry.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fref_inquiry.f90?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -29,28 +29,20 @@\n !$acc enter data copyin(z%re)    ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc enter data copyin(z%im)    ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc enter data copyin(zz%re)   ! { dg-error \"not a proper array section\" }\n-                                 ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n !$acc enter data copyin(zz%im)   ! { dg-error \"not a proper array section\" }\n-                                 ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n \n !$acc enter data copyin(x%z%re)  ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc enter data copyin(x%z%im)  ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc enter data copyin(x%zz%re) ! { dg-error \"not a proper array section\" }\n-                                 ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n !$acc enter data copyin(x%zz%im) ! { dg-error \"not a proper array section\" }\n-                                 ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n \n !$acc update self(z%re)         ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc update self(z%im)         ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc update self(zz%re)        ! { dg-error \"not a proper array section\" }\n-                                ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n !$acc update self(zz%im)        ! { dg-error \"not a proper array section\" }\n-                                ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n \n !$acc update self(x%z%re)       ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc update self(x%z%im)       ! { dg-error \"Unexpected complex-parts designator\" }\n !$acc update self(x%zz%re)      ! { dg-error \"is not a proper array section\" }\n-                                ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n !$acc update self(x%zz%im)      ! { dg-error \"is not a proper array section\" }\n-                                ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n end"}, {"sha": "610d9ec0b9508a6afdfa7341a1ed88a0c5a691e4", "filename": "gcc/testsuite/gfortran.dg/gomp/ref_inquiry.f90", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fref_inquiry.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fref_inquiry.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fref_inquiry.f90?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -25,15 +25,11 @@\n !$omp target enter data map(to: z%re)    ! { dg-error \"Unexpected complex-parts designator\" }\n !$omp target enter data map(to: z%im)    ! { dg-error \"Unexpected complex-parts designator\" }\n !$omp target enter data map(to: zz%re)   ! { dg-error \"not a proper array section\" }\n-                                         ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n !$omp target enter data map(to: zz%im)   ! { dg-error \"not a proper array section\" }\n-                                         ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n \n !$omp target enter data map(to: x%z%re)  ! { dg-error \"Unexpected complex-parts designator\" }\n !$omp target enter data map(to: x%z%im)  ! { dg-error \"Unexpected complex-parts designator\" }\n !$omp target enter data map(to: x%zz%re) ! { dg-error \"not a proper array section\" }\n-                                         ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n !$omp target enter data map(to: x%zz%im) ! { dg-error \"not a proper array section\" }\n-                                         ! { dg-error \"Array is not contiguous\" \"\" { target *-*-* } .-1 }\n \n end"}, {"sha": "f04d76d583abfe21c4d39de0f67de42138ea5065", "filename": "libgomp/testsuite/libgomp.oacc-fortran/array-stride-dt-1.f90", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366cf1127a547ff77024a551abb01bb1a6e963cd/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Farray-stride-dt-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366cf1127a547ff77024a551abb01bb1a6e963cd/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Farray-stride-dt-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Farray-stride-dt-1.f90?ref=366cf1127a547ff77024a551abb01bb1a6e963cd", "patch": "@@ -24,9 +24,8 @@\n \n b(1)%A(:,:) = 5\n \n-! TODO: Remove expected errors once this is supported.\n-!$acc update device(b(::2))  ! { dg-error \"Stride should not be specified for array section in MAP clause\" }\n-!$acc update device(b(1)%A(::3,::4))  ! { dg-error \"Stride should not be specified for array section in MAP clause\" }\n+!$acc update device(b(::2))\n+!$acc update device(b(1)%A(::3,::4))\n \n do i=1,20\n   !$acc exit data copyout(b(i)%A)"}]}