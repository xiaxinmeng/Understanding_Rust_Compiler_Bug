{"sha": "7143b9d605ba68058774ffe1d45fa510287a5f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE0M2I5ZDYwNWJhNjgwNTg3NzRmZmUxZDQ1ZmE1MTAyODdhNWY2Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-10-13T12:18:25Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-10-13T12:18:25Z"}, "message": "[PATCH] Tree structure marking\n\nhttps://gcc.gnu.org/ml/gcc-patches/2017-10/msg00846.html\n\t* tree-core.h (tree_contains_struct): Make bool.\n\t* tree.c (tree_contains_struct): Likewise.\n\t* tree.h (MARK_TS_BASE): Remove do ... while (0) idiom.\n\t(MARK_TS_TYPED, MARK_TS_COMMON, MARK_TS_TYPE_COMMON,\n\tMARK_TS_TYPE_WITH_LANG_SPECIFIC, MARK_TS_DECL_MINIMAL,\n\tMARK_TS_DECL_COMMON, MARK_TS_DECL_WRTL, MARK_TS_DECL_WITH_VIS,\n\tMARK_TS_DECL_NON_COMMON): Likewise, use comma operator.\n\nFrom-SVN: r253723", "tree": {"sha": "6103f3943ed2b02763d1e7a6b21a52e4187a4922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6103f3943ed2b02763d1e7a6b21a52e4187a4922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7143b9d605ba68058774ffe1d45fa510287a5f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7143b9d605ba68058774ffe1d45fa510287a5f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7143b9d605ba68058774ffe1d45fa510287a5f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7143b9d605ba68058774ffe1d45fa510287a5f66/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99758d1a4b602c95853f161003ecb5de0e425e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99758d1a4b602c95853f161003ecb5de0e425e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99758d1a4b602c95853f161003ecb5de0e425e98"}], "stats": {"total": 73, "additions": 31, "deletions": 42}, "files": [{"sha": "78bd1f88c63785f293faf7d652eda16854d05c8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7143b9d605ba68058774ffe1d45fa510287a5f66", "patch": "@@ -1,3 +1,13 @@\n+2017-10-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* tree-core.h (tree_contains_struct): Make bool.\n+\t* tree.c (tree_contains_struct): Likewise.\n+\t* tree.h (MARK_TS_BASE): Remove do ... while (0) idiom.\n+\t(MARK_TS_TYPED, MARK_TS_COMMON, MARK_TS_TYPE_COMMON,\n+\tMARK_TS_TYPE_WITH_LANG_SPECIFIC, MARK_TS_DECL_MINIMAL,\n+\tMARK_TS_DECL_COMMON, MARK_TS_DECL_WRTL, MARK_TS_DECL_WITH_VIS,\n+\tMARK_TS_DECL_NON_COMMON): Likewise, use comma operator.\n+\n 2017-10-13  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-isl-ast-to-gimple.c"}, {"sha": "ed35847dc52d54eb07b7fde8d1acfb3a65b99c41", "filename": "gcc/tree-core.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=7143b9d605ba68058774ffe1d45fa510287a5f66", "patch": "@@ -2058,7 +2058,7 @@ struct floatn_type_info {\n                                 Global variables\n ---------------------------------------------------------------------------*/\n /* Matrix describing the structures contained in a given tree code.  */\n-extern unsigned char tree_contains_struct[MAX_TREE_CODES][64];\n+extern bool tree_contains_struct[MAX_TREE_CODES][64];\n \n /* Class of tree given its code.  */\n extern const enum tree_code_class tree_code_type[];"}, {"sha": "5662f28c4692bf81d7e6c34713f2c3d92b4a9abe", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=7143b9d605ba68058774ffe1d45fa510287a5f66", "patch": "@@ -259,7 +259,7 @@ tree integer_types[itk_none];\n bool int_n_enabled_p[NUM_INT_N_ENTS];\n struct int_n_trees_t int_n_trees [NUM_INT_N_ENTS];\n \n-unsigned char tree_contains_struct[MAX_TREE_CODES][64];\n+bool tree_contains_struct[MAX_TREE_CODES][64];\n \n /* Number of operands for each OpenMP clause.  */\n unsigned const char omp_clause_num_ops[] ="}, {"sha": "b6dfa89a17ae327e1defac352023cbbcbf35cb95", "filename": "gcc/tree.h", "status": "modified", "additions": 19, "deletions": 40, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7143b9d605ba68058774ffe1d45fa510287a5f66/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7143b9d605ba68058774ffe1d45fa510287a5f66", "patch": "@@ -76,64 +76,43 @@ as_internal_fn (combined_fn code)\n \n /* Macros for initializing `tree_contains_struct'.  */\n #define MARK_TS_BASE(C)\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    tree_contains_struct[C][TS_BASE] = 1;\t\t\\\n-  } while (0)\n+  (tree_contains_struct[C][TS_BASE] = true)\n \n #define MARK_TS_TYPED(C)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_BASE (C);\t\t\t\t\t\\\n-    tree_contains_struct[C][TS_TYPED] = 1;\t\t\\\n-  } while (0)\n+  (MARK_TS_BASE (C),\t\t\t\t\t\\\n+   tree_contains_struct[C][TS_TYPED] = true)\n \n #define MARK_TS_COMMON(C)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_TYPED (C);\t\t\t\t\t\\\n-    tree_contains_struct[C][TS_COMMON] = 1;\t\t\\\n-  } while (0)\n+  (MARK_TS_TYPED (C),\t\t\t\t\t\\\n+   tree_contains_struct[C][TS_COMMON] = true)\n \n #define MARK_TS_TYPE_COMMON(C)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_COMMON (C);\t\t\t\t\t\\\n-    tree_contains_struct[C][TS_TYPE_COMMON] = 1;\t\\\n-  } while (0)\n+  (MARK_TS_COMMON (C),\t\t\t\t\t\\\n+   tree_contains_struct[C][TS_TYPE_COMMON] = true)\n \n #define MARK_TS_TYPE_WITH_LANG_SPECIFIC(C)\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_TYPE_COMMON (C);\t\t\t\t\\\n-    tree_contains_struct[C][TS_TYPE_WITH_LANG_SPECIFIC] = 1;\t\\\n-  } while (0)\n+  (MARK_TS_TYPE_COMMON (C),\t\t\t\t\\\n+   tree_contains_struct[C][TS_TYPE_WITH_LANG_SPECIFIC] = true)\n \n #define MARK_TS_DECL_MINIMAL(C)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_COMMON (C);\t\t\t\t\t\\\n-    tree_contains_struct[C][TS_DECL_MINIMAL] = 1;\t\\\n-  } while (0)\n+  (MARK_TS_COMMON (C),\t\t\t\t\t\\\n+   tree_contains_struct[C][TS_DECL_MINIMAL] = true)\n \n #define MARK_TS_DECL_COMMON(C)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_DECL_MINIMAL (C);\t\t\t\t\\\n-    tree_contains_struct[C][TS_DECL_COMMON] = 1;\t\\\n-  } while (0)\n+  (MARK_TS_DECL_MINIMAL (C),\t\t\t\t\\\n+   tree_contains_struct[C][TS_DECL_COMMON] = true)\n \n #define MARK_TS_DECL_WRTL(C)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_DECL_COMMON (C);\t\t\t\t\\\n-    tree_contains_struct[C][TS_DECL_WRTL] = 1;\t\t\\\n-  } while (0)\n+  (MARK_TS_DECL_COMMON (C),\t\t\t\t\\\n+   tree_contains_struct[C][TS_DECL_WRTL] = true)\n \n #define MARK_TS_DECL_WITH_VIS(C)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_DECL_WRTL (C);\t\t\t\t\\\n-    tree_contains_struct[C][TS_DECL_WITH_VIS] = 1;\t\\\n-  } while (0)\n+  (MARK_TS_DECL_WRTL (C),\t\t\t\t\\\n+   tree_contains_struct[C][TS_DECL_WITH_VIS] = true)\n \n #define MARK_TS_DECL_NON_COMMON(C)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\\\n-    MARK_TS_DECL_WITH_VIS (C);\t\t\t\t\\\n-    tree_contains_struct[C][TS_DECL_NON_COMMON] = 1;\t\\\n-  } while (0)\n-\n+  (MARK_TS_DECL_WITH_VIS (C),\t\t\t\t\\\n+   tree_contains_struct[C][TS_DECL_NON_COMMON] = true)\n \n /* Returns the string representing CLASS.  */\n "}]}