{"sha": "1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExNjFjZDdhNzU0NTMxOGMxZWUyOWRmZDJlYjc2ZWU2ZWU5ZjQzZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2015-12-09T01:35:59Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2015-12-09T01:35:59Z"}, "message": "Fix PR c++/68711 - [6 regression] SEGV on an invalid offsetof of a member\nof a virtual base.\n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/other/offsetof8.C: New test.\n\ngcc/cp/ChangeLog:\n\t* typeck.c (build_class_member_access_expr): Strip NOPs before\n        testing a potentially null operand for equality to zero.\n\nFrom-SVN: r231437", "tree": {"sha": "9d92fe8e1f3fe6ebcfa909771bb950bd93fef15c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d92fe8e1f3fe6ebcfa909771bb950bd93fef15c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ba300b1a53cbce4924f0e392135b4cdf0ee9fdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba300b1a53cbce4924f0e392135b4cdf0ee9fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba300b1a53cbce4924f0e392135b4cdf0ee9fdd"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "ac41ca655c5956c9f0c5de0abad23e6b01ad44ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "patch": "@@ -1,3 +1,9 @@\n+2015-12-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/68711\n+\t* typeck.c (build_class_member_access_expr): Strip NOPs before\n+        testing a potentially null operand for equality to zero.\n+\n 2015-12-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/68760"}, {"sha": "17671ee838d97d22030351a1d99f5c88a4c28523", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "patch": "@@ -2358,8 +2358,11 @@ build_class_member_access_expr (cp_expr object, tree member,\n       int type_quals;\n       tree member_type;\n \n-      null_object_p = (INDIRECT_REF_P (object)\n-\t\t       && integer_zerop (TREE_OPERAND (object, 0)));\n+      if (INDIRECT_REF_P (object))\n+\tnull_object_p =\n+\t  integer_zerop (tree_strip_nop_conversions (TREE_OPERAND (object, 0)));\n+      else\n+\tnull_object_p = false;\n \n       /* Convert OBJECT to the type of MEMBER.  */\n       if (!same_type_p (TYPE_MAIN_VARIANT (object_type),"}, {"sha": "5cefc07641dec027c76caf08081daf0ca11e40df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "patch": "@@ -1,3 +1,8 @@\n+2015-12-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/68711\n+\t* g++.dg/other/offsetof8.C: New test.\n+\n 2015-12-08  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.target/nvptx/trailing-init.c: New."}, {"sha": "daca70a6fe4c24ee3e075c90cf1fbde69669c605", "filename": "gcc/testsuite/g++.dg/other/offsetof8.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof8.C?ref=1a161cd7a7545318c1ee29dfd2eb76ee6ee9f43e", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/68711 - [5 regression] SEGV on an invalid offsetof of a member\n+//                of a virtual base\n+// { dg-do compile }\n+\n+struct A { int i; };\n+\n+struct B: virtual A { };\n+\n+int a[]  = {\n+  !&((B*)0)->i,    // { dg-error \"invalid access to non-static data member\" }\n+  __builtin_offsetof (B, i)   // { dg-error \"invalid access to non-static\" }\n+};"}]}