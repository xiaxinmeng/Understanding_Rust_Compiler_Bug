{"sha": "2546734c21ccd05a2d14be5f2aebd00aa4adece2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0NjczNGMyMWNjZDA1YTJkMTRiZTVmMmFlYmQwMGFhNGFkZWNlMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T15:56:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T15:56:40Z"}, "message": "[multiple changes]\n\n2009-11-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-sechas.adb: Minor reformatting\n\n2009-11-30  Matthew Heaney  <heaney@adacore.com>\n\n\t* a-crbtgo.adb (Delete_Fixup): Add comments explaining why predicates\n\twere removed.\n\t* a-cdlili.adb (Vet): Remove always-true predicates.\n\nFrom-SVN: r154823", "tree": {"sha": "dd4ffa73b828e7398f1819c24855a992282f0bfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd4ffa73b828e7398f1819c24855a992282f0bfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2546734c21ccd05a2d14be5f2aebd00aa4adece2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2546734c21ccd05a2d14be5f2aebd00aa4adece2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2546734c21ccd05a2d14be5f2aebd00aa4adece2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2546734c21ccd05a2d14be5f2aebd00aa4adece2/comments", "author": null, "committer": null, "parents": [{"sha": "36e764085d947eecbced61ee6f37790afe9ee625", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e764085d947eecbced61ee6f37790afe9ee625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e764085d947eecbced61ee6f37790afe9ee625"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "3a3bad104aba8a3467fbdcfc7288219d1474dc42", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2546734c21ccd05a2d14be5f2aebd00aa4adece2", "patch": "@@ -1,3 +1,13 @@\n+2009-11-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-sechas.adb: Minor reformatting\n+\n+2009-11-30  Matthew Heaney  <heaney@adacore.com>\n+\n+\t* a-crbtgo.adb (Delete_Fixup): Add comments explaining why predicates\n+\twere removed.\n+\t* a-cdlili.adb (Vet): Remove always-true predicates.\n+\n 2009-11-30  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-sechas.adb, s-sechas.ads, s-shshco.adb, s-shshco.ads, s-shsh64.adb,"}, {"sha": "c2e0d9d0a0a7b4a58e288011334f2ddbd240ff3a", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=2546734c21ccd05a2d14be5f2aebd00aa4adece2", "patch": "@@ -1711,12 +1711,18 @@ package body Ada.Containers.Doubly_Linked_Lists is\n             return False;\n          end if;\n \n+         --  If we get here, we know that this disjunction is true:\n+         --  Position.Node.Prev /= null or else Position.Node = L.First\n+\n          if Position.Node.Next = null\n            and then Position.Node /= L.Last\n          then\n             return False;\n          end if;\n \n+         --  If we get here, we know that this disjunction is true:\n+         --  Position.Node.Next /= null or else Position.Node = L.Last\n+\n          if L.Length = 1 then\n             return L.First = L.Last;\n          end if;\n@@ -1761,21 +1767,21 @@ package body Ada.Containers.Doubly_Linked_Lists is\n             return False;\n          end if;\n \n-         if Position.Node = L.First then\n+         if Position.Node = L.First then  -- eliminates ealier disjunct\n             return True;\n          end if;\n \n-         if Position.Node = L.Last then\n-            return True;\n-         end if;\n+         --  If we get here, we know, per disjunctive syllogism (modus\n+         --  tollendo ponens), that this predicate is true:\n+         --  Position.Node.Prev /= null\n \n-         if Position.Node.Next = null then\n-            return False;\n+         if Position.Node = L.Last then  -- eliminates earlier disjunct\n+            return True;\n          end if;\n \n-         if Position.Node.Prev = null then\n-            return False;\n-         end if;\n+         --  If we get here, we know, per disjunctive syllogism (modus\n+         --  tollendo ponens), that this predicate is true:\n+         --  Position.Node.Next /= null\n \n          if Position.Node.Next.Prev /= Position.Node then\n             return False;"}, {"sha": "c8ddcff02a58b83a390a083569a05da8313854a4", "filename": "gcc/ada/a-crbtgo.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2Fa-crbtgo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2Fa-crbtgo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.adb?ref=2546734c21ccd05a2d14be5f2aebd00aa4adece2", "patch": "@@ -49,6 +49,8 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n    procedure Left_Rotate  (Tree : in out Tree_Type; X : Node_Access);\n    procedure Right_Rotate (Tree : in out Tree_Type; Y : Node_Access);\n \n+--  Why is all the following code commented out ???\n+\n --     ---------------------\n --     -- Check_Invariant --\n --     ---------------------\n@@ -171,8 +173,15 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n                if Right (W) = null\n                  or else Color (Right (W)) = Black\n                then\n+                  --  As a condition for setting the color of the left child to\n+                  --  black, the left child access value must be non-null. A\n+                  --  truth table analysis shows that if we arrive here, that\n+                  --  condition holds, so there's no need for an explicit test.\n+                  --  The assertion is here to document what we know is true.\n+\n                   pragma Assert (Left (W) /= null);\n                   Set_Color (Left (W), Black);\n+\n                   Set_Color (W, Red);\n                   Right_Rotate (Tree, W);\n                   W := Right (Parent (X));\n@@ -206,8 +215,16 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n \n             else\n                if Left (W) = null or else Color (Left (W)) = Black then\n+\n+                  --  As a condition for setting the color of the right child\n+                  --  to black, the right child access value must be non-null.\n+                  --  A truth table analysis shows that if we arrive here, that\n+                  --  condition holds, so there's no need for an explicit test.\n+                  --  The assertion is here to document what we know is true.\n+\n                   pragma Assert (Right (W) /= null);\n                   Set_Color (Right (W), Black);\n+\n                   Set_Color (W, Red);\n                   Left_Rotate (Tree, W);\n                   W := Left (Parent (X));\n@@ -246,6 +263,8 @@ package body Ada.Containers.Red_Black_Trees.Generic_Operations is\n            \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n+      --  Why are these all commented out ???\n+\n --    pragma Assert (Tree.Length > 0);\n --    pragma Assert (Tree.Root /= null);\n --    pragma Assert (Tree.First /= null);"}, {"sha": "78eddc3a29e83300d56228c676d0596d323c0edb", "filename": "gcc/ada/g-sechas.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2Fg-sechas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2546734c21ccd05a2d14be5f2aebd00aa4adece2/gcc%2Fada%2Fg-sechas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.adb?ref=2546734c21ccd05a2d14be5f2aebd00aa4adece2", "patch": "@@ -37,8 +37,7 @@ package body GNAT.Secure_Hashes is\n    use Ada.Streams;\n \n    Hex_Digit : constant array (Stream_Element range 0 .. 15) of Character :=\n-                 ('0', '1', '2', '3', '4', '5', '6', '7',\n-                  '8', '9', 'a', 'b', 'c', 'd', 'e', 'f');\n+                 \"0123456789abcdef\";\n \n    type Fill_Buffer_Access is\n      access procedure"}]}