{"sha": "d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhjZTJlYWU4NDcxZWJhYmNjM2M3YzhhZjFiMGI5OTI5MTE1NDNjMw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-25T20:13:26Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-25T20:13:26Z"}, "message": "Remove BB_FOOTER scaffolding\n\ngcc/\n\t* basic-block.h (struct rtl_bb_info): Strengthen field \"footer_\"\n\tfrom rtx to rtx_insn *.\n\t(BB_FOOTER): Replace function with access macro.\n\t(SET_BB_FOOTER): Delete.\n\n\t* cfgcleanup.c (try_optimize_cfg): Replace uses of SET_BB_FOOTER\n\twith BB_FOOTER.\n\t* cfgrtl.c (try_redirect_by_replacing_jump): Likewise.\n\t(emit_barrier_after_bb): Likewise.\n\t(record_effective_endpoints): Likewise.\n\t(relink_block_chain): Likewise.\n\t(fixup_fallthru_exit_predecessor): Likewise.\n\t(cfg_layout_duplicate_bb): Likewise.\n\t(cfg_layout_split_block): Likewise.\n\t(cfg_layout_delete_block): Likewise.\n\t(cfg_layout_merge_blocks): Likewise.\n\t(BB_FOOTER): Delete function.\n\t(SET_BB_FOOTER): Delete function.\n\t* combine.c (update_cfg_for_uncondjump): Replace uses of\n\tSET_BB_FOOTER with BB_FOOTER.\n\n/\n\t* rtx-classes-status.txt (TODO): Remove SET_BB_FOOTER.\n\nFrom-SVN: r214470", "tree": {"sha": "d837dad15df81c222f78bd99ab27cf37974cfb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d837dad15df81c222f78bd99ab27cf37974cfb94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be7457df4dc64f828597185dddffe696e5290a21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7457df4dc64f828597185dddffe696e5290a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7457df4dc64f828597185dddffe696e5290a21"}], "stats": {"total": 85, "additions": 48, "deletions": 37}, "files": [{"sha": "8363862f3cfe8468e56f4c6e1c4c8dd60d477007", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -1,3 +1,7 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtx-classes-status.txt (TODO): Remove SET_BB_FOOTER.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtx-classes-status.txt: Phase 3 (per-file commits within"}, {"sha": "ec66943cbb3ee4f1fbdf0ac0de31adf85bf472e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -1,3 +1,26 @@\n+2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* basic-block.h (struct rtl_bb_info): Strengthen field \"footer_\"\n+\tfrom rtx to rtx_insn *.\n+\t(BB_FOOTER): Replace function with access macro.\n+\t(SET_BB_FOOTER): Delete.\n+\n+\t* cfgcleanup.c (try_optimize_cfg): Replace uses of SET_BB_FOOTER\n+\twith BB_FOOTER.\n+\t* cfgrtl.c (try_redirect_by_replacing_jump): Likewise.\n+\t(emit_barrier_after_bb): Likewise.\n+\t(record_effective_endpoints): Likewise.\n+\t(relink_block_chain): Likewise.\n+\t(fixup_fallthru_exit_predecessor): Likewise.\n+\t(cfg_layout_duplicate_bb): Likewise.\n+\t(cfg_layout_split_block): Likewise.\n+\t(cfg_layout_delete_block): Likewise.\n+\t(cfg_layout_merge_blocks): Likewise.\n+\t(BB_FOOTER): Delete function.\n+\t(SET_BB_FOOTER): Delete function.\n+\t* combine.c (update_cfg_for_uncondjump): Replace uses of\n+\tSET_BB_FOOTER with BB_FOOTER.\n+\n 2014-08-25  David Malcolm  <dmalcolm@redhat.com>\n \n \t* except.h (struct eh_landing_pad_d): Strengthen field"}, {"sha": "1f23f04fb219e23b6464aed8b01dd582f0449566", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -127,7 +127,7 @@ struct GTY(()) rtl_bb_info {\n   /* In CFGlayout mode points to insn notes/jumptables to be placed just before\n      and after the block.   */\n   rtx header_;\n-  rtx footer_;\n+  rtx_insn *footer_;\n };\n \n struct GTY(()) gimple_bb_info {\n@@ -381,8 +381,7 @@ extern rtx& SET_BB_END (basic_block bb);\n extern rtx_insn *BB_HEADER (const_basic_block bb);\n extern rtx& SET_BB_HEADER (basic_block bb);\n \n-extern rtx_insn *BB_FOOTER (const_basic_block bb);\n-extern rtx& SET_BB_FOOTER (basic_block bb);\n+#define BB_FOOTER(B)    (B)->il.x.rtl->footer_\n \n /* Special block numbers [markers] for entry and exit.\n    Neither of them is supposed to hold actual statements.  */"}, {"sha": "ba0ab58f0f5aa8f9304ee03cd25914a8fcff6bcb", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -2676,13 +2676,13 @@ try_optimize_cfg (int mode)\n \t\t\t\t{\n \t\t\t\t  if (BB_FOOTER (b))\n \t\t\t\t    {\n-\t\t\t\t      SET_BB_FOOTER (e->src) = BB_FOOTER (b);\n-\t\t\t\t      SET_BB_FOOTER (b) = NULL;\n+\t\t\t\t      BB_FOOTER (e->src) = BB_FOOTER (b);\n+\t\t\t\t      BB_FOOTER (b) = NULL;\n \t\t\t\t    }\n \t\t\t\t  else\n \t\t\t\t    {\n \t\t\t\t      start_sequence ();\n-\t\t\t\t      SET_BB_FOOTER (e->src) = emit_barrier ();\n+\t\t\t\t      BB_FOOTER (e->src) = emit_barrier ();\n \t\t\t\t      end_sequence ();\n \t\t\t\t    }\n \t\t\t\t}"}, {"sha": "458278c5e4de08208ec5b54ee2da1531ece105d1", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 14, "deletions": 29, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -1063,7 +1063,7 @@ try_redirect_by_replacing_jump (edge e, basic_block target, bool in_cfglayout)\n \t\t  if (PREV_INSN (insn))\n \t\t    SET_NEXT_INSN (PREV_INSN (insn)) = NEXT_INSN (insn);\n \t\t  else\n-\t\t    SET_BB_FOOTER (src) = NEXT_INSN (insn);\n+\t\t    BB_FOOTER (src) = NEXT_INSN (insn);\n \t\t  if (NEXT_INSN (insn))\n \t\t    SET_PREV_INSN (NEXT_INSN (insn)) = PREV_INSN (insn);\n \t\t}\n@@ -1451,7 +1451,7 @@ emit_barrier_after_bb (basic_block bb)\n   gcc_assert (current_ir_type () == IR_RTL_CFGRTL\n               || current_ir_type () == IR_RTL_CFGLAYOUT);\n   if (current_ir_type () == IR_RTL_CFGLAYOUT)\n-    SET_BB_FOOTER (bb) = unlink_insn_chain (barrier, barrier);\n+    BB_FOOTER (bb) = unlink_insn_chain (barrier, barrier);\n }\n \n /* Like force_nonfallthru below, but additionally performs redirection\n@@ -3462,7 +3462,7 @@ record_effective_endpoints (void)\n \t\t\t\t\t\tPREV_INSN (BB_HEAD (bb)));\n       end = skip_insns_after_block (bb);\n       if (NEXT_INSN (BB_END (bb)) && BB_END (bb) != end)\n-\tSET_BB_FOOTER (bb) = unlink_insn_chain (NEXT_INSN (BB_END (bb)), end);\n+\tBB_FOOTER (bb) = unlink_insn_chain (NEXT_INSN (BB_END (bb)), end);\n       next_insn = NEXT_INSN (BB_END (bb));\n     }\n \n@@ -3620,7 +3620,7 @@ relink_block_chain (bool stay_in_cfglayout_mode)\n     {\n       bb->aux = NULL;\n       if (!stay_in_cfglayout_mode)\n-\tSET_BB_HEADER (bb) = SET_BB_FOOTER (bb) = NULL;\n+\tSET_BB_HEADER (bb) = BB_FOOTER (bb) = NULL;\n     }\n \n   /* Maybe reset the original copy tables, they are not valid anymore\n@@ -3988,8 +3988,8 @@ fixup_fallthru_exit_predecessor (void)\n \t  bb = split_block (bb, NULL)->dest;\n \t  bb->aux = c->aux;\n \t  c->aux = bb;\n-\t  SET_BB_FOOTER (bb) = BB_FOOTER (c);\n-\t  SET_BB_FOOTER (c) = NULL;\n+\t  BB_FOOTER (bb) = BB_FOOTER (c);\n+\t  BB_FOOTER (c) = NULL;\n \t}\n \n       while (c->aux != bb)\n@@ -4203,7 +4203,7 @@ cfg_layout_duplicate_bb (basic_block bb)\n \tinsn = NEXT_INSN (insn);\n       insn = duplicate_insn_chain (BB_FOOTER (bb), insn);\n       if (insn)\n-\tSET_BB_FOOTER (new_bb) = unlink_insn_chain (insn, get_last_insn ());\n+\tBB_FOOTER (new_bb) = unlink_insn_chain (insn, get_last_insn ());\n     }\n \n   return new_bb;\n@@ -4311,8 +4311,8 @@ cfg_layout_split_block (basic_block bb, void *insnp)\n   rtx insn = (rtx) insnp;\n   basic_block new_bb = rtl_split_block (bb, insn);\n \n-  SET_BB_FOOTER (new_bb) = BB_FOOTER (bb);\n-  SET_BB_FOOTER (bb) = NULL;\n+  BB_FOOTER (new_bb) = BB_FOOTER (bb);\n+  BB_FOOTER (bb) = NULL;\n \n   return new_bb;\n }\n@@ -4443,7 +4443,7 @@ cfg_layout_delete_block (basic_block bb)\n \t      if (PREV_INSN (insn))\n \t\tSET_NEXT_INSN (PREV_INSN (insn)) = NEXT_INSN (insn);\n \t      else\n-\t\tSET_BB_FOOTER (bb) = NEXT_INSN (insn);\n+\t\tBB_FOOTER (bb) = NEXT_INSN (insn);\n \t      if (NEXT_INSN (insn))\n \t\tSET_PREV_INSN (NEXT_INSN (insn)) = PREV_INSN (insn);\n \t    }\n@@ -4578,7 +4578,7 @@ cfg_layout_merge_blocks (basic_block a, basic_block b)\n   if (BB_FOOTER (b))\n     {\n       if (!BB_FOOTER (a))\n-\tSET_BB_FOOTER (a) = SET_BB_FOOTER (b);\n+\tBB_FOOTER (a) = BB_FOOTER (b);\n       else\n \t{\n \t  rtx_insn *last = BB_FOOTER (a);\n@@ -4588,7 +4588,7 @@ cfg_layout_merge_blocks (basic_block a, basic_block b)\n \t  SET_NEXT_INSN (last) = BB_FOOTER (b);\n \t  SET_PREV_INSN (BB_FOOTER (b)) = last;\n \t}\n-      SET_BB_FOOTER (b) = NULL;\n+      BB_FOOTER (b) = NULL;\n     }\n \n   /* Move things from b->header before a->footer.\n@@ -4597,7 +4597,7 @@ cfg_layout_merge_blocks (basic_block a, basic_block b)\n    if (BB_HEADER (b))\n      {\n       if (! BB_FOOTER (a))\n-\tSET_BB_FOOTER (a) = BB_HEADER (b);\n+\tBB_FOOTER (a) = BB_HEADER (b);\n       else\n \t{\n \t  rtx_insn *last = BB_HEADER (b);\n@@ -4606,7 +4606,7 @@ cfg_layout_merge_blocks (basic_block a, basic_block b)\n \t    last = NEXT_INSN (last);\n \t  SET_NEXT_INSN (last) = BB_FOOTER (a);\n \t  SET_PREV_INSN (BB_FOOTER (a)) = last;\n-\t  SET_BB_FOOTER (a) = BB_HEADER (b);\n+\t  BB_FOOTER (a) = BB_HEADER (b);\n \t}\n       SET_BB_HEADER (b) = NULL;\n     }\n@@ -5150,19 +5150,4 @@ rtx& SET_BB_HEADER (basic_block bb)\n   return bb->il.x.rtl->header_;\n }\n \n-/* BB_FOOTER as an rvalue. */\n-\n-rtx_insn *BB_FOOTER (const_basic_block bb)\n-{\n-  rtx insn = bb->il.x.rtl->footer_;\n-  return safe_as_a <rtx_insn *> (insn);\n-}\n-\n-/* BB_FOOTER as an lvalue. */\n-\n-rtx& SET_BB_FOOTER (basic_block bb)\n-{\n-  return bb->il.x.rtl->footer_;\n-}\n-\n #include \"gt-cfgrtl.h\""}, {"sha": "35d226eea732aecd189736e817aa6bda97a69410", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -2425,7 +2425,7 @@ update_cfg_for_uncondjump (rtx_insn *insn)\n \t    if (PREV_INSN (insn))\n \t      SET_NEXT_INSN (PREV_INSN (insn)) = NEXT_INSN (insn);\n \t    else\n-\t      SET_BB_FOOTER (bb) = NEXT_INSN (insn);\n+\t      BB_FOOTER (bb) = NEXT_INSN (insn);\n \t    if (NEXT_INSN (insn))\n \t      SET_PREV_INSN (NEXT_INSN (insn)) = PREV_INSN (insn);\n \t  }"}, {"sha": "85ce4748b8c443e27661fde6aac66c165639aed1", "filename": "rtx-classes-status.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/rtx-classes-status.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ce2eae8471ebabcc3c7c8af1b0b992911543c3/rtx-classes-status.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/rtx-classes-status.txt?ref=d8ce2eae8471ebabcc3c7c8af1b0b992911543c3", "patch": "@@ -15,7 +15,7 @@ Phase 6: use extra rtx_def subclasses:             TODO\n TODO: \"Scaffolding\" to be removed\n =================================\n * DF_REF_INSN\n-* SET_BB_HEAD, SET_BB_END, SET_BB_HEADER, SET_BB_FOOTER\n+* SET_BB_HEAD, SET_BB_END, SET_BB_HEADER\n * SET_BB_NOTE_LIST\n * SET_BND_TO\n * SET_DEP_PRO, SET_DEP_CON"}]}