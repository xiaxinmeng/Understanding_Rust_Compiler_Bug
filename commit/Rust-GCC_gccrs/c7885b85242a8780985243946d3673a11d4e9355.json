{"sha": "c7885b85242a8780985243946d3673a11d4e9355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc4ODViODUyNDJhODc4MDk4NTI0Mzk0NmQzNjczYTExZDRlOTM1NQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-09-13T19:12:08Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-09-13T19:12:08Z"}, "message": "Fix emission of exception dispatch (PR middle-end/82154).\n\n2017-09-13  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/82154\n\t* stmt.c (expand_sjlj_dispatch_table): Use CASE_LOW when\n\tCASE_HIGH is NULL_TREE.\n2017-09-13  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/82154\n\t* g++.dg/torture/pr82154.C: New test.\n\nFrom-SVN: r252728", "tree": {"sha": "cac09f66bd76a4b7e8f232fa83bbfe8b4dd9079a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cac09f66bd76a4b7e8f232fa83bbfe8b4dd9079a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7885b85242a8780985243946d3673a11d4e9355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7885b85242a8780985243946d3673a11d4e9355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7885b85242a8780985243946d3673a11d4e9355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7885b85242a8780985243946d3673a11d4e9355/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97e63e1272bf265d412d89ab8f8249e8d3a9f8b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97e63e1272bf265d412d89ab8f8249e8d3a9f8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97e63e1272bf265d412d89ab8f8249e8d3a9f8b2"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "959e04e895ae2ccd1913b8514360486710d39dab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7885b85242a8780985243946d3673a11d4e9355/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7885b85242a8780985243946d3673a11d4e9355/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7885b85242a8780985243946d3673a11d4e9355", "patch": "@@ -1,3 +1,9 @@\n+2017-09-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/82154\n+\t* stmt.c (expand_sjlj_dispatch_table): Use CASE_LOW when\n+\tCASE_HIGH is NULL_TREE.\n+\n 2017-09-13  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "92bd209ad64f0f0a17b96b70d84d0cb6667651be", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7885b85242a8780985243946d3673a11d4e9355/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7885b85242a8780985243946d3673a11d4e9355/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=c7885b85242a8780985243946d3673a11d4e9355", "patch": "@@ -1063,8 +1063,10 @@ expand_sjlj_dispatch_table (rtx dispatch_index,\n       for (int i = ncases - 1; i >= 0; --i)\n \t{\n \t  tree elt = dispatch_table[i];\n-\t  case_list.safe_push (simple_case_node (CASE_LOW (elt),\n-\t\t\t\t\t\t CASE_HIGH (elt),\n+\t  tree high = CASE_HIGH (elt);\n+\t  if (high == NULL_TREE)\n+\t    high = CASE_LOW (elt);\n+\t  case_list.safe_push (simple_case_node (CASE_LOW (elt), high,\n \t\t\t\t\t\t CASE_LABEL (elt)));\n \t}\n "}, {"sha": "4084e1c39e88c0804b07cef9c4155d10df9bafd5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7885b85242a8780985243946d3673a11d4e9355/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7885b85242a8780985243946d3673a11d4e9355/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7885b85242a8780985243946d3673a11d4e9355", "patch": "@@ -1,3 +1,8 @@\n+2017-09-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/82154\n+\t* g++.dg/torture/pr82154.C: New test.\n+\n 2017-09-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/61362"}, {"sha": "f4e1c3ea139ca74d7a61736da4b631986042f9de", "filename": "gcc/testsuite/g++.dg/torture/pr82154.C", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7885b85242a8780985243946d3673a11d4e9355/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr82154.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7885b85242a8780985243946d3673a11d4e9355/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr82154.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr82154.C?ref=c7885b85242a8780985243946d3673a11d4e9355", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-Wno-deprecated\" }\n+\n+namespace a {\n+int b;\n+class c\n+{\n+};\n+}\n+class g\n+{\n+public:\n+  g ();\n+};\n+using a::b;\n+class d\n+{\n+public:\n+  d ();\n+  void e ();\n+};\n+class f\n+{\n+  d\n+  i ()\n+  {\n+    static d j;\n+  }\n+  int *k () throw (a::c);\n+};\n+\n+\n+int *f::k () throw (a::c)\n+{\n+  static g h;\n+  i ();\n+  int l = 2;\n+  while (l)\n+    {\n+      --l;\n+      try\n+\t{\n+\t  operator new (b);\n+\t}\n+      catch (a::c)\n+\t{\n+\t}\n+    }\n+  i ().e ();\n+}"}]}