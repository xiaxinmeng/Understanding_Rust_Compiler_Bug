{"sha": "60ba917e16cb9106cb89a182690d5e8351bbf83e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiYTkxN2UxNmNiOTEwNmNiODlhMTgyNjkwZDVlODM1MWJiZjgzZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-04-07T20:13:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-04-07T20:13:29Z"}, "message": "rtl.texi (Comparison operations): Update to record the allowed comparison modes.\n\n\t* doc/rtl.texi (Comparison operations): Update to\n\trecord the allowed comparison modes.\n\nFrom-SVN: r65341", "tree": {"sha": "37554f760f121b41c90266e70a011b612ff72934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37554f760f121b41c90266e70a011b612ff72934"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60ba917e16cb9106cb89a182690d5e8351bbf83e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ba917e16cb9106cb89a182690d5e8351bbf83e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60ba917e16cb9106cb89a182690d5e8351bbf83e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60ba917e16cb9106cb89a182690d5e8351bbf83e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2abe3e28f3a30e4c8b26be31f7c1941cc79d4dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2abe3e28f3a30e4c8b26be31f7c1941cc79d4dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2abe3e28f3a30e4c8b26be31f7c1941cc79d4dfa"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "975d99eeb40c206c272c27ee79729ff0f49cfec3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ba917e16cb9106cb89a182690d5e8351bbf83e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ba917e16cb9106cb89a182690d5e8351bbf83e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60ba917e16cb9106cb89a182690d5e8351bbf83e", "patch": "@@ -1,3 +1,8 @@\n+2003-04-07  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* doc/rtl.texi (Comparison operations): Update to\n+\trecord the allowed comparison modes.\n+\n 2003-04-07  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/rs6000.c (rs6000_common_init_builtins): Rename all"}, {"sha": "da92b467f5f69f326345d000a738d5d8b5696650", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60ba917e16cb9106cb89a182690d5e8351bbf83e/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60ba917e16cb9106cb89a182690d5e8351bbf83e/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=60ba917e16cb9106cb89a182690d5e8351bbf83e", "patch": "@@ -1883,14 +1883,14 @@ mode.\n Comparison operators test a relation on two operands and are considered\n to represent a machine-dependent nonzero value described by, but not\n necessarily equal to, @code{STORE_FLAG_VALUE} (@pxref{Misc})\n-if the relation holds, or zero if it does not.  The mode of the\n-comparison operation is independent of the mode of the data being\n-compared.  If the comparison operation is being tested (e.g., the first\n-operand of an @code{if_then_else}), the mode must be @code{VOIDmode}.\n-If the comparison operation is producing data to be stored in some\n-variable, the mode must be in class @code{MODE_INT}.  All comparison\n-operations producing data must use the same mode, which is\n-machine-specific.\n+if the relation holds, or zero if it does not, for comparison operators\n+whose results have a `MODE_INT' mode, and\n+@code{FLOAT_STORE_FLAG_VALUE} (@pxref{Misc}) if the relation holds, or\n+zero if it does not, for comparison operators that return floating-point\n+values.  The mode of the comparison operation is independent of the mode\n+of the data being compared.  If the comparison operation is being tested\n+(e.g., the first operand of an @code{if_then_else}), the mode must be\n+@code{VOIDmode}.\n \n @cindex condition codes\n There are two ways that comparison operations may be used.  The"}]}