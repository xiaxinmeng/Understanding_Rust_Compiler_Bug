{"sha": "86d086ba048ec54762c1cb69589518e9db0e9651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkMDg2YmEwNDhlYzU0NzYyYzFjYjY5NTg5NTE4ZTlkYjBlOTY1MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-04-17T19:10:02Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-04-17T19:10:02Z"}, "message": "(HANDLE_PRAGMA): Expect/pass 2nd arg of NODE, not CH.\n\nFrom-SVN: r11839", "tree": {"sha": "1471de3fad356dfb0a541dbb99ea946ad4863097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1471de3fad356dfb0a541dbb99ea946ad4863097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86d086ba048ec54762c1cb69589518e9db0e9651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d086ba048ec54762c1cb69589518e9db0e9651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d086ba048ec54762c1cb69589518e9db0e9651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d086ba048ec54762c1cb69589518e9db0e9651/comments", "author": null, "committer": null, "parents": [{"sha": "141713de67817dc61539216886cbe5d6622c3ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141713de67817dc61539216886cbe5d6622c3ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141713de67817dc61539216886cbe5d6622c3ced"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "a5544d983f5289201f3b8210a7148c1d737e853f", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d086ba048ec54762c1cb69589518e9db0e9651/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d086ba048ec54762c1cb69589518e9db0e9651/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=86d086ba048ec54762c1cb69589518e9db0e9651", "patch": "@@ -1304,7 +1304,7 @@ do { char dstr[30];\t\t\t\t\t\\\n    text can be read.  CH is the first character after the #pragma.  The\n    result of the expression is the terminating character found\n    (newline or EOF).  */\n-#define HANDLE_PRAGMA(FILE, CH) handle_pragma (FILE, CH)\n+#define HANDLE_PRAGMA(FILE, NODE) handle_pragma (FILE, NODE)\n \n #define FINAL_PRESCAN_INSN(insn, operand, nop) final_prescan_insn (insn, operand,nop)\n "}, {"sha": "aa09de91cd7789d2ffe615d0cef6a6ad3aab94b6", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d086ba048ec54762c1cb69589518e9db0e9651/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d086ba048ec54762c1cb69589518e9db0e9651/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=86d086ba048ec54762c1cb69589518e9db0e9651", "patch": "@@ -119,7 +119,7 @@ Boston, MA 02111-1307, USA.  */\n   fprintf (asm_out_file, \"\\t.type\\t0x%x;\", (A & 0xf) + 2 * (A & ~0xf))\n \n /* Handle pragmas for compatibility with Intel's compilers.  */\n-#define HANDLE_PRAGMA(FILE, CH) process_pragma (FILE, CH)\n+#define HANDLE_PRAGMA(FILE, NODE) process_pragma (FILE, NODE)\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n "}, {"sha": "667bd2bf7ee2c898f4829fd87981fb62a5aa50c6", "filename": "gcc/config/nextstep.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d086ba048ec54762c1cb69589518e9db0e9651/gcc%2Fconfig%2Fnextstep.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d086ba048ec54762c1cb69589518e9db0e9651/gcc%2Fconfig%2Fnextstep.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnextstep.h?ref=86d086ba048ec54762c1cb69589518e9db0e9651", "patch": "@@ -240,8 +240,7 @@ Boston, MA 02111-1307, USA.  */\n /* How to parse #pragma's */\n \n #undef\tHANDLE_PRAGMA\n-#define HANDLE_PRAGMA(finput, ch) \\\n-  handle_pragma (finput, ch, &get_directive_line)\n+#define HANDLE_PRAGMA(FINPUT, NODE) handle_pragma (FINPUT, NODE)\n \n /* Give methods pretty symbol names on NeXT. */\n "}]}