{"sha": "3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ExNzk3NjQxYTViOGUwNmQzZDdiNDhlYTE2MjQwMjY0YWJhM2U5ZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-01-14T21:59:30Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-01-14T21:59:30Z"}, "message": "calls.c: Replace STRICT_ARGUMENT_NAMING in comments with...\n\n\t* calls.c: Replace STRICT_ARGUMENT_NAMING in comments with\n\ttargetm.calls.strict_argument_naming().\n\t* target.h: Likewise.\n\nFrom-SVN: r75886", "tree": {"sha": "d4da852b5e18eec4d64813a228f88334dbb80a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4da852b5e18eec4d64813a228f88334dbb80a8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/comments", "author": null, "committer": null, "parents": [{"sha": "0046e3428a76b0a99d37a250fcc116f632eb4c75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0046e3428a76b0a99d37a250fcc116f632eb4c75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0046e3428a76b0a99d37a250fcc116f632eb4c75"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "d661fd5c7fe7704650219fae270ada69ae0dd66b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "patch": "@@ -1,3 +1,9 @@\n+2004-01-14  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* calls.c: Replace STRICT_ARGUMENT_NAMING in comments with\n+\ttargetm.calls.strict_argument_naming().\n+\t* target.h: Likewise.\n+\n 2004-01-14  Richard Henderson  <rth@redhat.com>\n \n \tPR debug/13231"}, {"sha": "1be581cfa692f87465735420ce049cbc116e5154", "filename": "gcc/calls.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "patch": "@@ -2405,16 +2405,17 @@ expand_call (tree exp, rtx target, int ignore)\n \n   /* Compute number of named args.\n      Normally, don't include the last named arg if anonymous args follow.\n-     We do include the last named arg if STRICT_ARGUMENT_NAMING is nonzero.\n+     We do include the last named arg if\n+     targetm.calls.strict_argument_naming() returns nonzero.\n      (If no anonymous args follow, the result of list_length is actually\n      one too large.  This is harmless.)\n \n      If targetm.calls.pretend_outgoing_varargs_named() returns\n-     nonzero, and STRICT_ARGUMENT_NAMING is zero, this machine will be\n-     able to place unnamed args that were passed in registers into the\n-     stack.  So treat all args as named.  This allows the insns\n-     emitting for a specific argument list to be independent of the\n-     function declaration.\n+     nonzero, and targetm.calls.strict_argument_naming() returns zero,\n+     this machine will be able to place unnamed args that were passed\n+     in registers into the stack.  So treat all args as named.  This\n+     allows the insns emitting for a specific argument list to be\n+     independent of the function declaration.\n \n      If targetm.calls.pretend_outgoing_varargs_named() returns zero,\n      we do not have any reliable way to pass unnamed args in"}, {"sha": "f63b078aaf624419433633d942b4ff49570be91e", "filename": "gcc/target.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a1797641a5b8e06d3d7b48ea16240264aba3e9d/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=3a1797641a5b8e06d3d7b48ea16240264aba3e9d", "patch": "@@ -433,7 +433,7 @@ struct gcc_target\n \t\t\t\t    tree type, int *pretend_arg_size, int second_time);\n     bool (*strict_argument_naming) (CUMULATIVE_ARGS *ca);\n     /* Returns true if we should use SETUP_INCOMING_VARARGS and/or\n-       STRICT_ARGUMENT_NAMING.  */\n+       targetm.calls.strict_argument_naming().  */\n     bool (*pretend_outgoing_varargs_named) (CUMULATIVE_ARGS *ca);\n   } calls;\n };"}]}