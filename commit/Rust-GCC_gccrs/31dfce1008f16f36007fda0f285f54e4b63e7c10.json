{"sha": "31dfce1008f16f36007fda0f285f54e4b63e7c10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFkZmNlMTAwOGYxNmYzNjAwN2ZkYTBmMjg1ZjU0ZTRiNjNlN2MxMA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-06-28T10:56:27Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-06-28T10:56:27Z"}, "message": "arm.md (arm_mulsi3_v6): Add alternative for 16-bit encoding.\n\n2013-06-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (arm_mulsi3_v6): Add alternative for 16-bit\n\tencoding.\n\t(mulsi3addsi_v6): Disable predicable variant for arm_restrict_it.\n\t(mulsi3subsi): Likewise.\n\t(mulsidi3adddi): Likewise.\n\t(mulsidi3_v6): Likewise.\n\t(umulsidi3_v6): Likewise.\n\t(umulsidi3adddi_v6): Likewise.\n\t(smulsi3_highpart_v6): Likewise.\n\t(umulsi3_highpart_v6): Likewise.\n\t(mulhisi3tb): Likewise.\n\t(mulhisi3bt): Likewise.\n\t(mulhisi3tt): Likewise.\n\t(maddhisi4): Likewise.\n\t(maddhisi4tb): Likewise.\n\t(maddhisi4tt): Likewise.\n\t(maddhidi4): Likewise.\n\t(maddhidi4tb): Likewise.\n\t(maddhidi4tt): Likewise.\n\t(zeroextractsi_compare0_scratch): Likewise.\n\t(insv_zero): Likewise.\n\t(insv_t2): Likewise.\n\t(anddi_notzesidi_di): Likewise.\n\t(anddi_notsesidi_di): Likewise.\n\t(andsi_notsi_si): Likewise.\n\t(iordi_zesidi_di): Likewise.\n\t(xordi_zesidi_di): Likewise.\n\t(andsi_iorsi3_notsi): Likewise.\n\t(smax_0): Likewise.\n\t(smax_m1): Likewise.\n\t(smin_0): Likewise.\n\t(not_shiftsi): Likewise.\n\t(unaligned_loadsi): Likewise.\n\t(unaligned_loadhis): Likewise.\n\t(unaligned_loadhiu): Likewise.\n\t(unaligned_storesi): Likewise.\n\t(unaligned_storehi): Likewise.\n\t(extv_reg): Likewise.\n\t(extzv_t2): Likewise.\n\t(divsi3): Likewise.\n\t(udivsi3): Likewise.\n\t(arm_zero_extendhisi2addsi): Likewise.\n\t(arm_zero_extendqisi2addsi): Likewise.\n\t(compareqi_eq0): Likewise.\n\t(arm_extendhisi2_v6): Likewise.\n\t(arm_extendqisi2addsi): Likewise.\n\t(arm_movt): Likewise.\n\t(thumb2_ldrd): Likewise.\n\t(thumb2_ldrd_base): Likewise.\n\t(thumb2_ldrd_base_neg): Likewise.\n\t(thumb2_strd): Likewise.\n\t(thumb2_strd_base): Likewise.\n\t(thumb2_strd_base_neg): Likewise.\n\t(arm_negsi2): Add alternative for 16-bit encoding.\n\t(arm_one_cmplsi2): Likewise.\n\nFrom-SVN: r200513", "tree": {"sha": "c49a7c097712eda4e34845be899e6b3d0cb4d874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c49a7c097712eda4e34845be899e6b3d0cb4d874"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31dfce1008f16f36007fda0f285f54e4b63e7c10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31dfce1008f16f36007fda0f285f54e4b63e7c10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31dfce1008f16f36007fda0f285f54e4b63e7c10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31dfce1008f16f36007fda0f285f54e4b63e7c10/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee429bdfe0a07195e96d5343bf534fc2e1753613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee429bdfe0a07195e96d5343bf534fc2e1753613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee429bdfe0a07195e96d5343bf534fc2e1753613"}], "stats": {"total": 224, "additions": 171, "deletions": 53}, "files": [{"sha": "bd6d724dabd595446aaf32010a4ea85a7a467043", "filename": "gcc/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31dfce1008f16f36007fda0f285f54e4b63e7c10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31dfce1008f16f36007fda0f285f54e4b63e7c10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31dfce1008f16f36007fda0f285f54e4b63e7c10", "patch": "@@ -1,3 +1,61 @@\n+2013-06-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (arm_mulsi3_v6): Add alternative for 16-bit\n+\tencoding.\n+\t(mulsi3addsi_v6): Disable predicable variant for arm_restrict_it.\n+\t(mulsi3subsi): Likewise.\n+\t(mulsidi3adddi): Likewise.\n+\t(mulsidi3_v6): Likewise.\n+\t(umulsidi3_v6): Likewise.\n+\t(umulsidi3adddi_v6): Likewise.\n+\t(smulsi3_highpart_v6): Likewise.\n+\t(umulsi3_highpart_v6): Likewise.\n+\t(mulhisi3tb): Likewise.\n+\t(mulhisi3bt): Likewise.\n+\t(mulhisi3tt): Likewise.\n+\t(maddhisi4): Likewise.\n+\t(maddhisi4tb): Likewise.\n+\t(maddhisi4tt): Likewise.\n+\t(maddhidi4): Likewise.\n+\t(maddhidi4tb): Likewise.\n+\t(maddhidi4tt): Likewise.\n+\t(zeroextractsi_compare0_scratch): Likewise.\n+\t(insv_zero): Likewise.\n+\t(insv_t2): Likewise.\n+\t(anddi_notzesidi_di): Likewise.\n+\t(anddi_notsesidi_di): Likewise.\n+\t(andsi_notsi_si): Likewise.\n+\t(iordi_zesidi_di): Likewise.\n+\t(xordi_zesidi_di): Likewise.\n+\t(andsi_iorsi3_notsi): Likewise.\n+\t(smax_0): Likewise.\n+\t(smax_m1): Likewise.\n+\t(smin_0): Likewise.\n+\t(not_shiftsi): Likewise.\n+\t(unaligned_loadsi): Likewise.\n+\t(unaligned_loadhis): Likewise.\n+\t(unaligned_loadhiu): Likewise.\n+\t(unaligned_storesi): Likewise.\n+\t(unaligned_storehi): Likewise.\n+\t(extv_reg): Likewise.\n+\t(extzv_t2): Likewise.\n+\t(divsi3): Likewise.\n+\t(udivsi3): Likewise.\n+\t(arm_zero_extendhisi2addsi): Likewise.\n+\t(arm_zero_extendqisi2addsi): Likewise.\n+\t(compareqi_eq0): Likewise.\n+\t(arm_extendhisi2_v6): Likewise.\n+\t(arm_extendqisi2addsi): Likewise.\n+\t(arm_movt): Likewise.\n+\t(thumb2_ldrd): Likewise.\n+\t(thumb2_ldrd_base): Likewise.\n+\t(thumb2_ldrd_base_neg): Likewise.\n+\t(thumb2_strd): Likewise.\n+\t(thumb2_strd_base): Likewise.\n+\t(thumb2_strd_base_neg): Likewise.\n+\t(arm_negsi2): Add alternative for 16-bit encoding.\n+\t(arm_one_cmplsi2): Likewise.\n+\n 2013-06-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/predicates.md (arm_cond_move_operator): New predicate."}, {"sha": "ff32cad8d23aa48762951a3fed96e3bed4639b43", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 113, "deletions": 53, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31dfce1008f16f36007fda0f285f54e4b63e7c10/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31dfce1008f16f36007fda0f285f54e4b63e7c10/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=31dfce1008f16f36007fda0f285f54e4b63e7c10", "patch": "@@ -1565,13 +1565,16 @@\n )\n \n (define_insn \"*arm_mulsi3_v6\"\n-  [(set (match_operand:SI          0 \"s_register_operand\" \"=r\")\n-\t(mult:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n-\t\t (match_operand:SI 2 \"s_register_operand\" \"r\")))]\n+  [(set (match_operand:SI          0 \"s_register_operand\" \"=l,l,r\")\n+\t(mult:SI (match_operand:SI 1 \"s_register_operand\" \"0,l,r\")\n+\t\t (match_operand:SI 2 \"s_register_operand\" \"l,0,r\")))]\n   \"TARGET_32BIT && arm_arch6\"\n   \"mul%?\\\\t%0, %1, %2\"\n   [(set_attr \"type\" \"mul\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"arch\" \"t2,t2,*\")\n+   (set_attr \"length\" \"4\")\n+   (set_attr \"predicable_short_it\" \"yes,yes,no\")]\n )\n \n ; Unfortunately with the Thumb the '&'/'0' trick can fails when operands \n@@ -1684,7 +1687,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"mla%?\\\\t%0, %2, %1, %3\"\n   [(set_attr \"type\" \"mla\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*mulsi3addsi_compare0\"\n@@ -1760,7 +1764,8 @@\n   \"TARGET_32BIT && arm_arch_thumb2\"\n   \"mls%?\\\\t%0, %2, %1, %3\"\n   [(set_attr \"type\" \"mla\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"maddsidi4\"\n@@ -1796,7 +1801,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"smlal%?\\\\t%Q0, %R0, %3, %2\"\n   [(set_attr \"type\" \"smlal\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n ;; 32x32->64 widening multiply.\n@@ -1833,7 +1839,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"smull%?\\\\t%Q0, %R0, %1, %2\"\n   [(set_attr \"type\" \"smull\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"umulsidi3\"\n@@ -1864,7 +1871,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"umull%?\\\\t%Q0, %R0, %1, %2\"\n   [(set_attr \"type\" \"umull\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"umaddsidi4\"\n@@ -1900,7 +1908,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"umlal%?\\\\t%Q0, %R0, %3, %2\"\n   [(set_attr \"type\" \"umlal\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"smulsi3_highpart\"\n@@ -1944,7 +1953,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"smull%?\\\\t%3, %0, %2, %1\"\n   [(set_attr \"type\" \"smull\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"umulsi3_highpart\"\n@@ -1988,7 +1998,8 @@\n   \"TARGET_32BIT && arm_arch6\"\n   \"umull%?\\\\t%3, %0, %2, %1\"\n   [(set_attr \"type\" \"umull\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"mulhisi3\"\n@@ -2013,7 +2024,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smultb%?\\\\t%0, %1, %2\"\n   [(set_attr \"type\" \"smulxy\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*mulhisi3bt\"\n@@ -2026,7 +2038,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smulbt%?\\\\t%0, %1, %2\"\n   [(set_attr \"type\" \"smulxy\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*mulhisi3tt\"\n@@ -2040,7 +2053,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smultt%?\\\\t%0, %1, %2\"\n   [(set_attr \"type\" \"smulxy\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"maddhisi4\"\n@@ -2053,7 +2067,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlabb%?\\\\t%0, %1, %2, %3\"\n   [(set_attr \"type\" \"smlaxy\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n ;; Note: there is no maddhisi4ibt because this one is canonical form\n@@ -2068,7 +2083,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlatb%?\\\\t%0, %1, %2, %3\"\n   [(set_attr \"type\" \"smlaxy\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*maddhisi4tt\"\n@@ -2083,21 +2099,23 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlatt%?\\\\t%0, %1, %2, %3\"\n   [(set_attr \"type\" \"smlaxy\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"maddhidi4\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=r\")\n \t(plus:DI\n \t  (mult:DI (sign_extend:DI\n-\t \t    (match_operand:HI 1 \"s_register_operand\" \"r\"))\n+\t\t    (match_operand:HI 1 \"s_register_operand\" \"r\"))\n \t\t   (sign_extend:DI\n \t\t    (match_operand:HI 2 \"s_register_operand\" \"r\")))\n \t  (match_operand:DI 3 \"s_register_operand\" \"0\")))]\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlalbb%?\\\\t%Q0, %R0, %1, %2\"\n   [(set_attr \"type\" \"smlalxy\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n ;; Note: there is no maddhidi4ibt because this one is canonical form\n (define_insn \"*maddhidi4tb\"\n@@ -2113,7 +2131,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlaltb%?\\\\t%Q0, %R0, %1, %2\"\n   [(set_attr \"type\" \"smlalxy\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_insn \"*maddhidi4tt\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=r\")\n@@ -2130,7 +2149,8 @@\n   \"TARGET_DSP_MULTIPLY\"\n   \"smlaltt%?\\\\t%Q0, %R0, %1, %2\"\n   [(set_attr \"type\" \"smlalxy\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_expand \"mulsf3\"\n   [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n@@ -2486,7 +2506,7 @@\n   [(set (reg:CC_NOOV CC_REGNUM)\n \t(compare:CC_NOOV (zero_extract:SI\n \t\t\t  (match_operand:SI 0 \"s_register_operand\" \"r\")\n-\t\t \t  (match_operand 1 \"const_int_operand\" \"n\")\n+\t\t\t  (match_operand 1 \"const_int_operand\" \"n\")\n \t\t\t  (match_operand 2 \"const_int_operand\" \"n\"))\n \t\t\t (const_int 0)))]\n   \"TARGET_32BIT\n@@ -2502,6 +2522,7 @@\n   \"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"simple_alu_imm\")]\n )\n \n@@ -2929,7 +2950,8 @@\n   \"arm_arch_thumb2\"\n   \"bfc%?\\t%0, %2, %1\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"insv_t2\"\n@@ -2940,7 +2962,8 @@\n   \"arm_arch_thumb2\"\n   \"bfi%?\\t%0, %3, %2, %1\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n ; constants for op 2 will never be given to these patterns.\n@@ -2967,7 +2990,7 @@\n   [(set_attr \"length\" \"8\")\n    (set_attr \"predicable\" \"yes\")]\n )\n-  \n+\n (define_insn_and_split \"*anddi_notzesidi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(and:DI (not:DI (zero_extend:DI\n@@ -2992,9 +3015,10 @@\n     operands[1] = gen_lowpart (SImode, operands[1]);\n   }\"\n   [(set_attr \"length\" \"4,8\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n-  \n+\n (define_insn_and_split \"*anddi_notsesidi_di\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n \t(and:DI (not:DI (sign_extend:DI\n@@ -3015,16 +3039,18 @@\n     operands[1] = gen_lowpart (SImode, operands[1]);\n   }\"\n   [(set_attr \"length\" \"8\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n-  \n+\n (define_insn \"andsi_notsi_si\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(and:SI (not:SI (match_operand:SI 2 \"s_register_operand\" \"r\"))\n \t\t(match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_32BIT\"\n   \"bic%?\\\\t%0, %1, %2\"\n-  [(set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"thumb1_bicsi3\"\n@@ -3137,7 +3163,8 @@\n    orr%?\\\\t%Q0, %Q1, %2\n    #\"\n   [(set_attr \"length\" \"4,8\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*iordi_sesidi_di\"\n@@ -3312,7 +3339,8 @@\n    eor%?\\\\t%Q0, %Q1, %2\n    #\"\n   [(set_attr \"length\" \"4,8\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*xordi_sesidi_di\"\n@@ -3442,7 +3470,8 @@\n   \"\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"ce_count\" \"2\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n ; ??? Are these four splitters still beneficial when the Thumb-2 bitfield\n@@ -3578,7 +3607,8 @@\n \t\t (const_int 0)))]\n   \"TARGET_32BIT\"\n   \"bic%?\\\\t%0, %1, %1, asr #31\"\n-  [(set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"*smax_m1\"\n@@ -3587,7 +3617,8 @@\n \t\t (const_int -1)))]\n   \"TARGET_32BIT\"\n   \"orr%?\\\\t%0, %1, %1, asr #31\"\n-  [(set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn_and_split \"*arm_smax_insn\"\n@@ -3635,7 +3666,8 @@\n \t\t (const_int 0)))]\n   \"TARGET_32BIT\"\n   \"and%?\\\\t%0, %1, %1, asr #31\"\n-  [(set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn_and_split \"*arm_smin_insn\"\n@@ -4310,6 +4342,7 @@\n   \"TARGET_32BIT\"\n   \"mvn%?\\\\t%0, %1%S3\"\n   [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"shift\" \"1\")\n    (set_attr \"insn\" \"mvn\")\n    (set_attr \"arch\" \"32,a\")\n@@ -4523,6 +4556,7 @@\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n    (set_attr \"type\" \"load1\")])\n \n (define_insn \"unaligned_loadhis\"\n@@ -4535,6 +4569,7 @@\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n    (set_attr \"type\" \"load_byte\")])\n \n (define_insn \"unaligned_loadhiu\"\n@@ -4547,6 +4582,7 @@\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n    (set_attr \"type\" \"load_byte\")])\n \n (define_insn \"unaligned_storesi\"\n@@ -4558,6 +4594,7 @@\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n    (set_attr \"type\" \"store1\")])\n \n (define_insn \"unaligned_storehi\"\n@@ -4569,6 +4606,7 @@\n   [(set_attr \"arch\" \"t2,any\")\n    (set_attr \"length\" \"2,4\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n    (set_attr \"type\" \"store1\")])\n \n ;; Unaligned double-word load and store.\n@@ -4637,7 +4675,8 @@\n   \"arm_arch_thumb2\"\n   \"sbfx%?\\t%0, %1, %3, %2\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_insn \"extzv_t2\"\n@@ -4648,7 +4687,8 @@\n   \"arm_arch_thumb2\"\n   \"ubfx%?\\t%0, %1, %3, %2\"\n   [(set_attr \"length\" \"4\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n \n@@ -4660,6 +4700,7 @@\n   \"TARGET_IDIV\"\n   \"sdiv%?\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"sdiv\")]\n )\n \n@@ -4670,6 +4711,7 @@\n   \"TARGET_IDIV\"\n   \"udiv%?\\t%0, %1, %2\"\n   [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"type\" \"udiv\")]\n )\n \n@@ -4732,11 +4774,14 @@\n )\n \n (define_insn \"*arm_negsi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n-\t(neg:SI (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=l,r\")\n+\t(neg:SI (match_operand:SI 1 \"s_register_operand\" \"l,r\")))]\n   \"TARGET_32BIT\"\n   \"rsb%?\\\\t%0, %1, #0\"\n-  [(set_attr \"predicable\" \"yes\")]\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n+   (set_attr \"arch\" \"t2,*\")\n+   (set_attr \"length\" \"4\")]\n )\n \n (define_insn \"*thumb1_negsi2\"\n@@ -5054,11 +5099,14 @@\n )\n \n (define_insn \"*arm_one_cmplsi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n-\t(not:SI (match_operand:SI 1 \"s_register_operand\"  \"r\")))]\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=l,r\")\n+\t(not:SI (match_operand:SI 1 \"s_register_operand\"  \"l,r\")))]\n   \"TARGET_32BIT\"\n   \"mvn%?\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"yes,no\")\n+   (set_attr \"arch\" \"t2,*\")\n+   (set_attr \"length\" \"4\")\n    (set_attr \"insn\" \"mvn\")]\n )\n \n@@ -5384,7 +5432,8 @@\n   \"TARGET_INT_SIMD\"\n   \"uxtah%?\\\\t%0, %2, %1\"\n   [(set_attr \"type\" \"alu_shift\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"zero_extendqisi2\"\n@@ -5477,6 +5526,7 @@\n   \"TARGET_INT_SIMD\"\n   \"uxtab%?\\\\t%0, %2, %1\"\n   [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"insn\" \"xtab\")\n    (set_attr \"type\" \"alu_shift\")]\n )\n@@ -5529,7 +5579,8 @@\n   \"TARGET_32BIT\"\n   \"tst%?\\\\t%0, #255\"\n   [(set_attr \"conds\" \"set\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_expand \"extendhisi2\"\n@@ -5715,6 +5766,7 @@\n    ldr%(sh%)\\\\t%0, %1\"\n   [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"pool_range\" \"*,256\")\n    (set_attr \"neg_pool_range\" \"*,244\")]\n )\n@@ -5827,7 +5879,8 @@\n   \"sxtab%?\\\\t%0, %2, %1\"\n   [(set_attr \"type\" \"alu_shift\")\n    (set_attr \"insn\" \"xtab\")\n-   (set_attr \"predicable\" \"yes\")]\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")]\n )\n \n (define_split\n@@ -6283,6 +6336,7 @@\n   \"arm_arch_thumb2\"\n   \"movt%?\\t%0, #:upper16:%c2\"\n   [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")\n    (set_attr \"length\" \"4\")]\n )\n \n@@ -12586,7 +12640,8 @@\n                                   false, true))\"\n   \"ldrd%?\\t%0, %3, [%1, %2]\"\n   [(set_attr \"type\" \"load2\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_insn \"*thumb2_ldrd_base\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n@@ -12600,7 +12655,8 @@\n                                   operands[1], 0, false, true))\"\n   \"ldrd%?\\t%0, %2, [%1]\"\n   [(set_attr \"type\" \"load2\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_insn \"*thumb2_ldrd_base_neg\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n@@ -12614,7 +12670,8 @@\n                                   operands[1], -4, false, true))\"\n   \"ldrd%?\\t%0, %2, [%1, #-4]\"\n   [(set_attr \"type\" \"load2\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_insn \"*thumb2_strd\"\n   [(set (mem:SI (plus:SI (match_operand:SI 0 \"s_register_operand\" \"rk\")\n@@ -12631,7 +12688,8 @@\n                                   false, false))\"\n   \"strd%?\\t%2, %4, [%0, %1]\"\n   [(set_attr \"type\" \"store2\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_insn \"*thumb2_strd_base\"\n   [(set (mem:SI (match_operand:SI 0 \"s_register_operand\" \"rk\"))\n@@ -12645,7 +12703,8 @@\n                                   operands[0], 0, false, false))\"\n   \"strd%?\\t%1, %2, [%0]\"\n   [(set_attr \"type\" \"store2\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n (define_insn \"*thumb2_strd_base_neg\"\n   [(set (mem:SI (plus:SI (match_operand:SI 0 \"s_register_operand\" \"rk\")\n@@ -12659,7 +12718,8 @@\n                                   operands[0], -4, false, false))\"\n   \"strd%?\\t%1, %2, [%0, #-4]\"\n   [(set_attr \"type\" \"store2\")\n-   (set_attr \"predicable\" \"yes\")])\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"predicable_short_it\" \"no\")])\n \n \n ;; Load the load/store double peephole optimizations."}]}