{"sha": "d98668eb06f532b2dbe0c721fa1b9ed6e643df27", "node_id": "C_kwDOANBUbNoAKGQ5ODY2OGViMDZmNTMyYjJkYmUwYzcyMWZhMWI5ZWQ2ZTY0M2RmMjc", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-01T23:58:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-02-02T00:01:43Z"}, "message": "libstdc++: Do not use dirent::d_type unconditionally\n\nThese new tests should not use the d_type member unless it's actually\npresent on the OS.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/27_io/filesystem/iterators/error_reporting.cc: Use\n\tautoconf macro to check whether d_type is present.\n\t* testsuite/experimental/filesystem/iterators/error_reporting.cc:\n\tLikewise.", "tree": {"sha": "c1b6d024a70a473c0178dd38415d0c8e80a79c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1b6d024a70a473c0178dd38415d0c8e80a79c29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d98668eb06f532b2dbe0c721fa1b9ed6e643df27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d98668eb06f532b2dbe0c721fa1b9ed6e643df27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d98668eb06f532b2dbe0c721fa1b9ed6e643df27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d98668eb06f532b2dbe0c721fa1b9ed6e643df27/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c17975d81aaed49ff759c20c68b31304a6953d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17975d81aaed49ff759c20c68b31304a6953d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c17975d81aaed49ff759c20c68b31304a6953d58"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "1f297a731a374692cacbbdf2ea788f61e4b8f996", "filename": "libstdc++-v3/testsuite/27_io/filesystem/iterators/error_reporting.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d98668eb06f532b2dbe0c721fa1b9ed6e643df27/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Ferror_reporting.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d98668eb06f532b2dbe0c721fa1b9ed6e643df27/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Ferror_reporting.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Ferror_reporting.cc?ref=d98668eb06f532b2dbe0c721fa1b9ed6e643df27", "patch": "@@ -36,14 +36,18 @@ extern \"C\" struct dirent* readdir(DIR*)\n   {\n   case 1:\n     global_dirent.d_ino = 999;\n+#if defined _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE && defined DT_REG\n     global_dirent.d_type = DT_REG;\n+#endif\n     global_dirent.d_reclen = 0;\n     std::char_traits<char>::copy(global_dirent.d_name, \"file\", 5);\n     choice = 0;\n     return &global_dirent;\n   case 2:\n     global_dirent.d_ino = 111;\n+#if defined _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE && defined DT_DIR\n     global_dirent.d_type = DT_DIR;\n+#endif\n     global_dirent.d_reclen = 60;\n     std::char_traits<char>::copy(global_dirent.d_name, \"subdir\", 7);\n     choice = 1;"}, {"sha": "806c511ebefc8e2ccdab6ac058452a3c5690a248", "filename": "libstdc++-v3/testsuite/experimental/filesystem/iterators/error_reporting.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d98668eb06f532b2dbe0c721fa1b9ed6e643df27/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Ferror_reporting.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d98668eb06f532b2dbe0c721fa1b9ed6e643df27/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Ferror_reporting.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fiterators%2Ferror_reporting.cc?ref=d98668eb06f532b2dbe0c721fa1b9ed6e643df27", "patch": "@@ -37,14 +37,18 @@ extern \"C\" struct dirent* readdir(DIR*)\n   {\n   case 1:\n     global_dirent.d_ino = 999;\n+#if defined _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE && defined DT_REG\n     global_dirent.d_type = DT_REG;\n+#endif\n     global_dirent.d_reclen = 0;\n     std::char_traits<char>::copy(global_dirent.d_name, \"file\", 5);\n     choice = 0;\n     return &global_dirent;\n   case 2:\n     global_dirent.d_ino = 111;\n+#if defined _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE && defined DT_DIR\n     global_dirent.d_type = DT_DIR;\n+#endif\n     global_dirent.d_reclen = 60;\n     std::char_traits<char>::copy(global_dirent.d_name, \"subdir\", 7);\n     choice = 1;"}]}