{"sha": "2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "node_id": "C_kwDOANBUbNoAKDJmZjBlNjIyNzViMWMzMjJhOGI2NWYzOGY4MzM2ZjM3ZDMxYzMwZTQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-03T09:17:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-03T11:32:43Z"}, "message": "libstdc++: Add missing move in ranges::copy\n\nThis is needed to support a move-only output iterator when the input\niterators are specializations of __normal_iterator.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/ranges_algobase.h (__detail::__copy_or_move):\n\tMove output iterator.\n\t* testsuite/25_algorithms/copy/constrained.cc: Check copying to\n\tmove-only output iterator.", "tree": {"sha": "cb8797071a6d50e0f2f75f975086a4b5d4312a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8797071a6d50e0f2f75f975086a4b5d4312a2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ff0e62275b1c322a8b65f38f8336f37d31c30e4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f95e4eced20666a981881f76d66d997922648687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95e4eced20666a981881f76d66d997922648687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95e4eced20666a981881f76d66d997922648687"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "443ad52ecc62daaad82833e5fe37d4c96316e0ab", "filename": "libstdc++-v3/include/bits/ranges_algobase.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff0e62275b1c322a8b65f38f8336f37d31c30e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff0e62275b1c322a8b65f38f8336f37d31c30e4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_algobase.h?ref=2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "patch": "@@ -239,7 +239,7 @@ namespace ranges\n \t{\n \t  auto [__in,__out]\n \t    = ranges::__copy_or_move<_IsMove>(__first.base(), __last.base(),\n-\t\t\t\t\t      __result);\n+\t\t\t\t\t      std::move(__result));\n \t  return {decltype(__first){__in}, std::move(__out)};\n \t}\n       else if constexpr (__is_normal_iterator<_Out>)"}, {"sha": "444dfa78894095d4cfcc16f93b27cbe1e07e006c", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/constrained.cc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ff0e62275b1c322a8b65f38f8336f37d31c30e4/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Fconstrained.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ff0e62275b1c322a8b65f38f8336f37d31c30e4/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Fconstrained.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Fconstrained.cc?ref=2ff0e62275b1c322a8b65f38f8336f37d31c30e4", "patch": "@@ -226,6 +226,29 @@ test06()\n   VERIFY( ranges::equal(v, (int[]){1,2,3,0}) );\n }\n \n+void\n+test07()\n+{\n+  struct move_only_output_iterator\n+  {\n+    using value_type = int;\n+    using difference_type = short;\n+    using iterator_category = std::output_iterator_tag;\n+\n+    move_only_output_iterator() = default;\n+    move_only_output_iterator(move_only_output_iterator&&) = default;\n+    move_only_output_iterator& operator=(move_only_output_iterator&&) = default;\n+\n+    move_only_output_iterator& operator*() { return *this; }\n+    move_only_output_iterator& operator++() { return *this; }\n+    move_only_output_iterator operator++(int) { return std::move(*this); }\n+\n+    void operator=(int) { }\n+  };\n+\n+  ranges::copy(std::vector<int>{1,2,3}, move_only_output_iterator{});\n+}\n+\n int\n main()\n {\n@@ -235,4 +258,5 @@ main()\n   test04();\n   static_assert(test05());\n   test06();\n+  test07();\n }"}]}