{"sha": "0370f61a541ef2c41fafb788facd2b1de67c317c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM3MGY2MWE1NDFlZjJjNDFmYWZiNzg4ZmFjZDJiMWRlNjdjMzE3Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-08-27T15:19:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-08-27T15:19:23Z"}, "message": "re PR libstdc++/28830 (FAIL: tr1/2_general_utilities/memory/shared_ptr/thread/lockfree_weaktoshared.cc)\n\n2006-08-27  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/28830\n\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/\n\tlockfree_weaktoshared.cc: Rename to...\n\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/\n\tdefault_weaktoshared.cc: ... this; test the default base class.\n\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/\n\tmutex_weaktoshared.cc: Run like the other thread tests.\n\nFrom-SVN: r116489", "tree": {"sha": "b51fe68403785bcf6bfc22ea3eb8205f0b8824f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b51fe68403785bcf6bfc22ea3eb8205f0b8824f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0370f61a541ef2c41fafb788facd2b1de67c317c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0370f61a541ef2c41fafb788facd2b1de67c317c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0370f61a541ef2c41fafb788facd2b1de67c317c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0370f61a541ef2c41fafb788facd2b1de67c317c/comments", "author": null, "committer": null, "parents": [{"sha": "69b3f75b43711fcdf578070c3201e1e954ab70cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69b3f75b43711fcdf578070c3201e1e954ab70cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69b3f75b43711fcdf578070c3201e1e954ab70cc"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "843e5fccfbf36be3b74472b9156ca32d9620921a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0370f61a541ef2c41fafb788facd2b1de67c317c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0370f61a541ef2c41fafb788facd2b1de67c317c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0370f61a541ef2c41fafb788facd2b1de67c317c", "patch": "@@ -1,3 +1,13 @@\n+2006-08-27  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/28830\n+\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/\n+\tlockfree_weaktoshared.cc: Rename to...\n+\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/\n+\tdefault_weaktoshared.cc: ... this; test the default base class.\n+\t* testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/\n+\tmutex_weaktoshared.cc: Run like the other thread tests.\n+\n 2006-08-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* docs/html/ext/tr1.html: Update."}, {"sha": "5b17500165f3811dc6b65316d3d5234f1521bcb0", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/default_weaktoshared.cc", "status": "renamed", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0370f61a541ef2c41fafb788facd2b1de67c317c/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0370f61a541ef2c41fafb788facd2b1de67c317c/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fthread%2Fdefault_weaktoshared.cc?ref=0370f61a541ef2c41fafb788facd2b1de67c317c", "patch": "@@ -19,12 +19,9 @@\n // TR1 2.2.2 Template class shared_ptr [tr.util.smartptr.shared]\n \n // { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n-// { dg-options \"-march=i586 -pthread\" { target { {*-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf*} && { *i686*-*-* *i586*-*-* *athlon*-*-* *pentium4*-*-* *opteron*-*-* *k8*-*-* } } } }\n-// { dg-options \"-pthread\" { target { {*-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf*} && { ! { *i686*-*-* *i586*-*-* *athlon*-*-* *pentium4*-*-* *opteron*-*-* *k8*-*-* } } } } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n-// Lock-free compare-and-swap is only available on newer x86 machines.\n-\n #include <tr1/memory>\n #include <tr1/random>\n #include <vector>\n@@ -66,10 +63,8 @@ struct A\n \n _Atomic_word A::counter = 0;\n \n-using std::tr1::_S_lockfree;\n-\n-typedef std::tr1::__shared_ptr<A, _S_lockfree> sp_A_t;\n-typedef std::tr1::__weak_ptr<A, _S_lockfree> wp_A_t;\n+typedef std::tr1::shared_ptr<A> sp_A_t;\n+typedef std::tr1::weak_ptr<A> wp_A_t;\n \n typedef std::vector<sp_A_t> sp_vector_t;\n typedef std::vector<wp_A_t> wp_vector_t;", "previous_filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/lockfree_weaktoshared.cc"}, {"sha": "370218a11368882e1b88090271935b69d95c00fb", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/memory/shared_ptr/thread/mutex_weaktoshared.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0370f61a541ef2c41fafb788facd2b1de67c317c/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0370f61a541ef2c41fafb788facd2b1de67c317c/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fmemory%2Fshared_ptr%2Fthread%2Fmutex_weaktoshared.cc?ref=0370f61a541ef2c41fafb788facd2b1de67c317c", "patch": "@@ -19,12 +19,9 @@\n // TR1 2.2.2 Template class shared_ptr [tr.util.smartptr.shared]\n \n // { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n-// { dg-options \"-march=i586 -pthread\" { target { {*-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf*} && { *i686*-*-* *i586*-*-* *athlon*-*-* *pentium4*-*-* *opteron*-*-* *k8*-*-* } } } }\n-// { dg-options \"-pthread\" { target { {*-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf*} && { ! { *i686*-*-* *i586*-*-* *athlon*-*-* *pentium4*-*-* *opteron*-*-* *k8*-*-* } } } } }\n+// { dg-options \"-pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* alpha*-*-osf* } }\n // { dg-options \"-pthreads\" { target *-*-solaris* } }\n \n-// Lock-free compare-and-swap is only available on newer x86 machines.\n-\n #include <tr1/memory>\n #include <tr1/random>\n #include <vector>"}]}