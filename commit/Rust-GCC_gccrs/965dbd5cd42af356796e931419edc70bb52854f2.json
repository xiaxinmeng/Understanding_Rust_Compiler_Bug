{"sha": "965dbd5cd42af356796e931419edc70bb52854f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY1ZGJkNWNkNDJhZjM1Njc5NmU5MzE0MTllZGM3MGJiNTI4NTRmMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T10:13:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T10:13:44Z"}, "message": "Revert previous change.\n\nFrom-SVN: r147166", "tree": {"sha": "330f088031f5a97cd7c1af94dc6cf9753624fa1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/330f088031f5a97cd7c1af94dc6cf9753624fa1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/965dbd5cd42af356796e931419edc70bb52854f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965dbd5cd42af356796e931419edc70bb52854f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/965dbd5cd42af356796e931419edc70bb52854f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965dbd5cd42af356796e931419edc70bb52854f2/comments", "author": null, "committer": null, "parents": [{"sha": "895225568c89bc48d317b258c6fc2dbd56697dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895225568c89bc48d317b258c6fc2dbd56697dd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/895225568c89bc48d317b258c6fc2dbd56697dd0"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "34ad94f0cd91ef4817201be32538ac41893909ac", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965dbd5cd42af356796e931419edc70bb52854f2/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965dbd5cd42af356796e931419edc70bb52854f2/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=965dbd5cd42af356796e931419edc70bb52854f2", "patch": "@@ -3071,20 +3071,26 @@ package body Sem_Aggr is\n             Parent_Typ_List := New_Elmt_List;\n \n             --  If this is an extension aggregate, the component list must\n-            --  include all components that are not in the given ancestor\n-            --  type. Otherwise, the component list must include components\n-            --  of all ancestors, starting with the root.\n+            --  include all components that are not in the given ancestor type.\n+            --  Otherwise, the component list must include components of all\n+            --  ancestors, starting with the root.\n \n             if Nkind (N) = N_Extension_Aggregate then\n \n+               --  Handle case where ancestor part is a C++ constructor. In\n+               --  this case it must be a function returning a class-wide type.\n                --  If the ancestor part is a C++ constructor, then it must be a\n-               --  function returning a class-wide type, so check that here.\n+               --  function returning a class-wide type, so handle that here.\n \n-               pragma Assert\n-                 (not Is_CPP_Constructor_Call (Ancestor_Part (N))\n-                    or else Is_Class_Wide_Type (Etype (Ancestor_Part (N))));\n+               if Is_CPP_Constructor_Call (Ancestor_Part (N)) then\n+                  pragma Assert\n+                    (Is_Class_Wide_Type (Etype (Ancestor_Part (N))));\n+                  Root_Typ := Root_Type (Etype (Ancestor_Part (N)));\n \n-               Root_Typ := Base_Type (Etype (Ancestor_Part (N)));\n+               --  Normal case, not a C++ constructor\n+               else\n+                  Root_Typ := Base_Type (Etype (Ancestor_Part (N)));\n+               end if;\n \n             else\n                Root_Typ := Root_Type (Typ);"}]}