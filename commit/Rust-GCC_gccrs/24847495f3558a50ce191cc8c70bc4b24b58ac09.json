{"sha": "24847495f3558a50ce191cc8c70bc4b24b58ac09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4NDc0OTVmMzU1OGE1MGNlMTkxY2M4YzcwYmM0YjI0YjU4YWMwOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-10-26T19:31:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-10-26T19:31:26Z"}, "message": "* typeck.c (check_literal_operator_args): Avoid building types.\n\nFrom-SVN: r180538", "tree": {"sha": "26e06fbab5874f96fc25021e68ccb7caddad3290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26e06fbab5874f96fc25021e68ccb7caddad3290"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24847495f3558a50ce191cc8c70bc4b24b58ac09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24847495f3558a50ce191cc8c70bc4b24b58ac09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24847495f3558a50ce191cc8c70bc4b24b58ac09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24847495f3558a50ce191cc8c70bc4b24b58ac09/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ca3916f5688863f49976febd57b1a9640d1c71a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca3916f5688863f49976febd57b1a9640d1c71a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca3916f5688863f49976febd57b1a9640d1c71a"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "3f4455eb6afb19b14fba8b647d344730f9c7d633", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24847495f3558a50ce191cc8c70bc4b24b58ac09/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24847495f3558a50ce191cc8c70bc4b24b58ac09/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=24847495f3558a50ce191cc8c70bc4b24b58ac09", "patch": "@@ -1,3 +1,7 @@\n+2011-10-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* typeck.c (check_literal_operator_args): Avoid building types.\n+\n 2011-10-26  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement C++11 user-defined literals."}, {"sha": "ec14934a8232ccd6b1e92ab2507566e201d438c5", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24847495f3558a50ce191cc8c70bc4b24b58ac09/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24847495f3558a50ce191cc8c70bc4b24b58ac09/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=24847495f3558a50ce191cc8c70bc4b24b58ac09", "patch": "@@ -8405,12 +8405,6 @@ check_literal_operator_args (const_tree decl,\n       bool found_string_p = false;\n       bool maybe_raw_p = false;\n       bool found_size_p = false;\n-      tree const_wchar_ptr_type_node\n-\t   = build_pointer_type (build_type_variant (wchar_type_node, 1, 0));\n-      tree const_char16_ptr_type_node\n-\t   = build_pointer_type (build_type_variant (char16_type_node, 1, 0));\n-      tree const_char32_ptr_type_node\n-\t   = build_pointer_type (build_type_variant (char32_type_node, 1, 0));\n \n       *long_long_unsigned_p = false;\n       *long_double_p = false;\n@@ -8423,17 +8417,26 @@ check_literal_operator_args (const_tree decl,\n \t  tree t = TREE_VALUE (argtype);\n \t  ++arity;\n \n-\t  if (same_type_p (t, const_string_type_node))\n+\t  if (TREE_CODE (t) == POINTER_TYPE)\n \t    {\n-\t      found_string_p = true;\n-\t      maybe_raw_p = true;\n+\t      t = TREE_TYPE (t);\n+\t      if (cp_type_quals (t) != TYPE_QUAL_CONST)\n+\t\treturn false;\n+\t      t = TYPE_MAIN_VARIANT (t);\n+\t      if (same_type_p (t, char_type_node))\n+\t\t{\n+\t\t  found_string_p = true;\n+\t\t  maybe_raw_p = true;\n+\t\t}\n+\t      else if (same_type_p (t, wchar_type_node))\n+\t\tfound_string_p = true;\n+\t      else if (same_type_p (t, char16_type_node))\n+\t\tfound_string_p = true;\n+\t      else if (same_type_p (t, char32_type_node))\n+\t\tfound_string_p = true;\n+\t      else\n+\t\treturn false;\n \t    }\n-\t  else if (same_type_p (t, const_wchar_ptr_type_node))\n-\t    found_string_p = true;\n-\t  else if (same_type_p (t, const_char16_ptr_type_node))\n-\t    found_string_p = true;\n-\t  else if (same_type_p (t, const_char32_ptr_type_node))\n-\t    found_string_p = true;\n \t  else if (same_type_p (t, size_type_node))\n \t    {\n \t      if (!found_string_p)"}]}