{"sha": "0bfba0434a2acaf270660cafc9a1536f17a5fd75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmYmEwNDM0YTJhY2FmMjcwNjYwY2FmYzlhMTUzNmYxN2E1ZmQ3NQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-05-21T19:30:25Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-05-21T19:30:25Z"}, "message": "* config/rs6000/predicates.md (update_indexed_address_mem): Delete.\n\nFrom-SVN: r210724", "tree": {"sha": "ca30b5242b1113a368cc0a5c509d96ca731457be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca30b5242b1113a368cc0a5c509d96ca731457be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bfba0434a2acaf270660cafc9a1536f17a5fd75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfba0434a2acaf270660cafc9a1536f17a5fd75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfba0434a2acaf270660cafc9a1536f17a5fd75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfba0434a2acaf270660cafc9a1536f17a5fd75/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1edb7356d55721eb4160580ff6f42a1ad1269ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edb7356d55721eb4160580ff6f42a1ad1269ced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1edb7356d55721eb4160580ff6f42a1ad1269ced"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "3a11ef5b6bb819d929e56228b7f340b37cbeca77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfba0434a2acaf270660cafc9a1536f17a5fd75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfba0434a2acaf270660cafc9a1536f17a5fd75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bfba0434a2acaf270660cafc9a1536f17a5fd75", "patch": "@@ -1,3 +1,7 @@\n+2014-05-21  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/predicates.md (update_indexed_address_mem): Delete.\n+\n 2014-05-21  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/61272"}, {"sha": "f538b422e8ec9153cb695a6b8a00bb87cbef778a", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfba0434a2acaf270660cafc9a1536f17a5fd75/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfba0434a2acaf270660cafc9a1536f17a5fd75/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=0bfba0434a2acaf270660cafc9a1536f17a5fd75", "patch": "@@ -743,14 +743,6 @@\n \t\t    || GET_CODE (XEXP (op, 0)) == PRE_DEC\n \t\t    || GET_CODE (XEXP (op, 0)) == PRE_MODIFY))\"))\n \n-;; Return 1 if the operand is a MEM with an update-indexed-form address. Note\n-;; that PRE_INC/PRE_DEC will always be non-indexed (i.e. non X-form) since the\n-;; increment is based on the mode size and will therefor always be a const.\n-(define_special_predicate \"update_indexed_address_mem\"\n-  (match_test \"(MEM_P (op)\n-\t\t&& GET_CODE (XEXP (op, 0)) == PRE_MODIFY\n-\t\t&& indexed_address (XEXP (XEXP (op, 0), 1), mode))\"))\n-\n ;; Return 1 if the operand is a MEM with an indexed-form address.\n (define_special_predicate \"indexed_address_mem\"\n   (match_test \"(MEM_P (op)"}]}