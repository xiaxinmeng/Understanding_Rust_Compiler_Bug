{"sha": "5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNlZmEwZDk1Yjc2ZDc5ZWZjNGYxZWE2M2E5NWZkMjRkYmQ0YTRhZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-09-29T18:16:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-09-29T18:16:34Z"}, "message": "re PR tree-optimization/17697 (ICE: Statement marked for throw, but doesn't - verify_stmts failed)\n\n        PR tree-optimization/17697\n        * decl.c (duplicate_decls): Copy TREE_NOTHROW from newdecl to olddecl.\n\nFrom-SVN: r88293", "tree": {"sha": "f1f413cda3b5d6ca787c0804f4ba3541869a70ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1f413cda3b5d6ca787c0804f4ba3541869a70ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d962e7adc0f3b990f7b986bb5443a9d1d2361789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d962e7adc0f3b990f7b986bb5443a9d1d2361789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d962e7adc0f3b990f7b986bb5443a9d1d2361789"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "4933e07af124a384d11462898486e77d720eb48f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af", "patch": "@@ -1,3 +1,8 @@\n+2004-09-29  Jason Merrill  <jason@redhat.com>\n+\n+\tPR tree-optimization/17697\n+\t* decl.c (duplicate_decls): Copy TREE_NOTHROW from newdecl to olddecl.\n+\n 2004-09-28  Jason Merrill  <jason@redhat.com>\n \n \tPR middle-end/17525"}, {"sha": "0b0546759bc217162ff2ac98abda7973bc38e81a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5cefa0d95b76d79efc4f1ea63a95fd24dbd4a4af", "patch": "@@ -1719,6 +1719,8 @@ duplicate_decls (tree newdecl, tree olddecl)\n \tTREE_READONLY (olddecl) = 1;\n       if (TREE_THIS_VOLATILE (newdecl))\n \tTREE_THIS_VOLATILE (olddecl) = 1;\n+      if (TREE_NOTHROW (newdecl))\n+\tTREE_NOTHROW (olddecl) = 1;\n \n       /* Merge the initialization information.  */\n       if (DECL_INITIAL (newdecl) == NULL_TREE\n@@ -5237,7 +5239,7 @@ expand_static_init (tree decl, tree init)\n   if (DECL_FUNCTION_SCOPE_P (decl))\n     {\n       /* Emit code to perform this initialization but once.  */\n-      tree if_stmt, inner_if_stmt = NULL_TREE;\n+      tree if_stmt = NULL_TREE, inner_if_stmt = NULL_TREE;\n       tree then_clause, inner_then_clause = NULL_TREE;\n       tree guard, guard_addr, guard_addr_list;\n       tree acquire_fn, release_fn, abort_fn;\n@@ -5277,10 +5279,16 @@ expand_static_init (tree decl, tree init)\n       /* Create the guard variable.  */\n       guard = get_guard (decl);\n \n-      /* Begin the conditional initialization.  */\n-      if_stmt = begin_if_stmt ();\n-      finish_if_stmt_cond (get_guard_cond (guard), if_stmt);\n-      then_clause = begin_compound_stmt (BCS_NO_SCOPE);\n+      /* This optimization isn't safe on targets which can reorder loads,\n+\t via speculative execution, caching behavior or whatever.  In that\n+\t case we force synchronization in __cxa_guard_acquire.  */\n+      if (!targetm.reorders_loads || !flag_threadsafe_statics)\n+\t{\n+\t  /* Begin the conditional initialization.  */\n+\t  if_stmt = begin_if_stmt ();\n+\t  finish_if_stmt_cond (get_guard_cond (guard), if_stmt);\n+\t  then_clause = begin_compound_stmt (BCS_NO_SCOPE);\n+\t}\n \n       if (flag_threadsafe_statics)\n \t{\n@@ -5343,9 +5351,12 @@ expand_static_init (tree decl, tree init)\n \t  finish_if_stmt (inner_if_stmt);\n \t}\n \n-      finish_compound_stmt (then_clause);\n-      finish_then_clause (if_stmt);\n-      finish_if_stmt (if_stmt);\n+      if (!targetm.reorders_loads || !flag_threadsafe_statics)\n+\t{\n+\t  finish_compound_stmt (then_clause);\n+\t  finish_then_clause (if_stmt);\n+\t  finish_if_stmt (if_stmt);\n+\t}\n     }\n   else\n     static_aggregates = tree_cons (init, decl, static_aggregates);"}]}