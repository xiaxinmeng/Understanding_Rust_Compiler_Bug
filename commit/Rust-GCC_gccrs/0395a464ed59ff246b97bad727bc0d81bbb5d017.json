{"sha": "0395a464ed59ff246b97bad727bc0d81bbb5d017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5NWE0NjRlZDU5ZmYyNDZiOTdiYWQ3MjdiYzBkODFiYmI1ZDAxNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-06-29T21:44:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-06-29T21:44:11Z"}, "message": "* constexpr.c, error.c, tree.c: Remove WITH_CLEANUP_EXPR handling.\n\nFrom-SVN: r249818", "tree": {"sha": "2526edc8a5a07d65ca0cabf5a8ad2df2f7deb397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2526edc8a5a07d65ca0cabf5a8ad2df2f7deb397"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0395a464ed59ff246b97bad727bc0d81bbb5d017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0395a464ed59ff246b97bad727bc0d81bbb5d017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0395a464ed59ff246b97bad727bc0d81bbb5d017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0395a464ed59ff246b97bad727bc0d81bbb5d017/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47304c6a0b365ca21d95be5e532e8d5925ed04f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47304c6a0b365ca21d95be5e532e8d5925ed04f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47304c6a0b365ca21d95be5e532e8d5925ed04f3"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "2117eb6f5a1c4897803642489ae0d073175d708d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0395a464ed59ff246b97bad727bc0d81bbb5d017", "patch": "@@ -1,5 +1,7 @@\n 2017-06-29  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c, error.c, tree.c: Remove WITH_CLEANUP_EXPR handling.\n+\n \tPR c++/81180 - ICE with C++17 deduction of member class template.\n \t* pt.c (build_deduction_guide): Correct member template handling.\n "}, {"sha": "32180a74c3fd3cb974193f96b31bdc4b13c7f692", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=0395a464ed59ff246b97bad727bc0d81bbb5d017", "patch": "@@ -4519,7 +4519,6 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n       /* GCC internal stuff.  */\n     case VA_ARG_EXPR:\n     case OBJ_TYPE_REF:\n-    case WITH_CLEANUP_EXPR:\n     case NON_DEPENDENT_EXPR:\n     case BASELINK:\n     case OFFSET_REF:\n@@ -5533,7 +5532,6 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict,\n     case BIND_EXPR:\n       return RECUR (BIND_EXPR_BODY (t), want_rval);\n \n-    case WITH_CLEANUP_EXPR:\n     case CLEANUP_POINT_EXPR:\n     case MUST_NOT_THROW_EXPR:\n     case TRY_CATCH_EXPR:"}, {"sha": "43b5cec0a95f17f829256cf280b8bb2e3cb2aed3", "filename": "gcc/cp/error.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=0395a464ed59ff246b97bad727bc0d81bbb5d017", "patch": "@@ -2664,7 +2664,6 @@ dump_expr (cxx_pretty_printer *pp, tree t, int flags)\n       break;\n \n     case TRY_CATCH_EXPR:\n-    case WITH_CLEANUP_EXPR:\n     case CLEANUP_POINT_EXPR:\n       dump_expr (pp, TREE_OPERAND (t, 0), flags);\n       break;"}, {"sha": "c037b2c744000c9306b445540a2f384b3b345eb5", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0395a464ed59ff246b97bad727bc0d81bbb5d017/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=0395a464ed59ff246b97bad727bc0d81bbb5d017", "patch": "@@ -90,7 +90,6 @@ lvalue_kind (const_tree ref)\n     case PREINCREMENT_EXPR:\n     case PREDECREMENT_EXPR:\n     case TRY_CATCH_EXPR:\n-    case WITH_CLEANUP_EXPR:\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n       return lvalue_kind (TREE_OPERAND (ref, 0));\n@@ -3584,11 +3583,6 @@ cp_tree_equal (tree t1, tree t2)\n \treturn cp_tree_equal (TREE_OPERAND (t1, 1), TREE_OPERAND (t2, 1));\n       }\n \n-    case WITH_CLEANUP_EXPR:\n-      if (!cp_tree_equal (TREE_OPERAND (t1, 0), TREE_OPERAND (t2, 0)))\n-\treturn false;\n-      return cp_tree_equal (TREE_OPERAND (t1, 1), TREE_OPERAND (t1, 1));\n-\n     case PARM_DECL:\n       /* For comparing uses of parameters in late-specified return types\n \t with an out-of-class definition of the function, but can also come"}]}