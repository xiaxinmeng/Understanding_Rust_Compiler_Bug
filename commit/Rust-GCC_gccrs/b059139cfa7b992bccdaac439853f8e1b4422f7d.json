{"sha": "b059139cfa7b992bccdaac439853f8e1b4422f7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA1OTEzOWNmYTdiOTkyYmNjZGFhYzQzOTg1M2Y4ZTFiNDQyMmY3ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-20T12:27:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-20T12:27:33Z"}, "message": "Revert to 1.140.\n\nFrom-SVN: r11856", "tree": {"sha": "bac69de7cee88a90bbb54664227f3f8e81fc9f68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac69de7cee88a90bbb54664227f3f8e81fc9f68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b059139cfa7b992bccdaac439853f8e1b4422f7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b059139cfa7b992bccdaac439853f8e1b4422f7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b059139cfa7b992bccdaac439853f8e1b4422f7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b059139cfa7b992bccdaac439853f8e1b4422f7d/comments", "author": null, "committer": null, "parents": [{"sha": "48cda10ef65e669e9e781ac0965694eae9e51ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48cda10ef65e669e9e781ac0965694eae9e51ed2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48cda10ef65e669e9e781ac0965694eae9e51ed2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cf37bb7888ddaf0478e22636a40a644e0b1cdbaa", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b059139cfa7b992bccdaac439853f8e1b4422f7d/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b059139cfa7b992bccdaac439853f8e1b4422f7d/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=b059139cfa7b992bccdaac439853f8e1b4422f7d", "patch": "@@ -4871,10 +4871,6 @@ expand_end_case (orig_index)\n   /* An ERROR_MARK occurs for various reasons including invalid data type.  */\n   if (index_type != error_mark_node)\n     {\n-      if (thiscase->data.case_stmt.case_list)\n-\tthiscase->data.case_stmt.case_list\n-\t  = case_tree2list (thiscase->data.case_stmt.case_list, 0);\n-\n       /* If switch expression was an enumerated type, check that all\n \t enumeration literals are covered by the cases.\n \t No sense trying this if there's a default case, however.  */\n@@ -4912,6 +4908,10 @@ expand_end_case (orig_index)\n \n       before_case = get_last_insn ();\n \n+      if (thiscase->data.case_stmt.case_list)\n+\tthiscase->data.case_stmt.case_list\n+\t  = case_tree2list(thiscase->data.case_stmt.case_list, 0);\n+\n       /* Simplify the case-list before we count it.  */\n       group_case_nodes (thiscase->data.case_stmt.case_list);\n "}]}